void WeatherConditionBackgroundConfig.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_62();
  v2 = v1;
  v5 = *(_BYTE *)(v0 + 8);
  OUTLINED_FUNCTION_9_64(&v7, (const void *)(v0 + 1656));
  v6 = *(_QWORD **)(v0 + 2312);
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_25_55();
  sub_1B0009034();
  sub_1AFDF038C(v2, v5);
  sub_1B0009034();
  sub_1B0009010();
  sub_1AFBEE72C();
  sub_1AFBEE72C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B000901C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009010();
  sub_1B0009010();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009010();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B000901C();
  sub_1B0009010();
  sub_1AFBEE72C();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_40();
  sub_1B0009010();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B000901C();
  sub_1B0009010();
  sub_1AFBEE72C();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_40();
  sub_1B0009010();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B000901C();
  sub_1B0009010();
  sub_1AFBEE72C();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_40();
  sub_1B0009010();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B000901C();
  sub_1B0009010();
  sub_1AFBEE72C();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_40();
  sub_1B0009010();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B000901C();
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_40();
  sub_1B0009010();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  sub_1B000901C();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1B0009010();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE350();
  sub_1B000901C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  sub_1B0009028();
  sub_1AFBEE76C();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE350();
  sub_1B0009028();
  sub_1B000901C();
  WeatherConditionBackgroundConfig.Layers.hash(into:)();
  WeatherConditionBackgroundConfig.LightningConfig.hash(into:)();
  HazeEffect.hash(into:)();
  SkyGradientTableType.rawValue.getter();
  OUTLINED_FUNCTION_89_5();
  swift_bridgeObjectRelease();
  sub_1AFBEE72C();
  sub_1B0009028();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE72C();
  sub_1B000901C();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1B0009010();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE350();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE76C();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1B0009010();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE76C();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE350();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE350();
  sub_1AFBEE350();
  sub_1AFBEE350();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE76C();
  sub_1AFBEE76C();
  OUTLINED_FUNCTION_15_15();
  sub_1B0009010();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE72C();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE76C();
  sub_1B0009010();
  sub_1B0009010();
  sub_1B0009010();
  sub_1B0009010();
  sub_1B0009010();
  sub_1AFC6276C(v2, v6);
  OUTLINED_FUNCTION_49_0();
  sub_1AFC6276C(v3, v4);
}

uint64_t sub_1AFDFB4C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  BOOL v41;
  BOOL v42;
  BOOL v43;
  BOOL v44;
  BOOL v45;
  BOOL v46;
  BOOL v47;
  BOOL v48;
  BOOL v49;
  BOOL v50;
  BOOL v51;
  BOOL v52;
  BOOL v53;
  BOOL v54;
  BOOL v55;
  BOOL v56;
  BOOL v57;
  BOOL v58;
  BOOL v59;
  BOOL v60;
  BOOL v61;
  BOOL v62;
  BOOL v63;
  BOOL v64;
  BOOL v65;
  BOOL v66;
  BOOL v67;
  BOOL v68;
  BOOL v69;
  BOOL v70;
  BOOL v71;
  BOOL v72;
  BOOL v73;
  BOOL v74;
  BOOL v75;
  BOOL v76;
  BOOL v77;
  BOOL v78;
  BOOL v79;
  BOOL v80;
  BOOL v81;
  BOOL v82;
  char v83;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6953746567726174 && a2 == 0xEF7373616C43657ALL;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x636146656C616373 && a2 == 0xEB00000000726F74;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005F2B0 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6F506172656D6163 && a2 == 0xEE006E6F69746973;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005F2D0 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005ECA0 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001B005F2F0 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005F310 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005EC80 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          v9 = a1 == 0x746E496D6F6F6C62 && a2 == 0xEE00797469736E65;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F330 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E550 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E530 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else
          {
            v10 = a1 == 0x6566694C6E696172 && a2 == 0xE800000000000000;
            if (v10 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E990 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E9B0 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005F350 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E950 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E930 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else
            {
              v11 = a1 == 0x705347466E696172 && a2 == 0xEC00000064616572;
              if (v11 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 20;
              }
              else if (a1 == 0xD000000000000019 && a2 == 0x80000001B005E910 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 21;
              }
              else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E8F0 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 22;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E8B0 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 23;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E8D0 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 24;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005F370 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 25;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E870 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 26;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E850 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 27;
              }
              else
              {
                v12 = a1 == 0x705347426E696172 && a2 == 0xEC00000064616572;
                if (v12 || (sub_1B0008FB0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 28;
                }
                else if (a1 == 0xD000000000000019 && a2 == 0x80000001B005E830 || (sub_1B0008FB0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 29;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E810 || (sub_1B0008FB0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 30;
                }
                else
                {
                  v13 = a1 == 0x6566694C776F6E73 && a2 == 0xE800000000000000;
                  if (v13 || (sub_1B0008FB0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 31;
                  }
                  else
                  {
                    v14 = a1 == 0x70534742776F6E73 && a2 == 0xEC00000064616572;
                    if (v14 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 32;
                    }
                    else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E7D0 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 33;
                    }
                    else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E7F0 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 34;
                    }
                    else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005F390 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 35;
                    }
                    else if (a1 == 0xD000000000000019 && a2 == 0x80000001B005E790 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 36;
                    }
                    else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E770 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 37;
                    }
                    else
                    {
                      v15 = a1 == 0x70534746776F6E73 && a2 == 0xEC00000064616572;
                      if (v15 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 38;
                      }
                      else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E750 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 39;
                      }
                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E730 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 40;
                      }
                      else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E6F0 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 41;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E710 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 42;
                      }
                      else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005F3B0 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 43;
                      }
                      else if (a1 == 0xD000000000000019 && a2 == 0x80000001B005E6B0 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 44;
                      }
                      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E690 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 45;
                      }
                      else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E670 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 46;
                      }
                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E650 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 47;
                      }
                      else
                      {
                        v16 = a1 == 0x46776F6E53657375 && a2 == 0xEB00000000747361;
                        if (v16 || (sub_1B0008FB0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 48;
                        }
                        else
                        {
                          v17 = a1 == 0x6361704F72617473 && a2 == 0xEB00000000797469;
                          if (v17 || (sub_1B0008FB0() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 49;
                          }
                          else
                          {
                            v18 = a1 == 0x6565705372617473 && a2 == 0xE900000000000064;
                            if (v18 || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 50;
                            }
                            else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005E630
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 51;
                            }
                            else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E610
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 52;
                            }
                            else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E5F0
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 53;
                            }
                            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E5D0
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 54;
                            }
                            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005E570
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 55;
                            }
                            else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DAC0
                                   || (sub_1B0008FB0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 56;
                            }
                            else
                            {
                              v19 = a1 == 0x6566694C6C696168 && a2 == 0xE800000000000000;
                              if (v19 || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 57;
                              }
                              else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005E3D0
                                     || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 58;
                              }
                              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E3B0
                                     || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 59;
                              }
                              else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F3D0
                                     || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 60;
                              }
                              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005F3F0
                                     || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 61;
                              }
                              else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005F410
                                     || (sub_1B0008FB0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 62;
                              }
                              else
                              {
                                v20 = a1 == 0x66694C7465656C73 && a2 == 0xE900000000000065;
                                if (v20 || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 63;
                                }
                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E390
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 64;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E370
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 65;
                                }
                                else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005F430
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 66;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E330
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 67;
                                }
                                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E310
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 68;
                                }
                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E2F0
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 69;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E2D0
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 70;
                                }
                                else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005F450
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 71;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005E290
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 72;
                                }
                                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E270
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 73;
                                }
                                else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E250
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 74;
                                }
                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E230
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 75;
                                }
                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E210
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 76;
                                }
                                else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E1F0
                                       || (sub_1B0008FB0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 77;
                                }
                                else
                                {
                                  v21 = a1 == 0x6E615258646E6977 && a2 == 0xEA00000000006567;
                                  if (v21 || (sub_1B0008FB0() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 78;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x6E615259646E6977 && a2 == 0xEA00000000006567;
                                    if (v22 || (sub_1B0008FB0() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 79;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x657A6953646E6977 && a2 == 0xE800000000000000;
                                      if (v23 || (sub_1B0008FB0() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 80;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x47424264756F6C63 && a2 == 0xED0000726F6C6F43;
                                        if (v24 || (sub_1B0008FB0() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 81;
                                        }
                                        else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E130
                                               || (sub_1B0008FB0() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 82;
                                        }
                                        else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005E110
                                               || (sub_1B0008FB0() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 83;
                                        }
                                        else
                                        {
                                          v25 = a1 == 0x47424264756F6C63 && a2 == 0xED0000656C616353;
                                          if (v25 || (sub_1B0008FB0() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 84;
                                          }
                                          else
                                          {
                                            v26 = a1 == 0x47424264756F6C63 && a2 == 0xEF5974657366664FLL;
                                            if (v26 || (sub_1B0008FB0() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 85;
                                            }
                                            else
                                            {
                                              v27 = a1 == 0x47424264756F6C63 && a2 == 0xEF5A74657366664FLL;
                                              if (v27 || (sub_1B0008FB0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 86;
                                              }
                                              else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E0F0
                                                     || (sub_1B0008FB0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 87;
                                              }
                                              else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E0D0
                                                     || (sub_1B0008FB0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 88;
                                              }
                                              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E0B0
                                                     || (sub_1B0008FB0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 89;
                                              }
                                              else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F470
                                                     || (sub_1B0008FB0() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 90;
                                              }
                                              else
                                              {
                                                v28 = a1 == 0x43474264756F6C63 && a2 == 0xEC000000726F6C6FLL;
                                                if (v28 || (sub_1B0008FB0() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 91;
                                                }
                                                else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005E090
                                                       || (sub_1B0008FB0() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 92;
                                                }
                                                else
                                                {
                                                  v29 = a1 == 0x56474264756F6C63 && a2 == 0xEF797469636F6C65;
                                                  if (v29 || (sub_1B0008FB0() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 93;
                                                  }
                                                  else
                                                  {
                                                    v30 = a1 == 0x53474264756F6C63 && a2 == 0xEC000000656C6163;
                                                    if (v30 || (sub_1B0008FB0() & 1) != 0)
                                                    {
                                                      swift_bridgeObjectRelease();
                                                      return 94;
                                                    }
                                                    else
                                                    {
                                                      v31 = a1 == 0x4F474264756F6C63 && a2 == 0xEE00597465736666;
                                                      if (v31 || (sub_1B0008FB0() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 95;
                                                      }
                                                      else
                                                      {
                                                        v32 = a1 == 0x4F474264756F6C63 && a2 == 0xEE005A7465736666;
                                                        if (v32 || (sub_1B0008FB0() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 96;
                                                        }
                                                        else if (a1 == 0xD000000000000012
                                                               && a2 == 0x80000001B005E070
                                                               || (sub_1B0008FB0() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 97;
                                                        }
                                                        else if (a1 == 0xD000000000000014
                                                               && a2 == 0x80000001B005E050
                                                               || (sub_1B0008FB0() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 98;
                                                        }
                                                        else if (a1 == 0xD000000000000013
                                                               && a2 == 0x80000001B005E030
                                                               || (sub_1B0008FB0() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 99;
                                                        }
                                                        else if (a1 == 0xD000000000000010
                                                               && a2 == 0x80000001B005F490
                                                               || (sub_1B0008FB0() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 100;
                                                        }
                                                        else
                                                        {
                                                          v33 = a1 == 0x43474664756F6C63 && a2 == 0xEC000000726F6C6FLL;
                                                          if (v33 || (sub_1B0008FB0() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 101;
                                                          }
                                                          else if (a1 == 0xD000000000000011
                                                                 && a2 == 0x80000001B005E010
                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 102;
                                                          }
                                                          else
                                                          {
                                                            v34 = a1 == 0x56474664756F6C63
                                                               && a2 == 0xEF797469636F6C65;
                                                            if (v34 || (sub_1B0008FB0() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 103;
                                                            }
                                                            else
                                                            {
                                                              v35 = a1 == 0x53474664756F6C63
                                                                 && a2 == 0xEC000000656C6163;
                                                              if (v35 || (sub_1B0008FB0() & 1) != 0)
                                                              {
                                                                swift_bridgeObjectRelease();
                                                                return 104;
                                                              }
                                                              else
                                                              {
                                                                v36 = a1 == 0x4F474664756F6C63
                                                                   && a2 == 0xEE00597465736666;
                                                                if (v36 || (sub_1B0008FB0() & 1) != 0)
                                                                {
                                                                  swift_bridgeObjectRelease();
                                                                  return 105;
                                                                }
                                                                else
                                                                {
                                                                  v37 = a1 == 0x4F474664756F6C63
                                                                     && a2 == 0xEE005A7465736666;
                                                                  if (v37 || (sub_1B0008FB0() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 106;
                                                                  }
                                                                  else if (a1 == 0xD000000000000012
                                                                         && a2 == 0x80000001B005DFF0
                                                                         || (sub_1B0008FB0() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 107;
                                                                  }
                                                                  else if (a1 == 0xD000000000000014
                                                                         && a2 == 0x80000001B005DFD0
                                                                         || (sub_1B0008FB0() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 108;
                                                                  }
                                                                  else if (a1 == 0xD000000000000013
                                                                         && a2 == 0x80000001B005DFB0
                                                                         || (sub_1B0008FB0() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 109;
                                                                  }
                                                                  else if (a1 == 0xD000000000000010
                                                                         && a2 == 0x80000001B005F4B0
                                                                         || (sub_1B0008FB0() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 110;
                                                                  }
                                                                  else
                                                                  {
                                                                    v38 = a1 == 0x47464664756F6C63
                                                                       && a2 == 0xED0000726F6C6F43;
                                                                    if (v38 || (sub_1B0008FB0() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 111;
                                                                    }
                                                                    else if (a1 == 0xD000000000000012
                                                                           && a2 == 0x80000001B005DF90
                                                                           || (sub_1B0008FB0() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 112;
                                                                    }
                                                                    else if (a1 == 0xD000000000000010
                                                                           && a2 == 0x80000001B005DF70
                                                                           || (sub_1B0008FB0() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 113;
                                                                    }
                                                                    else
                                                                    {
                                                                      v39 = a1 == 0x47464664756F6C63
                                                                         && a2 == 0xED0000656C616353;
                                                                      if (v39 || (sub_1B0008FB0() & 1) != 0)
                                                                      {
                                                                        swift_bridgeObjectRelease();
                                                                        return 114;
                                                                      }
                                                                      else
                                                                      {
                                                                        v40 = a1 == 0x47464664756F6C63
                                                                           && a2 == 0xEF5974657366664FLL;
                                                                        if (v40 || (sub_1B0008FB0() & 1) != 0)
                                                                        {
                                                                          swift_bridgeObjectRelease();
                                                                          return 115;
                                                                        }
                                                                        else
                                                                        {
                                                                          v41 = a1 == 0x47464664756F6C63
                                                                             && a2 == 0xEF5A74657366664FLL;
                                                                          if (v41 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 116;
                                                                          }
                                                                          else if (a1 == 0xD000000000000013
                                                                                 && a2 == 0x80000001B005DF50
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 117;
                                                                          }
                                                                          else if (a1 == 0xD000000000000015
                                                                                 && a2 == 0x80000001B005DF30
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 118;
                                                                          }
                                                                          else if (a1 == 0xD000000000000014
                                                                                 && a2 == 0x80000001B005DF10
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 119;
                                                                          }
                                                                          else if (a1 == 0xD000000000000011
                                                                                 && a2 == 0x80000001B005F4D0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 120;
                                                                          }
                                                                          else if (a1 == 0xD000000000000011
                                                                                 && a2 == 0x80000001B005DEF0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 121;
                                                                          }
                                                                          else if (a1 == 0xD000000000000016
                                                                                 && a2 == 0x80000001B005DED0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 122;
                                                                          }
                                                                          else if (a1 == 0xD000000000000014
                                                                                 && a2 == 0x80000001B005DEB0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 123;
                                                                          }
                                                                          else if (a1 == 0xD000000000000011
                                                                                 && a2 == 0x80000001B005DE90
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 124;
                                                                          }
                                                                          else if (a1 == 0xD000000000000013
                                                                                 && a2 == 0x80000001B005DE70
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 125;
                                                                          }
                                                                          else if (a1 == 0xD000000000000013
                                                                                 && a2 == 0x80000001B005DE50
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 126;
                                                                          }
                                                                          else if (a1 == 0xD000000000000017
                                                                                 && a2 == 0x80000001B005DE30
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 127;
                                                                          }
                                                                          else if (a1 == 0xD000000000000015
                                                                                 && a2 == 0x80000001B005F4F0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 128;
                                                                          }
                                                                          else if (a1 == 0xD000000000000022
                                                                                 && a2 == 0x80000001B005F510
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 129;
                                                                          }
                                                                          else if (a1 == 0xD000000000000017
                                                                                 && a2 == 0x80000001B005DE10
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 130;
                                                                          }
                                                                          else if (a1 == 0xD000000000000023
                                                                                 && a2 == 0x80000001B005DDE0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 131;
                                                                          }
                                                                          else if (a1 == 0xD000000000000020
                                                                                 && a2 == 0x80000001B005DDB0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 132;
                                                                          }
                                                                          else if (a1 == 0xD000000000000019
                                                                                 && a2 == 0x80000001B005DD90
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 133;
                                                                          }
                                                                          else if (a1 == 0xD000000000000023
                                                                                 && a2 == 0x80000001B005DD60
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 134;
                                                                          }
                                                                          else if (a1 == 0xD000000000000021
                                                                                 && a2 == 0x80000001B005DD30
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 135;
                                                                          }
                                                                          else if (a1 == 0xD000000000000026
                                                                                 && a2 == 0x80000001B005DD00
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 136;
                                                                          }
                                                                          else if (a1 == 0xD000000000000022
                                                                                 && a2 == 0x80000001B005DCD0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 137;
                                                                          }
                                                                          else if (a1 == 0xD000000000000017
                                                                                 && a2 == 0x80000001B005DCB0
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 138;
                                                                          }
                                                                          else if (a1 == 0xD000000000000020
                                                                                 && a2 == 0x80000001B005DC80
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 139;
                                                                          }
                                                                          else if (a1 == 0xD000000000000018
                                                                                 && a2 == 0x80000001B005DC60
                                                                                 || (sub_1B0008FB0() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 140;
                                                                          }
                                                                          else
                                                                          {
                                                                            v42 = a1 == 0x6C6946746867696CLL
                                                                               && a2 == 0xEE00726F6C6F436CLL;
                                                                            if (v42 || (sub_1B0008FB0() & 1) != 0)
                                                                            {
                                                                              swift_bridgeObjectRelease();
                                                                              return 141;
                                                                            }
                                                                            else
                                                                            {
                                                                              v43 = a1 == 0x6E7553746867696CLL
                                                                                 && a2 == 0xED0000726F6C6F43;
                                                                              if (v43 || (sub_1B0008FB0() & 1) != 0)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 142;
                                                                              }
                                                                              else if (a1 == 0xD000000000000011
                                                                                     && a2 == 0x80000001B005E510
                                                                                     || (sub_1B0008FB0() & 1) != 0)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 143;
                                                                              }
                                                                              else if (a1 == 0xD000000000000013
                                                                                     && a2 == 0x80000001B005F540
                                                                                     || (sub_1B0008FB0() & 1) != 0)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 144;
                                                                              }
                                                                              else if (a1 == 0xD000000000000019
                                                                                     && a2 == 0x80000001B005F560
                                                                                     || (sub_1B0008FB0() & 1) != 0)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 145;
                                                                              }
                                                                              else
                                                                              {
                                                                                v44 = a1 == 0x6C616353656D6974
                                                                                   && a2 == 0xE900000000000065;
                                                                                if (v44 || (sub_1B0008FB0() & 1) != 0)
                                                                                {
                                                                                  swift_bridgeObjectRelease();
                                                                                  return 146;
                                                                                }
                                                                                else
                                                                                {
                                                                                  v45 = a1 == 0x76656C456E6F6F6DLL
                                                                                     && a2 == 0xED00006E6F697461;
                                                                                  if (v45 || (sub_1B0008FB0() & 1) != 0)
                                                                                  {
                                                                                    swift_bridgeObjectRelease();
                                                                                    return 147;
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    v46 = a1 == 0x657369526E6F6F6DLL
                                                                                       && a2 == 0xED00007465536F54;
                                                                                    if (v46
                                                                                      || (sub_1B0008FB0() & 1) != 0)
                                                                                    {
                                                                                      swift_bridgeObjectRelease();
                                                                                      return 148;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v47 = a1 == 0x6C676E416E6F6F6DLL
                                                                                         && a2 == 0xE900000000000065;
                                                                                      if (v47
                                                                                        || (sub_1B0008FB0() & 1) != 0)
                                                                                      {
                                                                                        swift_bridgeObjectRelease();
                                                                                        return 149;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        v48 = a1 == 0x6C6163536E6F6F6DLL
                                                                                           && a2 == 0xEE0065676E615265;
                                                                                        if (v48
                                                                                          || (sub_1B0008FB0() & 1) != 0)
                                                                                        {
                                                                                          swift_bridgeObjectRelease();
                                                                                          return 150;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          v49 = a1 == 0x6F6C6F436E6F6F6DLL
                                                                                             && a2 == 0xE900000000000072;
                                                                                          if (v49
                                                                                            || (sub_1B0008FB0() & 1) != 0)
                                                                                          {
                                                                                            swift_bridgeObjectRelease();
                                                                                            return 151;
                                                                                          }
                                                                                          else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E9F0 || (sub_1B0008FB0() & 1) != 0)
                                                                                          {
                                                                                            swift_bridgeObjectRelease();
                                                                                            return 152;
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            v50 = a1 == 0x6867694C6E6F6F6DLL
                                                                                               && a2 == 0xEF73756964615274;
                                                                                            if (v50
                                                                                              || (sub_1B0008FB0() & 1) != 0)
                                                                                            {
                                                                                              swift_bridgeObjectRelease();
                                                                                              return 153;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              v51 = a1 == 0x736168506E6F6F6DLL && a2 == 0xEE00656C676E4165;
                                                                                              if (v51
                                                                                                || (sub_1B0008FB0() & 1) != 0)
                                                                                              {
                                                                                                swift_bridgeObjectRelease();
                                                                                                return 154;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                v52 = a1 == 0x67616D496E6F6F6DLL && a2 == 0xED0000656D614E65;
                                                                                                if (v52 || (sub_1B0008FB0() & 1) != 0)
                                                                                                {
                                                                                                  swift_bridgeObjectRelease();
                                                                                                  return 155;
                                                                                                }
                                                                                                else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E9D0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                {
                                                                                                  swift_bridgeObjectRelease();
                                                                                                  return 156;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  v53 = a1 == 0x6867694C6E6F6F6DLL && a2 == 0xEE00726F6C6F4374;
                                                                                                  if (v53 || (sub_1B0008FB0() & 1) != 0)
                                                                                                  {
                                                                                                    swift_bridgeObjectRelease();
                                                                                                    return 157;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    v54 = a1 == 0x66694C6573696F6ELL && a2 == 0xE900000000000065;
                                                                                                    if (v54 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 158;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E470 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 159;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E450 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 160;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005F580 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 161;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E430 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 162;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E410 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 163;
                                                                                                    }
                                                                                                    else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E3F0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 164;
                                                                                                    }
                                                                                                    else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001B005F5A0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                    {
                                                                                                      swift_bridgeObjectRelease();
                                                                                                      return 165;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      v55 = a1 == 0x7261504433657375 && a2 == 0xED000078616C6C61;
                                                                                                      if (v55 || (sub_1B0008FB0() & 1) != 0)
                                                                                                      {
                                                                                                        swift_bridgeObjectRelease();
                                                                                                        return 166;
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        v56 = a1 == 0x73726579616CLL && a2 == 0xE600000000000000;
                                                                                                        if (v56 || (sub_1B0008FB0() & 1) != 0)
                                                                                                        {
                                                                                                          swift_bridgeObjectRelease();
                                                                                                          return 167;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          v57 = a1 == 0x6E696E746867696CLL && a2 == 0xEF6769666E6F4367;
                                                                                                          if (v57 || (sub_1B0008FB0() & 1) != 0)
                                                                                                          {
                                                                                                            swift_bridgeObjectRelease();
                                                                                                            return 168;
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            v58 = a1 == 0x65666645657A6168 && a2 == 0xEA00000000007463;
                                                                                                            if (v58 || (sub_1B0008FB0() & 1) != 0)
                                                                                                            {
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              return 169;
                                                                                                            }
                                                                                                            else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F5C0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                            {
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              return 170;
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              v59 = a1 == 0x656C676E416E7573 && a2 == 0xE800000000000000;
                                                                                                              if (v59 || (sub_1B0008FB0() & 1) != 0)
                                                                                                              {
                                                                                                                swift_bridgeObjectRelease();
                                                                                                                return 171;
                                                                                                              }
                                                                                                              else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005F5E0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                              {
                                                                                                                swift_bridgeObjectRelease();
                                                                                                                return 172;
                                                                                                              }
                                                                                                              else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F600 || (sub_1B0008FB0() & 1) != 0)
                                                                                                              {
                                                                                                                swift_bridgeObjectRelease();
                                                                                                                return 173;
                                                                                                              }
                                                                                                              else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F620 || (sub_1B0008FB0() & 1) != 0)
                                                                                                              {
                                                                                                                swift_bridgeObjectRelease();
                                                                                                                return 174;
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                v60 = a1 == 0x6E417961526E7573 && a2 == 0xEB00000000656C67;
                                                                                                                if (v60 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 175;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E490 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 176;
                                                                                                                }
                                                                                                                else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B005F640 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 177;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005DB00 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 178;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DC40 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 179;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B0052210 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 180;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B0052230 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 181;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005DC20 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 182;
                                                                                                                }
                                                                                                                else if (a1 == 0xD000000000000018 && a2 == 0x80000001B005DC00 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                {
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  return 183;
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  v61 = a1 == 0x4C736972496E7573 && a2 == 0xED00006874676E65;
                                                                                                                  if (v61 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                  {
                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                    return 184;
                                                                                                                  }
                                                                                                                  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B00521F0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                  {
                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                    return 185;
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    v62 = a1 == 0x4F736972496E7573 && a2 == 0xEE00797469636170;
                                                                                                                    if (v62 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                    {
                                                                                                                      swift_bridgeObjectRelease();
                                                                                                                      return 186;
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      v63 = a1 == 0x53736972496E7573 && a2 == 0xEB00000000657A69;
                                                                                                                      if (v63 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 187;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DBE0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 188;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DBC0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 189;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DBA0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 190;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001B005DB80 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 191;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001B005DB60 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 192;
                                                                                                                      }
                                                                                                                      else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DB40 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                      {
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        return 193;
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        v64 = a1 == 0x53737961526E7573 && a2 == 0xED00006461657270;
                                                                                                                        if (v64 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                        {
                                                                                                                          swift_bridgeObjectRelease();
                                                                                                                          return 194;
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          v65 = a1 == 0x43737961526E7573 && a2 == 0xEC000000726F6C6FLL;
                                                                                                                          if (v65 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                          {
                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                            return 195;
                                                                                                                          }
                                                                                                                          else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DB20 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                          {
                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                            return 196;
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            v66 = a1 == 0x4C737961526E7573 && a2 == 0xED00006874676E65;
                                                                                                                            if (v66 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                            {
                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                              return 197;
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              v67 = a1 == 0x626E6961526E7573 && a2 == 0xEF656C616353776FLL;
                                                                                                                              if (v67 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                              {
                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                return 198;
                                                                                                                              }
                                                                                                                              else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005DAE0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                              {
                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                return 199;
                                                                                                                              }
                                                                                                                              else if (a1 == 0xD000000000000018 && a2 == 0x80000001B00521D0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                              {
                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                return 200;
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                v68 = a1 == 0x53676E69776F6C62 && a2 == 0xEC00000064656570;
                                                                                                                                if (v68 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                {
                                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                                  return 201;
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  v69 = a1 == 0x41676E69776F6C62 && a2 == 0xED0000746E756F6DLL;
                                                                                                                                  if (v69 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                  {
                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                    return 202;
                                                                                                                                  }
                                                                                                                                  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005E5B0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                  {
                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                    return 203;
                                                                                                                                  }
                                                                                                                                  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005E590 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                  {
                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                    return 204;
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    v70 = a1 == 0x657A695372617473 && a2 == 0xE800000000000000;
                                                                                                                                    if (v70 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                    {
                                                                                                                                      swift_bridgeObjectRelease();
                                                                                                                                      return 205;
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      v71 = a1 == 0x6769724272617473 && a2 == 0xEE00657A69537468;
                                                                                                                                      if (v71 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 206;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DAA0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 207;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DA80 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 208;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DA60 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 209;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DA40 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 210;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DA20 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 211;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005DA00 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 212;
                                                                                                                                      }
                                                                                                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005D9E0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        return 213;
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        v72 = a1 == 0x6F6973696C6C6F63 && a2 == 0xED0000657A69536ELL;
                                                                                                                                        if (v72 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                        {
                                                                                                                                          swift_bridgeObjectRelease();
                                                                                                                                          return 214;
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          v73 = a1 == 0x6F6973696C6C6F63 && a2 == 0xED00006566694C6ELL;
                                                                                                                                          if (v73 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 215;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005D9C0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 216;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005D9A0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 217;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD000000000000019 && a2 == 0x80000001B005D980 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 218;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005D960 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 219;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B005F660 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 220;
                                                                                                                                          }
                                                                                                                                          else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005E1D0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            return 221;
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            v74 = a1 == 0x655665676E697266 && a2 == 0xEE00797469636F6CLL;
                                                                                                                                            if (v74 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                            {
                                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                                              return 222;
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              v75 = a1 == 0x635365676E697266 && a2 == 0xEB00000000656C61;
                                                                                                                                              if (v75 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                              {
                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                return 223;
                                                                                                                                              }
                                                                                                                                              else if (a1 == 0xD000000000000012 && a2 == 0x80000001B005E1B0 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                              {
                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                return 224;
                                                                                                                                              }
                                                                                                                                              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E190 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                              {
                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                return 225;
                                                                                                                                              }
                                                                                                                                              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005E170 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                              {
                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                return 226;
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                v76 = a1 == 0x664F65676E697266 && a2 == 0xED00005974657366;
                                                                                                                                                if (v76 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                {
                                                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                                                  return 227;
                                                                                                                                                }
                                                                                                                                                else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005E150 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                {
                                                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                                                  return 228;
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  v77 = a1 == 0x6F4365676E697266 && a2 == 0xEB00000000726F6CLL;
                                                                                                                                                  if (v77 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                  {
                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                    return 229;
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    v78 = a1 == 0x53736972496E7573 && a2 == 0xEB00000000646565;
                                                                                                                                                    if (v78 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                    {
                                                                                                                                                      swift_bridgeObjectRelease();
                                                                                                                                                      return 230;
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      v79 = a1 == 0x47424264756F6C63 && a2 == 0xEC00000064656553;
                                                                                                                                                      if (v79 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                      {
                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                        return 231;
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        v80 = a1 == 0x53474264756F6C63 && a2 == 0xEB00000000646565;
                                                                                                                                                        if (v80 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                        {
                                                                                                                                                          swift_bridgeObjectRelease();
                                                                                                                                                          return 232;
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          v81 = a1 == 0x53474664756F6C63 && a2 == 0xEB00000000646565;
                                                                                                                                                          if (v81 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                          {
                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                            return 233;
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            v82 = a1 == 0x47464664756F6C63 && a2 == 0xEC00000064656553;
                                                                                                                                                            if (v82 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                            {
                                                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                                                              return 234;
                                                                                                                                                            }
                                                                                                                                                            else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F680 || (sub_1B0008FB0() & 1) != 0)
                                                                                                                                                            {
                                                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                                                              return 235;
                                                                                                                                                            }
                                                                                                                                                            else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F6A0)
                                                                                                                                                            {
                                                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                                                              return 236;
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              v83 = sub_1B0008FB0();
                                                                                                                                                              swift_bridgeObjectRelease();
                                                                                                                                                              if ((v83 & 1) != 0)
                                                                                                                                                                return 4294967276;
                                                                                                                                                              else
                                                                                                                                                                return 4294967277;
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AFE00C80()
{
  return 237;
}

void sub_1AFE00C88()
{
  OUTLINED_FUNCTION_94_5();
  sub_1B0009010();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

uint64_t sub_1AFE00CBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFE00CF0 + 4 * word_1B003A254[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1AFE00CF0()
{
  return 0x6953746567726174;
}

uint64_t sub_1AFE00D14()
{
  return 0x636146656C616373;
}

uint64_t sub_1AFE01150()
{
  return 0x6565705372617473;
}

unint64_t sub_1AFE01170()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01188()
{
  return 0xD000000000000017;
}

unint64_t sub_1AFE011A0()
{
  return 0xD000000000000017;
}

unint64_t sub_1AFE011B8()
{
  return 0xD000000000000016;
}

unint64_t sub_1AFE011D0()
{
  return 0xD000000000000016;
}

unint64_t sub_1AFE011E8()
{
  return 0xD000000000000011;
}

void sub_1AFE01200()
{
  JUMPOUT(0x1AFE0120CLL);
}

unint64_t sub_1AFE01214()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE0122C()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE01238()
{
  return 0xD000000000000015;
}

unint64_t sub_1AFE01250()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE0125C()
{
  return 0xD000000000000012;
}

uint64_t sub_1AFE01274()
{
  return 0x66694C7465656C73;
}

unint64_t sub_1AFE01B60()
{
  return 0xD000000000000015;
}

unint64_t sub_1AFE01B78()
{
  return 0xD000000000000012;
}

unint64_t sub_1AFE01B90()
{
  return 0xD000000000000016;
}

unint64_t sub_1AFE01BA8()
{
  return 0xD000000000000015;
}

unint64_t sub_1AFE01BC0()
{
  return 0xD000000000000013;
}

unint64_t sub_1AFE01BD8()
{
  return 0xD000000000000012;
}

unint64_t sub_1AFE01BF0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1AFE01C08()
{
  return 0x7261504433657375;
}

uint64_t sub_1AFE01C2C()
{
  return 0x73726579616CLL;
}

uint64_t sub_1AFE01C40()
{
  return 0x6E696E746867696CLL;
}

void sub_1AFE01C64()
{
  JUMPOUT(0x1AFE01C7CLL);
}

unint64_t sub_1AFE01C84()
{
  return 0xD000000000000011;
}

uint64_t sub_1AFE01C9C()
{
  return 0x656C676E416E7573;
}

unint64_t sub_1AFE01CB4()
{
  return 0xD000000000000012;
}

unint64_t sub_1AFE01CCC()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01CE4()
{
  return 0xD000000000000015;
}

uint64_t sub_1AFE01CFC()
{
  return 0x6E417961526E7573;
}

unint64_t sub_1AFE01D20()
{
  return 0xD000000000000013;
}

unint64_t sub_1AFE01D38()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1AFE01D54()
{
  return 0xD000000000000013;
}

unint64_t sub_1AFE01D6C()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE01D78()
{
  return 0xD000000000000015;
}

unint64_t sub_1AFE01D90()
{
  return 0xD000000000000015;
}

unint64_t sub_1AFE01DA8()
{
  return 0xD000000000000018;
}

unint64_t sub_1AFE01DC0()
{
  return 0xD000000000000018;
}

void sub_1AFE01DD8()
{
  JUMPOUT(0x1AFE01F3CLL);
}

unint64_t sub_1AFE01DE8()
{
  return 0xD000000000000014;
}

void sub_1AFE01DF4()
{
  JUMPOUT(0x1AFE01E10);
}

uint64_t sub_1AFE01E18()
{
  return 0x53736972496E7573;
}

unint64_t sub_1AFE01E3C()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01E54()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01E6C()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01E84()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1AFE01EA0()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1AFE01EBC()
{
  return 0xD000000000000011;
}

uint64_t sub_1AFE01ED4()
{
  return 0x53737961526E7573;
}

unint64_t sub_1AFE01F14()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFE01F44()
{
  return 0x626E6961526E7573;
}

unint64_t sub_1AFE01F68()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE01F80()
{
  return 0xD000000000000018;
}

uint64_t sub_1AFE01F98()
{
  return 0x53676E69776F6C62;
}

uint64_t sub_1AFE01FBC()
{
  return 0x41676E69776F6C62;
}

unint64_t sub_1AFE01FE0()
{
  return 0xD000000000000010;
}

unint64_t sub_1AFE01FF8()
{
  return 0xD000000000000011;
}

void sub_1AFE02010()
{
  JUMPOUT(0x1AFE0201CLL);
}

uint64_t sub_1AFE02028()
{
  return 0x6769724272617473;
}

unint64_t sub_1AFE0204C()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE02058()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE02064()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE02070()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE0207C()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE02088()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFE02094()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFE020A0()
{
  return 0x6F6973696C6C6F63;
}

unint64_t sub_1AFE020D0()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFE020E8()
{
  return 0xD000000000000010;
}

unint64_t sub_1AFE02100()
{
  return 0xD000000000000019;
}

unint64_t sub_1AFE02118()
{
  return 0xD000000000000017;
}

unint64_t sub_1AFE02130()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1AFE0214C()
{
  return 0xD000000000000013;
}

uint64_t sub_1AFE02164()
{
  return 0x655665676E697266;
}

uint64_t sub_1AFE0218C()
{
  return 0x635365676E697266;
}

unint64_t sub_1AFE021A8()
{
  return 0xD000000000000012;
}

unint64_t sub_1AFE021C0()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFE021E8()
{
  return 0x664F65676E697266;
}

unint64_t sub_1AFE0220C()
{
  return 0xD000000000000015;
}

uint64_t sub_1AFE02224()
{
  return 0x6F4365676E697266;
}

void sub_1AFE02240()
{
  JUMPOUT(0x1AFE02290);
}

unint64_t sub_1AFE022B8()
{
  return 0xD000000000000011;
}

void sub_1AFE022D0()
{
  JUMPOUT(0x1AFE022E4);
}

uint64_t sub_1AFE022F0()
{
  unsigned __int8 *v0;

  return sub_1AFE00CBC(*v0);
}

uint64_t sub_1AFE022F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFDFB4C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE0231C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFE00C80();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE02340()
{
  sub_1AFE07788();
  return sub_1B0009118();
}

uint64_t sub_1AFE02368()
{
  sub_1AFE07788();
  return sub_1B0009124();
}

void WeatherConditionBackgroundConfig.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  _DWORD v53[10];
  uint64_t v54;
  __int128 v55;
  _QWORD v56[2];
  __int128 v57;
  _DWORD v58[2];
  uint64_t v59;
  int v60;
  uint64_t v61;
  _OWORD v62[2];
  _DWORD v63[2];
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  int v67;
  int v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  _DWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  _OWORD v80[2];
  _DWORD v81[2];
  _QWORD v82[2];
  _DWORD v83[2];
  uint64_t v84;
  int v85;
  uint64_t v86;
  _QWORD v87[2];
  _QWORD v88[2];
  __int128 v89;
  __int128 v90;
  _DWORD v91[4];
  uint64_t v92;
  uint64_t v93;
  _DWORD v94[2];
  uint64_t v95;
  _DWORD v96[2];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[2];
  __int128 v101;
  __int128 v102;
  int v103;
  uint64_t v104;
  _DWORD v105[2];
  _QWORD v106[2];
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _DWORD v113[2];
  __int128 v114;
  __int128 v115;
  int v116;
  int v117;
  int v118;
  int v119;
  uint64_t v120;
  _DWORD v121[2];
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _DWORD v127[2];
  uint64_t v128;
  _DWORD v129[2];
  _DWORD v130[2];
  uint64_t v131;
  _QWORD v132[3];
  uint64_t v133;
  __int128 v134;
  int v135;
  __int128 v136;
  uint64_t v137;
  _DWORD v138[2];
  _DWORD v139[2];
  uint64_t v140;
  __int128 v141;
  _OWORD v142[2];
  uint64_t v143;
  uint64_t v144;
  _DWORD v145[2];
  _DWORD v146[2];
  uint64_t v147;
  _DWORD v148[2];
  __int128 v149;
  __int128 v150;
  int v151;
  _DWORD v152[2];
  __int128 v153;
  uint64_t v154;
  _DWORD v155[2];
  _QWORD v156[2];
  int v157;
  uint64_t v158;
  _OWORD v159[2];
  uint64_t v160;
  _DWORD v161[2];
  uint64_t v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  uint64_t v187;
  int v188;
  __int128 v189;
  _DWORD v190[4];
  __int128 v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  _DWORD v198[2];
  uint64_t v199;
  int v200;
  uint64_t v201;
  int v202;
  __int128 v203;
  int v204;
  _DWORD v205[2];
  uint64_t v206;
  int v207;
  __int128 v208;
  int v209;
  uint64_t v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  __int128 v220;
  _OWORD v221[2];
  _OWORD v222[3];
  int v223;
  uint64_t v224;
  _QWORD v225[2];
  _OWORD v226[2];
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  int v233;
  int v234;
  int v235;
  _DWORD v236[2];
  _DWORD v237[2];
  uint64_t v238;
  int v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE v252[16];
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _BYTE v256[48];
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;

  OUTLINED_FUNCTION_30_15();
  a30 = v33;
  a31 = v34;
  v247 = v32;
  v36 = v35;
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74618);
  v246 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  OUTLINED_FUNCTION_9();
  v39 = v38 - v37;
  v248 = *v31;
  LODWORD(v245) = *((unsigned __int8 *)v31 + 8);
  v243 = v31[2];
  v244 = v31[3];
  v241 = *((_OWORD *)v31 + 2);
  v240 = *((_OWORD *)v31 + 3);
  a18 = *((_DWORD *)v31 + 16);
  v239 = *((_DWORD *)v31 + 17);
  v238 = v31[9];
  v237[1] = *((_DWORD *)v31 + 20);
  v237[0] = *((_DWORD *)v31 + 21);
  v236[1] = *((_DWORD *)v31 + 22);
  v236[0] = *((_DWORD *)v31 + 23);
  v235 = *((_DWORD *)v31 + 24);
  v234 = *((_DWORD *)v31 + 25);
  v233 = *((_DWORD *)v31 + 26);
  v232 = *((_DWORD *)v31 + 27);
  v53[8] = *((unsigned __int8 *)v31 + 384);
  v56[0] = v31[50];
  v56[1] = v31[51];
  v59 = v31[53];
  v83[0] = *((unsigned __int8 *)v31 + 736);
  v84 = v31[93];
  v88[1] = v31[96];
  v88[0] = v31[97];
  v87[1] = v31[98];
  v87[0] = v31[99];
  v86 = v31[100];
  v94[1] = *((unsigned __int8 *)v31 + 864);
  v95 = v31[109];
  v100[1] = v31[112];
  v100[0] = v31[113];
  v99 = v31[114];
  v98 = v31[115];
  v97 = v31[116];
  v105[1] = *((unsigned __int8 *)v31 + 992);
  v106[1] = v31[125];
  v112 = v31[128];
  v111 = v31[129];
  v110 = v31[130];
  v109 = v31[131];
  v108 = v31[132];
  v117 = *((unsigned __int8 *)v31 + 1120);
  v120 = v31[141];
  v126 = v31[144];
  v125 = v31[145];
  v124 = v31[146];
  v123 = v31[147];
  v122 = v31[148];
  v130[0] = *((unsigned __int8 *)v31 + 1236);
  v133 = v31[155];
  v132[2] = v31[156];
  v132[1] = v31[157];
  v132[0] = v31[158];
  v131 = v31[159];
  v135 = *((unsigned __int8 *)v31 + 1280);
  v144 = v31[171];
  v148[1] = *((unsigned __int8 *)v31 + 1432);
  v156[1] = v31[189];
  v156[0] = v31[190];
  v161[1] = *((unsigned __int8 *)v31 + 1628);
  v186 = *((unsigned __int8 *)v31 + 1629);
  v185 = *((unsigned __int8 *)v31 + 1630);
  v184 = *((unsigned __int8 *)v31 + 1631);
  v183 = *((unsigned __int8 *)v31 + 1632);
  v182 = *((unsigned __int8 *)v31 + 1633);
  v181 = *((unsigned __int8 *)v31 + 1634);
  v180 = *((unsigned __int8 *)v31 + 1635);
  v179 = *((unsigned __int8 *)v31 + 1636);
  v178 = *((unsigned __int8 *)v31 + 1637);
  v177 = *((unsigned __int8 *)v31 + 1638);
  v176 = *((unsigned __int8 *)v31 + 1639);
  v175 = *((unsigned __int8 *)v31 + 1640);
  v174 = *((unsigned __int8 *)v31 + 1641);
  v173 = *((unsigned __int8 *)v31 + 1642);
  v172 = *((unsigned __int8 *)v31 + 1643);
  v171 = *((unsigned __int8 *)v31 + 1644);
  v170 = *((unsigned __int8 *)v31 + 1645);
  v169 = *((unsigned __int8 *)v31 + 1646);
  v168 = *((unsigned __int8 *)v31 + 1647);
  v167 = *((unsigned __int8 *)v31 + 1648);
  v166 = *((unsigned __int8 *)v31 + 1649);
  v165 = *((unsigned __int8 *)v31 + 1650);
  v164 = *((unsigned __int8 *)v31 + 1651);
  v163 = *((unsigned __int8 *)v31 + 1652);
  v51 = *((_OWORD *)v31 + 22);
  v52 = *((_OWORD *)v31 + 23);
  v53[1] = *((_DWORD *)v31 + 97);
  v53[2] = *((_DWORD *)v31 + 98);
  v53[3] = *((_DWORD *)v31 + 104);
  v53[4] = *((_DWORD *)v31 + 105);
  v53[5] = *((_DWORD *)v31 + 108);
  v53[6] = *((_DWORD *)v31 + 109);
  v53[7] = *((_DWORD *)v31 + 110);
  v53[9] = *((_DWORD *)v31 + 111);
  v54 = v31[56];
  v55 = *((_OWORD *)v31 + 29);
  v57 = *((_OWORD *)v31 + 30);
  v58[0] = *((_DWORD *)v31 + 124);
  v58[1] = *((_DWORD *)v31 + 125);
  v60 = *((_DWORD *)v31 + 126);
  v61 = v31[64];
  v62[0] = *((_OWORD *)v31 + 33);
  v62[1] = *((_OWORD *)v31 + 34);
  v63[0] = *((_DWORD *)v31 + 140);
  v63[1] = *((_DWORD *)v31 + 141);
  v64 = v31[71];
  v65 = *((_OWORD *)v31 + 36);
  v66 = *((_OWORD *)v31 + 37);
  v67 = *((_DWORD *)v31 + 152);
  v68 = *((_DWORD *)v31 + 153);
  v69 = *((_OWORD *)v31 + 39);
  v70 = *((_OWORD *)v31 + 40);
  v71 = v31[82];
  v72 = v31[83];
  v73 = v31[84];
  v74 = *((_OWORD *)v31 + 43);
  v75[1] = *((_DWORD *)v31 + 176);
  v76 = v31[89];
  v77 = v31[90];
  v78 = *((_DWORD *)v31 + 182);
  v79 = *((_DWORD *)v31 + 183);
  v80[0] = *((_OWORD *)v31 + 47);
  v80[1] = *((_OWORD *)v31 + 51);
  v81[1] = *((_DWORD *)v31 + 208);
  v82[0] = v31[105];
  v82[1] = v31[106];
  v83[1] = *((_DWORD *)v31 + 214);
  v85 = *((_DWORD *)v31 + 215);
  v89 = *((_OWORD *)v31 + 55);
  v90 = *((_OWORD *)v31 + 59);
  v91[3] = *((_DWORD *)v31 + 240);
  v92 = v31[121];
  v93 = v31[122];
  v96[0] = *((_DWORD *)v31 + 246);
  v96[1] = *((_DWORD *)v31 + 247);
  v101 = *((_OWORD *)v31 + 63);
  v102 = *((_OWORD *)v31 + 67);
  v103 = *((_DWORD *)v31 + 272);
  v104 = v31[137];
  v106[0] = v31[138];
  v107 = *((_DWORD *)v31 + 278);
  v113[1] = *((_DWORD *)v31 + 279);
  v114 = *((_OWORD *)v31 + 71);
  v115 = *((_OWORD *)v31 + 75);
  v116 = *((_DWORD *)v31 + 304);
  v118 = *((_DWORD *)v31 + 305);
  v119 = *((_DWORD *)v31 + 306);
  v121[1] = *((_DWORD *)v31 + 307);
  v127[1] = *((_DWORD *)v31 + 308);
  v128 = v31[161];
  v129[0] = *((_DWORD *)v31 + 324);
  v129[1] = *((_DWORD *)v31 + 325);
  v130[1] = *((_DWORD *)v31 + 326);
  v134 = *((_OWORD *)v31 + 82);
  v136 = *((_OWORD *)v31 + 83);
  v138[1] = *((_DWORD *)v31 + 336);
  v139[0] = *((_DWORD *)v31 + 337);
  v139[1] = *((_DWORD *)v31 + 338);
  v140 = v31[170];
  v141 = *((_OWORD *)v31 + 86);
  v142[0] = *((_OWORD *)v31 + 87);
  v142[1] = *((_OWORD *)v31 + 88);
  v143 = v31[178];
  v145[0] = *((_DWORD *)v31 + 359);
  v145[1] = *((_DWORD *)v31 + 360);
  v146[0] = *((_DWORD *)v31 + 361);
  v146[1] = *((_DWORD *)v31 + 362);
  v147 = v31[182];
  v149 = *((_OWORD *)v31 + 92);
  v150 = *((_OWORD *)v31 + 93);
  v151 = *((_DWORD *)v31 + 376);
  v152[0] = *((_DWORD *)v31 + 377);
  v152[1] = *((_DWORD *)v31 + 382);
  v153 = *((_OWORD *)v31 + 96);
  v155[0] = *((_DWORD *)v31 + 388);
  v155[1] = *((_DWORD *)v31 + 389);
  v157 = *((_DWORD *)v31 + 390);
  v158 = v31[196];
  v159[0] = *((_OWORD *)v31 + 99);
  v159[1] = *((_OWORD *)v31 + 100);
  v160 = v31[202];
  v161[0] = *((_DWORD *)v31 + 406);
  OUTLINED_FUNCTION_9_64(v256, v31 + 207);
  v162 = v31[218];
  v187 = v31[219];
  v188 = *((unsigned __int8 *)v31 + 1760);
  v189 = *((_OWORD *)v31 + 111);
  v190[0] = *((_DWORD *)v31 + 448);
  v190[1] = *((_DWORD *)v31 + 449);
  v190[2] = *((_DWORD *)v31 + 450);
  v190[3] = *((_DWORD *)v31 + 451);
  v191 = *((_OWORD *)v31 + 113);
  v192 = *((unsigned __int8 *)v31 + 1824);
  v193 = *((_DWORD *)v31 + 457);
  v194 = *((_DWORD *)v31 + 458);
  v195 = *((_DWORD *)v31 + 459);
  v196 = *((_DWORD *)v31 + 460);
  v197 = *((_DWORD *)v31 + 461);
  v198[0] = *((_DWORD *)v31 + 462);
  v198[1] = *((_DWORD *)v31 + 463);
  v199 = v31[232];
  v200 = *((_DWORD *)v31 + 466);
  v201 = v31[234];
  v202 = *((_DWORD *)v31 + 470);
  v203 = *((_OWORD *)v31 + 118);
  v204 = *((_DWORD *)v31 + 476);
  v205[0] = *((_DWORD *)v31 + 477);
  v205[1] = *((_DWORD *)v31 + 478);
  v206 = v31[240];
  v207 = *((_DWORD *)v31 + 482);
  v208 = *((_OWORD *)v31 + 121);
  v209 = *((_DWORD *)v31 + 488);
  v210 = v31[245];
  v211 = *((_DWORD *)v31 + 492);
  v212 = *((_DWORD *)v31 + 493);
  v213 = *((_DWORD *)v31 + 494);
  v214 = *((_DWORD *)v31 + 495);
  v215 = *((_DWORD *)v31 + 496);
  v217 = *((_DWORD *)v31 + 497);
  v227 = v31[275];
  v230 = v31[284];
  v231 = v31[285];
  v40 = v31[286];
  v41 = v31[289];
  v42 = v31[290];
  v43 = v36[3];
  v216 = *((_DWORD *)v31 + 498);
  v218 = v31[250];
  v219 = v31[251];
  v220 = *((_OWORD *)v31 + 126);
  v221[0] = *((_OWORD *)v31 + 127);
  v221[1] = *((_OWORD *)v31 + 128);
  v222[0] = *((_OWORD *)v31 + 129);
  v222[1] = *((_OWORD *)v31 + 130);
  v222[2] = *((_OWORD *)v31 + 131);
  v223 = *((_DWORD *)v31 + 528);
  v224 = v31[265];
  v225[0] = v31[266];
  v225[1] = v31[267];
  v226[0] = *((_OWORD *)v31 + 135);
  v226[1] = *((_OWORD *)v31 + 136);
  v228 = *((_OWORD *)v31 + 139);
  v229 = *((_OWORD *)v31 + 141);
  __swift_project_boxed_opaque_existential_1(v36, v43);
  sub_1AFE07788();
  sub_1B0009058();
  LOBYTE(v250) = 0;
  v248 = v39;
  sub_1B0008F44();
  if (v32)
  {
    (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v248, v249);
  }
  else
  {
    v247 = v40;
    v44 = v246;
    OUTLINED_FUNCTION_105_3((uint64_t)&a12);
    a21 = 1;
    sub_1AFE077C4();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_23_63((uint64_t)&a10);
    a21 = 2;
    sub_1AFBEE3C0();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_28_53(3);
    OUTLINED_FUNCTION_18_71();
    OUTLINED_FUNCTION_12_95((uint64_t)&v259);
    a21 = 4;
    v45 = OUTLINED_FUNCTION_27_43();
    v47 = OUTLINED_FUNCTION_87_4(&qword_1EEE74630, v46, MEMORY[0x1E0DEDD60]);
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)&v258);
    OUTLINED_FUNCTION_108_2(5);
    OUTLINED_FUNCTION_6_101();
    v244 = v45;
    v245 = v47;
    OUTLINED_FUNCTION_8_99(6);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_8_99(7);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v257);
    a21 = 8;
    OUTLINED_FUNCTION_27_43();
    OUTLINED_FUNCTION_87_4(&qword_1EEE70F00, v48, MEMORY[0x1E0DEDD30]);
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_8_99(9);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(10);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(11);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(12);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(13);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(14);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(15);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(16);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v51 + 8);
    OUTLINED_FUNCTION_5_104(17);
    OUTLINED_FUNCTION_12_95((uint64_t)&v52);
    a21 = 18;
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
    v50 = sub_1AFB3A810(&qword_1EEE74638, &qword_1ED1F3C80, MEMORY[0x1E0DEDDB8]);
    v243 = v49;
    *(_QWORD *)&v241 = v50;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)v53);
    OUTLINED_FUNCTION_3_106(19);
    OUTLINED_FUNCTION_8_99(20);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(21);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(22);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(23);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(24);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v55 + 8);
    OUTLINED_FUNCTION_5_104(25);
    OUTLINED_FUNCTION_12_95((uint64_t)v56);
    OUTLINED_FUNCTION_3_106(26);
    OUTLINED_FUNCTION_12_95((uint64_t)v58);
    OUTLINED_FUNCTION_3_106(27);
    OUTLINED_FUNCTION_8_99(28);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(29);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(30);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(31);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(32);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(33);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(34);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v55);
    OUTLINED_FUNCTION_5_104(35);
    OUTLINED_FUNCTION_8_99(36);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(37);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(38);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)v62);
    OUTLINED_FUNCTION_3_106(39);
    OUTLINED_FUNCTION_12_95((uint64_t)v63);
    OUTLINED_FUNCTION_3_106(40);
    OUTLINED_FUNCTION_8_99(41);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(42);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v66 + 8);
    OUTLINED_FUNCTION_5_104(43);
    OUTLINED_FUNCTION_8_99(44);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(45);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)&v69);
    OUTLINED_FUNCTION_3_106(46);
    OUTLINED_FUNCTION_12_95((uint64_t)&v70);
    OUTLINED_FUNCTION_3_106(47);
    OUTLINED_FUNCTION_28_53(48);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_8_99(49);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(50);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(51);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_28_53(52);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_8_99(53);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(54);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(55);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_8_99(56);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(57);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(58);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(59);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v74 + 8);
    OUTLINED_FUNCTION_5_104(60);
    OUTLINED_FUNCTION_12_95((uint64_t)v75);
    OUTLINED_FUNCTION_3_106(61);
    OUTLINED_FUNCTION_12_95((uint64_t)v80);
    OUTLINED_FUNCTION_3_106(62);
    OUTLINED_FUNCTION_8_99(63);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(64);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(65);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)v81);
    OUTLINED_FUNCTION_5_104(66);
    OUTLINED_FUNCTION_12_95((uint64_t)v82);
    OUTLINED_FUNCTION_3_106(67);
    OUTLINED_FUNCTION_12_95((uint64_t)v83);
    OUTLINED_FUNCTION_3_106(68);
    OUTLINED_FUNCTION_8_99(69);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(70);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v86);
    OUTLINED_FUNCTION_5_104(71);
    OUTLINED_FUNCTION_12_95((uint64_t)v87);
    OUTLINED_FUNCTION_3_106(72);
    OUTLINED_FUNCTION_12_95((uint64_t)v88);
    OUTLINED_FUNCTION_3_106(73);
    OUTLINED_FUNCTION_8_99(74);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(75);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)&v90);
    OUTLINED_FUNCTION_3_106(76);
    OUTLINED_FUNCTION_12_95((uint64_t)v91);
    OUTLINED_FUNCTION_3_106(77);
    OUTLINED_FUNCTION_23_63((uint64_t)&v93);
    OUTLINED_FUNCTION_5_104(78);
    OUTLINED_FUNCTION_23_63((uint64_t)v94);
    OUTLINED_FUNCTION_5_104(79);
    OUTLINED_FUNCTION_23_63((uint64_t)&v95);
    OUTLINED_FUNCTION_5_104(80);
    OUTLINED_FUNCTION_12_95((uint64_t)v96);
    OUTLINED_FUNCTION_3_106(81);
    OUTLINED_FUNCTION_8_99(82);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v99);
    OUTLINED_FUNCTION_5_104(83);
    OUTLINED_FUNCTION_23_63((uint64_t)v100);
    OUTLINED_FUNCTION_5_104(84);
    OUTLINED_FUNCTION_8_99(85);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(86);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(87);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_28_53(88);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_12_95((uint64_t)&v101);
    a21 = 89;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_69_5((uint64_t)v113);
    OUTLINED_FUNCTION_72_3((uint64_t)&v112);
    OUTLINED_FUNCTION_71_7((uint64_t)&v111);
    OUTLINED_FUNCTION_70_2((uint64_t)&v110);
    OUTLINED_FUNCTION_68_5((uint64_t)&v109);
    a21 = 90;
    *(_QWORD *)&v240 = sub_1AFE07800();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)&v102);
    OUTLINED_FUNCTION_3_106(91);
    OUTLINED_FUNCTION_8_99(92);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)v105);
    OUTLINED_FUNCTION_5_104(93);
    OUTLINED_FUNCTION_23_63((uint64_t)v106);
    OUTLINED_FUNCTION_5_104(94);
    OUTLINED_FUNCTION_8_99(95);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(96);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(97);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_28_53(98);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_12_95((uint64_t)&v114);
    a21 = 99;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_69_5((uint64_t)v129);
    OUTLINED_FUNCTION_72_3((uint64_t)&v128);
    OUTLINED_FUNCTION_71_7((uint64_t)v127);
    OUTLINED_FUNCTION_70_2((uint64_t)&v126);
    OUTLINED_FUNCTION_68_5((uint64_t)&v125);
    a21 = 100;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)&v115);
    OUTLINED_FUNCTION_3_106(101);
    OUTLINED_FUNCTION_8_99(102);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v120);
    OUTLINED_FUNCTION_5_104(103);
    OUTLINED_FUNCTION_23_63((uint64_t)v121);
    OUTLINED_FUNCTION_5_104(104);
    OUTLINED_FUNCTION_8_99(105);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(106);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(107);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_28_53(108);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_12_95((uint64_t)v130);
    a21 = 109;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_69_5((uint64_t)v139);
    OUTLINED_FUNCTION_72_3((uint64_t)v138);
    OUTLINED_FUNCTION_71_7((uint64_t)&v137);
    OUTLINED_FUNCTION_70_2((uint64_t)&v136 + 8);
    OUTLINED_FUNCTION_68_5((uint64_t)&v136);
    a21 = 110;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)v132);
    OUTLINED_FUNCTION_3_106(111);
    OUTLINED_FUNCTION_8_99(112);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v133);
    OUTLINED_FUNCTION_5_104(113);
    OUTLINED_FUNCTION_23_63((uint64_t)&v134 + 8);
    OUTLINED_FUNCTION_5_104(114);
    OUTLINED_FUNCTION_8_99(115);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(116);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(117);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_28_53(118);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_12_95((uint64_t)&v141);
    a21 = 119;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_69_5((uint64_t)&v149);
    OUTLINED_FUNCTION_72_3((uint64_t)v148);
    OUTLINED_FUNCTION_71_7((uint64_t)&v147);
    OUTLINED_FUNCTION_70_2((uint64_t)v146);
    OUTLINED_FUNCTION_68_5((uint64_t)v145);
    a21 = 120;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)v142);
    OUTLINED_FUNCTION_3_106(121);
    OUTLINED_FUNCTION_8_99(122);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(123);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(124);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(125);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(126);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(127);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_69_5((uint64_t)v155);
    OUTLINED_FUNCTION_72_3((uint64_t)&v154);
    OUTLINED_FUNCTION_71_7((uint64_t)&v153 + 8);
    OUTLINED_FUNCTION_70_2((uint64_t)&v153);
    OUTLINED_FUNCTION_68_5((uint64_t)v152);
    a21 = 0x80;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_28_53(129);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_23_63((uint64_t)&v150);
    OUTLINED_FUNCTION_5_104(130);
    OUTLINED_FUNCTION_8_99(131);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(132);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(133);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)v156);
    OUTLINED_FUNCTION_3_106(134);
    OUTLINED_FUNCTION_12_95((uint64_t)v159);
    OUTLINED_FUNCTION_3_106(135);
    OUTLINED_FUNCTION_8_99(136);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(137);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(138);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v160);
    OUTLINED_FUNCTION_5_104(139);
    OUTLINED_FUNCTION_28_53(140);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_12_95((uint64_t)v161);
    OUTLINED_FUNCTION_3_106(141);
    OUTLINED_FUNCTION_12_95((uint64_t)&v163);
    OUTLINED_FUNCTION_3_106(142);
    OUTLINED_FUNCTION_12_95((uint64_t)&v167);
    OUTLINED_FUNCTION_3_106(143);
    OUTLINED_FUNCTION_23_63((uint64_t)&v171);
    OUTLINED_FUNCTION_5_104(144);
    OUTLINED_FUNCTION_28_53(145);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_8_99(146);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(147);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(148);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(149);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v179);
    OUTLINED_FUNCTION_5_104(150);
    OUTLINED_FUNCTION_12_95((uint64_t)&v183);
    OUTLINED_FUNCTION_3_106(151);
    OUTLINED_FUNCTION_12_95((uint64_t)&v187);
    OUTLINED_FUNCTION_3_106(152);
    OUTLINED_FUNCTION_8_99(153);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(154);
    OUTLINED_FUNCTION_0_126();
    LOBYTE(v250) = -101;
    sub_1B0008F2C();
    OUTLINED_FUNCTION_8_99(156);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)v190);
    OUTLINED_FUNCTION_3_106(157);
    OUTLINED_FUNCTION_8_99(158);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(159);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(160);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)v198);
    OUTLINED_FUNCTION_5_104(161);
    OUTLINED_FUNCTION_12_95((uint64_t)&v199);
    OUTLINED_FUNCTION_3_106(162);
    OUTLINED_FUNCTION_12_95((uint64_t)&v201);
    OUTLINED_FUNCTION_3_106(163);
    OUTLINED_FUNCTION_23_63((uint64_t)&v203 + 8);
    OUTLINED_FUNCTION_5_104(164);
    OUTLINED_FUNCTION_8_99(165);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(166);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_105_3((uint64_t)&v219 + 4);
    BYTE1(v250) = v185;
    BYTE2(v250) = v184;
    BYTE3(v250) = v183;
    BYTE4(v250) = v182;
    BYTE5(v250) = v181;
    BYTE6(v250) = v180;
    HIBYTE(v250) = v179;
    LOBYTE(v251) = v178;
    BYTE1(v251) = v177;
    BYTE2(v251) = v176;
    BYTE3(v251) = v175;
    BYTE4(v251) = v174;
    BYTE5(v251) = v173;
    BYTE6(v251) = v172;
    HIBYTE(v251) = v171;
    v252[0] = v170;
    v252[1] = v169;
    v252[2] = v168;
    v252[3] = v167;
    v252[4] = v166;
    v252[5] = v165;
    v252[6] = v164;
    v252[7] = v163;
    a21 = -89;
    sub_1AFE0783C();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_9_64(&v250, v256);
    a21 = -88;
    sub_1AFE07878();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_23_63((uint64_t)v205);
    v251 = v187;
    a21 = -87;
    sub_1AFE078B4();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_105_3((uint64_t)&v220 + 12);
    a21 = -86;
    sub_1AFE078F0();
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_12_95((uint64_t)v221);
    a21 = -85;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_8_99(172);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(173);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(174);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(175);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)v222);
    a21 = -80;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_28_53(177);
    OUTLINED_FUNCTION_26_54();
    OUTLINED_FUNCTION_8_99(178);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(179);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(180);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(181);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(182);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(183);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(184);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(185);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_8_99(186);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)v225);
    OUTLINED_FUNCTION_5_104(187);
    OUTLINED_FUNCTION_8_99(188);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)v226);
    OUTLINED_FUNCTION_3_106(189);
    OUTLINED_FUNCTION_8_99(190);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(191);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(192);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_28_53(193);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_8_99(194);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_12_95((uint64_t)&v228);
    OUTLINED_FUNCTION_3_106(195);
    OUTLINED_FUNCTION_8_99(196);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v229 + 8);
    OUTLINED_FUNCTION_5_104(197);
    OUTLINED_FUNCTION_8_99(198);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(199);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(200);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(201);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(202);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(203);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_8_99(204);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)v236);
    OUTLINED_FUNCTION_5_104(205);
    OUTLINED_FUNCTION_23_63((uint64_t)v237);
    OUTLINED_FUNCTION_5_104(206);
    OUTLINED_FUNCTION_12_95((uint64_t)&v238);
    OUTLINED_FUNCTION_3_106(207);
    OUTLINED_FUNCTION_12_95((uint64_t)&v240);
    OUTLINED_FUNCTION_3_106(208);
    OUTLINED_FUNCTION_12_95((uint64_t)&v241);
    OUTLINED_FUNCTION_3_106(209);
    OUTLINED_FUNCTION_12_95((uint64_t)&v242);
    OUTLINED_FUNCTION_3_106(210);
    OUTLINED_FUNCTION_12_95((uint64_t)&v244);
    OUTLINED_FUNCTION_3_106(211);
    OUTLINED_FUNCTION_12_95((uint64_t)&v246);
    OUTLINED_FUNCTION_3_106(212);
    OUTLINED_FUNCTION_8_99(213);
    OUTLINED_FUNCTION_0_126();
    OUTLINED_FUNCTION_23_63((uint64_t)&v249);
    OUTLINED_FUNCTION_5_104(214);
    OUTLINED_FUNCTION_23_63((uint64_t)&v250);
    OUTLINED_FUNCTION_5_104(215);
    OUTLINED_FUNCTION_23_63((uint64_t)&v251);
    OUTLINED_FUNCTION_5_104(216);
    OUTLINED_FUNCTION_8_99(217);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_12_95((uint64_t)v252);
    OUTLINED_FUNCTION_3_106(218);
    OUTLINED_FUNCTION_12_95((uint64_t)&v253);
    OUTLINED_FUNCTION_3_106(219);
    OUTLINED_FUNCTION_8_99(220);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_28_53(221);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_8_99(222);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_8_99(223);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_12_95((uint64_t)&v254);
    a21 = -32;
    OUTLINED_FUNCTION_6_101();
    OUTLINED_FUNCTION_8_99(225);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_8_99(226);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_8_99(227);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_8_99(228);
    OUTLINED_FUNCTION_1_112();
    OUTLINED_FUNCTION_12_95((uint64_t)&v255);
    OUTLINED_FUNCTION_3_106(229);
    OUTLINED_FUNCTION_28_53(230);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_28_53(231);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_28_53(232);
    OUTLINED_FUNCTION_16_77();
    OUTLINED_FUNCTION_28_53(233);
    OUTLINED_FUNCTION_18_71();
    OUTLINED_FUNCTION_28_53(234);
    OUTLINED_FUNCTION_16_77();
    v250 = v41;
    a21 = -21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74668);
    sub_1AFE07AD0(&qword_1EEE74670, (uint64_t (*)(void))sub_1AFE0792C, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_6_101();
    v250 = v42;
    OUTLINED_FUNCTION_108_2(236);
    OUTLINED_FUNCTION_6_101();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v248, v249);
  }
  OUTLINED_FUNCTION_21_11();
}

void WeatherConditionBackgroundConfig.hashValue.getter()
{
  OUTLINED_FUNCTION_94_5();
  WeatherConditionBackgroundConfig.hash(into:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

uint64_t WeatherConditionBackgroundConfig.init(from:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  double v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  double *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  double *v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  uint64_t v202;
  uint64_t v203;
  double *v204;
  uint64_t v205;
  uint64_t v206;
  __n128 v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  double *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  double *v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  double *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  double *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  double *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  __int128 v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  __int128 v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  __int128 v295;
  uint64_t v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  __int128 v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  __int128 v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  __int128 v331;
  uint64_t v332;
  uint64_t v333;
  _QWORD *v334;
  double v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  _QWORD *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  double *v345;
  uint64_t v346;
  uint64_t v347;
  __int128 v348;
  __int128 v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  __int128 v361;
  __int128 v362;
  uint64_t v363;
  uint64_t v364;
  int v365;
  int v366;
  uint64_t v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  char v395;
  uint64_t v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  char v415;
  uint64_t v416;
  int v417;
  int v418;
  int v419;
  char v420;
  uint64_t v421;
  int v422;
  int v423;
  int v424;
  char v425;
  uint64_t v426;
  int v427;
  int v428;
  int v429;
  char v430;
  uint64_t v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  char v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  char v447;
  uint64_t v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  uint64_t v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  char v461;
  uint64_t v462;
  int v463;
  int v464;
  int v465;
  int v466;
  char v467;
  uint64_t v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  uint64_t v500;
  __int128 v501;
  __int128 v502;
  void *v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  _QWORD *v526;
  _BYTE v527[2336];
  __int128 v528;
  __int128 v529;
  uint64_t v530;
  char v531;
  uint64_t v532;
  char v533;
  uint64_t v534;
  _OWORD v535[147];

  MEMORY[0x1E0C80A78](a1);
  v526 = v2;
  v503 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74680);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  BYTE8(v535[0]) = 0;
  *(_QWORD *)&v535[1] = 0x3FF0000000000000;
  *((_QWORD *)&v535[1] + 1) = 10;
  *(int32x2_t *)&v535[4] = vdup_n_s32(0x42480000u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C60);
  v5 = OUTLINED_FUNCTION_20();
  v6 = OUTLINED_FUNCTION_34_38(v5);
  *v7 = 0;
  GEOLocationCoordinate2DMake(v6, v8);
  sub_1AFAC3274(v9);
  *((_QWORD *)&v535[4] + 1) = v10;
  *(_QWORD *)&v535[5] = 1092616192;
  *(_QWORD *)((char *)&v535[5] + 12) = 0x41F00000C20C0000;
  DWORD1(v535[6]) = 1077936128;
  v11 = OUTLINED_FUNCTION_15_87();
  v12 = OUTLINED_FUNCTION_34_38(v11);
  *v13 = 0x3E8000003DF5C28FLL;
  GEOLocationCoordinate2DMake(v12, v14);
  sub_1AFAC3274(v15);
  *(_QWORD *)&v535[7] = v16;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v17);
  v535[8] = v504;
  sub_1B0007FF0();
  sub_1B0008014();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v18);
  v535[9] = v504;
  *(_QWORD *)&v535[10] = 0;
  DWORD2(v535[10]) = 0;
  v19 = OUTLINED_FUNCTION_15_87();
  v20 = OUTLINED_FUNCTION_34_38(v19);
  v22 = OUTLINED_FUNCTION_73_5(v20, v21);
  sub_1AFAC3274(v22);
  *((_QWORD *)&v535[11] + 1) = v23;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v24);
  v535[12] = v504;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_81_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v25);
  v535[13] = v504;
  v535[14] = xmmword_1B003B260;
  LODWORD(v535[15]) = 1084227584;
  v26 = OUTLINED_FUNCTION_15_87();
  v27 = OUTLINED_FUNCTION_34_38(v26);
  v29 = OUTLINED_FUNCTION_52_8(0.0000000134110482, v27, v28);
  sub_1AFAC3274(v29);
  *(_QWORD *)&v535[16] = v30;
  *((_QWORD *)&v535[16] + 1) = 0x40A0000041700000;
  LODWORD(v535[17]) = 1101004800;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v31);
  v535[18] = v504;
  sub_1B0007FF0();
  sub_1B0008014();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v32);
  v535[19] = v504;
  v33 = OUTLINED_FUNCTION_15_87();
  v34 = OUTLINED_FUNCTION_34_38(v33);
  v36 = OUTLINED_FUNCTION_52_8(0.000000381469873, v34, v35);
  sub_1AFAC3274(v36);
  *((_QWORD *)&v535[20] + 1) = v37;
  *(_QWORD *)&v535[21] = 0x3F00000040A00000;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v38);
  v535[22] = v504;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_81_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v39);
  LOBYTE(v535[24]) = 0;
  *(_QWORD *)((char *)&v535[24] + 4) = 0x3CA3D70A3F800000;
  v535[23] = v504;
  v535[25] = xmmword_1B003B270;
  *(_QWORD *)&v535[26] = 0x41A000003F000000;
  *((_QWORD *)&v535[26] + 1) = 10;
  v535[27] = xmmword_1B003B280;
  v40 = OUTLINED_FUNCTION_15_87();
  v41 = OUTLINED_FUNCTION_34_38(v40);
  *v42 = 0x3E4CCCCD3DCCCCCDLL;
  GEOLocationCoordinate2DMake(v41, v43);
  sub_1AFAC3274(v44);
  *(_QWORD *)&v535[28] = v45;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v505 = v46;
  OUTLINED_FUNCTION_7_75();
  v535[29] = v505;
  sub_1B0007FF0();
  sub_1B0008014();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v47);
  v535[30] = v505;
  *(_QWORD *)&v535[31] = 0x43FA000040400000;
  DWORD2(v535[31]) = 1116471296;
  v48 = OUTLINED_FUNCTION_15_87();
  v49 = OUTLINED_FUNCTION_34_38(v48);
  *v50 = 0x3E8000003DF5C28FLL;
  GEOLocationCoordinate2DMake(v49, v51);
  sub_1AFAC3274(v52);
  *(_QWORD *)&v535[32] = v53;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v506 = v54;
  OUTLINED_FUNCTION_7_75();
  v535[33] = v506;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v507 = v55;
  OUTLINED_FUNCTION_7_75();
  v535[34] = v507;
  *(_QWORD *)&v535[35] = 0x4248000044BB8000;
  v56 = OUTLINED_FUNCTION_15_87();
  v57 = OUTLINED_FUNCTION_34_38(v56);
  v59 = OUTLINED_FUNCTION_73_5(v57, v58);
  sub_1AFAC3274(v59);
  *((_QWORD *)&v535[35] + 1) = v60;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_81_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v61);
  v535[36] = v507;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_113_3();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v62);
  v535[37] = v507;
  *(_QWORD *)&v535[38] = 0x4100000040A00000;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_81_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v63);
  v535[39] = v507;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_113_3();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v64);
  v535[40] = v507;
  v65 = OUTLINED_FUNCTION_15_87();
  v66 = OUTLINED_FUNCTION_34_38(v65);
  v68 = OUTLINED_FUNCTION_52_8(3.43597467e10, v66, v67);
  sub_1AFAC3274(v68);
  *(_QWORD *)&v535[41] = v69;
  v70 = OUTLINED_FUNCTION_15_87();
  v71 = OUTLINED_FUNCTION_34_38(v70);
  v73 = OUTLINED_FUNCTION_52_8(0.125000029, v71, v72);
  sub_1AFAC3274(v73);
  *((_QWORD *)&v535[41] + 1) = v74;
  v75 = OUTLINED_FUNCTION_15_87();
  v76 = OUTLINED_FUNCTION_34_38(v75);
  v78 = OUTLINED_FUNCTION_52_8(2048.00048, v76, v77);
  sub_1AFAC3274(v78);
  *(_QWORD *)&v535[42] = v79;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v508 = v80;
  OUTLINED_FUNCTION_7_75();
  v535[43] = v508;
  LODWORD(v535[44]) = 1065353216;
  v81 = OUTLINED_FUNCTION_15_87();
  v82 = OUTLINED_FUNCTION_34_38(v81);
  v84 = OUTLINED_FUNCTION_73_5(v82, v83);
  sub_1AFAC3274(v84);
  *((_QWORD *)&v535[44] + 1) = v85;
  v86 = OUTLINED_FUNCTION_15_87();
  v87 = OUTLINED_FUNCTION_34_38(v86);
  v89 = OUTLINED_FUNCTION_103_3(v87, v88);
  sub_1AFAC3274(v89);
  v535[45] = v90;
  LOBYTE(v535[46]) = 1;
  *((_QWORD *)&v535[46] + 1) = 4;
  v91 = OUTLINED_FUNCTION_20();
  v92 = OUTLINED_FUNCTION_77_3(v91);
  *v93 = 0x4120000042480000;
  v94 = OUTLINED_FUNCTION_114_2(v92, (uint64_t)v93);
  sub_1AFB36848(v94, v95, v96, v97, v98, v99, v100, v101);
  v535[47] = v102;
  static CloudAssetType.canonicalSingle.getter((uint64_t *)&v535[48]);
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v509 = v103;
  OUTLINED_FUNCTION_7_75();
  v535[51] = v509;
  LODWORD(v535[52]) = 1065353216;
  v104 = OUTLINED_FUNCTION_15_87();
  v105 = OUTLINED_FUNCTION_34_38(v104);
  v107 = OUTLINED_FUNCTION_73_5(v105, v106);
  sub_1AFAC3274(v107);
  *((_QWORD *)&v535[52] + 1) = v108;
  v109 = OUTLINED_FUNCTION_15_87();
  v110 = OUTLINED_FUNCTION_34_38(v109);
  v112 = OUTLINED_FUNCTION_103_3(v110, v111);
  sub_1AFAC3274(v112);
  v535[53] = v113;
  LOBYTE(v535[54]) = 1;
  *((_QWORD *)&v535[54] + 1) = 4;
  v114 = OUTLINED_FUNCTION_20();
  v115 = OUTLINED_FUNCTION_77_3(v114);
  *v116 = 0x41000000420C0000;
  v117 = OUTLINED_FUNCTION_114_2(v115, (uint64_t)v116);
  sub_1AFB36848(v117, v118, v119, v120, v121, v122, v123, v124);
  v535[55] = v125;
  static CloudAssetType.canonicalSingle.getter((uint64_t *)&v535[56]);
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v510 = v126;
  OUTLINED_FUNCTION_7_75();
  v535[59] = v510;
  LODWORD(v535[60]) = 1065353216;
  v127 = OUTLINED_FUNCTION_15_87();
  v128 = OUTLINED_FUNCTION_34_38(v127);
  v130 = OUTLINED_FUNCTION_73_5(v128, v129);
  sub_1AFAC3274(v130);
  *((_QWORD *)&v535[60] + 1) = v131;
  v132 = OUTLINED_FUNCTION_15_87();
  v133 = OUTLINED_FUNCTION_34_38(v132);
  v135 = OUTLINED_FUNCTION_103_3(v133, v134);
  sub_1AFAC3274(v135);
  v535[61] = v136;
  LOBYTE(v535[62]) = 1;
  *((_QWORD *)&v535[62] + 1) = 4;
  v137 = OUTLINED_FUNCTION_20();
  v138 = OUTLINED_FUNCTION_77_3(v137);
  *v139 = 0x40C0000041C80000;
  v140 = OUTLINED_FUNCTION_114_2(v138, (uint64_t)v139);
  sub_1AFB36848(v140, v141, v142, v143, v144, v145, v146, v147);
  v535[63] = v148;
  static CloudAssetType.canonicalSingle.getter((uint64_t *)&v535[64]);
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v511 = v149;
  OUTLINED_FUNCTION_7_75();
  v535[67] = v511;
  LODWORD(v535[68]) = 1065353216;
  v150 = OUTLINED_FUNCTION_15_87();
  v151 = OUTLINED_FUNCTION_34_38(v150);
  v153 = OUTLINED_FUNCTION_73_5(v151, v152);
  sub_1AFAC3274(v153);
  *((_QWORD *)&v535[68] + 1) = v154;
  v155 = OUTLINED_FUNCTION_15_87();
  v156 = OUTLINED_FUNCTION_34_38(v155);
  v158 = OUTLINED_FUNCTION_103_3(v156, v157);
  sub_1AFAC3274(v158);
  v535[69] = v159;
  LOBYTE(v535[70]) = 1;
  *((_QWORD *)&v535[70] + 1) = 4;
  v160 = OUTLINED_FUNCTION_20();
  v161 = OUTLINED_FUNCTION_77_3(v160);
  *(_QWORD *)v162 = 0x4080000041700000;
  *(_DWORD *)(v162 + 8) = 1086324736;
  GEOLocationCoordinate2DMake(v161, 512.000125);
  sub_1AFB36848(v163, v164, v165, v166, v167, v168, v169, v170);
  v535[71] = v171;
  static CloudAssetType.canonicalSingle.getter((uint64_t *)&v535[72]);
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v512 = v172;
  OUTLINED_FUNCTION_7_75();
  v535[75] = v512;
  v535[76] = xmmword_1B003B290;
  LODWORD(v535[77]) = 0;
  BYTE4(v535[77]) = 1;
  static CloudAssetType.canonicalBlanket.getter((uint64_t *)&v535[77] + 1);
  LOBYTE(v535[80]) = 0;
  v173 = OUTLINED_FUNCTION_15_87();
  v174 = OUTLINED_FUNCTION_34_38(v173);
  v176 = OUTLINED_FUNCTION_73_5(v174, v175);
  sub_1AFAC3274(v176);
  *((_QWORD *)&v535[80] + 1) = v177;
  *(_QWORD *)&v535[81] = 0x41C8000042C80000;
  DWORD2(v535[81]) = 0;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v513 = v178;
  OUTLINED_FUNCTION_7_75();
  v535[82] = v513;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v514 = v179;
  OUTLINED_FUNCTION_7_75();
  v535[83] = v514;
  *(_QWORD *)&v535[84] = 0;
  DWORD2(v535[84]) = 0x40000000;
  v180 = OUTLINED_FUNCTION_15_87();
  v181 = OUTLINED_FUNCTION_34_38(v180);
  *v182 = 0;
  GEOLocationCoordinate2DMake(v181, v183);
  sub_1AFAC3274(v184);
  *(_QWORD *)&v535[85] = v185;
  *((_QWORD *)&v535[85] + 1) = 1;
  sub_1B0007FE4();
  OUTLINED_FUNCTION_40_19();
  v515 = v186;
  OUTLINED_FUNCTION_7_75();
  v535[86] = v515;
  sub_1B0007FE4();
  OUTLINED_FUNCTION_40_19();
  v516 = v187;
  OUTLINED_FUNCTION_7_75();
  v535[87] = v516;
  sub_1B0007FE4();
  OUTLINED_FUNCTION_40_19();
  v517 = v188;
  OUTLINED_FUNCTION_7_75();
  v535[88] = v517;
  v189 = OUTLINED_FUNCTION_15_87();
  v190 = OUTLINED_FUNCTION_34_38(v189);
  v192 = OUTLINED_FUNCTION_52_8(0.0250000096, v190, v191);
  sub_1AFAC3274(v192);
  *(_QWORD *)&v535[89] = v193;
  BYTE8(v535[89]) = 1;
  *(_OWORD *)((char *)&v535[89] + 12) = xmmword_1B003B2A0;
  v194 = OUTLINED_FUNCTION_15_87();
  v195 = OUTLINED_FUNCTION_34_38(v194);
  v197 = OUTLINED_FUNCTION_52_8(1.0995119e12, v195, v196);
  sub_1AFAC3274(v197);
  *(_QWORD *)&v535[91] = v198;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v518 = v199;
  OUTLINED_FUNCTION_7_75();
  v535[92] = v518;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v519 = v200;
  OUTLINED_FUNCTION_7_75();
  v535[93] = v519;
  *(_QWORD *)&v535[94] = 1097859072;
  *((_QWORD *)&v535[94] + 1) = 0x736168506E6F6F6DLL;
  *(_QWORD *)&v535[95] = 0xEA00000000003065;
  DWORD2(v535[95]) = 1112014848;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v520 = v201;
  OUTLINED_FUNCTION_7_75();
  v535[96] = v520;
  *(_QWORD *)&v535[97] = 0x42A0000041200000;
  DWORD2(v535[97]) = 1092616192;
  v202 = OUTLINED_FUNCTION_15_87();
  v203 = OUTLINED_FUNCTION_34_38(v202);
  v205 = OUTLINED_FUNCTION_52_8(2.06158464e11, v203, v204);
  sub_1AFAC3274(v205);
  *(_QWORD *)&v535[98] = v206;
  sub_1B0007FD8();
  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v207);
  v535[99] = v520;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_113_3();
  OUTLINED_FUNCTION_7_75();
  OUTLINED_FUNCTION_50_7();
  OUTLINED_FUNCTION_36_30(v208);
  v535[100] = v520;
  v209 = OUTLINED_FUNCTION_15_87();
  v210 = OUTLINED_FUNCTION_34_38(v209);
  v212 = OUTLINED_FUNCTION_52_8(4294970400.0, v210, v211);
  sub_1AFAC3274(v212);
  *(_QWORD *)&v535[101] = v213;
  *(_QWORD *)((char *)&v535[101] + 12) = 0;
  DWORD1(v535[102]) = 16843009;
  *(_QWORD *)((char *)&v535[102] + 13) = 0;
  *((_QWORD *)&v535[102] + 1) = 0;
  sub_1AFDF209C((uint64_t)&v535[103] + 8);
  HazeEffect.init(redIntensity:yellowIntensity:blueIntensity:softBlurIntensity:)(0.0, 0.0, 0.0, 0.0);
  LOBYTE(v535[110]) = 0;
  v214 = OUTLINED_FUNCTION_20();
  v215 = OUTLINED_FUNCTION_77_3(v214);
  v217 = OUTLINED_FUNCTION_115_4(v215, v216, 2.19902326e13);
  sub_1AFB36848(v217, v218, v219, v220, v221, v222, v223, v224);
  v535[111] = v225;
  v535[112] = xmmword_1B003B2B0;
  v226 = OUTLINED_FUNCTION_20();
  v227 = OUTLINED_FUNCTION_77_3(v226);
  v229 = OUTLINED_FUNCTION_115_4(v227, v228, 375809729.0);
  sub_1AFB36848(v229, v230, v231, v232, v233, v234, v235, v236);
  v535[113] = v237;
  LOBYTE(v535[114]) = 1;
  *(_OWORD *)((char *)&v535[114] + 4) = xmmword_1B003B2C0;
  *(_QWORD *)((char *)&v535[115] + 4) = 0x417000003E000000;
  HIDWORD(v535[115]) = 1090519040;
  *(_QWORD *)&v535[116] = 3;
  DWORD2(v535[116]) = 0x40000000;
  v238 = OUTLINED_FUNCTION_15_87();
  v239 = OUTLINED_FUNCTION_34_38(v238);
  v241 = OUTLINED_FUNCTION_52_8(512.000121, v239, v240);
  sub_1AFAC3274(v241);
  *(_QWORD *)&v535[117] = v242;
  DWORD2(v535[117]) = 1109393408;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v521 = v243;
  OUTLINED_FUNCTION_7_75();
  v535[118] = v521;
  *(_QWORD *)&v535[119] = 0x3DCCCCCD00000000;
  DWORD2(v535[119]) = 1101004800;
  *(_QWORD *)&v535[120] = 0;
  DWORD2(v535[120]) = 1106247680;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v522 = v244;
  OUTLINED_FUNCTION_7_75();
  v535[121] = v522;
  LODWORD(v535[122]) = 1077936128;
  v245 = OUTLINED_FUNCTION_15_87();
  v246 = OUTLINED_FUNCTION_34_38(v245);
  v248 = OUTLINED_FUNCTION_52_8(1.50323876e10, v246, v247);
  sub_1AFAC3274(v248);
  *((_QWORD *)&v535[122] + 1) = v249;
  v535[123] = xmmword_1B003B2D0;
  *(_QWORD *)&v535[124] = 0x4170000000000000;
  DWORD2(v535[124]) = 1061997773;
  v250 = OUTLINED_FUNCTION_15_87();
  v251 = OUTLINED_FUNCTION_34_38(v250);
  v253 = OUTLINED_FUNCTION_52_8(0.000878906456, v251, v252);
  sub_1AFAC3274(v253);
  *(_QWORD *)&v535[125] = v254;
  v255 = OUTLINED_FUNCTION_15_87();
  v256 = OUTLINED_FUNCTION_34_38(v255);
  v258 = OUTLINED_FUNCTION_52_8(0.00273437471, v256, v257);
  sub_1AFAC3274(v258);
  *((_QWORD *)&v535[125] + 1) = v259;
  v260 = OUTLINED_FUNCTION_20();
  v261 = OUTLINED_FUNCTION_92_4(v260);
  v263 = OUTLINED_FUNCTION_91_3(v261, v262);
  sub_1AFAE64F4(v263, v264, v265, v266, v267, v268, v269, v270);
  v535[126] = v271;
  v272 = OUTLINED_FUNCTION_20();
  v273 = OUTLINED_FUNCTION_92_4(v272);
  v275 = OUTLINED_FUNCTION_91_3(v273, v274);
  sub_1AFAE64F4(v275, v276, v277, v278, v279, v280, v281, v282);
  v535[127] = v283;
  v284 = OUTLINED_FUNCTION_20();
  v285 = OUTLINED_FUNCTION_92_4(v284);
  v287 = OUTLINED_FUNCTION_91_3(v285, v286);
  sub_1AFAE64F4(v287, v288, v289, v290, v291, v292, v293, v294);
  v535[128] = v295;
  v296 = OUTLINED_FUNCTION_20();
  v297 = OUTLINED_FUNCTION_92_4(v296);
  v299 = OUTLINED_FUNCTION_91_3(v297, v298);
  sub_1AFAE64F4(v299, v300, v301, v302, v303, v304, v305, v306);
  v535[129] = v307;
  v308 = OUTLINED_FUNCTION_20();
  v309 = OUTLINED_FUNCTION_92_4(v308);
  v311 = OUTLINED_FUNCTION_91_3(v309, v310);
  sub_1AFAE64F4(v311, v312, v313, v314, v315, v316, v317, v318);
  v535[130] = v319;
  v320 = OUTLINED_FUNCTION_20();
  v321 = OUTLINED_FUNCTION_92_4(v320);
  v323 = OUTLINED_FUNCTION_91_3(v321, v322);
  sub_1AFAE64F4(v323, v324, v325, v326, v327, v328, v329, v330);
  v535[131] = v331;
  LODWORD(v535[132]) = 1065353216;
  v332 = OUTLINED_FUNCTION_15_87();
  v333 = OUTLINED_FUNCTION_34_38(v332);
  *v334 = 0x3E4CCCCD3DCCCCCDLL;
  GEOLocationCoordinate2DMake(v333, v335);
  sub_1AFAC3274(v336);
  *((_QWORD *)&v535[132] + 1) = v337;
  v338 = OUTLINED_FUNCTION_15_87();
  v339 = OUTLINED_FUNCTION_34_38(v338);
  v341 = OUTLINED_FUNCTION_73_5(v339, v340);
  sub_1AFAC3274(v341);
  *(_QWORD *)&v535[133] = v342;
  v343 = OUTLINED_FUNCTION_15_87();
  v344 = OUTLINED_FUNCTION_34_38(v343);
  v346 = OUTLINED_FUNCTION_52_8(32.0000076, v344, v345);
  sub_1AFAC3274(v346);
  *((_QWORD *)&v535[133] + 1) = v347;
  LODWORD(v535[134]) = -1046478848;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v523 = v348;
  OUTLINED_FUNCTION_7_75();
  v535[135] = v523;
  sub_1B0007FF0();
  OUTLINED_FUNCTION_40_19();
  v524 = v349;
  OUTLINED_FUNCTION_7_75();
  v535[136] = v524;
  LODWORD(v535[137]) = 1061997773;
  *((_QWORD *)&v535[137] + 1) = 10;
  *(_QWORD *)&v535[138] = 0x40A000003FC00000;
  v350 = OUTLINED_FUNCTION_20();
  v351 = OUTLINED_FUNCTION_77_3(v350);
  *(_QWORD *)v352 = 0x4100000041A00000;
  *(_DWORD *)(v352 + 8) = 1084227584;
  GEOLocationCoordinate2DMake(v351, 131072.032);
  sub_1AFB36848(v353, v354, v355, v356, v357, v358, v359, v360);
  v535[139] = v361;
  v535[140] = xmmword_1B003B2E0;
  sub_1B0007FF0();
  Color.simd4.getter();
  v525 = v362;
  swift_release();
  v535[141] = v525;
  memset(&v535[142], 0, 40);
  *((_QWORD *)&v535[144] + 1) = static Array<A>.standard()();
  *(_QWORD *)&v535[145] = static Array<A>.standard()();
  __swift_project_boxed_opaque_existential_1(v526, v526[3]);
  sub_1AFE07788();
  sub_1B000904C();
  if (!v1)
  {
    LOBYTE(v528) = 0;
    sub_1B0008EC0();
    *(_QWORD *)&v535[0] = v363;
    sub_1AFE07968();
    OUTLINED_FUNCTION_9_100();
    BYTE8(v535[0]) = 0;
    sub_1AFBEE438();
    OUTLINED_FUNCTION_9_100();
    *(_QWORD *)&v535[1] = v528;
    *((_QWORD *)&v535[1] + 1) = OUTLINED_FUNCTION_19_65(3);
    OUTLINED_FUNCTION_27_43();
    OUTLINED_FUNCTION_87_4(&qword_1EEE74690, v364, MEMORY[0x1E0DEDD70]);
    OUTLINED_FUNCTION_9_100();
    v535[2] = v528;
    OUTLINED_FUNCTION_9_100();
    v535[3] = v528;
    OUTLINED_FUNCTION_2_113(6);
    LODWORD(v535[4]) = v365;
    OUTLINED_FUNCTION_2_113(7);
    DWORD1(v535[4]) = v366;
    OUTLINED_FUNCTION_27_43();
    OUTLINED_FUNCTION_87_4(&qword_1EEE70F20, v367, MEMORY[0x1E0DEDD40]);
    OUTLINED_FUNCTION_111_4();
    OUTLINED_FUNCTION_9_100();
    *((_QWORD *)&v535[4] + 1) = v528;
    OUTLINED_FUNCTION_2_113(9);
    LODWORD(v535[5]) = v368;
    OUTLINED_FUNCTION_2_113(10);
    DWORD1(v535[5]) = v369;
    OUTLINED_FUNCTION_2_113(11);
    DWORD2(v535[5]) = v370;
    OUTLINED_FUNCTION_2_113(12);
    HIDWORD(v535[5]) = v371;
    OUTLINED_FUNCTION_2_113(13);
    LODWORD(v535[6]) = v372;
    OUTLINED_FUNCTION_2_113(14);
    DWORD1(v535[6]) = v373;
    OUTLINED_FUNCTION_2_113(15);
    DWORD2(v535[6]) = v374;
    OUTLINED_FUNCTION_2_113(16);
    HIDWORD(v535[6]) = v375;
    OUTLINED_FUNCTION_7_96(17);
    *(_QWORD *)&v535[7] = v528;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
    sub_1AFB3A810(&qword_1EEE74698, &qword_1ED1F3C80, MEMORY[0x1E0DEDDC8]);
    OUTLINED_FUNCTION_9_100();
    v535[8] = v528;
    OUTLINED_FUNCTION_4_107(19);
    v535[9] = v528;
    OUTLINED_FUNCTION_2_113(20);
    LODWORD(v535[10]) = v376;
    OUTLINED_FUNCTION_2_113(21);
    DWORD1(v535[10]) = v377;
    OUTLINED_FUNCTION_2_113(22);
    DWORD2(v535[10]) = v378;
    OUTLINED_FUNCTION_2_113(23);
    HIDWORD(v535[10]) = v379;
    OUTLINED_FUNCTION_2_113(24);
    LODWORD(v535[11]) = v380;
    OUTLINED_FUNCTION_7_96(25);
    *((_QWORD *)&v535[11] + 1) = v528;
    OUTLINED_FUNCTION_4_107(26);
    v535[12] = v528;
    OUTLINED_FUNCTION_4_107(27);
    v535[13] = v528;
    OUTLINED_FUNCTION_2_113(28);
    LODWORD(v535[14]) = v381;
    OUTLINED_FUNCTION_2_113(29);
    DWORD1(v535[14]) = v382;
    OUTLINED_FUNCTION_2_113(30);
    DWORD2(v535[14]) = v383;
    OUTLINED_FUNCTION_2_113(31);
    HIDWORD(v535[14]) = v384;
    OUTLINED_FUNCTION_2_113(32);
    LODWORD(v535[15]) = v385;
    OUTLINED_FUNCTION_2_113(33);
    DWORD1(v535[15]) = v386;
    OUTLINED_FUNCTION_2_113(34);
    DWORD2(v535[15]) = v387;
    OUTLINED_FUNCTION_7_96(35);
    *(_QWORD *)&v535[16] = v528;
    OUTLINED_FUNCTION_2_113(36);
    DWORD2(v535[16]) = v388;
    OUTLINED_FUNCTION_2_113(37);
    HIDWORD(v535[16]) = v389;
    OUTLINED_FUNCTION_2_113(38);
    LODWORD(v535[17]) = v390;
    OUTLINED_FUNCTION_4_107(39);
    v535[18] = v528;
    OUTLINED_FUNCTION_4_107(40);
    v535[19] = v528;
    OUTLINED_FUNCTION_2_113(41);
    LODWORD(v535[20]) = v391;
    OUTLINED_FUNCTION_2_113(42);
    DWORD1(v535[20]) = v392;
    OUTLINED_FUNCTION_7_96(43);
    *((_QWORD *)&v535[20] + 1) = v528;
    OUTLINED_FUNCTION_2_113(44);
    LODWORD(v535[21]) = v393;
    OUTLINED_FUNCTION_2_113(45);
    DWORD1(v535[21]) = v394;
    OUTLINED_FUNCTION_4_107(46);
    v535[22] = v528;
    OUTLINED_FUNCTION_4_107(47);
    v535[23] = v528;
    OUTLINED_FUNCTION_31_43(48);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v396 + 489) = v395;
    OUTLINED_FUNCTION_2_113(49);
    DWORD1(v535[24]) = v397;
    OUTLINED_FUNCTION_2_113(50);
    DWORD2(v535[24]) = v398;
    *(_QWORD *)&v535[25] = OUTLINED_FUNCTION_19_65(51);
    *((_QWORD *)&v535[25] + 1) = OUTLINED_FUNCTION_19_65(52);
    OUTLINED_FUNCTION_2_113(53);
    LODWORD(v535[26]) = v399;
    OUTLINED_FUNCTION_2_113(54);
    DWORD1(v535[26]) = v400;
    *((_QWORD *)&v535[26] + 1) = OUTLINED_FUNCTION_19_65(55);
    OUTLINED_FUNCTION_2_113(56);
    LODWORD(v535[27]) = v401;
    OUTLINED_FUNCTION_2_113(57);
    DWORD1(v535[27]) = v402;
    OUTLINED_FUNCTION_2_113(58);
    DWORD2(v535[27]) = v403;
    OUTLINED_FUNCTION_2_113(59);
    HIDWORD(v535[27]) = v404;
    OUTLINED_FUNCTION_7_96(60);
    *(_QWORD *)&v535[28] = v528;
    OUTLINED_FUNCTION_4_107(61);
    v535[29] = v528;
    OUTLINED_FUNCTION_4_107(62);
    v535[30] = v528;
    OUTLINED_FUNCTION_2_113(63);
    LODWORD(v535[31]) = v405;
    OUTLINED_FUNCTION_2_113(64);
    DWORD1(v535[31]) = v406;
    OUTLINED_FUNCTION_2_113(65);
    DWORD2(v535[31]) = v407;
    OUTLINED_FUNCTION_7_96(66);
    *(_QWORD *)&v535[32] = v528;
    OUTLINED_FUNCTION_4_107(67);
    v535[33] = v528;
    OUTLINED_FUNCTION_4_107(68);
    v535[34] = v528;
    OUTLINED_FUNCTION_2_113(69);
    LODWORD(v535[35]) = v408;
    OUTLINED_FUNCTION_2_113(70);
    DWORD1(v535[35]) = v409;
    OUTLINED_FUNCTION_7_96(71);
    *((_QWORD *)&v535[35] + 1) = v528;
    OUTLINED_FUNCTION_4_107(72);
    v535[36] = v528;
    OUTLINED_FUNCTION_4_107(73);
    v535[37] = v528;
    OUTLINED_FUNCTION_2_113(74);
    LODWORD(v535[38]) = v410;
    OUTLINED_FUNCTION_2_113(75);
    DWORD1(v535[38]) = v411;
    OUTLINED_FUNCTION_4_107(76);
    v535[39] = v528;
    OUTLINED_FUNCTION_4_107(77);
    v535[40] = v528;
    OUTLINED_FUNCTION_7_96(78);
    *(_QWORD *)&v535[41] = v528;
    OUTLINED_FUNCTION_7_96(79);
    *((_QWORD *)&v535[41] + 1) = v528;
    OUTLINED_FUNCTION_7_96(80);
    *(_QWORD *)&v535[42] = v528;
    OUTLINED_FUNCTION_4_107(81);
    v535[43] = v528;
    OUTLINED_FUNCTION_2_113(82);
    LODWORD(v535[44]) = v412;
    OUTLINED_FUNCTION_7_96(83);
    *((_QWORD *)&v535[44] + 1) = v528;
    OUTLINED_FUNCTION_7_96(84);
    *(_QWORD *)&v535[45] = v528;
    OUTLINED_FUNCTION_2_113(85);
    DWORD2(v535[45]) = v413;
    OUTLINED_FUNCTION_2_113(86);
    HIDWORD(v535[45]) = v414;
    OUTLINED_FUNCTION_31_43(87);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v416 + 841) = v415;
    *((_QWORD *)&v535[46] + 1) = OUTLINED_FUNCTION_19_65(88);
    OUTLINED_FUNCTION_9_100();
    v535[47] = v528;
    sub_1AFE079A4();
    OUTLINED_FUNCTION_9_100();
    OUTLINED_FUNCTION_56_4();
    OUTLINED_FUNCTION_120_1();
    OUTLINED_FUNCTION_4_15();
    v535[48] = v502;
    v535[49] = v501;
    *(_QWORD *)&v535[50] = v500;
    OUTLINED_FUNCTION_4_107(91);
    v535[51] = v528;
    OUTLINED_FUNCTION_2_113(92);
    LODWORD(v535[52]) = v417;
    OUTLINED_FUNCTION_7_96(93);
    *((_QWORD *)&v535[52] + 1) = v528;
    OUTLINED_FUNCTION_7_96(94);
    *(_QWORD *)&v535[53] = v528;
    OUTLINED_FUNCTION_2_113(95);
    DWORD2(v535[53]) = v418;
    OUTLINED_FUNCTION_2_113(96);
    HIDWORD(v535[53]) = v419;
    OUTLINED_FUNCTION_31_43(97);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v421 + 969) = v420;
    *((_QWORD *)&v535[54] + 1) = OUTLINED_FUNCTION_19_65(98);
    OUTLINED_FUNCTION_9_100();
    v535[55] = v528;
    OUTLINED_FUNCTION_9_100();
    OUTLINED_FUNCTION_56_4();
    OUTLINED_FUNCTION_119_3();
    OUTLINED_FUNCTION_4_15();
    v535[56] = v502;
    v535[57] = v501;
    *(_QWORD *)&v535[58] = v500;
    OUTLINED_FUNCTION_4_107(101);
    v535[59] = v528;
    OUTLINED_FUNCTION_2_113(102);
    LODWORD(v535[60]) = v422;
    OUTLINED_FUNCTION_7_96(103);
    *((_QWORD *)&v535[60] + 1) = v528;
    OUTLINED_FUNCTION_7_96(104);
    *(_QWORD *)&v535[61] = v528;
    OUTLINED_FUNCTION_2_113(105);
    DWORD2(v535[61]) = v423;
    OUTLINED_FUNCTION_2_113(106);
    HIDWORD(v535[61]) = v424;
    OUTLINED_FUNCTION_31_43(107);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v426 + 1097) = v425;
    *((_QWORD *)&v535[62] + 1) = OUTLINED_FUNCTION_19_65(108);
    OUTLINED_FUNCTION_9_100();
    v535[63] = v528;
    OUTLINED_FUNCTION_9_100();
    OUTLINED_FUNCTION_56_4();
    OUTLINED_FUNCTION_117_3();
    OUTLINED_FUNCTION_4_15();
    v535[64] = v502;
    v535[65] = v501;
    *(_QWORD *)&v535[66] = v500;
    OUTLINED_FUNCTION_4_107(111);
    v535[67] = v528;
    OUTLINED_FUNCTION_2_113(112);
    LODWORD(v535[68]) = v427;
    OUTLINED_FUNCTION_7_96(113);
    *((_QWORD *)&v535[68] + 1) = v528;
    OUTLINED_FUNCTION_7_96(114);
    *(_QWORD *)&v535[69] = v528;
    OUTLINED_FUNCTION_2_113(115);
    DWORD2(v535[69]) = v428;
    OUTLINED_FUNCTION_2_113(116);
    HIDWORD(v535[69]) = v429;
    OUTLINED_FUNCTION_31_43(117);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v431 + 1225) = v430;
    *((_QWORD *)&v535[70] + 1) = OUTLINED_FUNCTION_19_65(118);
    OUTLINED_FUNCTION_9_100();
    v535[71] = v528;
    OUTLINED_FUNCTION_9_100();
    OUTLINED_FUNCTION_56_4();
    OUTLINED_FUNCTION_116_3();
    OUTLINED_FUNCTION_4_15();
    v535[72] = v502;
    v535[73] = v501;
    *(_QWORD *)&v535[74] = v500;
    OUTLINED_FUNCTION_4_107(121);
    v535[75] = v528;
    OUTLINED_FUNCTION_2_113(122);
    LODWORD(v535[76]) = v432;
    OUTLINED_FUNCTION_2_113(123);
    DWORD1(v535[76]) = v433;
    OUTLINED_FUNCTION_2_113(124);
    DWORD2(v535[76]) = v434;
    OUTLINED_FUNCTION_2_113(125);
    HIDWORD(v535[76]) = v435;
    OUTLINED_FUNCTION_2_113(126);
    LODWORD(v535[77]) = v436;
    OUTLINED_FUNCTION_31_43(127);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v438 + 1341) = v437;
    OUTLINED_FUNCTION_9_100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)((char *)&v535[77] + 8) = v528;
    *(_OWORD *)((char *)&v535[78] + 8) = v529;
    *((_QWORD *)&v535[79] + 1) = v530;
    OUTLINED_FUNCTION_31_43(129);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v440 + 1385) = v439;
    OUTLINED_FUNCTION_7_96(130);
    *((_QWORD *)&v535[80] + 1) = v528;
    OUTLINED_FUNCTION_2_113(131);
    LODWORD(v535[81]) = v441;
    OUTLINED_FUNCTION_2_113(132);
    DWORD1(v535[81]) = v442;
    OUTLINED_FUNCTION_2_113(133);
    DWORD2(v535[81]) = v443;
    OUTLINED_FUNCTION_4_107(134);
    v535[82] = v528;
    OUTLINED_FUNCTION_4_107(135);
    v535[83] = v528;
    OUTLINED_FUNCTION_2_113(136);
    LODWORD(v535[84]) = v444;
    OUTLINED_FUNCTION_2_113(137);
    DWORD1(v535[84]) = v445;
    OUTLINED_FUNCTION_2_113(138);
    DWORD2(v535[84]) = v446;
    OUTLINED_FUNCTION_7_96(139);
    *(_QWORD *)&v535[85] = v528;
    *((_QWORD *)&v535[85] + 1) = OUTLINED_FUNCTION_19_65(140);
    OUTLINED_FUNCTION_4_107(141);
    v535[86] = v528;
    OUTLINED_FUNCTION_4_107(142);
    v535[87] = v528;
    OUTLINED_FUNCTION_4_107(143);
    v535[88] = v528;
    OUTLINED_FUNCTION_7_96(144);
    *(_QWORD *)&v535[89] = v528;
    OUTLINED_FUNCTION_31_43(145);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v448 + 1537) = v447;
    OUTLINED_FUNCTION_2_113(146);
    HIDWORD(v535[89]) = v449;
    OUTLINED_FUNCTION_2_113(147);
    LODWORD(v535[90]) = v450;
    OUTLINED_FUNCTION_2_113(148);
    DWORD1(v535[90]) = v451;
    OUTLINED_FUNCTION_2_113(149);
    DWORD2(v535[90]) = v452;
    OUTLINED_FUNCTION_7_96(150);
    *(_QWORD *)&v535[91] = v528;
    OUTLINED_FUNCTION_4_107(151);
    v535[92] = v528;
    OUTLINED_FUNCTION_4_107(152);
    v535[93] = v528;
    OUTLINED_FUNCTION_2_113(153);
    LODWORD(v535[94]) = v453;
    OUTLINED_FUNCTION_2_113(154);
    DWORD1(v535[94]) = v454;
    LOBYTE(v528) = -101;
    *((_QWORD *)&v535[94] + 1) = sub_1B0008EA8();
    *(_QWORD *)&v535[95] = v455;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_113(156);
    DWORD2(v535[95]) = v456;
    OUTLINED_FUNCTION_4_107(157);
    v535[96] = v528;
    OUTLINED_FUNCTION_2_113(158);
    LODWORD(v535[97]) = v457;
    OUTLINED_FUNCTION_2_113(159);
    DWORD1(v535[97]) = v458;
    OUTLINED_FUNCTION_2_113(160);
    DWORD2(v535[97]) = v459;
    OUTLINED_FUNCTION_7_96(161);
    *(_QWORD *)&v535[98] = v528;
    OUTLINED_FUNCTION_4_107(162);
    v535[99] = v528;
    OUTLINED_FUNCTION_4_107(163);
    v535[100] = v528;
    OUTLINED_FUNCTION_7_96(164);
    *(_QWORD *)&v535[101] = v528;
    OUTLINED_FUNCTION_2_113(165);
    DWORD2(v535[101]) = v460;
    OUTLINED_FUNCTION_31_43(166);
    OUTLINED_FUNCTION_42_18();
    *(_BYTE *)(v462 + 1733) = v461;
    v527[0] = -89;
    sub_1AFE079E0();
    OUTLINED_FUNCTION_9_100();
    *(_OWORD *)((char *)&v535[101] + 13) = v528;
    *(_QWORD *)((char *)&v535[102] + 13) = v529;
    v533 = -88;
    sub_1AFE07A1C();
    OUTLINED_FUNCTION_9_100();
    if (!BYTE10(v528))
    {
      OUTLINED_FUNCTION_9_64((char *)&v535[103] + 8, &v534);
      sub_1AFE07A58();
      OUTLINED_FUNCTION_9_100();
      v535[109] = v528;
      sub_1AFE07A94();
      OUTLINED_FUNCTION_9_100();
      LOBYTE(v535[110]) = v528;
      OUTLINED_FUNCTION_9_100();
      v535[111] = v528;
      OUTLINED_FUNCTION_2_113(172);
      LODWORD(v535[112]) = v463;
      OUTLINED_FUNCTION_2_113(173);
      DWORD1(v535[112]) = v464;
      OUTLINED_FUNCTION_2_113(174);
      DWORD2(v535[112]) = v465;
      OUTLINED_FUNCTION_2_113(175);
      HIDWORD(v535[112]) = v466;
      OUTLINED_FUNCTION_9_100();
      v535[113] = v528;
      OUTLINED_FUNCTION_31_43(177);
      OUTLINED_FUNCTION_42_18();
      *(_BYTE *)(v468 + 1929) = v467;
      OUTLINED_FUNCTION_2_113(178);
      DWORD1(v535[114]) = v469;
      OUTLINED_FUNCTION_2_113(179);
      DWORD2(v535[114]) = v470;
      OUTLINED_FUNCTION_2_113(180);
      HIDWORD(v535[114]) = v471;
      OUTLINED_FUNCTION_2_113(181);
      LODWORD(v535[115]) = v472;
      OUTLINED_FUNCTION_2_113(182);
      DWORD1(v535[115]) = v473;
      OUTLINED_FUNCTION_2_113(183);
      DWORD2(v535[115]) = v474;
      OUTLINED_FUNCTION_2_113(184);
      HIDWORD(v535[115]) = v475;
      *(_QWORD *)&v535[116] = OUTLINED_FUNCTION_19_65(185);
      OUTLINED_FUNCTION_2_113(186);
      DWORD2(v535[116]) = v476;
      OUTLINED_FUNCTION_7_96(187);
      *(_QWORD *)&v535[117] = v528;
      OUTLINED_FUNCTION_2_113(188);
      DWORD2(v535[117]) = v477;
      OUTLINED_FUNCTION_4_107(189);
      v535[118] = v528;
      OUTLINED_FUNCTION_2_113(190);
      LODWORD(v535[119]) = v478;
      OUTLINED_FUNCTION_2_113(191);
      DWORD1(v535[119]) = v479;
      OUTLINED_FUNCTION_2_113(192);
      DWORD2(v535[119]) = v480;
      *(_QWORD *)&v535[120] = OUTLINED_FUNCTION_19_65(193);
      OUTLINED_FUNCTION_2_113(194);
      DWORD2(v535[120]) = v481;
      OUTLINED_FUNCTION_4_107(195);
      v535[121] = v528;
      OUTLINED_FUNCTION_2_113(196);
      LODWORD(v535[122]) = v482;
      OUTLINED_FUNCTION_7_96(197);
      *((_QWORD *)&v535[122] + 1) = v528;
      OUTLINED_FUNCTION_2_113(198);
      LODWORD(v535[123]) = v483;
      OUTLINED_FUNCTION_2_113(199);
      DWORD1(v535[123]) = v484;
      OUTLINED_FUNCTION_2_113(200);
      DWORD2(v535[123]) = v485;
      OUTLINED_FUNCTION_2_113(201);
      HIDWORD(v535[123]) = v486;
      OUTLINED_FUNCTION_2_113(202);
      LODWORD(v535[124]) = v487;
      OUTLINED_FUNCTION_2_113(203);
      DWORD1(v535[124]) = v488;
      OUTLINED_FUNCTION_2_113(204);
      DWORD2(v535[124]) = v489;
      OUTLINED_FUNCTION_7_96(205);
      *(_QWORD *)&v535[125] = v528;
      OUTLINED_FUNCTION_7_96(206);
      *((_QWORD *)&v535[125] + 1) = v528;
      OUTLINED_FUNCTION_4_107(207);
      v535[126] = v528;
      OUTLINED_FUNCTION_4_107(208);
      v535[127] = v528;
      OUTLINED_FUNCTION_4_107(209);
      v535[128] = v528;
      OUTLINED_FUNCTION_4_107(210);
      v535[129] = v528;
      OUTLINED_FUNCTION_4_107(211);
      v535[130] = v528;
      OUTLINED_FUNCTION_4_107(212);
      v535[131] = v528;
      OUTLINED_FUNCTION_2_113(213);
      LODWORD(v535[132]) = v490;
      OUTLINED_FUNCTION_7_96(214);
      *((_QWORD *)&v535[132] + 1) = v528;
      OUTLINED_FUNCTION_7_96(215);
      *(_QWORD *)&v535[133] = v528;
      OUTLINED_FUNCTION_7_96(216);
      *((_QWORD *)&v535[133] + 1) = v528;
      OUTLINED_FUNCTION_2_113(217);
      LODWORD(v535[134]) = v491;
      OUTLINED_FUNCTION_4_107(218);
      v535[135] = v528;
      OUTLINED_FUNCTION_4_107(219);
      v535[136] = v528;
      OUTLINED_FUNCTION_2_113(220);
      LODWORD(v535[137]) = v492;
      *((_QWORD *)&v535[137] + 1) = OUTLINED_FUNCTION_19_65(221);
      OUTLINED_FUNCTION_2_113(222);
      LODWORD(v535[138]) = v493;
      OUTLINED_FUNCTION_2_113(223);
      DWORD1(v535[138]) = v494;
      OUTLINED_FUNCTION_9_100();
      v535[139] = v528;
      OUTLINED_FUNCTION_2_113(225);
      LODWORD(v535[140]) = v495;
      OUTLINED_FUNCTION_2_113(226);
      DWORD1(v535[140]) = v496;
      OUTLINED_FUNCTION_2_113(227);
      DWORD2(v535[140]) = v497;
      OUTLINED_FUNCTION_2_113(228);
      HIDWORD(v535[140]) = v498;
      OUTLINED_FUNCTION_4_107(229);
      v535[141] = v528;
      *(_QWORD *)&v535[142] = OUTLINED_FUNCTION_19_65(230);
      *((_QWORD *)&v535[142] + 1) = OUTLINED_FUNCTION_19_65(231);
      *(_QWORD *)&v535[143] = OUTLINED_FUNCTION_19_65(232);
      *((_QWORD *)&v535[143] + 1) = OUTLINED_FUNCTION_19_65(233);
      *(_QWORD *)&v535[144] = OUTLINED_FUNCTION_19_65(234);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74668);
      v527[0] = -21;
      sub_1AFE07AD0(&qword_1EEE746C8, (uint64_t (*)(void))sub_1AFE07B38, MEMORY[0x1E0DEAF40]);
      OUTLINED_FUNCTION_111_4();
      OUTLINED_FUNCTION_9_100();
      *((_QWORD *)&v535[144] + 1) = v528;
      swift_bridgeObjectRelease();
      v531 = -20;
      OUTLINED_FUNCTION_9_100();
      OUTLINED_FUNCTION_104_3();
      *(_QWORD *)&v535[145] = v532;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_106_2(v527);
      memcpy(v503, v535, 0x918uLL);
      sub_1AFCCB3FC((uint64_t)v527);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v526);
      OUTLINED_FUNCTION_106_2(&v528);
      return sub_1AFCCB4E4((uint64_t)&v528);
    }
    OUTLINED_FUNCTION_104_3();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v526);
  OUTLINED_FUNCTION_120_1();
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_119_3();
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_117_3();
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_116_3();
  OUTLINED_FUNCTION_4_15();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_15();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE075B4(uint64_t a1)
{
  return WeatherConditionBackgroundConfig.init(from:)(a1);
}

#error "1AFE075D0: call analysis failed (funcsize=5)"

uint64_t sub_1AFE075E8()
{
  sub_1B0009004();
  WeatherConditionBackgroundConfig.hash(into:)();
  return sub_1B0009040();
}

unint64_t sub_1AFE07620()
{
  unint64_t result;

  result = qword_1EEE745D0;
  if (!qword_1EEE745D0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003B0C0, &type metadata for WeatherConditionBackgroundConfig.Layers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE745D0);
  }
  return result;
}

unint64_t sub_1AFE0765C()
{
  unint64_t result;

  result = qword_1EEE745D8;
  if (!qword_1EEE745D8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CloudLayers, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers);
    atomic_store(result, (unint64_t *)&qword_1EEE745D8);
  }
  return result;
}

unint64_t sub_1AFE07698()
{
  unint64_t result;

  result = qword_1EEE745E0;
  if (!qword_1EEE745E0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CollisionType, &type metadata for WeatherConditionBackgroundConfig.Layers.CollisionType);
    atomic_store(result, (unint64_t *)&qword_1EEE745E0);
  }
  return result;
}

unint64_t sub_1AFE076D4()
{
  unint64_t result;

  result = qword_1EEE745F0;
  if (!qword_1EEE745F0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CloudLayers, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers);
    atomic_store(result, (unint64_t *)&qword_1EEE745F0);
  }
  return result;
}

unint64_t sub_1AFE07710()
{
  unint64_t result;

  result = qword_1EEE745F8;
  if (!qword_1EEE745F8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CollisionType, &type metadata for WeatherConditionBackgroundConfig.Layers.CollisionType);
    atomic_store(result, (unint64_t *)&qword_1EEE745F8);
  }
  return result;
}

unint64_t sub_1AFE0774C()
{
  unint64_t result;

  result = qword_1EEE74608;
  if (!qword_1EEE74608)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003B070, &type metadata for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74608);
  }
  return result;
}

unint64_t sub_1AFE07788()
{
  unint64_t result;

  result = qword_1EEE74620;
  if (!qword_1EEE74620)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003B020, &type metadata for WeatherConditionBackgroundConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74620);
  }
  return result;
}

unint64_t sub_1AFE077C4()
{
  unint64_t result;

  result = qword_1EEE74628;
  if (!qword_1EEE74628)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for TargetWindowSizeClass, &type metadata for TargetWindowSizeClass);
    atomic_store(result, (unint64_t *)&qword_1EEE74628);
  }
  return result;
}

unint64_t sub_1AFE07800()
{
  unint64_t result;

  result = qword_1EEE74640;
  if (!qword_1EEE74640)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for CloudAssetType, &type metadata for CloudAssetType);
    atomic_store(result, (unint64_t *)&qword_1EEE74640);
  }
  return result;
}

unint64_t sub_1AFE0783C()
{
  unint64_t result;

  result = qword_1EEE74648;
  if (!qword_1EEE74648)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers, &type metadata for WeatherConditionBackgroundConfig.Layers);
    atomic_store(result, (unint64_t *)&qword_1EEE74648);
  }
  return result;
}

unint64_t sub_1AFE07878()
{
  unint64_t result;

  result = qword_1EEE74650;
  if (!qword_1EEE74650)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.LightningConfig, &type metadata for WeatherConditionBackgroundConfig.LightningConfig);
    atomic_store(result, (unint64_t *)&qword_1EEE74650);
  }
  return result;
}

unint64_t sub_1AFE078B4()
{
  unint64_t result;

  result = qword_1EEE74658;
  if (!qword_1EEE74658)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for HazeEffect, &type metadata for HazeEffect);
    atomic_store(result, (unint64_t *)&qword_1EEE74658);
  }
  return result;
}

unint64_t sub_1AFE078F0()
{
  unint64_t result;

  result = qword_1EEE74660;
  if (!qword_1EEE74660)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for SkyGradientTableType, &type metadata for SkyGradientTableType);
    atomic_store(result, (unint64_t *)&qword_1EEE74660);
  }
  return result;
}

unint64_t sub_1AFE0792C()
{
  unint64_t result;

  result = qword_1EEE74678;
  if (!qword_1EEE74678)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionLightingKeyframe, &type metadata for WeatherConditionLightingKeyframe);
    atomic_store(result, (unint64_t *)&qword_1EEE74678);
  }
  return result;
}

unint64_t sub_1AFE07968()
{
  unint64_t result;

  result = qword_1EEE74688;
  if (!qword_1EEE74688)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for TargetWindowSizeClass, &type metadata for TargetWindowSizeClass);
    atomic_store(result, (unint64_t *)&qword_1EEE74688);
  }
  return result;
}

unint64_t sub_1AFE079A4()
{
  unint64_t result;

  result = qword_1EEE746A0;
  if (!qword_1EEE746A0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for CloudAssetType, &type metadata for CloudAssetType);
    atomic_store(result, (unint64_t *)&qword_1EEE746A0);
  }
  return result;
}

unint64_t sub_1AFE079E0()
{
  unint64_t result;

  result = qword_1EEE746A8;
  if (!qword_1EEE746A8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers, &type metadata for WeatherConditionBackgroundConfig.Layers);
    atomic_store(result, (unint64_t *)&qword_1EEE746A8);
  }
  return result;
}

unint64_t sub_1AFE07A1C()
{
  unint64_t result;

  result = qword_1EEE746B0;
  if (!qword_1EEE746B0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.LightningConfig, &type metadata for WeatherConditionBackgroundConfig.LightningConfig);
    atomic_store(result, (unint64_t *)&qword_1EEE746B0);
  }
  return result;
}

unint64_t sub_1AFE07A58()
{
  unint64_t result;

  result = qword_1EEE746B8;
  if (!qword_1EEE746B8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for HazeEffect, &type metadata for HazeEffect);
    atomic_store(result, (unint64_t *)&qword_1EEE746B8);
  }
  return result;
}

unint64_t sub_1AFE07A94()
{
  unint64_t result;

  result = qword_1EEE746C0;
  if (!qword_1EEE746C0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for SkyGradientTableType, &type metadata for SkyGradientTableType);
    atomic_store(result, (unint64_t *)&qword_1EEE746C0);
  }
  return result;
}

uint64_t sub_1AFE07AD0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74668);
    v8 = a2();
    result = MEMORY[0x1B5E03BF4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE07B38()
{
  unint64_t result;

  result = qword_1EEE746D0;
  if (!qword_1EEE746D0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionLightingKeyframe, &type metadata for WeatherConditionLightingKeyframe);
    atomic_store(result, (unint64_t *)&qword_1EEE746D0);
  }
  return result;
}

unint64_t sub_1AFE07B78()
{
  unint64_t result;

  result = qword_1EEE746D8;
  if (!qword_1EEE746D8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CloudLayers, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers);
    atomic_store(result, (unint64_t *)&qword_1EEE746D8);
  }
  return result;
}

unint64_t sub_1AFE07BB8()
{
  unint64_t result;

  result = qword_1EEE746E0;
  if (!qword_1EEE746E0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CollisionType, &type metadata for WeatherConditionBackgroundConfig.Layers.CollisionType);
    atomic_store(result, (unint64_t *)&qword_1EEE746E0);
  }
  return result;
}

uint64_t sub_1AFE07BF4()
{
  return sub_1AFB3A810(&qword_1EEE746E8, &qword_1EEE746F0, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1AFE07C24()
{
  unint64_t result;

  result = qword_1EEE746F8;
  if (!qword_1EEE746F8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers, &type metadata for WeatherConditionBackgroundConfig.Layers);
    atomic_store(result, (unint64_t *)&qword_1EEE746F8);
  }
  return result;
}

unint64_t sub_1AFE07C64()
{
  unint64_t result;

  result = qword_1EEE74700;
  if (!qword_1EEE74700)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.LightningConfig, &type metadata for WeatherConditionBackgroundConfig.LightningConfig);
    atomic_store(result, (unint64_t *)&qword_1EEE74700);
  }
  return result;
}

unint64_t sub_1AFE07CA4()
{
  unint64_t result;

  result = qword_1EEE74708;
  if (!qword_1EEE74708)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig, &type metadata for WeatherConditionBackgroundConfig);
    atomic_store(result, (unint64_t *)&qword_1EEE74708);
  }
  return result;
}

uint64_t initializeWithCopy for WeatherConditionBackgroundConfig(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  v8 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v8;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v9 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v9;
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v10 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v10;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  v11 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v11;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v12 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v12;
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v13 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v13;
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_DWORD *)(a1 + 960) = *(_DWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_DWORD *)(a1 + 1088) = *(_DWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_BYTE *)(a1 + 1120) = *(_BYTE *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_DWORD *)(a1 + 1232) = *(_DWORD *)(a2 + 1232);
  *(_BYTE *)(a1 + 1236) = *(_BYTE *)(a2 + 1236);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_BYTE *)(a1 + 1280) = *(_BYTE *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_DWORD *)(a1 + 1304) = *(_DWORD *)(a2 + 1304);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_DWORD *)(a1 + 1352) = *(_DWORD *)(a2 + 1352);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
  *(_OWORD *)(a1 + 1436) = *(_OWORD *)(a2 + 1436);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_DWORD *)(a1 + 1528) = *(_DWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_DWORD *)(a1 + 1560) = *(_DWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_DWORD *)(a1 + 1624) = *(_DWORD *)(a2 + 1624);
  *(_BYTE *)(a1 + 1628) = *(_BYTE *)(a2 + 1628);
  *(_OWORD *)(a1 + 1629) = *(_OWORD *)(a2 + 1629);
  v14 = *(_OWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1645) = *(_QWORD *)(a2 + 1645);
  *(_OWORD *)(a1 + 1600) = v14;
  memcpy((void *)(a1 + 1656), (const void *)(a2 + 1656), 0x58uLL);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(_BYTE *)(a1 + 1760) = *(_BYTE *)(a2 + 1760);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_BYTE *)(a1 + 1824) = *(_BYTE *)(a2 + 1824);
  *(_OWORD *)(a1 + 1828) = *(_OWORD *)(a2 + 1828);
  *(_DWORD *)(a1 + 1844) = *(_DWORD *)(a2 + 1844);
  *(_QWORD *)(a1 + 1848) = *(_QWORD *)(a2 + 1848);
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_DWORD *)(a1 + 1864) = *(_DWORD *)(a2 + 1864);
  *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
  *(_DWORD *)(a1 + 1880) = *(_DWORD *)(a2 + 1880);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a2 + 1888);
  *(_QWORD *)(a1 + 1904) = *(_QWORD *)(a2 + 1904);
  *(_DWORD *)(a1 + 1912) = *(_DWORD *)(a2 + 1912);
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
  *(_DWORD *)(a1 + 1928) = *(_DWORD *)(a2 + 1928);
  *(_OWORD *)(a1 + 1936) = *(_OWORD *)(a2 + 1936);
  *(_DWORD *)(a1 + 1952) = *(_DWORD *)(a2 + 1952);
  *(_QWORD *)(a1 + 1960) = *(_QWORD *)(a2 + 1960);
  *(_OWORD *)(a1 + 1968) = *(_OWORD *)(a2 + 1968);
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
  *(_DWORD *)(a1 + 1992) = *(_DWORD *)(a2 + 1992);
  *(_OWORD *)(a1 + 2000) = *(_OWORD *)(a2 + 2000);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2032) = *(_OWORD *)(a2 + 2032);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a2 + 2064);
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
  *(_OWORD *)(a1 + 2096) = *(_OWORD *)(a2 + 2096);
  *(_DWORD *)(a1 + 2112) = *(_DWORD *)(a2 + 2112);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_OWORD *)(a1 + 2128) = *(_OWORD *)(a2 + 2128);
  *(_DWORD *)(a1 + 2144) = *(_DWORD *)(a2 + 2144);
  *(_OWORD *)(a1 + 2160) = *(_OWORD *)(a2 + 2160);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a2 + 2192);
  *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
  *(_QWORD *)(a1 + 2208) = *(_QWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
  *(_OWORD *)(a1 + 2240) = *(_OWORD *)(a2 + 2240);
  *(_OWORD *)(a1 + 2256) = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = *(_OWORD *)(a2 + 2288);
  *(_QWORD *)(a1 + 2304) = *(_QWORD *)(a2 + 2304);
  *(_QWORD *)(a1 + 2312) = *(_QWORD *)(a2 + 2312);
  *(_QWORD *)(a1 + 2320) = *(_QWORD *)(a2 + 2320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WeatherConditionBackgroundConfig(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;

  v4 = (_BYTE *)(a2 + 1629);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  *(_DWORD *)(a1 + 340) = *(_DWORD *)(a2 + 340);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  *(_DWORD *)(a1 + 420) = *(_DWORD *)(a2 + 420);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_DWORD *)(a1 + 436) = *(_DWORD *)(a2 + 436);
  *(_DWORD *)(a1 + 440) = *(_DWORD *)(a2 + 440);
  *(_DWORD *)(a1 + 444) = *(_DWORD *)(a2 + 444);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_DWORD *)(a1 + 496) = *(_DWORD *)(a2 + 496);
  *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
  *(_DWORD *)(a1 + 564) = *(_DWORD *)(a2 + 564);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_DWORD *)(a1 + 608) = *(_DWORD *)(a2 + 608);
  *(_DWORD *)(a1 + 612) = *(_DWORD *)(a2 + 612);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(_DWORD *)(a1 + 732) = *(_DWORD *)(a2 + 732);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_DWORD *)(a1 + 856) = *(_DWORD *)(a2 + 856);
  *(_DWORD *)(a1 + 860) = *(_DWORD *)(a2 + 860);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_DWORD *)(a1 + 960) = *(_DWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_DWORD *)(a1 + 984) = *(_DWORD *)(a2 + 984);
  *(_DWORD *)(a1 + 988) = *(_DWORD *)(a2 + 988);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_DWORD *)(a1 + 1088) = *(_DWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_DWORD *)(a1 + 1112) = *(_DWORD *)(a2 + 1112);
  *(_DWORD *)(a1 + 1116) = *(_DWORD *)(a2 + 1116);
  *(_BYTE *)(a1 + 1120) = *(_BYTE *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_DWORD *)(a1 + 1216) = *(_DWORD *)(a2 + 1216);
  *(_DWORD *)(a1 + 1220) = *(_DWORD *)(a2 + 1220);
  *(_DWORD *)(a1 + 1224) = *(_DWORD *)(a2 + 1224);
  *(_DWORD *)(a1 + 1228) = *(_DWORD *)(a2 + 1228);
  *(_DWORD *)(a1 + 1232) = *(_DWORD *)(a2 + 1232);
  *(_BYTE *)(a1 + 1236) = *(_BYTE *)(a2 + 1236);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_BYTE *)(a1 + 1280) = *(_BYTE *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_DWORD *)(a1 + 1296) = *(_DWORD *)(a2 + 1296);
  *(_DWORD *)(a1 + 1300) = *(_DWORD *)(a2 + 1300);
  *(_DWORD *)(a1 + 1304) = *(_DWORD *)(a2 + 1304);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_DWORD *)(a1 + 1344) = *(_DWORD *)(a2 + 1344);
  *(_DWORD *)(a1 + 1348) = *(_DWORD *)(a2 + 1348);
  *(_DWORD *)(a1 + 1352) = *(_DWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
  *(_DWORD *)(a1 + 1436) = *(_DWORD *)(a2 + 1436);
  *(_DWORD *)(a1 + 1440) = *(_DWORD *)(a2 + 1440);
  *(_DWORD *)(a1 + 1444) = *(_DWORD *)(a2 + 1444);
  *(_DWORD *)(a1 + 1448) = *(_DWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_DWORD *)(a1 + 1504) = *(_DWORD *)(a2 + 1504);
  *(_DWORD *)(a1 + 1508) = *(_DWORD *)(a2 + 1508);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 1528) = *(_DWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_DWORD *)(a1 + 1552) = *(_DWORD *)(a2 + 1552);
  *(_DWORD *)(a1 + 1556) = *(_DWORD *)(a2 + 1556);
  *(_DWORD *)(a1 + 1560) = *(_DWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_DWORD *)(a1 + 1624) = *(_DWORD *)(a2 + 1624);
  *(_BYTE *)(a1 + 1628) = *(_BYTE *)(a2 + 1628);
  *(_BYTE *)(a1 + 1629) = *(_BYTE *)(a2 + 1629);
  *(_BYTE *)(a1 + 1630) = v4[1];
  *(_BYTE *)(a1 + 1631) = v4[2];
  *(_BYTE *)(a1 + 1632) = v4[3];
  *(_BYTE *)(a1 + 1633) = v4[4];
  *(_BYTE *)(a1 + 1634) = v4[5];
  *(_BYTE *)(a1 + 1635) = v4[6];
  *(_BYTE *)(a1 + 1636) = v4[7];
  *(_BYTE *)(a1 + 1637) = v4[8];
  *(_BYTE *)(a1 + 1638) = v4[9];
  *(_BYTE *)(a1 + 1639) = v4[10];
  *(_BYTE *)(a1 + 1640) = v4[11];
  *(_BYTE *)(a1 + 1641) = v4[12];
  *(_BYTE *)(a1 + 1642) = v4[13];
  *(_BYTE *)(a1 + 1643) = v4[14];
  *(_BYTE *)(a1 + 1644) = v4[15];
  *(_BYTE *)(a1 + 1645) = v4[16];
  *(_BYTE *)(a1 + 1646) = v4[17];
  *(_BYTE *)(a1 + 1647) = v4[18];
  *(_BYTE *)(a1 + 1648) = v4[19];
  *(_BYTE *)(a1 + 1649) = v4[20];
  *(_BYTE *)(a1 + 1650) = v4[21];
  *(_BYTE *)(a1 + 1651) = v4[22];
  *(_BYTE *)(a1 + 1652) = *(_BYTE *)(a2 + 1652);
  *(_BYTE *)(a1 + 1656) = v4[27];
  *(_DWORD *)(a1 + 1660) = *(_DWORD *)(a2 + 1660);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  *(_DWORD *)(a1 + 1680) = *(_DWORD *)(a2 + 1680);
  *(_DWORD *)(a1 + 1684) = *(_DWORD *)(a2 + 1684);
  *(_DWORD *)(a1 + 1688) = *(_DWORD *)(a2 + 1688);
  *(_DWORD *)(a1 + 1692) = *(_DWORD *)(a2 + 1692);
  *(_DWORD *)(a1 + 1696) = *(_DWORD *)(a2 + 1696);
  *(_DWORD *)(a1 + 1700) = *(_DWORD *)(a2 + 1700);
  *(_DWORD *)(a1 + 1704) = *(_DWORD *)(a2 + 1704);
  *(_DWORD *)(a1 + 1708) = *(_DWORD *)(a2 + 1708);
  *(_DWORD *)(a1 + 1712) = *(_DWORD *)(a2 + 1712);
  *(_DWORD *)(a1 + 1716) = *(_DWORD *)(a2 + 1716);
  *(_DWORD *)(a1 + 1720) = *(_DWORD *)(a2 + 1720);
  *(_DWORD *)(a1 + 1724) = *(_DWORD *)(a2 + 1724);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  *(_DWORD *)(a1 + 1736) = *(_DWORD *)(a2 + 1736);
  *(_DWORD *)(a1 + 1740) = *(_DWORD *)(a2 + 1740);
  *(_DWORD *)(a1 + 1744) = *(_DWORD *)(a2 + 1744);
  *(_DWORD *)(a1 + 1748) = *(_DWORD *)(a2 + 1748);
  *(_DWORD *)(a1 + 1752) = *(_DWORD *)(a2 + 1752);
  *(_DWORD *)(a1 + 1756) = *(_DWORD *)(a2 + 1756);
  *(_BYTE *)(a1 + 1760) = *(_BYTE *)(a2 + 1760);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_DWORD *)(a1 + 1792) = *(_DWORD *)(a2 + 1792);
  *(_DWORD *)(a1 + 1796) = *(_DWORD *)(a2 + 1796);
  *(_DWORD *)(a1 + 1800) = *(_DWORD *)(a2 + 1800);
  *(_DWORD *)(a1 + 1804) = *(_DWORD *)(a2 + 1804);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_BYTE *)(a1 + 1824) = v4[195];
  *(_DWORD *)(a1 + 1828) = *(_DWORD *)(a2 + 1828);
  *(_DWORD *)(a1 + 1832) = *(_DWORD *)(a2 + 1832);
  *(_DWORD *)(a1 + 1836) = *(_DWORD *)(a2 + 1836);
  *(_DWORD *)(a1 + 1840) = *(_DWORD *)(a2 + 1840);
  *(_DWORD *)(a1 + 1844) = *(_DWORD *)(a2 + 1844);
  *(_DWORD *)(a1 + 1848) = *(_DWORD *)(a2 + 1848);
  *(_DWORD *)(a1 + 1852) = *(_DWORD *)(a2 + 1852);
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_DWORD *)(a1 + 1864) = *(_DWORD *)(a2 + 1864);
  *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
  *(_DWORD *)(a1 + 1880) = *(_DWORD *)(a2 + 1880);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a2 + 1888);
  *(_DWORD *)(a1 + 1904) = *(_DWORD *)(a2 + 1904);
  *(_DWORD *)(a1 + 1908) = *(_DWORD *)(a2 + 1908);
  *(_DWORD *)(a1 + 1912) = *(_DWORD *)(a2 + 1912);
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
  *(_DWORD *)(a1 + 1928) = *(_DWORD *)(a2 + 1928);
  *(_OWORD *)(a1 + 1936) = *(_OWORD *)(a2 + 1936);
  *(_DWORD *)(a1 + 1952) = *(_DWORD *)(a2 + 1952);
  *(_QWORD *)(a1 + 1960) = *(_QWORD *)(a2 + 1960);
  *(_DWORD *)(a1 + 1968) = *(_DWORD *)(a2 + 1968);
  *(_DWORD *)(a1 + 1972) = *(_DWORD *)(a2 + 1972);
  *(_DWORD *)(a1 + 1976) = *(_DWORD *)(a2 + 1976);
  *(_DWORD *)(a1 + 1980) = *(_DWORD *)(a2 + 1980);
  *(_DWORD *)(a1 + 1984) = *(_DWORD *)(a2 + 1984);
  *(_DWORD *)(a1 + 1988) = *(_DWORD *)(a2 + 1988);
  *(_DWORD *)(a1 + 1992) = *(_DWORD *)(a2 + 1992);
  *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
  *(_QWORD *)(a1 + 2008) = *(_QWORD *)(a2 + 2008);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2032) = *(_OWORD *)(a2 + 2032);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a2 + 2064);
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
  *(_OWORD *)(a1 + 2096) = *(_OWORD *)(a2 + 2096);
  *(_DWORD *)(a1 + 2112) = *(_DWORD *)(a2 + 2112);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_QWORD *)(a1 + 2128) = *(_QWORD *)(a2 + 2128);
  *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
  *(_DWORD *)(a1 + 2144) = *(_DWORD *)(a2 + 2144);
  *(_OWORD *)(a1 + 2160) = *(_OWORD *)(a2 + 2160);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a2 + 2192);
  *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
  *(_DWORD *)(a1 + 2208) = *(_DWORD *)(a2 + 2208);
  *(_DWORD *)(a1 + 2212) = *(_DWORD *)(a2 + 2212);
  *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
  *(_DWORD *)(a1 + 2240) = *(_DWORD *)(a2 + 2240);
  *(_DWORD *)(a1 + 2244) = *(_DWORD *)(a2 + 2244);
  *(_DWORD *)(a1 + 2248) = *(_DWORD *)(a2 + 2248);
  *(_DWORD *)(a1 + 2252) = *(_DWORD *)(a2 + 2252);
  *(_OWORD *)(a1 + 2256) = *(_OWORD *)(a2 + 2256);
  *(_QWORD *)(a1 + 2272) = *(_QWORD *)(a2 + 2272);
  *(_QWORD *)(a1 + 2280) = *(_QWORD *)(a2 + 2280);
  *(_QWORD *)(a1 + 2288) = *(_QWORD *)(a2 + 2288);
  *(_QWORD *)(a1 + 2296) = *(_QWORD *)(a2 + 2296);
  *(_QWORD *)(a1 + 2304) = *(_QWORD *)(a2 + 2304);
  *(_QWORD *)(a1 + 2312) = *(_QWORD *)(a2 + 2312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2320) = *(_QWORD *)(a2 + 2320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WeatherConditionBackgroundConfig(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = (_OWORD *)(a1 + 1436);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a2 + 1629;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)&v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_QWORD *)&v9 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v9;
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  v10 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v10;
  *(_QWORD *)&v10 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v10;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v11 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v11;
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v12 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v12;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  v13 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v13;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v14 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v14;
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  v15 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v15;
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_DWORD *)(a1 + 960) = *(_DWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_DWORD *)(a1 + 1088) = *(_DWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_BYTE *)(a1 + 1120) = *(_BYTE *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_DWORD *)(a1 + 1232) = *(_DWORD *)(a2 + 1232);
  *(_BYTE *)(a1 + 1236) = *(_BYTE *)(a2 + 1236);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_BYTE *)(a1 + 1280) = *(_BYTE *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_DWORD *)(a1 + 1304) = *(_DWORD *)(a2 + 1304);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_DWORD *)(a1 + 1352) = *(_DWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
  *v4 = *(_OWORD *)(a2 + 1436);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 1528) = *(_DWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_DWORD *)(a1 + 1560) = *(_DWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_DWORD *)(a1 + 1624) = *(_DWORD *)(a2 + 1624);
  *(_BYTE *)(a1 + 1628) = *(_BYTE *)(a2 + 1628);
  *(_BYTE *)(a1 + 1629) = *(_BYTE *)(a2 + 1629);
  *(_BYTE *)(a1 + 1630) = *(_BYTE *)(v5 + 1);
  *(_BYTE *)(a1 + 1631) = *(_BYTE *)(v5 + 2);
  *(_BYTE *)(a1 + 1632) = *(_BYTE *)(v5 + 3);
  *(_BYTE *)(a1 + 1633) = *(_BYTE *)(v5 + 4);
  *(_BYTE *)(a1 + 1634) = *(_BYTE *)(v5 + 5);
  *(_BYTE *)(a1 + 1635) = *(_BYTE *)(v5 + 6);
  *(_BYTE *)(a1 + 1636) = *(_BYTE *)(v5 + 7);
  *(_BYTE *)(a1 + 1637) = *(_BYTE *)(v5 + 8);
  *(_BYTE *)(a1 + 1638) = *(_BYTE *)(v5 + 9);
  *(_BYTE *)(a1 + 1639) = *(_BYTE *)(v5 + 10);
  *(_BYTE *)(a1 + 1640) = *(_BYTE *)(v5 + 11);
  *(_BYTE *)(a1 + 1641) = *(_BYTE *)(v5 + 12);
  *(_BYTE *)(a1 + 1642) = *(_BYTE *)(v5 + 13);
  *(_BYTE *)(a1 + 1643) = *(_BYTE *)(v5 + 14);
  *(_BYTE *)(a1 + 1644) = *(_BYTE *)(v5 + 15);
  *(_BYTE *)(a1 + 1645) = *(_BYTE *)(v5 + 16);
  *(_BYTE *)(a1 + 1646) = *(_BYTE *)(v5 + 17);
  *(_BYTE *)(a1 + 1647) = *(_BYTE *)(v5 + 18);
  *(_BYTE *)(a1 + 1648) = *(_BYTE *)(v5 + 19);
  *(_BYTE *)(a1 + 1649) = *(_BYTE *)(v5 + 20);
  *(_BYTE *)(a1 + 1650) = *(_BYTE *)(v5 + 21);
  *(_BYTE *)(a1 + 1651) = *(_BYTE *)(v5 + 22);
  *(_BYTE *)(a1 + 1652) = *(_BYTE *)(a2 + 1652);
  *(_BYTE *)(a1 + 1656) = *(_BYTE *)(v5 + 27);
  *(_DWORD *)(a1 + 1660) = *(_DWORD *)(a2 + 1660);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  *(_OWORD *)(a1 + 1680) = *(_OWORD *)(a2 + 1680);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1736) = *(_OWORD *)(v5 + 107);
  *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
  *(_BYTE *)(a1 + 1760) = *(_BYTE *)(a2 + 1760);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_BYTE *)(a1 + 1824) = *(_BYTE *)(v5 + 195);
  *(_OWORD *)(a1 + 1828) = *(_OWORD *)(v5 + 199);
  *(_DWORD *)(a1 + 1844) = *(_DWORD *)(a2 + 1844);
  *(_QWORD *)(a1 + 1848) = *(_QWORD *)(a2 + 1848);
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_DWORD *)(a1 + 1864) = *(_DWORD *)(a2 + 1864);
  *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
  *(_DWORD *)(a1 + 1880) = *(_DWORD *)(a2 + 1880);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a2 + 1888);
  *(_QWORD *)(a1 + 1904) = *(_QWORD *)(a2 + 1904);
  *(_DWORD *)(a1 + 1912) = *(_DWORD *)(a2 + 1912);
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
  *(_DWORD *)(a1 + 1928) = *(_DWORD *)(a2 + 1928);
  *(_OWORD *)(a1 + 1936) = *(_OWORD *)(a2 + 1936);
  *(_DWORD *)(a1 + 1952) = *(_DWORD *)(a2 + 1952);
  *(_QWORD *)(a1 + 1960) = *(_QWORD *)(a2 + 1960);
  *(_OWORD *)(a1 + 1968) = *(_OWORD *)(a2 + 1968);
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
  *(_DWORD *)(a1 + 1992) = *(_DWORD *)(a2 + 1992);
  *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
  *(_QWORD *)(a1 + 2008) = *(_QWORD *)(a2 + 2008);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2032) = *(_OWORD *)(a2 + 2032);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a2 + 2064);
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
  *(_OWORD *)(a1 + 2096) = *(_OWORD *)(a2 + 2096);
  *(_DWORD *)(a1 + 2112) = *(_DWORD *)(a2 + 2112);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_QWORD *)(a1 + 2128) = *(_QWORD *)(a2 + 2128);
  *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
  *(_DWORD *)(a1 + 2144) = *(_DWORD *)(a2 + 2144);
  *(_OWORD *)(a1 + 2160) = *(_OWORD *)(a2 + 2160);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a2 + 2192);
  *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
  *(_QWORD *)(a1 + 2208) = *(_QWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
  *(_OWORD *)(a1 + 2240) = *(_OWORD *)(a2 + 2240);
  *(_OWORD *)(a1 + 2256) = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = *(_OWORD *)(a2 + 2288);
  *(_QWORD *)(a1 + 2304) = *(_QWORD *)(a2 + 2304);
  *(_QWORD *)(a1 + 2312) = *(_QWORD *)(a2 + 2312);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2320) = *(_QWORD *)(a2 + 2320);
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[24])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for WeatherConditionBackgroundConfig.Layers()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers.CloudLayers(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[6])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers.CloudLayers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for WeatherConditionBackgroundConfig.Layers.CloudLayers()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers.CollisionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AFE09738 + 4 * byte_1B003A433[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AFE0976C + 4 * byte_1B003A42E[v4]))();
}

uint64_t sub_1AFE0976C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE0977CLL);
  return result;
}

uint64_t sub_1AFE09788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE09790);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AFE09794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE0979C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for WeatherConditionBackgroundConfig.Layers.CollisionType()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t getEnumTagSinglePayload for WeatherConditionBackgroundConfig.LightningConfig(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[88])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.LightningConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for WeatherConditionBackgroundConfig.LightningConfig()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t getEnumTagSinglePayload for WeatherConditionBackgroundConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x14)
  {
    if (a2 + 236 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 236) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 237;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xED;
  v5 = v6 - 237;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 236 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 236) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x14)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x13)
    return ((uint64_t (*)(void))((char *)&loc_1AFE09938 + 4 * byte_1B003A43D[v4]))();
  *a1 = a2 - 20;
  return ((uint64_t (*)(void))((char *)sub_1AFE0996C + 4 * byte_1B003A438[v4]))();
}

uint64_t sub_1AFE0996C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE0997CLL);
  return result;
}

uint64_t sub_1AFE09988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE09990);
  *(_BYTE *)result = a2 - 20;
  return result;
}

uint64_t sub_1AFE09994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE0999C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundConfig.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys;
}

uint64_t _s9WeatherUI32WeatherConditionBackgroundConfigV15LightningConfigV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 18) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v5 = v6 - 19;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s9WeatherUI32WeatherConditionBackgroundConfigV15LightningConfigV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1AFE09AA4 + 4 * byte_1B003A447[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1AFE09AD8 + 4 * byte_1B003A442[v4]))();
}

uint64_t sub_1AFE09AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE09AE8);
  return result;
}

uint64_t sub_1AFE09AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE09AFCLL);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1AFE09B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundConfig.Layers.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundConfig.Layers.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AFE09B70 + 4 * byte_1B003A451[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AFE09BA4 + 4 * byte_1B003A44C[v4]))();
}

uint64_t sub_1AFE09BA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09BAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE09BB4);
  return result;
}

uint64_t sub_1AFE09BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE09BC8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AFE09BCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE09BD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys;
}

unint64_t sub_1AFE09BF4()
{
  unint64_t result;

  result = qword_1EEE74710;
  if (!qword_1EEE74710)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003ADD0, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74710);
  }
  return result;
}

unint64_t sub_1AFE09C34()
{
  unint64_t result;

  result = qword_1EEE74718;
  if (!qword_1EEE74718)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AE88, &type metadata for WeatherConditionBackgroundConfig.Layers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74718);
  }
  return result;
}

unint64_t sub_1AFE09C74()
{
  unint64_t result;

  result = qword_1EEE74720;
  if (!qword_1EEE74720)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AF40, &type metadata for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74720);
  }
  return result;
}

unint64_t sub_1AFE09CB4()
{
  unint64_t result;

  result = qword_1EEE74728;
  if (!qword_1EEE74728)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AFF8, &type metadata for WeatherConditionBackgroundConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74728);
  }
  return result;
}

unint64_t sub_1AFE09CF4()
{
  unint64_t result;

  result = qword_1EEE74730;
  if (!qword_1EEE74730)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AF68, &type metadata for WeatherConditionBackgroundConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74730);
  }
  return result;
}

unint64_t sub_1AFE09D34()
{
  unint64_t result;

  result = qword_1EEE74738;
  if (!qword_1EEE74738)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AF90, &type metadata for WeatherConditionBackgroundConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74738);
  }
  return result;
}

unint64_t sub_1AFE09D74()
{
  unint64_t result;

  result = qword_1EEE74740;
  if (!qword_1EEE74740)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AEB0, &type metadata for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74740);
  }
  return result;
}

unint64_t sub_1AFE09DB4()
{
  unint64_t result;

  result = qword_1EEE74748;
  if (!qword_1EEE74748)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AED8, &type metadata for WeatherConditionBackgroundConfig.LightningConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74748);
  }
  return result;
}

unint64_t sub_1AFE09DF4()
{
  unint64_t result;

  result = qword_1EEE74750;
  if (!qword_1EEE74750)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003ADF8, &type metadata for WeatherConditionBackgroundConfig.Layers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74750);
  }
  return result;
}

unint64_t sub_1AFE09E34()
{
  unint64_t result;

  result = qword_1EEE74758;
  if (!qword_1EEE74758)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AE20, &type metadata for WeatherConditionBackgroundConfig.Layers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74758);
  }
  return result;
}

unint64_t sub_1AFE09E74()
{
  unint64_t result;

  result = qword_1EEE74760;
  if (!qword_1EEE74760)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AD40, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74760);
  }
  return result;
}

unint64_t sub_1AFE09EB4()
{
  unint64_t result;

  result = qword_1EEE74768;
  if (!qword_1EEE74768)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003AD68, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74768);
  }
  return result;
}

unint64_t sub_1AFE09EF0()
{
  unint64_t result;

  result = qword_1EEE74770;
  if (!qword_1EEE74770)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherConditionBackgroundConfig.Layers.CollisionType, &type metadata for WeatherConditionBackgroundConfig.Layers.CollisionType);
    atomic_store(result, (unint64_t *)&qword_1EEE74770);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_83_4()
{
  return sub_1B0008F68();
}

uint64_t OUTLINED_FUNCTION_108_2@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return v1 - 336;
}

uint64_t OUTLINED_FUNCTION_113_3()
{
  return sub_1B0008014();
}

uint64_t OUTLINED_FUNCTION_115_4(uint64_t a1, uint64_t a2, double a3)
{
  *(double *)a2 = a3;
  *(_DWORD *)(a2 + 8) = 0;
  return GEOLocationCoordinate2DMake(a1, a3);
}

void OUTLINED_FUNCTION_118_2(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_121_3(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t *OUTLINED_FUNCTION_125_2()
{
  return &STACK[0x1AC0];
}

void sub_1AFE0A000()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 5;
  sub_1AFE0A8A8((__n128)xmmword_1B003B330, (__n128)xmmword_1B003B340, (__n128)xmmword_1B003B350, (__n128)xmmword_1B003B360, (__n128)xmmword_1B003B370, (__n128)xmmword_1B003B380);
  sub_1AFE0A8A8((__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140);
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B449BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3F0F5C293E99999ALL;
  *(_QWORD *)&v11 = 0x4409800042200000;
  LODWORD(v9) = 1084227584;
  DWORD2(v8) = 1133903872;
  *(_QWORD *)&v8 = 0x42A0000040E85937;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 3250, 200, 30, 1, 4, 0, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4140000000000000,
    v8,
    0x3F3D70A43ECCCCCDLL,
    1092616192,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1090519040,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003E4CCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFE0A8A8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  __n128 v13;
  double v14;
  double v15;
  __n128 v16;
  __n128 v17;
  double v18;
  double v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  double v28;
  __n128 v29;
  float v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  double v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  double v44;
  __n128 v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float v51;
  __n128 v52;
  __n128 v53;
  double v54;
  __n128 v55;
  __int128 v56;
  double v57;
  __n128 v58;
  double v59;
  double v60;
  _OWORD *v61;
  unsigned int v62;
  __n128 *v63;
  uint64_t v64;
  float v65;
  _OWORD *v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  double v74;
  __n128 v75;
  float v76;
  float v77;
  float v78;
  __n128 v79;
  __n128 v80;
  double v81;
  uint64_t v82;
  __n128 *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  double v92;
  __n128 v93;
  float v94;
  float v95;
  float v96;
  __n128 v97;
  __n128 v98;
  double v99;
  __int128 v100;
  __n128 v101;
  double v102;
  __n128 v103;
  uint64_t v104;
  __n128 *v105;
  uint64_t v106;
  float v107;
  double v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  __n128 v117;
  float v118;
  float v119;
  __n128 v120;
  __n128 v121;
  __int128 v122;
  __n128 v123;
  double v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  uint64_t v132;
  float v133;
  float v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  uint64_t v142;
  double v143;
  float v144;
  float v145;
  __n128 v146;
  __int128 v147;
  __n128 v148;
  __int128 v149;
  __int128 v150;
  __n128 v151;
  __n128 v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  double v161;
  float v162;
  float v163;
  __n128 v164;
  __n128 v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  uint64_t v176;
  double v177;
  __n128 v178;
  float v179;
  float v180;
  float v181;
  float v182;
  float v183;
  float v184;
  __n128 v185;
  __n128 v186;
  __n128 v187;
  double v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  uint64_t v196;
  float v197;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  int v210;
  int v211;
  int v212;
  int v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  uint64_t v362;
  uint64_t v363;
  __n128 v364;
  __n128 v365;
  int64x2_t v366;
  __n128 v367;
  int64x2_t v368;
  int64x2_t v369;
  __n128 v376;
  __n128 v377;
  __n128 v378;
  __n128 v379;
  __n128 v380;
  __n128 v381;
  __n128 v382;
  __n128 v383;
  __n128 v384;
  __n128 v385;
  __n128 v386;
  __n128 v387;
  __n128 v388;
  __int128 v389;
  __n128 v390;
  __int128 v391;
  __n128 v392;
  __n128 v393;
  __n128 v394;
  __n128 v395;
  __n128 v396;
  __n128 v397;
  __n128 v398;
  __n128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __n128 v404;
  __n128 v405;
  __n128 v406;
  __n128 v407;
  __n128 v408;
  __int128 v409;
  __n128 v410;
  __int128 v411;
  __n128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  _OWORD v416[2];
  _OWORD v417[2];
  _OWORD v418[2];
  _OWORD v419[2];
  _OWORD v420[2];
  _OWORD v421[2];
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __n128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __n128 v430;
  __int128 v431;
  __n128 v432;
  __int128 v433;
  __n128 v434;
  __n128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B0027F30;
  __asm { FMOV            V3.2D, #1.0 }
  v377 = _Q3;
  v440 = (__int128)_Q3;
  v441 = (__int128)_Q3;
  v438 = xmmword_1B0027F40;
  v439 = xmmword_1B0027F50;
  v436 = xmmword_1B0027F60;
  v437 = xmmword_1B0027F70;
  v434 = _Q3;
  v435 = _Q3;
  __asm { FMOV            V0.2D, #0.5 }
  v432 = _Q0;
  v376 = _Q0;
  v433 = xmmword_1B0026E60;
  v430 = _Q3;
  v431 = xmmword_1B0027F80;
  v428 = xmmword_1B0027F90;
  v429 = xmmword_1B0027FA0;
  v426 = _Q0;
  v427 = xmmword_1B0027FB0;
  v424 = xmmword_1B0027FC0;
  v425 = xmmword_1B0027FD0;
  OUTLINED_FUNCTION_7_97(1.0, 0.800000012, 1.0, _Q3);
  v414 = (__int128)v13;
  v415 = xmmword_1B0025E90;
  v412 = v13;
  v413 = xmmword_1B0026140;
  v410 = v13;
  v411 = xmmword_1B0025E90;
  v408 = v13;
  v409 = xmmword_1B0027740;
  OUTLINED_FUNCTION_34_39(1.0, 1.0, v14, v13);
  v402 = xmmword_1B0027FE0;
  v403 = xmmword_1B0027FF0;
  v400 = xmmword_1B0028000;
  OUTLINED_FUNCTION_15_88(0.799999952, (__n128)xmmword_1B0028010, v15, v16);
  v390 = v17;
  v391 = xmmword_1B00277B0;
  v388 = v17;
  v389 = (__int128)a1;
  OUTLINED_FUNCTION_12_96(a1.n128_f64[0], v18, v19, v17);
  OUTLINED_FUNCTION_32_37();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_8_100();
  OUTLINED_FUNCTION_17_3(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, 800.0, v30, 0.1, 0.8, v199, &v424, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v422,
    0,
    v421,
    v420,
    v419,
    v418,
    v417,
    v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    1112014848,
    1097859072,
    &v380,
    (uint64_t)&v378);
  v440 = (__int128)v377;
  v441 = (__int128)v377;
  OUTLINED_FUNCTION_28_54((__n128)xmmword_1B0028030);
  v436 = xmmword_1B0028040;
  v437 = xmmword_1B0028050;
  v434 = v31;
  v435 = v31;
  v432 = v376;
  v433 = xmmword_1B00271F0;
  v430 = v31;
  v431 = xmmword_1B0028060;
  v428 = xmmword_1B0028070;
  v429 = xmmword_1B0028080;
  v426 = v31;
  v427 = xmmword_1B0028090;
  v424 = xmmword_1B0027FC0;
  v425 = xmmword_1B00280A0;
  v422 = (__int128)v31;
  v423 = (__int128)v31;
  OUTLINED_FUNCTION_4_108(1.0, 0.800000012, v31);
  v414 = xmmword_1B00280B0;
  v415 = xmmword_1B00280C0;
  v412 = v32;
  v413 = xmmword_1B0026140;
  v410 = v32;
  v411 = xmmword_1B00280D0;
  v408 = v32;
  v409 = xmmword_1B0027740;
  v406 = v32;
  v407 = v32;
  v404 = v32;
  v405 = v32;
  v402 = xmmword_1B0027FE0;
  v403 = xmmword_1B0027FF0;
  v400 = xmmword_1B0028000;
  OUTLINED_FUNCTION_2_114((__n128)xmmword_1B0028010, 1.0, v32);
  v391 = xmmword_1B00277B0;
  v388 = v33;
  v389 = (__int128)a2;
  OUTLINED_FUNCTION_13_96(v34, a2.n128_f64[0], v33);
  OUTLINED_FUNCTION_3_107();
  v238 = v35;
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_33_39();
  OUTLINED_FUNCTION_14_94();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, &v426, &v424,
    0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    v206,
    0,
    v421,
    v420,
    v419,
    v418,
    v238,
    v246,
    v254,
    v262,
    v270,
    v278,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    1112014848,
    1097859072,
    &v380,
    (uint64_t)&v378);
  v369 = vdupq_n_s64(0x3FEE770020000000uLL);
  v440 = (__int128)v369;
  v441 = xmmword_1B00280E0;
  v438 = xmmword_1B00280F0;
  v439 = xmmword_1B0028100;
  v436 = xmmword_1B00277F0;
  v437 = xmmword_1B0026110;
  v434 = v377;
  v435 = v377;
  OUTLINED_FUNCTION_17_84();
  v430 = v52;
  v431 = xmmword_1B00277A0;
  v428 = xmmword_1B0027FC0;
  v429 = xmmword_1B0028110;
  v368 = vdupq_n_s64(0x3FE0ECE8A0000000uLL);
  v426 = (__n128)v368;
  v427 = xmmword_1B0028120;
  v424 = xmmword_1B0027FC0;
  v425 = xmmword_1B0028130;
  OUTLINED_FUNCTION_7_97(0.800000012, 1.0, 0.528919518, v52);
  v414 = (__int128)v53;
  v415 = xmmword_1B0026230;
  v412 = v53;
  v413 = xmmword_1B0027890;
  v410 = v53;
  v411 = xmmword_1B00277B0;
  v408 = v53;
  v409 = xmmword_1B0026230;
  OUTLINED_FUNCTION_34_39(v54, 1.0, 1.0, v53);
  v402 = (__int128)v55;
  v403 = v56;
  v400 = (__int128)v55;
  OUTLINED_FUNCTION_15_88(v57, (__n128)xmmword_1B0028140, *(double *)&v56, v55);
  v390 = v58;
  v391 = xmmword_1B0028150;
  v388 = v58;
  v389 = (__int128)a3;
  OUTLINED_FUNCTION_12_96(v59, a3.n128_f64[0], v60, v58);
  OUTLINED_FUNCTION_23_64();
  OUTLINED_FUNCTION_3_107();
  v239 = v61;
  OUTLINED_FUNCTION_19_10();
  v203 = v62 | 0x3F4CCCCD00000000;
  v367 = v63[22];
  v65 = *(float *)(v64 + 2636);
  OUTLINED_FUNCTION_24_59();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v65, 0.8, 0.9, v78, &v426, &v424,
    v203,
    1061997773,
    &v422,
    0,
    v421,
    v420,
    v419,
    v418,
    v239,
    v247,
    v255,
    v263,
    v271,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v334,
    v338,
    v342,
    v344,
    &v386,
    &v384,
    &v382,
    1112014848,
    1097859072,
    &v380,
    (uint64_t)&v378);
  v440 = xmmword_1B0028170;
  v441 = xmmword_1B0028180;
  v438 = xmmword_1B0028190;
  v439 = xmmword_1B00281A0;
  v436 = xmmword_1B00281B0;
  v437 = xmmword_1B00281C0;
  v434 = v377;
  v435 = v377;
  v432 = v377;
  v433 = xmmword_1B0027030;
  v430 = v377;
  v431 = xmmword_1B0028060;
  OUTLINED_FUNCTION_26_55((__n128)xmmword_1B00281D0, 0.400388241, v377);
  v424 = xmmword_1B00281E0;
  v425 = xmmword_1B00281F0;
  v366 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v422 = (__int128)v366;
  v423 = xmmword_1B00264D0;
  OUTLINED_FUNCTION_4_108(*(double *)v366.i64, 0.89028424, v79);
  v414 = (__int128)v80;
  v415 = xmmword_1B0026120;
  v412 = v80;
  v413 = (__int128)v80;
  v410 = v80;
  v411 = xmmword_1B00277B0;
  v408 = v80;
  v409 = xmmword_1B0027810;
  v406 = v80;
  v407 = v80;
  v404 = v80;
  v405 = v80;
  v402 = (__int128)v80;
  v403 = xmmword_1B0027FF0;
  v400 = (__int128)v80;
  v401 = xmmword_1B0028010;
  v398 = v80;
  v399 = v80;
  v396 = v80;
  v397 = v80;
  v394 = v80;
  v395 = v80;
  v392 = v80;
  v393 = v80;
  v390 = v80;
  OUTLINED_FUNCTION_6_102((__n128)xmmword_1B00278C0, v81, v80);
  v362 = v82;
  OUTLINED_FUNCTION_23_64();
  HIDWORD(v204) = 1063675494;
  OUTLINED_FUNCTION_34_2();
  v365 = v83[32];
  OUTLINED_FUNCTION_24_59();
  OUTLINED_FUNCTION_17_3(v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, 0.9, &v426, &v424, v204, 0, &v422,
    0,
    v421,
    v420,
    v419,
    v418,
    v417,
    v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    &v396,
    v335,
    v339,
    v343,
    v345,
    &v386,
    &v384,
    &v382,
    1112014848,
    1097859072,
    &v380,
    v362);
  v440 = (__int128)v377;
  v441 = (__int128)v377;
  v438 = xmmword_1B0028190;
  v439 = xmmword_1B0028210;
  v436 = xmmword_1B0028220;
  v437 = xmmword_1B0028230;
  v434 = v377;
  v435 = v377;
  v432 = v377;
  v433 = xmmword_1B0026FC0;
  v430 = v377;
  v431 = xmmword_1B00277A0;
  OUTLINED_FUNCTION_26_55((__n128)xmmword_1B0026130, 0.99988085, v377);
  v424 = xmmword_1B0028240;
  v425 = xmmword_1B0028250;
  v422 = xmmword_1B0027D70;
  v423 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_4_108(1.0, 0.9627316, v97);
  v414 = (__int128)v98;
  v415 = xmmword_1B0028260;
  v412 = v98;
  v100 = (__int128)OUTLINED_FUNCTION_31_44((__n128)xmmword_1B0026450, v99, v98);
  v409 = xmmword_1B0027810;
  v406 = v101;
  v407 = v101;
  v404 = v101;
  v405 = v101;
  v402 = (__int128)v101;
  v403 = v100;
  v400 = (__int128)v101;
  OUTLINED_FUNCTION_2_114((__n128)xmmword_1B0028140, 1.0, v101);
  OUTLINED_FUNCTION_6_102((__n128)xmmword_1B00278C0, v102, v103);
  v363 = v104;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_30_50();
  OUTLINED_FUNCTION_0_127();
  OUTLINED_FUNCTION_33_39();
  HIDWORD(v205) = 1063675494;
  OUTLINED_FUNCTION_34_2();
  v364 = v105[39];
  v107 = *(float *)(v106 + 640);
  v108 = OUTLINED_FUNCTION_25_56();
  OUTLINED_FUNCTION_17_3(v109, v110, v111, v112, v113, v114, v115, v116, v108, v117, v107, v118, v119, 0.9, &v426, &v424, v205, 0, v207,
    v210,
    v214,
    v220,
    v226,
    v232,
    v240,
    v248,
    v256,
    v264,
    v272,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v340,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    v350,
    v356,
    &v380,
    v363);
  v440 = (__int128)v377;
  v441 = (__int128)v377;
  v438 = xmmword_1B0028190;
  v439 = xmmword_1B0028210;
  v436 = xmmword_1B0028220;
  v437 = xmmword_1B0028230;
  v434 = v377;
  v435 = v377;
  v432 = v377;
  v433 = xmmword_1B0026FC0;
  v430 = v377;
  v431 = xmmword_1B00277A0;
  v428 = (__int128)v377;
  v429 = xmmword_1B0026130;
  v426 = v377;
  v427 = xmmword_1B0027740;
  v424 = xmmword_1B0028240;
  v425 = xmmword_1B0028250;
  v422 = xmmword_1B0027D70;
  v423 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_9_101(0.9627316, v377);
  v414 = (__int128)v120;
  v415 = xmmword_1B0028260;
  v412 = v120;
  v413 = xmmword_1B0026450;
  v410 = v120;
  v411 = xmmword_1B00277B0;
  v408 = v120;
  OUTLINED_FUNCTION_29_60((__n128)xmmword_1B0027810, v120);
  v402 = (__int128)v121;
  v403 = v122;
  v400 = (__int128)v121;
  OUTLINED_FUNCTION_11_89((__n128)xmmword_1B0028140, v121);
  v391 = xmmword_1B00278C0;
  v388 = v123;
  OUTLINED_FUNCTION_10_95((__n128)xmmword_1B0026140, v123);
  OUTLINED_FUNCTION_22_60();
  OUTLINED_FUNCTION_30_50();
  OUTLINED_FUNCTION_1_113();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_33_39();
  v124 = OUTLINED_FUNCTION_25_56();
  OUTLINED_FUNCTION_22_1(v125, v126, v127, v128, v129, v130, v131, v132, v124, v364, v107, v133, v134, &v426, &v424, 0x3F6666663F666666, 0, v208, 0,
    v215,
    v221,
    v227,
    v233,
    v241,
    v249,
    v257,
    v265,
    v273,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v341,
    &v384,
    &v388,
    &v386,
    v346,
    v348,
    v351,
    v357,
    &v380,
    (uint64_t)&v378);
  v440 = xmmword_1B0028170;
  v441 = xmmword_1B0028180;
  v438 = xmmword_1B0028190;
  v439 = xmmword_1B00281A0;
  v436 = xmmword_1B00281B0;
  v437 = xmmword_1B00281C0;
  v434 = v377;
  v435 = v377;
  v432 = v377;
  v433 = xmmword_1B0027030;
  v430 = v377;
  v431 = xmmword_1B0028060;
  v428 = (__int128)v377;
  v429 = xmmword_1B00281D0;
  v426 = v377;
  v427 = xmmword_1B0027740;
  v424 = xmmword_1B00281E0;
  v425 = xmmword_1B00281F0;
  v422 = (__int128)v366;
  v423 = xmmword_1B00264D0;
  v421[0] = v377;
  v421[1] = v377;
  v420[0] = v377;
  v420[1] = v377;
  v419[0] = v377;
  v419[1] = v377;
  v418[0] = v377;
  v418[1] = v377;
  v417[0] = v377;
  v417[1] = v377;
  v416[0] = v377;
  v416[1] = v377;
  v414 = (__int128)v377;
  v415 = xmmword_1B0026120;
  v412 = v377;
  v413 = (__int128)v377;
  v410 = v377;
  v411 = xmmword_1B00277B0;
  v408 = v377;
  v409 = xmmword_1B0027810;
  v406 = v377;
  v407 = v377;
  v404 = v377;
  v405 = v377;
  v402 = (__int128)v377;
  v403 = xmmword_1B0027FF0;
  v400 = (__int128)v377;
  v401 = xmmword_1B0028010;
  v398 = v377;
  v399 = v377;
  v396 = v377;
  v397 = v377;
  v394 = v377;
  v395 = v377;
  v392 = v377;
  v393 = v377;
  v390 = v377;
  v391 = xmmword_1B00278C0;
  v388 = v377;
  v389 = xmmword_1B0026140;
  v386 = v377;
  v387 = v377;
  v384 = v377;
  v385 = v377;
  v382 = v377;
  v383 = v377;
  v380 = v377;
  v381 = v377;
  v378 = v377;
  v379 = v377;
  OUTLINED_FUNCTION_22_60();
  OUTLINED_FUNCTION_0_127();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_32_37();
  OUTLINED_FUNCTION_8_100();
  OUTLINED_FUNCTION_22_1(v135, v136, v137, v138, v139, v140, v141, v142, v143, v365, 900.0, v144, v145, v200, &v424, 0x3F6666663F666666, 0, &v422, v211,
    v216,
    v222,
    v228,
    v234,
    v242,
    v250,
    v258,
    v266,
    v274,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    &v394,
    &v392,
    &v384,
    &v388,
    &v386,
    v347,
    v349,
    v352,
    v358,
    &v380,
    (uint64_t)&v378);
  v440 = (__int128)v369;
  v441 = xmmword_1B00280E0;
  v438 = xmmword_1B00280F0;
  v439 = xmmword_1B0028100;
  v436 = xmmword_1B00277F0;
  v437 = xmmword_1B0026110;
  v434 = v377;
  v435 = v377;
  OUTLINED_FUNCTION_17_84();
  v430 = v146;
  v431 = xmmword_1B00277A0;
  v428 = xmmword_1B0027FC0;
  v429 = v147;
  v426 = (__n128)v368;
  v427 = xmmword_1B0028120;
  v424 = xmmword_1B0027FC0;
  OUTLINED_FUNCTION_5_105((__n128)xmmword_1B0028130, 0.528919518, v146);
  v415 = xmmword_1B0026230;
  v412 = v148;
  v149 = (__int128)OUTLINED_FUNCTION_31_44((__n128)xmmword_1B0027890, 1.0, v148);
  v409 = v150;
  v406 = v151;
  v407 = v151;
  v404 = v151;
  v405 = v151;
  v402 = (__int128)v151;
  v403 = v149;
  v400 = (__int128)v151;
  OUTLINED_FUNCTION_2_114((__n128)xmmword_1B0028140, *(double *)&v150, v151);
  v391 = xmmword_1B0028150;
  v388 = v152;
  v389 = (__int128)a4;
  v386 = v152;
  v387 = v152;
  v384 = v152;
  v385 = v152;
  v382 = v152;
  v383 = v152;
  v380 = v152;
  v381 = v152;
  v378 = v152;
  v379 = v152;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_127();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_32_37();
  OUTLINED_FUNCTION_8_100();
  OUTLINED_FUNCTION_29(v153, v154, v155, v156, v157, v158, v159, v160, v161, v367, 900.0, v162, v65, 0.8, 0.9, v163, v201, &v424, 0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v422,
    v212,
    v217,
    v223,
    v229,
    v235,
    v243,
    v251,
    v259,
    v267,
    v275,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    v353,
    v359,
    &v380,
    (uint64_t)&v378);
  v440 = (__int128)v377;
  v441 = (__int128)v377;
  OUTLINED_FUNCTION_28_54((__n128)xmmword_1B0028030);
  v436 = xmmword_1B0028040;
  v437 = xmmword_1B0028050;
  v434 = v164;
  v435 = v164;
  OUTLINED_FUNCTION_17_84();
  v430 = v165;
  v431 = xmmword_1B0028060;
  v428 = xmmword_1B0028070;
  v429 = xmmword_1B0028080;
  v426 = v165;
  v427 = xmmword_1B0028090;
  v424 = xmmword_1B0027FC0;
  v425 = xmmword_1B00280A0;
  v422 = (__int128)v165;
  v423 = (__int128)v165;
  OUTLINED_FUNCTION_9_101(1.0, v165);
  v414 = xmmword_1B00280B0;
  v415 = xmmword_1B00280C0;
  v412 = v166;
  v413 = xmmword_1B0026140;
  v410 = v166;
  v411 = xmmword_1B00280D0;
  v408 = v166;
  OUTLINED_FUNCTION_29_60((__n128)xmmword_1B0027740, v166);
  v402 = xmmword_1B0027FE0;
  v403 = xmmword_1B0027FF0;
  v400 = xmmword_1B0028000;
  OUTLINED_FUNCTION_11_89((__n128)xmmword_1B0028010, v167);
  v391 = xmmword_1B00277B0;
  v388 = v168;
  OUTLINED_FUNCTION_10_95(a5, v168);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_127();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_32_37();
  OUTLINED_FUNCTION_14_94();
  OUTLINED_FUNCTION_29(v169, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v202, &v424, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v422,
    v213,
    v218,
    v224,
    v230,
    v236,
    v244,
    v252,
    v260,
    v268,
    v276,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    v354,
    v360,
    &v380,
    (uint64_t)&v378);
  v440 = (__int128)v377;
  v441 = (__int128)v377;
  OUTLINED_FUNCTION_28_54((__n128)xmmword_1B0027F40);
  v436 = xmmword_1B0027F60;
  v437 = xmmword_1B0027F70;
  v434 = v185;
  v435 = v185;
  v432 = v376;
  v433 = xmmword_1B0026E60;
  v430 = v185;
  v431 = xmmword_1B0027F80;
  v428 = xmmword_1B0027F90;
  v429 = xmmword_1B0027FA0;
  v426 = v376;
  v427 = xmmword_1B0027FB0;
  v424 = xmmword_1B0027FC0;
  OUTLINED_FUNCTION_5_105((__n128)xmmword_1B0027FD0, 1.0, v185);
  v415 = xmmword_1B0025E90;
  v412 = v186;
  v413 = xmmword_1B0026140;
  v410 = v186;
  v411 = xmmword_1B0025E90;
  v408 = v186;
  v409 = xmmword_1B0027740;
  v406 = v186;
  v407 = v186;
  v404 = v186;
  v405 = v186;
  v402 = xmmword_1B0027FE0;
  v403 = xmmword_1B0027FF0;
  v400 = xmmword_1B0028000;
  OUTLINED_FUNCTION_2_114((__n128)xmmword_1B0028010, 1.0, v186);
  v391 = xmmword_1B00277B0;
  v388 = v187;
  v389 = (__int128)a6;
  OUTLINED_FUNCTION_13_96(a6.n128_f64[0], v188, v187);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_1_113();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_33_39();
  OUTLINED_FUNCTION_8_100();
  OUTLINED_FUNCTION_29(v189, v190, v191, v192, v193, v194, v195, v196, -90.0, (__n128)xmmword_1B0028020, 800.0, v197, 0.1, 0.8, 0.9, 0.8, &v426, &v424, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    v209,
    0,
    v219,
    v225,
    v231,
    v237,
    v245,
    v253,
    v261,
    v269,
    v277,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    v355,
    v361,
    &v380,
    (uint64_t)&v378);
  return v6;
}

void sub_1AFE0BB80(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E60798E8;
}

void sub_1AFE0BB98()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[9];

  v35[0] = 0;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x617274736F746C41;
  v21 = 0xEF4C202D20737574;
  v22 = 0xD000000000000013;
  v23 = 0x80000001B0051480;
  v24 = 6;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC5C8AC();
  sub_1AFC5C8AC();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3EAE147B3E19999ALL;
  *(_QWORD *)&v11 = 0x44160000420F0000;
  LODWORD(v9) = 1084227584;
  DWORD2(v8) = 1142292480;
  *(_QWORD *)&v8 = 0x4243000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 10, 0xC2A0000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E9EB8523E428F5CLL,
    1095761920,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1091945103,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFE0C3B0()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE v36[9];

  v36[0] = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 6;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 10;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB0000000053202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF53656C676E6953;
  v25 = 5;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE0CC10();
  sub_1AFE0CC10();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1169915904;
  LODWORD(v6) = 1128792064;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 4, 0xC25C000000000000, 0x42700000C20C0000, 0x42F000003F800000, v6, 0x3EDC28F63E4CCCCDLL, v7, 0x3F8000003F800000, 0x3EABCD4C3F800000, 0x3F8000003F800000, 0x3F5C64F73F800000, 0x419F1BC440C00000,
    0x42B400003EDB52C4,
    v8,
    0x3E4CCCCD3DCCCCCDLL,
    0x3F8000003F800000,
    0x3E2CED1F3F800000,
    0x3F8000003F800000,
    0x3F40AEF73F800000,
    1069547520,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE0CC10()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __int128 v8;
  __n128 v9;
  __n128 v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  double v20;
  __n128 v21;
  float v22;
  double v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  float v38;
  double v39;
  double v40;
  double v41;
  double v42;
  __n128 v43;
  double v44;
  double v45;
  double v46;
  __n128 v47;
  __int128 v48;
  __n128 v49;
  __n128 v50;
  __int128 v51;
  _OWORD *v52;
  int v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  float v64;
  float v65;
  float v66;
  float v67;
  __n128 v68;
  __int128 v69;
  uint64_t v70;
  __n128 *v71;
  uint64_t v72;
  float v73;
  uint64_t v74;
  float v75;
  double v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  __n128 v85;
  float v86;
  float v87;
  float v88;
  __n128 v89;
  double v90;
  double v91;
  __n128 v92;
  double v93;
  double v94;
  double v95;
  __n128 v96;
  double v97;
  double v98;
  double v99;
  double v100;
  __n128 v101;
  __int128 v102;
  __n128 v103;
  __n128 v104;
  __int128 v105;
  __int128 v106;
  _OWORD *v107;
  double v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  __n128 v117;
  float v118;
  float v119;
  float v120;
  float v121;
  float v122;
  float v123;
  __n128 v124;
  __n128 v125;
  __n128 v126;
  __int128 v127;
  double v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  uint64_t v136;
  __n128 v137;
  float v138;
  float v139;
  float v140;
  float v141;
  float v142;
  float v143;
  __n128 v144;
  __int128 v145;
  __n128 v146;
  __n128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  double v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  float v160;
  float v161;
  float v162;
  double v163;
  double v164;
  double v165;
  double v166;
  __n128 v167;
  double v168;
  double v169;
  double v170;
  __n128 v171;
  double v172;
  __n128 v173;
  __n128 v174;
  __n128 v175;
  __int128 v176;
  __n128 v177;
  __int128 v178;
  double v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  uint64_t v187;
  double v188;
  __n128 v189;
  float v190;
  float v191;
  double v192;
  double v193;
  __n128 v194;
  __n128 v195;
  __int128 v196;
  __n128 v197;
  __n128 v198;
  __int128 v199;
  __n128 v200;
  __int128 v201;
  double v202;
  __n128 v203;
  int v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  uint64_t v212;
  double v213;
  __n128 v214;
  double v215;
  double v216;
  double v217;
  double v218;
  double v219;
  __n128 v220;
  double v221;
  double v222;
  double v223;
  __n128 v224;
  double v225;
  __n128 v226;
  __n128 v227;
  __n128 v228;
  __int128 v229;
  __n128 v230;
  __int128 v231;
  __int128 v232;
  double v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  uint64_t v241;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  int v255;
  int v256;
  int v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  int v380;
  int v381;
  int v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  __n128 v386;
  __n128 v387;
  __int128 v388;
  __n128 v389;
  __n128 v390;
  __n128 v391;
  __n128 v392;
  __n128 v393;
  __n128 v394;
  __n128 v395;
  __int128 v396;
  __n128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __n128 v403;
  __n128 v404;
  __n128 v405;
  __int128 v406;
  __n128 v407;
  __n128 v408;
  __n128 v409;
  __n128 v410;
  __n128 v411;
  __n128 v412;
  __n128 v413;
  __n128 v414;
  __n128 v415;
  __int128 v416;
  __n128 v417;
  __n128 v418;
  __n128 v419;
  __int128 v420;
  __n128 v421;
  __int128 v422;
  __n128 v423;
  __n128 v424;
  __n128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __n128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __n128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __n128 v449;
  __n128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v457 = xmmword_1B00292B0;
  v458 = xmmword_1B00292C0;
  v455 = xmmword_1B002D9A0;
  v456 = xmmword_1B002D9B0;
  v453 = xmmword_1B0028220;
  v454 = xmmword_1B0028230;
  v451 = xmmword_1B002EA00;
  v452 = xmmword_1B002EA10;
  __asm { FMOV            V2.2D, #1.0 }
  v449 = _Q2;
  v450 = _Q2;
  v447 = xmmword_1B002DA00;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B0029320;
  v446 = xmmword_1B002DA10;
  v443 = _Q2;
  v444 = xmmword_1B0027740;
  v441 = xmmword_1B0029360;
  v442 = xmmword_1B0029370;
  v439 = (__int128)_Q2;
  OUTLINED_FUNCTION_22_47(0.380392194, 0.509803951, _Q2);
  v435 = v6;
  v436 = xmmword_1B0027030;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002EA40, (__n128)xmmword_1B002EA50);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002EA60, (__n128)xmmword_1B002EA70);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DA60, (__n128)xmmword_1B002EA80);
  v427 = xmmword_1B002DFB0;
  v428 = xmmword_1B002EA90;
  v425 = v7;
  v426 = xmmword_1B0025E90;
  v423 = v7;
  v424 = v7;
  v421 = v7;
  v422 = xmmword_1B0025E90;
  v419 = v7;
  v420 = xmmword_1B0025E50;
  v417 = v7;
  v418 = v7;
  v415 = v7;
  v416 = xmmword_1B0027770;
  OUTLINED_FUNCTION_5_106(1.0, 0.498039246, v7);
  v406 = v8;
  v403 = v9;
  v388 = (__int128)v10;
  v404 = v10;
  v401 = xmmword_1B002EAA0;
  v402 = xmmword_1B0028F80;
  v399 = xmmword_1B002EAB0;
  v400 = v11;
  v387 = v9;
  v397 = v9;
  v398 = v8;
  OUTLINED_FUNCTION_14_95(0.982730448, 1.0, v9, v10);
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_17_4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 100.0, 0.4, 0.4, &v443, &v441, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  OUTLINED_FUNCTION_1_114();
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002EAC0, (__n128)xmmword_1B002EAD0);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002EAE0, (__n128)xmmword_1B002EAF0);
  v429 = xmmword_1B002DA60;
  *(_QWORD *)&v23 = OUTLINED_FUNCTION_12_97((__n128)xmmword_1B002EB00).n128_u64[0];
  OUTLINED_FUNCTION_17_10(v23, v24.n128_f64[0], v24);
  v420 = xmmword_1B0025E50;
  v417 = v25;
  v418 = v25;
  v415 = v25;
  v416 = xmmword_1B0027770;
  v413 = v25;
  v414 = v25;
  v411 = v25;
  v412 = v25;
  v409 = v25;
  v410 = v25;
  v407 = v25;
  v408 = v25;
  v405 = v25;
  v406 = xmmword_1B0025E50;
  v403 = v25;
  v404 = v26;
  v401 = xmmword_1B002EAA0;
  v402 = xmmword_1B0028F80;
  v399 = xmmword_1B002EAB0;
  v400 = v27;
  v397 = v25;
  v398 = xmmword_1B0025E50;
  v395 = v25;
  v396 = (__int128)v26;
  v393 = v25;
  v394 = v25;
  v391 = v25;
  v392 = v25;
  v389 = v25;
  v390 = v25;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_6_71();
  OUTLINED_FUNCTION_17_4(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, 100.0, 0.4, 0.4, &v443, &v441, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  v457 = xmmword_1B0029460;
  v458 = xmmword_1B0029470;
  v455 = xmmword_1B0029480;
  v456 = xmmword_1B0029490;
  OUTLINED_FUNCTION_39_2();
  v451 = xmmword_1B002EB10;
  v452 = xmmword_1B002EB20;
  v449 = v387;
  v450 = v387;
  v447 = xmmword_1B0027B20;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B002DAE0;
  v446 = xmmword_1B002DAF0;
  v443 = v387;
  v444 = xmmword_1B0027740;
  v441 = xmmword_1B0029360;
  v442 = xmmword_1B0029370;
  v439 = (__int128)v387;
  v440 = (__int128)v387;
  OUTLINED_FUNCTION_32_38(0.509803951, 0.498039216, v39, v40, v387);
  v436 = v388;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002DB00, (__n128)xmmword_1B002DB10);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002EB40, (__n128)xmmword_1B002EB50);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002EB60, (__n128)xmmword_1B002EB70);
  v427 = xmmword_1B002DB60;
  v428 = xmmword_1B002B0B0;
  *(_QWORD *)&v44 = OUTLINED_FUNCTION_12_76(0.541176498, 0.600000024, v41, v42, v43).n128_u64[0];
  OUTLINED_FUNCTION_4_109(v44, v45, v46, v44, v47);
  v406 = v48;
  v403 = v49;
  v404 = v50;
  v401 = xmmword_1B002EB80;
  v402 = xmmword_1B0028150;
  v399 = xmmword_1B002EB90;
  v400 = v51;
  v397 = v49;
  v398 = v48;
  v395 = v49;
  v396 = (__int128)v50;
  OUTLINED_FUNCTION_24_0(0.994757235, 1.0, v50.n128_f64[0], *(double *)&v51, v49);
  OUTLINED_FUNCTION_1_5();
  v269 = v52;
  OUTLINED_FUNCTION_41_10();
  HIDWORD(v251) = v53;
  v254 = v53;
  LODWORD(v251) = v53;
  OUTLINED_FUNCTION_6_71();
  OUTLINED_FUNCTION_17_4(v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, &v443, &v441, v251, v254, &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    &v431,
    v269,
    v276,
    v283,
    v290,
    v297,
    v304,
    v311,
    v318,
    v325,
    v332,
    v339,
    v346,
    v353,
    v358,
    v363,
    v368,
    v373,
    v378,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  v457 = xmmword_1B00295A0;
  v458 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_24_46();
  v453 = xmmword_1B00295C0;
  v454 = xmmword_1B00295D0;
  v451 = xmmword_1B002EBA0;
  v452 = xmmword_1B002EBB0;
  v449 = v387;
  v450 = v387;
  v447 = xmmword_1B0027B20;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B002DAE0;
  v446 = xmmword_1B002DBB0;
  v443 = v387;
  v444 = xmmword_1B0027740;
  v441 = xmmword_1B0029630;
  v442 = xmmword_1B0026A00;
  v439 = xmmword_1B0026320;
  OUTLINED_FUNCTION_22_47(0.970078886, 1.0, (__n128)xmmword_1B0026330);
  v435 = v68;
  v436 = v388;
  v433 = xmmword_1B002DBC0;
  v434 = xmmword_1B002DBD0;
  v431 = xmmword_1B002EBC0;
  v432 = xmmword_1B002DBD0;
  v429 = xmmword_1B002DC00;
  v430 = xmmword_1B002DC10;
  v427 = xmmword_1B002EBD0;
  v428 = xmmword_1B002EBE0;
  v425 = v68;
  v426 = xmmword_1B0025E90;
  v423 = v68;
  v424 = v68;
  v421 = v68;
  v422 = xmmword_1B0025E90;
  v419 = v68;
  v420 = xmmword_1B0025E50;
  v417 = v68;
  v418 = v68;
  v415 = v68;
  v416 = xmmword_1B0027770;
  v413 = v68;
  v414 = v68;
  v411 = v68;
  v412 = v68;
  v409 = v68;
  v410 = v68;
  v407 = v68;
  v408 = v68;
  v405 = v68;
  v406 = xmmword_1B0025E50;
  v403 = v68;
  v404 = (__n128)v388;
  v401 = xmmword_1B002DB70;
  v402 = v69;
  v399 = xmmword_1B002DB70;
  v400 = xmmword_1B0025E90;
  v397 = v68;
  v398 = xmmword_1B0025E50;
  v395 = v68;
  v396 = v388;
  OUTLINED_FUNCTION_16_78(*(double *)&v388, *(double *)&v69, 1.0, 0.99554354, 1.0, v68);
  v384 = v70;
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_0_84();
  OUTLINED_FUNCTION_16_6();
  v386 = v71[66];
  v73 = *(float *)(v72 + 2616);
  v75 = *(float *)(v74 + 3240);
  v76 = OUTLINED_FUNCTION_25_38();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v77, v78, v79, v80, v81, v82, v83, v84, v76, v85, 1400.0, v86, v87, v88, v73, v75, &v443, &v441,
    0x3F6666663F666666,
    0,
    &v435,
    1065353216,
    &v437,
    &v435,
    &v433,
    v264,
    v270,
    v277,
    v284,
    v291,
    v298,
    v305,
    v312,
    v319,
    v326,
    v333,
    v340,
    v347,
    v354,
    v359,
    v364,
    v369,
    v374,
    &v395,
    &v393,
    v380,
    v382,
    &v391,
    v384);
  v457 = xmmword_1B00296F0;
  v458 = xmmword_1B0029700;
  v455 = xmmword_1B0029710;
  v456 = xmmword_1B0029720;
  v453 = xmmword_1B0028220;
  OUTLINED_FUNCTION_8_101((__n128)xmmword_1B0028230);
  v446 = xmmword_1B002DAF0;
  v443 = v89;
  OUTLINED_FUNCTION_24_60();
  v439 = xmmword_1B0027D70;
  v440 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_32_38(1.0, 0.9627316, v90, v91, v92);
  v436 = v388;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002EBF0, (__n128)xmmword_1B002EC00);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002EC10, (__n128)xmmword_1B002A250);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DC90, (__n128)xmmword_1B002A1C0);
  v427 = xmmword_1B002EC20;
  v428 = xmmword_1B0028150;
  *(_QWORD *)&v97 = OUTLINED_FUNCTION_12_76(1.0, v93, v94, v95, v96).n128_u64[0];
  OUTLINED_FUNCTION_4_109(v97, v98, v99, v100, v101);
  v406 = v102;
  v403 = v103;
  v404 = v104;
  v401 = xmmword_1B002EC30;
  v402 = v105;
  v399 = xmmword_1B002EB90;
  v400 = v106;
  v397 = v103;
  v398 = v102;
  v395 = v103;
  v396 = (__int128)v104;
  OUTLINED_FUNCTION_24_0(*(double *)&v102, 0.994757235, *(double *)&v105, v104.n128_f64[0], v103);
  OUTLINED_FUNCTION_1_5();
  v271 = v107;
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_36_3();
  v108 = OUTLINED_FUNCTION_11_6();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v109, v110, v111, v112, v113, v114, v115, v116, v108, v117, v118, v119, v120, v121, v122, v123, &v443, v246,
    v252,
    v255,
    &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    &v431,
    v271,
    v278,
    v285,
    v292,
    v299,
    v306,
    v313,
    v320,
    v327,
    v334,
    v341,
    v348,
    v355,
    v360,
    v365,
    v370,
    v375,
    v379,
    &v393,
    1112014848,
    1097859072,
    &v439,
    (uint64_t)&v389);
  v457 = xmmword_1B00296F0;
  v458 = xmmword_1B0029700;
  v455 = xmmword_1B0029710;
  v456 = xmmword_1B0029720;
  v453 = xmmword_1B0028220;
  v454 = xmmword_1B0028230;
  v451 = xmmword_1B002EBA0;
  v452 = xmmword_1B002EBB0;
  v449 = v387;
  v450 = v387;
  v447 = xmmword_1B0027B20;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B002DAE0;
  v446 = xmmword_1B002DAF0;
  v443 = v387;
  OUTLINED_FUNCTION_24_60();
  v439 = xmmword_1B0027D70;
  v440 = xmmword_1B0027D80;
  v438 = 0u;
  v437 = 0u;
  v435 = v124;
  v436 = v388;
  v433 = xmmword_1B002EC40;
  v434 = xmmword_1B002EC00;
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002EC50, (__n128)xmmword_1B002EC60);
  v429 = xmmword_1B002DC90;
  v430 = xmmword_1B002A1C0;
  v427 = xmmword_1B002EC20;
  v428 = xmmword_1B0028150;
  v425 = v125;
  v426 = xmmword_1B0025E90;
  v423 = v125;
  v424 = v125;
  v421 = v125;
  v422 = xmmword_1B0025E90;
  v419 = v125;
  v420 = xmmword_1B0025E50;
  v417 = v125;
  v418 = v125;
  v415 = v125;
  v416 = xmmword_1B0027770;
  v413 = v125;
  v414 = v125;
  v411 = v125;
  v412 = v125;
  v409 = v125;
  v410 = v125;
  v407 = v125;
  v408 = v125;
  v405 = v125;
  v406 = xmmword_1B0025E50;
  v403 = v125;
  v404 = v126;
  v401 = xmmword_1B002EC30;
  v402 = v127;
  v399 = xmmword_1B002EB90;
  v400 = xmmword_1B0025E90;
  v397 = v125;
  v398 = xmmword_1B0025E50;
  v395 = v125;
  v396 = (__int128)v126;
  v393 = v125;
  v394 = v125;
  v391 = v125;
  v392 = v125;
  v389 = v125;
  v390 = v125;
  OUTLINED_FUNCTION_0_84();
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_36_3();
  v128 = OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_29(v129, v130, v131, v132, v133, v134, v135, v136, v128, v137, v138, v139, v140, v141, v142, v143, &v443, v247, v253,
    v256,
    &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    v265,
    v272,
    v279,
    v286,
    v293,
    v300,
    v307,
    v314,
    v321,
    v328,
    v335,
    v342,
    v349,
    v356,
    v361,
    v366,
    v371,
    v376,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  v457 = xmmword_1B00295A0;
  v458 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_24_46();
  v453 = xmmword_1B00295C0;
  OUTLINED_FUNCTION_8_101((__n128)xmmword_1B00295D0);
  v446 = xmmword_1B002DBB0;
  v443 = v144;
  v444 = xmmword_1B0027740;
  v441 = xmmword_1B0029630;
  v442 = xmmword_1B0026A00;
  v439 = xmmword_1B0026320;
  v440 = xmmword_1B0026330;
  v438 = 0u;
  v437 = 0u;
  v435 = v144;
  v436 = v388;
  v433 = xmmword_1B002DBC0;
  v434 = xmmword_1B002DBD0;
  v431 = xmmword_1B002EBC0;
  v432 = xmmword_1B002DBD0;
  v429 = xmmword_1B002DC00;
  v430 = xmmword_1B002DC10;
  v427 = xmmword_1B002EBD0;
  v428 = xmmword_1B002EBE0;
  v425 = v144;
  v426 = xmmword_1B0025E90;
  v423 = v144;
  v424 = v144;
  v421 = v144;
  v422 = xmmword_1B0025E90;
  v419 = v144;
  v420 = xmmword_1B0025E50;
  v417 = v144;
  v418 = v144;
  v415 = v144;
  v416 = xmmword_1B0027770;
  OUTLINED_FUNCTION_5_106(1.0, 1.0, v144);
  v406 = v145;
  v403 = v146;
  v404 = v147;
  v401 = xmmword_1B002DB70;
  v402 = v148;
  v399 = xmmword_1B002DB70;
  v400 = v149;
  v397 = v146;
  v398 = v145;
  v395 = v146;
  v396 = (__int128)v147;
  OUTLINED_FUNCTION_16_78(*(double *)&v148, *(double *)&v145, 0.99554354, v147.n128_f64[0], *(double *)&v149, v146);
  v385 = v150;
  OUTLINED_FUNCTION_0_84();
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_30_35();
  v151 = OUTLINED_FUNCTION_25_38();
  OUTLINED_FUNCTION_29(v152, v153, v154, v155, v156, v157, v158, v159, v151, v386, 1400.0, v160, v161, v162, v73, v75, v243, v248, 0x3F6666663F666666,
    0,
    &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    v266,
    v273,
    v280,
    v287,
    v294,
    v301,
    v308,
    v315,
    v322,
    v329,
    v336,
    v343,
    v350,
    v357,
    v362,
    v367,
    v372,
    v377,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    v385);
  v457 = xmmword_1B0029460;
  v458 = xmmword_1B0029470;
  OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_39_2();
  v451 = xmmword_1B002EB10;
  v452 = xmmword_1B002EB20;
  v449 = v387;
  v450 = v387;
  v447 = xmmword_1B0027B20;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B002DAE0;
  OUTLINED_FUNCTION_7_98((__n128)xmmword_1B002DAF0, v163, v164, v387);
  v436 = v388;
  v433 = xmmword_1B002DB00;
  v434 = xmmword_1B002DB10;
  v431 = xmmword_1B002EB40;
  v432 = xmmword_1B002EB50;
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002EC70, (__n128)xmmword_1B002EC80);
  v427 = xmmword_1B002DB60;
  v428 = xmmword_1B002B0B0;
  *(_QWORD *)&v168 = OUTLINED_FUNCTION_23_53(0.600000024, v165, v166, v167).n128_u64[0];
  OUTLINED_FUNCTION_21_59(v168, v169, v170, v171);
  v416 = xmmword_1B0027770;
  OUTLINED_FUNCTION_10_96(1.0, v172, v173, v174);
  v404 = v175;
  v401 = xmmword_1B002EB80;
  v402 = xmmword_1B0028150;
  v399 = xmmword_1B002EB90;
  v400 = v176;
  v397 = v177;
  v398 = v178;
  v395 = v177;
  v396 = (__int128)v175;
  OUTLINED_FUNCTION_26_0(v179, 0.994757235, *(double *)&v178, v177);
  OUTLINED_FUNCTION_40_11();
  OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_30_35();
  OUTLINED_FUNCTION_6_71();
  OUTLINED_FUNCTION_29(v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, 900.0, 150.0, v190, v191, 0.8, 0.8, v244, v249, 0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v439,
    1065353216,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    v381,
    v383,
    &v391,
    (uint64_t)&v389);
  OUTLINED_FUNCTION_1_114();
  OUTLINED_FUNCTION_38_14();
  v431 = xmmword_1B002EAE0;
  v432 = xmmword_1B002EAF0;
  v429 = xmmword_1B002DA60;
  *(_QWORD *)&v192 = OUTLINED_FUNCTION_12_97((__n128)xmmword_1B002EA80).n128_u64[0];
  OUTLINED_FUNCTION_17_10(v192, v193, v194);
  v420 = xmmword_1B0025E50;
  v417 = v195;
  v418 = v195;
  v415 = v195;
  v416 = xmmword_1B0027770;
  OUTLINED_FUNCTION_5_106(1.0, 1.0, v195);
  v406 = v196;
  v403 = v197;
  v404 = v198;
  OUTLINED_FUNCTION_26_56();
  v400 = v199;
  v397 = v200;
  v398 = v201;
  OUTLINED_FUNCTION_14_95(*(double *)&v201, v202, v200, v203);
  OUTLINED_FUNCTION_2_85();
  OUTLINED_FUNCTION_12_8();
  v257 = v204;
  OUTLINED_FUNCTION_30_35();
  OUTLINED_FUNCTION_6_71();
  OUTLINED_FUNCTION_13_97(v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, 600.0, v245, v250, 0x3F4CCCCD3F4CCCCDLL, v257, &v439, 1065353216, v258, v260,
    v262,
    v267,
    v274,
    v281,
    v288,
    v295,
    v302,
    v309,
    v316,
    v323,
    v330,
    v337,
    v344,
    v351,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  v457 = xmmword_1B00292B0;
  v458 = xmmword_1B00292C0;
  v455 = xmmword_1B002D9A0;
  v456 = xmmword_1B002D9B0;
  v453 = xmmword_1B0028220;
  v454 = xmmword_1B0028230;
  v451 = xmmword_1B002EA00;
  v452 = xmmword_1B002EA10;
  v449 = v387;
  v450 = v387;
  v447 = xmmword_1B002DA00;
  v448 = xmmword_1B0027B30;
  v445 = xmmword_1B0029320;
  OUTLINED_FUNCTION_7_98((__n128)xmmword_1B002DA10, v215, v216, v387);
  v436 = v388;
  OUTLINED_FUNCTION_38_14();
  v431 = xmmword_1B002EA60;
  v432 = xmmword_1B002EA70;
  v429 = xmmword_1B002DA60;
  *(_QWORD *)&v217 = OUTLINED_FUNCTION_12_97((__n128)xmmword_1B002EA80).n128_u64[0];
  *(_QWORD *)&v221 = OUTLINED_FUNCTION_23_53(v217, v218, v219, v220).n128_u64[0];
  OUTLINED_FUNCTION_21_59(v221, v222, v223, v224);
  v416 = xmmword_1B0027770;
  OUTLINED_FUNCTION_10_96(v225, 1.0, v226, v227);
  v404 = v228;
  OUTLINED_FUNCTION_26_56();
  v400 = v229;
  v397 = v230;
  v398 = v231;
  v395 = v230;
  v396 = v232;
  OUTLINED_FUNCTION_26_0(*(double *)&v229, v233, *(double *)&v231, v230);
  OUTLINED_FUNCTION_2_85();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_13_97(v234, v235, v236, v237, v238, v239, v240, v241, -90.0, (__n128)xmmword_1B00261B0, 500.0, &v443, &v441, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v439, 1065353216, v259, v261,
    v263,
    v268,
    v275,
    v282,
    v289,
    v296,
    v303,
    v310,
    v317,
    v324,
    v331,
    v338,
    v345,
    v352,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    1112014848,
    1097859072,
    &v391,
    (uint64_t)&v389);
  return v0;
}

void sub_1AFE0E0C0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_22_0();
  v2 = v1;
  v23 = v3;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C68);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F23D8);
  OUTLINED_FUNCTION_29_61();
  sub_1AFE1A274((uint64_t)&unk_1ED1F24E0);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F24B0);
  v22 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v0, *v2, v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F23D0);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F24A0);
  v20 = v8;
  v21 = v0 + v4[12];
  v19 = *(_QWORD *)(v8 - 8);
  (*(void (**)(void))(v19 + 16))();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F68);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F3F60);
  v17 = *(_QWORD *)(v9 - 8);
  v18 = v0 + v4[16];
  OUTLINED_FUNCTION_33_40(v18, v2[2], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2400);
  OUTLINED_FUNCTION_37_32();
  v11 = v0 + v4[20];
  v12 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_32_39(v11, v2[3], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F78);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F3F70);
  v14 = v0 + v4[24];
  v15 = v2[4];
  v16 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_18_72(v14, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v23, v0, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23 + v4[12], v21, v20);
  OUTLINED_FUNCTION_33_40(v23 + v4[16], v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
  OUTLINED_FUNCTION_32_39(v23 + v4[20], v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  OUTLINED_FUNCTION_18_72(v23 + v4[24], v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFE0E2F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22_0();
  v2 = v1;
  v15 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0708);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F23D0);
  OUTLINED_FUNCTION_29_61();
  sub_1AFE1A274((uint64_t)&unk_1ED1F24E0);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F24A0);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_45(v0, *v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F68);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F3F60);
  v9 = v0 + *(int *)(v4 + 48);
  v10 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_18_72(v9, v2[1], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2400);
  OUTLINED_FUNCTION_37_32();
  v12 = v0 + *(int *)(v4 + 64);
  v13 = v2[2];
  v14 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_33_40(v12, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  OUTLINED_FUNCTION_45(v15, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  OUTLINED_FUNCTION_18_72(v15 + *(int *)(v4 + 48), v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  OUTLINED_FUNCTION_33_40(v15 + *(int *)(v4 + 64), v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFE0E464()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22_0();
  v2 = v1;
  v16 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE74B10);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F23D8);
  OUTLINED_FUNCTION_29_61();
  sub_1AFE1A274((uint64_t)&unk_1ED1F24E0);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F24B0);
  v7 = v6;
  v15 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v0, *v2, v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F68);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F3F60);
  v10 = v0 + *(int *)(v4 + 48);
  v11 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_18_72(v10, v2[1], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F78);
  sub_1AFE1A2B0((uint64_t)&unk_1ED1F3F70);
  v13 = v0 + *(int *)(v4 + 64);
  v14 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_32_39(v13, v2[2], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v16, v0, v15);
  OUTLINED_FUNCTION_18_72(v16 + *(int *)(v4 + 48), v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  OUTLINED_FUNCTION_32_39(v16 + *(int *)(v4 + 64), v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFE0E5F0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3E88);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2398);
  sub_1B0007168();
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_45(v2, *a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_1AFBFBF40();
  v9 = v2 + *(int *)(v5 + 48);
  sub_1AFAF2558(a1[1], v9, &qword_1ED1F23B0);
  OUTLINED_FUNCTION_45(a2, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  sub_1AFAE8274(v9, a2 + *(int *)(v5 + 48), &qword_1ED1F23B0);
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFE0E6B4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C70);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F23E8);
  OUTLINED_FUNCTION_29_61();
  OUTLINED_FUNCTION_37_32();
  sub_1B0007054();
  sub_1AFE19A3C((uint64_t)&qword_1ED1F2430);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_45(v2, *a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2400);
  v10 = v2 + *(int *)(v5 + 48);
  v11 = a1[1];
  v12 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v11, v9);
  OUTLINED_FUNCTION_45(a2, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2 + *(int *)(v5 + 48), v10, v9);
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFE0E7AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AE0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AC0);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74918);
  sub_1AFE1A274((uint64_t)&unk_1EEE74920);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74930);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v6, *a1, v7);
  sub_1AFE18DE8();
  v9 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_1AFAF2558(a1[1], v9, &qword_1EEE74940);
  sub_1AFE19F34((uint64_t)&unk_1EEE74948);
  v10 = (uint64_t)&v6[*(int *)(v4 + 64)];
  sub_1AFAF2558(a1[2], v10, &qword_1EEE74950);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  sub_1AFAE8274(v9, a2 + *(int *)(v4 + 48), &qword_1EEE74940);
  sub_1AFAE8274(v10, a2 + *(int *)(v4 + 64), &qword_1EEE74950);
}

void NextHourPrecipitationChartView.init(model:lollipopPoint:selectedData:lollipopEnabled:)()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *HourPrecipitationChartView;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD v57[4];
  unsigned __int8 v58;
  _QWORD v59[6];

  OUTLINED_FUNCTION_22_0();
  v46 = v0;
  v47 = v1;
  v48 = v2;
  v4 = v3;
  v6 = v5;
  sub_1AFAE8274(v3, (uint64_t)v57, &qword_1EEE747C8);
  v44 = v57[0];
  v43 = v57[1];
  v42 = v57[2];
  v41 = v57[3];
  v40 = v58;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v39 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_33();
  v45 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v38 - v18;
  HourPrecipitationChartView = (int *)type metadata accessor for NextHourPrecipitationChartView(0);
  v21 = OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_31(v21, v22, v23, v21);
  sub_1AFAF2558((uint64_t)v19, (uint64_t)v16, &qword_1ED1F4BA0);
  v24 = v47;
  sub_1B0008158();
  sub_1AFACE0DC((uint64_t)v19, &qword_1ED1F4BA0);
  sub_1AFAF2DFC(v24, v6, type metadata accessor for NextHourPrecipitationChartViewModel);
  sub_1AFAE8274(v4, (uint64_t)v59, &qword_1EEE747C8);
  if (v59[1])
  {
    v25 = v44;
    v26 = v43;
    v52 = v44;
    v53 = v43;
    v27 = v42;
    v28 = v41;
    v54 = v42;
    v55 = v41;
    v29 = v40;
    v56 = v40 & 1;
  }
  else
  {
    v49 = 0;
    v50 = 0;
    v51 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E0);
    sub_1B000823C();
    v25 = v52;
    v26 = v53;
    v27 = v54;
    v28 = v55;
    v29 = v56;
  }
  v30 = v6 + HourPrecipitationChartView[6];
  *(_QWORD *)v30 = v25;
  *(_QWORD *)(v30 + 8) = v26;
  *(_QWORD *)(v30 + 16) = v27;
  *(_QWORD *)(v30 + 24) = v28;
  *(_BYTE *)(v30 + 32) = v29 & 1;
  v31 = v48;
  sub_1AFAF2558(v48, (uint64_t)v11, &qword_1EEE747D0);
  if (OUTLINED_FUNCTION_21_60((uint64_t)v11) == 1)
  {
    v32 = OUTLINED_FUNCTION_24_41();
    v33 = v39;
    OUTLINED_FUNCTION_31(v32, v34, v35, v32);
    v36 = v45;
    sub_1B000823C();
    sub_1AFACE0DC(v31, &qword_1EEE747D0);
    sub_1AFAE2D74(v24, type metadata accessor for NextHourPrecipitationChartViewModel);
    sub_1AFACE0DC(v33, (uint64_t *)&unk_1ED1F00A0);
    sub_1AFACE0DC((uint64_t)v11, &qword_1EEE747D0);
  }
  else
  {
    sub_1AFACE0DC(v31, &qword_1EEE747D0);
    sub_1AFAE2D74(v24, type metadata accessor for NextHourPrecipitationChartViewModel);
    v36 = v45;
    sub_1AFAE8274((uint64_t)v11, v45, &qword_1EEE747D8);
  }
  v37 = v46;
  sub_1AFAE8274(v36, v6 + HourPrecipitationChartView[7], &qword_1EEE747D8);
  *(_BYTE *)(v6 + HourPrecipitationChartView[8]) = v37 & 1;
  OUTLINED_FUNCTION_2_3();
}

uint64_t type metadata accessor for NextHourPrecipitationChartView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1EFFF0);
}

void NextHourPrecipitationChartView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[2];
  __int128 v14;
  char v15;
  _BYTE v16[40];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFAF2DFC(v1, (uint64_t)v7, v8);
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartView(0);
  v10 = v1 + *(int *)(HourPrecipitationChartView + 24);
  v11 = *(_QWORD *)(v10 + 8);
  v12 = *(_BYTE *)(v10 + 32);
  v13[0] = *(_QWORD *)v10;
  v13[1] = v11;
  v14 = *(_OWORD *)(v10 + 16);
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
  sub_1B0008224();
  sub_1B0008224();
  sub_1AFE0EDDC((uint64_t)v7, (uint64_t)v16, v2, *(unsigned __int8 *)(v1 + *(int *)(HourPrecipitationChartView + 32)), a1);
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFE0EDDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int *HourPrecipitationChartContentView;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _BYTE v21[12];
  int v22;

  v22 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v21[-v13];
  HourPrecipitationChartContentView = (int *)type metadata accessor for NextHourPrecipitationChartContentView(0);
  v16 = sub_1B00058D8();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v16);
  sub_1AFAF2558((uint64_t)v14, (uint64_t)v11, &qword_1ED1F4BA0);
  sub_1B0008158();
  sub_1AFACE0DC((uint64_t)v14, &qword_1ED1F4BA0);
  v17 = (uint64_t *)(a5 + HourPrecipitationChartContentView[8]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  swift_storeEnumTagMultiPayload();
  v18 = a5 + HourPrecipitationChartContentView[9];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_BYTE *)(v18 + 8) = 0;
  *(_QWORD *)(a5 + HourPrecipitationChartContentView[10]) = 0x3FF0000000000000;
  sub_1AFAF2984(a1, a5, type metadata accessor for NextHourPrecipitationChartViewModel);
  v19 = a5 + HourPrecipitationChartContentView[6];
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a2;
  *(_OWORD *)(v19 + 16) = v20;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(a2 + 32);
  sub_1AFAE8274(a3, a5 + HourPrecipitationChartContentView[7], &qword_1EEE747D8);
  *(_BYTE *)(a5 + HourPrecipitationChartContentView[11]) = v22;
}

uint64_t sub_1AFE0EF94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for NextHourPrecipitationChartView(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  int *HourPrecipitationChartViewModel;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t HourPrecipitationChartView;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
    *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
    HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
    v9 = HourPrecipitationChartViewModel[10];
    v10 = (void *)(v7 + v9);
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    }
    else
    {
      v14 = sub_1B00058D8();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v15 = HourPrecipitationChartViewModel[11];
    v16 = (char *)(v7 + v15);
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v21 = HourPrecipitationChartViewModel[12];
    v22 = (char *)(v7 + v21);
    v23 = (char *)a2 + v21;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1B00058D8();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      v27(v22, v23, v26);
      v27(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    v28 = HourPrecipitationChartViewModel[13];
    v29 = (void *)(v7 + v28);
    v30 = (char *)a2 + v28;
    v31 = sub_1B00058D8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
    v33 = a3[5];
    v34 = (char *)(v7 + v33);
    v35 = (char *)a2 + v33;
    v51 = v18;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v33, 1, v31))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v34, v35, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    *(_QWORD *)&v34[*(int *)(v37 + 28)] = *(_QWORD *)&v35[*(int *)(v37 + 28)];
    v38 = a3[6];
    v39 = a3[7];
    v40 = v7 + v38;
    v41 = (uint64_t)a2 + v38;
    v42 = *(_QWORD *)(v41 + 8);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *(_QWORD *)(v40 + 8) = v42;
    *(_BYTE *)(v40 + 32) = *(_BYTE *)(v41 + 32);
    *(_OWORD *)(v40 + 16) = *(_OWORD *)(v41 + 16);
    v43 = (_QWORD *)(v7 + v39);
    v44 = (uint64_t)a2 + v39;
    v45 = *(uint64_t *)((char *)a2 + v39 + 8);
    *v43 = *(uint64_t *)((char *)a2 + v39);
    v43[1] = v45;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
    v47 = (char *)v43 + v46;
    v48 = (char *)(v44 + v46);
    if (__swift_getEnumTagSinglePayload(v44 + v46, 1, v51))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v47, v48, v31);
      *(_QWORD *)&v47[*(int *)(v51 + 20)] = *(_QWORD *)&v48[*(int *)(v51 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v51);
    }
    *(_BYTE *)(v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v7;
}

uint64_t destroy for NextHourPrecipitationChartView(uint64_t a1, uint64_t a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = a1 + HourPrecipitationChartViewModel[10];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    v7 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = a1 + HourPrecipitationChartViewModel[11];
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, HourPrecipitationChartView))
  {
    v10 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  v11 = a1 + HourPrecipitationChartViewModel[12];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
  {
    v13 = sub_1B00058D8();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 36), v13);
  }
  v15 = a1 + HourPrecipitationChartViewModel[13];
  v16 = sub_1B00058D8();
  if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + *(int *)(a2 + 20);
  if (!__swift_getEnumTagSinglePayload(v17, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  swift_release();
  swift_release();
  swift_release();
  v18 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  v19 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  result = __swift_getEnumTagSinglePayload(v19, 1, HourPrecipitationChartView);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v19, v16);
  return result;
}

uint64_t initializeWithCopy for NextHourPrecipitationChartView(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t HourPrecipitationChartView;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v12 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v50 = v16;
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v19 = HourPrecipitationChartViewModel[12];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1B00058D8();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v25(v20, v21, v24);
    v25(&v20[*(int *)(v22 + 36)], &v21[*(int *)(v22 + 36)], v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  }
  v26 = HourPrecipitationChartViewModel[13];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  v31 = a3[5];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  if (__swift_getEnumTagSinglePayload(a2 + v31, 1, v29))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v32, v33, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v32[*(int *)(v35 + 28)] = *(_QWORD *)&v33[*(int *)(v35 + 28)];
  v36 = a3[6];
  v37 = a3[7];
  v38 = a3;
  v39 = a1 + v36;
  v40 = a2 + v36;
  v41 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = v41;
  *(_BYTE *)(v39 + 32) = *(_BYTE *)(v40 + 32);
  *(_OWORD *)(v39 + 16) = *(_OWORD *)(v40 + 16);
  v42 = (_QWORD *)(a1 + v37);
  v43 = a2 + v37;
  v44 = *(_QWORD *)(a2 + v37 + 8);
  *v42 = *(_QWORD *)(a2 + v37);
  v42[1] = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v46 = (char *)v42 + v45;
  v47 = (char *)(v43 + v45);
  if (__swift_getEnumTagSinglePayload(v43 + v45, 1, v50))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v46, v47, v29);
    *(_QWORD *)&v46[*(int *)(v50 + 20)] = *(_QWORD *)&v47[*(int *)(v50 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v50);
  }
  *(_BYTE *)(a1 + v38[8]) = *(_BYTE *)(a2 + v38[8]);
  return a1;
}

uint64_t assignWithCopy for NextHourPrecipitationChartView(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t HourPrecipitationChartView;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1AFACE0DC((uint64_t)v8, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v61 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v8, v9, v61);
LABEL_7:
  v15 = HourPrecipitationChartViewModel[11];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_1AFAE2D74((uint64_t)v16, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  v62 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v16, v17, v62);
  *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
LABEL_13:
  v23 = HourPrecipitationChartViewModel[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      v29 = sub_1B00058D8();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      v30(v24, v25, v29);
      v30(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    sub_1AFACE0DC((uint64_t)v24, &qword_1ED1F1C50);
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  v63 = sub_1B00058D8();
  v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24);
  v64(v24, v25, v63);
  v64(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v63);
LABEL_19:
  v32 = HourPrecipitationChartViewModel[13];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = sub_1B00058D8();
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_24:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 24))(v33, v34, v35);
LABEL_25:
  v40 = a3[5];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = __swift_getEnumTagSinglePayload(a1 + v40, 1, v35);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v35);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v41, v42, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v35);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v45 = *(_QWORD *)(v35 - 8);
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v35);
LABEL_30:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v41, v42, v35);
LABEL_31:
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v41[*(int *)(v47 + 28)] = *(_QWORD *)&v42[*(int *)(v47 + 28)];
  swift_retain();
  swift_release();
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_retain();
  swift_release();
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  swift_retain();
  swift_release();
  v51 = *(_OWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  *(_OWORD *)(v49 + 16) = v51;
  v52 = a3[7];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  swift_retain();
  swift_release();
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  swift_retain();
  swift_release();
  v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v56 = (char *)(v53 + v55);
  v57 = (char *)(v54 + v55);
  LODWORD(v54) = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v18);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v18);
  if (!(_DWORD)v54)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v56, v57, v35);
      *(_QWORD *)&v56[*(int *)(v18 + 20)] = *(_QWORD *)&v57[*(int *)(v18 + 20)];
      goto LABEL_37;
    }
    sub_1AFAE2D74((uint64_t)v56, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    goto LABEL_36;
  }
  if (v58)
  {
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v56, v57, v35);
  *(_QWORD *)&v56[*(int *)(v18 + 20)] = *(_QWORD *)&v57[*(int *)(v18 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v18);
LABEL_37:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for NextHourPrecipitationChartView(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t HourPrecipitationChartView;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v12 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v19 = HourPrecipitationChartViewModel[12];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1B00058D8();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
    v25(v20, v21, v24);
    v25(&v20[*(int *)(v22 + 36)], &v21[*(int *)(v22 + 36)], v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  }
  v26 = HourPrecipitationChartViewModel[13];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  v31 = a3[5];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  if (__swift_getEnumTagSinglePayload(a2 + v31, 1, v29))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v32, v33, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v32[*(int *)(v35 + 28)] = *(_QWORD *)&v33[*(int *)(v35 + 28)];
  v36 = a3[6];
  v37 = a3[7];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)(v38 + 32) = *(_BYTE *)(v39 + 32);
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = (_QWORD *)(a1 + v37);
  v42 = a2 + v37;
  v43 = *(_QWORD *)(a2 + v37);
  v44 = *(_QWORD *)(a2 + v37 + 8);
  *v41 = v43;
  v41[1] = v44;
  v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v46 = (char *)v41 + v45;
  v47 = (char *)(v42 + v45);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v16))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v46, v47, v29);
    *(_QWORD *)&v46[*(int *)(v16 + 20)] = *(_QWORD *)&v47[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v16);
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for NextHourPrecipitationChartView(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t HourPrecipitationChartView;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1AFACE0DC((uint64_t)v8, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v61 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v8, v9, v61);
LABEL_7:
  v15 = HourPrecipitationChartViewModel[11];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_1AFAE2D74((uint64_t)v16, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  v62 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v16, v17, v62);
  *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
LABEL_13:
  v23 = HourPrecipitationChartViewModel[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      v29 = sub_1B00058D8();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
      v30(v24, v25, v29);
      v30(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    sub_1AFACE0DC((uint64_t)v24, &qword_1ED1F1C50);
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  v63 = sub_1B00058D8();
  v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40);
  v64(v24, v25, v63);
  v64(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v63);
LABEL_19:
  v32 = HourPrecipitationChartViewModel[13];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = sub_1B00058D8();
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_24:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v33, v34, v35);
LABEL_25:
  v40 = a3[5];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = __swift_getEnumTagSinglePayload(a1 + v40, 1, v35);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v35);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v41, v42, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v35);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v45 = *(_QWORD *)(v35 - 8);
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v35);
LABEL_30:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v41, v42, v35);
LABEL_31:
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v41[*(int *)(v47 + 28)] = *(_QWORD *)&v42[*(int *)(v47 + 28)];
  swift_release();
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_release();
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  swift_release();
  *(_OWORD *)(v49 + 16) = *(_OWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)(a1 + v51) = *(_QWORD *)(a2 + v51);
  swift_release();
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
  swift_release();
  v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v55 = (char *)(v52 + v54);
  v56 = (char *)(v53 + v54);
  v57 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v18);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v18);
  if (!v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v55, v56, v35);
      *(_QWORD *)&v55[*(int *)(v18 + 20)] = *(_QWORD *)&v56[*(int *)(v18 + 20)];
      goto LABEL_37;
    }
    sub_1AFAE2D74((uint64_t)v55, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    goto LABEL_36;
  }
  if (v58)
  {
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v55, v56, v35);
  *(_QWORD *)&v55[*(int *)(v18 + 20)] = *(_QWORD *)&v56[*(int *)(v18 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v18);
LABEL_37:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NextHourPrecipitationChartView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFE10B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_3_108();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      if ((_DWORD)v3 == 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_19_66();
        OUTLINED_FUNCTION_9_0();
        return;
      }
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      v11 = *(int *)(a3 + 28);
    }
    v8 = v4 + v11;
  }
  OUTLINED_FUNCTION_6_5(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for NextHourPrecipitationChartView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE10C04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_3_108();
  OUTLINED_FUNCTION_1_12();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    OUTLINED_FUNCTION_1_12();
    if (v11)
    {
      v9 = v12;
      v13 = *(int *)(a4 + 20);
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_43_12();
        OUTLINED_FUNCTION_9_0();
        return;
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      v13 = *(int *)(a4 + 28);
    }
    v10 = v5 + v13;
  }
  OUTLINED_FUNCTION_5_4(v10, v4, v4, v9);
}

void sub_1AFE10C94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for NextHourPrecipitationChartViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1AFE10D74(319, &qword_1ED1EFFD8, &qword_1ED1F4BA0, MEMORY[0x1E0CDF9A8]);
    if (v1 <= 0x3F)
    {
      sub_1AFE10D74(319, &qword_1ED1EFFE0, (uint64_t *)&unk_1ED1F00A0, MEMORY[0x1E0CDFDB8]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1AFE10D74(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1AFE10DCC()
{
  sub_1AFE19A3C((uint64_t)&unk_1EEE747F8);
}

uint64_t type metadata accessor for NextHourPrecipitationChartContentView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE74858);
}

uint64_t sub_1AFE10E0C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  int *HourPrecipitationChartViewModel;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t HourPrecipitationChartView;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v61;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
    *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
    HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
    v9 = HourPrecipitationChartViewModel[10];
    v10 = (void *)(v7 + v9);
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    }
    else
    {
      v14 = sub_1B00058D8();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v15 = HourPrecipitationChartViewModel[11];
    v16 = (char *)(v7 + v15);
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v21 = HourPrecipitationChartViewModel[12];
    v22 = (char *)(v7 + v21);
    v23 = (char *)a2 + v21;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1B00058D8();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      v27(v22, v23, v26);
      v27(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    v28 = HourPrecipitationChartViewModel[13];
    v29 = (void *)(v7 + v28);
    v30 = (char *)a2 + v28;
    v31 = sub_1B00058D8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
    v33 = a3[5];
    v34 = (char *)(v7 + v33);
    v35 = (char *)a2 + v33;
    v61 = v18;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v33, 1, v31))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v34, v35, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    *(_QWORD *)&v34[*(int *)(v37 + 28)] = *(_QWORD *)&v35[*(int *)(v37 + 28)];
    v38 = a3[6];
    v39 = a3[7];
    v40 = v7 + v38;
    v41 = (uint64_t)a2 + v38;
    v42 = *(_QWORD *)(v41 + 8);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *(_QWORD *)(v40 + 8) = v42;
    *(_BYTE *)(v40 + 32) = *(_BYTE *)(v41 + 32);
    *(_OWORD *)(v40 + 16) = *(_OWORD *)(v41 + 16);
    v43 = (_QWORD *)(v7 + v39);
    v44 = (uint64_t)a2 + v39;
    v45 = *(uint64_t *)((char *)a2 + v39 + 8);
    *v43 = *(uint64_t *)((char *)a2 + v39);
    v43[1] = v45;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
    v47 = (char *)v43 + v46;
    v48 = (char *)(v44 + v46);
    if (__swift_getEnumTagSinglePayload(v44 + v46, 1, v61))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v47, v48, v31);
      *(_QWORD *)&v47[*(int *)(v61 + 20)] = *(_QWORD *)&v48[*(int *)(v61 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v61);
    }
    v50 = a3[8];
    v51 = (_QWORD *)(v7 + v50);
    v52 = (uint64_t *)((char *)a2 + v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_1B00074D4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v54 = a3[9];
    v55 = v7 + v54;
    v56 = (uint64_t)a2 + v54;
    v57 = *(_QWORD *)v56;
    v58 = *(_BYTE *)(v56 + 8);
    sub_1AFACF5C4(*(_QWORD *)v56, v58);
    *(_QWORD *)v55 = v57;
    *(_BYTE *)(v55 + 8) = v58;
    v59 = a3[11];
    *(_QWORD *)(v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(_BYTE *)(v7 + v59) = *((_BYTE *)a2 + v59);
  }
  return v7;
}

uint64_t sub_1AFE11320(uint64_t a1, int *a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = a1 + HourPrecipitationChartViewModel[10];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    v7 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = a1 + HourPrecipitationChartViewModel[11];
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (!__swift_getEnumTagSinglePayload(v8, 1, HourPrecipitationChartView))
  {
    v10 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  v11 = a1 + HourPrecipitationChartViewModel[12];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
  {
    v13 = sub_1B00058D8();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v14(v11 + *(int *)(v12 + 36), v13);
  }
  v15 = a1 + HourPrecipitationChartViewModel[13];
  v16 = sub_1B00058D8();
  if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[5];
  if (!__swift_getEnumTagSinglePayload(v17, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  swift_release();
  swift_release();
  swift_release();
  v18 = a1 + a2[7];
  swift_release();
  swift_release();
  v19 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  if (!__swift_getEnumTagSinglePayload(v19, 1, HourPrecipitationChartView))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v19, v16);
  v20 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_1B00074D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }
  return sub_1AFACCD50(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
}

uint64_t sub_1AFE115A8(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t HourPrecipitationChartView;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  int *v62;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v12 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v19 = HourPrecipitationChartViewModel[12];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = a3;
    v25 = sub_1B00058D8();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v20, v21, v25);
    v27 = v25;
    a3 = v24;
    v26(&v20[*(int *)(v22 + 36)], &v21[*(int *)(v22 + 36)], v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  }
  v28 = HourPrecipitationChartViewModel[13];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v33 = a3[5];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = v16;
  if (__swift_getEnumTagSinglePayload(a2 + v33, 1, v31))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v34, v35, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
  }
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v34[*(int *)(v38 + 28)] = *(_QWORD *)&v35[*(int *)(v38 + 28)];
  v39 = a3[6];
  v40 = a3[7];
  v62 = a3;
  v41 = a1 + v39;
  v42 = a2 + v39;
  v43 = *(_QWORD *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  *(_BYTE *)(v41 + 32) = *(_BYTE *)(v42 + 32);
  *(_OWORD *)(v41 + 16) = *(_OWORD *)(v42 + 16);
  v44 = (_QWORD *)(a1 + v40);
  v45 = a2 + v40;
  v46 = *(_QWORD *)(a2 + v40 + 8);
  *v44 = *(_QWORD *)(a2 + v40);
  v44[1] = v46;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v48 = (char *)v44 + v47;
  v49 = (char *)(v45 + v47);
  if (__swift_getEnumTagSinglePayload(v45 + v47, 1, v36))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v48, v49, v31);
    *(_QWORD *)&v48[*(int *)(v36 + 20)] = *(_QWORD *)&v49[*(int *)(v36 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v36);
  }
  v51 = v62[8];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v54 = sub_1B00074D4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  }
  else
  {
    *v52 = *v53;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v55 = v62[9];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)v57;
  v59 = *(_BYTE *)(v57 + 8);
  sub_1AFACF5C4(*(_QWORD *)v57, v59);
  *(_QWORD *)v56 = v58;
  *(_BYTE *)(v56 + 8) = v59;
  v60 = v62[11];
  *(_QWORD *)(a1 + v62[10]) = *(_QWORD *)(a2 + v62[10]);
  *(_BYTE *)(a1 + v60) = *(_BYTE *)(a2 + v60);
  return a1;
}

uint64_t sub_1AFE11AA0(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t HourPrecipitationChartView;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1AFACE0DC((uint64_t)v8, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v72 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v8, v9, v72);
LABEL_7:
  v15 = HourPrecipitationChartViewModel[11];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_1AFAE2D74((uint64_t)v16, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  v73 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v16, v17, v73);
  *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
LABEL_13:
  v23 = HourPrecipitationChartViewModel[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      v29 = sub_1B00058D8();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      v30(v24, v25, v29);
      v30(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    sub_1AFACE0DC((uint64_t)v24, &qword_1ED1F1C50);
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  v74 = sub_1B00058D8();
  v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24);
  v75(v24, v25, v74);
  v75(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v74);
LABEL_19:
  v32 = HourPrecipitationChartViewModel[13];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = sub_1B00058D8();
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_24:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 24))(v33, v34, v35);
LABEL_25:
  v40 = a3[5];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = __swift_getEnumTagSinglePayload(a1 + v40, 1, v35);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v35);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v41, v42, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v35);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v45 = *(_QWORD *)(v35 - 8);
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v35);
LABEL_30:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v41, v42, v35);
LABEL_31:
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v41[*(int *)(v47 + 28)] = *(_QWORD *)&v42[*(int *)(v47 + 28)];
  swift_retain();
  swift_release();
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_retain();
  swift_release();
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  swift_retain();
  swift_release();
  v51 = *(_OWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  *(_OWORD *)(v49 + 16) = v51;
  v52 = a3[7];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  swift_retain();
  swift_release();
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  swift_retain();
  swift_release();
  v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v56 = (char *)(v53 + v55);
  v57 = (char *)(v54 + v55);
  LODWORD(v54) = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v18);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v18);
  if ((_DWORD)v54)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v56, v57, v35);
      *(_QWORD *)&v56[*(int *)(v18 + 20)] = *(_QWORD *)&v57[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v18);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    sub_1AFAE2D74((uint64_t)v56, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v56, v57, v35);
  *(_QWORD *)&v56[*(int *)(v18 + 20)] = *(_QWORD *)&v57[*(int *)(v18 + 20)];
LABEL_37:
  if (a1 != a2)
  {
    v60 = a3[8];
    v61 = (_QWORD *)(a1 + v60);
    v62 = (_QWORD *)(a2 + v60);
    sub_1AFACE0DC(a1 + v60, &qword_1ED1EE588);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v63 = sub_1B00074D4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    }
    else
    {
      *v61 = *v62;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v64 = a3[9];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = *(_QWORD *)v66;
  v68 = *(_BYTE *)(v66 + 8);
  sub_1AFACF5C4(*(_QWORD *)v66, v68);
  v69 = *(_QWORD *)v65;
  v70 = *(_BYTE *)(v65 + 8);
  *(_QWORD *)v65 = v67;
  *(_BYTE *)(v65 + 8) = v68;
  sub_1AFACCD50(v69, v70);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1AFE121EC(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t HourPrecipitationChartView;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v12 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, v15, v18);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v19 = HourPrecipitationChartViewModel[12];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1B00058D8();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
    v25(v20, v21, v24);
    v25(&v20[*(int *)(v22 + 36)], &v21[*(int *)(v22 + 36)], v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  }
  v26 = HourPrecipitationChartViewModel[13];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  v31 = a3[5];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  if (__swift_getEnumTagSinglePayload(a2 + v31, 1, v29))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v32, v33, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v32[*(int *)(v35 + 28)] = *(_QWORD *)&v33[*(int *)(v35 + 28)];
  v36 = a3[6];
  v37 = a3[7];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_BYTE *)(v38 + 32) = *(_BYTE *)(v39 + 32);
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  v41 = (_QWORD *)(a1 + v37);
  v42 = a2 + v37;
  v43 = *(_QWORD *)(a2 + v37);
  v44 = *(_QWORD *)(a2 + v37 + 8);
  *v41 = v43;
  v41[1] = v44;
  v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v46 = (char *)v41 + v45;
  v47 = (char *)(v42 + v45);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v16))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v46, v47, v29);
    *(_QWORD *)&v46[*(int *)(v16 + 20)] = *(_QWORD *)&v47[*(int *)(v16 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v16);
  }
  v49 = a3[8];
  v50 = (void *)(a1 + v49);
  v51 = (const void *)(a2 + v49);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v53 = sub_1B00074D4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  v54 = a3[9];
  v55 = a3[10];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1AFE12684(uint64_t a1, uint64_t a2, int *a3)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t HourPrecipitationChartView;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v7 = HourPrecipitationChartViewModel[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_1AFACE0DC((uint64_t)v8, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v73 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v8, v9, v73);
LABEL_7:
  v15 = HourPrecipitationChartViewModel[11];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
      *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_1AFAE2D74((uint64_t)v16, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  v74 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v16, v17, v74);
  *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
LABEL_13:
  v23 = HourPrecipitationChartViewModel[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      v29 = sub_1B00058D8();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
      v30(v24, v25, v29);
      v30(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    sub_1AFACE0DC((uint64_t)v24, &qword_1ED1F1C50);
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  v75 = sub_1B00058D8();
  v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 40);
  v76(v24, v25, v75);
  v76(&v24[*(int *)(v26 + 36)], &v25[*(int *)(v26 + 36)], v75);
LABEL_19:
  v32 = HourPrecipitationChartViewModel[13];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = sub_1B00058D8();
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v38 = *(_QWORD *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_24:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v33, v34, v35);
LABEL_25:
  v40 = a3[5];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = __swift_getEnumTagSinglePayload(a1 + v40, 1, v35);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v35);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v41, v42, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v35);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v45 = *(_QWORD *)(v35 - 8);
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v35);
LABEL_30:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v41, v42, v35);
LABEL_31:
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  *(_QWORD *)&v41[*(int *)(v47 + 28)] = *(_QWORD *)&v42[*(int *)(v47 + 28)];
  swift_release();
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  swift_release();
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  swift_release();
  *(_OWORD *)(v49 + 16) = *(_OWORD *)(v50 + 16);
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)(a1 + v51) = *(_QWORD *)(a2 + v51);
  swift_release();
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
  swift_release();
  v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8) + 32);
  v55 = (char *)(v52 + v54);
  v56 = (char *)(v53 + v54);
  v57 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v18);
  v58 = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v18);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v55, v56, v35);
      *(_QWORD *)&v55[*(int *)(v18 + 20)] = *(_QWORD *)&v56[*(int *)(v18 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v18);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    sub_1AFAE2D74((uint64_t)v55, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v55, v56, v35);
  *(_QWORD *)&v55[*(int *)(v18 + 20)] = *(_QWORD *)&v56[*(int *)(v18 + 20)];
LABEL_37:
  if (a1 != a2)
  {
    v60 = a3[8];
    v61 = (void *)(a1 + v60);
    v62 = (const void *)(a2 + v60);
    sub_1AFACE0DC(a1 + v60, &qword_1ED1EE588);
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v64 = sub_1B00074D4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v61, v62, v64);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
  }
  v65 = a3[9];
  v66 = a1 + v65;
  v67 = (uint64_t *)(a2 + v65);
  v68 = *v67;
  LOBYTE(v67) = *((_BYTE *)v67 + 8);
  v69 = *(_QWORD *)v66;
  v70 = *(_BYTE *)(v66 + 8);
  *(_QWORD *)v66 = v68;
  *(_BYTE *)(v66 + 8) = (_BYTE)v67;
  sub_1AFACCD50(v69, v70);
  v71 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v71) = *(_BYTE *)(a2 + v71);
  return a1;
}

uint64_t sub_1AFE12D8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFE12D98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_3_108();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      if ((_DWORD)v3 == 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_19_66();
        OUTLINED_FUNCTION_9_0();
        return;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      OUTLINED_FUNCTION_0_1();
      if (v9)
      {
        v7 = v12;
        v11 = a3[7];
      }
      else
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE716C8);
        v11 = a3[8];
      }
    }
    v8 = v4 + v11;
  }
  OUTLINED_FUNCTION_6_5(v8, v3, v7);
}

uint64_t sub_1AFE12E40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE12E4C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_3_108();
  OUTLINED_FUNCTION_1_12();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
    OUTLINED_FUNCTION_1_12();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_43_12();
        OUTLINED_FUNCTION_9_0();
        return;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      OUTLINED_FUNCTION_1_12();
      if (v11)
      {
        v9 = v14;
        v13 = a4[7];
      }
      else
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE716C8);
        v13 = a4[8];
      }
    }
    v10 = v5 + v13;
  }
  OUTLINED_FUNCTION_5_4(v10, v4, v4, v9);
}

void sub_1AFE12EFC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for NextHourPrecipitationChartViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1AFE10D74(319, &qword_1ED1EFFD8, &qword_1ED1F4BA0, MEMORY[0x1E0CDF9A8]);
    if (v1 <= 0x3F)
    {
      sub_1AFE10D74(319, &qword_1ED1EFFE0, (uint64_t *)&unk_1ED1F00A0, MEMORY[0x1E0CDFDB8]);
      if (v2 <= 0x3F)
      {
        sub_1AFC75228();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1AFE13010()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1AFE13020()
{
  _BYTE v1[80];

  sub_1AFCE830C((uint64_t)v1);
  return memcpy(&qword_1EEE74778, v1, 0x50uLL);
}

uint64_t sub_1AFE13054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  unint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t HourPrecipitationChartContentView;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _QWORD __src[14];

  v89 = a1;
  v88 = type metadata accessor for NHPChartDescriptorRepresentable(0);
  MEMORY[0x1E0C80A78](v88);
  v87 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1B00079D8();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v78 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartContentView - 8) + 64);
  v69 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v70 = v4;
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  v68 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748A8);
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748B0);
  v10 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  v65 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748B8);
  v14 = *(_QWORD *)(v13 - 8);
  v71 = v13;
  v72 = v14;
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748C0);
  v73 = *(_QWORD *)(v16 - 8);
  v74 = v16;
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748C8);
  MEMORY[0x1E0C80A78](v63);
  v66 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748D0);
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v76 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748D8);
  MEMORY[0x1E0C80A78](v84);
  v86 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748E0);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v81 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748E8);
  sub_1AFE18C34();
  sub_1B00070F0();
  v91 = v1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE749C0);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE749C8);
  v24 = v23;
  sub_1AFE1A2B0((uint64_t)&unk_1EEE749D0);
  v26 = v25;
  sub_1B0007D74();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v8, v6);
  v60 = v1;
  v90 = v1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F20);
  __src[0] = v6;
  __src[1] = v22;
  __src[2] = v24;
  __src[3] = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1AFE1A2B0((uint64_t)&qword_1EEE71F28);
  v30 = v29;
  v31 = v61;
  v32 = v64;
  sub_1B0007D8C();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v32);
  v33 = v68;
  sub_1AFAF2DFC(v1, v68, type metadata accessor for NextHourPrecipitationChartContentView);
  v34 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v35 = swift_allocObject();
  sub_1AFAF2984(v33, v35 + v34, type metadata accessor for NextHourPrecipitationChartContentView);
  sub_1B00082E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE749D8);
  __src[0] = v32;
  __src[1] = v27;
  v36 = v63;
  __src[2] = OpaqueTypeConformance2;
  __src[3] = v30;
  swift_getOpaqueTypeConformance2();
  sub_1AFE190D0();
  v37 = v67;
  v38 = v71;
  v39 = (uint64_t)v66;
  sub_1B0007DBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v38);
  sub_1B00082E4();
  v40 = v60;
  sub_1B0007534();
  v42 = v73;
  v41 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v39, v37, v74);
  memcpy((void *)(v39 + *(int *)(v36 + 36)), __src, 0x70uLL);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v41);
  v43 = v40 + *(int *)(HourPrecipitationChartContentView + 36);
  v44 = *(_QWORD *)v43;
  LOBYTE(v42) = *(_BYTE *)(v43 + 8);
  sub_1AFACF5C4(*(_QWORD *)v43, v42);
  sub_1AFB4A850();
  LOBYTE(v38) = v45;
  sub_1AFACCD50(v44, v42);
  if ((v38 & 1) != 0)
  {
    v46 = v78;
    sub_1B00079CC();
  }
  else
  {
    v46 = v78;
    sub_1B00079B4();
  }
  v47 = sub_1AFE197F0();
  v48 = v76;
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v82);
  sub_1AFACE0DC(v39, &qword_1EEE748C8);
  sub_1B00077BC();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v49 = (id)qword_1ED1F4470;
  v50 = sub_1B0007D44();
  v52 = v51;
  v54 = v53 & 1;
  v93 = v36;
  v94 = v47;
  swift_getOpaqueTypeConformance2();
  v55 = (uint64_t)v86;
  v56 = v79;
  sub_1B0007EB8();
  sub_1AFAED640(v50, v52, v54);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v56);
  v57 = v87;
  sub_1AFAF2DFC(v40, v87, type metadata accessor for NextHourPrecipitationChartViewModel);
  sub_1AFE19990();
  sub_1AFE19A3C((uint64_t)&unk_1EEE74A08);
  v58 = v81;
  sub_1B0007F00();
  sub_1AFAE2D74(v57, type metadata accessor for NHPChartDescriptorRepresentable);
  sub_1AFACE0DC(v55, &qword_1EEE748D8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v83 + 32))(v89, v58, v85);
}

uint64_t sub_1AFE138B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74950);
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46 = (uint64_t)v40 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74940);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v44 = (uint64_t)v40 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74908);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE748F8);
  v43 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AC0);
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v40 - v22;
  v40[1] = a1;
  v50 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AC8);
  sub_1AFE1A0F8();
  sub_1B00070E4();
  v49 = a1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74910);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74918);
  v26 = v25;
  sub_1AFE1A274((uint64_t)&unk_1EEE74920);
  v28 = v27;
  sub_1B0006F58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74900);
  v51 = (char *)v11;
  v52 = v24;
  v53 = v26;
  v54 = v28;
  swift_getOpaqueTypeConformance2();
  v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74928);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74930);
  v51 = (char *)v29;
  v52 = v30;
  swift_getOpaqueTypeConformance2();
  sub_1B0006F1C();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v15);
  v31 = v41;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v23, v20, v42);
  v33 = v44;
  sub_1AFE13D64(v44);
  v34 = v46;
  sub_1AFE14054(v46);
  v35 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v40[0] = v20;
  v35(v20, v23, v32);
  v51 = v20;
  v36 = v45;
  sub_1AFAF2558(v33, v45, &qword_1EEE74940);
  v52 = v36;
  v37 = v47;
  sub_1AFAF2558(v34, v47, &qword_1EEE74950);
  v53 = v37;
  sub_1AFE0E7AC(&v51, v48);
  sub_1AFACE0DC(v34, &qword_1EEE74950);
  sub_1AFACE0DC(v33, &qword_1EEE74940);
  v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v23, v32);
  sub_1AFACE0DC(v37, &qword_1EEE74950);
  sub_1AFACE0DC(v36, &qword_1EEE74940);
  return ((uint64_t (*)(_QWORD, uint64_t))v38)(v40[0], v32);
}

uint64_t sub_1AFE13CFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74928);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74930);
  return sub_1B0007DD4();
}

uint64_t sub_1AFE13D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F90);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1B0007168();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74B00);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B00058D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  sub_1AFAF2558(v1 + *(int *)(HourPrecipitationChartViewModel + 52), (uint64_t)v11, &qword_1ED1F4BA0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_1AFACE0DC((uint64_t)v11, &qword_1ED1F4BA0);
    v17 = 1;
    v18 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_1B00077BC();
    sub_1B0006FE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B0007150();
    v19 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
    v28 = MEMORY[0x1B5E01EA8](v19);
    v20 = v26;
    sub_1B0006F10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v20);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v21 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v8, v6);
    v17 = 0;
    v18 = v21;
  }
  return __swift_storeEnumTagSinglePayload(v18, v17, 1, v6);
}

uint64_t sub_1AFE14054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t HourPrecipitationChartContentView;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v4 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  if (*(_QWORD *)(v1 + 16))
  {
    v24 = *(_QWORD *)(v1 + 16);
    KeyPath = swift_getKeyPath();
    sub_1AFAF2DFC(v1, (uint64_t)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NextHourPrecipitationChartContentView);
    v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v7 = swift_allocObject();
    sub_1AFAF2984((uint64_t)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for NextHourPrecipitationChartContentView);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AE8);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74AF0);
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74968);
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74970);
    v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74978);
    v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74980);
    v20 = sub_1B00071C8();
    v21 = MEMORY[0x1E0C93C00];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v20 = v11;
    v21 = MEMORY[0x1E0CDF5D0];
    v22 = OpaqueTypeConformance2;
    v23 = MEMORY[0x1E0CDF598];
    v13 = swift_getOpaqueTypeConformance2();
    sub_1AFE1A2E4((uint64_t)&unk_1EEE74988);
    v20 = v9;
    v21 = v10;
    v22 = v13;
    v23 = v14;
    v15 = swift_getOpaqueTypeConformance2();
    v20 = v8;
    v21 = v15;
    swift_getOpaqueTypeConformance2();
    sub_1B000826C();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74960);
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v16);
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74960);
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v18);
  }
}

uint64_t sub_1AFE14300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t HourPrecipitationChartContentView;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19[2];

  v19[1] = a1;
  v1 = sub_1B0007000();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1B0006FB8();
  MEMORY[0x1E0C80A78](v2);
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v4 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B0005B00();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B0006FD0();
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v12, *MEMORY[0x1E0CB1178], v9, v14);
  v15 = sub_1B0005B18();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v15);
  sub_1B0006FC4();
  sub_1AFACE0DC((uint64_t)v8, &qword_1ED1F41C0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1AFAF2DFC(v19[0], (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NextHourPrecipitationChartContentView);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for NextHourPrecipitationChartContentView);
  sub_1B0006FAC();
  sub_1B0006FF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A70);
  sub_1AFE19F34((uint64_t)&unk_1EEE74A78);
  return sub_1B0007174();
}

uint64_t sub_1AFE145B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t HourPrecipitationChartContentView;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1B0007000();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1B0006FB8();
  MEMORY[0x1E0C80A78](v2);
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v4 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  sub_1AFAF2DFC(v0, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NextHourPrecipitationChartContentView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_1AFAF2984((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for NextHourPrecipitationChartContentView);
  sub_1B0006FAC();
  sub_1B0006FF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F38);
  sub_1AFE19F34((uint64_t)&qword_1EEE71F40);
  return sub_1B0007180();
}

void sub_1AFE1475C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE749F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = sub_1B00082CC();
  v6[1] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A10);
  sub_1AFE14858(a2, a1, (uint64_t *)((char *)v6 + *(int *)(v8 + 44)));
  sub_1B00082CC();
  sub_1AFF06348();
  sub_1AFACE0DC((uint64_t)v6, &qword_1EEE749F0);
}

uint64_t sub_1AFE14858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *HourPrecipitationChartContentView;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  double v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, char);
  ValueMetadata *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  __int16 v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;

  v82 = a2;
  v76 = a3;
  v72 = sub_1B0007930();
  v74 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v73 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B0006EC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v64 = v7;
  v66 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartContentView = (int *)type metadata accessor for NextHourPrecipitationChartContentView(0);
  v62 = *((_QWORD *)HourPrecipitationChartContentView - 1);
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  v63 = v9;
  v65 = (uint64_t)&v57 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A18);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v83 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A20);
  v68 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v67 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A28);
  MEMORY[0x1E0C80A78](v13);
  v84 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  v18 = a1 + HourPrecipitationChartContentView[6];
  v19 = *(_QWORD *)(v18 + 8);
  v20 = *(_BYTE *)(v18 + 32);
  v95 = *(_QWORD *)v18;
  v96 = v19;
  v97 = *(_OWORD *)(v18 + 16);
  LOBYTE(v98) = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
  MEMORY[0x1B5E02130](&v88, v21);
  if ((v90 & 1) != 0)
  {
    v77 = 0;
    v87 = 0;
    v81 = 0;
    v80 = 0;
    v79 = 0;
    v78 = 0;
    v86 = 0;
    v75 = 0.0;
    v22 = 1;
  }
  else
  {
    v23 = *(double *)&v88;
    v24 = *(double *)&v89;
    v25 = sub_1B0007FF0();
    if (v24 + -1.0 <= 0.0)
    {
      swift_release();
      v22 = 0;
      v77 = 0;
      v87 = 0;
      v81 = 0;
      v80 = 0;
      v79 = 0;
      v78 = 0;
      v86 = 0;
      v75 = 0.0;
    }
    else
    {
      v26 = v23 + *(double *)(a1 + HourPrecipitationChartContentView[10]) * -0.5;
      v22 = v25;
      v69 = v5;
      swift_retain();
      sub_1B00082E4();
      v5 = v69;
      sub_1B0007360();
      v87 = v95;
      v81 = v96;
      v80 = v97;
      v79 = BYTE8(v97);
      v78 = v98;
      v86 = v99;
      swift_release();
      v75 = v26;
      v77 = 256;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + HourPrecipitationChartContentView[11]);
  v85 = v22;
  if (v27 == 1)
  {
    v92 = sub_1B0007FE4();
    v93 = 256;
    v94 = 0;
    v28 = v65;
    sub_1AFAF2DFC(a1, v65, type metadata accessor for NextHourPrecipitationChartContentView);
    v61 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v29 = v66;
    v61(v66, v82, v5);
    v30 = *(unsigned __int8 *)(v62 + 80);
    v62 = v11;
    v31 = (v30 + 16) & ~v30;
    v32 = *(unsigned __int8 *)(v6 + 80);
    v33 = (uint64_t)&v63[v32 + v31];
    v63 = v17;
    v34 = v6;
    v35 = v33 & ~v32;
    v64 += v35;
    v69 = v5;
    v60 = v30 | v32 | 7;
    v36 = swift_allocObject();
    sub_1AFAF2984(v28, v36 + v31, type metadata accessor for NextHourPrecipitationChartContentView);
    v59 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 32);
    v59(v36 + v35, v29, v5);
    *(double *)&v88 = COERCE_DOUBLE(sub_1AFE19A94);
    v89 = (ValueMetadata *)v36;
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A38);
    v37 = sub_1AFE19AA0();
    v38 = sub_1AFE19B3C();
    sub_1B0007EA0();
    v22 = v85;
    swift_release();
    swift_release();
    sub_1AFAF2DFC(a1, v28, type metadata accessor for NextHourPrecipitationChartContentView);
    v39 = v69;
    v61(v29, v82, v69);
    v40 = swift_allocObject();
    sub_1AFAF2984(v28, v40 + v31, type metadata accessor for NextHourPrecipitationChartContentView);
    v41 = v63;
    v59(v40 + v35, v29, v39);
    v42 = v73;
    sub_1B0007978();
    v88 = (uint64_t (*)(uint64_t, uint64_t, char))v58;
    *(double *)&v89 = COERCE_DOUBLE(&type metadata for ChartDragGestureRecognizerRepresentable);
    v90 = v37;
    v91 = v38;
    swift_getOpaqueTypeConformance2();
    v43 = v67;
    v44 = v71;
    v45 = v72;
    v46 = v83;
    sub_1B0007EAC();
    swift_release();
    v47 = v42;
    v11 = v62;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v45);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v44);
    v17 = v41;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v41, v43, v11);
    v48 = 0;
  }
  else
  {
    v48 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v17, v48, 1, v11);
  v49 = v84;
  sub_1AFAF2558((uint64_t)v17, v84, &qword_1EEE74A28);
  v50 = v76;
  v51 = v77;
  *v76 = v22;
  v50[1] = v51;
  v52 = v81;
  v50[2] = v87;
  v50[3] = v52;
  v53 = v79;
  v50[4] = v80;
  v50[5] = v53;
  v54 = v86;
  v50[6] = v78;
  v50[7] = v54;
  *((double *)v50 + 8) = v75;
  v50[9] = 0;
  *((_BYTE *)v50 + 80) = 0;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A30);
  sub_1AFAF2558(v49, (uint64_t)v50 + *(int *)(v55 + 48), &qword_1EEE74A28);
  sub_1AFE19A70(v22);
  sub_1AFACE0DC((uint64_t)v17, &qword_1EEE74A28);
  sub_1AFACE0DC(v49, &qword_1EEE74A28);
  return sub_1AFE19A80(v85);
}

void sub_1AFE15058(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t HourPrecipitationChartContentView;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t HourPrecipitationChartView;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v27 - v20;
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  if (*(_BYTE *)(a4 + *(int *)(HourPrecipitationChartContentView + 44)) == 1)
  {
    if ((a3 & 1) != 0)
    {
      v23 = (uint64_t *)(a4 + *(int *)(HourPrecipitationChartContentView + 24));
      v24 = v23[1];
      v25 = *((_BYTE *)v23 + 32);
      v29 = *v23;
      v30 = v24;
      v31 = *((_OWORD *)v23 + 1);
      v32 = v25;
      v27[0] = a1;
      v27[1] = a2;
      v28 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
      sub_1B0008218();
      HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, HourPrecipitationChartView);
      sub_1AFAF2558((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1ED1F00A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      sub_1B0008218();
      sub_1AFACE0DC((uint64_t)v21, (uint64_t *)&unk_1ED1F00A0);
    }
    else
    {
      sub_1B00058D8();
      sub_1B0006EA4();
      sub_1AFAF2558((uint64_t)v15, (uint64_t)v12, &qword_1ED1F4BA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
      sub_1B0008170();
      sub_1AFACE0DC((uint64_t)v15, &qword_1ED1F4BA0);
      sub_1AFE152A0(a5);
    }
  }
}

void sub_1AFE152A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t HourPrecipitationChartView;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  MEMORY[0x1E0C80A78](HourPrecipitationChartView);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE187E4((uint64_t)v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, HourPrecipitationChartView) == 1)
  {
    sub_1AFACE0DC((uint64_t)v11, (uint64_t *)&unk_1ED1F00A0);
  }
  else
  {
    sub_1AFAF2984((uint64_t)v11, (uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    sub_1B00058D8();
    *(double *)&v15 = COERCE_DOUBLE(sub_1B0006EB0());
    if ((v16 & 1) == 0)
    {
      v17 = *(double *)&v15;
      v31 = *(_QWORD *)&v14[*(int *)(HourPrecipitationChartView + 20)];
      v18 = sub_1B0006EBC();
      if ((v19 & 1) == 0)
      {
        v20 = v18;
        v21 = sub_1AFE18378(a1, v17);
        v22 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NextHourPrecipitationChartContentView(0) + 24));
        v23 = v22[1];
        v24 = *((_BYTE *)v22 + 32);
        v31 = *v22;
        v32 = v23;
        v33 = *((_OWORD *)v22 + 1);
        v34 = v24;
        v28 = v21;
        v29 = v20;
        v30 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
        sub_1B0008218();
        sub_1AFAF2DFC((uint64_t)v14, (uint64_t)v8, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, HourPrecipitationChartView);
        sub_1AFAF2558((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1ED1F00A0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
        sub_1B0008218();
        sub_1AFACE0DC((uint64_t)v8, (uint64_t *)&unk_1ED1F00A0);
        sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
        return;
      }
    }
    sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
  }
  v25 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NextHourPrecipitationChartContentView(0) + 24));
  v26 = v25[1];
  v27 = *((_BYTE *)v25 + 32);
  v31 = *v25;
  v32 = v26;
  v33 = *((_OWORD *)v25 + 1);
  v34 = v27;
  v28 = 0.0;
  v29 = 0;
  v30 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
  sub_1B0008218();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, HourPrecipitationChartView);
  sub_1AFAF2558((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1ED1F00A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
  sub_1B0008218();
  sub_1AFACE0DC((uint64_t)v8, (uint64_t *)&unk_1ED1F00A0);
}

void sub_1AFE155DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t HourPrecipitationChartContentView;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t HourPrecipitationChartView;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - v18;
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  if (*(_BYTE *)(a4 + *(int *)(HourPrecipitationChartContentView + 44)) == 1)
  {
    if ((a3 & 1) != 0)
    {
      v21 = (uint64_t *)(a4 + *(int *)(HourPrecipitationChartContentView + 24));
      v22 = v21[1];
      v23 = *((_BYTE *)v21 + 32);
      v27 = *v21;
      v28 = v22;
      v29 = *((_OWORD *)v21 + 1);
      v30 = v23;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747E8);
      sub_1B0008218();
      HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, HourPrecipitationChartView);
      sub_1AFAF2558((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1ED1F00A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
      sub_1B0008218();
      sub_1AFACE0DC((uint64_t)v13, (uint64_t *)&unk_1ED1F00A0);
    }
    else
    {
      sub_1B00058D8();
      sub_1B0006EA4();
      sub_1AFAF2558((uint64_t)v19, (uint64_t)v16, &qword_1ED1F4BA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
      sub_1B0008170();
      sub_1AFACE0DC((uint64_t)v19, &qword_1ED1F4BA0);
      sub_1AFE152A0(a5);
    }
  }
}

uint64_t sub_1AFE15820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t HourPrecipitationChartContentView;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v15[2] = a2;
  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v4 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](HourPrecipitationChartContentView);
  v20 = *a1;
  v15[1] = swift_getKeyPath();
  sub_1AFAF2DFC((uint64_t)a1, (uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NextHourPrecipitationChartContentView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for NextHourPrecipitationChartContentView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74B08);
  sub_1AFE1A2B0((uint64_t)&qword_1EEE71FA0);
  sub_1AFE19A3C((uint64_t)&qword_1EEE71FA8);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74AD8);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE71F88);
  v16 = sub_1B0007108();
  v17 = MEMORY[0x1E0CD93C0];
  v18 = MEMORY[0x1E0C939D8];
  v19 = MEMORY[0x1E0CD93A8];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v11 = sub_1AFAF9424();
  v12 = MEMORY[0x1E0DEA968];
  v16 = v9;
  v17 = MEMORY[0x1E0DEA968];
  v18 = OpaqueTypeConformance2;
  v19 = v11;
  v13 = swift_getOpaqueTypeConformance2();
  v16 = v8;
  v17 = v12;
  v18 = v13;
  v19 = v11;
  swift_getOpaqueTypeConformance2();
  return sub_1B000826C();
}

uint64_t sub_1AFE15A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;

  v43 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2428);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F90);
  MEMORY[0x1E0C80A78](v6);
  v35 = sub_1B0007108();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F88);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AD8);
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE15ED0(a2, (uint64_t)v49);
  sub_1B00077BC();
  sub_1B00058D8();
  sub_1B0006FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B00077BC();
  v13 = *(int *)(type metadata accessor for NextHourPrecipitationChartViewModel.Point(0) + 20);
  v42 = a1;
  v34 = v13;
  *(_QWORD *)&v46 = *(_QWORD *)(a1 + v13);
  sub_1B0006FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B00070FC();
  v46 = v49[0];
  v47 = v49[1];
  v48 = v50;
  v14 = MEMORY[0x1E0CD93C0];
  v15 = MEMORY[0x1E0C939D8];
  v16 = MEMORY[0x1E0CD93A8];
  v17 = v10;
  v18 = v35;
  sub_1B0006F10();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v18);
  sub_1AFBFC388((uint64_t)v49);
  if (qword_1EEE70040 != -1)
    swift_once();
  v19 = (void *)qword_1EEE920E0;
  v20 = v42;
  v21 = (void *)sub_1B0005848();
  v22 = objc_msgSend(v19, sel_stringFromDate_, v21);

  v23 = sub_1B0008584();
  v25 = v24;

  v44 = v23;
  v45 = v25;
  *(_QWORD *)&v46 = v18;
  *((_QWORD *)&v46 + 1) = v14;
  *(_QWORD *)&v47 = v15;
  *((_QWORD *)&v47 + 1) = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v27 = sub_1AFAF9424();
  v28 = MEMORY[0x1E0DEA968];
  v30 = v38;
  v29 = v39;
  sub_1B0006F28();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v29);
  v44 = static NextHourPrecipitationChartViewModel.Point.accessibilityValueDescription(for:)(*(double *)(v20 + v34));
  v45 = v31;
  *(_QWORD *)&v46 = v29;
  *((_QWORD *)&v46 + 1) = v28;
  *(_QWORD *)&v47 = OpaqueTypeConformance2;
  *((_QWORD *)&v47 + 1) = v27;
  swift_getOpaqueTypeConformance2();
  v32 = v41;
  sub_1B0006F34();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v30, v32);
}

double sub_1AFE15ED0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  double result;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(a1 + 26);
  if ((sub_1AFC961B8() & 1) == 0)
  {
    if (qword_1EEE70208 != -1)
      swift_once();
    goto LABEL_11;
  }
  if (!v3)
  {
    if (qword_1EEE70208 != -1)
      swift_once();
LABEL_11:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  if (qword_1EEE70208 != -1)
    swift_once();
  swift_beginAccess();
  sub_1AFCE85C4();
  swift_endAccess();
LABEL_12:
  sub_1B0007408();
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  return result;
}

uint64_t sub_1AFE16020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F90);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1B0006FA0();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
  sub_1AFAF2558(a1 + *(int *)(HourPrecipitationChartViewModel + 48), (uint64_t)v11, &qword_1EEE71B18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_1AFACE0DC((uint64_t)v11, &qword_1EEE71B18);
    v16 = 1;
  }
  else
  {
    sub_1AFAE8274((uint64_t)v11, (uint64_t)v14, &qword_1ED1F1C50);
    sub_1B00077BC();
    v19 = v6;
    v20 = a2;
    sub_1B00058D8();
    sub_1B0006FE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B00077BC();
    sub_1B0006FE8();
    v6 = v19;
    swift_bridgeObjectRelease();
    a2 = v20;
    swift_bridgeObjectRelease();
    sub_1B0006F94();
    sub_1AFACE0DC((uint64_t)v14, &qword_1ED1F1C50);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a2, v8, v6);
    v16 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v16, 1, v6);
}

uint64_t sub_1AFE162FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFE16324(a1, 1, 0, a2);
}

uint64_t sub_1AFE16324@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unsigned int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v77 = a3;
  v73 = a2;
  v78 = a4;
  v79 = a1;
  v4 = sub_1B0008314();
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1B000709C();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B00070B4();
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v49 - v10;
  v11 = sub_1B00070C0();
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  MEMORY[0x1E0C80A78](v11);
  v62 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B000703C();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2428);
  MEMORY[0x1E0C80A78](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F90);
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1B00071C8();
  v51 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74980);
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v50 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74970);
  v59 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v80 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74968);
  v65 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v55 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AE8);
  v61 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v58 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B00077BC();
  sub_1B00058D8();
  v24 = v79;
  sub_1B0006FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B00077BC();
  v83 = *(_QWORD *)(v24
                  + *(int *)(type metadata accessor for NextHourPrecipitationChartViewModel.ScaleLabelElement(0) + 20));
  sub_1B0006FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B00071BC();
  v25 = MEMORY[0x1E0C93C00];
  v26 = v50;
  sub_1B0006F04();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
  v87 = sub_1B0007FE4();
  v83 = v17;
  v84 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v28 = MEMORY[0x1E0CDF5D0];
  v29 = v53;
  sub_1B0006F10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v29);
  v30 = v56;
  sub_1B0007018();
  v31 = v52;
  sub_1B0007090();
  sub_1B00070A8();
  v32 = *(void (**)(char *, uint64_t))(v67 + 8);
  v33 = v68;
  v32(v31, v68);
  sub_1B0007090();
  sub_1B00070A8();
  v32(v31, v33);
  v34 = v62;
  sub_1B0007084();
  v81 = v79;
  v82 = v73;
  sub_1B00082E4();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74978);
  v83 = v29;
  v84 = v28;
  v85 = OpaqueTypeConformance2;
  v86 = MEMORY[0x1E0CDF598];
  v36 = swift_getOpaqueTypeConformance2();
  sub_1AFE1A2E4((uint64_t)&unk_1EEE74988);
  v38 = v37;
  v39 = v57;
  v40 = v55;
  v41 = v80;
  sub_1B0006EEC();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v72);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v70);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v39);
  v42 = (unsigned int *)MEMORY[0x1E0CE0378];
  v43 = v74;
  v44 = v75;
  if ((v77 & 1) == 0)
    v42 = (unsigned int *)MEMORY[0x1E0CE03A0];
  v45 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, *v42, v76);
  v83 = v39;
  v84 = v35;
  v85 = v36;
  v86 = v38;
  swift_getOpaqueTypeConformance2();
  v46 = v58;
  v47 = v63;
  sub_1B0006F70();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v47);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v61 + 32))(v78, v46, v64);
}

void sub_1AFE16AEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t (*v82)@<X0>(uint64_t@<X8>);
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  char *v109;
  __int128 v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[3];
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  _OWORD v120[2];
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;

  *(_QWORD *)&v110 = a2;
  v115 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A70);
  MEMORY[0x1E0C80A78](v4);
  v107 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1B0006EE0();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F58);
  v92 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v91 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1B00071B0();
  v97 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v98 = (char *)&v86 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AA8);
  MEMORY[0x1E0C80A78](v11);
  v106 = (uint64_t)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v109 = (char *)&v86 - v14;
  v15 = sub_1B0007078();
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v108 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B00070D8();
  MEMORY[0x1E0C80A78](v17);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A98);
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v104 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v112 = (char *)&v86 - v20;
  v21 = sub_1B000712C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AB0);
  v114 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v102 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v86 - v27;
  MEMORY[0x1E0C80A78](v29);
  v111 = (char *)&v86 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1B00058D8();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = a1;
  sub_1B000718C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34) == 1)
  {
    sub_1AFACE0DC((uint64_t)v33, &qword_1ED1F4BA0);
LABEL_9:
    v44 = v115;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A88);
    __swift_storeEnumTagSinglePayload(v44, 1, 1, v45);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
  v38 = v110;
  v39 = sub_1AFC99E5C();
  if (!v41)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    goto LABEL_9;
  }
  v89 = v39;
  v87 = v35;
  v90 = v40 & 1;
  sub_1B00072AC();
  v125 = v117;
  v126 = v118;
  v127 = v119;
  sub_1B0007120();
  if (qword_1EEE70208 != -1)
    swift_once();
  v86 = v37;
  swift_beginAccess();
  v42 = v38;
  if (*(_BYTE *)(v38 + 8) == 1)
  {
    v43 = qword_1EEE74790;
    swift_retain();
  }
  else
  {
    v43 = sub_1B0007FF0();
  }
  *(_QWORD *)&v122 = v43;
  sub_1B0007114();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v111, v28, v113);
  v46 = sub_1B00070CC();
  MEMORY[0x1E0C80A78](v46);
  v47 = v90;
  sub_1B000706C();
  v84 = MEMORY[0x1E0CDDD78];
  v85 = MEMORY[0x1E0CDDD58];
  v82 = sub_1AFE1A0E4;
  v83 = &v80;
  v81 = 1;
  v80 = 0;
  sub_1B0006FDC();
  v48 = *(_BYTE *)(v42 + 24) == 1;
  v49 = (uint64_t)v109;
  v88 = v34;
  if (!v48)
    goto LABEL_23;
  v50 = *(_BYTE *)(v42 + 25);
  v51 = v97;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v53 = v98;
  v54 = v100;
  v52(v98, v99, v100);
  if ((v50 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
    swift_bridgeObjectRelease();
    v62 = v101;
    if (v47)
    {
      v61 = 1;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v49, v61, 1, v62);
      v68 = v102;
      v69 = v111;
      v70 = v113;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v102, v111, v113);
      v116[0] = v68;
      v71 = v103;
      v72 = v104;
      v73 = v112;
      v74 = v105;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v104, v112, v105);
      v116[1] = v72;
      v75 = v106;
      sub_1AFAF2558(v49, v106, &qword_1EEE74AA8);
      v116[2] = v75;
      v76 = v107;
      sub_1AFE177AC(v116, v107);
      sub_1AFACE0DC(v49, &qword_1EEE74AA8);
      v77 = *(void (**)(char *, uint64_t))(v71 + 8);
      v77(v73, v74);
      v78 = *(void (**)(char *, uint64_t))(v114 + 8);
      v78(v69, v70);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
      sub_1AFACE0DC(v75, &qword_1EEE74AA8);
      v77(v72, v74);
      v78(v68, v70);
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A88);
      __swift_storeEnumTagSinglePayload(v76, 0, 1, v79);
      sub_1AFAE8274(v76, v115, &qword_1EEE74A70);
      return;
    }
LABEL_21:
    swift_beginAccess();
    sub_1AFCE84C8((uint64_t)v120);
    v110 = v120[0];
    v108 = v120[1];
    v63 = v121;
    swift_endAccess();
    v122 = v110;
    v123 = v108;
    v124 = v63;
    v64 = v93;
    sub_1B0006ED4();
    v116[0] = qword_1EEE74790;
    v65 = v91;
    v66 = v95;
    sub_1B0007114();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v66);
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v49, v65, v62);
    v61 = 0;
    goto LABEL_24;
  }
  v55 = sub_1B00071A4();
  v56 = v96;
  v52(v96, (uint64_t)v53, v54);
  if (!v55)
  {
    v67 = *(void (**)(char *, uint64_t))(v51 + 8);
    v67(v56, v54);
    v67(v53, v54);
    v49 = (uint64_t)v109;
LABEL_23:
    swift_bridgeObjectRelease();
    v61 = 1;
    v62 = v101;
    goto LABEL_24;
  }
  v57 = sub_1B00071A4();
  v58 = sub_1B0007198();
  v59 = v58 - 1;
  if (!__OFSUB__(v58, 1))
  {
    v60 = *(void (**)(char *, uint64_t))(v51 + 8);
    v60(v56, v54);
    v60(v53, v54);
    swift_bridgeObjectRelease();
    v61 = 1;
    if (v57 == v59)
    {
      v62 = v101;
      v49 = (uint64_t)v109;
      goto LABEL_24;
    }
    v62 = v101;
    v49 = (uint64_t)v109;
    if (v47)
      goto LABEL_24;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1AFE175A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[4];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B0007C60();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[2] = a1;
  v32[3] = a2;
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v15 = sub_1B0007D5C();
  v17 = v16;
  v19 = v18;
  v32[0] = v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CDD790], v11);
  if ((a3 & 1) != 0)
    sub_1B0007B94();
  else
    sub_1B0007BC4();
  v21 = v19 & 1;
  v22 = *MEMORY[0x1E0CDD548];
  v23 = sub_1B0007B88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v10, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v23);
  sub_1B0007BF4();
  sub_1AFACE0DC((uint64_t)v10, &qword_1ED1F2778);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v24 = sub_1B0007D08();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_release();
  sub_1AFAED640(v15, v17, v21);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v24;
  *(_QWORD *)(a4 + 8) = v26;
  *(_BYTE *)(a4 + 16) = v28 & 1;
  *(_QWORD *)(a4 + 24) = v30;
  return result;
}

void sub_1AFE177AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AB8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AB0);
  sub_1B000712C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v6, *a1, v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74A98);
  sub_1AFE1A2B0((uint64_t)&unk_1EEE74A90);
  v10 = &v6[*(int *)(v4 + 48)];
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))(v10, a1[1], v9);
  sub_1AFE1A048();
  v12 = (uint64_t)&v6[*(int *)(v4 + 64)];
  sub_1AFAF2558(a1[2], v12, &qword_1EEE74AA8);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v4 + 48), v10, v9);
  sub_1AFAE8274(v12, a2 + *(int *)(v4 + 64), &qword_1EEE74AA8);
}

void sub_1AFE1790C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  *(_QWORD *)&v49 = a2;
  v5 = sub_1B00071B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F38);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B0006EE0();
  v51 = *(_QWORD *)(v15 - 8);
  v52 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F58);
  v53 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v50 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v46 - v21;
  if (!sub_1B00071A4())
  {
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    sub_1B0006ED4();
    if (qword_1EEE70208 != -1)
      swift_once();
    swift_beginAccess();
    v54 = qword_1EEE74790;
    v34 = v50;
    v35 = v52;
    sub_1B0007114();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v35);
    v36 = v53;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v22, v34, v18);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v14, v22, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F60);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v18);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F50);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v37);
    v38 = (uint64_t)v14;
    goto LABEL_15;
  }
  v47 = v18;
  *(_QWORD *)&v48 = v14;
  v23 = a3;
  v24 = *(_BYTE *)(v49 + 25);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v25(v11, a1, v5);
  if ((v24 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    a3 = v23;
    v33 = v47;
    v32 = v48;
LABEL_12:
    if (qword_1EEE70208 != -1)
      swift_once();
    swift_beginAccess();
    sub_1AFCE84C8((uint64_t)v55);
    v48 = v55[1];
    v49 = v55[0];
    v39 = v56;
    swift_endAccess();
    v57 = v49;
    v58 = v48;
    v59 = v39;
    sub_1B0006ED4();
    v54 = qword_1EEE74790;
    v40 = v50;
    v41 = v52;
    sub_1B0007114();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v41);
    v42 = v53;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v22, v40, v33);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v32, v22, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F60);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v33);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F50);
    __swift_storeEnumTagSinglePayload(v32, 0, 1, v43);
    v38 = v32;
LABEL_15:
    sub_1AFAE8274(v38, a3, &qword_1EEE71F38);
    return;
  }
  v26 = sub_1B00071A4();
  v25(v8, (uint64_t)v11, v5);
  if (!v26)
  {
    v44 = *(void (**)(char *, uint64_t))(v6 + 8);
    v44(v8, v5);
    v44(v11, v5);
    a3 = v23;
LABEL_17:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71F50);
    __swift_storeEnumTagSinglePayload(a3, 1, 1, v45);
    return;
  }
  v27 = sub_1B00071A4();
  v28 = sub_1B0007198();
  v29 = v28 - 1;
  if (!__OFSUB__(v28, 1))
  {
    a3 = v23;
    v30 = *(void (**)(char *, uint64_t))(v6 + 8);
    v30(v8, v5);
    v30(v11, v5);
    v31 = v27 == v29;
    v33 = v47;
    v32 = v48;
    if (!v31)
      goto LABEL_12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1AFE17E0C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v65 = a2;
  v72 = a3;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE749B8);
  MEMORY[0x1E0C80A78](v70);
  v71 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1B000751C();
  MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74AF8);
  MEMORY[0x1E0C80A78](v66);
  v69 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B0007C60();
  v61 = *(_QWORD *)(v10 - 8);
  v11 = v61;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74998);
  MEMORY[0x1E0C80A78](v64);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74978);
  MEMORY[0x1E0C80A78](v67);
  v68 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t *)(a1
                  + *(int *)(type metadata accessor for NextHourPrecipitationChartViewModel.ScaleLabelElement(0) + 24));
  v18 = v17[1];
  v73 = *v17;
  v74 = v18;
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v19 = sub_1B0007D5C();
  v21 = v20;
  v23 = v22 & 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0CDD7D0], v10);
  sub_1B0007B94();
  v24 = *MEMORY[0x1E0CDD548];
  v25 = sub_1B0007B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v9, v24, v25);
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v25);
  sub_1B0007BF4();
  sub_1AFACE0DC(v9, &qword_1ED1F2778);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v10);
  v26 = sub_1B0007D08();
  v28 = v27;
  LOBYTE(v9) = v29;
  swift_release();
  sub_1AFAED640(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_1B0008020();
  v30 = sub_1B0007CCC();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_release();
  sub_1AFAED640(v26, v28, v9 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v61) = sub_1B0007AD4();
  v37 = v62;
  v38 = &v62[*(int *)(v63 + 20)];
  v39 = *MEMORY[0x1E0CDB0C0];
  v40 = sub_1B00077D4();
  v41 = v39;
  v42 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v38, v41, v40);
  __asm { FMOV            V0.2D, #4.0 }
  *v37 = _Q0;
  if ((v65 & 1) != 0)
  {
    v48 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    v49 = MEMORY[0x1B5E01F8C](v48);
  }
  else
  {
    v49 = sub_1B0007FE4();
  }
  v50 = v49;
  v51 = v34 & 1;
  v52 = MEMORY[0x1E0CDA088];
  v53 = v69;
  sub_1AFAF2DFC(v42, v69, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  v54 = v66;
  *(_QWORD *)(v53 + *(int *)(v66 + 52)) = v50;
  *(_WORD *)(v53 + *(int *)(v54 + 56)) = 256;
  sub_1AFAE2D74(v42, (uint64_t (*)(_QWORD))v52);
  v55 = sub_1B00082E4();
  v57 = v56;
  v58 = v71;
  sub_1AFAF2558(v53, v71, &qword_1EEE74AF8);
  v59 = (uint64_t *)(v58 + *(int *)(v70 + 36));
  *v59 = v55;
  v59[1] = v57;
  sub_1AFAF2558(v58, (uint64_t)&v15[*(int *)(v64 + 36)], &qword_1EEE749B8);
  *(_QWORD *)v15 = v30;
  *((_QWORD *)v15 + 1) = v32;
  v15[16] = v51;
  *((_QWORD *)v15 + 3) = v36;
  v15[32] = v61;
  *(_OWORD *)(v15 + 40) = xmmword_1B003B390;
  *(_OWORD *)(v15 + 56) = xmmword_1B003B390;
  v15[72] = 0;
  sub_1AFBB755C(v30, v32, v51);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC(v58, &qword_1EEE749B8);
  sub_1AFACE0DC(v53, &qword_1EEE74AF8);
  sub_1AFAED640(v30, v32, v51);
  swift_bridgeObjectRelease();
  v60 = v68;
  sub_1AFAF2558((uint64_t)v15, v68, &qword_1EEE74998);
  *(_OWORD *)(v60 + *(int *)(v67 + 36)) = xmmword_1B003B3A0;
  sub_1AFACE0DC((uint64_t)v15, &qword_1EEE74998);
  sub_1AFAE8274(v60, v72, &qword_1EEE74978);
}

double sub_1AFE18378(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t HourPrecipitationChartView;
  uint64_t v34;
  uint64_t *v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  double v47;
  double v48;
  char v49;
  double v50;
  void (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t, uint64_t);
  _QWORD v53[2];
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v53[1] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v57 = (uint64_t)v53 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v55 = (char *)v53 - v11;
  v12 = sub_1B00058D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v53 - v17;
  v19 = sub_1B00074D4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v53 - v24;
  type metadata accessor for NextHourPrecipitationChartContentView(0);
  v26 = v2;
  sub_1AFC34440();
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0CD9A98], v19);
  v27 = sub_1B00074C8();
  v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v22, v19);
  v28(v25, v19);
  if ((v27 & 1) != 0)
  {
    v29 = (uint64_t)v55;
    v30 = (uint64_t)v56;
    v53[0] = v15;
    v31 = v18;
    v32 = v57;
    sub_1AFBDBAF4(*v26, v57);
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
    if (__swift_getEnumTagSinglePayload(v32, 1, HourPrecipitationChartView) == 1)
    {
      sub_1AFACE0DC(v57, (uint64_t *)&unk_1ED1F00A0);
      v34 = v29;
      __swift_storeEnumTagSinglePayload(v29, 1, 1, v12);
LABEL_5:
      v40 = v34;
LABEL_6:
      sub_1AFACE0DC(v40, &qword_1ED1F4BA0);
      return a2;
    }
    v35 = v26;
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v34 = v29;
    v37 = v29;
    v38 = v57;
    v39 = v12;
    v36(v37, v57, v12);
    sub_1AFAE2D74(v38, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    __swift_storeEnumTagSinglePayload(v34, 0, 1, v12);
    if (__swift_getEnumTagSinglePayload(v34, 1, v12) == 1)
      goto LABEL_5;
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    v42(v31, v34, v39);
    sub_1AFBA745C(*v35, v30);
    if (__swift_getEnumTagSinglePayload(v30, 1, HourPrecipitationChartView) == 1)
    {
      sub_1AFACE0DC(v30, (uint64_t *)&unk_1ED1F00A0);
      v43 = v54;
      __swift_storeEnumTagSinglePayload(v54, 1, 1, v39);
LABEL_11:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v31, v39);
      v40 = v43;
      goto LABEL_6;
    }
    v43 = v54;
    v36(v54, v30, v39);
    sub_1AFAE2D74(v30, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v39);
    if (__swift_getEnumTagSinglePayload(v43, 1, v39) == 1)
      goto LABEL_11;
    v44 = v53[0];
    v42((char *)v53[0], v43, v39);
    v45 = sub_1B0006EB0();
    if ((v46 & 1) != 0 || (v47 = *(double *)&v45, v48 = COERCE_DOUBLE(sub_1B0006EB0()), (v49 & 1) != 0))
    {
      v52 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v52(v44, v39);
      v52((uint64_t)v31, v39);
    }
    else
    {
      if (v47 > v48)
        v50 = v47;
      else
        v50 = v48;
      v51 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v51(v44, v39);
      v51((uint64_t)v31, v39);
      return v50 - a2;
    }
  }
  return a2;
}

void sub_1AFE187E4(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t HourPrecipitationChartView;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1B00058D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NextHourPrecipitationChartContentView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  sub_1B0008164();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_1AFACE0DC((uint64_t)v8, &qword_1ED1F4BA0);
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
    __swift_storeEnumTagSinglePayload(a1, 1, 1, HourPrecipitationChartView);
  }
  else
  {
    v14 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    v15 = *v1;
    MEMORY[0x1E0C80A78](v14);
    *(_QWORD *)&v16[-16] = v12;
    swift_bridgeObjectRetain();
    sub_1AFE18A28((uint64_t (*)(char *, char *))sub_1AFE19E9C, v15, (uint64_t)v5);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    sub_1AFAE8274((uint64_t)v5, a1, (uint64_t *)&unk_1ED1F00A0);
  }
}

BOOL sub_1AFE189C8()
{
  double v0;
  double v1;
  double v2;

  sub_1B00058B4();
  v1 = fabs(v0);
  sub_1B00058B4();
  return v1 < fabs(v2);
}

uint64_t sub_1AFE18A28@<X0>(uint64_t (*a1)(char *, char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t HourPrecipitationChartView;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v8 = *(_QWORD *)(HourPrecipitationChartView - 8);
  MEMORY[0x1E0C80A78](HourPrecipitationChartView);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - v12;
  v15 = *(_QWORD *)(a2 + 16);
  if (!v15)
  {
    v22 = a3;
    v23 = 1;
    v24 = HourPrecipitationChartView;
    return __swift_storeEnumTagSinglePayload(v22, v23, 1, v24);
  }
  v28 = a3;
  v16 = v13;
  v27 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_1AFAF2DFC(v13 + v27, (uint64_t)&v26 - v12, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
  swift_bridgeObjectRetain();
  v17 = v15 - 1;
  v29 = HourPrecipitationChartView;
  v30 = v16;
  if (!v17)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v21 = v28;
    sub_1AFAF2984((uint64_t)v14, v28, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    v22 = v21;
    v23 = 0;
    v24 = v29;
    return __swift_storeEnumTagSinglePayload(v22, v23, 1, v24);
  }
  v18 = *(_QWORD *)(v8 + 72);
  v19 = v16 + v18 + v27;
  while (1)
  {
    sub_1AFAF2DFC(v19, (uint64_t)v10, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    v20 = a1(v10, v14);
    if (v3)
      break;
    if ((v20 & 1) != 0)
    {
      sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
      sub_1AFAF2984((uint64_t)v10, (uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    }
    else
    {
      sub_1AFAE2D74((uint64_t)v10, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    }
    v19 += v18;
    if (!--v17)
      goto LABEL_9;
  }
  sub_1AFAE2D74((uint64_t)v10, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
  sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for NHPChartDescriptorRepresentable(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE74B70);
}

uint64_t sub_1AFE18C2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFE138B8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1AFE18C34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v4[4];

  result = qword_1EEE748F0;
  if (!qword_1EEE748F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748F8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74900);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74908);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74910);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74918);
    sub_1AFE1A274((uint64_t)&unk_1EEE74920);
    swift_getOpaqueTypeConformance2();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74928);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74930);
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_1AFE18DE8();
    sub_1AFE19F34((uint64_t)&unk_1EEE74948);
    v4[2] = v2;
    v3 = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93440], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEE748F0);
  }
  return result;
}

unint64_t sub_1AFE18DE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_1EEE74938;
  if (!qword_1EEE74938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74940);
    v2[1] = sub_1B0007168();
    v2[2] = MEMORY[0x1E0CDF5D0];
    v2[3] = MEMORY[0x1E0C93B28];
    v2[4] = MEMORY[0x1E0CDF598];
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93DF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEE74938);
  }
  return result;
}

unint64_t sub_1AFE18E84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[5];

  result = qword_1EEE74958;
  if (!qword_1EEE74958)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74960);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74968);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74970);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74978);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74980);
    sub_1B00071C8();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFE1A2E4((uint64_t)&unk_1EEE74988);
    v5[3] = OpaqueTypeConformance2;
    v5[4] = v4;
    v5[1] = v2;
    v5[2] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93D98], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE74958);
  }
  return result;
}

unint64_t sub_1AFE18FE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE74990;
  if (!qword_1EEE74990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74998);
    sub_1AFE1A330((uint64_t)&unk_1EEE749A0);
    v3 = v2;
    sub_1AFE1A2B0((uint64_t)&unk_1EEE749B0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE74990);
  }
  return result;
}

void sub_1AFE19088(uint64_t a1@<X8>)
{
  sub_1AFE14300(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1AFE190A4()
{
  sub_1AFE145B0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFE190C4(uint64_t a1)
{
  return sub_1AFE19EC8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1AFE1475C);
}

unint64_t sub_1AFE190D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE749E0;
  if (!qword_1EEE749E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE749D8);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE749E8);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE749E0);
  }
  return result;
}

uint64_t sub_1AFE19154()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t HourPrecipitationChartView;
  uint64_t v53;

  v1 = v0;
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v2 = *(unsigned __int8 **)(HourPrecipitationChartView - 8);
  MEMORY[0x1E0C80A78](HourPrecipitationChartView);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v5 = (id)qword_1ED1F4470;
  v6 = sub_1B00054B8();
  v8 = v7;

  v9 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v10)
  {
    v48 = v8;
    v49 = (id)v6;
    v50 = v1;
    v53 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AFBA8850();
    v11 = v2[80];
    v47 = v9;
    v12 = v9 + ((v11 + 32) & ~v11);
    v51 = v2;
    v13 = *((_QWORD *)v2 + 9);
    do
    {
      sub_1AFAF2DFC(v12, (uint64_t)v4, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
      if (qword_1EEE70040 != -1)
        swift_once();
      v14 = (void *)qword_1EEE920E0;
      v15 = (void *)sub_1B0005848();
      v16 = objc_msgSend(v14, sel_stringFromDate_, v15, v47);

      v17 = sub_1B0008584();
      v19 = v18;

      sub_1AFAE2D74((uint64_t)v4, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
      v20 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFBA8850();
        v20 = v53;
      }
      v21 = *(_QWORD *)(v20 + 16);
      if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1AFBA8850();
        v20 = v53;
      }
      *(_QWORD *)(v20 + 16) = v21 + 1;
      v22 = v20 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v1 = v50;
    v2 = v51;
  }
  v23 = objc_allocWithZone(MEMORY[0x1E0C8EDC8]);
  v24 = sub_1AFE1B64C();
  v25 = (id)qword_1ED1F4470;
  v26 = sub_1B00054B8();
  v28 = v27;

  sub_1AFAEC5C0(0, &qword_1EEE74BA8);
  swift_bridgeObjectRetain();
  v29 = MEMORY[0x1E0DEE9D8];
  v50 = v28;
  v51 = (unsigned __int8 *)sub_1B0008B3C();
  v30 = *(_QWORD *)v1;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v48 = v26;
    v49 = v24;
    v53 = v29;
    swift_bridgeObjectRetain();
    sub_1B0008DA0();
    sub_1AFAEC5C0(0, &qword_1EEE74BB0);
    v32 = v2[80];
    v47 = v30;
    v33 = v30 + ((v32 + 32) & ~v32);
    v34 = *((_QWORD *)v2 + 9);
    do
    {
      sub_1AFAF2DFC(v33, (uint64_t)v4, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
      if (qword_1EEE70040 != -1)
        swift_once();
      v35 = (void *)qword_1EEE920E0;
      v36 = (void *)sub_1B0005848();
      v37 = objc_msgSend(v35, sel_stringFromDate_, v36, v47);

      sub_1B0008584();
      sub_1B0008974();
      sub_1AFAE2D74((uint64_t)v4, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
      sub_1B0008D88();
      sub_1B0008DAC();
      sub_1B0008DB8();
      sub_1B0008D94();
      v33 += v34;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    v26 = v48;
    v24 = v49;
  }
  v38 = objc_allocWithZone(MEMORY[0x1E0C8EDF0]);
  v39 = sub_1AFE1B6C8(v26, v50, 0);
  v40 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  v41 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  sub_1AFAEC5C0(0, &qword_1EEE74BB8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1B0037E90;
  *(_QWORD *)(v42 + 32) = v39;
  v53 = v42;
  v43 = v24;
  v44 = v51;
  sub_1B00087A0();
  v45 = sub_1B0008A40();

  return v45;
}

unint64_t sub_1AFE197F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_1EEE749F8;
  if (!qword_1EEE749F8)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748C8);
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE749D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE71F20);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE749C0);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE749C8);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE749D0);
    swift_getOpaqueTypeConformance2();
    sub_1AFE1A2B0((uint64_t)&qword_1EEE71F28);
    v4[2] = v1;
    v4[3] = v2;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = sub_1AFE190D0();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v3, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE749F8);
  }
  return result;
}

unint64_t sub_1AFE19990()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE74A00;
  if (!qword_1EEE74A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748D8);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748C8);
    v4[3] = sub_1AFE197F0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFE19A3C((uint64_t)qword_1ED1F1A18);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74A00);
  }
  return result;
}

void sub_1AFE19A3C(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_35_28();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFE19A70(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t sub_1AFE19A80(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_1AFE19A94(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1AFE19E0C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_1AFE15058);
}

unint64_t sub_1AFE19AA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE74A40;
  if (!qword_1EEE74A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74A38);
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74A48);
    v3 = v2;
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74A58);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE74A40);
  }
  return result;
}

unint64_t sub_1AFE19B3C()
{
  unint64_t result;

  result = qword_1EEE74A68;
  if (!qword_1EEE74A68)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for ChartDragGestureRecognizerRepresentable, &type metadata for ChartDragGestureRecognizerRepresentable);
    atomic_store(result, (unint64_t *)&qword_1EEE74A68);
  }
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t HourPrecipitationChartContentView;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v2 = *(_QWORD *)(HourPrecipitationChartContentView - 8);
  v22 = *(_QWORD *)(v2 + 64);
  v23 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v24 = sub_1B0006EC8();
  v3 = *(_QWORD *)(v24 - 8);
  v21 = *(unsigned __int8 *)(v3 + 80);
  v4 = v0 + v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)OUTLINED_FUNCTION_71_0();
  v6 = v0 + v23 + v5[10];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    v8 = OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_24_1(v8);
  }
  v9 = v4 + v5[11];
  OUTLINED_FUNCTION_24_41();
  if (!OUTLINED_FUNCTION_21_60(v9))
  {
    v10 = OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = v4 + v5[12];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
  {
    v20 = v3;
    v13 = OUTLINED_FUNCTION_11_0();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v11, v13);
    v15 = v13;
    v3 = v20;
    v14(v11 + *(int *)(v12 + 36), v15);
  }
  OUTLINED_FUNCTION_11_0();
  if (!OUTLINED_FUNCTION_30_51())
    OUTLINED_FUNCTION_6_103();
  v16 = v4 + *(int *)(HourPrecipitationChartContentView + 20);
  if (!OUTLINED_FUNCTION_30_51())
    OUTLINED_FUNCTION_6_103();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  swift_release();
  OUTLINED_FUNCTION_36_31();
  swift_release();
  OUTLINED_FUNCTION_36_31();
  swift_release();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
  if (!OUTLINED_FUNCTION_21_60(v16 + *(int *)(v17 + 32)))
    OUTLINED_FUNCTION_6_103();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1B00074D4();
    OUTLINED_FUNCTION_24_1(v18);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_44_12(v4 + *(int *)(HourPrecipitationChartContentView + 36));
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + ((v23 + v22 + v21) & ~v21), v24);
  return swift_deallocObject();
}

uint64_t sub_1AFE19E00(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1AFE19E0C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_1AFE155DC);
}

uint64_t sub_1AFE19E0C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = a3 & 1;
  v8 = *(_QWORD *)(type metadata accessor for NextHourPrecipitationChartContentView(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B0006EC8() - 8) + 80);
  return a4(a1, a2, v7, v4 + v9, v4 + ((v9 + v10 + v11) & ~v11));
}

BOOL sub_1AFE19E9C()
{
  return sub_1AFE189C8();
}

uint64_t sub_1AFE19EBC(uint64_t a1)
{
  return sub_1AFE19EC8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1AFE1790C);
}

uint64_t sub_1AFE19EC8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NextHourPrecipitationChartContentView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1AFE19F28(uint64_t a1)
{
  return sub_1AFE19EC8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1AFE16AEC);
}

void sub_1AFE19F34(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v5 = OUTLINED_FUNCTION_11_2(0, v4);
    v6 = v3();
    atomic_store(MEMORY[0x1B5E03BF4](v2, v5, &v6), v1);
  }
  OUTLINED_FUNCTION_10_1();
}

unint64_t sub_1AFE19F7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v4[4];

  result = qword_1EEE74A80;
  if (!qword_1EEE74A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74A88);
    sub_1B000712C();
    v4[3] = MEMORY[0x1E0CDF598];
    v4[0] = swift_getOpaqueTypeConformance2();
    sub_1AFE1A2B0((uint64_t)&unk_1EEE74A90);
    v4[1] = v2;
    v4[2] = sub_1AFE1A048();
    v3 = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93458], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEE74A80);
  }
  return result;
}

unint64_t sub_1AFE1A048()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_1EEE74AA0;
  if (!qword_1EEE74AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74AA8);
    v2[1] = sub_1B0006EE0();
    v2[2] = MEMORY[0x1E0CDF5D0];
    v2[3] = MEMORY[0x1E0C933E0];
    v2[4] = MEMORY[0x1E0CDF598];
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93E08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEE74AA0);
  }
  return result;
}

uint64_t sub_1AFE1A0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFE175A0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_1AFE1A0F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFE15820(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_1AFE1A0F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  result = qword_1EEE74AD0;
  if (!qword_1EEE74AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74AC8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74AD8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE71F88);
    sub_1B0007108();
    swift_getOpaqueTypeConformance2();
    v3 = sub_1AFAF9424();
    v4[1] = v2;
    v4[2] = MEMORY[0x1E0DEA968];
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[4] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C93D98], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74AD0);
  }
  return result;
}

uint64_t sub_1AFE1A210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFE16020(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1AFE1A21C(uint64_t a1)
{
  return sub_1AFE19EC8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1AFE162FC);
}

void sub_1AFE1A228(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AFE17E0C(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1AFE1A238(uint64_t a1)
{
  return sub_1AFE19EC8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1AFE15A40);
}

void sub_1AFE1A24C(_BYTE *a1@<X8>)
{
  *a1 = sub_1B000763C() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFE1A274(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    OUTLINED_FUNCTION_11_2(0, v1);
    OUTLINED_FUNCTION_35_28();
  }
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFE1A2B0(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_35_28();
  }
  OUTLINED_FUNCTION_0();
}

void sub_1AFE1A2E4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v5 = OUTLINED_FUNCTION_11_2(0, v4);
    v6[0] = v3();
    v6[1] = v2;
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6), v1);
  }
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFE1A330(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v5 = OUTLINED_FUNCTION_11_2(0, v4);
    v6[0] = v3;
    v6[1] = v2;
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6), v1);
  }
  OUTLINED_FUNCTION_10_1();
}

uint64_t sub_1AFE1A374(uint64_t a1, uint64_t *a2)
{
  int *HourPrecipitationChartViewModel;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t HourPrecipitationChartView;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = *(_DWORD *)(*((_QWORD *)HourPrecipitationChartViewModel - 1) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
    *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
    v7 = HourPrecipitationChartViewModel[10];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    }
    else
    {
      v12 = sub_1B00058D8();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = HourPrecipitationChartViewModel[11];
    v14 = (char *)(a1 + v13);
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v19 = HourPrecipitationChartViewModel[12];
    v20 = (char *)(a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = sub_1B00058D8();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v20, v21, v24);
      v25(&v20[*(int *)(v22 + 36)], &v21[*(int *)(v22 + 36)], v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    v26 = HourPrecipitationChartViewModel[13];
    v27 = (void *)(a1 + v26);
    v28 = (char *)a2 + v26;
    v29 = sub_1B00058D8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t sub_1AFE1A64C(uint64_t a1)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t HourPrecipitationChartView;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v3 = a1 + HourPrecipitationChartViewModel[10];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    v5 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  v6 = a1 + HourPrecipitationChartViewModel[11];
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, HourPrecipitationChartView))
  {
    v8 = sub_1B00058D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  v9 = a1 + HourPrecipitationChartViewModel[12];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
  {
    v11 = sub_1B00058D8();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v9, v11);
    v12(v9 + *(int *)(v10 + 36), v11);
  }
  v13 = a1 + HourPrecipitationChartViewModel[13];
  v14 = sub_1B00058D8();
  result = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  return result;
}

uint64_t sub_1AFE1A7C0(uint64_t a1, uint64_t a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = HourPrecipitationChartViewModel[10];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v10 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v11 = HourPrecipitationChartViewModel[11];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, v13, v16);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v17 = HourPrecipitationChartViewModel[12];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1B00058D8();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v23(v18, v19, v22);
    v23(&v18[*(int *)(v20 + 36)], &v19[*(int *)(v20 + 36)], v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  v24 = HourPrecipitationChartViewModel[13];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_1AFE1AA78(uint64_t a1, uint64_t a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  uint64_t HourPrecipitationChartView;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = HourPrecipitationChartViewModel[10];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      v11 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, v7, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1AFACE0DC((uint64_t)v6, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v39 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v6, v7, v39);
LABEL_7:
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v40 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v14, v15, v40);
  *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
LABEL_13:
  v21 = HourPrecipitationChartViewModel[12];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      v27 = sub_1B00058D8();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v22, v23, v27);
      v28(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    sub_1AFACE0DC((uint64_t)v22, &qword_1ED1F1C50);
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  v41 = sub_1B00058D8();
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24);
  v42(v22, v23, v41);
  v42(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v41);
LABEL_19:
  v30 = HourPrecipitationChartViewModel[13];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  v33 = sub_1B00058D8();
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v33);
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33);
  if (!v34)
  {
    v36 = *(_QWORD *)(v33 - 8);
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(v36 + 24))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v35)
  {
LABEL_24:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  return a1;
}

uint64_t sub_1AFE1AE9C(uint64_t a1, uint64_t a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t HourPrecipitationChartView;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = HourPrecipitationChartViewModel[10];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
  }
  else
  {
    v10 = sub_1B00058D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v7, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v11 = HourPrecipitationChartViewModel[11];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v17 = HourPrecipitationChartViewModel[12];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1B00058D8();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v18, v19, v22);
    v23(&v18[*(int *)(v20 + 36)], &v19[*(int *)(v20 + 36)], v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  v24 = HourPrecipitationChartViewModel[13];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_1AFE1B144(uint64_t a1, uint64_t a2)
{
  int *HourPrecipitationChartViewModel;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  uint64_t HourPrecipitationChartView;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  HourPrecipitationChartViewModel = (int *)type metadata accessor for NextHourPrecipitationChartViewModel(0);
  v5 = HourPrecipitationChartViewModel[10];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      v11 = sub_1B00058D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v6, v7, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1AFACE0DC((uint64_t)v6, &qword_1EEE71AC8);
LABEL_6:
    HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(HourPrecipitationChartView - 8) + 64));
    goto LABEL_7;
  }
  v39 = sub_1B00058D8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v6, v7, v39);
LABEL_7:
  v13 = HourPrecipitationChartViewModel[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for NextHourPrecipitationChartViewModel.Point(0);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    sub_1AFAE2D74((uint64_t)v14, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F00A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v40 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v14, v15, v40);
  *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
LABEL_13:
  v21 = HourPrecipitationChartViewModel[12];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      v27 = sub_1B00058D8();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
      v28(v22, v23, v27);
      v28(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    sub_1AFACE0DC((uint64_t)v22, &qword_1ED1F1C50);
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71B18);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  v41 = sub_1B00058D8();
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40);
  v42(v22, v23, v41);
  v42(&v22[*(int *)(v24 + 36)], &v23[*(int *)(v24 + 36)], v41);
LABEL_19:
  v30 = HourPrecipitationChartViewModel[13];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  v33 = sub_1B00058D8();
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v33);
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33);
  if (!v34)
  {
    v36 = *(_QWORD *)(v33 - 8);
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(v36 + 40))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v35)
  {
LABEL_24:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  return a1;
}

uint64_t sub_1AFE1B558()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1B564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_3_108();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1AFE1B58C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1B598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_3_108();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_1AFE1B5C4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE748D8);
  type metadata accessor for NHPChartDescriptorRepresentable(255);
  sub_1AFE19990();
  sub_1AFE19A3C((uint64_t)&unk_1EEE74A08);
  return swift_getOpaqueTypeConformance2();
}

id sub_1AFE1B64C()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1B000877C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithTitle_categoryOrder_, v1, v2);

  return v3;
}

id sub_1AFE1B6C8(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  sub_1AFAEC5C0(0, &qword_1EEE74BB0);
  v6 = (void *)sub_1B000877C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithName_isContinuous_dataPoints_, v5, a3 & 1, v6);

  return v7;
}

uint64_t sub_1AFE1B768(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_128(a1, 16, 0x80000001B005FA30, &qword_1ED1F1048);
}

uint64_t static Image.sunriseSunsetDay.getter()
{
  return sub_1AFB4B190(&qword_1ED1F11E0);
}

uint64_t sub_1AFE1B7A4(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_128(a1, 18, 0x80000001B005FA10, (uint64_t *)&unk_1ED1F11E8);
}

uint64_t static Image.sunriseSunsetNight.getter()
{
  return sub_1AFB4B190(&qword_1ED1F11F8);
}

uint64_t sub_1AFE1B7E0(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_128(a1, 24, 0x80000001B005F9F0, &qword_1ED1F1050);
}

uint64_t static Image.sunriseSunsetHorizonGlow.getter()
{
  return sub_1AFB4B190(&qword_1ED1F1060);
}

uint64_t sub_1AFE1B81C(uint64_t a1)
{
  return sub_1AFE1B8FC(a1, 0x6B73614D435754, 0xE700000000000000, (uint64_t *)&unk_1ED1EC3B8);
}

uint64_t static Image.twcLogo.getter()
{
  return sub_1AFB4B190(&qword_1ED1EC3C8);
}

uint64_t sub_1AFE1B858(uint64_t a1)
{
  return sub_1AFE1B8FC(a1, 0xD000000000000010, 0x80000001B005F9D0, (uint64_t *)&unk_1ED1EC390);
}

uint64_t static Image.windCompassArrow.getter()
{
  return sub_1AFB4B190(qword_1ED1EC3A0);
}

uint64_t sub_1AFE1B898(uint64_t a1)
{
  return sub_1AFE1B8FC(a1, 0xD000000000000016, 0x80000001B005F9B0, &qword_1ED1EC4D0);
}

uint64_t static Image.windCompassArrowFilled.getter()
{
  return sub_1AFB4B190(qword_1ED1EC4D8);
}

uint64_t sub_1AFE1B8D8(uint64_t a1)
{
  return sub_1AFE1B8FC(a1, 0xD000000000000015, 0x80000001B005F990, &qword_1ED1EC300);
}

uint64_t sub_1AFE1B8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  uint64_t result;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v5 = (id)qword_1ED1F4470;
  result = sub_1B00080F8();
  *a4 = result;
  return result;
}

uint64_t static Image.windCompassNorth.getter()
{
  return sub_1AFB4B190(&qword_1ED1EC3B0);
}

uint64_t static Image.windDirectionImage(angle:)(double a1)
{
  static Image.windDirectionSymbolName(angle:)(a1);
  return sub_1B00080BC();
}

void static Image.windDirectionSymbolName(angle:)(double a1)
{
  double v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;

  v1 = (a1 + 180.0) * 0.0174532925 * 57.2957795;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F46B0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_OWORD *)(inited + 16) = xmmword_1B0025810;
  OUTLINED_FUNCTION_0_6();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = v3 + 4;
  OUTLINED_FUNCTION_0_6();
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v6 + 1;
  OUTLINED_FUNCTION_0_6();
  *(_QWORD *)(v10 + 72) = v11;
  *(_QWORD *)(v10 + 80) = v9 + 6;
  OUTLINED_FUNCTION_0_6();
  *(_QWORD *)(v12 + 88) = v14;
  *(_QWORD *)(v12 + 96) = v13;
  OUTLINED_FUNCTION_0_6();
  v16[13] = v17;
  v16[14] = v15 + 5;
  v16[15] = 0x80000001B005F930;
  v16[16] = v15;
  v16[17] = 0x80000001B005F950;
  v16[18] = v15 + 3;
  v16[19] = 0x80000001B005F970;
  v18 = round(v1 / 45.0);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((uint64_t)v18 % 8 >= 0)
  {
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    sub_1AFAF95CC();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1AFE1BB70(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v6);
  v7 = (int *)type metadata accessor for WindHourlyGlyphContentView();
  *(_OWORD *)(a3 + v7[8]) = xmmword_1B0034210;
  v8 = v7[9];
  if (qword_1EEE70270 != -1)
    swift_once();
  v9 = (_QWORD *)(a3 + v8);
  v10 = *(_QWORD *)algn_1EEE922C8;
  v11 = qword_1EEE922D0;
  v12 = unk_1EEE922D8;
  *v9 = qword_1EEE922C0;
  v9[1] = v10;
  v9[2] = v11;
  v9[3] = v12;
  sub_1AFB98D88(a1, a3);
  *(_BYTE *)(a3 + v7[5]) = a2 & 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0007BB8();
  sub_1B0007B88();
  OUTLINED_FUNCTION_5_107();
  OUTLINED_FUNCTION_2_115();
  v13 = OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_6_104();
  *(_QWORD *)(a3 + v7[6]) = v13;
  sub_1B0007BD0();
  OUTLINED_FUNCTION_5_107();
  OUTLINED_FUNCTION_2_115();
  v14 = OUTLINED_FUNCTION_4_2();
  sub_1AFAE2D74(a1, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
  OUTLINED_FUNCTION_6_104();
  *(_QWORD *)(a3 + v7[7]) = v14;
}

uint64_t type metadata accessor for WindHourlyGlyphContentView()
{
  uint64_t result;

  result = qword_1EEE74C28;
  if (!qword_1EEE74C28)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AFE1BD4C(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = sub_1B00082E4();
  a1[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C70);
  sub_1AFE1BD8C(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

void sub_1AFE1BD8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C78);
  MEMORY[0x1E0C80A78](v99);
  v100 = (_QWORD *)((char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B00074D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C80);
  v89 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v10 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C88);
  MEMORY[0x1E0C80A78](v87);
  v90 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C90);
  MEMORY[0x1E0C80A78](v88);
  v93 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74C98);
  MEMORY[0x1E0C80A78](v96);
  v92 = (char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v94 = (uint64_t)v82 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CA0);
  MEMORY[0x1E0C80A78](v16);
  v98 = (uint64_t)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v82 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CA8);
  MEMORY[0x1E0C80A78](v21);
  v97 = (uint64_t)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v82 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v82 - v27;
  *(_QWORD *)v25 = sub_1B0007810();
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CB0);
  sub_1AFE1C534(a1, &v25[*(int *)(v29 + 44)]);
  v95 = v28;
  sub_1AFAE8274((uint64_t)v25, (uint64_t)v28, &qword_1EEE74CA8);
  v30 = sub_1AFE1D3B0();
  if ((v31 & 1) != 0
    || (v32 = v30,
        v33 = type metadata accessor for WindHourlyGlyphContentView(),
        (*(_BYTE *)(a1 + *(int *)(v33 + 20)) & 1) != 0))
  {
    v93 = v20;
    v94 = a2;
    if (qword_1EEE6FFB0 != -1)
      swift_once();
    v101 = qword_1EEE92018;
    v102 = unk_1EEE92020;
    sub_1AFAF9424();
    swift_bridgeObjectRetain();
    v34 = sub_1B0007D5C();
    v36 = v35;
    v38 = v37 & 1;
    type metadata accessor for WindHourlyGlyphContentView();
    v39 = sub_1B0007D08();
    v41 = v40;
    v43 = v42 & 1;
    sub_1AFAED640(v34, v36, v38);
    swift_bridgeObjectRelease();
    v44 = sub_1B0007CCC();
    v46 = v45;
    v48 = v47;
    v50 = v49;
    sub_1AFAED640(v39, v41, v43);
    swift_bridgeObjectRelease();
    v51 = v100;
    *v100 = v44;
    v51[1] = v46;
    *((_BYTE *)v51 + 16) = v48 & 1;
    v51[3] = v50;
    swift_storeEnumTagMultiPayload();
    sub_1AFE1E670();
    v20 = v93;
    sub_1B0007918();
    a2 = v94;
  }
  else
  {
    v52 = v33;
    v53 = sub_1B00080BC();
    v82[1] = v53;
    v54 = sub_1B0007C3C();
    v86 = v5;
    v55 = v54;
    KeyPath = swift_getKeyPath();
    v85 = v8;
    v101 = v53;
    v102 = KeyPath;
    v103 = v55;
    sub_1B0007BA0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72D90);
    v84 = v6;
    sub_1AFD239C4();
    v83 = v32;
    sub_1B0007E10();
    swift_release();
    swift_release();
    swift_release();
    v57 = *(_QWORD *)(a1 + *(int *)(v52 + 36));
    v58 = swift_getKeyPath();
    v59 = v89;
    v60 = (uint64_t)v90;
    v61 = v91;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v90, v10, v91);
    v62 = (uint64_t *)(v60 + *(int *)(v87 + 36));
    *v62 = v58;
    v62[1] = v57;
    v63 = *(void (**)(char *, uint64_t))(v59 + 8);
    swift_retain();
    v63(v10, v61);
    sub_1B0008380();
    v65 = v64;
    v67 = v66;
    v68 = (uint64_t)v93;
    sub_1AFAF2558(v60, (uint64_t)v93, &qword_1EEE74C88);
    v69 = (uint64_t *)(v68 + *(int *)(v88 + 36));
    *v69 = v83;
    v69[1] = v65;
    v69[2] = v67;
    sub_1AFACE0DC(v60, &qword_1EEE74C88);
    v70 = swift_getKeyPath();
    v71 = v84;
    v72 = v85;
    v73 = v86;
    (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v85, *MEMORY[0x1E0CD9A90], v86);
    v74 = (uint64_t)v92;
    v75 = (uint64_t *)&v92[*(int *)(v96 + 36)];
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FA0);
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))((char *)v75 + *(int *)(v76 + 28), v72, v73);
    *v75 = v70;
    sub_1AFAF2558(v68, v74, &qword_1EEE74C90);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    sub_1AFACE0DC(v68, &qword_1EEE74C90);
    v77 = v94;
    sub_1AFAE8274(v74, v94, &qword_1EEE74C98);
    sub_1AFAF2558(v77, (uint64_t)v100, &qword_1EEE74C98);
    swift_storeEnumTagMultiPayload();
    sub_1AFE1E670();
    sub_1B0007918();
    sub_1AFACE0DC(v77, &qword_1EEE74C98);
  }
  v78 = (uint64_t)v95;
  v79 = v97;
  sub_1AFAF2558((uint64_t)v95, v97, &qword_1EEE74CA8);
  v80 = v98;
  sub_1AFAF2558((uint64_t)v20, v98, &qword_1EEE74CA0);
  sub_1AFAF2558(v79, a2, &qword_1EEE74CA8);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CD0);
  sub_1AFAF2558(v80, a2 + *(int *)(v81 + 48), &qword_1EEE74CA0);
  sub_1AFACE0DC((uint64_t)v20, &qword_1EEE74CA0);
  sub_1AFACE0DC(v78, &qword_1EEE74CA8);
  sub_1AFACE0DC(v80, &qword_1EEE74CA0);
  sub_1AFACE0DC(v79, &qword_1EEE74CA8);
}

uint64_t sub_1AFE1C534@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t);
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t *v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (*v101)(char *, _QWORD, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  _QWORD __src[17];

  v113 = a2;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE720E0);
  MEMORY[0x1E0C80A78](v107);
  v108 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE720E8);
  MEMORY[0x1E0C80A78](v110);
  v112 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v109 = (uint64_t)&v96 - v6;
  MEMORY[0x1E0C80A78](v7);
  v111 = (uint64_t)&v96 - v8;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7E0);
  MEMORY[0x1E0C80A78](v114);
  v116 = (uint64_t *)((char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  MEMORY[0x1E0C80A78](v10);
  v115 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5C0);
  MEMORY[0x1E0C80A78](v98);
  v97 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CD8);
  MEMORY[0x1E0C80A78](v104);
  v102 = (uint64_t)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CE0);
  v118 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v119 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v117 = (char *)&v96 - v16;
  __src[0] = sub_1AFE1CE90();
  __src[1] = v17;
  v100 = sub_1AFAF9424();
  v18 = sub_1B0007D5C();
  v20 = v19;
  v22 = v21 & 1;
  v23 = type metadata accessor for WindHourlyGlyphContentView();
  v99 = *(int *)(v23 + 28);
  v24 = sub_1B0007D08();
  v26 = v25;
  v28 = v27 & 1;
  sub_1AFAED640(v18, v20, v22);
  swift_bridgeObjectRelease();
  v29 = *(int *)(v23 + 36);
  v30 = a1;
  v31 = (uint64_t)v97;
  v106 = v30;
  v103 = v30 + v29;
  v32 = sub_1B0007CCC();
  v34 = v33;
  v36 = v35;
  LOBYTE(v20) = v37 & 1;
  sub_1AFAED640(v24, v26, v28);
  swift_bridgeObjectRelease();
  v38 = *MEMORY[0x1E0CDDC08];
  v39 = sub_1B0007CFC();
  v40 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104);
  v41 = (uint64_t)v115;
  v105 = v38;
  v101 = v40;
  v40(v115, v38, v39);
  __swift_storeEnumTagSinglePayload(v41, 0, 1, v39);
  KeyPath = swift_getKeyPath();
  v43 = v116;
  sub_1AFAF2558(v41, (uint64_t)v116 + *(int *)(v114 + 28), &qword_1ED1EE7F8);
  *v43 = KeyPath;
  sub_1AFAF2558((uint64_t)v43, v31 + *(int *)(v98 + 36), &qword_1ED1EE7E0);
  *(_QWORD *)v31 = v32;
  *(_QWORD *)(v31 + 8) = v34;
  *(_BYTE *)(v31 + 16) = v20;
  *(_QWORD *)(v31 + 24) = v36;
  sub_1AFBB755C(v32, v34, v20);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC((uint64_t)v43, &qword_1ED1EE7E0);
  sub_1AFACE0DC(v41, &qword_1ED1EE7F8);
  sub_1AFAED640(v32, v34, v20);
  swift_bridgeObjectRelease();
  if (qword_1EEE70220 != -1)
    swift_once();
  v44 = -*(double *)&qword_1EEE74BC8;
  v45 = v102;
  sub_1AFAF2558(v31, v102, &qword_1ED1EE5C0);
  v46 = v45 + *(int *)(v104 + 36);
  *(_QWORD *)v46 = 0;
  *(double *)(v46 + 8) = v44;
  sub_1AFACE0DC(v31, &qword_1ED1EE5C0);
  sub_1AFAEEF7C((unint64_t *)&qword_1EEE74CE8, &qword_1EEE74CD8, (uint64_t (*)(void))sub_1AFC6EE60, MEMORY[0x1E0CD90E0]);
  v47 = v119;
  sub_1B0007DD4();
  sub_1AFACE0DC(v45, &qword_1EEE74CD8);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v47, v120);
  v48 = v106;
  __src[0] = sub_1AFE1D194();
  __src[1] = v49;
  v50 = sub_1B0007D5C();
  v52 = v51;
  v54 = v53 & 1;
  v55 = sub_1B0007D08();
  v57 = v56;
  v59 = v58;
  v61 = v60;
  sub_1AFAED640(v50, v52, v54);
  swift_bridgeObjectRelease();
  v62 = swift_getKeyPath();
  v63 = swift_getKeyPath();
  v64 = sub_1B0007AC8();
  sub_1B0007264();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v73 = type metadata accessor for WindComplicationHourlyViewModel();
  v74 = 24;
  if (*(_BYTE *)(v48 + *(int *)(v73 + 32)))
    v74 = 16;
  v75 = *(_QWORD *)(v103 + v74);
  v76 = swift_getKeyPath();
  __src[0] = v55;
  __src[1] = v57;
  LOBYTE(__src[2]) = v59 & 1;
  __src[3] = v61;
  __src[4] = v62;
  __src[5] = 1;
  LOBYTE(__src[6]) = 0;
  __src[7] = v63;
  __src[8] = 0x3FE6666666666666;
  LOBYTE(__src[9]) = v64;
  __src[10] = v66;
  __src[11] = v68;
  __src[12] = v70;
  __src[13] = v72;
  LOBYTE(__src[14]) = 0;
  __src[15] = v76;
  __src[16] = v75;
  v77 = (uint64_t)v115;
  v101(v115, v105, v39);
  __swift_storeEnumTagSinglePayload(v77, 0, 1, v39);
  v78 = swift_getKeyPath();
  v79 = v116;
  sub_1AFAF2558(v77, (uint64_t)v116 + *(int *)(v114 + 28), &qword_1ED1EE7F8);
  *v79 = v78;
  v80 = v108;
  sub_1AFAF2558((uint64_t)v79, (uint64_t)&v108[*(int *)(v107 + 36)], &qword_1ED1EE7E0);
  memcpy(v80, __src, 0x88uLL);
  swift_retain();
  sub_1AFCAB678((uint64_t)__src);
  sub_1AFACE0DC((uint64_t)v79, &qword_1ED1EE7E0);
  sub_1AFACE0DC(v77, &qword_1ED1EE7F8);
  sub_1AFCAB6EC((uint64_t)__src);
  if (qword_1EEE70218 != -1)
    swift_once();
  v81 = qword_1EEE74BC0;
  v82 = v109;
  sub_1AFAF2558((uint64_t)v80, v109, &qword_1EEE720E0);
  v83 = (_QWORD *)(v82 + *(int *)(v110 + 36));
  *v83 = 0;
  v83[1] = v81;
  sub_1AFACE0DC((uint64_t)v80, &qword_1EEE720E0);
  v84 = v111;
  sub_1AFAE8274(v82, v111, &qword_1EEE720E8);
  v85 = v118;
  v86 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v87 = v119;
  v88 = v117;
  v89 = v120;
  v86(v119, v117, v120);
  v90 = v112;
  sub_1AFAF2558(v84, v112, &qword_1EEE720E8);
  v91 = v113;
  v86(v113, v87, v89);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74CF0);
  v93 = &v91[*(int *)(v92 + 48)];
  *(_QWORD *)v93 = 0;
  v93[8] = 1;
  sub_1AFAF2558(v90, (uint64_t)&v91[*(int *)(v92 + 64)], &qword_1EEE720E8);
  sub_1AFACE0DC(v84, &qword_1EEE720E8);
  v94 = *(void (**)(char *, uint64_t))(v85 + 8);
  v94(v88, v89);
  sub_1AFACE0DC(v90, &qword_1EEE720E8);
  return ((uint64_t (*)(char *, uint64_t))v94)(v87, v89);
}

uint64_t sub_1AFE1CE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t _8[11];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&_8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&_8[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&_8[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&_8[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WindComplicationHourlyViewModel();
  sub_1AFAF2558(v0 + *(int *)(v14 + 28), (uint64_t)v9, &qword_1ED1F4038);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1AFACE0DC((uint64_t)v9, &qword_1ED1F4038);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    if ((*(_BYTE *)(v0 + *(int *)(type metadata accessor for WindHourlyGlyphContentView() + 20)) & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4408);
      v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NSUnitSpeed.WeatherFormatComponent(0) - 8)
                               + 80);
      v17 = (v16 + 32) & ~v16;
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1B00275C0;
      v19 = v18 + v17;
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41E8);
      __swift_storeEnumTagSinglePayload(v19, 1, 1, v20);
      sub_1AFAF04C0();
      v22 = v21;
      HIBYTE(_8[0]) = 0;
      v23 = sub_1B0005A1C();
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v23);
      static WeatherFormatStyle<>.weather(_:usage:locale:)(v22, (uint64_t)_8 + 7, (uint64_t)v3, v24, v25, v26, v27, v28, v32, _8[0], _8[1], _8[2], _8[3], _8[4], _8[5], _8[6], _8[7], _8[8], _8[9],
        _8[10]);
      swift_bridgeObjectRelease();
      sub_1AFACE0DC((uint64_t)v3, &qword_1ED1F44D8);
      sub_1B0006700();
      v29 = sub_1B00066D0();
      sub_1AFC16B58((uint64_t)v6, 0, v29, (uint64_t)v13);
      v15 = v30;
      swift_release();
      sub_1AFAE2D74((uint64_t)v6, type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v15;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (qword_1EEE6FFB0 != -1)
    swift_once();
  v15 = qword_1EEE92018;
  swift_bridgeObjectRetain();
  return v15;
}

uint64_t sub_1AFE1D194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_1B0005A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C20);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + *(int *)(type metadata accessor for WindHourlyGlyphContentView() + 20)) & 1) != 0)
  {
    if (qword_1EEE6FFB0 != -1)
      swift_once();
    v8 = qword_1EEE92018;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EEE70130 != -1)
      swift_once();
    v9 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
    v10 = v0 + v9[9];
    v11 = v0 + v9[10];
    v12 = sub_1B0005B84();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v12);
    sub_1B00059A4();
    v8 = sub_1AFD370B0(v10, (uint64_t)v4, (uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1AFACE0DC((uint64_t)v7, &qword_1ED1F1C20);
    if (*(_BYTE *)(v0 + v9[8]) == 1)
    {
      type metadata accessor for RectangularContentView.TimeFormatter();
      sub_1AFD34834();
      v13 = sub_1B0008620();
      swift_bridgeObjectRelease();
      if (v13 <= 5)
      {
        swift_bridgeObjectRelease();
        return sub_1AFD34834();
      }
    }
  }
  return v8;
}

uint64_t sub_1AFE1D3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  double v14;
  double v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = type metadata accessor for WindComplicationHourlyViewModel();
  sub_1AFAF2558(v0 + *(int *)(v11 + 20), (uint64_t)v3, &qword_1ED1F0FB0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1AFACE0DC((uint64_t)v3, &qword_1ED1F0FB0);
    *(double *)&result = 0.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v13 = objc_msgSend((id)objc_opt_self(), sel_degrees);
    sub_1B00050E0();

    sub_1B0005068();
    v15 = v14;
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    v16(v10, v4);
    *(double *)&result = (v15 + 180.0) * 0.0174532925;
  }
  return result;
}

double sub_1AFE1D56C()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 9.0, *MEMORY[0x1E0DC1448]);
  objc_msgSend(v0, sel_descender);
  v2 = v1;

  result = fabs(v2);
  qword_1EEE74BC0 = *(_QWORD *)&result;
  return result;
}

double sub_1AFE1D5E0()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 9.0, *MEMORY[0x1E0DC1448]);
  objc_msgSend(v0, sel_ascender);
  v2 = v1;
  objc_msgSend(v0, sel_capHeight);
  v4 = v3;

  result = v2 - v4;
  *(double *)&qword_1EEE74BC8 = v2 - v4;
  return result;
}

_QWORD *sub_1AFE1D66C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
    v9 = v8[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    *((_BYTE *)v4 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    v15 = v8[7];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    *((_BYTE *)v4 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v20 = v8[9];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = v8[10];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)((char *)v4 + v28) = *(_QWORD *)((char *)a2 + v28);
    v29 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_OWORD *)((char *)v4 + v29) = *(_OWORD *)((char *)a2 + v29);
    v30 = a3[9];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v32[3];
    v31[2] = v32[2];
    v31[3] = v34;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1AFE1D8E0(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v4 = a1 + v3[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + v3[7];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v3[9];
  v9 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + v3[10];
  v11 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFE1DA3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v13 = v7[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v18 = v7[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = v7[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v30[3];
  v29[2] = v30[2];
  v29[3] = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AFE1DC88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v16 = v7[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_13:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  v32 = a3[8];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  v35 = a3[9];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_retain();
  swift_release();
  v36[1] = v37[1];
  swift_retain();
  swift_release();
  v36[2] = v37[2];
  swift_retain();
  swift_release();
  v36[3] = v37[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1AFE1DFC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v13 = v7[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v18 = v7[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = v7[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[9];
  v29 = (_OWORD *)(a1 + v28);
  v30 = (_OWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  return a1;
}

uint64_t sub_1AFE1E1D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v16 = v7[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 40))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_13:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  v33 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *(_QWORD *)(a1 + v33) = *v35;
  swift_release();
  v34[1] = v35[1];
  swift_release();
  v34[2] = v35[2];
  swift_release();
  v34[3] = v35[3];
  swift_release();
  return a1;
}

uint64_t sub_1AFE1E4C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1E4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for WindComplicationHourlyViewModel();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1AFE1E54C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1E558(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for WindComplicationHourlyViewModel();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1AFE1E5CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WindComplicationHourlyViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFE1E660()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AFE1E670()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE74CB8;
  if (!qword_1EEE74CB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74C98);
    v2 = sub_1AFAEEF7C(&qword_1EEE74CC0, &qword_1EEE74C90, (uint64_t (*)(void))sub_1AFE1E714, MEMORY[0x1E0CD9DC0]);
    sub_1AFAD71A0(&qword_1ED1F0F98, &qword_1ED1F0FA0, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74CB8);
  }
  return result;
}

unint64_t sub_1AFE1E714()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE74CC8;
  if (!qword_1EEE74CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74C88);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE72D90);
    v4[3] = sub_1AFD239C4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFAD71A0(&qword_1ED1EE7E8, (uint64_t *)&unk_1ED1EC798, MEMORY[0x1E0CDCF80]);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74CC8);
  }
  return result;
}

void sub_1AFE1E7F0()
{
  sub_1AFAD71A0(&qword_1EEE74CF8, &qword_1EEE74D00, MEMORY[0x1E0CDFCF8]);
}

uint64_t *initializeBufferWithCopyOfBuffer for UltravioletComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for UltravioletComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = v7[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1B0006478();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for UltravioletComplicationDataStatus(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for UltravioletComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + *(int *)(v2 + 20);
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + *(int *)(v2 + 24);
    v7 = sub_1B0006478();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *initializeWithCopy for UltravioletComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for UltravioletComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0006478();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for UltravioletComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;

  v6 = (int *)type metadata accessor for UltravioletComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v18 = v6[5];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
      v22 = v6[6];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_1B0006478();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFE1ECC8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0006478();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFE1ECC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UltravioletComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for UltravioletComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  v6 = (int *)type metadata accessor for UltravioletComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0006478();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for UltravioletComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;

  v6 = (int *)type metadata accessor for UltravioletComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v18 = v6[5];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
      v22 = v6[6];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_1B0006478();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFE1ECC8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0006478();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UltravioletComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1EFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for UltravioletComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UltravioletComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE1F008(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for UltravioletComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFE1F054(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UltravioletComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFE1F084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UltravioletComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for UltravioletComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EF8F0;
  if (!qword_1ED1EF8F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE1F0F4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UltravioletComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFE1F148(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(_BYTE *, uint64_t);
  void (*v36)(_BYTE *, _QWORD);
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, _QWORD);
  void (*v58)(_BYTE *, uint64_t);
  _BYTE v59[16];
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  void (*v70)(_BYTE *, uint64_t, uint64_t, __n128);
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[40];
  _BYTE *v84;

  v63 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2780);
  MEMORY[0x1E0C80A78](v3);
  v62 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  MEMORY[0x1E0C80A78](v61);
  v60 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1108);
  MEMORY[0x1E0C80A78](v6);
  v69 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = sub_1B00052B4();
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v67 = &v59[-v10];
  v76 = sub_1B00053F8();
  v82 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v84 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = sub_1B0005404();
  v12 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v80 = &v59[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v79 = &v59[-v15];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  MEMORY[0x1E0C80A78](v16);
  v78 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1B0005410();
  v19 = (void (*)(uint64_t))MEMORY[0x1E0CAF160];
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v22 = &v59[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = &v59[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v72 = v20;
  v70 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v20 + 16);
  v70(v22, a1, v18, v24);
  sub_1AFADA43C(&qword_1ED1EC780, v19);
  v71 = v22;
  v74 = v18;
  sub_1B00086F8();
  v27 = *(int *)(v23 + 36);
  v77 = v26;
  v28 = &v26[v27];
  v81 = v12;
  v73 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v64 = *MEMORY[0x1E0CAECA8];
  while (1)
  {
    v29 = v79;
    v30 = v75;
    v73(v79, v28, v75);
    sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
    v31 = v80;
    v32 = (uint64_t)v77;
    v33 = v74;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v34 = sub_1B0008530();
    v35 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
    v35(v31, v30);
    v35(v29, v30);
    if ((v34 & 1) != 0)
      break;
    v36 = (void (*)(_BYTE *, _QWORD))sub_1B00088FC();
    v37 = v82;
    v38 = v78;
    v39 = v33;
    v40 = v76;
    (*(void (**)(_BYTE *))(v82 + 16))(v78);
    v36(v83, 0);
    v41 = v71;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v70)(v71, v32, v39);
    v42 = v28;
    sub_1B00088F0();
    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v41, v39);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40) == 1)
      goto LABEL_11;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32))(v84, v38, v40);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(_QWORD *)&v59[-16] = v44;
    swift_getKeyPath();
    sub_1AFADA43C(&qword_1ED1F1128, MEMORY[0x1E0CAECD8]);
    v45 = (uint64_t)v69;
    sub_1B00053D4();
    swift_release();
    v46 = v68;
    if (__swift_getEnumTagSinglePayload(v45, 1, v68) == 1)
    {
      sub_1AFAF866C(v45, &qword_1ED1F1108);
    }
    else
    {
      v47 = v65;
      v48 = v67;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v65 + 32))(v67, v45, v46);
      v49 = v66;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v66, v48, v46);
      v50 = (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 88))(v49, v46);
      if (v50 == v64)
      {
        v51 = (uint64_t)v60;
        sub_1B00053EC();
        v52 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v52);
        *(_QWORD *)&v59[-16] = v53;
        swift_getKeyPath();
        v54 = (uint64_t)v62;
        sub_1B0007D20();
        v55 = sub_1B0007D2C();
        __swift_storeEnumTagSinglePayload(v54, 0, 1, v55);
        sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
        v56 = v47;
        v57 = (void (*)(_BYTE *, _QWORD))sub_1B00054A0();
        sub_1AFD2CB04();
        sub_1B0005524();
        v57(v83, 0);
        sub_1AFAF866C(v51, &qword_1ED1F4128);
        (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v67, v46);
      }
      else
      {
        v58 = *(void (**)(_BYTE *, uint64_t))(v47 + 8);
        v58(v67, v46);
        v58(v66, v46);
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v84, v40);
    v28 = v42;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v78, 1, 1, v76);
LABEL_11:
  sub_1AFAF866C(v32, &qword_1ED1F4198);
}

void NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v16[2];
  int v17;
  char *v18;

  OUTLINED_FUNCTION_22_0();
  v16[1] = v4;
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_65_5();
  MEMORY[0x1E0C80A78](v5);
  v18 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_99();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v16 - v11;
  OUTLINED_FUNCTION_19_67();
  v13 = OUTLINED_FUNCTION_45_9();
  v17 = *(unsigned __int8 *)(v0 + v1[6]);
  OUTLINED_FUNCTION_24_61(v13, v0 + v1[8]);
  *v7 = v3;
  sub_1AFAF869C((uint64_t)v12, v2, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_14_65(v2);
  if (v14)
  {
    v15 = qword_1ED1F47A0;
    OUTLINED_FUNCTION_56_0();
    if (v15 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_31();
    sub_1B0006B14();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_17_85((uint64_t)v12);
    OUTLINED_FUNCTION_17_85(v2);
  }
  else
  {
    OUTLINED_FUNCTION_56_0();
    sub_1AFAF866C((uint64_t)v12, &qword_1ED1F44D8);
    OUTLINED_FUNCTION_29_62();
  }
  OUTLINED_FUNCTION_39_21();
  *((_BYTE *)v7 + v1[6]) = v17;
  *((_BYTE *)v7 + v1[7]) = 1;
  OUTLINED_FUNCTION_21_61((uint64_t)v7 + v1[8]);
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFE1FA1C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74DA0);
  return sub_1B0008530() & 1;
}

uint64_t sub_1AFE1FA74()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74DA0);
  return sub_1B00084DC();
}

uint64_t sub_1AFE1FAB8()
{
  sub_1AFADA43C(&qword_1ED1F1128, MEMORY[0x1E0CAECD8]);
  return sub_1B000556C();
}

uint64_t sub_1AFE1FB00()
{
  return sub_1B00052D8();
}

void static WeatherFormatStyle<>.weather(_:sign:locale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int **v8;
  int **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22_0();
  v23 = v6;
  v24 = v5;
  v22 = v7;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_24();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_34();
  v12 = OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_10_56();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_85_5(v23, v4);
  v16 = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v24, v12);
  *v9 = v22;
  OUTLINED_FUNCTION_85_5(v4, v3);
  OUTLINED_FUNCTION_14_65(v3);
  if (v17)
  {
    v18 = qword_1ED1F47A0;
    OUTLINED_FUNCTION_86_1();
    if (v18 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_31();
    sub_1B0006B14();
    OUTLINED_FUNCTION_41();
    v16 = (int *)&qword_1ED1F44D8;
    OUTLINED_FUNCTION_17_85(v4);
    OUTLINED_FUNCTION_17_85(v3);
  }
  else
  {
    OUTLINED_FUNCTION_86_1();
    sub_1AFAF866C(v4, &qword_1ED1F44D8);
    OUTLINED_FUNCTION_141(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  }
  v19 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v20 = OUTLINED_FUNCTION_66_5(v19);
  OUTLINED_FUNCTION_141(v20, v2, v21);
  *((_BYTE *)v9 + v16[6]) = 0;
  *((_BYTE *)v9 + v16[7]) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))((char *)v9 + v16[8], v0, v12);
  OUTLINED_FUNCTION_2_3();
}

void static Set<>.full(includingScale:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  v5 = *(_QWORD *)(type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0) - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = OUTLINED_FUNCTION_81_5();
  *(_OWORD *)(v8 + 16) = xmmword_1B00275A0;
  v9 = v8 + v7;
  v10 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  v11 = OUTLINED_FUNCTION_74(v9, 1);
  v12 = v9 + v6;
  OUTLINED_FUNCTION_13_1(v11, (unint64_t *)&qword_1ED1F44C0);
  sub_1B00050A4();
  OUTLINED_FUNCTION_42_0(v12, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  *(_BYTE *)(v12 + *(int *)(v10 + 20)) = a1;
  OUTLINED_FUNCTION_74(v12, 0);
  OUTLINED_FUNCTION_27(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (*(_QWORD *)(v8 + 16))
  {
    OUTLINED_FUNCTION_79_7();
  }
  else
  {
    swift_setDeallocating();
    sub_1AFE2168C();
  }
  OUTLINED_FUNCTION_8_0();
}

void static Set<>.unit(includingScale:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  OUTLINED_FUNCTION_20_70();
  v7 = v6 & ~v5;
  v8 = OUTLINED_FUNCTION_81_5();
  *(_OWORD *)(v8 + 16) = xmmword_1B00275C0;
  v9 = v8 + v7;
  OUTLINED_FUNCTION_13_1(v8, (unint64_t *)&qword_1ED1F44C0);
  sub_1B00050A4();
  OUTLINED_FUNCTION_42_0(v9, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v10 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  *(_BYTE *)(v9 + *(int *)(v10 + 20)) = a1;
  OUTLINED_FUNCTION_107(v9, v11, v12, v10);
  OUTLINED_FUNCTION_27(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (*(_QWORD *)(v8 + 16))
  {
    OUTLINED_FUNCTION_79_7();
  }
  else
  {
    swift_setDeallocating();
    sub_1AFE2168C();
  }
  OUTLINED_FUNCTION_28_5();
}

void sub_1AFE1FFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_22_0();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v26 = sub_1B000568C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_41_0();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44C8);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_10_56();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_60_4();
  sub_1B000595C();
  sub_1AFAF0DA8();
  sub_1B00055CC();
  sub_1B0005668();
  MEMORY[0x1B5DFF520](v29, v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v34(v20, v31);
  MEMORY[0x1B5DFF4E4](v25, v31);
  v34(v21, v31);
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFE20128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  OUTLINED_FUNCTION_22_0();
  v3 = v2;
  v67 = v4;
  HIDWORD(v65) = v5;
  v74 = v7;
  v75 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  v68 = v9;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4790);
  v71 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  v70 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_33();
  v66 = v14;
  v15 = OUTLINED_FUNCTION_87_5();
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_33();
  v59 = v17;
  v18 = OUTLINED_FUNCTION_24();
  v63 = *(_QWORD *)(v18 - 8);
  v64 = v18;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_33();
  v62 = (char *)v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4A80);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_27_1();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v58 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v58 - v34;
  v69 = v3;
  sub_1AFAD3E94(v3, (uint64_t)v23);
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24) == 1)
  {
    sub_1AFAF866C((uint64_t)v23, &qword_1ED1F4A80);
    OUTLINED_FUNCTION_13_1(v36, (unint64_t *)&qword_1ED1F44C0);
    sub_1B00050C8();
    OUTLINED_FUNCTION_26_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
    sub_1B0005620();
  }
  else
  {
    v58 = v12;
    sub_1AFC757F4((uint64_t)v23, v1, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
    v44 = *(unsigned __int8 *)(v1 + *(int *)(v24 + 20));
    if (v44 == 1)
    {
      v45 = v0;
      (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v32, v1, v26);
      v46 = v75;
      v12 = v62;
    }
    else
    {
      OUTLINED_FUNCTION_13_1(v43, (unint64_t *)&qword_1ED1F44C0);
      v46 = v75;
      v12 = v62;
      if ((v65 & 0x100000000) != 0)
        sub_1B00050BC();
      else
        sub_1B00050C8();
      v45 = v0;
    }
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v35, v32, v26);
    v47 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v12, v46, v64);
    if ((v44 & 1) == 0)
    {
      v50 = v59;
      v51 = sub_1B0005A10();
      MEMORY[0x1B5DFF8D4](v51);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v50, v61);
    }
    v48 = OUTLINED_FUNCTION_35_0((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    OUTLINED_FUNCTION_83_5(v48, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
    v49 = OUTLINED_FUNCTION_26_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 16));
    OUTLINED_FUNCTION_13_1(v49, (unint64_t *)&qword_1ED1F44C0);
    OUTLINED_FUNCTION_91_4();
    v0 = v45;
  }
  v52 = v68;
  sub_1AFE1FFF0(v67, v69, v37, v38, v39, v40, v41, v42, (uint64_t)v58, v59, v60, v61, (uint64_t)v62, v63, v64, v65, v66, v67, v68,
    v69);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44C8);
  OUTLINED_FUNCTION_107(v52, v54, v55, v53);
  v56 = v66;
  sub_1B0004FD8();
  sub_1AFAF866C(v52, &qword_1ED1F44D0);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v12, v73);
  v57 = *(void (**)(char *, uint64_t))(v0 + 8);
  v57(v29, v26);
  sub_1B0005098();
  OUTLINED_FUNCTION_27(v56, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
  v57(v35, v26);
  OUTLINED_FUNCTION_2_3();
}

uint64_t static NSUnitTemperature.WeatherFormatComponent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  v7 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_10();
  type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4A68);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_29();
  v12 = v2 + *(int *)(v11 + 48);
  sub_1AFADA740(a1, v2, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  sub_1AFADA740(a2, v12, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  OUTLINED_FUNCTION_57(v2);
  if (v13)
  {
    OUTLINED_FUNCTION_57(v12);
    if (v13)
      goto LABEL_15;
LABEL_9:
    sub_1AFAF866C(v2, &qword_1ED1F4A68);
    return 0;
  }
  sub_1AFADA740(v2, v4, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  OUTLINED_FUNCTION_57(v12);
  if (v13)
  {
    sub_1AFAD3854(v4, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
    goto LABEL_9;
  }
  sub_1AFC757F4(v12, v3, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
  OUTLINED_FUNCTION_13_1(v14, (unint64_t *)&qword_1ED1F44C0);
  v15 = sub_1B00050B0();
  if ((v15 & 1) == 0 || *(unsigned __int8 *)(v4 + *(int *)(v7 + 20)) != *(unsigned __int8 *)(v3 + *(int *)(v7 + 20)))
  {
    OUTLINED_FUNCTION_56_5(v3);
    OUTLINED_FUNCTION_56_5(v4);
    sub_1AFAD3854(v2, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
    return 0;
  }
  OUTLINED_FUNCTION_56_5(v3);
  OUTLINED_FUNCTION_56_5(v4);
LABEL_15:
  sub_1AFAD3854(v2, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  return 1;
}

uint64_t static NSUnitTemperature.WeatherFormatUnitConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_13_1(a1, (unint64_t *)&qword_1ED1F44C0);
  if ((sub_1B00050B0() & 1) != 0)
  {
    v4 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
    v5 = *(_BYTE *)(a1 + *(int *)(v4 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

void NSUnitTemperature.WeatherFormatComponent.hashValue.getter()
{
  sub_1AFC7B170((void (*)(_BYTE *))NSUnitTemperature.WeatherFormatComponent.hash(into:));
}

void sub_1AFE207F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFB2F330(a1, a2, a3, (void (*)(_BYTE *))NSUnitTemperature.WeatherFormatComponent.hash(into:));
}

void NSUnitTemperature.WeatherFormatUnitConfiguration.hash(into:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  sub_1AFB23DC0(&qword_1ED1F4768, &qword_1ED1F4770);
  OUTLINED_FUNCTION_68_6();
  sub_1B00084D0();
  type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_9_0();
}

uint64_t NSUnitTemperature.WeatherFormatUnitConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_23_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  sub_1AFB23DC0(&qword_1ED1F4768, &qword_1ED1F4770);
  OUTLINED_FUNCTION_67_5(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  sub_1B00084D0();
  type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  sub_1B000901C();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1AFE208F8()
{
  sub_1B0009004();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  sub_1AFB23DC0(&qword_1ED1F4768, &qword_1ED1F4770);
  sub_1B00084D0();
  sub_1B000901C();
  return sub_1B0009040();
}

uint64_t NSUnitTemperature.BaseWeatherFormatStyle.format(_:placeholder:unitManager:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_77_4();
  v0 = OUTLINED_FUNCTION_106();
  return sub_1AFADF278(v0, v1, v2, v3, v4, v5);
}

void NSUnitTemperature.BaseWeatherFormatStyle.accessible.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD v17[2];
  int v18;
  char *v19;

  OUTLINED_FUNCTION_22_0();
  v17[1] = v4;
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_65_5();
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_99();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v17 - v11;
  OUTLINED_FUNCTION_19_67();
  v13 = OUTLINED_FUNCTION_45_9();
  v14 = v1[8];
  v18 = *(unsigned __int8 *)(v0 + v1[7]);
  OUTLINED_FUNCTION_24_61(v13, v0 + v14);
  *v7 = v3;
  sub_1AFAF869C((uint64_t)v12, v2, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_14_65(v2);
  if (v15)
  {
    v16 = qword_1ED1F47A0;
    OUTLINED_FUNCTION_56_0();
    if (v16 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_31();
    sub_1B0006B14();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_17_85((uint64_t)v12);
    OUTLINED_FUNCTION_17_85(v2);
  }
  else
  {
    OUTLINED_FUNCTION_56_0();
    sub_1AFAF866C((uint64_t)v12, &qword_1ED1F44D8);
    OUTLINED_FUNCTION_29_62();
  }
  OUTLINED_FUNCTION_39_21();
  *((_BYTE *)v7 + v1[6]) = 1;
  *((_BYTE *)v7 + v1[7]) = v18;
  OUTLINED_FUNCTION_21_61((uint64_t)v7 + v1[8]);
  OUTLINED_FUNCTION_2_3();
}

void NSUnitTemperature.BaseWeatherFormatStyle.attributed.getter(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v3 = *v1;
  v4 = OUTLINED_FUNCTION_89_6();
  v5 = (char *)v1 + *(int *)(v4 + 20);
  v6 = (char *)v1 + *(int *)(v4 + 32);
  v7 = OUTLINED_FUNCTION_90_4();
  swift_bridgeObjectRetain();
  sub_1AFE20128();
  v8 = (char *)a1 + *(int *)(v7 + 24);
  v9 = OUTLINED_FUNCTION_24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v5, v9);
  v10 = (char *)a1 + *(int *)(v7 + 28);
  v11 = OUTLINED_FUNCTION_23_8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v6, v11);
  *a1 = v3;
  OUTLINED_FUNCTION_8_0();
}

void static NSUnitTemperature.BaseWeatherFormatStyle.== infix(_:_:)()
{
  char v0;

  OUTLINED_FUNCTION_35_29();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_89_6();
    OUTLINED_FUNCTION_86_6();
  }
  OUTLINED_FUNCTION_9_0();
}

void NSUnitTemperature.BaseWeatherFormatStyle.hashValue.getter()
{
  sub_1AFC7B170((void (*)(_BYTE *))NSUnitTemperature.BaseWeatherFormatStyle.hash(into:));
}

void sub_1AFE20C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFB2F330(a1, a2, a3, (void (*)(_BYTE *))NSUnitTemperature.BaseWeatherFormatStyle.hash(into:));
}

void NSUnitTemperature.AttributedWeatherFormatStyle.format(_:placeholder:unitManager:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_22_0();
  v43 = v4;
  v44 = v3;
  v6 = v5;
  v53 = v7;
  v8 = sub_1B0005410();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_33();
  v40 = v10;
  v11 = OUTLINED_FUNCTION_87_5();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_33();
  v50 = v13;
  v48 = *(_QWORD *)(type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0) - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_27_1();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74D20);
  v45 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_29();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v39 - v22;
  v46 = *v6;
  v24 = *(int *)(OUTLINED_FUNCTION_90_4() + 24);
  v49 = v1;
  v25 = v1 + v24;
  swift_getObjectType();
  v47 = v25;
  v26 = (void *)sub_1B0006724();
  sub_1B00050E0();

  sub_1B0005068();
  sub_1B0005074();
  sub_1B0005068();
  if (v27 == 0.0)
    sub_1B0005074();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v20, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  sub_1B0005080();
  sub_1AFB23DC0(&qword_1EEE74D28, &qword_1EEE74D20);
  v28 = v53;
  sub_1B00050EC();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v0, v15);
  OUTLINED_FUNCTION_35_0((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  OUTLINED_FUNCTION_58_4(v2);
  sub_1AFADA470();
  v30 = v29;
  OUTLINED_FUNCTION_83_5(v29, type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  v31 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1B00275C0;
  OUTLINED_FUNCTION_58_4(v32 + v31);
  OUTLINED_FUNCTION_79_7();
  sub_1AFAD26D4();
  v34 = v33;
  OUTLINED_FUNCTION_4_15();
  sub_1AFEDED80(v30 & 1, v34 & 1, qword_1B003BB78[v46], qword_1B003BB98[v46]);
  swift_bridgeObjectRelease();
  v35 = v50;
  v36 = sub_1B0005A10();
  v37 = MEMORY[0x1B5DFF8D4](v36);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v52);
  if ((v37 & 1) != 0)
  {
    v38 = v40;
    sub_1B0005428();
    sub_1AFE1F148(v38, v28);
    OUTLINED_FUNCTION_41_6(v41);
  }
  OUTLINED_FUNCTION_2_3();
}

void NSUnitTemperature.AttributedWeatherFormatStyle.hash(into:)()
{
  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_90_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  sub_1AFB23DC0(&qword_1EEE74D30, &qword_1ED1F4788);
  OUTLINED_FUNCTION_68_6();
  sub_1B00084D0();
  OUTLINED_FUNCTION_24();
  sub_1AFADA43C(&qword_1ED1F47A8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_23_8();
  sub_1AFADA43C(&qword_1ED1F4B98, (void (*)(uint64_t))MEMORY[0x1E0CAFC50]);
  OUTLINED_FUNCTION_125();
  OUTLINED_FUNCTION_28_5();
}

uint64_t static NSUnitTemperature.AttributedWeatherFormatStyle.== infix(_:_:)()
{
  char v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35_29();
  if ((v0 & 1) != 0)
  {
    v1 = type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle(0);
    OUTLINED_FUNCTION_13_1(v1, (unint64_t *)&qword_1ED1F44C0);
    if ((sub_1B000508C() & 1) != 0)
      OUTLINED_FUNCTION_86_6();
  }
  return 0;
}

uint64_t NSUnitTemperature.AttributedWeatherFormatStyle.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  OUTLINED_FUNCTION_23_7();
  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_4_15();
  type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  sub_1AFB23DC0(&qword_1EEE74D30, &qword_1ED1F4788);
  OUTLINED_FUNCTION_67_5(v0, v1, v2, v3, v4, v5, v6, v7, v25, v28);
  sub_1B00084D0();
  OUTLINED_FUNCTION_24();
  sub_1AFADA43C(&qword_1ED1F47A8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  OUTLINED_FUNCTION_67_5(v8, v9, v10, v11, v12, v13, v14, v15, v26, v29);
  sub_1B00084D0();
  OUTLINED_FUNCTION_23_8();
  sub_1AFADA43C(&qword_1ED1F4B98, (void (*)(uint64_t))MEMORY[0x1E0CAFC50]);
  OUTLINED_FUNCTION_67_5(v16, v17, v18, v19, v20, v21, v22, v23, v27, v30);
  sub_1B00084D0();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1AFE212A8()
{
  sub_1B0009004();
  swift_bridgeObjectRetain();
  sub_1AFB22F80();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  sub_1AFB23DC0(&qword_1EEE74D30, &qword_1ED1F4788);
  sub_1B00084D0();
  sub_1B0005A1C();
  sub_1AFADA43C(&qword_1ED1F47A8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  sub_1B00084D0();
  sub_1B000565C();
  sub_1AFADA43C(&qword_1ED1F4B98, (void (*)(uint64_t))MEMORY[0x1E0CAFC50]);
  sub_1B00084D0();
  return sub_1B0009040();
}

uint64_t sub_1AFE213D8()
{
  uint64_t v0;
  id v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  __swift_allocate_value_buffer(v0, qword_1EEE74D08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEE74D08);
  v1 = objc_msgSend((id)objc_opt_self(), sel_celsius);
  sub_1AFAEC5C0(0, (unint64_t *)&qword_1ED1F44C0);
  return sub_1B000505C();
}

uint64_t sub_1AFE2168C()
{
  type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1EC770);
}

void sub_1AFE21704()
{
  sub_1AFADA43C(&qword_1EEE74D38, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
}

void sub_1AFE21730(uint64_t a1)
{
  uint64_t v2;

  sub_1AFADA43C(&qword_1EEE74D90, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AFE2176C()
{
  sub_1AFADA43C(&qword_1EEE74D98, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle);
}

uint64_t *_s22WeatherFormatComponentOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s22WeatherFormatComponentOwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *_s22WeatherFormatComponentOwcp_0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *_s22WeatherFormatComponentOwca_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      return a1;
    }
    sub_1AFAD3854((uint64_t)a1, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *_s22WeatherFormatComponentOwtk_0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *_s22WeatherFormatComponentOwta_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      return a1;
    }
    sub_1AFAD3854((uint64_t)a1, type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t _s22WeatherFormatComponentOwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE21C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = OUTLINED_FUNCTION_187();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t _s22WeatherFormatComponentOwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE21CA0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  return OUTLINED_FUNCTION_5_4(a1, v5, a3, v6);
}

uint64_t sub_1AFE21CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t sub_1AFE21D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(0);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

_QWORD *_s30WeatherFormatUnitConfigurationVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s30WeatherFormatUnitConfigurationVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s30WeatherFormatUnitConfigurationVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s30WeatherFormatUnitConfigurationVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s30WeatherFormatUnitConfigurationVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s30WeatherFormatUnitConfigurationVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void sub_1AFE21F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770) - 8) + 84) == (_DWORD)a2)
  {
    v3 = OUTLINED_FUNCTION_68_6();
    OUTLINED_FUNCTION_6_5(v3, a2, v4);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

void sub_1AFE22004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4770);
  OUTLINED_FUNCTION_1_12();
  if (v8)
  {
    OUTLINED_FUNCTION_5_4(a1, a2, a2, v7);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    OUTLINED_FUNCTION_9_0();
  }
}

_QWORD *_s22BaseWeatherFormatStyleVwCP_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B0005A1C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v7 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[8];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1B000565C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

_QWORD *_s22BaseWeatherFormatStyleVwca_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v10 = a3[8];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_QWORD *_s22BaseWeatherFormatStyleVwtk_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *_s22BaseWeatherFormatStyleVwta_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t _s22BaseWeatherFormatStyleVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFE22378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_0_1();
    if (v7)
    {
      v8 = v6;
      v9 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = OUTLINED_FUNCTION_23_8();
      v9 = *(int *)(a3 + 32);
    }
    OUTLINED_FUNCTION_6_5(a1 + v9, a2, v8);
  }
}

uint64_t _s22BaseWeatherFormatStyleVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE223EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_176();
  if (v4)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v3 = v2;
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_1_12();
    if (v4)
    {
      v6 = v5;
      v7 = *(int *)(v3 + 20);
    }
    else
    {
      v6 = OUTLINED_FUNCTION_23_8();
      v7 = *(int *)(v3 + 32);
    }
    OUTLINED_FUNCTION_5_4((uint64_t)v1 + v7, v0, v0, v6);
  }
}

uint64_t *_s28AttributedWeatherFormatStyleVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1B0005A1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1B000565C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t _s28AttributedWeatherFormatStyleVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1B0005A1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_1B000565C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *_s28AttributedWeatherFormatStyleVwcp_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *_s28AttributedWeatherFormatStyleVwca_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_QWORD *_s28AttributedWeatherFormatStyleVwtk_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *_s28AttributedWeatherFormatStyleVwta_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B0005A1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1B000565C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t _s28AttributedWeatherFormatStyleVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFE22928(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_0_1();
      if (v9)
      {
        v7 = v10;
        v8 = a3[6];
      }
      else
      {
        v7 = OUTLINED_FUNCTION_23_8();
        v8 = a3[7];
      }
    }
    OUTLINED_FUNCTION_6_5(a1 + v8, a2, v7);
  }
}

uint64_t _s28AttributedWeatherFormatStyleVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE229BC()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_176();
  if (v4)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4788);
    OUTLINED_FUNCTION_1_12();
    if (v4)
    {
      v6 = v5;
      v7 = v3[5];
    }
    else
    {
      OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_1_12();
      if (v8)
      {
        v6 = v9;
        v7 = v3[6];
      }
      else
      {
        v6 = OUTLINED_FUNCTION_23_8();
        v7 = v3[7];
      }
    }
    OUTLINED_FUNCTION_5_4((uint64_t)v1 + v7, v0, v0, v6);
  }
}

void sub_1AFE22A44()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1AFB4C1B4(319, &qword_1ED1EE030, MEMORY[0x1E0CAE2D0]);
  if (v0 <= 0x3F)
  {
    sub_1B0005A1C();
    if (v1 <= 0x3F)
    {
      sub_1B000565C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1AFE22B04()
{
  return sub_1B00052D8();
}

void sub_1AFE22B24()
{
  sub_1AFADA43C(&qword_1ED1F1128, MEMORY[0x1E0CAECD8]);
}

uint64_t sub_1AFE22B58()
{
  return swift_release();
}

uint64_t sub_1AFE22B60(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1AFE22B74(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_5(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

void OUTLINED_FUNCTION_83_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1AFAD3854(v2, a2);
}

void sub_1AFE22BC0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 1;
  sub_1AFD4F6E4();
  sub_1AFD52A3C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t PrecipitationComplicationHourlyViewModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1B00058FC();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t PrecipitationComplicationHourlyViewModel.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B00058FC();
  return OUTLINED_FUNCTION_0_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*PrecipitationComplicationHourlyViewModel.id.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void PrecipitationComplicationHourlyViewModel.precipitation.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_108();
  sub_1AFE234F0(v1 + *(int *)(v3 + 20), a1, qword_1EEE71FD0);
}

uint64_t type metadata accessor for PrecipitationComplicationHourlyViewModel()
{
  uint64_t result;

  result = qword_1ED1EFBB8;
  if (!qword_1ED1EFBB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PrecipitationComplicationHourlyViewModel.chance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_5_108() + 24));
}

void PrecipitationComplicationHourlyViewModel.condition.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_108();
  sub_1AFE234F0(v1 + *(int *)(v3 + 28), a1, &qword_1ED1F2658);
}

void sub_1AFE234F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_11(a1, a2, a3);
  OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_30_52(v3, v4);
  OUTLINED_FUNCTION_0();
}

uint64_t PrecipitationComplicationHourlyViewModel.isDaytime.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_5_108() + 32));
}

uint64_t PrecipitationComplicationHourlyViewModel.now.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_5_108() + 36));
}

uint64_t PrecipitationComplicationHourlyViewModel.time.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_5_108();
  OUTLINED_FUNCTION_11_0();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t PrecipitationComplicationHourlyViewModel.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_5_108();
  OUTLINED_FUNCTION_12();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t PrecipitationComplicationHourlyViewModel.init(precipitation:chance:condition:isDaytime:now:time:timeZone:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1B00058F0();
  v16 = (int *)OUTLINED_FUNCTION_5_108();
  sub_1AFE236A4(a1, a8 + v16[5], qword_1EEE71FD0);
  v17 = a8 + v16[6];
  *(_QWORD *)v17 = a2;
  *(_BYTE *)(v17 + 8) = a3 & 1;
  sub_1AFE236A4(a4, a8 + v16[7], &qword_1ED1F2658);
  *(_BYTE *)(a8 + v16[8]) = a5;
  *(_BYTE *)(a8 + v16[9]) = a6;
  v18 = a8 + v16[10];
  v19 = OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_30_52(v18, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32));
  v20 = a8 + v16[11];
  v21 = OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a7, v21);
}

void sub_1AFE236A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_11(a1, a2, a3);
  OUTLINED_FUNCTION_30_52(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t static PrecipitationComplicationHourlyViewModel.make(now:time:timeZone:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;

  v8 = (int *)OUTLINED_FUNCTION_5_108();
  v9 = sub_1B00060E8();
  OUTLINED_FUNCTION_31(v9, v10, v11, v9);
  v12 = sub_1B0005FB0();
  OUTLINED_FUNCTION_31(v12, v13, v14, v12);
  v15 = a4 + v8[10];
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_24_12();
  v16(v15, a2);
  v17 = a4 + v8[11];
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_24_12();
  v18(v17, a3);
  result = sub_1B00058F0();
  v20 = a4 + v8[6];
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  *(_BYTE *)(a4 + v8[8]) = 1;
  *(_BYTE *)(a4 + v8[9]) = a1;
  return result;
}

uint64_t static PrecipitationComplicationHourlyViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  char v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  char v48;
  double *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v71 = sub_1B0005FB0();
  v67 = *(_QWORD *)(v71 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33();
  v66 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2668);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  v70 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  v68 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v72 = (uint64_t)&v62 - v13;
  MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v62 - v15;
  v16 = sub_1B00060E8();
  v73 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_9();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74DA8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v62 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v62 - v30;
  if ((sub_1B00058E4() & 1) == 0)
    goto LABEL_12;
  v62 = v7;
  v32 = OUTLINED_FUNCTION_5_108();
  v33 = *(int *)(v32 + 20);
  v63 = a1;
  OUTLINED_FUNCTION_22_61(a1 + v33, (uint64_t)v31);
  v64 = a2;
  v65 = (int *)v32;
  OUTLINED_FUNCTION_22_61(a2 + *(int *)(v32 + 20), (uint64_t)v28);
  v34 = v2 + *(int *)(v21 + 48);
  OUTLINED_FUNCTION_22_61((uint64_t)v31, v2);
  OUTLINED_FUNCTION_22_61((uint64_t)v28, v34);
  OUTLINED_FUNCTION_57(v2);
  if (v35)
  {
    sub_1AFACB308((uint64_t)v28, qword_1EEE71FD0);
    sub_1AFACB308((uint64_t)v31, qword_1EEE71FD0);
    OUTLINED_FUNCTION_57(v34);
    if (v35)
    {
      sub_1AFACB308(v2, qword_1EEE71FD0);
      goto LABEL_15;
    }
LABEL_10:
    v36 = &qword_1EEE74DA8;
    v37 = v2;
LABEL_11:
    sub_1AFACB308(v37, v36);
    goto LABEL_12;
  }
  sub_1AFE234F0(v2, (uint64_t)v25, qword_1EEE71FD0);
  OUTLINED_FUNCTION_57(v34);
  if (v35)
  {
    sub_1AFACB308((uint64_t)v28, qword_1EEE71FD0);
    sub_1AFACB308((uint64_t)v31, qword_1EEE71FD0);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v25, v16);
    goto LABEL_10;
  }
  v40 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v20, v34, v16);
  sub_1AFAF86C8(&qword_1EEE74DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEED38], MEMORY[0x1E0CEED50]);
  v41 = sub_1B0008530();
  v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v42(v20, v16);
  OUTLINED_FUNCTION_41_13((uint64_t)v28);
  OUTLINED_FUNCTION_41_13((uint64_t)v31);
  v42((uint64_t)v25, v16);
  OUTLINED_FUNCTION_41_13(v2);
  if ((v41 & 1) == 0)
    goto LABEL_12;
LABEL_15:
  v43 = v64;
  v44 = v65;
  v45 = v65[6];
  v46 = v63;
  v47 = (double *)(v63 + v45);
  v48 = *(_BYTE *)(v63 + v45 + 8);
  v49 = (double *)(v64 + v45);
  v50 = *(unsigned __int8 *)(v64 + v45 + 8);
  if ((v48 & 1) != 0)
  {
    if (!v50)
      goto LABEL_12;
  }
  else
  {
    if (*v47 != *v49)
      LOBYTE(v50) = 1;
    if ((v50 & 1) != 0)
      goto LABEL_12;
  }
  v51 = v69;
  OUTLINED_FUNCTION_21_62(v63 + v65[7], v69);
  v52 = v72;
  OUTLINED_FUNCTION_21_62(v43 + v44[7], v72);
  v53 = v70;
  v54 = v70 + *(int *)(v62 + 48);
  OUTLINED_FUNCTION_21_62(v51, v70);
  OUTLINED_FUNCTION_21_62(v52, v54);
  v55 = v71;
  if (__swift_getEnumTagSinglePayload(v53, 1, v71) != 1)
  {
    v56 = v68;
    sub_1AFE234F0(v53, v68, &qword_1ED1F2658);
    if (__swift_getEnumTagSinglePayload(v54, 1, v55) != 1)
    {
      v58 = v66;
      v57 = v67;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v54, v55);
      sub_1AFAF86C8(&qword_1ED1F2640, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], MEMORY[0x1E0CEEBB8]);
      v59 = sub_1B0008530();
      v60 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v61 = v58;
      v44 = v65;
      v60(v61, v55);
      OUTLINED_FUNCTION_25_2(v72);
      OUTLINED_FUNCTION_25_2(v51);
      v60(v56, v55);
      OUTLINED_FUNCTION_25_2(v53);
      if ((v59 & 1) == 0)
        goto LABEL_12;
      goto LABEL_28;
    }
    sub_1AFACB308(v52, &qword_1ED1F2658);
    sub_1AFACB308(v51, &qword_1ED1F2658);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v56, v55);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_25_2(v52);
  OUTLINED_FUNCTION_25_2(v51);
  if (__swift_getEnumTagSinglePayload(v54, 1, v55) != 1)
  {
LABEL_26:
    v36 = &qword_1ED1F2668;
    v37 = v53;
    goto LABEL_11;
  }
  sub_1AFACB308(v53, &qword_1ED1F2658);
LABEL_28:
  if (*(unsigned __int8 *)(v46 + v44[8]) == *(unsigned __int8 *)(v43 + v44[8])
    && *(unsigned __int8 *)(v46 + v44[9]) == *(unsigned __int8 *)(v43 + v44[9])
    && (sub_1B0005890() & 1) != 0)
  {
    v38 = MEMORY[0x1B5DFFA84](v46 + v44[11], v43 + v44[11]);
    return v38 & 1;
  }
LABEL_12:
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_1AFE23D78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65636E616863 && a2 == 0xE600000000000000;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6D69747961447369 && a2 == 0xE900000000000065;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 7827310 && a2 == 0xE300000000000000;
            if (v10 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 1701669236 && a2 == 0xE400000000000000;
              if (v11 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_1B0008FB0();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AFE24098()
{
  return 8;
}

uint64_t sub_1AFE240A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFE240C8 + 4 * byte_1B003BC00[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1AFE240C8()
{
  return 0x7469706963657270;
}

uint64_t sub_1AFE240EC()
{
  return 0x65636E616863;
}

uint64_t sub_1AFE24100()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1AFE24120()
{
  return 0x6D69747961447369;
}

uint64_t sub_1AFE2413C()
{
  return 7827310;
}

uint64_t sub_1AFE2414C()
{
  return 1701669236;
}

uint64_t sub_1AFE2415C()
{
  return 0x656E6F5A656D6974;
}

uint64_t sub_1AFE24174()
{
  unsigned __int8 *v0;

  return sub_1AFE240A0(*v0);
}

uint64_t sub_1AFE2417C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFE23D78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE241A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFE24098();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE241C4()
{
  sub_1AFE244E0();
  return sub_1B0009118();
}

uint64_t sub_1AFE241EC()
{
  sub_1AFE244E0();
  return sub_1B0009124();
}

uint64_t PrecipitationComplicationHourlyViewModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74DB8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE244E0();
  sub_1B0009058();
  sub_1B00058FC();
  sub_1AFAF86C8(&qword_1EEE72AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_46();
  if (!v1)
  {
    type metadata accessor for PrecipitationComplicationHourlyViewModel();
    sub_1B00060E8();
    sub_1AFAF86C8(&qword_1EEE74DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEED38], MEMORY[0x1E0CEED48]);
    OUTLINED_FUNCTION_7_12();
    sub_1B0008F14();
    sub_1B0005FB0();
    sub_1AFAF86C8(&qword_1EEE71020, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], MEMORY[0x1E0CEEBA8]);
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_48_0();
    sub_1B00058D8();
    sub_1AFAF86C8(&qword_1ED1F3CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_46();
    sub_1B0005B84();
    sub_1AFAF86C8(&qword_1EEE72AD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    OUTLINED_FUNCTION_46();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1AFE244E0()
{
  unint64_t result;

  result = qword_1EEE74DC0;
  if (!qword_1EEE74DC0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003BE44, &type metadata for PrecipitationComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74DC0);
  }
  return result;
}

void PrecipitationComplicationHourlyViewModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;

  v28 = sub_1B0005B84();
  v24 = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_33();
  v26 = v5;
  v32 = sub_1B00058D8();
  v29 = *(_QWORD *)(v32 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33();
  v27 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_14();
  v13 = sub_1B00058FC();
  v31 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74DD0);
  v18 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_34();
  v35 = (int *)type metadata accessor for PrecipitationComplicationHourlyViewModel();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_33();
  v33 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE244E0();
  sub_1B000904C();
  if (v34)
  {
    OUTLINED_FUNCTION_31_45();
  }
  else
  {
    sub_1AFAF86C8(&qword_1EEE72B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    OUTLINED_FUNCTION_9_73();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v33, v17, v13);
    sub_1B00060E8();
    sub_1AFAF86C8(&qword_1EEE74DD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEED38], MEMORY[0x1E0CEED60]);
    OUTLINED_FUNCTION_10_97();
    sub_1AFE236A4(v2, v33 + v35[5], qword_1EEE71FD0);
    v21 = sub_1B0008E90();
    v22 = v33 + v35[6];
    *(_QWORD *)v22 = v21;
    *(_BYTE *)(v22 + 8) = v23 & 1;
    sub_1B0005FB0();
    sub_1AFAF86C8(&qword_1EEE71048, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], MEMORY[0x1E0CEEBC8]);
    OUTLINED_FUNCTION_10_97();
    sub_1AFE236A4(v11, v33 + v35[7], &qword_1ED1F2658);
    *(_BYTE *)(v33 + v35[8]) = OUTLINED_FUNCTION_29_63() & 1;
    *(_BYTE *)(v33 + v35[9]) = OUTLINED_FUNCTION_29_63() & 1;
    sub_1AFAF86C8(&qword_1ED1F3CB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    OUTLINED_FUNCTION_9_73();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v33 + v35[10], v27, v32);
    sub_1AFAF86C8(&qword_1EEE72B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
    OUTLINED_FUNCTION_9_73();
    OUTLINED_FUNCTION_11_90(v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v33 + v35[11], v26, v28);
    sub_1AFCF9890(v33, a2);
    OUTLINED_FUNCTION_31_45();
    sub_1AFCF98D4(v33);
  }
}

void sub_1AFE24AB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AFAF86C8(&qword_1EEE74DE0, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationComplicationHourlyViewModel, (uint64_t)&protocol conformance descriptor for PrecipitationComplicationHourlyViewModel);
  a1[1] = v2;
  sub_1AFAF86C8(&qword_1EEE74DE8, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationComplicationHourlyViewModel, (uint64_t)&protocol conformance descriptor for PrecipitationComplicationHourlyViewModel);
  a1[2] = v3;
  sub_1AFAF86C8(&qword_1EEE74DF0, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationComplicationHourlyViewModel, (uint64_t)&protocol conformance descriptor for PrecipitationComplicationHourlyViewModel);
  a1[3] = v4;
  sub_1AFAF86C8(&qword_1EEE73900, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationComplicationHourlyViewModel, (uint64_t)&protocol conformance descriptor for PrecipitationComplicationHourlyViewModel);
  a1[4] = v5;
}

void sub_1AFE24B44()
{
  sub_1AFAF86C8(&qword_1EEE72B20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

void sub_1AFE24B74(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  PrecipitationComplicationHourlyViewModel.init(from:)(a1, a2);
}

uint64_t sub_1AFE24B88(_QWORD *a1)
{
  return PrecipitationComplicationHourlyViewModel.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for PrecipitationComplicationHourlyViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B00060E8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    v20 = sub_1B0005FB0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
    }
    v22 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = a3[11];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for PrecipitationComplicationHourlyViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1B00060E8();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[7];
  v8 = sub_1B0005FB0();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[10];
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[11];
  v12 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for PrecipitationComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1B00060E8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (void *)(a1 + v13);
  v17 = (const void *)(a2 + v13);
  v18 = sub_1B0005FB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v20 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

uint64_t assignWithCopy for PrecipitationComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1B00060E8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1B0005FB0();
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22);
  if (!v23)
  {
    v25 = *(_QWORD *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
LABEL_13:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for PrecipitationComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1B00060E8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (void *)(a1 + v13);
  v17 = (const void *)(a2 + v13);
  v18 = sub_1B0005FB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v20 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for PrecipitationComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1B00060E8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = (void *)(a1 + v16);
  v20 = (const void *)(a2 + v16);
  v21 = sub_1B0005FB0();
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    v24 = *(_QWORD *)(v21 - 8);
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
LABEL_13:
  v26 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationComplicationHourlyViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE25734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v16;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_17:
    v8 = v4 + v11;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  OUTLINED_FUNCTION_0_1();
  if (v12)
  {
    v7 = v13;
    v11 = a3[7];
    goto LABEL_17;
  }
  if ((_DWORD)v3 != 254)
  {
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v16;
      v11 = a3[10];
    }
    else
    {
      v7 = OUTLINED_FUNCTION_12();
      v11 = a3[11];
    }
    goto LABEL_17;
  }
  v14 = *(unsigned __int8 *)(v4 + a3[8]);
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrecipitationComplicationHourlyViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE25828(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_1_12();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEE71FD0);
    OUTLINED_FUNCTION_1_12();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
      OUTLINED_FUNCTION_1_12();
      if (v14)
      {
        v9 = v15;
        v13 = a4[7];
      }
      else
      {
        if (a3 == 254)
        {
          *(_BYTE *)(v5 + a4[8]) = v4 + 1;
          return;
        }
        OUTLINED_FUNCTION_11_0();
        OUTLINED_FUNCTION_1_12();
        if (v11)
        {
          v9 = v16;
          v13 = a4[10];
        }
        else
        {
          v9 = OUTLINED_FUNCTION_12();
          v13 = a4[11];
        }
      }
    }
    v10 = v5 + v13;
  }
  __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

void sub_1AFE258FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1B00058FC();
  if (v0 <= 0x3F)
  {
    sub_1AFB41E0C(319, &qword_1ED1EE548, (void (*)(uint64_t))MEMORY[0x1E0CEED38]);
    if (v1 <= 0x3F)
    {
      sub_1AFB41E0C(319, (unint64_t *)&qword_1ED1F2660, (void (*)(uint64_t))MEMORY[0x1E0CEEB98]);
      if (v2 <= 0x3F)
      {
        sub_1B00058D8();
        if (v3 <= 0x3F)
        {
          sub_1B0005B84();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for PrecipitationComplicationHourlyViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PrecipitationComplicationHourlyViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AFE25ADC + 4 * byte_1B003BC0D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AFE25B10 + 4 * byte_1B003BC08[v4]))();
}

uint64_t sub_1AFE25B10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE25B18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE25B20);
  return result;
}

uint64_t sub_1AFE25B2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE25B34);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AFE25B38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE25B40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationComplicationHourlyViewModel.CodingKeys()
{
  return &type metadata for PrecipitationComplicationHourlyViewModel.CodingKeys;
}

unint64_t sub_1AFE25B60()
{
  unint64_t result;

  result = qword_1EEE74DF8;
  if (!qword_1EEE74DF8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003BE1C, &type metadata for PrecipitationComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74DF8);
  }
  return result;
}

unint64_t sub_1AFE25BA0()
{
  unint64_t result;

  result = qword_1EEE74E00;
  if (!qword_1EEE74E00)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003BD8C, &type metadata for PrecipitationComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E00);
  }
  return result;
}

unint64_t sub_1AFE25BE0()
{
  unint64_t result;

  result = qword_1EEE74E08;
  if (!qword_1EEE74E08)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003BDB4, &type metadata for PrecipitationComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E08);
  }
  return result;
}

uint64_t sub_1AFE25C1C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for TemperatureComplicationViewModel();
  __swift_allocate_value_buffer(v0, qword_1EEE74E10);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EEE74E10);
  return sub_1AFE25C64(v1);
}

uint64_t sub_1AFE25C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  int *v16;
  void (*v17)(uint64_t, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_fahrenheit);
  sub_1AFB33BE4();
  sub_1B000505C();
  v14 = objc_msgSend(v12, sel_fahrenheit);
  sub_1B000505C();
  v15 = objc_msgSend(v12, sel_fahrenheit);
  sub_1B000505C();
  v16 = (int *)type metadata accessor for TemperatureComplicationViewModel();
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
  v17(a1 + v16[5], v11, v2);
  v17(a1 + v16[6], v8, v2);
  v17(a1 + v16[7], v5, v2);
  sub_1B00058F0();
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v5, v2);
  v18(v8, v2);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v2);
}

uint64_t static TemperatureComplicationViewModel.demo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEE70230 != -1)
    swift_once();
  v2 = type metadata accessor for TemperatureComplicationViewModel();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEE74E10);
  return sub_1AFE25E8C(v3, a1);
}

uint64_t sub_1AFE25E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TemperatureComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFE25ED0()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _WORD v20[8];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37[9];

  v37[0] = 5;
  v32 = 0x617274736F746C41;
  v33 = 0xEF4C202D20737574;
  v34 = 0xD000000000000013;
  v35 = 0x80000001B0051480;
  v36 = 9;
  v28 = 0x80000001B0051400;
  v29 = 0xD000000000000014;
  v30 = 0x80000001B0051420;
  v31 = 6;
  v22 = 0x617274736F746C41;
  v23 = 0xEF4C202D20737574;
  v24 = 0xD000000000000013;
  v25 = 0x80000001B0051480;
  v26 = 6;
  v27 = 0xD000000000000010;
  strcpy((char *)v20, "Wispy_Single");
  HIBYTE(v20[6]) = 0;
  v20[7] = -5120;
  v21 = 6;
  __asm { FMOV            V0.2D, #0.5 }
  sub_1AFE26770(_Q0, (__n128)xmmword_1B003BEB0, _Q0, (__n128)xmmword_1B003BEC0, *(double *)vdupq_n_s64(0x3FE3333340000000uLL).i64, 0.600000024, 18.0, 6.0, -18.0, -60.0);
  __asm { FMOV            V0.2D, #1.0 }
  sub_1AFE26770(_Q0, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B00278C0, _Q0.n128_f64[0], 1.0, 18.0, 6.0, -18.0, -60.0);
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v19 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v19 = 0x4248000044BB8000;
  DWORD2(v17) = 1116471296;
  *(_QWORD *)&v17 = 0x43FA000040400000;
  *(_QWORD *)&v15 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v15 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v13 + 1) = 0x3F19999A3E99999ALL;
  *(_QWORD *)&v13 = 0x41C8000041B00000;
  LODWORD(v11) = 1093310349;
  DWORD2(v10) = 1096810496;
  *(_QWORD *)&v10 = 0x4204000041727059;
  LODWORD(v9) = 1153138688;
  LODWORD(v7) = 1140457472;
  sub_1AFB471E4((uint64_t)v37, 48, 0, 2000, 133, 10, 1, 9, 0, 0x41F00000C20C0000, 0x428C000040400000, v7, 0x3E8000003DF5C28FLL, v8, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v9,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x41F0000000000000,
    v10,
    0x3F19999A3ECCCCCDLL,
    1091567616,
    v11,
    v12,
    xmmword_1B0025CC0,
    _Q0,
    v13,
    1091567616,
    v14,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v15,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v16,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v17,
    1039516303,
    1048576000,
    v18,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v19,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFE26770(__n128 a1, __n128 a2, __n128 a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v18;
  __n128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  float v38;
  __int128 v39;
  __n128 v40;
  __int128 v41;
  __int128 v42;
  __n128 v43;
  __int128 v44;
  __int128 v45;
  __n128 v46;
  __n128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  double v58;
  __n128 v59;
  double v60;
  double v61;
  __n128 v62;
  __n128 v63;
  __int128 v64;
  __n128 v65;
  double v66;
  __int128 v67;
  __int128 v68;
  __n128 v69;
  __int128 v70;
  __n128 v71;
  double v72;
  __int128 v73;
  double v74;
  __n128 v75;
  double v76;
  __n128 v77;
  unsigned int v78;
  __n128 *v79;
  uint64_t v80;
  float v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  double v90;
  __n128 v91;
  float v92;
  float v93;
  __n128 v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  __n128 v100;
  __int128 v101;
  double v102;
  double v103;
  __n128 v104;
  double v105;
  __n128 v106;
  __n128 v107;
  double v108;
  __n128 v109;
  double v110;
  __int128 v111;
  __n128 v112;
  __int128 v113;
  __n128 v114;
  double v115;
  double v116;
  __int128 v117;
  double v118;
  double v119;
  __n128 v120;
  __n128 v121;
  __n128 *v122;
  uint64_t v123;
  float v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  uint64_t v132;
  double v133;
  __n128 v134;
  float v135;
  __int128 v136;
  __int128 v137;
  __n128 *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  uint64_t v146;
  double v147;
  __n128 v148;
  float v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  float v158;
  __n128 v159;
  double v160;
  double v161;
  __int128 v162;
  __n128 v163;
  __int128 v164;
  double v165;
  __n128 v166;
  double v167;
  __n128 v168;
  __n128 v169;
  double v170;
  __n128 v171;
  double v172;
  __int128 v173;
  __n128 v174;
  __int128 v175;
  __n128 v176;
  double v177;
  __int128 v178;
  __n128 v179;
  __int128 v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  uint64_t v188;
  float v189;
  __n128 v190;
  double v191;
  double v192;
  double v193;
  __n128 v194;
  double v195;
  __n128 v196;
  __int128 v197;
  __n128 v198;
  __int128 v199;
  __int128 v200;
  __n128 v201;
  __int128 v202;
  __n128 v203;
  double v204;
  __int128 v205;
  double v206;
  double v207;
  __n128 v208;
  __n128 v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  uint64_t v217;
  float v218;
  __int128 v219;
  double v220;
  double v221;
  double v222;
  __n128 v223;
  __n128 v224;
  __int128 v225;
  __n128 v226;
  __int128 v227;
  __int128 v228;
  double v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  uint64_t v237;
  double v238;
  double v239;
  double v240;
  __n128 v241;
  __n128 v242;
  __int128 v243;
  __n128 v244;
  __int128 v245;
  __int128 v246;
  double v247;
  double v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  uint64_t v256;
  uint64_t v258;
  int v259;
  int v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  __n128 v381;
  __n128 v382;
  __n128 v383;
  int64x2_t v384;
  int64x2_t v389;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __n128 v399;
  __int128 v400;
  __n128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __n128 v405;
  __int128 v406;
  __n128 v407;
  __int128 v408;
  __n128 v409;
  __int128 v410;
  __n128 v411;
  __n128 v412;
  __n128 v413;
  __n128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __n128 v419;
  __int128 v420;
  __n128 v421;
  __n128 v422;
  __n128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __n128 v427;
  __int128 v428;
  __n128 v429;
  __int128 v430;
  __n128 v431;
  __int128 v432;
  __n128 v433;
  __int128 v434;
  __n128 v435;
  __int128 v436;
  __n128 v437;
  __int128 v438;
  __n128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  int64x2_t v453;
  __int128 v454;
  __n128 v455;
  __n128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B0027F30;
  v461 = xmmword_1B00276A0;
  v462 = xmmword_1B00276B0;
  v459 = xmmword_1B0028C00;
  v460 = xmmword_1B0028C10;
  v457 = xmmword_1B00287F0;
  v458 = xmmword_1B0028050;
  __asm { FMOV            V2.2D, #1.0 }
  v455 = _Q2;
  v456 = _Q2;
  v389 = vdupq_n_s64(0x3FDF8963C0000000uLL);
  v453 = v389;
  v454 = xmmword_1B002D870;
  v451 = xmmword_1B0028C20;
  v452 = xmmword_1B0028C30;
  v449 = xmmword_1B0028C40;
  v450 = xmmword_1B0028C50;
  v447 = xmmword_1B0028C60;
  v448 = xmmword_1B00277A0;
  v445 = xmmword_1B0028C70;
  v446 = xmmword_1B0028C80;
  v443 = (__int128)_Q2;
  OUTLINED_FUNCTION_18_73(0.699999928, 1.0, _Q2);
  v439 = v24;
  v440 = xmmword_1B0027030;
  v437 = v24;
  v438 = xmmword_1B0025E90;
  v435 = v24;
  v436 = xmmword_1B0027730;
  v433 = v24;
  v434 = xmmword_1B0025E90;
  v431 = v24;
  v432 = xmmword_1B0025E50;
  v429 = v24;
  v430 = xmmword_1B0025E90;
  v427 = a1;
  v428 = (__int128)a2;
  v425 = xmmword_1B0027FE0;
  v426 = xmmword_1B0025E90;
  v423 = v24;
  v424 = xmmword_1B00278C0;
  v421 = v24;
  v422 = v24;
  v419 = v24;
  v420 = xmmword_1B0027770;
  v417 = xmmword_1B0027FE0;
  v418 = xmmword_1B0025E90;
  v415 = xmmword_1B0027FE0;
  v416 = xmmword_1B0028C90;
  v413 = v24;
  v414 = v24;
  v411 = v24;
  v412 = v24;
  v409 = v24;
  v410 = xmmword_1B0025E50;
  v407 = v24;
  v408 = xmmword_1B0027030;
  v405 = v24;
  OUTLINED_FUNCTION_31_46((__n128)xmmword_1B00277B0, a1);
  v392 = v25;
  v401 = (__n128)v25;
  v402 = v26;
  v399 = (__n128)v25;
  v400 = v27;
  v397 = v25;
  v398 = v25;
  v395 = v25;
  v396 = v25;
  v393 = v25;
  v394 = v25;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_24_62();
  OUTLINED_FUNCTION_12_7(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, 35.0, 0.1, &v447, &v445, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v443, 0,
    &v441,
    &v439,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    1112014848,
    1097859072,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_8_103();
  OUTLINED_FUNCTION_19_68((__n128)xmmword_1B0028CA0, (__n128)xmmword_1B0028CB0);
  v453 = v389;
  v454 = xmmword_1B002D870;
  v451 = xmmword_1B0028CC0;
  v452 = v39;
  v449 = xmmword_1B0028CD0;
  v450 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_25_58((__n128)xmmword_1B0028CF0);
  v445 = xmmword_1B0028D00;
  v446 = xmmword_1B0028C80;
  v443 = (__int128)v40;
  v444 = (__int128)v40;
  v442 = 0u;
  v441 = 0u;
  v439 = v40;
  v440 = xmmword_1B0027030;
  v437 = v40;
  v438 = xmmword_1B0025E90;
  v435 = v40;
  v436 = xmmword_1B0027730;
  v433 = v40;
  v434 = xmmword_1B0025E90;
  v431 = v40;
  v432 = xmmword_1B0025E50;
  v429 = v40;
  v430 = xmmword_1B0025E90;
  v427 = v40;
  v428 = xmmword_1B0026140;
  v425 = xmmword_1B0027FE0;
  v426 = xmmword_1B0025E90;
  v423 = a1;
  OUTLINED_FUNCTION_10_98(a4, a1.n128_f64[0], 1.0, v40);
  v417 = v41;
  v418 = v42;
  v415 = v41;
  v416 = xmmword_1B0028C90;
  v413 = v43;
  v414 = v43;
  v411 = v43;
  v412 = v43;
  v409 = v43;
  v410 = v44;
  v407 = v43;
  v408 = v45;
  v405 = v43;
  OUTLINED_FUNCTION_31_46((__n128)xmmword_1B00277B0, v46);
  v401 = v47;
  v402 = v48;
  v399 = v47;
  v400 = v49;
  v397 = (__int128)v47;
  v398 = (__int128)v47;
  v395 = (__int128)v47;
  v396 = (__int128)v47;
  v393 = (__int128)v47;
  v394 = (__int128)v47;
  OUTLINED_FUNCTION_32_40();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_12_7(v50, v51, v52, v53, v54, v55, v56, v57, v58, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v447, &v445, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v443, 0,
    &v441,
    &v439,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    v353,
    v359,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    1112014848,
    1097859072,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028D10;
  v460 = xmmword_1B0028D20;
  OUTLINED_FUNCTION_19_68((__n128)xmmword_1B0028D30, (__n128)xmmword_1B0028D40);
  v384 = vdupq_n_s64(0x3FE09C5FA0000000uLL);
  v453 = v384;
  v454 = xmmword_1B002D880;
  v451 = (__int128)v59;
  v452 = (__int128)v59;
  v449 = (__int128)v59;
  v450 = (__int128)v59;
  v447 = (__int128)v59;
  v448 = xmmword_1B0027740;
  v445 = xmmword_1B0028D50;
  v446 = xmmword_1B0028D60;
  *(_QWORD *)&v61 = OUTLINED_FUNCTION_4_110(0.69862318, 0.998033106, v60, v59).n128_u64[0];
  v432 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_27_60(v61, v62, 1.0, v63);
  v425 = xmmword_1B0027FE0;
  v426 = v64;
  v423 = v65;
  OUTLINED_FUNCTION_10_98((__n128)xmmword_1B00278C0, *(double *)&v64, v66, v65);
  v417 = v67;
  v418 = v68;
  v415 = v67;
  v416 = xmmword_1B0028C90;
  v413 = v69;
  v414 = v69;
  v411 = v69;
  v412 = v69;
  v409 = v69;
  v410 = v70;
  *(_QWORD *)&v72 = OUTLINED_FUNCTION_11_91(1.0, *(double *)&v68, *(double *)&v70, v69, *(double *)&v67, v71).n128_u64[0];
  v402 = v73;
  OUTLINED_FUNCTION_7_99(v72, v74, *(double *)&v73, v75, v76, v77);
  OUTLINED_FUNCTION_30_53();
  OUTLINED_FUNCTION_3_110();
  OUTLINED_FUNCTION_12_8();
  v258 = v78 | 0x3F4CCCCD00000000;
  v383 = v79[163];
  v81 = *(float *)(v80 + 2640);
  OUTLINED_FUNCTION_24_62();
  OUTLINED_FUNCTION_12_7(v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v81, &v447, &v445, v258, 1061997773, &v443, 0,
    &v441,
    &v439,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v317,
    v323,
    v329,
    v335,
    v341,
    v347,
    v354,
    v360,
    v365,
    &v403,
    &v401,
    &v399,
    &v397,
    1112014848,
    1097859072,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028D70;
  v460 = xmmword_1B0028A50;
  OUTLINED_FUNCTION_19_68((__n128)xmmword_1B00276E0, (__n128)xmmword_1B0026110);
  v453 = (int64x2_t)v94;
  v454 = xmmword_1B0027030;
  OUTLINED_FUNCTION_17_86(v95, v96, v97, v94);
  v445 = xmmword_1B0028D80;
  v446 = xmmword_1B0028D90;
  v443 = xmmword_1B0026320;
  v99 = OUTLINED_FUNCTION_18_73(0.970078886, v98, (__n128)xmmword_1B0026330);
  v439 = v100;
  v440 = v101;
  OUTLINED_FUNCTION_14_96(v99, v102, v103, v100);
  v432 = xmmword_1B0025E50;
  v429 = v104;
  OUTLINED_FUNCTION_26_59((__n128)xmmword_1B0026450, v105, v106, v104);
  v423 = v107;
  *(_QWORD *)&v110 = OUTLINED_FUNCTION_6_105((__n128)xmmword_1B0026230, v108, v109, v107).n128_u64[0];
  v410 = v111;
  v407 = v112;
  v408 = v113;
  *(_QWORD *)&v116 = OUTLINED_FUNCTION_22_62(v110, v114, v115, v112).n128_u64[0];
  v402 = v117;
  OUTLINED_FUNCTION_7_99(v116, v118, v119, v120, *(double *)&v117, v121);
  OUTLINED_FUNCTION_30_53();
  OUTLINED_FUNCTION_3_110();
  OUTLINED_FUNCTION_12_8();
  v382 = v122[32];
  v124 = *(float *)(v123 + 2620);
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_19_7(v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, 700.0, v135, v124, &v447, &v445, 0x3F6666663F666666, 0, &v443, 0,
    &v441,
    &v439,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    v312,
    v318,
    v324,
    v330,
    v336,
    v342,
    v348,
    v355,
    v361,
    v366,
    &v403,
    &v401,
    &v399,
    &v397,
    1112014848,
    1097859072,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028DA0;
  v460 = xmmword_1B0028DB0;
  v457 = xmmword_1B0028220;
  v458 = xmmword_1B0028230;
  v455 = (__n128)v392;
  v456 = (__n128)v392;
  v453 = (int64x2_t)v392;
  v454 = xmmword_1B0027030;
  v451 = v392;
  v452 = v392;
  v449 = v392;
  v450 = v392;
  v447 = v392;
  v448 = xmmword_1B0027840;
  v445 = xmmword_1B0028DC0;
  v446 = xmmword_1B0028D90;
  v443 = xmmword_1B0028DD0;
  OUTLINED_FUNCTION_18_73(1.0, *(double *)&v392, (__n128)xmmword_1B0028DE0);
  v439 = (__n128)v136;
  v440 = v137;
  v437 = (__n128)v136;
  v438 = xmmword_1B0025E90;
  v435 = (__n128)v136;
  v436 = xmmword_1B0027730;
  v433 = (__n128)v136;
  v434 = xmmword_1B0025E90;
  v431 = (__n128)v136;
  v432 = xmmword_1B0025E50;
  v429 = (__n128)v136;
  v430 = v136;
  v427 = (__n128)v136;
  v428 = v136;
  v425 = v136;
  v426 = xmmword_1B0028150;
  v423 = (__n128)v136;
  v424 = xmmword_1B0026130;
  v421 = (__n128)v136;
  v422 = (__n128)v136;
  v419 = (__n128)v136;
  v420 = xmmword_1B0027770;
  v417 = v136;
  v418 = xmmword_1B0025E90;
  v415 = v136;
  v416 = xmmword_1B0028C90;
  v413 = (__n128)v136;
  v414 = (__n128)v136;
  v411 = (__n128)v136;
  v412 = (__n128)v136;
  v409 = (__n128)v136;
  v410 = xmmword_1B0025E50;
  v407 = (__n128)v136;
  v408 = v137;
  v405 = (__n128)v136;
  v406 = xmmword_1B00278C0;
  v403 = v136;
  v404 = xmmword_1B0026140;
  v401 = (__n128)v136;
  v402 = xmmword_1B0025E50;
  v399 = (__n128)v136;
  v400 = v137;
  v397 = v136;
  v398 = v136;
  v395 = v136;
  v396 = v136;
  v393 = v136;
  v394 = v136;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_130();
  OUTLINED_FUNCTION_12_8();
  v381 = v138[223];
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_19_7(v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, 900.0, v149, 0.8, &v447, &v445, 0x3F6666663F666666, 0, &v443, 0,
    v261,
    v265,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    v313,
    v319,
    v325,
    v331,
    v337,
    v343,
    v349,
    v356,
    v362,
    v367,
    &v403,
    &v401,
    &v399,
    &v397,
    v369,
    v375,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028DA0;
  v460 = xmmword_1B0028DB0;
  v457 = xmmword_1B0028220;
  v458 = xmmword_1B0028230;
  v455 = (__n128)v392;
  v456 = (__n128)v392;
  v453 = (int64x2_t)v392;
  v454 = xmmword_1B0027030;
  v451 = v392;
  v452 = v392;
  v449 = v392;
  v450 = v392;
  v447 = v392;
  v448 = xmmword_1B0027840;
  v445 = xmmword_1B0028DC0;
  v446 = xmmword_1B0028D90;
  v443 = xmmword_1B0028DD0;
  v444 = xmmword_1B0028DE0;
  v442 = 0u;
  v441 = 0u;
  v439 = (__n128)v392;
  v440 = xmmword_1B0027030;
  v437 = (__n128)v392;
  v438 = xmmword_1B0025E90;
  v435 = (__n128)v392;
  v436 = xmmword_1B0027730;
  v433 = (__n128)v392;
  v434 = xmmword_1B0025E90;
  v431 = (__n128)v392;
  v432 = xmmword_1B0025E50;
  v429 = (__n128)v392;
  v430 = v392;
  v427 = (__n128)v392;
  v428 = v392;
  v425 = v392;
  v426 = xmmword_1B0028150;
  v423 = (__n128)v392;
  v424 = xmmword_1B0026130;
  v421 = (__n128)v392;
  v422 = (__n128)v392;
  v419 = (__n128)v392;
  v420 = xmmword_1B0027770;
  v417 = v392;
  v418 = xmmword_1B0025E90;
  v415 = v392;
  v416 = xmmword_1B0028C90;
  v413 = (__n128)v392;
  v414 = (__n128)v392;
  v411 = (__n128)v392;
  v412 = (__n128)v392;
  v409 = (__n128)v392;
  v410 = xmmword_1B0025E50;
  v407 = (__n128)v392;
  v408 = xmmword_1B0027030;
  v405 = (__n128)v392;
  v406 = xmmword_1B00278C0;
  v403 = v392;
  v404 = xmmword_1B0026140;
  v401 = (__n128)v392;
  v402 = xmmword_1B0025E50;
  v399 = (__n128)v392;
  v400 = xmmword_1B0027030;
  v397 = v392;
  v398 = v392;
  v395 = v392;
  v396 = v392;
  v393 = v392;
  v394 = v392;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_1_115();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_18_8(v150, v151, v152, v153, v154, v155, v156, v157, a7, v381, 900.0, v158, 0.8, &v447, &v445, 0x3F6666663F666666, 0, &v443, v259,
    v262,
    v266,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v314,
    v320,
    v326,
    v332,
    v338,
    v344,
    v350,
    &v409,
    &v407,
    &v445,
    &v403,
    &v401,
    &v399,
    &v397,
    v370,
    v376,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028D70;
  v460 = xmmword_1B0028A50;
  v457 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_33_41((__n128)xmmword_1B0026110);
  v453 = (int64x2_t)v159;
  v454 = xmmword_1B0027030;
  OUTLINED_FUNCTION_17_86(1.0, v160, v161, v159);
  v445 = v162;
  v446 = xmmword_1B0028D90;
  v443 = xmmword_1B0026320;
  v444 = xmmword_1B0026330;
  v442 = 0u;
  v441 = 0u;
  v439 = v163;
  v440 = v164;
  OUTLINED_FUNCTION_14_96(*(double *)&v164, v165, 0.0, v163);
  v432 = xmmword_1B0025E50;
  v429 = v166;
  OUTLINED_FUNCTION_26_59((__n128)xmmword_1B0026450, v167, v168, v166);
  v423 = v169;
  *(_QWORD *)&v172 = OUTLINED_FUNCTION_6_105((__n128)xmmword_1B0026230, v170, v171, v169).n128_u64[0];
  v410 = v173;
  v407 = v174;
  v408 = v175;
  OUTLINED_FUNCTION_22_62(v172, v176, v177, v174);
  v402 = v178;
  v399 = v179;
  v400 = v180;
  v397 = (__int128)v179;
  v398 = (__int128)v179;
  v395 = (__int128)v179;
  v396 = (__int128)v179;
  v393 = (__int128)v179;
  v394 = (__int128)v179;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_32_40();
  OUTLINED_FUNCTION_1_115();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_18_8(v181, v182, v183, v184, v185, v186, v187, v188, a8, v382, 700.0, v189, v124, &v447, &v445, 0x3F6666663F666666, 0, &v443, v260,
    v263,
    v267,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v315,
    v321,
    v327,
    v333,
    v339,
    v345,
    v351,
    v357,
    v363,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    v371,
    v377,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_5_109();
  v459 = xmmword_1B0028D10;
  v460 = xmmword_1B0028D20;
  v457 = xmmword_1B0028D30;
  OUTLINED_FUNCTION_33_41((__n128)xmmword_1B0028D40);
  v453 = v384;
  v454 = xmmword_1B002D880;
  v451 = (__int128)v190;
  v452 = (__int128)v190;
  v449 = (__int128)v190;
  v450 = (__int128)v190;
  v447 = (__int128)v190;
  v448 = xmmword_1B0027740;
  v445 = xmmword_1B0028D50;
  v446 = xmmword_1B0028D60;
  *(_QWORD *)&v193 = OUTLINED_FUNCTION_4_110(0.998033106, v191, v192, v190).n128_u64[0];
  v432 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_27_60(v193, v194, v195, v196);
  v425 = xmmword_1B0027FE0;
  v426 = v197;
  v423 = v198;
  OUTLINED_FUNCTION_10_98((__n128)xmmword_1B00278C0, *(double *)&v197, 0.899999976, v198);
  v417 = v199;
  v418 = v200;
  v415 = v199;
  v416 = xmmword_1B0028C90;
  v413 = v201;
  v414 = v201;
  v411 = v201;
  v412 = v201;
  v409 = v201;
  v410 = v202;
  *(_QWORD *)&v204 = OUTLINED_FUNCTION_11_91(1.0, *(double *)&v200, *(double *)&v199, v201, *(double *)&v202, v203).n128_u64[0];
  v402 = v205;
  OUTLINED_FUNCTION_7_99(v204, v206, v207, v208, *(double *)&v205, v209);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_13_7(v210, v211, v212, v213, v214, v215, v216, v217, a9, v383, 200.0, v218, v81, &v447, &v445, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v443, 0,
    &v441,
    &v439,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    v372,
    v378,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_8_103();
  v457 = xmmword_1B0028CA0;
  OUTLINED_FUNCTION_16_79((__n128)xmmword_1B0028CB0);
  v451 = xmmword_1B0028CC0;
  v452 = v219;
  v449 = xmmword_1B0028CD0;
  v450 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_25_58((__n128)xmmword_1B0028CF0);
  OUTLINED_FUNCTION_15_89((__n128)xmmword_1B0028D00, v220, v221, v222, v223);
  v440 = xmmword_1B0027030;
  v437 = v224;
  v438 = xmmword_1B0025E90;
  v435 = v224;
  v436 = xmmword_1B0027730;
  v433 = v224;
  v434 = xmmword_1B0025E90;
  v431 = v224;
  v432 = xmmword_1B0025E50;
  v429 = v224;
  v430 = xmmword_1B0025E90;
  v427 = v224;
  v428 = xmmword_1B0026140;
  v425 = xmmword_1B0027FE0;
  v426 = xmmword_1B0025E90;
  v423 = a1;
  v424 = (__int128)a4;
  v421 = v224;
  v422 = v224;
  v419 = v224;
  v420 = xmmword_1B0027770;
  v417 = xmmword_1B0027FE0;
  v418 = xmmword_1B0025E90;
  v415 = xmmword_1B0027FE0;
  v416 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_28_55(a1.n128_f64[0], 1.0, 1.0, 1.0, v224);
  v410 = v225;
  v407 = v226;
  v408 = v227;
  v405 = v226;
  v406 = xmmword_1B00277B0;
  v403 = v228;
  v404 = (__int128)a3;
  v401 = v226;
  v402 = v225;
  v399 = v226;
  v400 = v227;
  OUTLINED_FUNCTION_23_65(a3.n128_f64[0], *(double *)&v225, 1.0, v229, v226);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_130();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_13_7(v230, v231, v232, v233, v234, v235, v236, v237, a10, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v447, &v445, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v443, 0,
    v264,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v316,
    v322,
    v328,
    v334,
    v340,
    v346,
    v352,
    v358,
    v364,
    v368,
    &v403,
    &v401,
    &v399,
    &v397,
    v373,
    v379,
    &v395,
    (uint64_t)&v393);
  OUTLINED_FUNCTION_8_103();
  v457 = xmmword_1B00287F0;
  OUTLINED_FUNCTION_16_79((__n128)xmmword_1B0028050);
  v451 = xmmword_1B0028C20;
  v452 = xmmword_1B0028C30;
  v449 = xmmword_1B0028C40;
  v450 = xmmword_1B0028C50;
  OUTLINED_FUNCTION_25_58((__n128)xmmword_1B0028C60);
  OUTLINED_FUNCTION_15_89((__n128)xmmword_1B0028C70, v238, v239, v240, v241);
  v440 = xmmword_1B0027030;
  v437 = v242;
  v438 = xmmword_1B0025E90;
  v435 = v242;
  v436 = xmmword_1B0027730;
  v433 = v242;
  v434 = xmmword_1B0025E90;
  v431 = v242;
  v432 = xmmword_1B0025E50;
  v429 = v242;
  v430 = xmmword_1B0025E90;
  v427 = a1;
  v428 = (__int128)a2;
  v425 = xmmword_1B0027FE0;
  v426 = xmmword_1B0025E90;
  v423 = v242;
  v424 = xmmword_1B00278C0;
  v421 = v242;
  v422 = v242;
  v419 = v242;
  v420 = xmmword_1B0027770;
  v417 = xmmword_1B0027FE0;
  v418 = xmmword_1B0025E90;
  v415 = xmmword_1B0027FE0;
  v416 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_28_55(1.0, 1.0, a1.n128_f64[0], 0.899999976, v242);
  v410 = v243;
  v407 = v244;
  v408 = v245;
  v405 = v244;
  v406 = xmmword_1B00277B0;
  v403 = v246;
  v404 = (__int128)a3;
  v401 = v244;
  v402 = v243;
  v399 = v244;
  v400 = v245;
  OUTLINED_FUNCTION_23_65(a3.n128_f64[0], v247, *(double *)&v246, v248, v244);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_117();
  OUTLINED_FUNCTION_13_7(v249, v250, v251, v252, v253, v254, v255, v256, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v447, &v445, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v443, 0,
    &v441,
    &v439,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v401,
    &v403,
    &v401,
    &v399,
    &v397,
    v374,
    v380,
    &v395,
    (uint64_t)&v393);
  return v18;
}

void sub_1AFE27C34()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 1;
  sub_1AFCCD4E8();
  sub_1AFE28414();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFE28414()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = (__int128)_Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = xmmword_1B002B430;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v11 = _Q1;
  v8 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = _Q1;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B00268C0;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B00268D0;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0027840;
  v64 = (int64x2_t)xmmword_1B002A7E0;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = xmmword_1B0026920;
  v17 = v11;
  v14 = xmmword_1B0027950;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026950;
  v13 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B002A800;
  v75 = xmmword_1B002A810;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027960;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B0026980;
  v13 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1106247680,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B002A840;
  v64 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027970;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B00269D0;
  v13 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0027040;
  v67 = xmmword_1B002A870;
  v64 = (int64x2_t)xmmword_1B002A880;
  v65 = xmmword_1B002A890;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027980;
  v15 = xmmword_1B00267B0;
  v12 = xmmword_1B0026A10;
  v13 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A8B0;
  v65 = xmmword_1B002A8C0;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0027440;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A30;
  v15 = xmmword_1B0026A40;
  v12 = xmmword_1B0026A50;
  v13 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026370;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A70;
  v15 = xmmword_1B0026A80;
  v12 = xmmword_1B0026A90;
  v13 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AC0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B002A8D0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AE0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026440;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AF0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A920;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027990;
  v15 = xmmword_1B0026C70;
  v12 = xmmword_1B0026B20;
  v13 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B002A990;
  v65 = xmmword_1B002A9A0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B00279A0;
  v15 = xmmword_1B0026C20;
  v12 = xmmword_1B0026B60;
  v13 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026130;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A9C0;
  v65 = xmmword_1B002A9D0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = xmmword_1B0026B80;
  v17 = xmmword_1B0026B90;
  v14 = xmmword_1B00279B0;
  v15 = xmmword_1B00279C0;
  v12 = xmmword_1B0026BC0;
  v13 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026BD0;
  v81 = v11;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = xmmword_1B0026BE0;
  v17 = xmmword_1B0026BF0;
  v14 = xmmword_1B00279D0;
  v15 = xmmword_1B00279E0;
  v12 = xmmword_1B0026C10;
  v13 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.88, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v77 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B00278C0;
  v64 = (int64x2_t)xmmword_1B002AA00;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026C30;
  v17 = v11;
  v14 = xmmword_1B00279F0;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026C60;
  v13 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1106247680,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026C80;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026C90;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = xmmword_1B002B430;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  return v0;
}

void sub_1AFE2BA00()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 2;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73757461727453;
  v28 = 0xEF4C656C676E6953;
  v29 = 9;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 10;
  v25 = 0x2073757461727453;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBA237C();
  sub_1AFBA237C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1168891904;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 5, 0, 0x41F00000C20C0000, 0x42C800003F666666, v5, 0x3E3333333E24DD2FLL, v6, 0x3F8000003F800000, 0x3EF77EE93F800000, 0x3F8000003F800000, 0x3E7F0B0D3F800000, 1065353216,
    0x428C000000000000,
    v7,
    0x3E3439583DA3D70ALL,
    0x3F8000003F800000,
    0x3EE476A03F800000,
    0x3F8000003F800000,
    0x3E838B5E3F800000,
    1075838976,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE2C25C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1AFE2C280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[9];

  v44[0] = 0;
  OUTLINED_FUNCTION_0_6();
  v39 = v0;
  v40 = v1;
  OUTLINED_FUNCTION_0_6();
  v41 = v2;
  v42 = v3;
  v43 = 9;
  v35 = 0xEF4C202D20737574;
  v36 = v4;
  OUTLINED_FUNCTION_0_6();
  v37 = v6;
  v38 = v5;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = v7;
  v32 = 0x80000001B0050E80;
  v33 = v5;
  v34 = 0x617274736F746C41;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  OUTLINED_FUNCTION_0_6();
  sub_1AFE2CA90();
  sub_1AFE2FCB4();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v26 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v26 = 0x4248000044BB8000;
  DWORD2(v24) = 1116471296;
  *(_QWORD *)&v24 = 0x43FA000040400000;
  *(_QWORD *)&v22 = 0x3AC49BA63F800000;
  *((_QWORD *)&v22 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v20 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v20 = 0x4348000040C00000;
  LODWORD(v18) = 1101004800;
  DWORD2(v17) = 1132068864;
  *(_QWORD *)&v17 = 0x4140000040A00000;
  LODWORD(v16) = 1153138688;
  LODWORD(v14) = 1140457472;
  sub_1AFB471E4((uint64_t)v44, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v14, 0x3E8000003DF5C28FLL, v15, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v16,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v17,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v18,
    v19,
    xmmword_1B0025CC0,
    _Q0,
    v20,
    1084227584,
    v21,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v22,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v23,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v24,
    1039516303,
    1048576000,
    v25,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v26,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFE2CA90()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int64x2_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int64x2_t v78;
  __int128 v79;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v78 = (int64x2_t)xmmword_1B002D210;
  v79 = xmmword_1B0026850;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = xmmword_1B0025E50;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = _Q1;
  v64 = _Q1;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = _Q1;
  v60 = (int64x2_t)_Q1;
  v61 = xmmword_1B0025E90;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = _Q1;
  v21 = _Q1;
  v18 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0025EB0;
  v17 = xmmword_1B0025EC0;
  v9 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v11 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  v10 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v19 = xmmword_1B0025EE0;
  v16 = xmmword_1B0025EF0;
  v17 = xmmword_1B0025F00;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B0025F20;
  v77 = xmmword_1B0025F30;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B0025F50;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026900;
  v67 = xmmword_1B0026910;
  v64 = xmmword_1B0025F80;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025F90;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF992720000000uLL);
  v19 = xmmword_1B0025FB0;
  v16 = xmmword_1B0025FC0;
  v17 = xmmword_1B0025FD0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025FE0;
  v79 = v9;
  v76 = xmmword_1B0025FF0;
  v77 = xmmword_1B0026000;
  v74 = xmmword_1B0026010;
  v75 = xmmword_1B0026020;
  v72 = xmmword_1B0026030;
  v73 = xmmword_1B0026040;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)xmmword_1B0026060;
  v61 = xmmword_1B0026070;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026080;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B00260A0;
  v17 = xmmword_1B0026090;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00260C0;
  v79 = xmmword_1B00260D0;
  v76 = xmmword_1B00260E0;
  v77 = xmmword_1B00260F0;
  v74 = xmmword_1B002D220;
  v75 = xmmword_1B002D230;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026150;
  v65 = xmmword_1B0026160;
  v62 = xmmword_1B0026170;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026180;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B00261A0;
  v17 = xmmword_1B0026190;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00261C0;
  v79 = xmmword_1B00261D0;
  v76 = xmmword_1B00261E0;
  v77 = xmmword_1B00261F0;
  v74 = xmmword_1B0026200;
  v75 = xmmword_1B0026210;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026240;
  v63 = xmmword_1B0026250;
  v60 = (int64x2_t)xmmword_1B0026260;
  v61 = xmmword_1B0026270;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026280;
  v19 = xmmword_1B0026290;
  v16 = xmmword_1B00262A0;
  v17 = xmmword_1B0026290;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v8 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002D240;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B002D250;
  v75 = xmmword_1B0027420;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026300;
  v63 = xmmword_1B0026310;
  v60 = (int64x2_t)xmmword_1B0026320;
  v61 = xmmword_1B0026330;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026340;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026350;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v77 = xmmword_1B0025F70;
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v77 = xmmword_1B0025F70;
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B0026440;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = v9;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v79 = xmmword_1B0026470;
  v76 = xmmword_1B0026480;
  v77 = xmmword_1B0026490;
  v74 = xmmword_1B00264A0;
  v75 = xmmword_1B00264B0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B00264C0;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v61 = xmmword_1B00264D0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00264E0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026500;
  v79 = xmmword_1B0026510;
  v76 = xmmword_1B0026520;
  v77 = xmmword_1B0026530;
  v74 = xmmword_1B0026540;
  v75 = xmmword_1B0026550;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026560;
  v67 = v9;
  v64 = xmmword_1B0026570;
  v65 = xmmword_1B0026580;
  v62 = xmmword_1B0026590;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v61 = xmmword_1B00265A0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B00265B0;
  v19 = xmmword_1B00265C0;
  v16 = xmmword_1B00265D0;
  v17 = xmmword_1B00265E0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026600;
  v79 = xmmword_1B0026610;
  v76 = xmmword_1B0026620;
  v77 = xmmword_1B0026630;
  v74 = xmmword_1B0026640;
  v75 = xmmword_1B0026650;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026220;
  v67 = v9;
  v64 = xmmword_1B0026660;
  v65 = xmmword_1B0026670;
  v62 = xmmword_1B0026170;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v61 = xmmword_1B0026680;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026690;
  v19 = xmmword_1B00266A0;
  v16 = xmmword_1B00266B0;
  v17 = xmmword_1B00266C0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00266E0;
  v79 = xmmword_1B00266F0;
  v76 = xmmword_1B0026700;
  v77 = xmmword_1B0026710;
  v74 = xmmword_1B0026720;
  v75 = xmmword_1B0026730;
  v72 = xmmword_1B0026060;
  v73 = xmmword_1B0026040;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v61 = xmmword_1B0026740;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026750;
  v19 = xmmword_1B0026760;
  v16 = xmmword_1B0026770;
  v17 = xmmword_1B0026780;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.8, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    665496235,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026790;
  v79 = v9;
  v76 = xmmword_1B00267A0;
  v77 = xmmword_1B00267B0;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B00267C0;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B00267D0;
  v67 = xmmword_1B00267E0;
  v64 = xmmword_1B00267F0;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025F90;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026800;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026810;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0027940;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  __asm { FMOV            V0.2D, #0.25 }
  v18 = _Q0;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026820;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026830;
  v17 = xmmword_1B0026840;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  return v0;
}

uint64_t sub_1AFE2FCB4()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int64x2_t v82;
  __int128 v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v11 = vdupq_n_s64(0x3FD7575760000000uLL);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  __asm { FMOV            V1.2D, #1.0 }
  v74 = _Q1;
  v75 = xmmword_1B0025E50;
  v72 = _Q1;
  v73 = _Q1;
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = _Q1;
  v64 = (int64x2_t)_Q1;
  v65 = xmmword_1B0025E90;
  v62 = _Q1;
  v63 = _Q1;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v13 = _Q1;
  v10 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = _Q1;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 32, -90.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B00268C0;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B00268D0;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 1248, -60.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v80 = xmmword_1B0034B10;
  v81 = xmmword_1B0034B20;
  v78 = xmmword_1B0025F40;
  v79 = v13;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026920;
  v19 = v13;
  v16 = xmmword_1B0027950;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026950;
  v15 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 2464, -12.0, (__n128)xmmword_1B002D260, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025FE0;
  v83 = v13;
  v80 = xmmword_1B0025FF0;
  v81 = xmmword_1B0026000;
  v78 = xmmword_1B0026010;
  v79 = xmmword_1B0026020;
  v76 = xmmword_1B0026030;
  v77 = xmmword_1B0026040;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)xmmword_1B0026060;
  v65 = xmmword_1B0026070;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026080;
  v23 = xmmword_1B0026090;
  v20 = xmmword_1B00260A0;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027960;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1106247680,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00260C0;
  v83 = xmmword_1B00260D0;
  v80 = xmmword_1B00260E0;
  v81 = xmmword_1B00260F0;
  v78 = xmmword_1B0026100;
  v79 = xmmword_1B0026110;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026150;
  v69 = xmmword_1B0026160;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026180;
  v23 = xmmword_1B0026190;
  v20 = xmmword_1B00261A0;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027970;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B00269D0;
  v15 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00261C0;
  v83 = xmmword_1B00261D0;
  v80 = xmmword_1B00261E0;
  v81 = xmmword_1B00261F0;
  v78 = xmmword_1B0026200;
  v79 = xmmword_1B0026210;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026240;
  v67 = xmmword_1B0026250;
  v64 = (int64x2_t)xmmword_1B0026260;
  v65 = xmmword_1B0026270;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026280;
  v23 = xmmword_1B0026290;
  v20 = xmmword_1B00262A0;
  v21 = xmmword_1B0026290;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027980;
  v17 = xmmword_1B00267B0;
  v14 = xmmword_1B0026A10;
  v15 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v12 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00262D0;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00262E0;
  v79 = xmmword_1B00262F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026300;
  v67 = xmmword_1B0026310;
  v64 = (int64x2_t)xmmword_1B0026320;
  v65 = xmmword_1B0026330;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026340;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026350;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A30;
  v17 = xmmword_1B0026A40;
  v14 = xmmword_1B0026A50;
  v15 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A70;
  v17 = xmmword_1B0026A80;
  v14 = xmmword_1B0026A90;
  v15 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v16 = _Q0;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AC0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AE0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B003BF10;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = v13;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AF0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v83 = xmmword_1B0026470;
  v80 = xmmword_1B0026480;
  v81 = xmmword_1B0026490;
  v78 = xmmword_1B00264A0;
  v79 = xmmword_1B00264B0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B00264C0;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v65 = xmmword_1B00264D0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00264E0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027990;
  v17 = xmmword_1B0026C70;
  v14 = xmmword_1B0026B20;
  v15 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026500;
  v83 = xmmword_1B0026510;
  v80 = xmmword_1B0026520;
  v81 = xmmword_1B0026530;
  v78 = xmmword_1B0026540;
  v79 = xmmword_1B0026550;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026560;
  v71 = v13;
  v68 = xmmword_1B0026570;
  v69 = xmmword_1B0026580;
  v66 = xmmword_1B0026590;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v65 = xmmword_1B00265A0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B00265B0;
  v23 = xmmword_1B00265C0;
  v20 = xmmword_1B00265D0;
  v21 = xmmword_1B00265E0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B00279A0;
  v17 = xmmword_1B0026C20;
  v14 = xmmword_1B0026B60;
  v15 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026600;
  v83 = xmmword_1B0026610;
  v80 = xmmword_1B0026620;
  v81 = xmmword_1B0026630;
  v78 = xmmword_1B0026640;
  v79 = xmmword_1B0026650;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026220;
  v71 = v13;
  v68 = xmmword_1B0026660;
  v69 = xmmword_1B0026670;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v65 = xmmword_1B0026680;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026690;
  v23 = xmmword_1B00266A0;
  v20 = xmmword_1B00266B0;
  v21 = xmmword_1B00266C0;
  v18 = xmmword_1B0026B80;
  v19 = xmmword_1B0026B90;
  v16 = xmmword_1B00279B0;
  v17 = xmmword_1B00279C0;
  v14 = xmmword_1B0026BC0;
  v15 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026BD0;
  v83 = v13;
  v80 = xmmword_1B0026700;
  v81 = xmmword_1B0026710;
  v78 = xmmword_1B0026720;
  v79 = xmmword_1B0026730;
  v76 = xmmword_1B0026060;
  v77 = xmmword_1B0026040;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v65 = xmmword_1B0026740;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026750;
  v23 = xmmword_1B0026760;
  v20 = xmmword_1B0026770;
  v21 = xmmword_1B0026780;
  v18 = xmmword_1B0026BE0;
  v19 = xmmword_1B0026BF0;
  v16 = xmmword_1B00279D0;
  v17 = xmmword_1B00279E0;
  v14 = xmmword_1B0026C10;
  v15 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    665496235,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v79 = v13;
  v80 = xmmword_1B0034B10;
  v81 = xmmword_1B0034B20;
  v78 = xmmword_1B0025F40;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026C30;
  v19 = v13;
  v16 = xmmword_1B00279F0;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026C60;
  v15 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 18272, -12.0, (__n128)xmmword_1B002D260, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026C80;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026C90;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 19488, -60.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 20704, -90.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  return v0;
}

uint64_t SunriseSunsetModel.currentWeather.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1B0005D1C();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t SunriseSunsetModel.dailyForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_10_99();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t static SunriseSunsetModel.== infix(_:_:)()
{
  if ((sub_1B0005CE0() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_10_99();
  sub_1B0005BFC();
  OUTLINED_FUNCTION_6_106((uint64_t *)&qword_1ED1F2350);
  OUTLINED_FUNCTION_6_106((uint64_t *)&qword_1ED1F2340);
  OUTLINED_FUNCTION_6_106((uint64_t *)&qword_1ED1F2348);
  return sub_1B0006490();
}

uint64_t sub_1AFE332F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F46796C696164 && a2 == 0xED00007473616365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B0008FB0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AFE3342C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F46796C696164;
  else
    return 0x57746E6572727563;
}

uint64_t sub_1AFE3347C()
{
  char *v0;

  return sub_1AFE3342C(*v0);
}

uint64_t sub_1AFE33484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFE332F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE334A8()
{
  sub_1AFE33658();
  return sub_1B0009118();
}

uint64_t sub_1AFE334D0()
{
  sub_1AFE33658();
  return sub_1B0009124();
}

uint64_t SunriseSunsetModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74E28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE33658();
  sub_1B0009058();
  sub_1B0005D1C();
  sub_1AFB4BCF0(&qword_1EEE74E38, (void (*)(uint64_t))MEMORY[0x1E0CEE728]);
  OUTLINED_FUNCTION_9_102();
  if (!v1)
  {
    type metadata accessor for SunriseSunsetModel();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
    sub_1AFE3391C(&qword_1EEE74E40);
    OUTLINED_FUNCTION_9_102();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1AFE33658()
{
  unint64_t result;

  result = qword_1EEE74E30;
  if (!qword_1EEE74E30)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C098, &type metadata for SunriseSunsetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E30);
  }
  return result;
}

uint64_t SunriseSunsetModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v20 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  v19 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_33();
  v22 = v4;
  v25 = sub_1B0005D1C();
  v21 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_33();
  v24 = v5;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74E48);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_14();
  v7 = type metadata accessor for SunriseSunsetModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE33658();
  sub_1B000904C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v7;
  v17 = a1;
  v18 = v6;
  v11 = v21;
  v10 = v22;
  v12 = v23;
  v28 = 0;
  sub_1AFB4BCF0(&qword_1EEE74E50, (void (*)(uint64_t))MEMORY[0x1E0CEE728]);
  v13 = v24;
  OUTLINED_FUNCTION_9_100();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v9, v13, v25);
  v27 = 1;
  sub_1AFE3391C(&qword_1EEE74E58);
  OUTLINED_FUNCTION_9_100();
  OUTLINED_FUNCTION_0_132();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v9[*(int *)(v16 + 20)], v10, v12);
  sub_1AFE33958((uint64_t)v9, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_1AFE3399C((uint64_t)v9);
}

uint64_t sub_1AFE3391C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F41D8);
    OUTLINED_FUNCTION_15_0();
  }
  return result;
}

uint64_t sub_1AFE33958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SunriseSunsetModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE3399C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SunriseSunsetModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFE339D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SunriseSunsetModel.init(from:)(a1, a2);
}

uint64_t sub_1AFE339EC(_QWORD *a1)
{
  return SunriseSunsetModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SunriseSunsetModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B0005D1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t assignWithCopy for SunriseSunsetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B0005D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SunriseSunsetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B0005D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SunriseSunsetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1B0005D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SunriseSunsetModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE33C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_3_112();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for SunriseSunsetModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE33CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_3_112();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t storeEnumTagSinglePayload for SunriseSunsetModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFE33D5C + 4 * byte_1B003BF25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFE33D90 + 4 * byte_1B003BF20[v4]))();
}

uint64_t sub_1AFE33D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE33D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE33DA0);
  return result;
}

uint64_t sub_1AFE33DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE33DB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFE33DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE33DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetModel.CodingKeys()
{
  return &type metadata for SunriseSunsetModel.CodingKeys;
}

unint64_t sub_1AFE33DE0()
{
  unint64_t result;

  result = qword_1EEE74E60;
  if (!qword_1EEE74E60)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C070, &type metadata for SunriseSunsetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E60);
  }
  return result;
}

unint64_t sub_1AFE33E20()
{
  unint64_t result;

  result = qword_1EEE74E68;
  if (!qword_1EEE74E68)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003BFE0, &type metadata for SunriseSunsetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E68);
  }
  return result;
}

unint64_t sub_1AFE33E60()
{
  unint64_t result;

  result = qword_1EEE74E70;
  if (!qword_1EEE74E70)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C008, &type metadata for SunriseSunsetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74E70);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PlatterViewLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1B0005B84();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PlatterViewLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlatterViewLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B0005B84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PlatterViewLocation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PlatterViewLocation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for PlatterViewLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterViewLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE34244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B0005B84();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlatterViewLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE342C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1B0005B84();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PlatterViewLocation()
{
  uint64_t result;

  result = qword_1EEE74ED0;
  if (!qword_1EEE74ED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE34368()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005B84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AFE343EC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEE70248 != -1)
    swift_once();
  v6 = qword_1EEE92290;
  v5 = *(_QWORD *)algn_1EEE92298;
  v8 = qword_1EEE922A0;
  v7 = unk_1EEE922A8;
  v16 = 0;
  v9 = qword_1EEE70240;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = qword_1EEE92288;
  swift_retain();
  sub_1B0007BD0();
  v11 = *MEMORY[0x1E0CDD550];
  v12 = sub_1B0007B88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v4, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v12);
  v13 = sub_1B0007BDC();
  sub_1AFAEA66C((uint64_t)v4);
  v14 = v16;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 40) = xmmword_1B0035E80;
  *(_OWORD *)(a1 + 56) = xmmword_1B0035E90;
  *(_QWORD *)(a1 + 72) = 0x4008000000000000;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v13;
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFE34578(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v19 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEE70240 != -1)
    swift_once();
  v14 = qword_1EEE92288;
  swift_retain();
  sub_1B0007BD0();
  v15 = *MEMORY[0x1E0CDD550];
  v16 = sub_1B0007B88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v13, v15, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v16);
  v17 = sub_1B0007BDC();
  sub_1AFAEA66C((uint64_t)v13);
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = v19 & 1;
  *(_OWORD *)(a6 + 40) = xmmword_1B0035E80;
  *(_OWORD *)(a6 + 56) = xmmword_1B0035E90;
  *(_QWORD *)(a6 + 72) = 0x4008000000000000;
  *(_QWORD *)(a6 + 80) = v14;
  *(_QWORD *)(a6 + 88) = v17;
  OUTLINED_FUNCTION_2_3();
}

__n128 sub_1AFE346D0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __n128 result;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  v19 = sub_1B0007828();
  sub_1AFE347D0(v1, (uint64_t)v20);
  v3 = v20[0];
  v4 = v20[1];
  v5 = v21;
  v6 = v22;
  v7 = v23;
  v8 = v24;
  v9 = v25;
  v10 = v26;
  v11 = v27;
  v12 = v29;
  v16 = v30;
  v17 = v28;
  v18 = *(__n128 *)(v1 + 56);
  v13 = *(_QWORD *)(v1 + 72);
  v14 = sub_1B0007AD4();
  v31 = 0;
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v17;
  *(_BYTE *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v16;
  *(_BYTE *)(a1 + 120) = v14;
  *(_QWORD *)(a1 + 128) = 0;
  result = v18;
  *(__n128 *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 152) = v13;
  *(_BYTE *)(a1 + 160) = v31;
  return result;
}

uint64_t sub_1AFE347D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_BYTE *)(a1 + 32);
  if ((v3 & 1) != 0 && qword_1ED1F1018 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v4 = sub_1B0007D08();
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = v8 & 1;
  v10 = sub_1B0007CCC();
  v31 = v11;
  v32 = v10;
  v13 = v12;
  v33 = v14;
  sub_1AFAED640(v4, v6, v9);
  swift_bridgeObjectRelease();
  if (qword_1EEE70238 != -1)
    swift_once();
  v15 = *(double *)&qword_1EEE74F10;
  if ((v3 & 1) != 0 && qword_1ED1F1018 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v16 = v13 & 1;
  v17 = sub_1B0007D08();
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = v21 & 1;
  v23 = sub_1B0007CCC();
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_1AFAED640(v17, v19, v22);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v31;
  *(_BYTE *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = 0;
  *(double *)(a2 + 40) = -v15;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  *(_QWORD *)(a2 + 64) = v23;
  *(_QWORD *)(a2 + 72) = v25;
  *(_BYTE *)(a2 + 80) = v29;
  *(_QWORD *)(a2 + 88) = v27;
  sub_1AFBB755C(v32, v31, v16);
  swift_bridgeObjectRetain();
  sub_1AFBB755C(v23, v25, v29);
  swift_bridgeObjectRetain();
  sub_1AFAED640(v23, v25, v29);
  swift_bridgeObjectRelease();
  sub_1AFAED640(v32, v31, v16);
  return swift_bridgeObjectRelease();
}

double sub_1AFE34A70()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 9.0, *MEMORY[0x1E0DC1448]);
  objc_msgSend(v0, sel_ascender);
  v2 = v1;
  objc_msgSend(v0, sel_capHeight);
  v4 = v3;

  result = v2 - v4;
  *(double *)&qword_1EEE74F10 = v2 - v4;
  return result;
}

uint64_t sub_1AFE34AF8()
{
  uint64_t v0;
  uint64_t result;

  sub_1B0007FF0();
  v0 = sub_1B0008014();
  result = swift_release();
  qword_1EEE92288 = v0;
  return result;
}

double sub_1AFE34B38@<D0>(uint64_t a1@<X8>)
{
  const void *v1;
  double result;
  _BYTE v4[96];

  memcpy(v4, v1, sizeof(v4));
  *(_QWORD *)&result = sub_1AFE346D0(a1).n128_u64[0];
  return result;
}

void sub_1AFE34B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AFE34B9C();
  qword_1EEE92290 = v0;
  *(_QWORD *)algn_1EEE92298 = v1;
  qword_1EEE922A0 = v2;
  unk_1EEE922A8 = v3;
}

void sub_1AFE34B9C()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v0, sel_setMinimumIntegerDigits_, 1);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 0);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
  v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    sub_1B0008584();

    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 11);
    v4 = objc_msgSend(v0, sel_stringFromNumber_, v3);

    if (v4)
    {
      sub_1B0008584();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void type metadata accessor for UltravioletDailyRangeView()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1AFE34CE0()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for UltravioletDailyRangeView.Style()
{
  OUTLINED_FUNCTION_27_0();
}

void type metadata accessor for UltravioletDailyRangeView.Layout()
{
  OUTLINED_FUNCTION_27_0();
}

void type metadata accessor for UltravioletDailyRange()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1AFE34D14()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 0;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 10;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE35550();
  sub_1AFE35550();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x42B4000044BB8000;
  DWORD2(v16) = 1119748096;
  *(_QWORD *)&v16 = 0x4396000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E8000003E19999ALL;
  *(_QWORD *)&v12 = 0x4461000042480000;
  LODWORD(v10) = 0;
  DWORD2(v9) = 0;
  *(_QWORD *)&v9 = 0x4220000040B00000;
  LODWORD(v8) = 1148152459;
  LODWORD(v6) = 1120403456;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42A0000040400000, v6, 0x3EB851EB3E428F5CLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4234000000000000,
    v8,
    0x3E3851EC3E0F5C29,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    0,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    0,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1134231552,
    0x3E99999A3E428F5CLL,
    v15,
    1065353216,
    0x3F36DB443F800000,
    xmmword_1B0026E40,
    v16,
    1041865114,
    1045220557,
    v17,
    1065353216,
    1065353216,
    0x3D88D9C93F800000,
    xmmword_1B00285F0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    0,
    xmmword_1B00285E0,
    0x4100000040A00000);
}

uint64_t sub_1AFE35550()
{
  uint64_t v0;
  __n128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  double v16;
  __n128 v17;
  float v18;
  double v19;
  __n128 v20;
  double v21;
  __n128 v22;
  double v23;
  __n128 v24;
  double v25;
  double v26;
  __n128 v27;
  __n128 v28;
  double v29;
  __n128 v30;
  __int128 v31;
  __n128 v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  float v44;
  double v45;
  __n128 v46;
  double v47;
  __n128 v48;
  __n128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  double v60;
  __n128 v61;
  float v62;
  float v63;
  float v64;
  __int128 v65;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  double v75;
  __n128 v76;
  float v77;
  float v78;
  float v79;
  float v80;
  float v81;
  float v82;
  double v83;
  __n128 v84;
  __n128 v85;
  double v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  double v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  __n128 v99;
  float v100;
  float v101;
  float v102;
  float v103;
  float v104;
  float v105;
  double v106;
  __n128 v107;
  __n128 v108;
  double v109;
  __n128 v110;
  double v111;
  __n128 v112;
  double v113;
  __n128 v114;
  __n128 v115;
  double v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  uint64_t v124;
  __n128 v125;
  float v126;
  float v127;
  float v128;
  float v129;
  float v130;
  float v131;
  double v132;
  double v133;
  double v134;
  __n128 v135;
  __n128 v136;
  double v137;
  double v138;
  double v139;
  __n128 v140;
  __n128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  uint64_t v152;
  double v153;
  __n128 v154;
  float v155;
  float v156;
  float v157;
  float v158;
  float v159;
  float v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  uint64_t v168;
  double v169;
  float v170;
  float v171;
  double v172;
  double v173;
  double v174;
  __n128 v175;
  double v176;
  double v177;
  __n128 v178;
  double v179;
  __n128 v180;
  __int128 v181;
  __n128 v182;
  __n128 v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  uint64_t v192;
  double v193;
  double v194;
  double v195;
  __n128 v196;
  __n128 v197;
  double v198;
  double v199;
  __n128 v200;
  __n128 v201;
  double v202;
  __n128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  uint64_t v214;
  _OWORD *v216;
  _OWORD *v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  int v221;
  _OWORD *v222;
  _OWORD *v223;
  int v224;
  int v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  int v324;
  int v325;
  int v326;
  int v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  __int128 v342;
  __n128 v343;
  __n128 v344;
  __n128 v345;
  __n128 v346;
  __n128 v347;
  __n128 v348;
  __n128 v349;
  __n128 v350;
  __int128 v351;
  __n128 v352;
  __int128 v353;
  __n128 v354;
  __int128 v355;
  __n128 v356;
  __int128 v357;
  __n128 v358;
  __int128 v359;
  __n128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __n128 v364;
  __int128 v365;
  __n128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __n128 v370;
  __int128 v371;
  __n128 v372;
  __int128 v373;
  __n128 v374;
  __int128 v375;
  __n128 v376;
  __int128 v377;
  __n128 v378;
  __n128 v379;
  __n128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __n128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __n128 v404;
  __n128 v405;
  __n128 v406;
  __n128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v412 = xmmword_1B0028630;
  v413 = xmmword_1B0028640;
  v410 = xmmword_1B0028650;
  v411 = xmmword_1B0028660;
  v408 = xmmword_1B0028670;
  v409 = xmmword_1B0028680;
  __asm { FMOV            V2.2D, #1.0 }
  v343 = _Q2;
  OUTLINED_FUNCTION_10_100(0.529411793, 0.690196097, _Q2);
  OUTLINED_FUNCTION_34_6((__n128)xmmword_1B0028690, (__n128)xmmword_1B00271F0);
  v400 = xmmword_1B00286A0;
  v401 = (__int128)v6;
  v398 = xmmword_1B00286C0;
  v399 = xmmword_1B00286D0;
  v396 = xmmword_1B00286E0;
  v397 = xmmword_1B00286F0;
  v394 = (__int128)v6;
  v395 = (__int128)v6;
  v393 = 0u;
  v392 = 0u;
  v390 = v6;
  v391 = xmmword_1B0027030;
  v388 = xmmword_1B0028700;
  v389 = xmmword_1B0028710;
  v386 = xmmword_1B0028720;
  v387 = xmmword_1B0028730;
  v384 = xmmword_1B0028740;
  v385 = xmmword_1B0028750;
  v382 = xmmword_1B0028760;
  v383 = xmmword_1B0028770;
  v380 = v6;
  v381 = xmmword_1B0025E90;
  v378 = v6;
  v379 = v6;
  v376 = v6;
  v377 = xmmword_1B0025E90;
  v374 = v6;
  v375 = xmmword_1B00278C0;
  v372 = v6;
  v373 = xmmword_1B0027740;
  v370 = v6;
  v371 = xmmword_1B0028780;
  v368 = v6;
  v369 = v6;
  v366 = v6;
  v367 = v6;
  v364 = v6;
  v365 = xmmword_1B0028790;
  v362 = (__int128)v6;
  v363 = xmmword_1B00287A0;
  v360 = v6;
  v361 = xmmword_1B0025E90;
  v358 = v6;
  v359 = xmmword_1B00287B0;
  v356 = v6;
  v357 = xmmword_1B0026400;
  v354 = v6;
  v355 = xmmword_1B00287C0;
  v352 = v6;
  v353 = xmmword_1B0025E50;
  v350 = v6;
  v351 = xmmword_1B0027030;
  OUTLINED_FUNCTION_19_69(1.0, 1.0, v6);
  v334 = v7;
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_18_5(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, 35.0, 0.1, 0.4, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v394,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    &v346,
    v334);
  v412 = xmmword_1B00276A0;
  v413 = xmmword_1B00276B0;
  v410 = xmmword_1B00287E0;
  v411 = xmmword_1B0028660;
  v408 = xmmword_1B00287F0;
  v409 = xmmword_1B0028050;
  OUTLINED_FUNCTION_10_100(0.529156804, 0.689382493, v343);
  OUTLINED_FUNCTION_34_6((__n128)xmmword_1B0028800, (__n128)xmmword_1B0028810);
  v400 = xmmword_1B0028820;
  OUTLINED_FUNCTION_15_90(0.623529553, v19, v20);
  v396 = xmmword_1B0028850;
  OUTLINED_FUNCTION_13_98(0.454901934, v21, v22);
  v388 = xmmword_1B0028860;
  v389 = xmmword_1B0028710;
  v386 = xmmword_1B0028870;
  v387 = xmmword_1B0028730;
  v384 = xmmword_1B0028880;
  *(_QWORD *)&v25 = OUTLINED_FUNCTION_4_111(0.200000018, v23, v24).n128_u64[0];
  OUTLINED_FUNCTION_21_63(v25, v26, v27);
  v370 = v28;
  OUTLINED_FUNCTION_18_74((__n128)xmmword_1B0028890, v29, v28);
  v362 = xmmword_1B00288A0;
  v363 = xmmword_1B00288B0;
  v360 = v30;
  v361 = v31;
  OUTLINED_FUNCTION_5_110(0.725490332, 1.0, v30, v32);
  v328 = v33;
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_18_5(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, 35.0, 0.1, 0.4, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v394,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    v328,
    v335);
  v412 = xmmword_1B00288D0;
  v413 = xmmword_1B00288E0;
  v410 = xmmword_1B00288F0;
  v411 = xmmword_1B0028900;
  v408 = xmmword_1B00276E0;
  v409 = xmmword_1B0026110;
  OUTLINED_FUNCTION_27_61(0.278431386, 0.403921604, v45, v343);
  OUTLINED_FUNCTION_34_6((__n128)xmmword_1B0028910, (__n128)xmmword_1B0028920);
  v400 = xmmword_1B0028930;
  v401 = xmmword_1B0028940;
  v398 = xmmword_1B0028950;
  v399 = xmmword_1B0028960;
  v396 = xmmword_1B0028970;
  v397 = xmmword_1B0028980;
  v394 = (__int128)v46;
  v395 = (__int128)v46;
  OUTLINED_FUNCTION_28_56(0.835294127, 1.0, v47, v46);
  v391 = xmmword_1B0027030;
  v388 = xmmword_1B0028990;
  v389 = xmmword_1B00289A0;
  v386 = xmmword_1B00289B0;
  v387 = xmmword_1B00289C0;
  v384 = xmmword_1B00289D0;
  v385 = xmmword_1B00289E0;
  v382 = xmmword_1B00289B0;
  v383 = xmmword_1B00289F0;
  v380 = v48;
  v381 = xmmword_1B0025E90;
  v378 = v48;
  v379 = v48;
  v376 = v48;
  v377 = xmmword_1B0025E90;
  v374 = v48;
  v375 = xmmword_1B00278C0;
  v372 = v48;
  v373 = xmmword_1B00278C0;
  v370 = v48;
  v371 = xmmword_1B0028A00;
  OUTLINED_FUNCTION_25_59(1.0, 0.600000024, 1.0, v48);
  v365 = xmmword_1B0028790;
  v362 = xmmword_1B0028A10;
  v363 = xmmword_1B0028A20;
  v360 = v49;
  v361 = v50;
  v358 = v49;
  v359 = xmmword_1B00287B0;
  v356 = v49;
  v357 = xmmword_1B0026400;
  v354 = v49;
  v355 = xmmword_1B00287C0;
  v352 = v49;
  v353 = xmmword_1B0025E50;
  v350 = v49;
  v351 = v51;
  v348 = v49;
  v349 = v49;
  v346 = v49;
  v347 = v49;
  v344 = v49;
  v345 = v49;
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_18_5(v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, 0.4, v64, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v394,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    &v346,
    (uint64_t)&v344);
  OUTLINED_FUNCTION_20_71();
  v410 = xmmword_1B0028A40;
  v411 = xmmword_1B0028A50;
  OUTLINED_FUNCTION_9_103();
  v406 = v343;
  v407 = v343;
  v404 = v343;
  v405 = v343;
  OUTLINED_FUNCTION_34_6((__n128)xmmword_1B0028A60, (__n128)xmmword_1B0028A70);
  v400 = xmmword_1B0028A80;
  v401 = v65;
  v398 = xmmword_1B0028A90;
  v399 = xmmword_1B0028AA0;
  v396 = xmmword_1B0028AB0;
  v397 = xmmword_1B0025F70;
  v394 = xmmword_1B0026320;
  v395 = xmmword_1B0026330;
  v393 = 0u;
  v392 = 0u;
  v390 = (__n128)v65;
  v391 = xmmword_1B0027030;
  __asm { FMOV            V1.2D, #0.75 }
  v342 = _Q1;
  v388 = _Q1;
  v389 = xmmword_1B0028AC0;
  v386 = _Q1;
  v387 = xmmword_1B0028AD0;
  v384 = _Q1;
  v385 = xmmword_1B0028AE0;
  v382 = _Q1;
  v383 = xmmword_1B0028AF0;
  v380 = (__n128)v65;
  v381 = xmmword_1B0025E90;
  v378 = (__n128)v65;
  v379 = (__n128)v65;
  v376 = (__n128)v65;
  v377 = xmmword_1B0027740;
  v374 = (__n128)v65;
  v375 = xmmword_1B0025E50;
  v372 = (__n128)v65;
  v373 = xmmword_1B0028B00;
  v370 = (__n128)v65;
  v371 = xmmword_1B0027730;
  v368 = (__n128)v65;
  v369 = (__n128)v65;
  v366 = (__n128)v65;
  v367 = (__n128)v65;
  v364 = (__n128)v65;
  v365 = xmmword_1B0028790;
  v362 = v65;
  v363 = xmmword_1B0028B10;
  v360 = (__n128)v65;
  v361 = xmmword_1B0025E90;
  v358 = (__n128)v65;
  v359 = xmmword_1B00287B0;
  v356 = (__n128)v65;
  v357 = xmmword_1B0028260;
  v354 = (__n128)v65;
  v355 = xmmword_1B00287C0;
  v352 = (__n128)v65;
  v353 = xmmword_1B0025E50;
  v350 = (__n128)v65;
  v351 = xmmword_1B0027030;
  v348 = (__n128)v65;
  v349 = (__n128)v65;
  v346 = (__n128)v65;
  v347 = (__n128)v65;
  v344 = (__n128)v65;
  v345 = (__n128)v65;
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_22_63();
  OUTLINED_FUNCTION_29_64();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, &v398, &v396,
    0x3F6666663F666666,
    0,
    &v394,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    v242,
    v246,
    v250,
    v254,
    v258,
    v262,
    v266,
    v270,
    v276,
    v282,
    v288,
    v294,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    &v346,
    (uint64_t)&v344);
  v412 = xmmword_1B00276A0;
  v413 = xmmword_1B00276B0;
  v410 = xmmword_1B0028A40;
  v411 = xmmword_1B0028A50;
  *(_QWORD *)&v83 = OUTLINED_FUNCTION_9_103().n128_u64[0];
  OUTLINED_FUNCTION_2_119(v83, v343);
  v388 = v342;
  v389 = xmmword_1B0028AC0;
  v386 = v342;
  v387 = xmmword_1B0028AD0;
  v384 = v342;
  v385 = xmmword_1B0028AE0;
  v382 = v342;
  OUTLINED_FUNCTION_12_98(0.75, v84);
  v374 = v85;
  v375 = xmmword_1B0028B20;
  OUTLINED_FUNCTION_6_107(1.0, v85, v86, v87);
  v356 = v88;
  v357 = xmmword_1B0026120;
  OUTLINED_FUNCTION_7_100(1.0, v88, v89);
  OUTLINED_FUNCTION_3_4();
  v90 = OUTLINED_FUNCTION_11_92();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v91, v92, v93, v94, v95, v96, v97, v98, v90, v99, v100, v101, v102, v103, v104, v105, &v398, &v396,
    0x3F6666663F666666,
    0,
    &v394,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    v243,
    v247,
    v251,
    v255,
    v259,
    v263,
    v267,
    v271,
    v277,
    v283,
    v289,
    v295,
    &v346,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    v329,
    v336);
  v375 = xmmword_1B0028B20;
  v357 = xmmword_1B0026120;
  v374 = v343;
  v356 = v343;
  v412 = xmmword_1B00276A0;
  v413 = xmmword_1B00276B0;
  v410 = xmmword_1B0028A40;
  v411 = xmmword_1B0028A50;
  *(_QWORD *)&v106 = OUTLINED_FUNCTION_9_103().n128_u64[0];
  OUTLINED_FUNCTION_2_119(v106, v107);
  v388 = v342;
  v389 = xmmword_1B0028AC0;
  v386 = v342;
  v387 = xmmword_1B0028AD0;
  v384 = v342;
  v385 = xmmword_1B0028AE0;
  v382 = v342;
  *(_QWORD *)&v109 = OUTLINED_FUNCTION_12_98(*(double *)&v342, v108).n128_u64[0];
  *(_QWORD *)&v113 = OUTLINED_FUNCTION_6_107(v109, v110, v111, v112).n128_u64[0];
  OUTLINED_FUNCTION_7_100(v113, v114, v115);
  OUTLINED_FUNCTION_14_97();
  OUTLINED_FUNCTION_24_63();
  OUTLINED_FUNCTION_26_11();
  v116 = OUTLINED_FUNCTION_11_92();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v117, v118, v119, v120, v121, v122, v123, v124, v116, v125, v126, v127, v128, v129, v130, v131, &v398, v216,
    v218,
    v220,
    v222,
    v224,
    v226,
    v230,
    v234,
    v238,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v346,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    1112014848,
    1097859072,
    v330,
    v337);
  v410 = xmmword_1B0028A40;
  v411 = xmmword_1B0028A50;
  v402 = xmmword_1B0028A60;
  v403 = xmmword_1B0028A70;
  v400 = xmmword_1B0028A80;
  v398 = xmmword_1B0028A90;
  v399 = xmmword_1B0028AA0;
  v396 = xmmword_1B0028AB0;
  v397 = xmmword_1B0025F70;
  v394 = xmmword_1B0026320;
  v395 = xmmword_1B0026330;
  v389 = xmmword_1B0028AC0;
  v387 = xmmword_1B0028AD0;
  v385 = xmmword_1B0028AE0;
  v388 = v342;
  v386 = v342;
  v384 = v342;
  v382 = v342;
  v383 = xmmword_1B0028AF0;
  v373 = xmmword_1B0028B00;
  v371 = xmmword_1B0027730;
  v363 = xmmword_1B0028B10;
  v357 = xmmword_1B0028260;
  v372 = v343;
  v370 = v343;
  v362 = (__int128)v343;
  v356 = v343;
  OUTLINED_FUNCTION_20_71();
  *(_QWORD *)&v132 = OUTLINED_FUNCTION_9_103().n128_u64[0];
  OUTLINED_FUNCTION_27_61(v132, v133, v134, v135);
  v401 = (__int128)v136;
  OUTLINED_FUNCTION_28_56(v137, v138, v139, v136);
  v391 = xmmword_1B0027030;
  v380 = v140;
  v381 = xmmword_1B0025E90;
  v378 = v140;
  v379 = v140;
  v376 = v140;
  v377 = xmmword_1B0027740;
  v374 = v140;
  v375 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_25_59(1.0, 1.0, 1.0, v140);
  v365 = xmmword_1B0028790;
  v360 = v141;
  v361 = v142;
  v358 = v141;
  v359 = xmmword_1B00287B0;
  v354 = v141;
  v355 = xmmword_1B00287C0;
  v352 = v141;
  v353 = v143;
  v350 = v141;
  v351 = v144;
  v348 = v141;
  v349 = v141;
  v346 = v141;
  v347 = v141;
  v344 = v141;
  v345 = v141;
  OUTLINED_FUNCTION_1_116();
  OUTLINED_FUNCTION_24_63();
  OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_22_63();
  OUTLINED_FUNCTION_29_64();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, &v398, v217,
    v219,
    v221,
    v223,
    0,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    v272,
    v278,
    v284,
    v290,
    v296,
    v300,
    v304,
    v308,
    v312,
    v316,
    v320,
    v322,
    v324,
    v326,
    v331,
    v338);
  v412 = xmmword_1B00288D0;
  v413 = xmmword_1B00288E0;
  v410 = xmmword_1B00288F0;
  v411 = xmmword_1B0028900;
  OUTLINED_FUNCTION_9_103();
  v402 = xmmword_1B0028910;
  v403 = xmmword_1B0028920;
  v400 = xmmword_1B0028930;
  v401 = xmmword_1B0028940;
  v398 = xmmword_1B0028950;
  v399 = xmmword_1B0028960;
  v396 = xmmword_1B0028970;
  v397 = xmmword_1B0028980;
  v388 = xmmword_1B0028990;
  v389 = xmmword_1B00289A0;
  v387 = xmmword_1B00289C0;
  v384 = xmmword_1B00289D0;
  v385 = xmmword_1B00289E0;
  v386 = xmmword_1B00289B0;
  v382 = xmmword_1B00289B0;
  v383 = xmmword_1B00289F0;
  v371 = xmmword_1B0028A00;
  v362 = xmmword_1B0028A10;
  v363 = xmmword_1B0028A20;
  v370 = v343;
  v406 = v343;
  v407 = v343;
  v404 = v343;
  v405 = v343;
  v394 = (__int128)v343;
  v395 = (__int128)v343;
  v393 = 0u;
  v392 = 0u;
  v390 = v343;
  v391 = xmmword_1B0027030;
  v380 = v343;
  v381 = xmmword_1B0025E90;
  v378 = v343;
  v379 = v343;
  v376 = v343;
  v377 = xmmword_1B0025E90;
  v374 = v343;
  v375 = xmmword_1B00278C0;
  v372 = v343;
  v373 = xmmword_1B00278C0;
  v368 = v343;
  v369 = v343;
  v366 = v343;
  v367 = v343;
  v364 = v343;
  v365 = xmmword_1B0028790;
  v360 = v343;
  v361 = xmmword_1B0025E90;
  v358 = v343;
  v359 = xmmword_1B00287B0;
  v356 = v343;
  v357 = xmmword_1B0026400;
  v354 = v343;
  v355 = xmmword_1B00287C0;
  v352 = v343;
  v353 = xmmword_1B0025E50;
  v350 = v343;
  v351 = xmmword_1B0027030;
  v348 = v343;
  v349 = v343;
  v346 = v343;
  v347 = v343;
  v344 = v343;
  v345 = v343;
  OUTLINED_FUNCTION_1_116();
  OUTLINED_FUNCTION_14_97();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_7(v161, v162, v163, v164, v165, v166, v167, v168, v169, (__n128)xmmword_1B0028A30, 400.0, v170, 0.4, v171, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v394,
    v225,
    v227,
    v231,
    v235,
    v239,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    v273,
    v279,
    v285,
    v291,
    v297,
    v301,
    v305,
    v309,
    v313,
    v317,
    v321,
    v323,
    v325,
    v327,
    v332,
    v339);
  OUTLINED_FUNCTION_20_71();
  v408 = xmmword_1B00287F0;
  v409 = xmmword_1B0028050;
  v402 = xmmword_1B0028800;
  v403 = xmmword_1B0028810;
  v400 = xmmword_1B0028820;
  v396 = xmmword_1B0028850;
  v388 = xmmword_1B0028860;
  v386 = xmmword_1B0028870;
  v384 = xmmword_1B0028880;
  v371 = xmmword_1B0028890;
  v362 = xmmword_1B00288A0;
  v363 = xmmword_1B00288B0;
  v410 = xmmword_1B00287E0;
  v370 = v343;
  v411 = xmmword_1B0028660;
  OUTLINED_FUNCTION_10_100(0.505882382, v172, v343);
  *(_QWORD *)&v176 = OUTLINED_FUNCTION_15_90(v173, v174, v175).n128_u64[0];
  OUTLINED_FUNCTION_13_98(v176, v177, v178);
  v389 = xmmword_1B0028710;
  v387 = xmmword_1B0028730;
  v181 = (__int128)OUTLINED_FUNCTION_4_111(0.400000036, v179, v180);
  v374 = v182;
  v375 = xmmword_1B00278C0;
  v372 = v182;
  v373 = xmmword_1B0027740;
  v368 = v182;
  v369 = v182;
  v366 = v182;
  v367 = v182;
  v364 = v182;
  v365 = xmmword_1B0028790;
  v360 = v182;
  v361 = v181;
  OUTLINED_FUNCTION_5_110(*(double *)&v181, 1.0, v182, v183);
  v333 = v184;
  OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_7(v185, v186, v187, v188, v189, v190, v191, v192, v193, (__n128)xmmword_1B00288C0, 200.0, 35.0, 0.1, 0.4, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v394,
    0,
    v228,
    v232,
    v236,
    v240,
    v244,
    v248,
    v252,
    v256,
    v260,
    v264,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v302,
    v306,
    v310,
    v314,
    v318,
    &v350,
    &v348,
    1112014848,
    1097859072,
    v333,
    v340);
  v412 = xmmword_1B0028630;
  v413 = xmmword_1B0028640;
  v410 = xmmword_1B0028650;
  v411 = xmmword_1B0028660;
  v408 = xmmword_1B0028670;
  v409 = xmmword_1B0028680;
  OUTLINED_FUNCTION_10_100(0.690196097, v194, v343);
  v402 = xmmword_1B0028690;
  v403 = xmmword_1B00271F0;
  v400 = xmmword_1B00286A0;
  OUTLINED_FUNCTION_15_90(0.623529434, v195, v196);
  v396 = xmmword_1B00286E0;
  v397 = xmmword_1B00286F0;
  v394 = (__int128)v197;
  v395 = (__int128)v197;
  v393 = 0u;
  v392 = 0u;
  v390 = v197;
  v391 = xmmword_1B0027030;
  v388 = xmmword_1B0028700;
  v389 = xmmword_1B0028710;
  v386 = xmmword_1B0028720;
  v387 = xmmword_1B0028730;
  v384 = xmmword_1B0028740;
  *(_QWORD *)&v198 = OUTLINED_FUNCTION_4_111(0.200000018, 1.0, v197).n128_u64[0];
  OUTLINED_FUNCTION_21_63(v198, v199, v200);
  v370 = v201;
  OUTLINED_FUNCTION_18_74((__n128)xmmword_1B0028780, v202, v201);
  v362 = (__int128)v203;
  v363 = xmmword_1B00287A0;
  v360 = v203;
  v361 = v204;
  v358 = v203;
  v359 = xmmword_1B00287B0;
  v356 = v203;
  v357 = xmmword_1B0026400;
  v354 = v203;
  v355 = xmmword_1B00287C0;
  v352 = v203;
  v353 = xmmword_1B0025E50;
  v350 = v203;
  v351 = v205;
  OUTLINED_FUNCTION_19_69(1.0, *(double *)&v205, v203);
  v341 = v206;
  OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_7(v207, v208, v209, v210, v211, v212, v213, v214, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, 0.4, &v398, &v396, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v394,
    0,
    v229,
    v233,
    v237,
    v241,
    v245,
    v249,
    v253,
    v257,
    v261,
    v265,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v303,
    v307,
    v311,
    v315,
    v319,
    &v350,
    &v348,
    1112014848,
    1097859072,
    &v346,
    v341);
  return v0;
}

uint64_t sub_1AFE36BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  void (*v37)(uint64_t *, _QWORD);
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v43 = a1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  v40 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v39 = (uint64_t)v38 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  v12 = sub_1B0005470();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9();
  v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1680);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v44 = (uint64_t)v38 - v21;
  sub_1B00054E8();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_9();
  v24 = *(_QWORD *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain();
  sub_1B00054DC();
  v42 = a2;
  sub_1B000547C();
  v45 = v24;
  v46 = v23;
  v47 = 32;
  v48 = 0xE100000000000000;
  sub_1AFAF9424();
  v25 = (_QWORD *)sub_1B0008BD8();
  if (!v25[2])
    return swift_bridgeObjectRelease();
  v27 = v25[4];
  v26 = v25[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v42, v12);
  v43 = v27;
  v45 = v27;
  v46 = v26;
  v28 = sub_1B0005A1C();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v28);
  v29 = sub_1AFE374F8();
  v30 = v44;
  v38[1] = v29;
  sub_1B00055B4();
  sub_1AFAF6288(v11, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_4_112();
  sub_1AFAE9540(v30, (uint64_t)v19, &qword_1ED1F1680);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v41) == 1)
  {
    OUTLINED_FUNCTION_3_113(v44);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v19;
  }
  else
  {
    v33 = v39;
    sub_1AFD2CBC0((uint64_t)v19, v39);
    sub_1B00085CC();
    swift_bridgeObjectRelease();
    sub_1B00054DC();
    sub_1B000547C();
    sub_1AFE37538();
    sub_1B0005374();
    OUTLINED_FUNCTION_4_112();
    v34 = v40;
    sub_1AFAE9540(v33, v40, &qword_1ED1F4128);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    v38[-2] = v36;
    swift_getKeyPath();
    LOBYTE(v47) = 1;
    v37 = (void (*)(uint64_t *, _QWORD))sub_1B00054A0();
    sub_1AFE37598();
    sub_1B0005524();
    v37(&v45, 0);
    OUTLINED_FUNCTION_3_113(v34);
    OUTLINED_FUNCTION_3_113(v33);
    v31 = v44;
  }
  return sub_1AFAF6288(v31, &qword_1ED1F1680);
}

uint64_t sub_1AFE36FB8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F20);
  return sub_1B0008530() & 1;
}

uint64_t sub_1AFE37010()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F20);
  return sub_1B00084DC();
}

void sub_1AFE37054()
{
  sub_1AFE37598();
  sub_1B0005554();
  __break(1u);
}

uint64_t static AirQualityViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v24 = *(_QWORD *)(a1 + 88);
  v25 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v22 = *(unsigned __int8 *)(a2 + 96);
  v23 = *(unsigned __int8 *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 104);
  v21 = *(_QWORD *)(a1 + 104);
  if (!v16 && (OUTLINED_FUNCTION_3_5() & 1) == 0)
    return 0;
  v17 = v6 == v10 && v7 == v11;
  if (!v17 && (OUTLINED_FUNCTION_3_5() & 1) == 0)
    return 0;
  v18 = v8 == v12 && v9 == v13;
  if (!v18 && (OUTLINED_FUNCTION_3_5() & 1) == 0)
    return 0;
  if (v25 == v14 && v24 == v15)
  {
    if (v23 != v22)
      return 0;
  }
  else if ((OUTLINED_FUNCTION_3_5() & 1) == 0 || ((v23 ^ v22) & 1) != 0)
  {
    return 0;
  }
  return sub_1AFC620CC(v21, v20);
}

uint64_t destroy for AirQualityViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirQualityViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirQualityViewModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirQualityViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirQualityViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirQualityViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityViewModel()
{
  return &type metadata for AirQualityViewModel;
}

unint64_t sub_1AFE374F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1ECAD0;
  if (!qword_1ED1ECAD0)
  {
    v1 = sub_1B0005470();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CAF230], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1ECAD0);
  }
  return result;
}

unint64_t sub_1AFE37538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F1688;
  if (!qword_1ED1F1688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F4128);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F1688);
  }
  return result;
}

void sub_1AFE3757C()
{
  sub_1B00052F0();
  __break(1u);
}

unint64_t sub_1AFE37598()
{
  unint64_t result;

  result = qword_1EEE74F18;
  if (!qword_1EEE74F18)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0C8ECE8], MEMORY[0x1E0C8ECF8]);
    atomic_store(result, (unint64_t *)&qword_1EEE74F18);
  }
  return result;
}

uint64_t sub_1AFE375D8()
{
  return 8;
}

uint64_t sub_1AFE375E4()
{
  return swift_release();
}

uint64_t sub_1AFE375EC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1AFE37600(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1AFE3760C()
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  _WORD v21[8];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _WORD v25[8];
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _WORD v29[8];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _WORD v33[8];
  uint64_t v34;
  char v35;

  v35 = 6;
  v31 = 0x7970736957;
  v32 = 0xE500000000000000;
  strcpy((char *)v33, "Wispy_Single");
  HIBYTE(v33[6]) = 0;
  v33[7] = -5120;
  v34 = 6;
  v28 = 0xE500000000000000;
  strcpy((char *)v29, "Wispy_Single");
  HIBYTE(v29[6]) = 0;
  v29[7] = -5120;
  v30 = 6;
  v23 = 0x7970736957;
  v24 = 0xE500000000000000;
  strcpy((char *)v25, "Wispy_Single");
  HIBYTE(v25[6]) = 0;
  v25[7] = -5120;
  v26 = 6;
  v27 = 0x7970736957;
  strcpy((char *)v21, "Wispy_Single");
  HIBYTE(v21[6]) = 0;
  v21[7] = -5120;
  v22 = 6;
  sub_1AFE37D94();
  sub_1AFE37D94();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #3.25
    FMOV            V2.2S, #6.0
    FMOV            V2.2S, #4.5
  }
  *((_QWORD *)&v20 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v20 = 0x4248000044BB8000;
  DWORD2(v18) = 1116471296;
  *(_QWORD *)&v18 = 0x43FA000040400000;
  *(_QWORD *)&v16 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v16 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v14 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v14 = 0x4348000040C00000;
  LODWORD(v12) = 1101004800;
  DWORD2(v11) = 1132068864;
  *(_QWORD *)&v11 = 0x4140000040A00000;
  LODWORD(v10) = 1153138688;
  LODWORD(v8) = 1140457472;
  sub_1AFB471E4((uint64_t)&v35, 30, 0, 2000, 133, 10, 0, 4, 0xC2B4000000000000, 0x42400000C20C0000, 0x428C000040400000, v8, 0x3E8000003DF5C28FLL, v9, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v10,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v11,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v12,
    v13,
    _Q0,
    _Q0,
    v14,
    1084227584,
    v15,
    _Q0,
    _Q0,
    v16,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v17,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1039516303,
    1048576000,
    v19,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v20,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4100000040A00000);
}

uint64_t sub_1AFE37D94()
{
  uint64_t v0;
  double v6;
  __n128 v7;
  double v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __n128 v17;
  float v18;
  float v19;
  float v20;
  __n128 v21;
  _OWORD *v22;
  _OWORD *v23;
  double v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  __n128 v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  _OWORD *v40;
  __n128 *v41;
  uint64_t v42;
  float v43;
  double v44;
  _OWORD *v45;
  _OWORD *v46;
  _OWORD *v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  __n128 v53;
  float v54;
  float v55;
  float v56;
  float v57;
  _OWORD *v58;
  double v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  __n128 v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  __n128 v75;
  __int128 v76;
  __n128 v77;
  __n128 v78;
  uint64_t v79;
  _OWORD *v80;
  double v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  __n128 v90;
  float v91;
  float v92;
  float v93;
  float v94;
  float v95;
  float v96;
  __n128 v97;
  __int128 v98;
  __int128 v99;
  __n128 v100;
  __n128 v101;
  uint64_t v102;
  _OWORD *v103;
  double v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  uint64_t v112;
  float v113;
  float v114;
  float v115;
  float v116;
  double v117;
  __n128 v118;
  double v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  __n128 v128;
  float v129;
  float v130;
  float v131;
  float v132;
  float v133;
  float v134;
  double v135;
  double v136;
  double v137;
  __n128 v138;
  _OWORD *v139;
  _OWORD *v140;
  double v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  uint64_t v149;
  float v150;
  float v151;
  float v152;
  _OWORD *v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  int64x2_t v248;
  __n128 v249;
  int64x2_t v250;
  __n128 v251;
  __n128 v252;
  __n128 v253;
  __n128 v254;
  __n128 v255;
  __n128 v256;
  __n128 v257;
  __n128 v258;
  __n128 v259;
  __n128 v260;
  __n128 v261;
  __n128 v262;
  __n128 v263;
  __n128 v264;
  __n128 v265;
  __n128 v266;
  __n128 v267;
  __n128 v268;
  __n128 v269;
  __n128 v270;
  __n128 v271;
  __n128 v272;
  __n128 v273;
  __n128 v274;
  __n128 v275;
  __n128 v276;
  __n128 v277;
  __n128 v278;
  __n128 v279;
  __n128 v280;
  __n128 v281;
  __n128 v282;
  __n128 v283;
  __n128 v284;
  __n128 v285;
  __n128 v286;
  __n128 v287;
  __n128 v288;
  __n128 v289;
  __n128 v290;
  __n128 v291;
  __n128 v292;
  __n128 v293;
  __n128 v294;
  __n128 v295;
  __n128 v296;
  __n128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __n128 v302;
  __n128 v303;
  __n128 v304;
  __n128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __n128 v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  __n128 v319;
  int64x2_t v320;
  __int128 v321;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025810;
  v320 = 0uLL;
  *(_QWORD *)&v321 = 0;
  *((_QWORD *)&v321 + 1) = 0x3FF0000000000000;
  __asm { FMOV            V2.2D, #1.0 }
  v251 = _Q2;
  OUTLINED_FUNCTION_20_8(COERCE_DOUBLE(8), v6, _Q2);
  v312 = xmmword_1B002B7D0;
  OUTLINED_FUNCTION_7_101((__n128)xmmword_1B002B7D0, (__n128)xmmword_1B002B7E0);
  v308 = xmmword_1B002B7F0;
  v309 = xmmword_1B002B800;
  v306 = xmmword_1B002B810;
  v307 = xmmword_1B002B820;
  v304 = v7;
  v305 = v7;
  v302 = v7;
  v303 = v7;
  v300 = xmmword_1B0025880;
  v301 = xmmword_1B0025920;
  v298 = xmmword_1B00258A0;
  v299 = xmmword_1B0025930;
  v296 = v7;
  v297 = v7;
  v294 = v7;
  v295 = v7;
  v292 = v7;
  v293 = v7;
  v290 = v7;
  v291 = v7;
  v288 = v7;
  v289 = v7;
  v286 = v7;
  v287 = v7;
  v284 = v7;
  v285 = v7;
  v282 = v7;
  v283 = v7;
  v280 = v7;
  v281 = v7;
  v278 = v7;
  v279 = v7;
  v276 = v7;
  v277 = v7;
  v274 = v7;
  v275 = v7;
  v272 = v7;
  v273 = v7;
  v270 = v7;
  v271 = v7;
  v268 = v7;
  v269 = v7;
  v266 = v7;
  v267 = v7;
  v264 = v7;
  v265 = v7;
  v262 = v7;
  v263 = v7;
  v260 = v7;
  v261 = v7;
  v258 = v7;
  v259 = v7;
  v256 = v7;
  v257 = v7;
  v254 = v7;
  v255 = v7;
  v252 = v7;
  v253 = v7;
  v8 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_15_2(v9, v10, v11, v12, v13, v14, v15, v16, v8, v17, 100.0, 500.0, v18, 0.4, v19, v20, &v306, &v304, 0x3F8000003FA00000,
    1065353216,
    &v302,
    0,
    &v300,
    &v298,
    &v296,
    &v294,
    &v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    &v262,
    &v260,
    &v258,
    &v256,
    1112014848,
    1097859072,
    &v254,
    (uint64_t)&v252);
  v248 = vdupq_n_s64(0x3C74BCC7A0000000uLL);
  v320 = v248;
  v321 = xmmword_1B0025910;
  OUTLINED_FUNCTION_20_8(*(double *)v248.i64, 1.79868456e-17, v251);
  v312 = xmmword_1B002B830;
  OUTLINED_FUNCTION_7_101((__n128)xmmword_1B002B830, (__n128)xmmword_1B002B840);
  v308 = xmmword_1B002B850;
  v309 = xmmword_1B002B860;
  v306 = xmmword_1B002B870;
  v307 = xmmword_1B002B880;
  OUTLINED_FUNCTION_0_134(0.146981299, 0.262165219, v21);
  v238 = v22;
  OUTLINED_FUNCTION_9_104();
  v222 = v23;
  OUTLINED_FUNCTION_12_99();
  v24 = OUTLINED_FUNCTION_5_111();
  OUTLINED_FUNCTION_15_2(v25, v26, v27, v28, v29, v30, v31, v32, v24, v33, v34, v35, v36, v37, v38, v39, &v306, &v304, 0x3F8000003FA00000,
    1065353216,
    &v302,
    0,
    &v300,
    &v298,
    &v296,
    &v294,
    &v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    v222,
    v228,
    v232,
    v236,
    1112014848,
    1097859072,
    v238,
    v242);
  v250 = vdupq_n_s64(0x3FCF1B2BA0000000uLL);
  v320 = v250;
  v321 = xmmword_1B0025AB0;
  v318 = v251;
  v319 = v251;
  v316 = v251;
  v317 = v251;
  v314 = v251;
  v315 = v251;
  v312 = (__int128)v251;
  v313 = xmmword_1B0026400;
  v310 = (__int128)v251;
  v311 = xmmword_1B0026400;
  v308 = xmmword_1B002B890;
  v309 = xmmword_1B002B8A0;
  v306 = xmmword_1B002B8B0;
  v307 = xmmword_1B0026400;
  v304 = v251;
  v305 = v251;
  v302 = v251;
  v303 = v251;
  v300 = (__int128)v251;
  v301 = xmmword_1B002B8C0;
  v298 = (__int128)v251;
  v299 = xmmword_1B002B8D0;
  v296 = v251;
  v297 = v251;
  v294 = v251;
  v295 = v251;
  v292 = v251;
  v293 = v251;
  v290 = v251;
  v291 = v251;
  v288 = v251;
  v289 = v251;
  v286 = v251;
  v287 = v251;
  v284 = v251;
  v285 = v251;
  v282 = v251;
  v283 = v251;
  v280 = v251;
  v281 = v251;
  v278 = v251;
  v279 = v251;
  v276 = v251;
  v277 = v251;
  v274 = v251;
  v275 = v251;
  v272 = v251;
  v273 = v251;
  v270 = v251;
  v271 = v251;
  v268 = v251;
  v269 = v251;
  v266 = v251;
  v267 = v251;
  v264 = v251;
  v265 = v251;
  v262 = v251;
  v263 = v251;
  v260 = v251;
  v261 = v251;
  v258 = v251;
  v259 = v251;
  v256 = v251;
  v257 = v251;
  v254 = v251;
  v255 = v251;
  v252 = v251;
  v253 = v251;
  OUTLINED_FUNCTION_19_9();
  OUTLINED_FUNCTION_2_120();
  v162 = v40;
  OUTLINED_FUNCTION_4_113();
  v249 = v41[118];
  v43 = *(float *)(v42 + 3016);
  v44 = OUTLINED_FUNCTION_13_99();
  OUTLINED_FUNCTION_15_2(v45, v46, v47, v48, v49, v50, v51, v52, v44, v53, v43, 500.0, v54, v55, v56, v57, &v306, &v304, 0x3F8000003FA00000,
    1052887464,
    &v302,
    0,
    &v300,
    &v298,
    &v296,
    &v294,
    v162,
    v166,
    v170,
    v174,
    v178,
    v182,
    v186,
    v190,
    v194,
    v198,
    v202,
    v206,
    v210,
    v214,
    v218,
    v223,
    v229,
    v233,
    &v256,
    1112014848,
    1097859072,
    v239,
    v243);
  v320 = v250;
  v321 = xmmword_1B0025AB0;
  v318 = v251;
  v319 = v251;
  v316 = v251;
  v317 = v251;
  v314 = v251;
  v315 = v251;
  v312 = (__int128)v251;
  v313 = xmmword_1B0026120;
  v310 = (__int128)v251;
  v311 = xmmword_1B0026120;
  v308 = xmmword_1B002B890;
  v309 = xmmword_1B002B8E0;
  v306 = xmmword_1B002B8B0;
  v307 = xmmword_1B0026120;
  v304 = v251;
  v305 = v251;
  v302 = v251;
  v303 = v251;
  v300 = (__int128)v251;
  v301 = xmmword_1B0025B20;
  v298 = (__int128)v251;
  v299 = xmmword_1B0025B30;
  v296 = v251;
  v297 = v251;
  v294 = v251;
  v295 = v251;
  v292 = v251;
  v293 = v251;
  v290 = v251;
  v291 = v251;
  v288 = v251;
  v289 = v251;
  v286 = v251;
  v287 = v251;
  v284 = v251;
  v285 = v251;
  v282 = v251;
  v283 = v251;
  v280 = v251;
  v281 = v251;
  v278 = v251;
  v279 = v251;
  v276 = v251;
  v277 = v251;
  v274 = v251;
  v275 = v251;
  v272 = v251;
  v273 = v251;
  v270 = v251;
  v271 = v251;
  v268 = v251;
  v269 = v251;
  v266 = v251;
  v267 = v251;
  v264 = v251;
  v265 = v251;
  v262 = v251;
  v263 = v251;
  v260 = v251;
  v261 = v251;
  v258 = v251;
  v259 = v251;
  v256 = v251;
  v257 = v251;
  v254 = v251;
  v255 = v251;
  v252 = v251;
  v253 = v251;
  OUTLINED_FUNCTION_19_9();
  OUTLINED_FUNCTION_2_120();
  v163 = v58;
  OUTLINED_FUNCTION_4_113();
  v59 = OUTLINED_FUNCTION_8_104();
  OUTLINED_FUNCTION_15_2(v60, v61, v62, v63, v64, v65, v66, v67, v59, v68, v69, v70, v71, v72, v73, v74, &v306, &v304, 0x3F8000003FA00000,
    1052887464,
    &v302,
    0,
    &v300,
    &v298,
    &v296,
    &v294,
    v163,
    v167,
    v171,
    v175,
    v179,
    v183,
    v187,
    v191,
    v195,
    v199,
    v203,
    v207,
    v211,
    v215,
    v219,
    v224,
    v230,
    v234,
    &v306,
    1112014848,
    1097859072,
    v240,
    v244);
  v320 = v250;
  v75 = OUTLINED_FUNCTION_11_93((__n128)xmmword_1B0025AB0);
  OUTLINED_FUNCTION_7_101(v75, (__n128)xmmword_1B0026120);
  v308 = xmmword_1B002B890;
  v309 = xmmword_1B002B8E0;
  v306 = xmmword_1B002B8B0;
  v307 = v76;
  OUTLINED_FUNCTION_16_80(v77);
  v301 = xmmword_1B0025B20;
  v298 = (__int128)v78;
  OUTLINED_FUNCTION_1_117(v78, (__n128)xmmword_1B0025B30);
  v245 = v79;
  OUTLINED_FUNCTION_3_114();
  v158 = v80;
  OUTLINED_FUNCTION_4_113();
  HIDWORD(v156) = 1065353216;
  OUTLINED_FUNCTION_18_75();
  v81 = OUTLINED_FUNCTION_8_104();
  OUTLINED_FUNCTION_29(v82, v83, v84, v85, v86, v87, v88, v89, v81, v90, v91, v92, v93, v94, v95, v96, &v306, v154, v156,
    1052887464,
    &v302,
    0,
    &v300,
    &v298,
    v158,
    v160,
    v164,
    v168,
    v172,
    v176,
    v180,
    v184,
    v188,
    v192,
    v196,
    v200,
    v204,
    v208,
    v212,
    v216,
    v220,
    v225,
    &v260,
    &v258,
    &v306,
    1112014848,
    1097859072,
    &v254,
    v245);
  v320 = v250;
  v97 = OUTLINED_FUNCTION_11_93((__n128)xmmword_1B0025AB0);
  OUTLINED_FUNCTION_7_101(v97, (__n128)xmmword_1B0026400);
  v308 = v98;
  v309 = xmmword_1B002B8A0;
  v306 = xmmword_1B002B8B0;
  v307 = v99;
  OUTLINED_FUNCTION_16_80(v100);
  v301 = xmmword_1B002B8C0;
  v298 = (__int128)v101;
  OUTLINED_FUNCTION_1_117(v101, (__n128)xmmword_1B002B8D0);
  v246 = v102;
  OUTLINED_FUNCTION_3_114();
  v159 = v103;
  OUTLINED_FUNCTION_4_113();
  HIDWORD(v157) = 1065353216;
  OUTLINED_FUNCTION_18_75();
  v104 = OUTLINED_FUNCTION_13_99();
  OUTLINED_FUNCTION_29(v105, v106, v107, v108, v109, v110, v111, v112, v104, v249, v43, 500.0, v113, v114, v115, v116, &v306, v155, v157,
    1052887464,
    &v302,
    0,
    &v300,
    &v298,
    v159,
    v161,
    v165,
    v169,
    v173,
    v177,
    v181,
    v185,
    v189,
    v193,
    v197,
    v201,
    v205,
    v209,
    v213,
    v217,
    v221,
    v226,
    &v260,
    &v258,
    &v256,
    1112014848,
    1097859072,
    &v254,
    v246);
  v320 = v248;
  v321 = xmmword_1B0025910;
  OUTLINED_FUNCTION_20_8(1.79868456e-17, v117, v251);
  v312 = xmmword_1B002B830;
  v313 = xmmword_1B002B840;
  v310 = xmmword_1B002B830;
  v311 = xmmword_1B002B840;
  v308 = xmmword_1B002B850;
  v309 = xmmword_1B002B860;
  v306 = xmmword_1B002B870;
  v307 = xmmword_1B002B880;
  v304 = v118;
  v305 = v118;
  v302 = v118;
  v303 = v118;
  v300 = xmmword_1B0025880;
  v301 = xmmword_1B0025920;
  v298 = xmmword_1B00258A0;
  v299 = xmmword_1B0025930;
  v296 = v118;
  v297 = v118;
  v294 = v118;
  v295 = v118;
  v292 = v118;
  v293 = v118;
  v290 = v118;
  v291 = v118;
  v288 = v118;
  v289 = v118;
  v286 = v118;
  v287 = v118;
  v284 = v118;
  v285 = v118;
  v282 = v118;
  v283 = v118;
  v280 = v118;
  v281 = v118;
  v278 = v118;
  v279 = v118;
  v276 = v118;
  v277 = v118;
  v274 = v118;
  v275 = v118;
  v272 = v118;
  v273 = v118;
  v270 = v118;
  v271 = v118;
  v268 = v118;
  v269 = v118;
  v266 = v118;
  v267 = v118;
  v264 = v118;
  v265 = v118;
  v262 = v118;
  v263 = v118;
  v260 = v118;
  v261 = v118;
  v258 = v118;
  v259 = v118;
  v256 = v118;
  v257 = v118;
  v254 = v118;
  v255 = v118;
  v252 = v118;
  v253 = v118;
  OUTLINED_FUNCTION_12_99();
  v119 = OUTLINED_FUNCTION_5_111();
  v135 = OUTLINED_FUNCTION_29(v120, v121, v122, v123, v124, v125, v126, v127, v119, v128, v129, v130, v131, v132, v133, v134, &v306, &v304, 0x3F8000003FA00000,
           1065353216,
           &v302,
           0,
           &v300,
           &v298,
           &v296,
           &v294,
           &v292,
           &v290,
           &v288,
           &v286,
           &v284,
           &v282,
           &v280,
           &v278,
           &v276,
           &v274,
           &v272,
           &v270,
           &v268,
           &v266,
           &v264,
           &v262,
           &v260,
           &v258,
           &v256,
           1112014848,
           1097859072,
           &v254,
           (uint64_t)&v252);
  v320 = 0uLL;
  *(_QWORD *)&v321 = 0;
  *((_QWORD *)&v321 + 1) = 0x3FF0000000000000;
  OUTLINED_FUNCTION_20_8(v135, v136, v251);
  v312 = xmmword_1B002B7D0;
  OUTLINED_FUNCTION_7_101((__n128)xmmword_1B002B7D0, (__n128)xmmword_1B002B7E0);
  v308 = xmmword_1B002B7F0;
  v309 = xmmword_1B002B800;
  v306 = xmmword_1B002B810;
  v307 = xmmword_1B002B820;
  OUTLINED_FUNCTION_0_134(0.305487901, v137, v138);
  v241 = v139;
  OUTLINED_FUNCTION_9_104();
  v227 = v140;
  OUTLINED_FUNCTION_12_99();
  v141 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_29(v142, v143, v144, v145, v146, v147, v148, v149, v141, (__n128)xmmword_1B0025900, 100.0, 500.0, v150, 0.4, v151, v152, &v306, &v304, 0x3F8000003FA00000,
    1065353216,
    &v302,
    0,
    &v300,
    &v298,
    &v296,
    &v294,
    &v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    v227,
    v231,
    v235,
    v237,
    1112014848,
    1097859072,
    v241,
    v247);
  return v0;
}

void sub_1AFE38AB0()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23[16];
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[9];

  v35[0] = 0;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0050EC0;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0050EE0;
  v29 = 9;
  v21 = 0x2D20737572726943;
  v22 = 0xEA00000000004C20;
  strcpy(v23, "Cirrus_SingleL");
  v23[15] = -18;
  v24 = 10;
  v25 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE392E0();
  sub_1AFBCEE84();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.5
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3B03126F3F800000;
  *((_QWORD *)&v14 + 1) = 0x417000003F333333;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v35, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFE392E0()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int64x2_t v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int64x2_t v78;
  __int128 v79;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = xmmword_1B0025E50;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = _Q1;
  v60 = (int64x2_t)_Q1;
  v61 = xmmword_1B0025E90;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = _Q1;
  v21 = _Q1;
  v18 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0025EB0;
  v17 = xmmword_1B0025EC0;
  v9 = _Q1;
  v13 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v11 = _Q1;
  v12 = _Q1;
  v10 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v19 = xmmword_1B0025EE0;
  v16 = xmmword_1B0025EF0;
  v17 = xmmword_1B0025F00;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B002A7C0;
  v77 = xmmword_1B0025F30;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026900;
  v67 = xmmword_1B0026910;
  v64 = xmmword_1B0025F80;
  v65 = xmmword_1B0027840;
  v62 = (int64x2_t)xmmword_1B002A7E0;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF992720000000uLL);
  v19 = xmmword_1B0025FB0;
  v16 = xmmword_1B0025FC0;
  v17 = xmmword_1B0025FD0;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025FE0;
  v79 = v9;
  v76 = xmmword_1B0025FF0;
  v77 = xmmword_1B0026000;
  v74 = xmmword_1B002A7F0;
  v75 = xmmword_1B0028210;
  v72 = xmmword_1B002A800;
  v73 = xmmword_1B002A810;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026080;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B00260A0;
  v17 = xmmword_1B0026090;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A820;
  v79 = xmmword_1B00260D0;
  v76 = xmmword_1B00260E0;
  v77 = xmmword_1B00260F0;
  v74 = xmmword_1B0026100;
  v75 = xmmword_1B0026110;
  v72 = xmmword_1B002A830;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026150;
  v65 = xmmword_1B002A840;
  v62 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026180;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B00261A0;
  v17 = xmmword_1B0026190;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A850;
  v79 = xmmword_1B00261D0;
  v76 = xmmword_1B002A860;
  v77 = xmmword_1B00261F0;
  v74 = xmmword_1B0026200;
  v75 = xmmword_1B0026210;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0027040;
  v65 = xmmword_1B002A870;
  v62 = (int64x2_t)xmmword_1B002A880;
  v63 = xmmword_1B002A890;
  v60 = (int64x2_t)xmmword_1B0026260;
  v61 = xmmword_1B0026270;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026280;
  v19 = xmmword_1B0026290;
  v16 = xmmword_1B00262A0;
  v17 = xmmword_1B0026290;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v8 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002A8A0;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00262E0;
  v75 = xmmword_1B0027420;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A8B0;
  v63 = xmmword_1B002A8C0;
  v60 = (int64x2_t)xmmword_1B0026320;
  v61 = xmmword_1B0027440;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026340;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026350;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B0026370;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026390;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00263A0;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1300.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B00263C0;
  v77 = xmmword_1B00263D0;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026390;
  v19 = xmmword_1B0026400;
  v16 = xmmword_1B0026410;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B00263C0;
  v77 = xmmword_1B00263D0;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B002A8D0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026400;
  v16 = xmmword_1B00263A0;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B0026440;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)v9;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026410;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1300.0, 1.1967e-26, 0.75, 0.9, 0.85, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v79 = xmmword_1B002A8E0;
  v76 = xmmword_1B002A8F0;
  v77 = xmmword_1B0025FA0;
  v74 = xmmword_1B002A900;
  v75 = xmmword_1B002A910;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A920;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v61 = xmmword_1B00264D0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00264E0;
  v17 = xmmword_1B0026140;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.85, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A940;
  v79 = xmmword_1B0027B30;
  v76 = xmmword_1B002A950;
  v77 = xmmword_1B002A960;
  v74 = xmmword_1B002A970;
  v75 = xmmword_1B002A980;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = xmmword_1B0026560;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B002A990;
  v63 = xmmword_1B002A9A0;
  v60 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v61 = xmmword_1B00265A0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B00265B0;
  v19 = xmmword_1B00265C0;
  v16 = xmmword_1B00265D0;
  v17 = xmmword_1B00265E0;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026600;
  v79 = xmmword_1B0026610;
  v76 = xmmword_1B0027140;
  v77 = xmmword_1B0027150;
  v74 = xmmword_1B0026640;
  v75 = xmmword_1B0026650;
  v72 = v9;
  v73 = xmmword_1B0026130;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A9C0;
  v63 = xmmword_1B002A9D0;
  v60 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v61 = xmmword_1B0026680;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026690;
  v19 = xmmword_1B00266A0;
  v16 = xmmword_1B00266B0;
  v17 = xmmword_1B00266C0;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00266E0;
  v79 = xmmword_1B00266F0;
  v76 = xmmword_1B0026700;
  v77 = xmmword_1B0026710;
  v74 = xmmword_1B0026720;
  v75 = xmmword_1B0026730;
  v72 = xmmword_1B002A830;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v61 = xmmword_1B0026740;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026750;
  v19 = xmmword_1B0026760;
  v16 = xmmword_1B0026770;
  v17 = xmmword_1B0026780;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    665496235,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026790;
  v79 = v9;
  v76 = xmmword_1B002A9E0;
  v77 = xmmword_1B00267B0;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B00267D0;
  v67 = xmmword_1B00267E0;
  v64 = xmmword_1B00267F0;
  v65 = xmmword_1B00278C0;
  v62 = (int64x2_t)xmmword_1B002AA00;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026800;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026810;
  v17 = xmmword_1B0025EA0;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  __asm { FMOV            V0.2D, #0.25 }
  v18 = _Q0;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026820;
  v17 = xmmword_1B0025EA0;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026830;
  v17 = xmmword_1B0026840;
  v13 = v9;
  v14 = v9;
  v15 = v9;
  v11 = v9;
  v12 = v9;
  v10 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  return v0;
}

void sub_1AFE3C578(void (**a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_7_102();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  sub_1AFAF2DFC(v1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for HourlyGaugeView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_1AFAF2984((uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for HourlyGaugeView);
  *a1 = sub_1AFE3E420;
  a1[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v7;
}

void sub_1AFE3C630(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v41 = a1;
  v42 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75030);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75038);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75040);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE3C914((uint64_t)v4);
  v14 = sub_1B0007AC8();
  type metadata accessor for HourlyGaugeView();
  sub_1B0007264();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  sub_1AFAF2558((uint64_t)v4, (uint64_t)v7, &qword_1EEE73C88);
  v23 = &v7[*(int *)(v5 + 36)];
  *v23 = v14;
  *((_QWORD *)v23 + 1) = v16;
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = v20;
  *((_QWORD *)v23 + 4) = v22;
  v23[40] = 0;
  sub_1AFACE0DC((uint64_t)v4, &qword_1EEE73C88);
  LOBYTE(v5) = sub_1B0007AE0();
  sub_1B0007264();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_1AFAF2558((uint64_t)v7, (uint64_t)v10, &qword_1EEE75030);
  v32 = &v10[*(int *)(v8 + 36)];
  *v32 = v5;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_1AFACE0DC((uint64_t)v7, &qword_1EEE75030);
  sub_1B00082E4();
  sub_1B0007360();
  sub_1AFAF2558((uint64_t)v10, (uint64_t)v13, &qword_1EEE75038);
  v33 = &v13[*(int *)(v11 + 36)];
  v34 = v44;
  *(_OWORD *)v33 = v43;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v45;
  sub_1AFACE0DC((uint64_t)v10, &qword_1EEE75038);
  sub_1B0007378();
  v36 = v35 * 0.5;
  v38 = v37 * 0.5;
  v39 = v42;
  sub_1AFAF2558((uint64_t)v13, v42, &qword_1EEE75040);
  v40 = (double *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75048) + 36));
  *v40 = v36;
  v40[1] = v38;
  sub_1AFACE0DC((uint64_t)v13, &qword_1EEE75040);
}

void sub_1AFE3C914(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v18[0] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73420);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CD8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C88);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0.0;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v13 = 1.0;
    if (*(double *)v1 <= 1.0)
      v13 = *(double *)v1;
  }
  *(double *)&v18[1] = v13;
  v19 = xmmword_1B0024620;
  sub_1AFAF0DA8();
  sub_1B000808C();
  v14 = sub_1AFE3CB6C();
  v15 = *(_QWORD *)(v1 + 16);
  *(double *)&v19 = v14;
  *((_QWORD *)&v19 + 1) = v15;
  sub_1AFAD71A0(&qword_1EEE73418, &qword_1EEE73420, MEMORY[0x1E0CDF660]);
  sub_1AFD97F04();
  sub_1B0007E1C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for HourlyGaugeView();
  sub_1B00082E4();
  sub_1B0007360();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v16 = (__int128 *)&v12[*(int *)(v10 + 36)];
  v17 = v20;
  *v16 = v19;
  v16[1] = v17;
  v16[2] = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1AFAE8274((uint64_t)v12, v18[0], &qword_1EEE73C88);
}

double sub_1AFE3CB6C()
{
  uint64_t v0;
  double *v1;
  double v2;

  v1 = (double *)(v0 + *(int *)(type metadata accessor for HourlyGaugeView() + 20));
  v2 = v1[1];
  if ((*(_BYTE *)(v0 + 8) & 1) != 0 || *(double *)v0 <= 1.0 && *(double *)v0 < 0.9)
    v2 = v2 * 0.5;
  return *v1 - v2;
}

double sub_1AFE3CBC8@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double result;
  uint64_t v16;
  char v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2778);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEE70250 != -1)
    swift_once();
  v9 = qword_1EEE922B0;
  v10 = *(_QWORD *)algn_1EEE922B8;
  v17 = a2 & 1;
  swift_retain();
  swift_retain();
  sub_1B0007BD0();
  v11 = *MEMORY[0x1E0CDD550];
  v12 = sub_1B0007B88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v8, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
  v13 = sub_1B0007BDC();
  sub_1AFACE0DC((uint64_t)v8, &qword_1ED1F2778);
  v14 = v17;
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v14;
  result = 9.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B003C2B0;
  *(_QWORD *)(a3 + 32) = v9;
  *(_QWORD *)(a3 + 40) = v10;
  *(_QWORD *)(a3 + 48) = v13;
  return result;
}

uint64_t sub_1AFE3CD24()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = sub_1B0005A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C20);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[8] & 1) != 0)
  {
    if (qword_1ED1F1018 != -1)
      swift_once();
    v15 = qword_1ED1FED48;
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_QWORD *)v0;
    if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    {
      if (qword_1EEE70130 != -1)
        swift_once();
      v9 = type metadata accessor for UltravioletComplicationHourlyViewModel();
      v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
      v11 = v8 + ((v10 + 32) & ~v10);
      v12 = v11 + *(int *)(v9 + 24);
      v13 = v11 + *(int *)(v9 + 28);
      v14 = sub_1B0005B84();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v14);
      sub_1B00059A4();
      v15 = sub_1AFD370B0(v12, (uint64_t)v4, (uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      sub_1AFACE0DC((uint64_t)v7, &qword_1ED1F1C20);
    }
    else
    {
      return 0;
    }
  }
  return v15;
}

void sub_1AFE3CF00(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1B000781C();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F28);
  sub_1AFE3CF44(v1, a1 + *(int *)(v3 + 44));
}

void sub_1AFE3CF44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[7];
  unsigned __int8 v70;
  _BYTE v71[7];
  unsigned __int8 v72;
  _BYTE v73[7];
  unsigned __int8 v74;
  _BYTE v75[7];
  _BYTE v76[7];
  unsigned __int8 v77;
  _BYTE v78[7];
  unsigned __int8 v79;
  _QWORD v80[21];
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  _BYTE v97[7];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _BYTE v102[7];
  uint64_t v103;
  char v104;
  _BYTE v105[7];
  uint64_t v106;
  uint64_t v107;

  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F30);
  MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - v6;
  *(_QWORD *)v7 = sub_1B0007744();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F38);
  v51 = v7;
  v68 = *(_QWORD *)a1;
  v81 = v68;
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a1 + 48);
  sub_1AFB4A714((uint64_t)&v68);
  sub_1AFE3DC9C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F40);
  sub_1B00058FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F48);
  sub_1AFAD71A0(&qword_1EEE74F50, &qword_1EEE74F40, MEMORY[0x1E0DEAF48]);
  sub_1AFAD71A0(&qword_1EEE74F58, &qword_1EEE74F48, MEMORY[0x1E0CE0680]);
  sub_1AFE3DCEC();
  sub_1B0008284();
  v81 = sub_1AFE3CD24();
  v82 = v10;
  sub_1AFAF9424();
  v11 = sub_1B0007D5C();
  v13 = v12;
  v15 = v14 & 1;
  v16 = sub_1B0007D08();
  v55 = v17;
  v56 = v16;
  v19 = v18;
  v57 = v20;
  sub_1AFAED640(v11, v13, v15);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v54 = sub_1B0007AC8();
  sub_1B0007264();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v52 = *(_QWORD *)(a1 + 40);
  v53 = swift_getKeyPath();
  swift_retain();
  sub_1B000781C();
  sub_1B0007720();
  sub_1B0007360();
  v29 = v62;
  v47 = v62;
  v60 = v64;
  v49 = v67;
  v50 = v66;
  v79 = v19 & 1;
  v77 = 0;
  v74 = 0;
  v72 = v63;
  v70 = v65;
  v30 = v61;
  sub_1AFAF2558((uint64_t)v7, v61, &qword_1EEE74F30);
  LOBYTE(v11) = v79;
  v48 = v79;
  LOBYTE(v13) = v77;
  LOBYTE(v7) = v74;
  v43 = v77;
  v44 = v74;
  v31 = v72;
  v32 = v70;
  v45 = v72;
  v46 = v70;
  v33 = v58;
  sub_1AFAF2558(v30, v58, &qword_1EEE74F30);
  v34 = (void *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F68) + 48));
  v35 = v55;
  v36 = v56;
  v80[0] = v56;
  v80[1] = v55;
  LOBYTE(v80[2]) = v11;
  *(_DWORD *)((char *)&v80[2] + 1) = *(_DWORD *)v78;
  HIDWORD(v80[2]) = *(_DWORD *)&v78[3];
  v37 = v57;
  v80[3] = v57;
  v80[4] = KeyPath;
  v80[5] = 1;
  LOBYTE(v80[6]) = v13;
  *(_DWORD *)((char *)&v80[6] + 1) = *(_DWORD *)v76;
  HIDWORD(v80[6]) = *(_DWORD *)&v76[3];
  LOBYTE(v11) = v54;
  LOBYTE(v80[7]) = v54;
  *(_DWORD *)((char *)&v80[7] + 1) = *(_DWORD *)v75;
  HIDWORD(v80[7]) = *(_DWORD *)&v75[3];
  v80[8] = v22;
  v80[9] = v24;
  v80[10] = v26;
  v80[11] = v28;
  LOBYTE(v80[12]) = (_BYTE)v7;
  HIDWORD(v80[12]) = *(_DWORD *)&v73[3];
  *(_DWORD *)((char *)&v80[12] + 1) = *(_DWORD *)v73;
  v38 = v52;
  v39 = v53;
  v80[13] = v53;
  v80[14] = v52;
  v80[15] = v29;
  LOBYTE(v80[16]) = v31;
  *(_DWORD *)((char *)&v80[16] + 1) = *(_DWORD *)v71;
  HIDWORD(v80[16]) = *(_DWORD *)&v71[3];
  v80[17] = v60;
  LOBYTE(v80[18]) = v32;
  *(_DWORD *)((char *)&v80[18] + 1) = *(_DWORD *)v69;
  HIDWORD(v80[18]) = *(_DWORD *)&v69[3];
  v41 = v49;
  v40 = v50;
  v80[19] = v50;
  v80[20] = v49;
  memcpy(v34, v80, 0xA8uLL);
  sub_1AFD97C3C((uint64_t)v80);
  sub_1AFACE0DC((uint64_t)v51, &qword_1EEE74F30);
  v81 = v36;
  v82 = v35;
  v83 = v48;
  *(_DWORD *)v84 = *(_DWORD *)v78;
  *(_DWORD *)&v84[3] = *(_DWORD *)&v78[3];
  v85 = v37;
  v86 = KeyPath;
  v87 = 1;
  v88 = v43;
  *(_DWORD *)v89 = *(_DWORD *)v76;
  *(_DWORD *)&v89[3] = *(_DWORD *)&v76[3];
  v90 = v11;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v75[3];
  *(_DWORD *)v91 = *(_DWORD *)v75;
  v92 = v22;
  v93 = v24;
  v94 = v26;
  v95 = v28;
  v96 = v44;
  *(_DWORD *)&v97[3] = *(_DWORD *)&v73[3];
  *(_DWORD *)v97 = *(_DWORD *)v73;
  v98 = v39;
  v99 = v38;
  v100 = v47;
  v101 = v45;
  *(_DWORD *)v102 = *(_DWORD *)v71;
  *(_DWORD *)&v102[3] = *(_DWORD *)&v71[3];
  v103 = v60;
  v104 = v46;
  *(_DWORD *)v105 = *(_DWORD *)v69;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v69[3];
  v106 = v40;
  v107 = v41;
  sub_1AFD97CA4((uint64_t)&v81);
  sub_1AFACE0DC(v61, &qword_1EEE74F30);
}

void sub_1AFE3D470(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v37 = a2;
  v38 = a3;
  v4 = type metadata accessor for UltravioletComplicationHourlyViewModel();
  MEMORY[0x1E0C80A78](v4);
  v34 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F70);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F78);
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for HourlyGaugeView();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F80);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v33 - v23;
  sub_1AFEB6510((uint64_t)v18);
  *(_OWORD *)&v18[*(int *)(v16 + 20)] = xmmword_1B003C2C0;
  sub_1B00082E4();
  sub_1AFF06488();
  sub_1AFAE2D74((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for HourlyGaugeView);
  sub_1AFAE8274((uint64_t)v21, (uint64_t)v24, &qword_1EEE74F80);
  sub_1AFAF2DFC(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationHourlyViewModel);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v4);
  sub_1AFBDBBF4(*v37, (uint64_t)v12);
  v25 = (uint64_t)&v7[*(int *)(v36 + 48)];
  sub_1AFAF2558((uint64_t)v15, (uint64_t)v7, &qword_1EEE74F78);
  sub_1AFAF2558((uint64_t)v12, v25, &qword_1EEE74F78);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4) == 1)
  {
    sub_1AFACE0DC((uint64_t)v12, &qword_1EEE74F78);
    sub_1AFACE0DC((uint64_t)v15, &qword_1EEE74F78);
    if (__swift_getEnumTagSinglePayload(v25, 1, v4) == 1)
    {
      sub_1AFACE0DC((uint64_t)v7, &qword_1EEE74F78);
LABEL_13:
      v27 = 0;
      v28 = 0;
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  v26 = v35;
  sub_1AFAF2558((uint64_t)v7, v35, &qword_1EEE74F78);
  if (__swift_getEnumTagSinglePayload(v25, 1, v4) == 1)
  {
    sub_1AFACE0DC((uint64_t)v12, &qword_1EEE74F78);
    sub_1AFACE0DC((uint64_t)v15, &qword_1EEE74F78);
    sub_1AFAE2D74(v26, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationHourlyViewModel);
LABEL_6:
    sub_1AFACE0DC((uint64_t)v7, &qword_1EEE74F70);
    goto LABEL_7;
  }
  v29 = v34;
  sub_1AFAF2984(v25, v34, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationHourlyViewModel);
  v30 = static UltravioletComplicationHourlyViewModel.== infix(_:_:)(v26, v29);
  sub_1AFAE2D74(v29, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationHourlyViewModel);
  sub_1AFACE0DC((uint64_t)v12, &qword_1EEE74F78);
  sub_1AFACE0DC((uint64_t)v15, &qword_1EEE74F78);
  sub_1AFAE2D74(v26, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationHourlyViewModel);
  sub_1AFACE0DC((uint64_t)v7, &qword_1EEE74F78);
  if ((v30 & 1) != 0)
    goto LABEL_13;
LABEL_7:
  if (qword_1EEE70150 != -1)
    swift_once();
  v27 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v28 = qword_1EEE92170;
  swift_retain();
LABEL_14:
  sub_1AFAF2558((uint64_t)v24, (uint64_t)v21, &qword_1EEE74F80);
  v31 = v38;
  sub_1AFAF2558((uint64_t)v21, v38, &qword_1EEE74F80);
  v32 = (uint64_t *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F88) + 48));
  *v32 = v27;
  v32[1] = v28;
  swift_retain();
  sub_1AFACE0DC((uint64_t)v24, &qword_1EEE74F80);
  swift_release();
  sub_1AFACE0DC((uint64_t)v21, &qword_1EEE74F80);
}

uint64_t sub_1AFE3D94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1B0007FF0();
  sub_1B0007FF0();
  v1 = sub_1B0008014();
  result = swift_release();
  qword_1EEE922B0 = v0;
  *(_QWORD *)algn_1EEE922B8 = v1;
  return result;
}

uint64_t sub_1AFE3D9A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFE3D9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AFE3DA44(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1AFE3DB04(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_1AFE3DB70(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AFE3DBB0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HourlyGaugeGroupView()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t sub_1AFE3DC08()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFE3DC18(uint64_t a1@<X8>)
{
  sub_1AFE3CF00(a1);
}

uint64_t sub_1AFE3DC58()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1AFE3DC94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFE3D470(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_1AFE3DC9C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1AFE3DCEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE74F60;
  if (!qword_1EEE74F60)
  {
    v1 = type metadata accessor for UltravioletComplicationHourlyViewModel();
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for UltravioletComplicationHourlyViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_1EEE74F60);
  }
  return result;
}

uint64_t type metadata accessor for HourlyGaugeView()
{
  uint64_t result;

  result = qword_1EEE74FE8;
  if (!qword_1EEE74FE8)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1AFE3DD74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = type metadata accessor for ComplicationHourlyGaugeViewModel();
    v8 = *(int *)(v7 + 24);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1B00058D8();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 28);
    v14 = (char *)v4 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = sub_1B0005B84();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

uint64_t sub_1AFE3DE7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v3 = a1 + *(int *)(v2 + 24);
  v4 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + *(int *)(v2 + 28);
  v6 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1AFE3DEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B00058D8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE3DFD4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v8 = *(int *)(v7 + 24);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(v7 + 28);
  v13 = a1 + v12;
  v14 = (uint64_t)a2 + v12;
  v15 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  return a1;
}

uint64_t sub_1AFE3E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(v6 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE3E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(v6 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE3E23C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE3E248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_4_114();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1AFE3E270()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE3E27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_4_114();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_1AFE3E2A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ComplicationHourlyGaugeViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for HourlyGaugeGroupView.Style()
{
  OUTLINED_FUNCTION_27_0();
}

void type metadata accessor for HourlyGaugeGroupView.Layout()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1AFE3E330()
{
  sub_1AFAD71A0(&qword_1EEE75020, &qword_1EEE75028, MEMORY[0x1E0CDFCC0]);
}

uint64_t sub_1AFE3E35C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE3E36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_7_102() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for ComplicationHourlyGaugeViewModel();
  v4 = v2 + *(int *)(v3 + 24);
  v5 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + *(int *)(v3 + 28);
  v7 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

void sub_1AFE3E420(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_7_102();
  sub_1AFE3C630(a1, a2);
}

void type metadata accessor for HourlyGaugeView.Layout()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1AFE3E474()
{
  sub_1AFAD71A0(&qword_1EEE75050, &qword_1EEE75058, MEMORY[0x1E0CD9318]);
}

uint64_t *initializeBufferWithCopyOfBuffer for AirQualityComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for AirQualityComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = v7[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      v13 = v7[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1B00061B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      v17 = v7[8];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1B0006328();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for AirQualityComplicationDataStatus(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[7];
    v7 = sub_1B00061B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v2[8];
    v9 = sub_1B0006328();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  return result;
}

_BYTE *initializeWithCopy for AirQualityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  v6 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B00061B4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = v6[8];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_1B0006328();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for AirQualityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  v6 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v22 = v6[5];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v26 = v6[7];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1B00061B4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      v30 = v6[8];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_1B0006328();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
      return a1;
    }
    sub_1AFE3E994((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B00061B4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v6[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_1B0006328();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFE3E994(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AirQualityComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for AirQualityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  v6 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B00061B4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = v6[8];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_1B0006328();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for AirQualityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  v6 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v22 = v6[5];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v26 = v6[7];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1B00061B4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      v30 = v6[8];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_1B0006328();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
      return a1;
    }
    sub_1AFE3E994((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B00061B4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = v6[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_1B0006328();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirQualityComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE3ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for AirQualityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AirQualityComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE3ED24(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for AirQualityComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFE3ED70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AirQualityComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFE3EDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQualityComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for AirQualityComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EF630;
  if (!qword_1ED1EF630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE3EE10()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AirQualityComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFE3EE64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC93068();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1AFE4609C((unint64_t)v6);
  *a1 = v3;
}

double GoodMorningStringBuilder.__allocating_init()()
{
  _OWORD *v0;
  double result;

  v0 = (_OWORD *)OUTLINED_FUNCTION_20();
  __asm { FMOV            V1.2D, #10.0 }
  v0[1] = xmmword_1B003C450;
  v0[2] = _Q1;
  result = 1.6;
  v0[3] = xmmword_1B003C460;
  return result;
}

double GoodMorningStringBuilder.init()()
{
  _OWORD *v0;
  double result;

  __asm { FMOV            V1.2D, #10.0 }
  v0[1] = xmmword_1B003C450;
  v0[2] = _Q1;
  result = 1.6;
  v0[3] = xmmword_1B003C460;
  return result;
}

uint64_t GoodMorningStringBuilder.buildString(from:hourlyForecast:dailyForecast:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(unint64_t, uint64_t, uint64_t);
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  void (*v117)(char *, _QWORD, uint64_t);
  uint64_t v118;
  char v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  void *v128;
  id v129;
  void (*v130)(_QWORD, _QWORD);
  void (*v131)(uint64_t, _QWORD);
  double v132;
  double v133;
  id v134;
  double v135;
  double v136;
  _BOOL4 v137;
  uint64_t v138;
  _BOOL8 v139;
  uint64_t v140;
  double v141;
  double v142;
  void (*v143)(uint64_t, uint64_t);
  double v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  char v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t);
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  void (*v221)(uint64_t, uint64_t);
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int EnumTagSinglePayload;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  char v236;
  unint64_t v237;
  void (*v238)(_QWORD, _QWORD);
  uint64_t v239;
  char v240;
  void (*v241)(_QWORD, _QWORD);
  char v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  int v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  unint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t (*v346)(_QWORD);
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  unint64_t v406;
  uint64_t v407;
  uint64_t v408;
  unint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  void (*v438)(_QWORD, _QWORD);
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  int v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  unint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  unint64_t v486;
  unint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  int v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  unint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  unint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  void (*v537)(uint64_t, uint64_t);
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  NSObject *v541;
  os_log_type_t v542;
  uint64_t v543;
  uint64_t v544;
  unint64_t v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t v548;
  unint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  unint64_t v599;
  uint64_t v600;
  uint64_t v601;
  unint64_t v602;
  uint64_t v603;
  uint64_t v604;
  void (*v605)(_QWORD, _QWORD);
  uint64_t v606;
  uint64_t v607;
  uint64_t *v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614[2];
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  void (*v618)(uint64_t, _QWORD);
  uint64_t v619;
  uint64_t v620;
  char v621[8];
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  char v625[8];
  unint64_t v626;
  __int128 v627;
  char v628;
  _QWORD v629[2];
  uint64_t v630;
  char v631[8];
  unint64_t v632;
  unint64_t v633;
  void (*v634)(_QWORD, _QWORD);
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  unint64_t v639;
  void (*v640)(_QWORD, _QWORD);
  uint64_t v641;
  uint64_t v642;
  unint64_t v643;
  unint64_t v644;
  uint64_t v645;
  void (*v646)(uint64_t, uint64_t);
  uint64_t v647;
  char *v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  _QWORD v652[4];
  char v653[8];
  _BYTE v654[16];
  char *v655;
  _QWORD v656[2];
  char v657[8];
  char v658[8];
  uint64_t v659;
  uint64_t v660;
  unint64_t v661;
  unint64_t v662;
  uint64_t v663;
  uint64_t v664;

  v649 = a3;
  v648 = (char *)a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_3_64((uint64_t)&v585 - v20);
  v21 = sub_1B00052A8();
  OUTLINED_FUNCTION_12_0(v21, (uint64_t)&v637);
  OUTLINED_FUNCTION_13_5(v22);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v24);
  v25 = sub_1B00058D8();
  OUTLINED_FUNCTION_12_0(v25, (uint64_t)v656);
  OUTLINED_FUNCTION_13_5(v26);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v44);
  v46 = OUTLINED_FUNCTION_3_64((uint64_t)&v585 - v45);
  type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(v46);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_33();
  v51 = OUTLINED_FUNCTION_3_64(v50);
  type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(v51);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v53);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1040);
  OUTLINED_FUNCTION_12_0(v54, (uint64_t)v652);
  OUTLINED_FUNCTION_13_5(v55);
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v57);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_12_0(v58, (uint64_t)v654);
  OUTLINED_FUNCTION_13_5(v59);
  MEMORY[0x1E0C80A78](v60);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v61);
  v62 = sub_1B0006424();
  OUTLINED_FUNCTION_12_0(v62, (uint64_t)v653);
  OUTLINED_FUNCTION_13_5(v63);
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v65);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_12_0(v66, (uint64_t)v658);
  OUTLINED_FUNCTION_13_5(v67);
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v69);
  OUTLINED_FUNCTION_66((uint64_t)&v585 - v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v71);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v72);
  v73 = sub_1B0005BFC();
  OUTLINED_FUNCTION_13_5(*(_QWORD *)(v73 - 8));
  MEMORY[0x1E0C80A78](v74);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v75);
  v645 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E68);
  v76 = *(_QWORD *)(v645 - 8);
  MEMORY[0x1E0C80A78](v645);
  v78 = (char *)&v585 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1B0005B18();
  OUTLINED_FUNCTION_12_0(v79, (uint64_t)&v663);
  OUTLINED_FUNCTION_13_5(v80);
  MEMORY[0x1E0C80A78](v81);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v82);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v83);
  v85 = (char *)&v585 - v84;
  v86 = sub_1B0005FB0();
  OUTLINED_FUNCTION_12_0(v86, (uint64_t)&v664);
  OUTLINED_FUNCTION_13_5(v87);
  MEMORY[0x1E0C80A78](v88);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v89);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v90);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v91);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v92);
  v94 = (char *)&v585 - v93;
  MEMORY[0x1E0C80A78](v95);
  v97 = (char *)&v585 - v96;
  MEMORY[0x1E0C80A78](v98);
  v100 = (char *)&v585 - v99;
  sub_1B0005C8C();
  sub_1B0005D10();
  v101 = (uint64_t)v97;
  v638 = sub_1B0005F38();
  v103 = v102;
  v629[1] = a1;
  sub_1B0005D10();
  sub_1B0005ADC();
  v104 = v73;
  v105 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v78, v648, v645);
  v655 = v85;
  sub_1AFAF9928((uint64_t)sub_1AFE41C68, (uint64_t)v654);
  v107 = v106;
  v652[3] = v85;
  v108 = v647;
  sub_1AFAD7010();
  v109 = v108;
  v110 = v104;
  if (__swift_getEnumTagSinglePayload(v108, 1, v104) == 1)
  {
    OUTLINED_FUNCTION_71();
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_81_6(v101);
    OUTLINED_FUNCTION_81_6((uint64_t)v100);
    OUTLINED_FUNCTION_9_52(v105, *(uint64_t (**)(uint64_t, _QWORD))(v650 + 8));
    sub_1AFACE0DC(v108, &qword_1ED1F4080);
    return 0;
  }
  v112 = v105;
  v645 = v107;
  v649 = v103;
  v648 = v100;
  v113 = v642;
  v114 = *(void (**)(unint64_t, uint64_t, uint64_t))(v642 + 32);
  v115 = v643;
  v588 = v110;
  v114(v643, v109, v110);
  v116 = v646;
  v117 = (void (*)(char *, _QWORD, _QWORD))*((_QWORD *)v646 + 13);
  v118 = v652[0];
  v117(v94, *MEMORY[0x1E0CEEA68], v652[0]);
  v119 = sub_1AFB36A14(v101, (uint64_t)v94);
  v120 = *((_QWORD *)v116 + 1);
  OUTLINED_FUNCTION_62_4((uint64_t)v94);
  v121 = *((_QWORD *)v116 + 2);
  OUTLINED_FUNCTION_48_10(v644, v101);
  v647 = v101;
  if ((v119 & 1) == 0)
  {
    v117(v94, *MEMORY[0x1E0CEEB80], v118);
    v122 = v644;
    v123 = sub_1AFB36A14(v644, (uint64_t)v94);
    OUTLINED_FUNCTION_62_4((uint64_t)v94);
    OUTLINED_FUNCTION_62_4(v122);
    if ((v123 & 1) != 0)
      goto LABEL_7;
    v585 = v121;
    v586 = v94;
    v661 = 0;
    v662 = 0xE000000000000000;
    v660 = MEMORY[0x1E0DEE9D8];
    sub_1B0005CD4();
    v128 = (void *)objc_opt_self();
    v129 = objc_msgSend(v128, sel_celsius);
    OUTLINED_FUNCTION_85_6();
    v130 = v634;
    OUTLINED_FUNCTION_111_5();

    v131 = *(void (**)(uint64_t, _QWORD))(v617 + 8);
    OUTLINED_FUNCTION_98_3();
    OUTLINED_FUNCTION_112_4();
    v133 = v132;
    v131(v115, v130);
    sub_1B0005CA4();
    v134 = objc_msgSend(v128, sel_celsius);
    OUTLINED_FUNCTION_111_5();

    OUTLINED_FUNCTION_98_3();
    OUTLINED_FUNCTION_112_4();
    v136 = v135;
    v618 = v131;
    v131(v115, v130);
    v587 = v112;
    if (v133 <= -25.0)
    {
      v137 = 1;
      v139 = 1;
      v138 = v629[0];
      if (v133 >= 39.0)
        goto LABEL_16;
    }
    else
    {
      v137 = v136 - v133 > 10.0;
      v138 = v629[0];
      if (v133 >= 39.0)
      {
        v139 = 1;
LABEL_16:
        v140 = v624;
        OUTLINED_FUNCTION_102_3();
        OUTLINED_FUNCTION_85_6();
        sub_1B0006418();
        (*(void (**)(uint64_t, unint64_t))(v619 + 8))(v140, v626);
        OUTLINED_FUNCTION_78_4();
        v142 = v141;
        v143 = *(void (**)(uint64_t, uint64_t))(v620 + 8);
        v143(v115, v140);
        OUTLINED_FUNCTION_85_6();
        sub_1B0005C98();
        OUTLINED_FUNCTION_78_4();
        v145 = v144;
        (*(void (**)(uint64_t, uint64_t))(v622 + 8))(v115, v140);
        v644 = v120;
        if (!v137 && !v139 && v142 < 25.0 && v145 > 1.6)
          goto LABEL_45;
        sub_1B0008644();
        v146 = v660;
        swift_bridgeObjectRetain();
        v147 = OUTLINED_FUNCTION_105_4();
        if ((v147 & 1) == 0)
        {
          OUTLINED_FUNCTION_32_41(v147, v148, v149, v150, v151, v152);
          v146 = v553;
        }
        v120 = *(_QWORD *)(v146 + 16);
        v153 = *(_QWORD *)(v146 + 24);
        if (v120 >= v153 >> 1)
        {
          OUTLINED_FUNCTION_31_47(v151, v152, v153);
          v146 = v554;
        }
        *(_QWORD *)(v146 + 16) = v120 + 1;
        OUTLINED_FUNCTION_46_9(v146 + 16 * v120);
        if (v137 || (OUTLINED_FUNCTION_61_3(), v139))
        {
          sub_1B0008644();
          v154 = v633;
          sub_1B0005CD4();
          static Set<>.full.getter();
          v155 = OUTLINED_FUNCTION_16_81();
          OUTLINED_FUNCTION_36_32(v155);
          v156 = OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_37_8(v156, &qword_1ED1F44D8);
          OUTLINED_FUNCTION_25_3();
          v157 = OUTLINED_FUNCTION_28_4();
          v158 = sub_1AFCBBF68((uint64_t *)v139, 0, v157, v154);
          v160 = v159;
          v161 = swift_release();
          OUTLINED_FUNCTION_99_5(v161, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
          OUTLINED_FUNCTION_24_64(v154);
          v162 = v660;
          OUTLINED_FUNCTION_19_0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_15_33(0, *(_QWORD *)(v162 + 16) + 1, v163, v164, v165, v166);
            v162 = v555;
          }
          v120 = *(_QWORD *)(v162 + 16);
          v167 = *(_QWORD *)(v162 + 24);
          if (v120 >= v167 >> 1)
          {
            OUTLINED_FUNCTION_15_33(v167 > 1, v120 + 1, v163, v164, v165, v166);
            v162 = v556;
          }
          *(_QWORD *)(v162 + 16) = v120 + 1;
          v168 = v162 + 16 * v120;
          *(_QWORD *)(v168 + 32) = v158;
          *(_QWORD *)(v168 + 40) = v160;
          OUTLINED_FUNCTION_20_0();
          v660 = v162;
          OUTLINED_FUNCTION_61_3();
        }
        if (v142 < 25.0)
        {
LABEL_43:
          if (v145 <= 1.6)
            sub_1B0008644();
LABEL_45:
          sub_1B0005CEC();
          sub_1B0005ADC();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
          v213 = *(_QWORD *)(sub_1B0005B00() - 8);
          v214 = *(_QWORD *)(v213 + 72);
          v215 = (*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80);
          v216 = swift_allocObject();
          v627 = xmmword_1B002B5A0;
          *(_OWORD *)(v216 + 16) = xmmword_1B002B5A0;
          v217 = v216 + v215;
          OUTLINED_FUNCTION_114_3(v217, *MEMORY[0x1E0CB1158]);
          OUTLINED_FUNCTION_114_3(v217 + v214, *MEMORY[0x1E0CB1160]);
          OUTLINED_FUNCTION_114_3(v217 + 2 * v214, *MEMORY[0x1E0CB1130]);
          sub_1AFAFAA98();
          v218 = v610;
          sub_1B00058CC();
          v219 = v632;
          sub_1B0005A64();
          OUTLINED_FUNCTION_20_0();
          v220 = v630;
          v221 = *(void (**)(uint64_t, uint64_t))(v630 + 8);
          v221(v218, v138);
          sub_1B000523C();
          v222 = v611;
          v223 = v219;
          sub_1B0005AB8();
          OUTLINED_FUNCTION_8_105(v222);
          if (v200)
          {
            OUTLINED_FUNCTION_100_4();
            sub_1AFACE0DC(v222, &qword_1ED1F4BA0);
          }
          else
          {
            OUTLINED_FUNCTION_94((uint64_t)v640, v222, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 32));
          }
          v224 = v635;
          v225 = v614[1];
          v226 = v613;
          v227 = v138;
          sub_1B000523C();
          v228 = v612;
          OUTLINED_FUNCTION_67_6();
          v229 = v228;
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v228, 1, v227);
          v646 = v221;
          v231 = v227;
          if (EnumTagSinglePayload == 1)
          {
            v232 = sub_1B00058CC();
            OUTLINED_FUNCTION_37_8(v232, &qword_1ED1F4BA0);
          }
          else
          {
            OUTLINED_FUNCTION_94(v224, v229, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 32));
          }
          v233 = v615;
          v234 = v223;
          sub_1B000523C();
          OUTLINED_FUNCTION_67_6();
          OUTLINED_FUNCTION_8_105(v226);
          if (v200)
          {
            OUTLINED_FUNCTION_100_4();
            sub_1AFACE0DC(v226, &qword_1ED1F4BA0);
          }
          else
          {
            OUTLINED_FUNCTION_94(v637, v226, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 32));
          }
          sub_1B000523C();
          sub_1B000526C();
          OUTLINED_FUNCTION_67_6();
          OUTLINED_FUNCTION_8_105(v233);
          if (v200)
          {
            OUTLINED_FUNCTION_100_4();
            sub_1AFACE0DC(v233, &qword_1ED1F4BA0);
          }
          else
          {
            OUTLINED_FUNCTION_94(v636, v233, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 32));
          }
          sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          v235 = v639;
          v236 = OUTLINED_FUNCTION_41_17();
          v237 = *(_QWORD *)(v220 + 16);
          OUTLINED_FUNCTION_48_10(v225, v235);
          v238 = (void (*)(_QWORD, _QWORD))v614[0];
          OUTLINED_FUNCTION_48_10(v614[0], v224);
          if ((v236 & 1) != 0)
          {
            OUTLINED_FUNCTION_91_5((uint64_t)v238);
            OUTLINED_FUNCTION_48_9(v225);
            v239 = v616;
            goto LABEL_60;
          }
          v240 = OUTLINED_FUNCTION_41_17();
          v241 = v238;
          v238 = v646;
          v646((uint64_t)v241, v231);
          v238(v225, v231);
          v239 = v616;
          if ((v240 & 1) != 0)
          {
LABEL_60:
            OUTLINED_FUNCTION_73_6();
            v242 = sub_1B0005854();
            v243 = v606;
            OUTLINED_FUNCTION_48_10(v606, v225);
            OUTLINED_FUNCTION_48_10(v239, v637);
            OUTLINED_FUNCTION_89_7();
            if ((v242 & 1) != 0)
            {
              v244 = OUTLINED_FUNCTION_41_17();
              OUTLINED_FUNCTION_57_9(v239);
              OUTLINED_FUNCTION_97(v243);
              v245 = v650;
              if ((v244 & 1) == 0)
              {
                v246 = v603;
                OUTLINED_FUNCTION_48_10(v603, v637);
                OUTLINED_FUNCTION_17_87();
                OUTLINED_FUNCTION_23_66();
                OUTLINED_FUNCTION_9_52(v239, *(uint64_t (**)(uint64_t, _QWORD))(v245 + 8));
                OUTLINED_FUNCTION_49_9();
                OUTLINED_FUNCTION_35_30(v246, &qword_1ED1F4BA0, (uint64_t)v621);
                OUTLINED_FUNCTION_8_105(v245);
                if (!v200)
                {
                  OUTLINED_FUNCTION_90_5();
                  v244 = v597;
                  OUTLINED_FUNCTION_40_20(v597);
                  OUTLINED_FUNCTION_35_30(v237, &qword_1ED1F4BA0, (uint64_t)&v615);
                  OUTLINED_FUNCTION_8_105(v245);
                  v239 = v647;
                  if (!v200)
                  {
                    OUTLINED_FUNCTION_40_20(v595);
                    OUTLINED_FUNCTION_51_3();
                    if (v373)
                    {
                      OUTLINED_FUNCTION_52_9();
                    }
                    else
                    {
                      sub_1B0008644();
                      v246 = v660;
                      v400 = OUTLINED_FUNCTION_105_4();
                      if ((v400 & 1) == 0)
                      {
                        OUTLINED_FUNCTION_32_41(v400, v401, v402, v403, v404, v405);
                        v246 = v577;
                      }
                      v237 = *(_QWORD *)(v246 + 16);
                      v406 = *(_QWORD *)(v246 + 24);
                      if (v237 >= v406 >> 1)
                      {
                        OUTLINED_FUNCTION_31_47(v404, v405, v406);
                        v246 = v578;
                      }
                      *(_QWORD *)(v246 + 16) = v237 + 1;
                      OUTLINED_FUNCTION_46_9(v246 + 16 * v237);
                      v244 = v597;
                    }
                    v407 = OUTLINED_FUNCTION_96_4();
                    OUTLINED_FUNCTION_53_8(v407, v244, v595, v408);
                    OUTLINED_FUNCTION_20_0();
                    if ((sub_1AFB36A14(v239, v237) & 1) != 0)
                    {
                      sub_1B0008644();
                      v409 = v633;
                      v410 = v643;
                      sub_1B0005BC0();
                      static Set<>.full.getter();
                      OUTLINED_FUNCTION_16_81();
                      v411 = v623;
                      OUTLINED_FUNCTION_77_5();
                      v412 = (uint64_t)v608;
                      static WeatherFormatStyle<>.weather(_:locale:)();
                      OUTLINED_FUNCTION_20_0();
                      sub_1AFACE0DC(v411, &qword_1ED1F44D8);
                      OUTLINED_FUNCTION_25_3();
                      v413 = OUTLINED_FUNCTION_28_4();
                      v645 = OUTLINED_FUNCTION_37_33(v413);
                      v649 = v414;
                      v415 = OUTLINED_FUNCTION_41();
                      OUTLINED_FUNCTION_99_5(v415, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                      OUTLINED_FUNCTION_15_91(v409);
                      sub_1B0005BA8();
                      static Set<>.full.getter();
                      OUTLINED_FUNCTION_77_5();
                      static WeatherFormatStyle<>.weather(_:locale:)();
                      OUTLINED_FUNCTION_4_15();
                      sub_1AFACE0DC(v411, &qword_1ED1F44D8);
                      v416 = OUTLINED_FUNCTION_71_8();
                      v417 = OUTLINED_FUNCTION_37_33(v416);
                      v419 = v418;
                      OUTLINED_FUNCTION_41();
                      sub_1AFAE2D74(v412, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                      ((void (*)(unint64_t, _QWORD))v246)(v409, v238);
                      v424 = v660;
                      v425 = *(_QWORD *)(v660 + 16);
                      v426 = v425 + 2;
                      if (!__OFADD__(v425, 2))
                      {
                        v427 = OUTLINED_FUNCTION_97_5();
                        if (v427 && v426 <= *(_QWORD *)(v424 + 24) >> 1)
                        {
                          v432 = v417;
                        }
                        else
                        {
                          v432 = v417;
                          if (*(_QWORD *)(v424 + 16) <= v426)
                            v517 = v426;
                          else
                            v517 = *(_QWORD *)(v424 + 16);
                          OUTLINED_FUNCTION_7_103(v427, v517, v428, v429, v430, v431);
                          v424 = v518;
                        }
                        v519 = v649;
                        v234 = *(_QWORD *)(v424 + 16);
                        v520 = *(_QWORD *)(v424 + 24);
                        v225 = v234 + 1;
                        OUTLINED_FUNCTION_19_0();
                        if (v234 >= v520 >> 1)
                        {
                          OUTLINED_FUNCTION_7_103(v520 > 1, v234 + 1, v521, v522, v523, v524);
                          v424 = v575;
                        }
                        *(_QWORD *)(v424 + 16) = v225;
                        v525 = v424 + 16 * v234;
                        *(_QWORD *)(v525 + 32) = v645;
                        *(_QWORD *)(v525 + 40) = v519;
                        v120 = *(_QWORD *)(v424 + 24);
                        OUTLINED_FUNCTION_94_0();
                        if (v225 >= v120 >> 1)
                        {
                          OUTLINED_FUNCTION_7_103(v120 > 1, v234 + 2, v526, v527, v528, v529);
                          v424 = v576;
                        }
                        OUTLINED_FUNCTION_68_7();
                        *(_QWORD *)(v530 + 32) = v432;
                        *(_QWORD *)(v530 + 40) = v419;
LABEL_200:
                        OUTLINED_FUNCTION_20_0();
                        OUTLINED_FUNCTION_15();
                        v660 = v424;
                        OUTLINED_FUNCTION_56_6(v591);
                        OUTLINED_FUNCTION_70_4((uint64_t)&v618);
                        OUTLINED_FUNCTION_110_3((uint64_t)&v620);
LABEL_201:
                        OUTLINED_FUNCTION_22_64((uint64_t)&v626);
                        v329 = &v628;
LABEL_202:
                        OUTLINED_FUNCTION_22_64((uint64_t)v329);
                        OUTLINED_FUNCTION_73_6();
                        goto LABEL_203;
                      }
                      __break(1u);
                    }
                    else
                    {
                      OUTLINED_FUNCTION_39_22();
                      v412 = v633;
                      v409 = v643;
                      sub_1B0005BC0();
                      static Set<>.full.getter();
                      OUTLINED_FUNCTION_24();
                      v433 = v623;
                      OUTLINED_FUNCTION_65_6();
                      v434 = (uint64_t)v608;
                      OUTLINED_FUNCTION_88_4();
                      OUTLINED_FUNCTION_4_15();
                      sub_1AFACE0DC(v433, &qword_1ED1F44D8);
                      OUTLINED_FUNCTION_25_3();
                      v435 = OUTLINED_FUNCTION_28_4();
                      v638 = OUTLINED_FUNCTION_59_3(v435);
                      v649 = v436;
                      v437 = OUTLINED_FUNCTION_41();
                      OUTLINED_FUNCTION_101_3(v437, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                      v438 = v634;
                      v231 = (uint64_t)v618;
                      v618(v412, v634);
                      v645 = OUTLINED_FUNCTION_106_3();
                      v419 = v439;
                      sub_1B0005BA8();
                      static Set<>.full.getter();
                      OUTLINED_FUNCTION_65_6();
                      OUTLINED_FUNCTION_88_4();
                      OUTLINED_FUNCTION_4_15();
                      sub_1AFACE0DC(v433, &qword_1ED1F44D8);
                      v440 = sub_1B00066D0();
                      v238 = (void (*)(_QWORD, _QWORD))OUTLINED_FUNCTION_59_3(v440);
                      v246 = v441;
                      OUTLINED_FUNCTION_41();
                      sub_1AFAE2D74(v434, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                      ((void (*)(uint64_t, _QWORD))v231)(v412, v438);
                      v424 = v660;
                      v442 = *(_QWORD *)(v660 + 16);
                      v410 = v442 + 3;
                      if (!__OFADD__(v442, 3))
                      {
                        v443 = OUTLINED_FUNCTION_97_5();
                        if (!v443 || v410 > *(_QWORD *)(v424 + 24) >> 1)
                        {
                          if (*(_QWORD *)(v424 + 16) <= v410)
                            v448 = v410;
                          else
                            v448 = *(_QWORD *)(v424 + 16);
                          OUTLINED_FUNCTION_7_103(v443, v448, v444, v445, v446, v447);
                          v424 = v449;
                        }
                        v412 = v649;
                        v231 = *(_QWORD *)(v424 + 16);
                        v409 = *(_QWORD *)(v424 + 24);
                        v410 = v231 + 1;
                        swift_bridgeObjectRetain();
                        if (v231 < v409 >> 1)
                          goto LABEL_163;
                        goto LABEL_223;
                      }
                    }
                    __break(1u);
LABEL_223:
                    OUTLINED_FUNCTION_7_103(v409 > 1, v410, v420, v421, v422, v423);
                    v424 = v572;
LABEL_163:
                    *(_QWORD *)(v424 + 16) = v410;
                    v450 = v424 + 16 * v231;
                    *(_QWORD *)(v450 + 32) = v638;
                    *(_QWORD *)(v450 + 40) = v412;
                    v451 = *(_QWORD *)(v424 + 24);
                    OUTLINED_FUNCTION_94_0();
                    if (v410 >= v451 >> 1)
                    {
                      OUTLINED_FUNCTION_7_103(v451 > 1, v231 + 2, v452, v453, v454, v455);
                      v424 = v573;
                    }
                    *(_QWORD *)(v424 + 16) = v231 + 2;
                    v456 = v424 + 16 * v410;
                    *(_QWORD *)(v456 + 32) = v645;
                    *(_QWORD *)(v456 + 40) = v419;
                    v225 = *(_QWORD *)(v424 + 16);
                    v120 = *(_QWORD *)(v424 + 24);
                    OUTLINED_FUNCTION_19_0();
                    if (v225 >= v120 >> 1)
                    {
                      OUTLINED_FUNCTION_7_103(v120 > 1, v225 + 1, v457, v458, v459, v460);
                      v424 = v574;
                    }
                    OUTLINED_FUNCTION_61_3();
                    *(_QWORD *)(v424 + 16) = v225 + 1;
                    v461 = v424 + 16 * v225;
                    *(_QWORD *)(v461 + 32) = v238;
                    *(_QWORD *)(v461 + 40) = v246;
                    OUTLINED_FUNCTION_40();
                    v234 = v632;
                    goto LABEL_200;
                  }
                  OUTLINED_FUNCTION_50_8();
                }
                v247 = OUTLINED_FUNCTION_52_9();
                OUTLINED_FUNCTION_76(v247, &qword_1ED1F4BA0);
                OUTLINED_FUNCTION_26_60();
                if (v248)
                {
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_8_58(v237);
                  v249 = &v628;
LABEL_84:
                  OUTLINED_FUNCTION_22_64((uint64_t)v249);
                  goto LABEL_204;
                }
                OUTLINED_FUNCTION_21_64();
                OUTLINED_FUNCTION_12_100();
                static Set<>.full.getter();
                v348 = OUTLINED_FUNCTION_16_81();
                OUTLINED_FUNCTION_1_118(v348);
                v349 = OUTLINED_FUNCTION_20_0();
                OUTLINED_FUNCTION_95_4(v349, &qword_1ED1F44D8);
                v225 = OUTLINED_FUNCTION_25_3();
                v350 = OUTLINED_FUNCTION_28_4();
                v630 = OUTLINED_FUNCTION_14_98(v350);
                v645 = v351;
                OUTLINED_FUNCTION_41();
                OUTLINED_FUNCTION_30_54();
                OUTLINED_FUNCTION_15_91(v237);
                OUTLINED_FUNCTION_42_19();
                static Set<>.full.getter();
                OUTLINED_FUNCTION_4_115();
                OUTLINED_FUNCTION_4_15();
                sub_1AFACE0DC(v239, &qword_1ED1F44D8);
                v352 = OUTLINED_FUNCTION_71_8();
                OUTLINED_FUNCTION_11_94(v352);
                OUTLINED_FUNCTION_45_10();
                OUTLINED_FUNCTION_30_54();
                OUTLINED_FUNCTION_63_5();
                OUTLINED_FUNCTION_82_6();
                if (v202)
                {
                  __break(1u);
                }
                else
                {
                  v357 = OUTLINED_FUNCTION_75_6();
                  if (!v357 || (OUTLINED_FUNCTION_80_6(), !(v201 ^ v202 | v200)))
                  {
                    if (*(_QWORD *)(v239 + 16) <= (int64_t)v225)
                      v362 = v225;
                    else
                      v362 = *(_QWORD *)(v239 + 16);
                    OUTLINED_FUNCTION_2_121(v357, v362, v358, v359, v360, v361);
                    v239 = v363;
                  }
                  OUTLINED_FUNCTION_18_76();
                  if ((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle < v120 >> 1)
                    goto LABEL_123;
                }
                OUTLINED_FUNCTION_2_121(v120 > 1, v225, v353, v354, v355, v356);
                v239 = v566;
LABEL_123:
                OUTLINED_FUNCTION_10_101();
                if (v225 >= v120 >> 1)
                {
                  OUTLINED_FUNCTION_2_121(v120 > 1, (uint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, v364, v365, v366, v367);
                  v239 = v567;
                }
                OUTLINED_FUNCTION_9_105();
                if (v225 >= (unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle >> 1)
                {
                  OUTLINED_FUNCTION_2_121((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle > 1, v237, v368, v369, v370, v371);
                  v239 = v568;
                }
                v234 = v632;
                *(_QWORD *)(v239 + 16) = v237;
                v372 = v239 + 16 * v225;
                *(_QWORD *)(v372 + 32) = v245;
                *(_QWORD *)(v372 + 40) = v244;
                OUTLINED_FUNCTION_20_0();
                OUTLINED_FUNCTION_4_15();
                OUTLINED_FUNCTION_71();
                v660 = v239;
                goto LABEL_201;
              }
            }
            else
            {
              OUTLINED_FUNCTION_91_5(v239);
              OUTLINED_FUNCTION_48_9(v243);
              v245 = v650;
            }
            v250 = (uint64_t)v646;
            v251 = sub_1B0005854();
            v238 = v605;
            OUTLINED_FUNCTION_48_10((uint64_t)v605, v225);
            v252 = v604;
            OUTLINED_FUNCTION_48_10(v604, v636);
            if ((v251 & 1) != 0)
            {
              v253 = OUTLINED_FUNCTION_41_17();
              OUTLINED_FUNCTION_97(v252);
              OUTLINED_FUNCTION_97((uint64_t)v238);
              if ((v253 & 1) == 0)
              {
                v254 = v600;
                OUTLINED_FUNCTION_48_10(v600, v637);
                OUTLINED_FUNCTION_17_87();
                OUTLINED_FUNCTION_23_66();
                OUTLINED_FUNCTION_9_52(v250, *(uint64_t (**)(uint64_t, _QWORD))(v245 + 8));
                OUTLINED_FUNCTION_49_9();
                OUTLINED_FUNCTION_35_30(v254, &qword_1ED1F4BA0, (uint64_t)&v619);
                OUTLINED_FUNCTION_8_105(v245);
                v225 = v639;
                v238 = v640;
                if (!v200)
                {
                  OUTLINED_FUNCTION_90_5();
                  v251 = v594;
                  OUTLINED_FUNCTION_40_20(v594);
                  OUTLINED_FUNCTION_35_30(v237, &qword_1ED1F4BA0, (uint64_t)v614);
                  OUTLINED_FUNCTION_8_105(v245);
                  v250 = v647;
                  if (!v200)
                  {
                    OUTLINED_FUNCTION_40_20(v593);
                    OUTLINED_FUNCTION_51_3();
                    if (v399)
                    {
                      OUTLINED_FUNCTION_52_9();
                    }
                    else
                    {
                      OUTLINED_FUNCTION_39_22();
                      v462 = v660;
                      v463 = OUTLINED_FUNCTION_105_4();
                      if ((v463 & 1) == 0)
                      {
                        OUTLINED_FUNCTION_32_41(v463, v464, v465, v466, v467, v468);
                        v462 = v583;
                      }
                      v470 = *(_QWORD *)(v462 + 16);
                      v469 = *(_QWORD *)(v462 + 24);
                      if (v470 >= v469 >> 1)
                      {
                        OUTLINED_FUNCTION_31_47(v467, v468, v469);
                        v462 = v584;
                      }
                      *(_QWORD *)(v462 + 16) = v470 + 1;
                      OUTLINED_FUNCTION_46_9(v462 + 16 * v470);
                      v251 = v594;
                    }
                    v471 = v589;
                    OUTLINED_FUNCTION_53_8(v645, v251, v593, v589);
                    OUTLINED_FUNCTION_15();
                    if ((sub_1AFB36A14(v250, v471) & 1) != 0)
                    {
                      sub_1B0008644();
                      v472 = v633;
                      OUTLINED_FUNCTION_72_4();
                      static Set<>.full.getter();
                      v473 = OUTLINED_FUNCTION_16_81();
                      OUTLINED_FUNCTION_36_32(v473);
                      v474 = OUTLINED_FUNCTION_20_0();
                      OUTLINED_FUNCTION_37_8(v474, &qword_1ED1F44D8);
                      OUTLINED_FUNCTION_25_3();
                      v475 = OUTLINED_FUNCTION_28_4();
                      v476 = OUTLINED_FUNCTION_37_33(v475);
                      v478 = v477;
                      v479 = OUTLINED_FUNCTION_41();
                      OUTLINED_FUNCTION_99_5(v479, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                      OUTLINED_FUNCTION_24_64(v472);
                      v480 = v660;
                      OUTLINED_FUNCTION_19_0();
                      if ((OUTLINED_FUNCTION_97_5() & 1) == 0)
                      {
                        OUTLINED_FUNCTION_7_103(0, *(_QWORD *)(v480 + 16) + 1, v481, v482, v483, v484);
                        v480 = v579;
                      }
                      v486 = *(_QWORD *)(v480 + 16);
                      v485 = *(_QWORD *)(v480 + 24);
                      if (v486 >= v485 >> 1)
                      {
                        OUTLINED_FUNCTION_7_103(v485 > 1, v486 + 1, v481, v482, v483, v484);
                        v480 = v580;
                      }
                      *(_QWORD *)(v480 + 16) = v486 + 1;
                      v487 = v480 + 16 * v486;
                      *(_QWORD *)(v487 + 32) = v476;
                      *(_QWORD *)(v487 + 40) = v478;
LABEL_190:
                      OUTLINED_FUNCTION_20_0();
                      v660 = v480;
                      OUTLINED_FUNCTION_56_6(v589);
                      OUTLINED_FUNCTION_70_4((uint64_t)&v616);
                      OUTLINED_FUNCTION_110_3((uint64_t)&v617);
                      OUTLINED_FUNCTION_22_64((uint64_t)&v623);
                      OUTLINED_FUNCTION_22_64((uint64_t)v625);
LABEL_203:
                      OUTLINED_FUNCTION_89_7();
                      goto LABEL_204;
                    }
                    OUTLINED_FUNCTION_21_64();
                    v488 = sub_1B0005F38();
                    v490 = v489;
                    OUTLINED_FUNCTION_85_6();
                    OUTLINED_FUNCTION_72_4();
                    static Set<>.full.getter();
                    v491 = OUTLINED_FUNCTION_16_81();
                    __swift_storeEnumTagSinglePayload(v623, 1, 1, v491);
                    v492 = v608;
                    static WeatherFormatStyle<>.weather(_:locale:)();
                    v493 = OUTLINED_FUNCTION_20_0();
                    OUTLINED_FUNCTION_37_8(v493, &qword_1ED1F44D8);
                    OUTLINED_FUNCTION_25_3();
                    v494 = OUTLINED_FUNCTION_28_4();
                    v495 = sub_1AFCBBF68(v492, 0, v494, v234);
                    v497 = v496;
                    v498 = OUTLINED_FUNCTION_41();
                    OUTLINED_FUNCTION_101_3(v498, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                    OUTLINED_FUNCTION_24_64(v234);
                    v480 = v660;
                    v503 = *(_QWORD *)(v660 + 16);
                    v225 = v503 + 2;
                    if (__OFADD__(v503, 2))
                    {
                      __break(1u);
                    }
                    else
                    {
                      v504 = OUTLINED_FUNCTION_97_5();
                      if (!v504 || (int64_t)v225 > *(_QWORD *)(v480 + 24) >> 1)
                      {
                        if (*(_QWORD *)(v480 + 16) <= (int64_t)v225)
                          v509 = v225;
                        else
                          v509 = *(_QWORD *)(v480 + 16);
                        OUTLINED_FUNCTION_7_103(v504, v509, v505, v506, v507, v508);
                        v480 = v510;
                      }
                      v234 = *(_QWORD *)(v480 + 16);
                      v120 = *(_QWORD *)(v480 + 24);
                      v225 = v234 + 1;
                      OUTLINED_FUNCTION_94_0();
                      if (v234 < v120 >> 1)
                        goto LABEL_187;
                    }
                    OUTLINED_FUNCTION_7_103(v120 > 1, v225, v499, v500, v501, v502);
                    v480 = v581;
LABEL_187:
                    *(_QWORD *)(v480 + 16) = v225;
                    v511 = v480 + 16 * v234;
                    *(_QWORD *)(v511 + 32) = v488;
                    *(_QWORD *)(v511 + 40) = v490;
                    v120 = *(_QWORD *)(v480 + 24);
                    OUTLINED_FUNCTION_19_0();
                    if (v225 >= v120 >> 1)
                    {
                      OUTLINED_FUNCTION_7_103(v120 > 1, v234 + 2, v512, v513, v514, v515);
                      v480 = v582;
                    }
                    OUTLINED_FUNCTION_68_7();
                    *(_QWORD *)(v516 + 32) = v495;
                    *(_QWORD *)(v516 + 40) = v497;
                    OUTLINED_FUNCTION_15();
                    OUTLINED_FUNCTION_73_6();
                    goto LABEL_190;
                  }
                  OUTLINED_FUNCTION_50_8();
                }
                v255 = OUTLINED_FUNCTION_52_9();
                OUTLINED_FUNCTION_76(v255, &qword_1ED1F4BA0);
                OUTLINED_FUNCTION_26_60();
                if (v256)
                {
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_8_58(v237);
                  v249 = v625;
                  goto LABEL_84;
                }
                OUTLINED_FUNCTION_21_64();
                OUTLINED_FUNCTION_12_100();
                static Set<>.full.getter();
                v374 = OUTLINED_FUNCTION_16_81();
                OUTLINED_FUNCTION_1_118(v374);
                v375 = OUTLINED_FUNCTION_20_0();
                OUTLINED_FUNCTION_95_4(v375, &qword_1ED1F44D8);
                v225 = OUTLINED_FUNCTION_25_3();
                v376 = OUTLINED_FUNCTION_28_4();
                v630 = OUTLINED_FUNCTION_14_98(v376);
                v645 = v377;
                OUTLINED_FUNCTION_41();
                OUTLINED_FUNCTION_30_54();
                OUTLINED_FUNCTION_15_91(v237);
                OUTLINED_FUNCTION_42_19();
                static Set<>.full.getter();
                OUTLINED_FUNCTION_4_115();
                OUTLINED_FUNCTION_4_15();
                sub_1AFACE0DC(v250, &qword_1ED1F44D8);
                v378 = OUTLINED_FUNCTION_71_8();
                OUTLINED_FUNCTION_11_94(v378);
                OUTLINED_FUNCTION_45_10();
                OUTLINED_FUNCTION_30_54();
                OUTLINED_FUNCTION_63_5();
                OUTLINED_FUNCTION_82_6();
                if (v202)
                {
                  __break(1u);
                }
                else
                {
                  v383 = OUTLINED_FUNCTION_75_6();
                  if (!v383 || (OUTLINED_FUNCTION_80_6(), !(v201 ^ v202 | v200)))
                  {
                    if (*(_QWORD *)(v250 + 16) <= (int64_t)v225)
                      v388 = v225;
                    else
                      v388 = *(_QWORD *)(v250 + 16);
                    OUTLINED_FUNCTION_2_121(v383, v388, v384, v385, v386, v387);
                    v250 = v389;
                  }
                  OUTLINED_FUNCTION_18_76();
                  if ((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle < v120 >> 1)
                    goto LABEL_138;
                }
                OUTLINED_FUNCTION_2_121(v120 > 1, v225, v379, v380, v381, v382);
                v250 = v569;
LABEL_138:
                OUTLINED_FUNCTION_10_101();
                if (v225 >= v120 >> 1)
                {
                  OUTLINED_FUNCTION_2_121(v120 > 1, (uint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, v390, v391, v392, v393);
                  v250 = v570;
                }
                OUTLINED_FUNCTION_9_105();
                if (v225 >= (unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle >> 1)
                {
                  OUTLINED_FUNCTION_2_121((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle > 1, v237, v394, v395, v396, v397);
                  v250 = v571;
                }
                v234 = v632;
                *(_QWORD *)(v250 + 16) = v237;
                v398 = v250 + 16 * v225;
                *(_QWORD *)(v398 + 32) = v245;
                *(_QWORD *)(v398 + 40) = v251;
                OUTLINED_FUNCTION_20_0();
                OUTLINED_FUNCTION_4_15();
                OUTLINED_FUNCTION_71();
                v660 = v250;
                OUTLINED_FUNCTION_22_64((uint64_t)&v623);
                v329 = v625;
                goto LABEL_202;
              }
            }
            else
            {
              OUTLINED_FUNCTION_97(v252);
              OUTLINED_FUNCTION_97((uint64_t)v238);
            }
            v257 = v607;
            OUTLINED_FUNCTION_89_7();
            OUTLINED_FUNCTION_48_10(v258, (uint64_t)v238);
            OUTLINED_FUNCTION_17_87();
            OUTLINED_FUNCTION_23_66();
            OUTLINED_FUNCTION_9_52(v250, *(uint64_t (**)(uint64_t, _QWORD))(v245 + 8));
            OUTLINED_FUNCTION_49_9();
            OUTLINED_FUNCTION_35_30(v257, &qword_1ED1F4BA0, (uint64_t)v629);
            OUTLINED_FUNCTION_8_105(v245);
            v225 = v639;
            if (!v200)
            {
              OUTLINED_FUNCTION_90_5();
              v251 = v601;
              OUTLINED_FUNCTION_40_20(v601);
              OUTLINED_FUNCTION_35_30(v237, &qword_1ED1F4BA0, (uint64_t)&v622);
              OUTLINED_FUNCTION_8_105(v245);
              if (!v200)
              {
                OUTLINED_FUNCTION_52_9();
                v330 = v598;
                OUTLINED_FUNCTION_40_20(v598);
                OUTLINED_FUNCTION_53_8(v645, v251, v330, (uint64_t)v586);
                OUTLINED_FUNCTION_20_0();
                ((void (*)(char *, _QWORD))v120)(v648, v652[0]);
                OUTLINED_FUNCTION_103_4();
                OUTLINED_FUNCTION_107_3();
                v661 = 0xD00000000000002BLL;
                v662 = 0x80000001B005FAE0;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F46B0);
                v331 = OUTLINED_FUNCTION_20();
                *(_OWORD *)(v331 + 16) = v627;
                *(_QWORD *)(v331 + 32) = sub_1B0005F38();
                *(_QWORD *)(v331 + 40) = v332;
                v333 = v633;
                sub_1B0005BC0();
                static Set<>.full.getter();
                OUTLINED_FUNCTION_24();
                v334 = v623;
                OUTLINED_FUNCTION_64_3();
                v225 = (unint64_t)v608;
                OUTLINED_FUNCTION_87_6();
                v335 = OUTLINED_FUNCTION_4_15();
                OUTLINED_FUNCTION_76(v335, &qword_1ED1F44D8);
                OUTLINED_FUNCTION_25_3();
                v336 = OUTLINED_FUNCTION_28_4();
                v337 = OUTLINED_FUNCTION_60_5(v336);
                v120 = v338;
                v339 = OUTLINED_FUNCTION_41();
                OUTLINED_FUNCTION_101_3(v339, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
                OUTLINED_FUNCTION_24_64(v333);
                *(_QWORD *)(v331 + 48) = v337;
                *(_QWORD *)(v331 + 56) = v120;
                v234 = v632;
                OUTLINED_FUNCTION_61_3();
                OUTLINED_FUNCTION_72_4();
                static Set<>.full.getter();
                OUTLINED_FUNCTION_64_3();
                OUTLINED_FUNCTION_87_6();
                OUTLINED_FUNCTION_4_15();
                sub_1AFACE0DC(v334, &qword_1ED1F44D8);
                v340 = (uint64_t)v640;
                v341 = sub_1B00066D0();
                v342 = OUTLINED_FUNCTION_60_5(v341);
                v344 = v343;
                OUTLINED_FUNCTION_41();
                OUTLINED_FUNCTION_73_6();
                sub_1AFAE2D74(v345, v346);
                v347 = v333;
                v238 = (void (*)(_QWORD, _QWORD))v340;
                v618(v347, v634);
                *(_QWORD *)(v331 + 64) = v342;
                *(_QWORD *)(v331 + 72) = v344;
                OUTLINED_FUNCTION_56_6((uint64_t)v586);
                OUTLINED_FUNCTION_48_9(v598);
                OUTLINED_FUNCTION_48_9(v601);
                OUTLINED_FUNCTION_109((uint64_t)v631);
                OUTLINED_FUNCTION_109((uint64_t)&v634);
                OUTLINED_FUNCTION_104_4();
                v660 = v331;
LABEL_204:
                v531 = v661;
                v532 = v662;
                v533 = v660;
                swift_bridgeObjectRetain();
                OUTLINED_FUNCTION_19_0();
                sub_1AFE42260(v531, v532, v533);
                v535 = v534;
                OUTLINED_FUNCTION_40();
                OUTLINED_FUNCTION_20_0();
                if (v535)
                {
                  v536 = OUTLINED_FUNCTION_19_0();
                  sub_1AFE45DB8(v536);
                  OUTLINED_FUNCTION_20_0();
                  v111 = sub_1B000859C();
                  OUTLINED_FUNCTION_15();
                  OUTLINED_FUNCTION_40();
                  OUTLINED_FUNCTION_57_9(v636);
                  OUTLINED_FUNCTION_97(v637);
                  OUTLINED_FUNCTION_97(v635);
                  OUTLINED_FUNCTION_97((uint64_t)v238);
                  OUTLINED_FUNCTION_9_52(v234, *(uint64_t (**)(uint64_t, _QWORD))(v609 + 8));
                  v537 = *(void (**)(uint64_t, uint64_t))(v650 + 8);
                  v538 = v651;
                  v537(v641, v651);
                  OUTLINED_FUNCTION_97(v225);
                  OUTLINED_FUNCTION_9_52(v643, *(uint64_t (**)(uint64_t, _QWORD))(v642 + 8));
                  v539 = v652[0];
                  ((void (*)(uint64_t, _QWORD))v120)(v647, v652[0]);
                  ((void (*)(char *, uint64_t))v120)(v648, v539);
                  v537(v587, v538);
                  OUTLINED_FUNCTION_104_4();
                  OUTLINED_FUNCTION_107_3();
                  return v111;
                }
                if (qword_1EEE70080 != -1)
                  swift_once();
                v540 = sub_1B0006D00();
                __swift_project_value_buffer(v540, (uint64_t)qword_1EEE72160);
                v541 = sub_1B0006CE8();
                v542 = sub_1B00089D4();
                if (os_log_type_enabled(v541, v542))
                {
                  v543 = swift_slowAlloc();
                  v659 = swift_slowAlloc();
                  *(_DWORD *)v543 = 136446466;
                  OUTLINED_FUNCTION_4_3();
                  v544 = v661;
                  v545 = v662;
                  swift_bridgeObjectRetain();
                  v656[1] = sub_1AFB4AD14(v544, v545, &v659);
                  sub_1B0008BB4();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v543 + 12) = 2082;
                  OUTLINED_FUNCTION_4_3();
                  v546 = swift_bridgeObjectRetain();
                  v547 = MEMORY[0x1B5E026B8](v546, MEMORY[0x1E0DEA968]);
                  v549 = v548;
                  OUTLINED_FUNCTION_73_6();
                  swift_bridgeObjectRelease();
                  v656[0] = sub_1AFB4AD14(v547, v549, &v659);
                  OUTLINED_FUNCTION_89_7();
                  sub_1B0008BB4();
                  OUTLINED_FUNCTION_61_3();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1AFABF000, v541, v542, "Could not create the good morning lock screen string from arguments; format=%{public}s, arguments=%{public}s",
                    (uint8_t *)v543,
                    0x16u);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_25();
                }

                v550 = v635;
                v551 = v647;
                OUTLINED_FUNCTION_57_9(v636);
                OUTLINED_FUNCTION_97(v637);
                OUTLINED_FUNCTION_97(v550);
                OUTLINED_FUNCTION_97((uint64_t)v238);
                OUTLINED_FUNCTION_9_52(v234, *(uint64_t (**)(uint64_t, _QWORD))(v609 + 8));
                OUTLINED_FUNCTION_81_6(v641);
                OUTLINED_FUNCTION_97(v225);
                OUTLINED_FUNCTION_9_52(v643, *(uint64_t (**)(uint64_t, _QWORD))(v642 + 8));
                v552 = v652[0];
                ((void (*)(uint64_t, _QWORD))v120)(v551, v652[0]);
                ((void (*)(char *, uint64_t))v120)(v648, v552);
                OUTLINED_FUNCTION_81_6(v587);
                OUTLINED_FUNCTION_104_4();
                OUTLINED_FUNCTION_107_3();
                return 0;
              }
              OUTLINED_FUNCTION_50_8();
            }
            v259 = OUTLINED_FUNCTION_52_9();
            OUTLINED_FUNCTION_76(v259, &qword_1ED1F4BA0);
            OUTLINED_FUNCTION_26_60();
            if (v260)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_8_58(v237);
              v249 = (char *)&v634;
              goto LABEL_84;
            }
            OUTLINED_FUNCTION_21_64();
            OUTLINED_FUNCTION_12_100();
            static Set<>.full.getter();
            v304 = OUTLINED_FUNCTION_16_81();
            OUTLINED_FUNCTION_1_118(v304);
            v305 = OUTLINED_FUNCTION_20_0();
            OUTLINED_FUNCTION_95_4(v305, &qword_1ED1F44D8);
            v225 = OUTLINED_FUNCTION_25_3();
            v306 = OUTLINED_FUNCTION_28_4();
            v630 = OUTLINED_FUNCTION_14_98(v306);
            v645 = v307;
            OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_30_54();
            OUTLINED_FUNCTION_15_91(v237);
            OUTLINED_FUNCTION_42_19();
            static Set<>.full.getter();
            OUTLINED_FUNCTION_4_115();
            OUTLINED_FUNCTION_4_15();
            sub_1AFACE0DC(v250, &qword_1ED1F44D8);
            v308 = OUTLINED_FUNCTION_71_8();
            OUTLINED_FUNCTION_11_94(v308);
            OUTLINED_FUNCTION_45_10();
            OUTLINED_FUNCTION_30_54();
            OUTLINED_FUNCTION_63_5();
            OUTLINED_FUNCTION_82_6();
            if (v202)
            {
              __break(1u);
            }
            else
            {
              v313 = OUTLINED_FUNCTION_75_6();
              if (!v313 || (OUTLINED_FUNCTION_80_6(), !(v201 ^ v202 | v200)))
              {
                if (*(_QWORD *)(v250 + 16) <= (int64_t)v225)
                  v318 = v225;
                else
                  v318 = *(_QWORD *)(v250 + 16);
                OUTLINED_FUNCTION_2_121(v313, v318, v314, v315, v316, v317);
                v250 = v319;
              }
              OUTLINED_FUNCTION_18_76();
              if ((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle < v120 >> 1)
                goto LABEL_110;
            }
            OUTLINED_FUNCTION_2_121(v120 > 1, v225, v309, v310, v311, v312);
            v250 = v559;
LABEL_110:
            OUTLINED_FUNCTION_10_101();
            if (v225 >= v120 >> 1)
            {
              OUTLINED_FUNCTION_2_121(v120 > 1, (uint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, v320, v321, v322, v323);
              v250 = v560;
            }
            OUTLINED_FUNCTION_9_105();
            if (v225 >= (unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle >> 1)
            {
              OUTLINED_FUNCTION_2_121((unint64_t)type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle > 1, v237, v324, v325, v326, v327);
              v250 = v561;
            }
            v234 = v632;
            *(_QWORD *)(v250 + 16) = v237;
            v328 = v250 + 16 * v225;
            *(_QWORD *)(v328 + 32) = v245;
            *(_QWORD *)(v328 + 40) = v251;
            OUTLINED_FUNCTION_20_0();
            OUTLINED_FUNCTION_4_15();
            OUTLINED_FUNCTION_71();
            v660 = v250;
            OUTLINED_FUNCTION_22_64((uint64_t)v631);
            v329 = (char *)&v634;
            goto LABEL_202;
          }
          OUTLINED_FUNCTION_52_9();
          v261 = OUTLINED_FUNCTION_96_4();
          v238 = v640;
          OUTLINED_FUNCTION_53_8(v261, (uint64_t)v640, v636, v262);
          OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_51_3();
          v225 = v639;
          if (v263)
          {
LABEL_101:
            OUTLINED_FUNCTION_56_6(v237);
            goto LABEL_204;
          }
          ((void (*)(char *, _QWORD))v120)(v648, v652[0]);
          OUTLINED_FUNCTION_103_4();
          OUTLINED_FUNCTION_39_22();
          v264 = OUTLINED_FUNCTION_106_3();
          v266 = v265;
          v267 = v660;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_15_33(0, *(_QWORD *)(v267 + 16) + 1, v268, v269, v270, v271);
            v267 = v562;
          }
          v273 = *(_QWORD *)(v267 + 16);
          v272 = *(_QWORD *)(v267 + 24);
          v274 = v273 + 1;
          if (v273 >= v272 >> 1)
          {
            OUTLINED_FUNCTION_15_33(v272 > 1, v273 + 1, v268, v269, v270, v271);
            v267 = v563;
          }
          *(_QWORD *)(v267 + 16) = v274;
          v275 = v267 + 16 * v273;
          *(_QWORD *)(v275 + 32) = v264;
          *(_QWORD *)(v275 + 40) = v266;
          v660 = v267;
          OUTLINED_FUNCTION_21_64();
          OUTLINED_FUNCTION_12_100();
          static Set<>.full.getter();
          v276 = OUTLINED_FUNCTION_16_81();
          OUTLINED_FUNCTION_1_118(v276);
          v277 = OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_95_4(v277, &qword_1ED1F44D8);
          OUTLINED_FUNCTION_25_3();
          v278 = OUTLINED_FUNCTION_28_4();
          v649 = OUTLINED_FUNCTION_14_98(v278);
          v280 = v279;
          OUTLINED_FUNCTION_41();
          sub_1AFAE2D74(v120, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
          v238 = v634;
          v281 = (unint64_t)v618;
          v618(v267, v634);
          OUTLINED_FUNCTION_42_19();
          static Set<>.full.getter();
          OUTLINED_FUNCTION_4_115();
          OUTLINED_FUNCTION_4_15();
          sub_1AFACE0DC(0xD000000000000010, &qword_1ED1F44D8);
          v282 = OUTLINED_FUNCTION_71_8();
          OUTLINED_FUNCTION_11_94(v282);
          OUTLINED_FUNCTION_45_10();
          sub_1AFAE2D74(v120, type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
          ((void (*)(uint64_t, _QWORD))v281)(v267, v238);
          v287 = v660;
          v288 = *(_QWORD *)(v660 + 16);
          v225 = v288 + 2;
          if (__OFADD__(v288, 2))
          {
            __break(1u);
          }
          else
          {
            v289 = OUTLINED_FUNCTION_75_6();
            if (!v289 || (OUTLINED_FUNCTION_80_6(), !(v201 ^ v202 | v200)))
            {
              if (*(_QWORD *)(v287 + 16) <= (int64_t)v225)
                v294 = v225;
              else
                v294 = *(_QWORD *)(v287 + 16);
              OUTLINED_FUNCTION_2_121(v289, v294, v290, v291, v292, v293);
              v287 = v295;
            }
            v281 = *(_QWORD *)(v287 + 16);
            v120 = *(_QWORD *)(v287 + 24);
            v225 = v281 + 1;
            OUTLINED_FUNCTION_19_0();
            if (v281 < v120 >> 1)
              goto LABEL_98;
          }
          OUTLINED_FUNCTION_2_121(v120 > 1, v225, v283, v284, v285, v286);
          v287 = v564;
LABEL_98:
          v296 = v649;
          *(_QWORD *)(v287 + 16) = v225;
          v297 = v287 + 16 * v281;
          *(_QWORD *)(v297 + 32) = v296;
          *(_QWORD *)(v297 + 40) = v280;
          v120 = *(_QWORD *)(v287 + 24);
          v298 = (char *)(v281 + 2);
          swift_bridgeObjectRetain();
          if (v225 >= v120 >> 1)
          {
            OUTLINED_FUNCTION_2_121(v120 > 1, v281 + 2, v299, v300, v301, v302);
            v287 = v565;
          }
          v234 = v632;
          OUTLINED_FUNCTION_61_3();
          *(_QWORD *)(v287 + 16) = v298;
          v303 = v287 + 16 * v225;
          *(_QWORD *)(v303 + 32) = v274;
          *(_QWORD *)(v303 + 40) = v266;
          OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_4_15();
          v660 = v287;
          OUTLINED_FUNCTION_73_6();
          OUTLINED_FUNCTION_89_7();
          v237 = v602;
          goto LABEL_101;
        }
        sub_1B0008644();
        v169 = v624;
        OUTLINED_FUNCTION_102_3();
        OUTLINED_FUNCTION_85_6();
        sub_1B0006418();
        v170 = v626;
        OUTLINED_FUNCTION_97(v169);
        v657[0] = 0;
        v171 = OUTLINED_FUNCTION_24();
        v172 = v623;
        __swift_storeEnumTagSinglePayload(v623, 1, 1, v171);
        static Set<>.full.getter();
        v120 = v599;
        static WeatherFormatStyle<>.weather(_:usage:locale:)(v173, (uint64_t)v657, v172, v174, v175, v176, v177, v178, v585, (uint64_t)v586, v587, v588, v589, v590, v591, v592, v593, v594, v595,
          v596);
        v179 = OUTLINED_FUNCTION_20_0();
        OUTLINED_FUNCTION_37_8(v179, &qword_1ED1F44D8);
        OUTLINED_FUNCTION_25_3();
        v180 = OUTLINED_FUNCTION_28_4();
        sub_1AFC16B58(v120, 0, v180, (uint64_t)&unk_1B003C000);
        v646 = v181;
        v183 = v182;
        swift_release();
        sub_1AFAE2D74(v120, type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
        v143((uint64_t)&unk_1B003C000, v627);
        OUTLINED_FUNCTION_102_3();
        v184 = v169;
        v185 = sub_1B0006400();
        OUTLINED_FUNCTION_97(v169);
        v186 = sub_1B00063DC();
        v192 = v660;
        v193 = *(_QWORD *)(v660 + 16);
        v194 = v193 + 2;
        if (__OFADD__(v193, 2))
        {
          __break(1u);
        }
        else
        {
          v184 = v186;
          v185 = v187;
          v195 = OUTLINED_FUNCTION_75_6();
          if (!v195 || (OUTLINED_FUNCTION_80_6(), !(v201 ^ v202 | v200)))
          {
            if (*(_QWORD *)(v192 + 16) <= v194)
              v203 = v194;
            else
              v203 = *(_QWORD *)(v192 + 16);
            OUTLINED_FUNCTION_2_121(v195, v203, v196, v197, v198, v199);
            v192 = v204;
          }
          v120 = *(_QWORD *)(v192 + 16);
          v170 = *(_QWORD *)(v192 + 24);
          v194 = v120 + 1;
          OUTLINED_FUNCTION_94_0();
          if (v120 < v170 >> 1)
            goto LABEL_40;
        }
        OUTLINED_FUNCTION_2_121(v170 > 1, v194, v188, v189, v190, v191);
        v192 = v557;
LABEL_40:
        v205 = v646;
        *(_QWORD *)(v192 + 16) = v194;
        v206 = v192 + 16 * v120;
        *(_QWORD *)(v206 + 32) = v205;
        *(_QWORD *)(v206 + 40) = v183;
        v207 = *(_QWORD *)(v192 + 24);
        OUTLINED_FUNCTION_19_0();
        if (v194 >= v207 >> 1)
        {
          OUTLINED_FUNCTION_2_121(v207 > 1, v120 + 2, v208, v209, v210, v211);
          v192 = v558;
        }
        v138 = v629[0];
        OUTLINED_FUNCTION_61_3();
        *(_QWORD *)(v192 + 16) = v120 + 2;
        v212 = v192 + 16 * v194;
        *(_QWORD *)(v212 + 32) = v184;
        *(_QWORD *)(v212 + 40) = v185;
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_20_0();
        v660 = v192;
        goto LABEL_43;
      }
    }
    v139 = v133 - v136 > 10.0;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_62_4(v644);
LABEL_7:
  OUTLINED_FUNCTION_52_9();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  v124 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v125 = OUTLINED_FUNCTION_20();
  *(_OWORD *)(v125 + 16) = xmmword_1B00275C0;
  *(_QWORD *)(v125 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v125 + 64) = sub_1AFAFB1D0();
  v126 = v649;
  *(_QWORD *)(v125 + 32) = v638;
  *(_QWORD *)(v125 + 40) = v126;
  v111 = sub_1B0008560();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_9_52(v115, *(uint64_t (**)(uint64_t, _QWORD))(v113 + 8));
  OUTLINED_FUNCTION_62_4(v647);
  OUTLINED_FUNCTION_62_4((uint64_t)v648);
  OUTLINED_FUNCTION_9_52(v112, *(uint64_t (**)(uint64_t, _QWORD))(v650 + 8));
  return v111;
}

uint64_t sub_1AFE41C68(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFE41C8C(a1, *(_QWORD *)(v1 + 16), (void (*)(__n128))MEMORY[0x1E0CEE658]) & 1;
}

uint64_t sub_1AFE41C8C(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = sub_1B00058D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v6);
  LOBYTE(a3) = sub_1B0005A40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return a3 & 1;
}

uint64_t sub_1AFE41D38(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFE41C8C(a1, *(_QWORD *)(v1 + 16), (void (*)(__n128))MEMORY[0x1E0CEE5F8]) & 1;
}

uint64_t sub_1AFE41D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  _BYTE v74[16];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[3];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75128);
  MEMORY[0x1E0C80A78](v8);
  v61 = (uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B0005FB0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v60 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v57 - v14;
  v16 = sub_1B0005C50();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v72 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v73 = (char *)v57 - v20;
  v75 = a2;
  v76 = a3;
  swift_bridgeObjectRetain();
  v21 = 0;
  sub_1AFBA77F8(sub_1AFE475FC, (uint64_t)v74, a1);
  v77[0] = MEMORY[0x1E0DEE9E0];
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v58 = 0;
    v59 = a4;
    v24 = *(unsigned __int8 *)(v17 + 80);
    v25 = (v24 + 32) & ~v24;
    v57[1] = v22;
    v26 = v22 + v25;
    v68 = *(_QWORD *)(v17 + 72);
    v69 = v25;
    v63 = v24 | 7;
    v64 = v68 + v25;
    v27 = v17;
    v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v70 = v27;
    v71 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v62 = xmmword_1B00275C0;
    v65 = v16;
    v66 = v11;
    v67 = v10;
    while (1)
    {
      v71(v73, v26, v16);
      sub_1B0005C44();
      v30 = sub_1AFC43580((uint64_t)v15);
      v31 = v28[2];
      v32 = (v29 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v34 = v29;
      if (v28[3] < v33)
      {
        sub_1AFE46FEC(v33, 1);
        v28 = (_QWORD *)v77[0];
        v35 = sub_1AFC43580((uint64_t)v15);
        if ((v34 & 1) != (v36 & 1))
          goto LABEL_24;
        v30 = v35;
      }
      if ((v34 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
        v28 = (_QWORD *)v77[0];
        v37 = *(_QWORD *)(v77[0] + 56);
        v38 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
        v38(v72, v73, v16);
        v39 = *(_QWORD *)(v37 + 8 * v30);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v37 + 8 * v30) = v39;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v39 = sub_1AFD0B574(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
          *(_QWORD *)(v37 + 8 * v30) = v39;
        }
        v42 = *(_QWORD *)(v39 + 16);
        v41 = *(_QWORD *)(v39 + 24);
        if (v42 >= v41 >> 1)
        {
          v39 = sub_1AFD0B574(v41 > 1, v42 + 1, 1, v39);
          *(_QWORD *)(v37 + 8 * v30) = v39;
        }
        *(_QWORD *)(v39 + 16) = v42 + 1;
        v10 = v67;
        v43 = v68;
        v44 = v39 + v69 + v42 * v68;
        v16 = v65;
        v38((char *)v44, v72, v65);
        v11 = v66;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F16A0);
        v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = v62;
        (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v45 + v69, v73, v16);
        v28[(v30 >> 6) + 8] |= 1 << v30;
        (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28[6] + *(_QWORD *)(v11 + 72) * v30, v15, v10);
        *(_QWORD *)(v28[7] + 8 * v30) = v45;
        v46 = v28[2];
        v47 = __OFADD__(v46, 1);
        v48 = v46 + 1;
        if (v47)
          goto LABEL_23;
        v28[2] = v48;
        v43 = v68;
      }
      v26 += v43;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        a4 = v59;
        v21 = v58;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    sub_1B0008FF8();
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
  sub_1AFE47374((uint64_t)v28);
  swift_release();
  v49 = swift_bridgeObjectRetain();
  sub_1AFC9B958(v49);
  v51 = v50;
  swift_release();
  v77[0] = v51;
  sub_1AFE3EE64(v77);
  if (v21)
  {
LABEL_25:
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_release();
  v52 = v61;
  sub_1AFBA7474(v77[0], v61);
  swift_release();
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  if (__swift_getEnumTagSinglePayload(v52, 1, v53) == 1)
  {
    sub_1AFACE0DC(v52, &qword_1EEE75128);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(a4, *MEMORY[0x1E0CEEAD8], v10);
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    v56 = v60;
    v55(v60, v52, v10);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v55)(a4, v56, v10);
  }
}

uint64_t sub_1AFE42260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;

  if (a1 == 0xD000000000000023 && a2 == 0x80000001B005FD20 || (sub_1B0008FB0() & 1) != 0)
  {
    if (*(_QWORD *)(a3 + 16) == 2)
    {
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
LABEL_427:
      swift_once();
      goto LABEL_13;
    }
    return 0;
  }
  if (a1 == 0xD00000000000003FLL && a2 == 0x80000001B005FD50 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) < 4)
      return 0;
    if (qword_1ED1F46A8 == -1)
    {
LABEL_13:
      swift_beginAccess();
      v7 = (id)qword_1ED1F4470;
      v6 = sub_1B00054B8();

      return v6;
    }
LABEL_229:
    swift_once();
    goto LABEL_13;
  }
  if (a1 == 0xD00000000000002ELL && a2 == 0x80000001B005FD90 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 4)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000033 && a2 == 0x80000001B005FDC0 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 5)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000031 && a2 == 0x80000001B005FE00 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 3)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000036 && a2 == 0x80000001B005FE40 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 4)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000029 && a2 == 0x80000001B005FE80 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 4)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000045 && a2 == 0x80000001B005FEB0 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 6)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000034 && a2 == 0x80000001B005FF00 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 6)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000039 && a2 == 0x80000001B005FF40 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 7)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000037 && a2 == 0x80000001B005FF80 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 5)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD00000000000003CLL && a2 == 0x80000001B005FFC0 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 6)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B0060000 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 3)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD00000000000003ALL && a2 == 0x80000001B0060020 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 5)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000029 && a2 == 0x80000001B0060060 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 5)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD00000000000002ELL && a2 == 0x80000001B0060090 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 6)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD00000000000002CLL && a2 == 0x80000001B00600C0 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 4)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000031 && a2 == 0x80000001B00600F0 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 5)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001B0060130 || (sub_1B0008FB0() & 1) != 0)
  {
    if (sub_1AFD24CF4(a3) != 2)
      return 0;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_229;
  }
  if ((a1 != 0xD000000000000034 || a2 != 0x80000001B0060150) && (sub_1B0008FB0() & 1) == 0)
  {
    if (a1 == 0xD000000000000023 && a2 == 0x80000001B0060190 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 4)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000028 && a2 == 0x80000001B00601C0 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 5)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000026 && a2 == 0x80000001B00601F0 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 3)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001B0060220 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 4)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x80000001B0060250 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 2)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000035 && a2 == 0x80000001B0060270 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 4)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000024 && a2 == 0x80000001B00602B0 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 4)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000029 && a2 == 0x80000001B00602E0 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 5)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD000000000000027 && a2 == 0x80000001B0060310 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 3)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001B0060340 || (sub_1B0008FB0() & 1) != 0)
    {
      if (sub_1AFD24CF4(a3) != 4)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    else
    {
      if ((a1 != 0xD000000000000019 || a2 != 0x80000001B0060370) && (sub_1B0008FB0() & 1) == 0)
      {
        if (a1 == 0xD000000000000035 && a2 == 0x80000001B0060390 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000024 && a2 == 0x80000001B00603D0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000029 && a2 == 0x80000001B0060400 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000027 && a2 == 0x80000001B0060430 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 2)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001B0060460 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000024 && a2 == 0x80000001B0060490 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 2)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000040 && a2 == 0x80000001B00604C0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002FLL && a2 == 0x80000001B0060510 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000034 && a2 == 0x80000001B0060540 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000032 && a2 == 0x80000001B0060580 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000037 && a2 == 0x80000001B00605C0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001B0060600 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000039 && a2 == 0x80000001B0060620 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000028 && a2 == 0x80000001B0060660 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001B0060690 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 7)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001B00606C0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000030 && a2 == 0x80000001B00606F0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000028 && a2 == 0x80000001B0060730 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000044 && a2 == 0x80000001B0060760 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000033 && a2 == 0x80000001B00607B0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000038 && a2 == 0x80000001B00607F0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 7)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000036 && a2 == 0x80000001B0060830 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000003BLL && a2 == 0x80000001B0060870 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001B00608B0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002FLL && a2 == 0x80000001B00608D0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B0060900 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000023 && a2 == 0x80000001B0060920 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000021 && a2 == 0x80000001B0060950 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000026 && a2 == 0x80000001B0060980 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B00609B0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_13;
            goto LABEL_427;
          }
        }
        else if (a1 == 0xD00000000000003ALL && a2 == 0x80000001B00609D0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000029 && a2 == 0x80000001B0060A10 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002ELL && a2 == 0x80000001B0060A40 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 7)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001B0060A70 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 5)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000031 && a2 == 0x80000001B0060AA0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 6)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000026 && a2 == 0x80000001B005FB10 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001B005FAE0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001B0060AE0 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000023 && a2 == 0x80000001B0060B10 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B0060B40 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 2)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD000000000000019 && a2 == 0x80000001B0060B60 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 3)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B0060B80 || (sub_1B0008FB0() & 1) != 0)
        {
          if (sub_1AFD24CF4(a3) == 4)
          {
            if (qword_1ED1F46A8 != -1)
              swift_once();
            goto LABEL_13;
          }
        }
        else if ((a1 == 0xD00000000000002ALL && a2 == 0x80000001B005FAB0 || (sub_1B0008FB0() & 1) != 0)
               && sub_1AFD24CF4(a3) == 3)
        {
          if (qword_1ED1F46A8 != -1)
            swift_once();
          goto LABEL_13;
        }
        return 0;
      }
      if (sub_1AFD24CF4(a3) != 1)
        return 0;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_13;
    }
    goto LABEL_229;
  }
  if (sub_1AFD24CF4(a3) == 4)
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_13;
    goto LABEL_427;
  }
  return 0;
}

uint64_t sub_1AFE45DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1AFAFB29C();
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    v5 = MEMORY[0x1E0DEA968];
    do
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v14 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_1AFAFB29C();
        v2 = v14;
      }
      v4 += 2;
      v12 = v5;
      v13 = sub_1AFAFB1D0();
      *(_QWORD *)&v11 = v7;
      *((_QWORD *)&v11 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_1AFAFB284(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AFE45EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  char v20;
  _QWORD v22[2];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a3;
  v26 = a1;
  v3 = sub_1B0005C50();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B00058D8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v22 - v12;
  sub_1B0005C38();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, v7, MEMORY[0x1E0CB08B0]);
  v22[1] = v14;
  v15 = sub_1B000850C();
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v13, v6);
  v25 = v4;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v18 = v23;
  v19 = v26;
  v26 = v3;
  v17(v23, v19, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v6);
  if ((v15 & 1) != 0)
  {
    v20 = 0;
  }
  else
  {
    sub_1B0005C38();
    v20 = sub_1B000850C() ^ 1;
    v16(v13, v6);
  }
  v16(v10, v6);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v26);
  return v20 & 1;
}

uint64_t GoodMorningStringBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GoodMorningStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1AFE4609C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v2 = v1;
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  v4 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v132 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v142 = (uint64_t)&v124 - v7;
  MEMORY[0x1E0C80A78](v8);
  v138 = (uint64_t)&v124 - v9;
  MEMORY[0x1E0C80A78](v10);
  v137 = (uint64_t)&v124 - v11;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = sub_1B0008F74();
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_142;
    if (v12)
      sub_1AFE469E8(0, v12, 1, (_QWORD *)a1);
    return;
  }
  v128 = v13;
  v126 = sub_1AFC9135C(v12 / 2);
  v127 = v12;
  v134 = v14;
  v135 = v4;
  if (v12 <= 0)
    goto LABEL_105;
  v15 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v17 = v12;
  v139 = a1;
  while (1)
  {
    v18 = v15;
    v19 = v15 + 1;
    v131 = v16;
    v133 = v15;
    if (v15 + 1 >= v17)
    {
      v28 = v15 + 1;
    }
    else
    {
      v129 = *(_QWORD *)a1;
      v20 = v129;
      v21 = *(_QWORD *)(v4 + 72);
      v22 = v137;
      sub_1AFAC4890(v129 + v21 * v19, v137, &qword_1EEE70938);
      v23 = v20 + v21 * v18;
      v24 = v138;
      sub_1AFAC4890(v23, v138, &qword_1EEE70938);
      v25 = *(int *)(v141 + 48);
      v143 = *(_QWORD *)(v22 + v25);
      v140 = *(_QWORD *)(v24 + v25);
      sub_1AFACE0DC(v24, &qword_1EEE70938);
      v26 = v22;
      v27 = v129;
      sub_1AFACE0DC(v26, &qword_1EEE70938);
      v28 = v18 + 2;
      v144 = v21;
      if (v18 + 2 >= v17)
      {
        v4 = v135;
      }
      else
      {
        v136 = v17;
        v130 = v21 * v19;
        v29 = v18 + 2;
        v30 = v21 * v28;
        while (1)
        {
          v31 = v140 < v143;
          v32 = v137;
          sub_1AFAC4890(v27 + v30, v137, &qword_1EEE70938);
          v33 = v138;
          sub_1AFAC4890(v27 + v130, v138, &qword_1EEE70938);
          v34 = *(_QWORD *)(v33 + *(int *)(v141 + 48)) >= *(_QWORD *)(v32 + *(int *)(v141 + 48));
          sub_1AFACE0DC(v33, &qword_1EEE70938);
          sub_1AFACE0DC(v32, &qword_1EEE70938);
          if (v31 == v34)
            break;
          v27 += v144;
          if (++v29 >= v136)
          {
            v4 = v135;
            v17 = v136;
            v28 = v136;
            a1 = v139;
            goto LABEL_13;
          }
        }
        v4 = v135;
        v17 = v136;
        a1 = v139;
        v28 = v29;
LABEL_13:
        v18 = v133;
      }
      if (v140 < v143)
      {
        if (v28 < v18)
          goto LABEL_143;
        if (v18 < v28)
        {
          v136 = v17;
          v125 = v2;
          v35 = 0;
          v36 = v18;
          v37 = v144;
          v38 = v144 * (v28 - 1);
          v39 = v28 * v144;
          v40 = v36;
          v41 = v36 * v144;
          do
          {
            if (v40 != v28 + v35 - 1)
            {
              v42 = v129;
              if (!v129)
                goto LABEL_149;
              v43 = v28;
              v44 = v129 + v41;
              v45 = v129 + v38;
              sub_1AFE47618(v129 + v41, v132);
              if (v41 < v38 || v44 >= v42 + v39)
              {
                swift_arrayInitWithTakeFrontToBack();
                v37 = v144;
              }
              else
              {
                v37 = v144;
                if (v41 != v38)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1AFE47618(v132, v45);
              v28 = v43;
            }
            ++v40;
            --v35;
            v38 -= v37;
            v39 -= v37;
            v41 += v37;
          }
          while (v40 < v28 + v35);
          v2 = v125;
          v4 = v135;
          v17 = v136;
          a1 = v139;
          v18 = v133;
        }
      }
    }
    if (v28 < v17)
    {
      if (__OFSUB__(v28, v18))
        goto LABEL_141;
      if (v28 - v18 < v128)
      {
        if (__OFADD__(v18, v128))
          goto LABEL_144;
        if (v18 + v128 >= v17)
          v47 = v17;
        else
          v47 = v18 + v128;
        if (v47 < v18)
        {
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v28 != v47)
        {
          v125 = v2;
          v48 = *(_QWORD *)(v4 + 72);
          v49 = v48 * (v28 - 1);
          v136 = v48;
          v50 = v28 * v48;
          v130 = v47;
          do
          {
            v51 = 0;
            v140 = v28;
            while (1)
            {
              v143 = v18;
              v52 = *(_QWORD *)a1;
              v53 = v50;
              v54 = v50 + v51 + *(_QWORD *)a1;
              v55 = v137;
              sub_1AFAC4890(v54, v137, &qword_1EEE70938);
              v56 = v49;
              v57 = v49 + v51 + v52;
              v58 = v138;
              sub_1AFAC4890(v57, v138, &qword_1EEE70938);
              v59 = *(int *)(v141 + 48);
              v144 = *(_QWORD *)(v55 + v59);
              v60 = *(_QWORD *)(v58 + v59);
              sub_1AFACE0DC(v58, &qword_1EEE70938);
              sub_1AFACE0DC(v55, &qword_1EEE70938);
              if (v60 >= v144)
                break;
              v61 = *(_QWORD *)a1;
              if (!*(_QWORD *)a1)
                goto LABEL_147;
              v50 = v53;
              v49 = v56;
              v62 = v61 + v56 + v51;
              sub_1AFE47618(v61 + v53 + v51, v142);
              swift_arrayInitWithTakeFrontToBack();
              sub_1AFE47618(v142, v62);
              v51 -= v136;
              v18 = v143 + 1;
              a1 = v139;
              v63 = v140;
              if (v140 == v143 + 1)
                goto LABEL_47;
            }
            v63 = v140;
            v49 = v56;
            v50 = v53;
LABEL_47:
            v28 = v63 + 1;
            v49 += v136;
            v50 += v136;
            v18 = v133;
          }
          while (v28 != v130);
          v28 = v130;
          v2 = v125;
        }
      }
    }
    if (v28 < v18)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v140 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v16 = v131;
    else
      v16 = sub_1AFC92E70(0, *((_QWORD *)v131 + 2) + 1, 1, v131);
    v66 = *((_QWORD *)v16 + 2);
    v65 = *((_QWORD *)v16 + 3);
    v67 = v66 + 1;
    if (v66 >= v65 >> 1)
      v16 = sub_1AFC92E70((char *)(v65 > 1), v66 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v67;
    v68 = v16 + 32;
    v69 = &v16[16 * v66 + 32];
    v70 = v140;
    *(_QWORD *)v69 = v18;
    *((_QWORD *)v69 + 1) = v70;
    if (v66)
      break;
    v67 = 1;
LABEL_97:
    v17 = *(_QWORD *)(a1 + 8);
    v15 = v140;
    v4 = v135;
    if (v140 >= v17)
      goto LABEL_106;
  }
  while (1)
  {
    v71 = v67 - 1;
    if (v67 >= 4)
    {
      v76 = &v68[16 * v67];
      v77 = *((_QWORD *)v76 - 8);
      v78 = *((_QWORD *)v76 - 7);
      v82 = __OFSUB__(v78, v77);
      v79 = v78 - v77;
      if (v82)
        goto LABEL_125;
      v81 = *((_QWORD *)v76 - 6);
      v80 = *((_QWORD *)v76 - 5);
      v82 = __OFSUB__(v80, v81);
      v74 = v80 - v81;
      v75 = v82;
      if (v82)
        goto LABEL_126;
      v83 = v67 - 2;
      v84 = &v68[16 * v67 - 32];
      v86 = *(_QWORD *)v84;
      v85 = *((_QWORD *)v84 + 1);
      v82 = __OFSUB__(v85, v86);
      v87 = v85 - v86;
      if (v82)
        goto LABEL_127;
      v82 = __OFADD__(v74, v87);
      v88 = v74 + v87;
      if (v82)
        goto LABEL_129;
      if (v88 >= v79)
      {
        v106 = &v68[16 * v71];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v82 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v82)
          goto LABEL_135;
        v99 = v74 < v109;
        goto LABEL_86;
      }
    }
    else
    {
      if (v67 != 3)
      {
        v100 = *((_QWORD *)v16 + 4);
        v101 = *((_QWORD *)v16 + 5);
        v82 = __OFSUB__(v101, v100);
        v93 = v101 - v100;
        v94 = v82;
        goto LABEL_80;
      }
      v73 = *((_QWORD *)v16 + 4);
      v72 = *((_QWORD *)v16 + 5);
      v82 = __OFSUB__(v72, v73);
      v74 = v72 - v73;
      v75 = v82;
    }
    if ((v75 & 1) != 0)
      goto LABEL_128;
    v83 = v67 - 2;
    v89 = &v68[16 * v67 - 32];
    v91 = *(_QWORD *)v89;
    v90 = *((_QWORD *)v89 + 1);
    v92 = __OFSUB__(v90, v91);
    v93 = v90 - v91;
    v94 = v92;
    if (v92)
      goto LABEL_130;
    v95 = &v68[16 * v71];
    v97 = *(_QWORD *)v95;
    v96 = *((_QWORD *)v95 + 1);
    v82 = __OFSUB__(v96, v97);
    v98 = v96 - v97;
    if (v82)
      goto LABEL_132;
    if (__OFADD__(v93, v98))
      goto LABEL_134;
    if (v93 + v98 >= v74)
    {
      v99 = v74 < v98;
LABEL_86:
      if (v99)
        v71 = v83;
      goto LABEL_88;
    }
LABEL_80:
    if ((v94 & 1) != 0)
      goto LABEL_131;
    v102 = &v68[16 * v71];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v82 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v82)
      goto LABEL_133;
    if (v105 < v93)
      goto LABEL_97;
LABEL_88:
    v110 = v71 - 1;
    if (v71 - 1 >= v67)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    v111 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_148;
    v112 = v16;
    a1 = (unint64_t)&v68[16 * v110];
    v113 = *(_QWORD *)a1;
    v114 = &v68[16 * v71];
    v115 = *((_QWORD *)v114 + 1);
    sub_1AFE46C24(v111 + *(_QWORD *)(v135 + 72) * *(_QWORD *)a1, v111 + *(_QWORD *)(v135 + 72) * *(_QWORD *)v114, v111 + *(_QWORD *)(v135 + 72) * v115, v134);
    if (v2)
      break;
    if (v115 < v113)
      goto LABEL_122;
    if (v71 > *((_QWORD *)v112 + 2))
      goto LABEL_123;
    *(_QWORD *)a1 = v113;
    *(_QWORD *)&v68[16 * v110 + 8] = v115;
    v116 = *((_QWORD *)v112 + 2);
    if (v71 >= v116)
      goto LABEL_124;
    v67 = v116 - 1;
    memmove(&v68[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
    v16 = v112;
    *((_QWORD *)v112 + 2) = v116 - 1;
    v99 = v116 > 2;
    a1 = v139;
    if (!v99)
      goto LABEL_97;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v127 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v67 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
  if (v67 >= 2)
  {
    v117 = *(_QWORD *)a1;
    while (1)
    {
      v118 = v67 - 2;
      if (v67 < 2)
        break;
      if (!v117)
        goto LABEL_150;
      a1 = v67 - 1;
      v119 = v16;
      v120 = *(_QWORD *)&v16[16 * v118 + 32];
      v121 = *(_QWORD *)&v16[16 * v67 + 24];
      sub_1AFE46C24(v117 + *(_QWORD *)(v135 + 72) * v120, v117 + *(_QWORD *)(v135 + 72) * *(_QWORD *)&v16[16 * v67 + 16], v117 + *(_QWORD *)(v135 + 72) * v121, v134);
      if (v2)
        goto LABEL_103;
      if (v121 < v120)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v119 = sub_1AFC92F64();
      if (v118 >= *((_QWORD *)v119 + 2))
        goto LABEL_138;
      v122 = &v119[16 * v118 + 32];
      *(_QWORD *)v122 = v120;
      *((_QWORD *)v122 + 1) = v121;
      v123 = *((_QWORD *)v119 + 2);
      if (v67 > v123)
        goto LABEL_139;
      memmove(&v119[16 * a1 + 32], &v119[16 * v67 + 32], 16 * (v123 - v67));
      v16 = v119;
      *((_QWORD *)v119 + 2) = v123 - 1;
      v67 = v123 - 1;
      if (v123 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v127 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v126 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_1AFE469E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v27 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  MEMORY[0x1E0C80A78](v32);
  v33 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v29 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v25 - v12;
  v31 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v36 = v13 * (v31 - 1);
    v30 = v13;
    v35 = v13 * v31;
    v14 = (uint64_t)v29;
    while (2)
    {
      v15 = 0;
      v16 = v27;
      do
      {
        v17 = a4;
        v18 = *a4;
        v19 = v28;
        sub_1AFAC4890(v35 + v15 + v18, v28, &qword_1EEE70938);
        sub_1AFAC4890(v36 + v15 + v18, v14, &qword_1EEE70938);
        v20 = *(int *)(v32 + 48);
        v34 = *(_QWORD *)(v19 + v20);
        v21 = *(_QWORD *)(v14 + v20);
        sub_1AFACE0DC(v14, &qword_1EEE70938);
        sub_1AFACE0DC(v19, &qword_1EEE70938);
        v22 = v21 < v34;
        a4 = v17;
        if (!v22)
          break;
        v23 = *v17;
        if (!*v17)
        {
          __break(1u);
          return;
        }
        v24 = v23 + v36 + v15;
        sub_1AFE47618(v23 + v35 + v15, v33);
        swift_arrayInitWithTakeFrontToBack();
        sub_1AFE47618(v33, v24);
        v15 -= v30;
        ++v16;
        a4 = v17;
      }
      while (v31 != v16);
      v36 += v30;
      v35 += v30;
      if (++v31 != v26)
        continue;
      break;
    }
  }
}

void sub_1AFE46C24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  BOOL v43;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t)&v46 - v11;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_77;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_78;
  v18 = v14 / v13;
  v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1AFBA7E7C(a2, v16 / v13);
    v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_71;
    v47 = v4;
    v48 = v13;
    v50 = a4;
    v51 = -v13;
    v49 = a1;
    while (1)
    {
      v24 = a3;
      v25 = v51;
      a3 += v51;
      v53 = v21 + v51;
      v26 = v54;
      sub_1AFAC4890(v21 + v51, v54, &qword_1EEE70938);
      v52 = a2 + v25;
      v27 = v55;
      sub_1AFAC4890(a2 + v25, v55, &qword_1EEE70938);
      v28 = *(int *)(v56 + 48);
      v29 = *(_QWORD *)(v26 + v28);
      v30 = *(_QWORD *)(v27 + v28);
      sub_1AFACE0DC(v27, &qword_1EEE70938);
      sub_1AFACE0DC(v26, &qword_1EEE70938);
      if (v30 >= v29)
      {
        if (v24 >= v21 && a3 < v21)
        {
          v33 = v49;
          a4 = v50;
          if (v24 == v21)
          {
            v21 = v53;
            goto LABEL_43;
          }
          v21 = v53;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        v21 = v53;
      }
      else
      {
        if (v24 >= a2 && a3 < a2)
        {
          v33 = v49;
          a4 = v50;
          if (v24 == a2)
          {
            a2 = v52;
            goto LABEL_43;
          }
          a2 = v52;
          goto LABEL_40;
        }
        a2 = v52;
      }
      swift_arrayInitWithTakeFrontToBack();
      v33 = v49;
      a4 = v50;
LABEL_43:
      v13 = v48;
      if (v21 <= a4 || a2 <= v33)
        goto LABEL_71;
    }
  }
  sub_1AFBA7E7C(a1, v14 / v13);
  v20 = v18 * v13;
  v21 = a4 + v18 * v13;
  v53 = a3;
  if (v20 >= 1 && a2 < a3)
  {
    v47 = v4;
    v52 = v21;
    v36 = v54;
    v35 = v55;
    do
    {
      sub_1AFAC4890(a2, v36, &qword_1EEE70938);
      sub_1AFAC4890(a4, v35, &qword_1EEE70938);
      v37 = *(int *)(v56 + 48);
      v38 = *(_QWORD *)(v36 + v37);
      v39 = *(_QWORD *)(v35 + v37);
      sub_1AFACE0DC(v35, &qword_1EEE70938);
      sub_1AFACE0DC(v36, &qword_1EEE70938);
      if (v39 >= v38)
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v40 = a2;
        a4 += v13;
      }
      else
      {
        v40 = a2 + v13;
        if (a1 < a2 || a1 >= v40)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v21 = v52;
      a1 += v13;
      v43 = a4 >= v52 || v40 >= v53;
      a2 = v40;
    }
    while (!v43);
  }
LABEL_71:
  v44 = v21 - a4;
  if (v13 != -1 || v44 != 0x8000000000000000)
  {
    sub_1AFBA7E7C(a4, v44 / v13);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t sub_1AFE46FEC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = sub_1B0005FB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75130);
  v42 = a2;
  v10 = sub_1B0008E24();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_40;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v41 = v9;
  if (!v15)
    goto LABEL_7;
LABEL_6:
  v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    v25 = *(_QWORD *)(v6 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * i;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v26, v5);
      v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * i);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v26, v5);
      v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * i);
      swift_bridgeObjectRetain();
    }
    sub_1AFAF86C8(&qword_1ED1EFE78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], MEMORY[0x1E0CEEBB0]);
    result = sub_1B00084C4();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) == 0)
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      while (++v30 != v33 || (v32 & 1) == 0)
      {
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
        if (v35 != -1)
        {
          v31 = __clz(__rbit64(~v35)) + (v30 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v25 * v31, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v31) = v27;
    ++*(_QWORD *)(v11 + 16);
    v9 = v41;
    if (v15)
      goto LABEL_6;
LABEL_7:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_42;
    if (v21 >= v39)
    {
      swift_release();
      v3 = v38;
      v22 = v40;
      goto LABEL_35;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v18;
    if (!v23)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_33;
      v23 = v40[v18];
      if (!v23)
        break;
    }
LABEL_18:
    v15 = (v23 - 1) & v23;
  }
  v24 = v21 + 2;
  if (v24 < v39)
  {
    v23 = v40[v24];
    if (!v23)
    {
      while (1)
      {
        v18 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v18 >= v39)
          goto LABEL_33;
        v23 = v40[v18];
        ++v24;
        if (v23)
          goto LABEL_18;
      }
    }
    v18 = v24;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  v3 = v38;
LABEL_35:
  if ((v42 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v9 + 32);
    if (v36 >= 64)
      sub_1AFB38D9C(0, (unint64_t)(v36 + 63) >> 6, v22);
    else
      *v22 = -1 << v36;
    *(_QWORD *)(v9 + 16) = 0;
  }
LABEL_40:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1AFE47374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = sub_1B0005FB0();
  v2 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75138);
  result = sub_1B0008E18();
  v5 = (_QWORD *)result;
  v6 = 0;
  v32 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v27 = v8;
  v28 = (unint64_t)(v10 + 63) >> 6;
  v29 = result + 64;
  v13 = v30;
  v14 = v31;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v6 << 6); ; i = __clz(__rbit64(v18)) + (v6 << 6))
  {
    v20 = v32;
    v21 = *(_QWORD *)(v2 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v13, *(_QWORD *)(v32 + 48) + v21, v14);
    v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * i) + 16);
    *(_QWORD *)(v29 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(v5[6] + v21, v13, v14);
    *(_QWORD *)(v5[7] + 8 * i) = v22;
    v23 = v5[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v5[2] = v25;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v17 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v17 >= v28)
      return (uint64_t)v5;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    ++v6;
    if (!v18)
    {
      v6 = v17 + 1;
      if (v17 + 1 >= v28)
        return (uint64_t)v5;
      v18 = *(_QWORD *)(v27 + 8 * v6);
      if (!v18)
      {
        v6 = v17 + 2;
        if (v17 + 2 >= v28)
          return (uint64_t)v5;
        v18 = *(_QWORD *)(v27 + 8 * v6);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v12 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v28)
    return (uint64_t)v5;
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
    v6 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v6 >= v28)
      return (uint64_t)v5;
    v18 = *(_QWORD *)(v27 + 8 * v6);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for GoodMorningStringBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for GoodMorningStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GoodMorningStringBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1AFE475FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFE45EB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1AFE47618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_96_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 320);
}

uint64_t OUTLINED_FUNCTION_100_4()
{
  return sub_1B00058CC();
}

void OUTLINED_FUNCTION_101_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1AFAE2D74(v2, a2);
}

double CodableUnitPoint.unitPoint.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void CodableUnitPoint.init(x:y:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

BOOL static CodableUnitPoint.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t CodableUnitPoint.hash(into:)()
{
  sub_1B0009034();
  return sub_1B0009034();
}

uint64_t sub_1AFE47708(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 120 && a2 == 0xE100000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B0008FB0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AFE477C4(char a1)
{
  if ((a1 & 1) != 0)
    return 121;
  else
    return 120;
}

uint64_t sub_1AFE477D8()
{
  char *v0;

  return sub_1AFE477C4(*v0);
}

uint64_t sub_1AFE477E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFE47708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE47804()
{
  sub_1AFE47968();
  return sub_1B0009118();
}

uint64_t sub_1AFE4782C()
{
  sub_1AFE47968();
  return sub_1B0009124();
}

uint64_t CodableUnitPoint.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75140);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE47968();
  sub_1B0009058();
  v12 = v9;
  HIBYTE(v11) = 0;
  sub_1AFBEE3C0();
  OUTLINED_FUNCTION_1_119();
  if (!v2)
  {
    v12 = v8;
    HIBYTE(v11) = 1;
    OUTLINED_FUNCTION_1_119();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AFE47968()
{
  unint64_t result;

  result = qword_1EEE75148;
  if (!qword_1EEE75148)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C684, &type metadata for CodableUnitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75148);
  }
  return result;
}

uint64_t CodableUnitPoint.hashValue.getter()
{
  sub_1B0009004();
  sub_1B0009034();
  sub_1B0009034();
  return sub_1B0009040();
}

uint64_t CodableUnitPoint.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75150);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE47968();
  sub_1B000904C();
  if (!v2)
  {
    sub_1AFBEE438();
    OUTLINED_FUNCTION_0_135();
    OUTLINED_FUNCTION_0_135();
    OUTLINED_FUNCTION_28();
    *a2 = v7;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AFE47B38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CodableUnitPoint.init(from:)(a1, a2);
}

uint64_t sub_1AFE47B4C(_QWORD *a1)
{
  return CodableUnitPoint.encode(to:)(a1);
}

uint64_t sub_1AFE47B6C()
{
  sub_1B0009004();
  sub_1B0009034();
  sub_1B0009034();
  return sub_1B0009040();
}

unint64_t sub_1AFE47BCC()
{
  unint64_t result;

  result = qword_1EEE75158;
  if (!qword_1EEE75158)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for CodableUnitPoint, &type metadata for CodableUnitPoint);
    atomic_store(result, (unint64_t *)&qword_1EEE75158);
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableUnitPoint()
{
  return &type metadata for CodableUnitPoint;
}

uint64_t storeEnumTagSinglePayload for CodableUnitPoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFE47C64 + 4 * byte_1B003C4E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFE47C98 + 4 * byte_1B003C4E0[v4]))();
}

uint64_t sub_1AFE47C98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE47CA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE47CA8);
  return result;
}

uint64_t sub_1AFE47CB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE47CBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFE47CC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE47CC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableUnitPoint.CodingKeys()
{
  return &type metadata for CodableUnitPoint.CodingKeys;
}

unint64_t sub_1AFE47CE8()
{
  unint64_t result;

  result = qword_1EEE75160;
  if (!qword_1EEE75160)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C65C, &type metadata for CodableUnitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75160);
  }
  return result;
}

unint64_t sub_1AFE47D28()
{
  unint64_t result;

  result = qword_1EEE75168;
  if (!qword_1EEE75168)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C5CC, &type metadata for CodableUnitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75168);
  }
  return result;
}

unint64_t sub_1AFE47D68()
{
  unint64_t result;

  result = qword_1EEE75170;
  if (!qword_1EEE75170)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C5F4, &type metadata for CodableUnitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75170);
  }
  return result;
}

void WeatherConditionBackgroundConfig.colliderAEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE47DDC()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.colliderBEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE47E70()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.colliderCEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE47F04()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.colliderDEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE47F98()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.colliderEEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE4802C()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.colliderFEnabled.getter()
{
  OUTLINED_FUNCTION_16_82();
  __asm { BR              X10 }
}

void sub_1AFE480C0()
{
  OUTLINED_FUNCTION_7_104();
  OUTLINED_FUNCTION_5_6();
}

void WeatherConditionBackgroundConfig.shouldRandomizeClouds(lastConfig:forceRandomization:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  __int16 v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  BOOL v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[1240];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[1152];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[292];
  int v109;
  __int16 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE v116[10];
  __int16 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[2336];
  _BYTE v124[2352];

  v2 = MEMORY[0x1E0C80A78](a1);
  v4 = v3;
  sub_1AFCCB5D4(v2, (uint64_t)v124);
  if ((v4 & 1) != 0)
    goto LABEL_45;
  v5 = *(_QWORD *)(v1 + 768);
  v6 = *(_QWORD *)(v1 + 776);
  v7 = *(_QWORD *)(v1 + 792);
  v95 = *(_QWORD *)(v1 + 800);
  v96 = *(_QWORD *)(v1 + 784);
  v91 = *(_QWORD *)(v1 + 896);
  v92 = *(_QWORD *)(v1 + 912);
  v93 = *(_QWORD *)(v1 + 920);
  v94 = *(_QWORD *)(v1 + 904);
  v89 = *(_QWORD *)(v1 + 1032);
  v90 = *(_QWORD *)(v1 + 928);
  v87 = *(_QWORD *)(v1 + 1048);
  v88 = *(_QWORD *)(v1 + 1024);
  v85 = *(_QWORD *)(v1 + 1056);
  v86 = *(_QWORD *)(v1 + 1040);
  v81 = *(_QWORD *)(v1 + 1168);
  v82 = *(_QWORD *)(v1 + 1152);
  v83 = *(_QWORD *)(v1 + 1176);
  v84 = *(_QWORD *)(v1 + 1160);
  v79 = *(_QWORD *)(v1 + 1248);
  v80 = *(_QWORD *)(v1 + 1184);
  v76 = *(_QWORD *)(v1 + 1256);
  v77 = *(_QWORD *)(v1 + 1240);
  v78 = *(_QWORD *)(v1 + 1264);
  v8 = *(unsigned __int8 *)(v1 + 1646);
  v9 = *(unsigned __int8 *)(v1 + 1647);
  v10 = *(unsigned __int8 *)(v1 + 1648);
  v11 = *(unsigned __int8 *)(v1 + 1649);
  v12 = *(unsigned __int8 *)(v1 + 1650);
  v13 = *(unsigned __int8 *)(v1 + 1651);
  sub_1AFCCB5D4((uint64_t)v124, (uint64_t)v123);
  OUTLINED_FUNCTION_41_15((uint64_t)v123);
  if (v44)
  {
    v14 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_22_65();
    v21 = *(unsigned __int8 *)(v15 + 5);
    v44 = v17 == 0;
    v22 = 256;
    if (v44)
      v22 = 0;
    v23 = v22 | v16;
    v24 = 0x10000;
    if (!v18)
      v24 = 0;
    v25 = 0x1000000;
    if (!v19)
      v25 = 0;
    v26 = v23 | v24 | v25;
    v27 = 0x100000000;
    if (!v20)
      v27 = 0;
    v44 = v21 == 0;
    v28 = 0x10000000000;
    if (v44)
      v28 = 0;
    v14 = v26 | v27 | v28;
  }
  v29 = 256;
  if (!v9)
    v29 = 0;
  v30 = v29 | v8;
  v31 = 0x10000;
  if (!v10)
    v31 = 0;
  v32 = 0x1000000;
  if (!v11)
    v32 = 0;
  v33 = v30 | v31 | v32;
  v34 = 256;
  if (!v13)
    v34 = 0;
  *(_DWORD *)&v116[6] = v14;
  v117 = WORD2(v14);
  v110 = (v12 != 0) | v34;
  v109 = v33;
  if (v14 == 2)
    goto LABEL_45;
  v35 = (unsigned __int8 *)OUTLINED_FUNCTION_17_88();
  if (!static WeatherConditionBackgroundConfig.Layers.CloudLayers.== infix(_:_:)(v35, v36))
    goto LABEL_45;
  OUTLINED_FUNCTION_24_65((uint64_t)v124);
  OUTLINED_FUNCTION_41_15((uint64_t)v116);
  if (v44)
  {
    v38 = 0;
    v37 = v6;
LABEL_43:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AFDBE03C(v5, v37);
    v47 = v38;
LABEL_44:
    sub_1AFDBE03C(v47, 0);
    goto LABEL_45;
  }
  v38 = v118;
  v39 = v119;
  v40 = v120;
  v41 = v121;
  v42 = v122;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_23_67();
  v37 = v6;
  v43 = v7;
  if (!v39)
    goto LABEL_43;
  v44 = v5 == v38 && v39 == v6;
  if (!v44 && (OUTLINED_FUNCTION_3_5() & 1) == 0)
  {
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_12_101();
LABEL_52:
    OUTLINED_FUNCTION_6_108();
LABEL_53:
    OUTLINED_FUNCTION_6_108();
    goto LABEL_45;
  }
  if (v96 == v40 && v41 == v7)
  {
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_2_122();
    sub_1AFDBE03C(v38, v39);
  }
  else
  {
    v46 = OUTLINED_FUNCTION_3_5();
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_12_101();
    if ((v46 & 1) == 0)
      goto LABEL_52;
  }
  OUTLINED_FUNCTION_6_108();
  OUTLINED_FUNCTION_6_108();
  if (v95 == v42)
  {
    OUTLINED_FUNCTION_20_72((uint64_t)v124);
    v48 = OUTLINED_FUNCTION_17_88();
    OUTLINED_FUNCTION_41_15((uint64_t)v48);
    if (v44)
    {
      OUTLINED_FUNCTION_10_102();
      v49 = v94;
    }
    else
    {
      v43 = v111;
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_86_1();
      v49 = v94;
      if (v112)
      {
        v50 = v91 == v111 && v112 == v94;
        if (v50 || (OUTLINED_FUNCTION_3_5() & 1) != 0)
        {
          if (v92 == v113 && v114 == v93)
          {
            OUTLINED_FUNCTION_2_122();
            OUTLINED_FUNCTION_2_122();
            OUTLINED_FUNCTION_4_116(v111, v112);
          }
          else
          {
            v52 = OUTLINED_FUNCTION_3_5();
            OUTLINED_FUNCTION_2_122();
            OUTLINED_FUNCTION_2_122();
            OUTLINED_FUNCTION_0_136();
            if ((v52 & 1) == 0)
              goto LABEL_75;
          }
          OUTLINED_FUNCTION_6_108();
          OUTLINED_FUNCTION_6_108();
          if (v90 != v115)
            goto LABEL_45;
          OUTLINED_FUNCTION_21_65((uint64_t)v124);
          OUTLINED_FUNCTION_41_15((uint64_t)v108);
          if (v44)
          {
            OUTLINED_FUNCTION_10_102();
            v55 = v89;
          }
          else
          {
            v43 = v108[128];
            v56 = v108[129];
            v57 = v108[130];
            v58 = v108[131];
            v59 = v108[132];
            OUTLINED_FUNCTION_46_0();
            OUTLINED_FUNCTION_86_1();
            v55 = v89;
            if (v56)
            {
              v60 = v88 == v43 && v56 == v89;
              if (v60 || (OUTLINED_FUNCTION_3_5() & 1) != 0)
              {
                if (v86 == v57 && v58 == v87)
                {
                  swift_bridgeObjectRetain_n();
                  OUTLINED_FUNCTION_2_122();
                  OUTLINED_FUNCTION_0_136();
LABEL_90:
                  OUTLINED_FUNCTION_6_108();
                  OUTLINED_FUNCTION_6_108();
                  if (v85 != v59)
                    goto LABEL_45;
                  sub_1AFCCB5D4((uint64_t)v124, (uint64_t)v102);
                  OUTLINED_FUNCTION_41_15((uint64_t)v102);
                  if (v44)
                  {
                    OUTLINED_FUNCTION_10_102();
                  }
                  else
                  {
                    v43 = v103;
                    v63 = v104;
                    v64 = v105;
                    v65 = v106;
                    v66 = v107;
                    OUTLINED_FUNCTION_46_0();
                    OUTLINED_FUNCTION_86_1();
                    if (v63)
                    {
                      v67 = v82 == v43 && v63 == v84;
                      if (!v67 && (OUTLINED_FUNCTION_3_5() & 1) == 0)
                      {
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_0_136();
LABEL_114:
                        OUTLINED_FUNCTION_6_108();
                        goto LABEL_53;
                      }
                      if (v81 == v64 && v65 == v83)
                      {
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_4_116(v43, v63);
                      }
                      else
                      {
                        v69 = OUTLINED_FUNCTION_3_5();
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_2_122();
                        OUTLINED_FUNCTION_0_136();
                        if ((v69 & 1) == 0)
                          goto LABEL_114;
                      }
                      OUTLINED_FUNCTION_6_108();
                      OUTLINED_FUNCTION_6_108();
                      if (v80 != v66)
                        goto LABEL_45;
                      sub_1AFCCB5D4((uint64_t)v124, (uint64_t)v97);
                      OUTLINED_FUNCTION_41_15((uint64_t)v97);
                      if (v44)
                      {
                        OUTLINED_FUNCTION_10_102();
                      }
                      else
                      {
                        v43 = v98;
                        v70 = v99;
                        v71 = v100;
                        v72 = v101;
                        OUTLINED_FUNCTION_46_0();
                        OUTLINED_FUNCTION_86_1();
                        if (v70)
                        {
                          v73 = v77 == v43 && v70 == v79;
                          if (v73 || (OUTLINED_FUNCTION_3_5() & 1) != 0)
                          {
                            if (v76 == v71 && v72 == v78)
                            {
                              OUTLINED_FUNCTION_2_122();
                              OUTLINED_FUNCTION_2_122();
                              OUTLINED_FUNCTION_4_116(v43, v70);
                            }
                            else
                            {
                              v75 = OUTLINED_FUNCTION_3_5();
                              OUTLINED_FUNCTION_2_122();
                              OUTLINED_FUNCTION_2_122();
                              OUTLINED_FUNCTION_0_136();
                              if ((v75 & 1) == 0)
                                goto LABEL_131;
                            }
                            OUTLINED_FUNCTION_6_108();
                            OUTLINED_FUNCTION_6_108();
                            goto LABEL_45;
                          }
                          OUTLINED_FUNCTION_2_122();
                          OUTLINED_FUNCTION_2_122();
                          OUTLINED_FUNCTION_0_136();
LABEL_131:
                          OUTLINED_FUNCTION_6_108();
                          goto LABEL_53;
                        }
                      }
                      OUTLINED_FUNCTION_46_0();
                      swift_bridgeObjectRetain();
                      v53 = v77;
                      v54 = v79;
                      goto LABEL_67;
                    }
                  }
                  OUTLINED_FUNCTION_46_0();
                  swift_bridgeObjectRetain();
                  v53 = v82;
                  v54 = v84;
LABEL_67:
                  sub_1AFDBE03C(v53, v54);
                  v47 = v43;
                  goto LABEL_44;
                }
                v62 = OUTLINED_FUNCTION_3_5();
                OUTLINED_FUNCTION_2_122();
                OUTLINED_FUNCTION_2_122();
                OUTLINED_FUNCTION_0_136();
                if ((v62 & 1) != 0)
                  goto LABEL_90;
LABEL_75:
                OUTLINED_FUNCTION_6_108();
                goto LABEL_53;
              }
              OUTLINED_FUNCTION_2_122();
LABEL_74:
              OUTLINED_FUNCTION_2_122();
              OUTLINED_FUNCTION_0_136();
              goto LABEL_75;
            }
          }
          OUTLINED_FUNCTION_23_67();
          OUTLINED_FUNCTION_46_0();
          v53 = v88;
          v54 = v55;
          goto LABEL_67;
        }
        OUTLINED_FUNCTION_2_122();
        goto LABEL_74;
      }
    }
    OUTLINED_FUNCTION_23_67();
    swift_bridgeObjectRetain();
    v53 = v91;
    v54 = v49;
    goto LABEL_67;
  }
LABEL_45:
  OUTLINED_FUNCTION_2_3();
}

BOOL WeatherConditionBackgroundConfig.isCollisionVisible.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 1652) != 0;
}

void WeatherConditionBackgroundConfig.hasTextureUpdates(from:hasLocationChanged:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  char v13;
  _BYTE *v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  char v37;
  unint64_t *v38;
  unint64_t *v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  _BYTE v60[2336];
  unsigned __int8 __dst[1653];
  _BYTE v62[267];
  uint64_t v63;
  _BYTE v64[400];
  _QWORD v65[584];
  _BYTE v66[2352];

  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_20_72(v2);
  v58 = *(_BYTE *)(v1 + 1630);
  v59 = *(_BYTE *)(v1 + 1629);
  v3 = *(_BYTE *)(v1 + 1645);
  v4 = *(_BYTE *)(v1 + 1646);
  v5 = *(_BYTE *)(v1 + 1647);
  v6 = *(_BYTE *)(v1 + 1648);
  v7 = *(_BYTE *)(v1 + 1649);
  v8 = *(_BYTE *)(v1 + 1650);
  v9 = *(_BYTE *)(v1 + 1651);
  v56 = *(_BYTE *)(v1 + 1632);
  v57 = *(_BYTE *)(v1 + 1631);
  v54 = *(_BYTE *)(v1 + 1634);
  v55 = *(_BYTE *)(v1 + 1633);
  v10 = *(unsigned __int8 *)(v1 + 1652);
  v52 = *(_BYTE *)(v1 + 1636);
  v53 = *(_BYTE *)(v1 + 1635);
  v50 = *(_BYTE *)(v1 + 1638);
  v51 = *(_BYTE *)(v1 + 1637);
  v44 = *(_BYTE *)(v1 + 1644);
  v45 = *(_BYTE *)(v1 + 1643);
  v48 = *(_BYTE *)(v1 + 1640);
  v49 = *(_BYTE *)(v1 + 1639);
  v46 = *(_BYTE *)(v1 + 1642);
  v47 = *(_BYTE *)(v1 + 1641);
  v65[0] = v59 & 1 | (unint64_t)((v58 & 1) << 8) | ((unint64_t)(v57 & 1) << 16) & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)(v56 & 1) << 24) | ((unint64_t)(v55 & 1) << 32) | ((unint64_t)(v54 & 1) << 40) | ((unint64_t)(v53 & 1) << 48) | ((unint64_t)(v52 & 1) << 56);
  v65[1] = v51 & 1 | (unint64_t)((v50 & 1) << 8) | ((unint64_t)(v49 & 1) << 16) & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)(v48 & 1) << 24) | ((unint64_t)(v47 & 1) << 32) | ((unint64_t)(v46 & 1) << 40) | ((unint64_t)(v45 & 1) << 48) | ((unint64_t)(v44 & 1) << 56);
  v65[2] = v3 & 1 | (unint64_t)(v10 << 56) | ((v4 & 1) << 8) | ((unint64_t)(v5 & 1) << 16) & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)(v6 & 1) << 24) | ((unint64_t)(v7 & 1) << 32) | ((unint64_t)(v8 & 1) << 40) | ((unint64_t)(v9 & 1) << 48);
  v11 = *(_QWORD *)(v1 + 1920);
  v12 = OUTLINED_FUNCTION_17_88();
  OUTLINED_FUNCTION_24_65((uint64_t)v12);
  OUTLINED_FUNCTION_41_15((uint64_t)v66);
  if (!v13)
  {
    v40 = v4;
    v41 = v5;
    v42 = v6;
    v43 = v9;
    OUTLINED_FUNCTION_22_65();
    v15 = v14[5];
    v16 = v14[6];
    v17 = v14[7];
    v18 = v14[8];
    v19 = v14[9];
    v20 = v14[10];
    v21 = v14[11];
    v22 = v14[12];
    v23 = v14[13];
    v24 = v14[14];
    v25 = v14[15];
    v26 = v14[16];
    v27 = v14[17];
    v28 = v14[18];
    v29 = v14[19];
    v30 = v14[20];
    v31 = v14[21];
    LOBYTE(v14) = v14[22];
    __dst[0] = v32;
    __dst[1] = v33;
    __dst[2] = v34;
    __dst[3] = v35;
    __dst[4] = v36;
    __dst[5] = v15;
    __dst[6] = v16;
    __dst[7] = v17;
    __dst[8] = v18;
    __dst[9] = v19;
    __dst[10] = v20;
    __dst[11] = v21;
    __dst[12] = v22;
    __dst[13] = v23;
    __dst[14] = v24;
    __dst[15] = v25;
    __dst[16] = v26;
    __dst[17] = v27;
    __dst[18] = v28;
    __dst[19] = v29;
    __dst[20] = v30;
    __dst[21] = v31;
    __dst[22] = v14;
    __dst[23] = v66[1652];
    static WeatherConditionBackgroundConfig.Layers.== infix(_:_:)((unsigned __int8 *)v65, __dst);
    if ((v37 & 1) != 0)
    {
      v38 = OUTLINED_FUNCTION_17_88();
      OUTLINED_FUNCTION_21_65((uint64_t)v38);
      if (v11 == v65[240])
      {
        memcpy(__dst, (const void *)v1, 0x65DuLL);
        __dst[1629] = v59;
        __dst[1630] = v58;
        __dst[1631] = v57;
        __dst[1632] = v56;
        __dst[1633] = v55;
        __dst[1634] = v54;
        __dst[1635] = v53;
        __dst[1636] = v52;
        __dst[1637] = v51;
        __dst[1638] = v50;
        __dst[1639] = v49;
        __dst[1640] = v48;
        __dst[1641] = v47;
        __dst[1642] = v46;
        __dst[1643] = v45;
        __dst[1644] = v44;
        __dst[1645] = v3;
        __dst[1646] = v40;
        __dst[1647] = v41;
        __dst[1648] = v42;
        __dst[1649] = v7;
        __dst[1650] = v8;
        __dst[1651] = v43;
        __dst[1652] = v10;
        memcpy(v62, (const void *)(v1 + 1653), sizeof(v62));
        v63 = v11;
        memcpy(v64, (const void *)(v1 + 1928), sizeof(v64));
        v39 = OUTLINED_FUNCTION_17_88();
        sub_1AFCCB5D4((uint64_t)v39, (uint64_t)v60);
        WeatherConditionBackgroundConfig.shouldRandomizeClouds(lastConfig:forceRandomization:)((uint64_t)v60);
      }
    }
  }
  OUTLINED_FUNCTION_2_3();
}

double WeatherConditionBackgroundConfig.backgroundMask.getter@<D0>(uint64_t a1@<X8>)
{
  double v2;
  double result;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F16A8);
  v2 = COERCE_DOUBLE(swift_allocObject());
  *(_OWORD *)(*(_QWORD *)&v2 + 16) = xmmword_1B00275A0;
  *(_QWORD *)(*(_QWORD *)&v2 + 32) = sub_1B0007FE4();
  *(_QWORD *)(*(_QWORD *)&v2 + 40) = sub_1B0007FF0();
  *(double *)&v4 = v2;
  sub_1B00087A0();
  MEMORY[0x1B5E021E4](*(_QWORD *)&v2);
  sub_1B0007408();
  result = v2;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  return result;
}

void sub_1AFE48E60()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 1;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 6;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 5;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB0000000053202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF53656C676E6953;
  v24 = 5;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFE496AC();
  sub_1AFE496AC();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1165623296;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42C8000040400000, v5, 0x3E7AE1483E4CCCCCLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4296000000000000,
    v7,
    0x3E428F5C3DB851ECLL,
    0x3F8000003F800000,
    0x3E9A5D8D3F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE496AC()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  double v8;
  __int128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  float v23;
  __n128 v24;
  double v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  int v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  double v40;
  __n128 v41;
  float v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  int v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  double v56;
  __n128 v57;
  float v58;
  float v59;
  float v60;
  double v61;
  __n128 v62;
  double v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  uint64_t v72;
  float v73;
  double v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  uint64_t v82;
  __n128 v83;
  float v84;
  float v85;
  float v86;
  __n128 v87;
  __n128 v88;
  double v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  __n128 v98;
  float v99;
  float v100;
  float v101;
  float v102;
  float v103;
  float v104;
  __n128 v105;
  __n128 v106;
  double v107;
  __n128 v108;
  __int128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  double v113;
  double v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  uint64_t v122;
  __n128 v123;
  float v124;
  float v125;
  float v126;
  float v127;
  float v128;
  float v129;
  _OWORD *v130;
  double v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  uint64_t v139;
  __n128 v140;
  float v141;
  float v142;
  float v143;
  __n128 v144;
  double v145;
  __n128 v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  uint64_t v158;
  double v159;
  __n128 v160;
  float v161;
  float v162;
  __n128 v163;
  double v164;
  double v165;
  double v166;
  double v167;
  __n128 v168;
  __n128 v169;
  __n128 v170;
  __n128 v171;
  __int128 v172;
  uint64_t v173;
  int v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  uint64_t v182;
  double v183;
  __n128 v184;
  float v185;
  __n128 v186;
  double v187;
  __n128 v188;
  double v189;
  __int128 v190;
  __n128 v191;
  __n128 v192;
  __n128 v193;
  _OWORD *v194;
  int v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  uint64_t v203;
  float v204;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  _OWORD *v219;
  _OWORD *v220;
  int v221;
  int v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  _OWORD *v331;
  _OWORD *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int64x2_t v337;
  __n128 v338;
  __n128 v339;
  __n128 v340;
  _OWORD v341[2];
  _OWORD v342[2];
  _OWORD v343[2];
  _OWORD v344[2];
  __n128 v345;
  __int128 v346;
  __int128 v347;
  __n128 v348;
  __int128 v349;
  __int128 v350;
  __n128 v351;
  __n128 v352;
  __n128 v353;
  __int128 v354;
  __n128 v355;
  __n128 v356;
  __n128 v357;
  __n128 v358;
  __n128 v359;
  __n128 v360;
  __n128 v361;
  __n128 v362;
  __n128 v363;
  __int128 v364;
  __n128 v365;
  __n128 v366;
  __n128 v367;
  __int128 v368;
  __n128 v369;
  __n128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __n128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __n128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __n128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v405 = xmmword_1B002D980;
  v406 = xmmword_1B002D990;
  v403 = xmmword_1B002D9A0;
  v404 = xmmword_1B002D9B0;
  v401 = xmmword_1B0028220;
  v402 = xmmword_1B0028230;
  v399 = xmmword_1B002D9C0;
  v400 = xmmword_1B002D9D0;
  v397 = xmmword_1B002D9E0;
  v398 = xmmword_1B002D9F0;
  v395 = xmmword_1B002DA00;
  v396 = xmmword_1B0027B30;
  v393 = xmmword_1B0029320;
  v394 = xmmword_1B002DA10;
  __asm { FMOV            V2.2D, #1.0 }
  v391 = _Q2;
  v392 = xmmword_1B0027740;
  v389 = xmmword_1B0029360;
  v390 = xmmword_1B0029370;
  v387 = (__int128)_Q2;
  v388 = (__int128)_Q2;
  v386 = 0u;
  v385 = 0u;
  v383 = _Q2;
  v384 = xmmword_1B0027030;
  v381 = xmmword_1B002DA20;
  v382 = xmmword_1B002DA30;
  v379 = xmmword_1B002DA40;
  v380 = xmmword_1B002DA50;
  v377 = xmmword_1B002DA60;
  v378 = xmmword_1B002DA70;
  v375 = xmmword_1B002DA80;
  v376 = xmmword_1B002DA90;
  v338 = _Q2;
  v373 = _Q2;
  OUTLINED_FUNCTION_25_60((__n128)xmmword_1B0025E90, 0.730000019, _Q2);
  v340 = v6;
  v367 = v7;
  v368 = xmmword_1B0025E50;
  v365 = v7;
  v366 = v7;
  v363 = v7;
  v364 = xmmword_1B0027770;
  OUTLINED_FUNCTION_8_11(1.0, v8, v7);
  v354 = v9;
  v351 = v10;
  v339 = v11;
  v352 = v11;
  v349 = xmmword_1B002DAA0;
  v350 = xmmword_1B0029000;
  v347 = xmmword_1B002DAB0;
  v348 = v12;
  v345 = v10;
  v346 = v9;
  OUTLINED_FUNCTION_18_11(0.976004779, v12.n128_f64[0], v10, v11);
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_17_4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 600.0, 100.0, 0.4, v23, &v391, &v389, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v387,
    1065353216,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    (uint64_t)v341);
  v349 = xmmword_1B002DAA0;
  v405 = xmmword_1B002D980;
  v406 = xmmword_1B002D990;
  OUTLINED_FUNCTION_0_41();
  OUTLINED_FUNCTION_11_21();
  v381 = xmmword_1B002DA20;
  v382 = xmmword_1B002DA30;
  v379 = xmmword_1B002DA40;
  v380 = xmmword_1B002DA50;
  v377 = xmmword_1B002DA60;
  v378 = xmmword_1B002DA70;
  v375 = xmmword_1B002DA80;
  OUTLINED_FUNCTION_4_8((__n128)xmmword_1B002DA90, v24, v25, v26);
  v350 = xmmword_1B0029000;
  OUTLINED_FUNCTION_13_2((__n128)xmmword_1B002DAB0, v27, v28, v29, v30);
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_27_22();
  v213 = v31;
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_17_4(v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, 600.0, 100.0, 0.4, v42, &v391, &v389, 0x3F4CCCCD3F4CCCCDLL, v213, &v387,
    v221,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    v235,
    v239,
    v243,
    v247,
    v251,
    v255,
    v261,
    v267,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    (uint64_t)v341);
  v405 = xmmword_1B0029460;
  v406 = xmmword_1B0029470;
  v403 = xmmword_1B0029480;
  v404 = xmmword_1B0029490;
  OUTLINED_FUNCTION_33_7();
  v399 = xmmword_1B002DAC0;
  v400 = xmmword_1B002DAD0;
  v397 = xmmword_1B00294C0;
  v398 = xmmword_1B00294D0;
  OUTLINED_FUNCTION_29_6((__n128)xmmword_1B0027B20);
  v393 = xmmword_1B002DAE0;
  v394 = xmmword_1B002DAF0;
  OUTLINED_FUNCTION_13_100();
  v384 = (__int128)v339;
  v381 = xmmword_1B002DB00;
  v382 = xmmword_1B002DB10;
  v379 = xmmword_1B002DB20;
  v380 = xmmword_1B002DB30;
  v377 = xmmword_1B002DB40;
  v378 = xmmword_1B002DB50;
  v375 = xmmword_1B002DB60;
  v376 = xmmword_1B002B0B0;
  OUTLINED_FUNCTION_15_19(0.541176498, v43.n128_f64[0], v43);
  v368 = xmmword_1B0025E50;
  v365 = v44;
  v366 = v44;
  v363 = v44;
  v364 = xmmword_1B0027770;
  v361 = v44;
  v362 = v44;
  v359 = v44;
  v360 = v44;
  v357 = v44;
  v358 = v44;
  v355 = v44;
  v356 = v44;
  v353 = v44;
  v354 = xmmword_1B0025E50;
  v351 = v44;
  v352 = v45;
  v349 = (__int128)v44;
  v350 = (__int128)v45;
  OUTLINED_FUNCTION_13_2((__n128)xmmword_1B002DB70, v44, (__n128)xmmword_1B0025E50, v45, v46);
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_25_0();
  HIDWORD(v210) = v47;
  v214 = v47;
  LODWORD(v210) = v47;
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_17_4(v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, 150.0, v59, v60, &v391, &v389, v210, v214, &v387,
    1065353216,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    v236,
    v240,
    v244,
    v248,
    v252,
    v256,
    v262,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    (uint64_t)v341);
  v405 = xmmword_1B00295A0;
  v406 = xmmword_1B00295B0;
  v403 = xmmword_1B002DB80;
  v404 = xmmword_1B0027150;
  v401 = xmmword_1B00295C0;
  v402 = xmmword_1B00295D0;
  v399 = xmmword_1B002DB90;
  v400 = xmmword_1B0026120;
  v397 = xmmword_1B002DBA0;
  v398 = xmmword_1B0029330;
  OUTLINED_FUNCTION_29_6((__n128)xmmword_1B0027B20);
  v393 = xmmword_1B002DAE0;
  v394 = xmmword_1B002DBB0;
  OUTLINED_FUNCTION_29_15();
  v389 = xmmword_1B0029630;
  v390 = xmmword_1B0026A00;
  v387 = xmmword_1B0026320;
  v388 = xmmword_1B0026330;
  OUTLINED_FUNCTION_24_66(0.970078886, 0.97049284, v61, v62);
  v381 = xmmword_1B002DBC0;
  v382 = xmmword_1B002DBD0;
  v379 = xmmword_1B002DBE0;
  v380 = xmmword_1B002DBF0;
  v377 = xmmword_1B002DC00;
  v378 = xmmword_1B002DC10;
  v375 = xmmword_1B002DC20;
  v376 = xmmword_1B002DC30;
  OUTLINED_FUNCTION_5_10(0.501960814, 0.792156816, v63, v64);
  v351 = v65;
  v352 = v66;
  v349 = (__int128)v65;
  v350 = (__int128)v66;
  v347 = xmmword_1B002DC40;
  v348 = v67;
  v345 = v65;
  v346 = v68;
  OUTLINED_FUNCTION_16_83(0.909476459, *(double *)&v68, v66, v65);
  v333 = v69;
  OUTLINED_FUNCTION_1_42();
  OUTLINED_FUNCTION_25_0();
  v71 = *(float *)(v70 + 2616);
  v73 = *(float *)(v72 + 3240);
  v74 = OUTLINED_FUNCTION_17_34();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v75, v76, v77, v78, v79, v80, v81, v82, v74, v83, v84, v85, 0.8, v86, v71, v73, &v391, &v389,
    0x3F6666663F666666,
    0,
    &v387,
    1065353216,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    v237,
    v241,
    v245,
    v249,
    v253,
    v257,
    v263,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v315,
    v319,
    v323,
    v327,
    v342,
    v333);
  v405 = xmmword_1B00296F0;
  v406 = xmmword_1B0029700;
  OUTLINED_FUNCTION_14_30();
  v400 = (__int128)v338;
  v397 = xmmword_1B0029600;
  OUTLINED_FUNCTION_6_39();
  v391 = v87;
  v392 = xmmword_1B0027740;
  OUTLINED_FUNCTION_23_34();
  v387 = xmmword_1B0027D70;
  v388 = xmmword_1B0027D80;
  v386 = 0u;
  v385 = 0u;
  v383 = v88;
  v384 = (__int128)v339;
  v381 = xmmword_1B002DC50;
  v382 = xmmword_1B002DC60;
  v379 = xmmword_1B002DC70;
  v380 = xmmword_1B002DC80;
  v377 = xmmword_1B002DC90;
  v378 = xmmword_1B002A1C0;
  v375 = xmmword_1B002DC20;
  v376 = xmmword_1B002DCA0;
  v373 = v88;
  v374 = v340;
  v371 = v88;
  v372 = v88;
  v369 = v88;
  v370 = v340;
  v367 = v88;
  v368 = xmmword_1B0025E50;
  v365 = v88;
  v366 = v88;
  v363 = v88;
  v364 = xmmword_1B0027770;
  v361 = v88;
  v362 = v88;
  v359 = v88;
  v360 = v88;
  v357 = v88;
  v358 = v88;
  v355 = v88;
  v356 = v88;
  v353 = v88;
  v354 = xmmword_1B0025E50;
  v351 = v88;
  v352 = v339;
  v337 = vdupq_n_s64(0x3FED51B200000000uLL);
  v349 = (__int128)v337;
  v350 = xmmword_1B002DCB0;
  v347 = xmmword_1B002DCC0;
  v348 = v340;
  v345 = v88;
  v346 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_21_18(v88, v339);
  OUTLINED_FUNCTION_1_42();
  v89 = OUTLINED_FUNCTION_5_42();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v90, v91, v92, v93, v94, v95, v96, v97, v89, v98, v99, v100, v101, v102, v103, v104, v206, v208,
    v211,
    v215,
    v219,
    1065353216,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    v238,
    v242,
    v246,
    v250,
    v254,
    v258,
    v264,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    v312,
    v316,
    v320,
    v324,
    v328,
    v342,
    (uint64_t)&v391);
  v405 = xmmword_1B00296F0;
  v406 = xmmword_1B0029700;
  v397 = xmmword_1B0029600;
  v387 = xmmword_1B0027D70;
  v388 = xmmword_1B0027D80;
  v381 = xmmword_1B002DC50;
  v382 = xmmword_1B002DC60;
  v379 = xmmword_1B002DC70;
  v380 = xmmword_1B002DC80;
  v377 = xmmword_1B002DC90;
  v378 = xmmword_1B002A1C0;
  v376 = xmmword_1B002DCA0;
  v349 = (__int128)v337;
  v350 = xmmword_1B002DCB0;
  v347 = xmmword_1B002DCC0;
  v375 = xmmword_1B002DC20;
  OUTLINED_FUNCTION_14_30();
  v400 = (__int128)v338;
  OUTLINED_FUNCTION_6_39();
  v391 = v105;
  v392 = xmmword_1B0027740;
  OUTLINED_FUNCTION_23_34();
  v386 = 0u;
  v385 = 0u;
  v383 = v106;
  v384 = (__int128)v339;
  OUTLINED_FUNCTION_15_19(0.0, v107, v106);
  v368 = xmmword_1B0025E50;
  v365 = v108;
  v366 = v108;
  v363 = v108;
  v364 = xmmword_1B0027770;
  OUTLINED_FUNCTION_8_11(1.0, 1.0, v108);
  v354 = v109;
  v351 = v110;
  v352 = v111;
  v348 = v112;
  v345 = v110;
  v346 = v109;
  OUTLINED_FUNCTION_18_11(*(double *)&v109, v113, v110, v111);
  v114 = OUTLINED_FUNCTION_5_42();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v115, v116, v117, v118, v119, v120, v121, v122, v114, v123, v124, v125, v126, v127, v128, v129, v207, v209,
    v212,
    v216,
    v220,
    1065353216,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    (uint64_t)&v391);
  v405 = xmmword_1B00295A0;
  v406 = xmmword_1B00295B0;
  v403 = xmmword_1B002DB80;
  v404 = xmmword_1B0027150;
  v401 = xmmword_1B00295C0;
  v402 = xmmword_1B00295D0;
  v399 = xmmword_1B002DB90;
  v400 = xmmword_1B0026120;
  v397 = xmmword_1B002DBA0;
  v398 = xmmword_1B0029330;
  v394 = xmmword_1B002DBB0;
  OUTLINED_FUNCTION_23_34();
  v387 = xmmword_1B0026320;
  v388 = xmmword_1B0026330;
  v381 = xmmword_1B002DBC0;
  v382 = xmmword_1B002DBD0;
  v379 = xmmword_1B002DBE0;
  v380 = xmmword_1B002DBF0;
  v377 = xmmword_1B002DC00;
  v378 = xmmword_1B002DC10;
  v375 = xmmword_1B002DC20;
  v376 = xmmword_1B002DC30;
  v347 = xmmword_1B002DC40;
  v393 = xmmword_1B002DAE0;
  OUTLINED_FUNCTION_29_6((__n128)xmmword_1B0027B20);
  v391 = v338;
  v392 = xmmword_1B0027740;
  v386 = 0u;
  v385 = 0u;
  v383 = v338;
  v384 = (__int128)v339;
  v373 = v338;
  v374 = v340;
  v371 = v338;
  v372 = v338;
  v369 = v338;
  v370 = v340;
  v367 = v338;
  v368 = xmmword_1B0025E50;
  v365 = v338;
  v366 = v338;
  v363 = v338;
  v364 = xmmword_1B0027770;
  v361 = v338;
  v362 = v338;
  v359 = v338;
  v360 = v338;
  v357 = v338;
  v358 = v338;
  v355 = v338;
  v356 = v338;
  v353 = v338;
  v354 = xmmword_1B0025E50;
  v351 = v338;
  v352 = v339;
  v349 = (__int128)v338;
  v350 = (__int128)v339;
  v348 = v340;
  v345 = v338;
  v346 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_21_18(v338, v339);
  OUTLINED_FUNCTION_3_42();
  v259 = v130;
  OUTLINED_FUNCTION_12_40();
  v131 = OUTLINED_FUNCTION_17_34();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v132, v133, v134, v135, v136, v137, v138, v139, v131, v140, v141, v142, 0.8, v143, v71, v73, &v391, &v389,
    0x3F6666663F666666,
    0,
    &v387,
    1065353216,
    v223,
    v227,
    v231,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    v259,
    v265,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    v313,
    v317,
    v321,
    v325,
    v329,
    v331,
    v334);
  v405 = xmmword_1B0029460;
  v406 = xmmword_1B0029470;
  v403 = xmmword_1B0029480;
  v404 = xmmword_1B0029490;
  OUTLINED_FUNCTION_33_7();
  v399 = xmmword_1B002DAC0;
  v400 = xmmword_1B002DAD0;
  v397 = xmmword_1B00294C0;
  OUTLINED_FUNCTION_6_39();
  OUTLINED_FUNCTION_11_21();
  v381 = xmmword_1B002DB00;
  v382 = xmmword_1B002DB10;
  v379 = xmmword_1B002DB20;
  v380 = xmmword_1B002DB30;
  v377 = xmmword_1B002DB40;
  v378 = xmmword_1B002DB50;
  v375 = xmmword_1B002DCD0;
  OUTLINED_FUNCTION_4_8((__n128)xmmword_1B002B0B0, v144, v145, v146);
  v349 = (__int128)v147;
  v350 = (__int128)v148;
  OUTLINED_FUNCTION_13_2((__n128)xmmword_1B002DB70, v147, v149, v148, v150);
  OUTLINED_FUNCTION_12_40();
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_16_0(v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, 900.0, 150.0, v161, v162, &v391, &v389, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v387,
    1065353216,
    v224,
    v228,
    v232,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    (uint64_t)v341);
  v405 = xmmword_1B002D980;
  v406 = xmmword_1B002D990;
  OUTLINED_FUNCTION_0_41();
  OUTLINED_FUNCTION_29_15();
  v389 = xmmword_1B0029360;
  v390 = xmmword_1B0029370;
  v387 = (__int128)v163;
  v388 = (__int128)v163;
  OUTLINED_FUNCTION_24_66(0.509803951, v164, v165, v163);
  v381 = xmmword_1B002DA20;
  v382 = xmmword_1B002DA30;
  v379 = xmmword_1B002DA40;
  v380 = xmmword_1B002DA50;
  v377 = xmmword_1B002DA60;
  v378 = xmmword_1B002DA70;
  v375 = xmmword_1B002DCE0;
  v376 = xmmword_1B002DA90;
  OUTLINED_FUNCTION_5_10(0.730000019, v166, v167, v168);
  v351 = v169;
  v352 = v170;
  v349 = xmmword_1B002DCF0;
  v350 = xmmword_1B002DD00;
  v347 = xmmword_1B002DAB0;
  v348 = v171;
  v345 = v169;
  v346 = v172;
  OUTLINED_FUNCTION_16_83(0.976004779, 1.0, v170, v169);
  v335 = v173;
  OUTLINED_FUNCTION_12_40();
  OUTLINED_FUNCTION_25_0();
  v217 = v174;
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_16_0(v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, 600.0, 100.0, 0.4, v185, &v391, &v389, 0x3F4CCCCD3F4CCCCDLL, v217, &v387,
    1065353216,
    v225,
    v229,
    v233,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    v344,
    v343,
    1112014848,
    1097859072,
    v342,
    v335);
  v405 = xmmword_1B002D980;
  v406 = xmmword_1B002D990;
  OUTLINED_FUNCTION_0_41();
  OUTLINED_FUNCTION_13_100();
  v384 = (__int128)v339;
  v381 = xmmword_1B002DA20;
  v382 = xmmword_1B002DA30;
  v379 = xmmword_1B002DA40;
  v380 = xmmword_1B002DA50;
  v377 = xmmword_1B002DA60;
  v378 = xmmword_1B002DA70;
  v375 = xmmword_1B002DA80;
  v376 = xmmword_1B002DA90;
  v373 = v186;
  OUTLINED_FUNCTION_25_60(v340, v187, v186);
  v367 = v188;
  v368 = xmmword_1B0025E50;
  v365 = v188;
  v366 = v188;
  v363 = v188;
  v364 = xmmword_1B0027770;
  OUTLINED_FUNCTION_8_11(1.0, v189, v188);
  v354 = v190;
  v351 = v191;
  v352 = v192;
  v349 = xmmword_1B002DD10;
  v350 = xmmword_1B0029000;
  v347 = xmmword_1B002DAB0;
  v348 = v193;
  v345 = v191;
  v346 = v190;
  v344[0] = v191;
  v344[1] = v192;
  v343[0] = v191;
  v343[1] = v191;
  v342[0] = v191;
  v342[1] = v191;
  v341[0] = v191;
  v341[1] = v191;
  OUTLINED_FUNCTION_3_42();
  v260 = v194;
  OUTLINED_FUNCTION_12_40();
  OUTLINED_FUNCTION_27_22();
  v218 = v195;
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_16_0(v196, v197, v198, v199, v200, v201, v202, v203, -90.0, (__n128)xmmword_1B0026420, 600.0, 100.0, 0.4, v204, &v391, &v389, 0x3F4CCCCD3F4CCCCDLL, v218, &v387,
    v222,
    v226,
    v230,
    v234,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    v260,
    v266,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v314,
    v318,
    v322,
    v326,
    v330,
    v332,
    v336);
  return v0;
}

uint64_t sub_1AFE4AB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = sub_1B0005FB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
  v10 = *(_QWORD *)(sub_1AFAF9810(a2, a3) + 16);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v11 = (id)qword_1ED1F4470;
    sub_1B00054B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1B00275C0;
    sub_1B0005D10();
    sub_1B0005C8C();
    v13 = sub_1B0005F5C();
  }
  else
  {
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v15 = (id)qword_1ED1F4470;
    sub_1B00054B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1B00275C0;
    sub_1B0005D10();
    sub_1B0005C8C();
    String.beginsWithFirstArgument.getter();
    v13 = sub_1B0005F38();
  }
  v16 = v13;
  v17 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1AFAFB1D0();
  *(_QWORD *)(v12 + 32) = v16;
  *(_QWORD *)(v12 + 40) = v17;
  v18 = sub_1B0008560();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1AFE4AE38()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t *sub_1AFE4AE64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)type metadata accessor for AirQualityComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v8 = v6[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
      v12 = v6[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1B00061B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v6[8];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1B0006328();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
    }
  }
  return a1;
}

uint64_t sub_1AFE4AFB0(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 1, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[7];
    v7 = sub_1B00061B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v2[8];
    v9 = sub_1B0006328();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  return result;
}

_BYTE *sub_1AFE4B06C(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = v4[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
    v10 = v4[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_1B00061B4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = v4[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_1B0006328();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

_BYTE *sub_1AFE4B190(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;

  v4 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      *a1 = *a2;
      v21 = v4[5];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
      *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
      v25 = v4[7];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = sub_1B00061B4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
      v29 = v4[8];
      v30 = &a1[v29];
      v31 = &a2[v29];
      v32 = sub_1B0006328();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
      return a1;
    }
    sub_1AFE3E994((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v7 = v4[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
  v11 = v4[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1B00061B4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v4[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1B0006328();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  return a1;
}

_BYTE *sub_1AFE4B374(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = v4[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
    v10 = v4[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_1B00061B4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    v14 = v4[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_1B0006328();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

_BYTE *sub_1AFE4B498(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;

  v4 = (int *)type metadata accessor for AirQualityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      *a1 = *a2;
      v21 = v4[5];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
      *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
      v25 = v4[7];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = sub_1B00061B4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      v29 = v4[8];
      v30 = &a1[v29];
      v31 = &a2[v29];
      v32 = sub_1B0006328();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
      return a1;
    }
    sub_1AFE3E994((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v7 = v4[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)&a1[v4[6]] = *(_QWORD *)&a2[v4[6]];
  v11 = v4[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1B00061B4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v4[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1B0006328();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  return a1;
}

uint64_t sub_1AFE4B67C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE4B688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1AFE4B6C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE4B6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AirQualityCircularLabelView()
{
  uint64_t result;

  result = qword_1ED1F0EE0;
  if (!qword_1ED1F0EE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AFE4B740()
{
  unint64_t v0;

  sub_1AFE4B7A8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AFE4B7A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1EF528)
  {
    type metadata accessor for AirQualityComplicationViewModel();
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1EF528);
  }
}

uint64_t sub_1AFE4B7FC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1AFE4B80C@<D0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  double result;
  __int128 v9;
  __int128 v10;
  char v11;

  if (qword_1ED1EF4C0 != -1)
    swift_once();
  if (byte_1ED1FEC18 == 1)
  {
    sub_1AFE4BA10();
    sub_1B0008098();
    sub_1AFE4BAF0();
  }
  else
  {
    sub_1B00077BC();
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v2 = (id)qword_1ED1F4470;
    v3 = sub_1B0007D44();
    v5 = v4;
    v7 = v6 & 1;
    *(_QWORD *)&v9 = sub_1AFE4BAF0();
    sub_1B0007CD8();
    sub_1AFAED640(v3, v5, v7);
    swift_release();
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE6A0);
  sub_1AFD10954();
  sub_1B0007918();
  result = *(double *)&v9;
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_1AFE4BA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE4BBAC(v0, (uint64_t)v3);
  v4 = type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1AFE4BBF4((uint64_t)v3);
LABEL_4:
    swift_bridgeObjectRelease();
    return 0x6964656D2E697161;
  }
  v5 = sub_1B0006304();
  v7 = v6;
  sub_1AFE3E994((uint64_t)v3);
  if (!v7)
    goto LABEL_4;
  return v5;
}

uint64_t sub_1AFE4BAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFE4BBAC(v0, (uint64_t)v3);
  v4 = type metadata accessor for AirQualityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1AFE4BBF4((uint64_t)v3);
    return sub_1B0007FF0();
  }
  else
  {
    v6 = sub_1B00062F8();
    v5 = Color.init(hex:)(v6, v7);
    sub_1AFE3E994((uint64_t)v3);
  }
  return v5;
}

uint64_t sub_1AFE4BBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE4BBF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EF520);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for SevereWeatherComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = v7[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1B0005FB0();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      v18 = v7[7];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = v7[8];
      v23 = (uint64_t *)((char *)a1 + v22);
      v24 = (uint64_t *)((char *)a2 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = v7[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      swift_bridgeObjectRetain();
      v17(v27, v28, v16);
      v29 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v30 = v29[5];
      v31 = &v27[v30];
      v32 = &v28[v30];
      *(_QWORD *)v31 = *(_QWORD *)v32;
      v31[8] = v32[8];
      v27[v29[6]] = v28[v29[6]];
      v27[v29[7]] = v28[v29[7]];
      *(_QWORD *)&v27[v29[8]] = *(_QWORD *)&v28[v29[8]];
      v27[v29[9]] = v28[v29[9]];
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for SevereWeatherComplicationDataStatus(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v2 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[6];
    v7 = sub_1B0005FB0();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v10(v6, v7);
    v8 = a1 + v2[7];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + v2[9], v7);
  }
  return result;
}

_BYTE *initializeWithCopy for SevereWeatherComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;

  v6 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = v6[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = v6[8];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    swift_bridgeObjectRetain();
    v15(v25, v26, v14);
    v27 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v28 = v27[5];
    v29 = &v25[v28];
    v30 = &v26[v28];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v25[v27[6]] = v26[v27[6]];
    v25[v27[7]] = v26[v27[7]];
    *(_QWORD *)&v25[v27[8]] = *(_QWORD *)&v26[v27[8]];
    v25[v27[9]] = v26[v27[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for SevereWeatherComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  int *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  char v32;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;

  v6 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v34 = v6[5];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
      v38 = v6[6];
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = sub_1B0005FB0();
      v42 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 24);
      v42(v39, v40, v41);
      v43 = v6[7];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
      v47 = v6[8];
      v48 = &a1[v47];
      v49 = &a2[v47];
      *v48 = *v49;
      v48[1] = v49[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v50 = v6[9];
      v51 = &a1[v50];
      v52 = &a2[v50];
      v42(&a1[v50], v52, v41);
      v53 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v54 = v53[5];
      v55 = &v51[v54];
      v56 = &v52[v54];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      v55[8] = v56[8];
      v51[v53[6]] = v52[v53[6]];
      v51[v53[7]] = v52[v53[7]];
      *(_QWORD *)&v51[v53[8]] = *(_QWORD *)&v52[v53[8]];
      v51[v53[9]] = v52[v53[9]];
      return a1;
    }
    sub_1AFE4C3B0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v18 = v6[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = v6[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = v6[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  swift_bridgeObjectRetain();
  v17(v26, v27, v16);
  v28 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v29 = v28[5];
  v30 = &v26[v29];
  v31 = &v27[v29];
  v32 = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v32;
  v26[v28[6]] = v27[v28[6]];
  v26[v28[7]] = v27[v28[7]];
  *(_QWORD *)&v26[v28[8]] = *(_QWORD *)&v27[v28[8]];
  v26[v28[9]] = v27[v28[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFE4C3B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SevereWeatherComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for SevereWeatherComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  int *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;

  v6 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    v16 = v6[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
    v20 = v6[9];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v15(&a1[v20], v22, v14);
    v23 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v24 = v23[5];
    v25 = &v21[v24];
    v26 = &v22[v24];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v21[v23[6]] = v22[v23[6]];
    v21[v23[7]] = v22[v23[7]];
    *(_QWORD *)&v21[v23[8]] = *(_QWORD *)&v22[v23[8]];
    v21[v23[9]] = v22[v23[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for SevereWeatherComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  void (*v38)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  int *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;

  v6 = (int *)type metadata accessor for SevereWeatherComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v30 = v6[5];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
      v34 = v6[6];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_1B0005FB0();
      v38 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 40);
      v38(v35, v36, v37);
      v39 = v6[7];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
      v43 = v6[8];
      v44 = &a1[v43];
      v45 = (uint64_t *)&a2[v43];
      v47 = *v45;
      v46 = v45[1];
      *v44 = v47;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      v48 = v6[9];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v38(&a1[v48], v50, v37);
      v51 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v52 = v51[5];
      v53 = &v49[v52];
      v54 = &v50[v52];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v53[8] = v54[8];
      v49[v51[6]] = v50[v51[6]];
      v49[v51[7]] = v50[v51[7]];
      *(_QWORD *)&v49[v51[8]] = *(_QWORD *)&v50[v51[8]];
      v49[v51[9]] = v50[v51[9]];
      return a1;
    }
    sub_1AFE4C3B0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v18 = v6[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  v22 = v6[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v17(&a1[v22], v24, v16);
  v25 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v26 = v25[5];
  v27 = &v23[v26];
  v28 = &v24[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v23[v25[6]] = v24[v25[6]];
  v23[v25[7]] = v24[v25[7]];
  *(_QWORD *)&v23[v25[8]] = *(_QWORD *)&v24[v25[8]];
  v23[v25[9]] = v24[v25[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SevereWeatherComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE4C878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for SevereWeatherComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SevereWeatherComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE4C8C8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for SevereWeatherComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFE4C914(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SevereWeatherComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFE4C944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SevereWeatherComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for SevereWeatherComplicationDataStatus()
{
  uint64_t result;

  result = qword_1EEE75210;
  if (!qword_1EEE75210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE4C9B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SevereWeatherComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1AFE4CA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DayWeather.conditionOfRelevance(isToday:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2670);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_137();
  OUTLINED_FUNCTION_8_106();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_4();
  if ((a1 & 1) == 0)
    return sub_1B0005BF0();
  sub_1B0005B90();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1AFAF6288(v2, &qword_1ED1F2670);
    return sub_1B0005BF0();
  }
  OUTLINED_FUNCTION_2_123();
  sub_1B00061D8();
  return OUTLINED_FUNCTION_5_112();
}

double DayWeather.precipitationOfRelevance(isToday:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2670);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_137();
  OUTLINED_FUNCTION_8_106();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_4();
  if ((a2 & 1) != 0)
  {
    sub_1B0005B90();
    if (__swift_getEnumTagSinglePayload(v3, 1, v2) != 1)
    {
      OUTLINED_FUNCTION_2_123();
      sub_1B00061CC();
      v8 = v9;
      sub_1B00061C0();
      OUTLINED_FUNCTION_5_112();
      return v8;
    }
    sub_1AFAF6288(v3, &qword_1ED1F2670);
  }
  sub_1B0005BCC();
  v8 = v7;
  sub_1B0005B9C();
  return v8;
}

uint64_t WindComplicationHourlyViewModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1B00058FC();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t WindComplicationHourlyViewModel.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B00058FC();
  return OUTLINED_FUNCTION_0_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*WindComplicationHourlyViewModel.id.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WindComplicationHourlyViewModel.angle.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_4_11();
  sub_1AFE234F0(v1 + *(int *)(v3 + 20), a1, &qword_1ED1F0FB0);
}

uint64_t type metadata accessor for WindComplicationHourlyViewModel()
{
  uint64_t result;

  result = qword_1ED1EF588;
  if (!qword_1ED1EF588)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WindComplicationHourlyViewModel.direction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_4_11() + 24));
}

void WindComplicationHourlyViewModel.speed.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_4_11();
  sub_1AFE234F0(v1 + *(int *)(v3 + 28), a1, &qword_1ED1F4038);
}

uint64_t WindComplicationHourlyViewModel.now.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_4_11() + 32));
}

uint64_t WindComplicationHourlyViewModel.time.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_11_0();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t WindComplicationHourlyViewModel.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_12();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t WindComplicationHourlyViewModel.init(angle:direction:speed:now:time:timeZone:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1B00058F0();
  v12 = (int *)OUTLINED_FUNCTION_4_11();
  sub_1AFE236A4(a1, a6 + v12[5], &qword_1ED1F0FB0);
  *(_BYTE *)(a6 + v12[6]) = a2;
  sub_1AFE236A4(a3, a6 + v12[7], &qword_1ED1F4038);
  *(_BYTE *)(a6 + v12[8]) = a4;
  v13 = a6 + v12[9];
  v14 = OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_30_52(v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
  v15 = a6 + v12[10];
  v16 = OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a5, v16);
}

uint64_t static WindComplicationHourlyViewModel.make(now:time:timeZone:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t result;

  v8 = (int *)OUTLINED_FUNCTION_4_11();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  OUTLINED_FUNCTION_13_101(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_13_101(v10);
  v11 = a4 + v8[9];
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_24_12();
  v12(v11, a2);
  v13 = a4 + v8[10];
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_24_12();
  v14(v13, a3);
  result = sub_1B00058F0();
  *(_BYTE *)(a4 + v8[6]) = 16;
  *(_BYTE *)(a4 + v8[8]) = a1;
  return result;
}

uint64_t static WindComplicationHourlyViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t EnumTagSinglePayload;
  char v36;
  uint64_t *v37;
  char v38;
  uint64_t v40;
  char v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  int *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v70 = *(_QWORD *)(v75 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33();
  v69 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FC8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  v74 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  v71 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v72 = (uint64_t)&v65 - v13;
  MEMORY[0x1E0C80A78](v14);
  v73 = (uint64_t)&v65 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  v76 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_9();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FC0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v65 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v65 - v30;
  if ((sub_1B00058E4() & 1) == 0)
    goto LABEL_12;
  v65 = v7;
  v32 = OUTLINED_FUNCTION_4_11();
  v33 = *(int *)(v32 + 20);
  v66 = a1;
  OUTLINED_FUNCTION_22_61(a1 + v33, (uint64_t)v31);
  v67 = (int *)v32;
  v68 = a2;
  OUTLINED_FUNCTION_22_61(a2 + *(int *)(v32 + 20), (uint64_t)v28);
  v34 = v2 + *(int *)(v21 + 48);
  OUTLINED_FUNCTION_22_61((uint64_t)v31, v2);
  OUTLINED_FUNCTION_22_61((uint64_t)v28, v34);
  OUTLINED_FUNCTION_57(v2);
  if (v36)
  {
    OUTLINED_FUNCTION_18_9((uint64_t)v28);
    OUTLINED_FUNCTION_18_9((uint64_t)v31);
    EnumTagSinglePayload = OUTLINED_FUNCTION_57(v34);
    if (v36)
    {
      OUTLINED_FUNCTION_66_0(EnumTagSinglePayload, &qword_1ED1F0FB0);
      goto LABEL_15;
    }
LABEL_10:
    v37 = &qword_1ED1F0FC0;
LABEL_11:
    OUTLINED_FUNCTION_66_0(EnumTagSinglePayload, v37);
    goto LABEL_12;
  }
  sub_1AFE234F0(v2, (uint64_t)v25, &qword_1ED1F0FB0);
  OUTLINED_FUNCTION_57(v34);
  if (v36)
  {
    OUTLINED_FUNCTION_5_8((uint64_t)v28);
    OUTLINED_FUNCTION_5_8((uint64_t)v31);
    EnumTagSinglePayload = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v25, v16);
    goto LABEL_10;
  }
  v40 = v76;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v20, v34, v16);
  sub_1AFB23DC0(&qword_1EEE75228, &qword_1ED1F25E0);
  v41 = sub_1B0008530();
  v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v42(v20, v16);
  OUTLINED_FUNCTION_18_9((uint64_t)v28);
  OUTLINED_FUNCTION_18_9((uint64_t)v31);
  v42((uint64_t)v25, v16);
  OUTLINED_FUNCTION_18_9(v2);
  if ((v41 & 1) == 0)
    goto LABEL_12;
LABEL_15:
  v43 = v66;
  v44 = v67;
  v45 = v67[6];
  v46 = *(unsigned __int8 *)(v68 + v45);
  if (*(_BYTE *)(v66 + v45) == 16)
  {
    if (v46 != 16)
      goto LABEL_12;
  }
  else
  {
    if (v46 == 16)
      goto LABEL_12;
    v47 = sub_1B00063F4();
    v49 = v48;
    if (v47 == sub_1B00063F4() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v52 = sub_1B0008FB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = 0;
      if ((v52 & 1) == 0)
        return v38 & 1;
    }
  }
  v53 = v73;
  OUTLINED_FUNCTION_21_62(v43 + v44[7], v73);
  v54 = v68;
  v55 = v72;
  OUTLINED_FUNCTION_21_62(v68 + v44[7], v72);
  v56 = v74;
  v57 = v74 + *(int *)(v65 + 48);
  OUTLINED_FUNCTION_21_62(v53, v74);
  OUTLINED_FUNCTION_21_62(v55, v57);
  v58 = v75;
  if (__swift_getEnumTagSinglePayload(v56, 1, v75) == 1)
  {
    OUTLINED_FUNCTION_25_2(v55);
    OUTLINED_FUNCTION_25_2(v53);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v57, 1, v58);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_66_0(EnumTagSinglePayload, &qword_1ED1F4038);
LABEL_33:
      if (*(unsigned __int8 *)(v43 + v44[8]) == *(unsigned __int8 *)(v54 + v44[8]) && (sub_1B0005890() & 1) != 0)
      {
        v38 = MEMORY[0x1B5DFFA84](v43 + v44[10], v54 + v44[10]);
        return v38 & 1;
      }
      goto LABEL_12;
    }
    goto LABEL_31;
  }
  v59 = v71;
  sub_1AFE234F0(v56, v71, &qword_1ED1F4038);
  if (__swift_getEnumTagSinglePayload(v57, 1, v58) == 1)
  {
    OUTLINED_FUNCTION_5_8(v55);
    OUTLINED_FUNCTION_5_8(v53);
    EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8))(v59, v58);
LABEL_31:
    v37 = &qword_1ED1F0FC8;
    goto LABEL_11;
  }
  v61 = v69;
  v60 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v69, v57, v58);
  sub_1AFB23DC0(&qword_1EEE75220, &qword_1ED1F4478);
  v62 = sub_1B0008530();
  v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v64 = v61;
  v44 = v67;
  v63(v64, v58);
  OUTLINED_FUNCTION_25_2(v55);
  OUTLINED_FUNCTION_25_2(v53);
  v63(v59, v58);
  v54 = v68;
  OUTLINED_FUNCTION_25_2(v56);
  if ((v62 & 1) != 0)
    goto LABEL_33;
LABEL_12:
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_1AFE4D528(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C676E61 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465657073 && a2 == 0xE500000000000000;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 7827310 && a2 == 0xE300000000000000;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1701669236 && a2 == 0xE400000000000000;
            if (v10 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1B0008FB0();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AFE4D7B8()
{
  return 7;
}

uint64_t sub_1AFE4D7C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFE4D7E8 + 4 * byte_1B003C820[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1AFE4D7E8()
{
  return 0x656C676E61;
}

uint64_t sub_1AFE4D7FC()
{
  return 0x6F69746365726964;
}

uint64_t sub_1AFE4D818()
{
  return 0x6465657073;
}

uint64_t sub_1AFE4D82C()
{
  return 7827310;
}

uint64_t sub_1AFE4D83C()
{
  return 1701669236;
}

uint64_t sub_1AFE4D84C()
{
  return 0x656E6F5A656D6974;
}

uint64_t sub_1AFE4D864()
{
  unsigned __int8 *v0;

  return sub_1AFE4D7C0(*v0);
}

uint64_t sub_1AFE4D86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFE4D528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE4D890@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFE4D7B8();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE4D8B4()
{
  sub_1AFE4DBC4();
  return sub_1B0009118();
}

uint64_t sub_1AFE4D8DC()
{
  sub_1AFE4DBC4();
  return sub_1B0009124();
}

void WindComplicationHourlyViewModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75230);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE4DBC4();
  sub_1B0009058();
  sub_1B00058FC();
  sub_1AFADA43C(&qword_1EEE72AD0, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  OUTLINED_FUNCTION_46();
  if (!v1)
  {
    type metadata accessor for WindComplicationHourlyViewModel();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    sub_1AFB23DC0(&qword_1EEE75240, &qword_1ED1F25E0);
    OUTLINED_FUNCTION_8_107();
    sub_1AFE4DC00();
    sub_1B0008F20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    sub_1AFB23DC0(&qword_1EEE75250, &qword_1ED1F4478);
    OUTLINED_FUNCTION_8_107();
    sub_1B0008F38();
    sub_1B00058D8();
    sub_1AFADA43C(&qword_1ED1F3CB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    OUTLINED_FUNCTION_46();
    sub_1B0005B84();
    sub_1AFADA43C(&qword_1EEE72AD8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    OUTLINED_FUNCTION_46();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_4();
}

unint64_t sub_1AFE4DBC4()
{
  unint64_t result;

  result = qword_1EEE75238;
  if (!qword_1EEE75238)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003CA54, &type metadata for WindComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75238);
  }
  return result;
}

unint64_t sub_1AFE4DC00()
{
  unint64_t result;

  result = qword_1EEE75248;
  if (!qword_1EEE75248)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CEF448], MEMORY[0x1E0CEF440]);
    atomic_store(result, (unint64_t *)&qword_1EEE75248);
  }
  return result;
}

void WindComplicationHourlyViewModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v24 = sub_1B0005B84();
  v20 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_33();
  v22 = v5;
  v28 = sub_1B00058D8();
  v25 = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33();
  v23 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_14();
  v13 = sub_1B00058FC();
  v27 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75258);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_34();
  v29 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_33();
  v30 = v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE4DBC4();
  sub_1B000904C();
  if (v31)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1AFADA43C(&qword_1EEE72B00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    OUTLINED_FUNCTION_31_48();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v17, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    sub_1AFB23DC0(&qword_1EEE75260, &qword_1ED1F25E0);
    OUTLINED_FUNCTION_30_55();
    sub_1AFE236A4(v2, v30 + v29[5], &qword_1ED1F0FB0);
    sub_1AFE4E1E0();
    OUTLINED_FUNCTION_30_55();
    *(_BYTE *)(v30 + v29[6]) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    sub_1AFB23DC0(&qword_1EEE75270, &qword_1ED1F4478);
    OUTLINED_FUNCTION_30_55();
    sub_1AFE236A4(v11, v30 + v29[7], &qword_1ED1F4038);
    *(_BYTE *)(v30 + v29[8]) = sub_1B0008EB4() & 1;
    sub_1AFADA43C(&qword_1ED1F3CB8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    OUTLINED_FUNCTION_31_48();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v30 + v29[9], v23, v28);
    sub_1AFADA43C(&qword_1EEE72B08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    OUTLINED_FUNCTION_31_48();
    OUTLINED_FUNCTION_25_61();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v30 + v29[10], v22, v24);
    sub_1AFB98D88(v30, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1AFE4E21C(v30);
  }
  OUTLINED_FUNCTION_4();
}

unint64_t sub_1AFE4E1E0()
{
  unint64_t result;

  result = qword_1EEE75268;
  if (!qword_1EEE75268)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CEF450], MEMORY[0x1E0CEF440]);
    atomic_store(result, (unint64_t *)&qword_1EEE75268);
  }
  return result;
}

uint64_t sub_1AFE4E21C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WindComplicationHourlyViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE4E268(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AFADA43C(&qword_1EEE75278, (void (*)(uint64_t))type metadata accessor for WindComplicationHourlyViewModel);
  a1[1] = v2;
  sub_1AFADA43C(&qword_1EEE75280, (void (*)(uint64_t))type metadata accessor for WindComplicationHourlyViewModel);
  a1[2] = v3;
  sub_1AFADA43C(&qword_1EEE75288, (void (*)(uint64_t))type metadata accessor for WindComplicationHourlyViewModel);
  a1[3] = v4;
  sub_1AFADA43C(&qword_1EEE70B78, (void (*)(uint64_t))type metadata accessor for WindComplicationHourlyViewModel);
  a1[4] = v5;
}

void sub_1AFE4E2FC()
{
  sub_1AFADA43C(&qword_1EEE72B20, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
}

void sub_1AFE4E32C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WindComplicationHourlyViewModel.init(from:)(a1, a2);
}

void sub_1AFE4E340(_QWORD *a1)
{
  WindComplicationHourlyViewModel.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for WindComplicationHourlyViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    v19 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = a3[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t destroy for WindComplicationHourlyViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[9];
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[10];
  v12 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for WindComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for WindComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v15 = a3[7];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
LABEL_13:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for WindComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for WindComplicationHourlyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
LABEL_13:
  v23 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for WindComplicationHourlyViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE4EE90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v16;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_17:
    v8 = v4 + v11;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  OUTLINED_FUNCTION_0_1();
  if (v12)
  {
    v7 = v13;
    v11 = a3[7];
    goto LABEL_17;
  }
  if ((_DWORD)v3 != 254)
  {
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v16;
      v11 = a3[9];
    }
    else
    {
      v7 = OUTLINED_FUNCTION_12();
      v11 = a3[10];
    }
    goto LABEL_17;
  }
  v14 = *(unsigned __int8 *)(v4 + a3[8]);
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WindComplicationHourlyViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE4EF84(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_1_12();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    OUTLINED_FUNCTION_1_12();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
      OUTLINED_FUNCTION_1_12();
      if (v14)
      {
        v9 = v15;
        v13 = a4[7];
      }
      else
      {
        if (a3 == 254)
        {
          *(_BYTE *)(v5 + a4[8]) = v4 + 1;
          return;
        }
        OUTLINED_FUNCTION_11_0();
        OUTLINED_FUNCTION_1_12();
        if (v11)
        {
          v9 = v16;
          v13 = a4[9];
        }
        else
        {
          v9 = OUTLINED_FUNCTION_12();
          v13 = a4[10];
        }
      }
    }
    v10 = v5 + v13;
  }
  __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

void sub_1AFE4F058()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1B00058FC();
  if (v0 <= 0x3F)
  {
    sub_1AFE4F160(319, &qword_1ED1EE518, &qword_1ED1F25E0);
    if (v1 <= 0x3F)
    {
      sub_1AFE4F160(319, &qword_1ED1EE520, &qword_1ED1F4478);
      if (v2 <= 0x3F)
      {
        sub_1B00058D8();
        if (v3 <= 0x3F)
        {
          sub_1B0005B84();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1AFE4F160(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1B0008B9C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for WindComplicationHourlyViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AFE4F1F8 + 4 * byte_1B003C82C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AFE4F22C + 4 * byte_1B003C827[v4]))();
}

uint64_t sub_1AFE4F22C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE4F234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE4F23CLL);
  return result;
}

uint64_t sub_1AFE4F248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE4F250);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AFE4F254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE4F25C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WindComplicationHourlyViewModel.CodingKeys()
{
  return &type metadata for WindComplicationHourlyViewModel.CodingKeys;
}

unint64_t sub_1AFE4F27C()
{
  unint64_t result;

  result = qword_1EEE75290;
  if (!qword_1EEE75290)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003CA2C, &type metadata for WindComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75290);
  }
  return result;
}

unint64_t sub_1AFE4F2BC()
{
  unint64_t result;

  result = qword_1EEE75298;
  if (!qword_1EEE75298)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C99C, &type metadata for WindComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75298);
  }
  return result;
}

unint64_t sub_1AFE4F2FC()
{
  unint64_t result;

  result = qword_1EEE752A0;
  if (!qword_1EEE752A0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003C9C4, &type metadata for WindComplicationHourlyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE752A0);
  }
  return result;
}

void sub_1AFE4F338(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E607C848;
}

void sub_1AFE4F350()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22[16];
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 6;
  v29 = 0x617274736F746C41;
  v30 = 0xEF4C202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0051480;
  v33 = 9;
  v25 = 0x80000001B0050EC0;
  v26 = 0xD000000000000014;
  v27 = 0x80000001B0050EE0;
  v28 = 9;
  v20 = 0x2D20737572726943;
  v21 = 0xEA00000000005320;
  strcpy(v22, "Cirrus_SingleS");
  v22[15] = -18;
  v23 = 6;
  v24 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFE4FBA0();
  sub_1AFE4FBA0();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B449BA63F4CCCCDLL;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 30, 0, 3250, 200, 30, 1, 6, 0x4140000000000000, 0x42400000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    _Q0,
    _Q0,
    v11,
    1084227584,
    v12,
    _Q0,
    _Q0,
    v13,
    0x404000003E4CCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40C0000040800000);
}

uint64_t sub_1AFE4FBA0()
{
  uint64_t v0;
  __n128 v7;
  __n128 v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  double v17;
  __n128 v18;
  float v19;
  float v20;
  float v21;
  float v22;
  __n128 v23;
  uint64_t v24;
  __n128 *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  double v34;
  __n128 v35;
  float v36;
  float v37;
  float v38;
  float v39;
  int64x2_t v40;
  __n128 v41;
  __n128 v42;
  unsigned int v43;
  __n128 *v44;
  uint64_t v45;
  float v46;
  _OWORD *v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  double v55;
  __n128 v56;
  float v57;
  float v58;
  __n128 v59;
  double v60;
  __n128 v61;
  __n128 v62;
  __n128 *v63;
  double v64;
  _OWORD *v65;
  _OWORD *v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  uint64_t v72;
  __n128 v73;
  float v74;
  float v75;
  float v76;
  __n128 v77;
  __int128 v78;
  int64x2_t v79;
  __n128 v80;
  __n128 v81;
  _OWORD *v82;
  double v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  __n128 v92;
  float v93;
  float v94;
  float v95;
  float v96;
  __n128 v97;
  __n128 v98;
  uint64_t v99;
  _OWORD *v100;
  double v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  uint64_t v109;
  float v110;
  float v111;
  float v112;
  float v113;
  __n128 v114;
  __n128 v115;
  double v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  uint64_t v124;
  float v125;
  float v126;
  float v127;
  double v128;
  __n128 v129;
  __n128 v130;
  __n128 v131;
  uint64_t v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  uint64_t v140;
  double v141;
  float v142;
  float v143;
  __n128 v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  uint64_t v152;
  double v153;
  float v154;
  float v155;
  double v156;
  __n128 v157;
  double v158;
  __n128 v159;
  __n128 v160;
  uint64_t v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  uint64_t v169;
  float v170;
  float v171;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  uint64_t v177;
  int v178;
  int v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int64x2_t v308;
  __n128 v309;
  __n128 v310;
  int64x2_t v311;
  __n128 v312;
  __n128 v313;
  __n128 v314;
  int64x2_t v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  __n128 v319;
  __n128 v320;
  __n128 v321;
  __n128 v322;
  int64x2_t v323;
  __int128 v324;
  int64x2_t v325;
  __int128 v326;
  _OWORD v327[2];
  _OWORD v328[2];
  _OWORD v329[2];
  _OWORD v330[2];
  _OWORD v331[2];
  _OWORD v332[2];
  _OWORD v333[2];
  _OWORD v334[2];
  _OWORD v335[2];
  _OWORD v336[2];
  _OWORD v337[2];
  _OWORD v338[2];
  _OWORD v339[2];
  _OWORD v340[2];
  _OWORD v341[2];
  _OWORD v342[2];
  _OWORD v343[2];
  _OWORD v344[2];
  _OWORD v345[2];
  _OWORD v346[2];
  __int128 v347;
  __int128 v348;
  __n128 v349;
  __n128 v350;
  int64x2_t v351;
  __int128 v352;
  __n128 v353;
  __n128 v354;
  __int128 v355;
  __int128 v356;
  __n128 v357;
  __int128 v358;
  __n128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v365 = xmmword_1B0029EC0;
  v366 = xmmword_1B0029ED0;
  v363 = xmmword_1B0027F40;
  v364 = xmmword_1B0027F50;
  v361 = xmmword_1B0027F60;
  v362 = xmmword_1B0027F70;
  __asm { FMOV            V2.2D, #1.0 }
  v359 = _Q2;
  v360 = xmmword_1B0029180;
  v357 = _Q2;
  v358 = xmmword_1B0025E50;
  v355 = (__int128)_Q2;
  v356 = (__int128)_Q2;
  OUTLINED_FUNCTION_20_73(1.0, 0.689999998, _Q2);
  __asm { FMOV            V0.2D, #0.5 }
  v351 = _Q0;
  v352 = xmmword_1B0027FB0;
  v349 = v7;
  v350 = v7;
  v347 = (__int128)v7;
  v348 = (__int128)v7;
  OUTLINED_FUNCTION_0_56(*(double *)_Q0.i64, 0.5, v7);
  v315 = vdupq_n_s64(0x3FDFDFDFDFDFDFE0uLL);
  v325 = v315;
  v326 = xmmword_1B002C0A0;
  v323 = v315;
  v324 = xmmword_1B002C0B0;
  v316 = v8;
  v321 = v8;
  v322 = v8;
  v319 = v8;
  v320 = v8;
  v317 = v8;
  v318 = v8;
  OUTLINED_FUNCTION_19_70();
  OUTLINED_FUNCTION_10_13(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 0.9, &v351, &v349, 0x3F4CCCCD3F4CCCCDLL, 1065353216,
    &v347,
    0,
    v346,
    v345,
    v344,
    v343,
    v342,
    v341,
    v340,
    v339,
    v338,
    v337,
    v336,
    v335,
    v334,
    v333,
    v332,
    v331,
    v330,
    v329,
    v328,
    v327,
    &v325,
    &v323,
    &v321,
    1112014848,
    1097859072,
    &v319,
    (uint64_t)&v317);
  v365 = xmmword_1B002F990;
  v366 = xmmword_1B002F9A0;
  v363 = xmmword_1B0028030;
  v364 = xmmword_1B0027F50;
  v361 = xmmword_1B0028040;
  v362 = xmmword_1B0028050;
  v359 = v316;
  v360 = xmmword_1B0029180;
  v357 = v316;
  v358 = xmmword_1B0025E50;
  v355 = (__int128)v316;
  v356 = (__int128)v316;
  v353 = v316;
  v354 = v316;
  v351 = (int64x2_t)v316;
  v352 = xmmword_1B0028090;
  v349 = v316;
  v350 = v316;
  v347 = (__int128)v316;
  v348 = (__int128)v316;
  OUTLINED_FUNCTION_1_121(1.0, v316);
  v325 = v315;
  v326 = xmmword_1B002C0A0;
  v323 = v315;
  OUTLINED_FUNCTION_14_100((__n128)xmmword_1B002C0B0, v23);
  v302 = v24;
  OUTLINED_FUNCTION_24_67();
  OUTLINED_FUNCTION_25_0();
  v314 = v25[2];
  OUTLINED_FUNCTION_19_70();
  OUTLINED_FUNCTION_10_13(v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, 0.9, &v351, &v349, 0x3F4CCCCD3F4CCCCDLL, 1065353216,
    &v347,
    0,
    v346,
    v345,
    v344,
    v343,
    v342,
    v341,
    v340,
    v339,
    v338,
    v337,
    v336,
    v335,
    v334,
    v333,
    v332,
    v331,
    v330,
    v329,
    v328,
    v327,
    &v325,
    v284,
    v288,
    1112014848,
    1097859072,
    &v319,
    v302);
  v365 = xmmword_1B002C0C0;
  v366 = xmmword_1B00280E0;
  v363 = xmmword_1B002A0D0;
  v364 = xmmword_1B0028100;
  v361 = xmmword_1B00276E0;
  v362 = xmmword_1B0026110;
  v359 = v316;
  v360 = xmmword_1B0025E50;
  v357 = v316;
  v358 = xmmword_1B0025E50;
  v355 = xmmword_1B002F9B0;
  v356 = xmmword_1B002F9C0;
  OUTLINED_FUNCTION_20_73(*(double *)vdupq_n_s64(0x3FE0ECE8A0000000uLL).i64, 0.815686285, v316);
  v351 = v40;
  v352 = xmmword_1B0028120;
  v349 = v41;
  v350 = v41;
  v347 = (__int128)v41;
  v348 = (__int128)v41;
  OUTLINED_FUNCTION_0_56(*(double *)v40.i64, 0.528919518, v41);
  v313 = (__n128)vdupq_n_s64(0x3FE5D5D5D5D5D5D6uLL);
  v325 = (int64x2_t)v313;
  v326 = xmmword_1B002F9D0;
  OUTLINED_FUNCTION_11_95(v313, (__n128)xmmword_1B002F9E0, v42);
  OUTLINED_FUNCTION_24_67();
  OUTLINED_FUNCTION_15_93();
  OUTLINED_FUNCTION_25_0();
  v177 = v43 | 0x3F4CCCCD00000000;
  OUTLINED_FUNCTION_22_66();
  v312 = v44[22];
  v46 = *(float *)(v45 + 2524);
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_10_13(v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, 350.0, v57, v46, v58, 0.9, v173, v175, v177, 1061997773,
    &v347,
    0,
    v346,
    v345,
    v344,
    v343,
    v342,
    v341,
    v340,
    v339,
    v338,
    v337,
    v336,
    v335,
    v334,
    v333,
    v332,
    v331,
    v268,
    v274,
    v278,
    v327,
    &v325,
    v285,
    v289,
    1112014848,
    1097859072,
    &v319,
    v303);
  v365 = xmmword_1B002F9F0;
  v366 = xmmword_1B002FA00;
  v363 = xmmword_1B002FA10;
  v364 = xmmword_1B002FA20;
  v361 = xmmword_1B00281B0;
  v362 = xmmword_1B002F5E0;
  v359 = v316;
  OUTLINED_FUNCTION_8_108((__n128)xmmword_1B002C140, 0.4003883, v316);
  v355 = (__int128)v59;
  v356 = xmmword_1B0028B00;
  OUTLINED_FUNCTION_20_73(1.0, v60, v59);
  v351 = (int64x2_t)v61;
  v352 = xmmword_1B0027740;
  v311 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v349 = v61;
  v350 = v61;
  v347 = (__int128)v311;
  v348 = xmmword_1B00264D0;
  OUTLINED_FUNCTION_0_56(*(double *)v311.i64, 0.89028424, v61);
  v310 = (__n128)vdupq_n_s64(0x3FEAFAFAFAFAFAFBuLL);
  v325 = (int64x2_t)v310;
  v326 = xmmword_1B002FA30;
  OUTLINED_FUNCTION_11_95(v310, (__n128)xmmword_1B002FA30, v62);
  OUTLINED_FUNCTION_4_118();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_22_66();
  v309 = v63[32];
  v64 = OUTLINED_FUNCTION_18_77();
  OUTLINED_FUNCTION_10_13(v65, v66, v67, v68, v69, v70, v71, v72, v64, v73, 800.0, v74, 0.9, v75, v76, v174, v176, 0x3F6666663F666666, 0,
    &v347,
    0,
    v346,
    v182,
    v188,
    v194,
    v200,
    v206,
    v212,
    v218,
    v224,
    v230,
    v236,
    v242,
    v248,
    v254,
    v260,
    v264,
    v269,
    v329,
    (_OWORD *)0x3F800000,
    v327,
    &v325,
    &v323,
    &v321,
    1112014848,
    1097859072,
    &v319,
    v304);
  v365 = (__int128)v316;
  v366 = (__int128)v316;
  v363 = xmmword_1B002FA40;
  v364 = xmmword_1B002FA50;
  v361 = xmmword_1B0028220;
  v362 = xmmword_1B0028230;
  v359 = v316;
  OUTLINED_FUNCTION_8_108((__n128)xmmword_1B002C140, 1.0, v316);
  v355 = (__int128)v77;
  v356 = v78;
  OUTLINED_FUNCTION_20_73(v77.n128_f64[0], *(double *)&v78, v77);
  v351 = v79;
  v352 = xmmword_1B0027740;
  v349 = (__n128)v79;
  v350 = (__n128)v79;
  v347 = xmmword_1B0027D70;
  v348 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_2_124(v80);
  v308 = vdupq_n_s64(0x3FEBBBBBBBBBBBBCuLL);
  v325 = v308;
  v326 = xmmword_1B002FA60;
  v323 = v308;
  v324 = xmmword_1B002FA70;
  v321 = v81;
  v322 = v81;
  v319 = v81;
  v320 = v81;
  v317 = v81;
  v318 = v81;
  OUTLINED_FUNCTION_23_68();
  v290 = v82;
  OUTLINED_FUNCTION_4_118();
  v83 = OUTLINED_FUNCTION_17_89();
  OUTLINED_FUNCTION_10_13(v84, v85, v86, v87, v88, v89, v90, v91, v83, v92, 900.0, v93, v94, v95, v96, &v351, &v349, 0x3F6666663F666666, 0,
    &v347,
    0,
    v346,
    v183,
    v189,
    v195,
    v201,
    v207,
    v213,
    v219,
    v225,
    v231,
    v237,
    v243,
    v249,
    v255,
    v261,
    v265,
    v270,
    v329,
    v328,
    v327,
    &v325,
    &v323,
    v290,
    v294,
    v298,
    &v319,
    (uint64_t)&v317);
  v365 = (__int128)v316;
  v366 = (__int128)v316;
  v363 = xmmword_1B002FA40;
  v364 = xmmword_1B002FA50;
  v361 = xmmword_1B0028220;
  v362 = xmmword_1B0028230;
  OUTLINED_FUNCTION_6_109(0.99988085, v316);
  v347 = xmmword_1B0027D70;
  v348 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_1_121(0.9627316, v97);
  v325 = v308;
  v326 = xmmword_1B002FA60;
  v323 = v308;
  OUTLINED_FUNCTION_14_100((__n128)xmmword_1B002FA70, v98);
  v305 = v99;
  OUTLINED_FUNCTION_23_68();
  v291 = v100;
  OUTLINED_FUNCTION_3_117();
  v101 = OUTLINED_FUNCTION_17_89();
  OUTLINED_FUNCTION_11_22(v102, v103, v104, v105, v106, v107, v108, v109, v101, (__n128)xmmword_1B0028270, 900.0, v110, v111, v112, v113, &v351, &v349, 0x3F6666663F666666, 0,
    &v347,
    0,
    v346,
    v184,
    v190,
    v196,
    v202,
    v208,
    v214,
    v220,
    v226,
    v232,
    v238,
    v244,
    v250,
    v256,
    v262,
    v266,
    v271,
    v275,
    v279,
    v282,
    &v325,
    &v323,
    v291,
    v295,
    v299,
    &v319,
    v305);
  v365 = xmmword_1B002F9F0;
  v366 = xmmword_1B002FA00;
  v363 = xmmword_1B002FA10;
  v364 = xmmword_1B002FA20;
  v361 = xmmword_1B00281B0;
  v362 = xmmword_1B002F5E0;
  OUTLINED_FUNCTION_6_109(0.4003883, v316);
  v347 = (__int128)v311;
  v348 = xmmword_1B00264D0;
  OUTLINED_FUNCTION_1_121(0.89028424, v114);
  v325 = (int64x2_t)v310;
  v326 = xmmword_1B002FA30;
  v323 = (int64x2_t)v310;
  v324 = xmmword_1B002FA30;
  v321 = v115;
  v322 = v115;
  v319 = v115;
  v320 = v115;
  v317 = v115;
  v318 = v115;
  OUTLINED_FUNCTION_16_84();
  OUTLINED_FUNCTION_3_117();
  OUTLINED_FUNCTION_21_6();
  v116 = OUTLINED_FUNCTION_18_77();
  OUTLINED_FUNCTION_11_22(v117, v118, v119, v120, v121, v122, v123, v124, v116, v309, 800.0, v125, 0.9, v126, v127, &v351, &v349, 0x3F6666663F666666, 0,
    &v347,
    0,
    v346,
    v185,
    v191,
    v197,
    v203,
    v209,
    v215,
    v221,
    v227,
    v233,
    v239,
    v245,
    v251,
    v257,
    v263,
    v267,
    v272,
    v276,
    v280,
    v283,
    &v325,
    v286,
    v292,
    v296,
    v300,
    &v319,
    (uint64_t)&v317);
  v365 = xmmword_1B00276A0;
  v366 = xmmword_1B00276B0;
  v363 = xmmword_1B002A0D0;
  v364 = xmmword_1B0028100;
  v361 = xmmword_1B002F5F0;
  v362 = xmmword_1B002F600;
  v359 = v316;
  OUTLINED_FUNCTION_8_108((__n128)xmmword_1B0026130, 0.404582918, v316);
  v355 = xmmword_1B002F9B0;
  v356 = xmmword_1B002F9C0;
  OUTLINED_FUNCTION_20_73(0.815686285, v128, v129);
  v351 = vdupq_n_s64(0x3FE147AE20000000uLL);
  v352 = xmmword_1B002F620;
  v349 = v130;
  v350 = v130;
  v347 = (__int128)v130;
  v348 = (__int128)v130;
  OUTLINED_FUNCTION_0_56(*(double *)v351.i64, 0.540000021, v130);
  v325 = (int64x2_t)v313;
  v326 = xmmword_1B002F9D0;
  v323 = (int64x2_t)v313;
  OUTLINED_FUNCTION_13_102((__n128)xmmword_1B002F9E0, v313.n128_f64[0], v131);
  v306 = v132;
  OUTLINED_FUNCTION_16_84();
  OUTLINED_FUNCTION_15_93();
  OUTLINED_FUNCTION_5_113();
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_11_22(v133, v134, v135, v136, v137, v138, v139, v140, v141, v312, 350.0, v142, v46, v143, 0.9, &v351, &v349, 0x3F4CCCCD3F4CCCCDLL, 1061997773,
    &v347,
    v178,
    v180,
    v186,
    v192,
    v198,
    v204,
    v210,
    v216,
    v222,
    v228,
    v234,
    v240,
    v246,
    v252,
    v258,
    v332,
    v331,
    v273,
    v277,
    v281,
    v327,
    &v325,
    v287,
    v293,
    v297,
    v301,
    &v317,
    v306);
  v365 = xmmword_1B002F990;
  v366 = xmmword_1B002F9A0;
  v363 = xmmword_1B0028030;
  v364 = xmmword_1B0027F50;
  v361 = xmmword_1B0028040;
  v362 = xmmword_1B0028050;
  v359 = v316;
  v360 = xmmword_1B0029180;
  v357 = v316;
  v358 = xmmword_1B0025E50;
  v355 = (__int128)v316;
  v356 = (__int128)v316;
  v353 = v316;
  v354 = v316;
  v351 = (int64x2_t)v316;
  v352 = xmmword_1B0028090;
  v349 = v316;
  v350 = v316;
  v347 = (__int128)v316;
  v348 = (__int128)v316;
  OUTLINED_FUNCTION_2_124(v316);
  v325 = v315;
  v326 = xmmword_1B002C0A0;
  v323 = v315;
  v324 = xmmword_1B002C0B0;
  v321 = v144;
  v322 = v144;
  v319 = v144;
  v320 = v144;
  v317 = v144;
  v318 = v144;
  OUTLINED_FUNCTION_5_113();
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_11_22(v145, v146, v147, v148, v149, v150, v151, v152, v153, v314, 200.0, v154, 0.1, v155, 0.9, &v351, &v349, 0x3F4CCCCD3F4CCCCDLL, 1065353216,
    &v347,
    v179,
    v181,
    v187,
    v193,
    v199,
    v205,
    v211,
    v217,
    v223,
    v229,
    v235,
    v241,
    v247,
    v253,
    v259,
    v332,
    v331,
    v330,
    v329,
    (_OWORD *)0x3F666666,
    v327,
    &v325,
    &v323,
    &v321,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v317);
  v365 = xmmword_1B002F660;
  v366 = xmmword_1B002F640;
  v363 = xmmword_1B0027F40;
  v364 = xmmword_1B0027F50;
  v361 = xmmword_1B002F670;
  v362 = xmmword_1B0028680;
  v359 = v316;
  *(_QWORD *)&v156 = OUTLINED_FUNCTION_8_108((__n128)xmmword_1B0029180, 0.690196097, v316).n128_u64[0];
  v355 = (__int128)v157;
  v356 = (__int128)v157;
  OUTLINED_FUNCTION_20_73(v156, v158, v157);
  v351 = vdupq_n_s64(0x3FDEB85200000000uLL);
  v352 = xmmword_1B002F690;
  v349 = v159;
  v350 = v159;
  v347 = (__int128)v159;
  v348 = (__int128)v159;
  OUTLINED_FUNCTION_0_56(*(double *)v351.i64, 0.480000019, v159);
  v325 = v315;
  v326 = xmmword_1B002C0A0;
  v323 = v315;
  OUTLINED_FUNCTION_13_102((__n128)xmmword_1B002C0B0, *(double *)v315.i64, v160);
  v307 = v161;
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_11_22(v162, v163, v164, v165, v166, v167, v168, v169, -90.0, (__n128)xmmword_1B002A0A0, 100.0, v170, 0.1, v171, 0.9, &v351, &v349, 0x3F4CCCCD3F4CCCCDLL, 1065353216,
    &v347,
    0,
    v346,
    v345,
    v344,
    v343,
    v342,
    v341,
    v340,
    v339,
    v338,
    v337,
    v336,
    v335,
    v334,
    v333,
    v332,
    v331,
    v330,
    v329,
    v328,
    v327,
    &v325,
    &v323,
    &v321,
    1112014848,
    1097859072,
    &v319,
    v307);
  return v0;
}

uint64_t SunriseSunsetDayRule.isSatisfied(for:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  int EnumTagSinglePayload;
  void (*v35)(char *, uint64_t);
  char v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char v39;
  char v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v42 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - v11;
  v13 = sub_1B00058D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_38();
  v45 = v15;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v16);
  v44 = (char *)&v42 - v17;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v18);
  v43 = (char *)&v42 - v19;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v42 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v42 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v42 - v27;
  sub_1AFAF8390(a2, (uint64_t)v12);
  OUTLINED_FUNCTION_1_122((uint64_t)v12);
  if (v31)
  {
    v29 = (uint64_t)v12;
  }
  else
  {
    v42 = a1;
    OUTLINED_FUNCTION_10_103((uint64_t)v28, (uint64_t)v12);
    v30 = type metadata accessor for SunriseSunsetDescriptionContext();
    OUTLINED_FUNCTION_20_74(*(int *)(v30 + 20));
    OUTLINED_FUNCTION_1_122((uint64_t)v9);
    if (!v31)
    {
      OUTLINED_FUNCTION_10_103((uint64_t)v25, (uint64_t)v9);
      sub_1AFAF8390(a2 + *(int *)(v30 + 24), (uint64_t)v6);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v13);
      sub_1AFB4BDAC((uint64_t)v6);
      if (EnumTagSinglePayload == 1)
      {
        v35 = *(void (**)(char *, uint64_t))(v14 + 8);
        v35(v25, v13);
        v35(v28, v13);
        goto LABEL_8;
      }
      if ((sub_1B0005854() & 1) != 0)
      {
        v36 = sub_1B0005854();
        v37 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        OUTLINED_FUNCTION_15_94();
        v38 = (uint64_t)v43;
        v37(v43, v25, v13);
        if ((v36 & 1) != 0)
        {
          v39 = sub_1B0005860();
LABEL_19:
          v32 = v39;
          goto LABEL_20;
        }
        v32 = 0;
      }
      else
      {
        v40 = sub_1B0005860();
        v41 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 16);
        v22 = v44;
        OUTLINED_FUNCTION_15_94();
        v38 = v45;
        v41(v45, v28, v13);
        if ((v40 & 1) == 0)
        {
          v39 = sub_1B0005854();
          goto LABEL_19;
        }
        v32 = 1;
      }
LABEL_20:
      OUTLINED_FUNCTION_10_16(v38);
      OUTLINED_FUNCTION_10_16((uint64_t)v22);
      OUTLINED_FUNCTION_10_16((uint64_t)v25);
      OUTLINED_FUNCTION_10_16((uint64_t)v28);
      return v32 & 1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
    v29 = (uint64_t)v9;
  }
  sub_1AFB4BDAC(v29);
LABEL_8:
  v32 = 0;
  return v32 & 1;
}

uint64_t SunriseSunsetDayRule.description(for:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __n128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = sub_1B0005A04();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_33();
  v48 = v5;
  v6 = sub_1B0005A1C();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v45 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - v16;
  v18 = sub_1B00058D8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_38();
  v51 = v20;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v21);
  v52 = (uint64_t)&v42 - v22;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v42 - v24;
  v26 = type metadata accessor for SunriseSunsetDescriptionContext();
  OUTLINED_FUNCTION_20_74(*(int *)(v26 + 24));
  OUTLINED_FUNCTION_1_122((uint64_t)v17);
  if (!v28)
  {
    v44 = v25;
    OUTLINED_FUNCTION_10_103((uint64_t)v25, (uint64_t)v17);
    sub_1AFAF8390(a2, (uint64_t)v14);
    OUTLINED_FUNCTION_1_122((uint64_t)v14);
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v44, v18);
    }
    else
    {
      v43 = v19;
      v27 = v52;
      OUTLINED_FUNCTION_10_103(v52, (uint64_t)v14);
      sub_1AFAF8390(a2 + *(int *)(v26 + 20), (uint64_t)v11);
      OUTLINED_FUNCTION_1_122((uint64_t)v11);
      if (!v28)
      {
        OUTLINED_FUNCTION_10_103(v51, (uint64_t)v11);
        v33 = sub_1B0005854();
        if ((v33 & 1) != 0)
        {
          v34 = (uint64_t)v44;
          if (qword_1ED1F46A8 != -1)
            swift_once();
          OUTLINED_FUNCTION_3_118();
          OUTLINED_FUNCTION_19_1();
          v35 = OUTLINED_FUNCTION_0_138();
          OUTLINED_FUNCTION_6_110(v35);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v36 = (__n128 *)OUTLINED_FUNCTION_14_70();
          OUTLINED_FUNCTION_12_102(v36, (__n128)xmmword_1B00275C0);
          if (qword_1ED1F1070 == -1)
            goto LABEL_26;
        }
        else if ((sub_1B0005860() & 1) != 0)
        {
          if (qword_1ED1F46A8 != -1)
            swift_once();
          OUTLINED_FUNCTION_3_118();
          OUTLINED_FUNCTION_19_1();
          v37 = OUTLINED_FUNCTION_0_138();
          OUTLINED_FUNCTION_6_110(v37);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v36 = (__n128 *)OUTLINED_FUNCTION_14_70();
          OUTLINED_FUNCTION_12_102(v36, (__n128)xmmword_1B00275C0);
          v34 = (uint64_t)v44;
          if (qword_1ED1F1070 == -1)
            goto LABEL_26;
        }
        else
        {
          if (qword_1ED1F46A8 != -1)
            swift_once();
          OUTLINED_FUNCTION_3_118();
          OUTLINED_FUNCTION_19_1();
          v38 = OUTLINED_FUNCTION_0_138();
          OUTLINED_FUNCTION_6_110(v38);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v36 = (__n128 *)OUTLINED_FUNCTION_14_70();
          OUTLINED_FUNCTION_12_102(v36, (__n128)xmmword_1B00275C0);
          v34 = (uint64_t)v44;
          if (qword_1ED1F1070 == -1)
            goto LABEL_26;
        }
        swift_once();
LABEL_26:
        OUTLINED_FUNCTION_5_114();
        OUTLINED_FUNCTION_11_96();
        OUTLINED_FUNCTION_7_105();
        OUTLINED_FUNCTION_22_67();
        OUTLINED_FUNCTION_2_125();
        v39 = OUTLINED_FUNCTION_9_107();
        v41 = v40;
        v36[3].n128_u64[1] = MEMORY[0x1E0DEA968];
        v36[4].n128_u64[0] = sub_1AFAFB1D0();
        v36[2].n128_u64[0] = v39;
        v36[2].n128_u64[1] = v41;
        v31 = sub_1B0008560();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_30_44(v51);
        OUTLINED_FUNCTION_30_44(v52);
        OUTLINED_FUNCTION_30_44(v34);
        return v31;
      }
      v29 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v29(v27, v18);
      v14 = v11;
      v29((uint64_t)v44, v18);
    }
    v17 = v14;
  }
  sub_1AFB4BDAC((uint64_t)v17);
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v30 = (id)qword_1ED1F4470;
  v31 = sub_1B00054B8();

  return v31;
}

uint64_t sub_1AFE514AC(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetDayRule.isSatisfied(for:data:)(a1, a2) & 1;
}

uint64_t sub_1AFE514C4(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetDayRule.description(for:data:)(a1, a2);
}

void WeatherConditionBackgroundModelFactoryInput.init(animationKind:currentTime:elevation:debugConditionOverride:isReduceMotionEnabled:location:options:presentationContext:weatherData:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t *a6@<X6>, char *a7@<X7>, _BYTE *a8@<X8>, uint64_t a9)
{
  char v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  __n128 v28;
  __int128 v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;

  v13 = *a1;
  v36 = *a6;
  v34 = *((_BYTE *)a6 + 9);
  v35 = *((_BYTE *)a6 + 8);
  v32 = a6[3];
  v33 = a6[2];
  v30 = *((_BYTE *)a6 + 33);
  v31 = *((_BYTE *)a6 + 32);
  v28 = *(__n128 *)(a6 + 7);
  v29 = *(_OWORD *)(a6 + 5);
  v27 = a6[10];
  v26 = *((_BYTE *)a6 + 88);
  v37 = *a7;
  v14 = (int *)OUTLINED_FUNCTION_46_10();
  type metadata accessor for BackgroundMoonData();
  OUTLINED_FUNCTION_37_15();
  __swift_storeEnumTagSinglePayload(v15, v16, v17, v18);
  v19 = OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_37_15();
  __swift_storeEnumTagSinglePayload(v20, v21, v22, v19);
  *a8 = v13;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(&a8[v14[5]], a2, v19);
  OUTLINED_FUNCTION_57_10();
  sub_1AFAF8B70(a3, (uint64_t)&a8[v14[8]], &qword_1ED1F2658);
  a8[v14[9]] = a4;
  sub_1AFAF8B70(a5, (uint64_t)&a8[v14[10]], &qword_1ED1ECC00);
  v23 = (uint64_t)&a8[v14[11]];
  *(_QWORD *)v23 = v36;
  *(_BYTE *)(v23 + 8) = v35;
  *(_BYTE *)(v23 + 9) = v34;
  *(_QWORD *)(v23 + 16) = v33;
  *(_QWORD *)(v23 + 24) = v32;
  *(_BYTE *)(v23 + 32) = v31;
  *(_BYTE *)(v23 + 33) = v30;
  OUTLINED_FUNCTION_10_104(v23, v25, v26, v27, v28, v29);
  a8[v24] = v37;
  sub_1AFAF8B70(a9, (uint64_t)&a8[v14[13]], &qword_1ED1ECB00);
  OUTLINED_FUNCTION_19_71();
}

void WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:)(__int128 *a1)
{
  OUTLINED_FUNCTION_21_67();
  WeatherConditionBackgroundModelFactory.init(gradientManager:)(a1);
  OUTLINED_FUNCTION_0();
}

void WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:automationEnabled:)(__int128 *a1, char a2)
{
  OUTLINED_FUNCTION_21_67();
  WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:)(a1, a2);
  OUTLINED_FUNCTION_9_0();
}

void WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:)(__int128 *a1, char a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_23_69(a1);
  *(_BYTE *)(v2 + 56) = a2;
  *(_BYTE *)(v2 + 57) = 0;
  OUTLINED_FUNCTION_0();
}

void WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:automationEnabled:isDemoPresetActive:)(__int128 *a1, char a2, char a3)
{
  OUTLINED_FUNCTION_21_67();
  WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:isDemoPresetActive:)(a1, a2, a3);
  OUTLINED_FUNCTION_9_0();
}

void WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:isDemoPresetActive:)(__int128 *a1, char a2, char a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_23_69(a1);
  *(_BYTE *)(v3 + 56) = a2;
  *(_BYTE *)(v3 + 57) = a3;
  OUTLINED_FUNCTION_9_0();
}

uint64_t WeatherConditionBackgroundModelFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t WeatherConditionBackgroundModelFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherConditionBackgroundModelFactoryInput(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_1B00058D8();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)v4 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = (char *)v4 + v13;
    v17 = (char *)a2 + v13;
    v18 = (int *)type metadata accessor for BackgroundMoonData();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v11(v16, v17, v10);
      v21 = v18[5];
      v22 = &v16[v21];
      v23 = &v17[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v21], 1, v10))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v11(v22, v23, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v10);
      }
      v25 = v18[6];
      v26 = &v16[v25];
      v27 = &v17[v25];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v25], 1, v10))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v11(v26, v27, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v10);
      }
      *(_QWORD *)&v16[v18[7]] = *(_QWORD *)&v17[v18[7]];
      *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
      *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
      v29 = v18[10];
      v30 = &v16[v29];
      v31 = &v17[v29];
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v18);
    }
    v33 = a3[8];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_1B0005FB0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
    }
    v38 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_1B00068E0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    v43 = a3[11];
    v44 = (char *)v4 + v43;
    v45 = (char *)a2 + v43;
    *(_QWORD *)v44 = *(_QWORD *)((char *)a2 + v43);
    *((_WORD *)v44 + 4) = *(_WORD *)((char *)a2 + v43 + 8);
    v46 = (_QWORD *)((char *)a2 + v43 + 16);
    v47 = *(_QWORD *)((char *)a2 + v43 + 24);
    swift_bridgeObjectRetain();
    if (v47 >= 5)
    {
      *((_QWORD *)v44 + 2) = *v46;
      *((_QWORD *)v44 + 3) = v47;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v44 + 1) = *(_OWORD *)v46;
    }
    v44[32] = v45[32];
    v44[33] = v45[33];
    v44[34] = v45[34];
    *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    v48 = *((_QWORD *)v45 + 10);
    *((_QWORD *)v44 + 9) = *((_QWORD *)v45 + 9);
    *((_QWORD *)v44 + 10) = v48;
    v44[88] = v45[88];
    v49 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    v52 = sub_1B0005FD4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
    }
    v54 = a3[14];
    v55 = (char *)v4 + v54;
    v56 = (char *)a2 + v54;
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v10))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v11(v55, v56, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v10);
    }
  }
  return v4;
}

_BYTE *assignWithCopy for WeatherConditionBackgroundModelFactoryInput(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B00058D8();
  v10 = *(_QWORD *)(v9 - 8);
  v88 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v88(v7, v8, v9);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v14;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = (int *)type metadata accessor for BackgroundMoonData();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (!EnumTagSinglePayload)
  {
    if (v20)
    {
      sub_1AFAE2D74((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
      goto LABEL_7;
    }
    v87 = v10;
    v88(v16, v17, v9);
    v27 = v18[5];
    v28 = &v16[v27];
    v29 = &v17[v27];
    v30 = __swift_getEnumTagSinglePayload((uint64_t)&v16[v27], 1, v9);
    v31 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v9);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v28, v29, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v9);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v31)
      {
        v88(v28, v29, v9);
LABEL_19:
        v40 = v18[6];
        v41 = &v16[v40];
        v42 = &v17[v40];
        v43 = __swift_getEnumTagSinglePayload((uint64_t)&v16[v40], 1, v9);
        v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v9);
        if (v43)
        {
          if (v44)
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_27:
            v10 = v87;
            goto LABEL_28;
          }
          v10 = v87;
          (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v41, v42, v9);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v9);
        }
        else
        {
          if (!v44)
          {
            v88(v41, v42, v9);
            goto LABEL_27;
          }
          v10 = v87;
          (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v9);
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
LABEL_28:
        *(_QWORD *)&v16[v18[7]] = *(_QWORD *)&v17[v18[7]];
        *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
        *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
        v47 = v18[10];
        v48 = &v16[v47];
        v49 = &v17[v47];
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v28, v9);
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_29;
  }
  v86 = v10;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v21(v16, v17, v9);
  v22 = v18[5];
  v23 = &v16[v22];
  v24 = &v17[v22];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v22], 1, v9))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v21(v23, v24, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v9);
  }
  v32 = v18[6];
  v33 = &v16[v32];
  v34 = &v17[v32];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v32], 1, v9))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v21(v33, v34, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v9);
  }
  v10 = v86;
  *(_QWORD *)&v16[v18[7]] = *(_QWORD *)&v17[v18[7]];
  *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  v36 = v18[10];
  v37 = &v16[v36];
  v38 = &v17[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v18);
LABEL_29:
  v50 = a3[8];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_1B0005FB0();
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v53);
  v55 = __swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  v56 = *(_QWORD *)(v53 - 8);
  if (v55)
  {
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v51, v53);
LABEL_34:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v56 + 24))(v51, v52, v53);
LABEL_35:
  a1[a3[9]] = a2[a3[9]];
  v58 = a3[10];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = sub_1B00068E0();
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v61);
  v63 = __swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  v64 = *(_QWORD *)(v61 - 8);
  if (v63)
  {
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v59, v61);
LABEL_40:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v64 + 24))(v59, v60, v61);
LABEL_41:
  v66 = a3[11];
  v67 = &a1[v66];
  v68 = &a2[v66];
  *(_QWORD *)&a1[v66] = *(_QWORD *)&a2[v66];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67[8] = v68[8];
  v67[9] = v68[9];
  v69 = *((_QWORD *)v68 + 3);
  if (*((_QWORD *)v67 + 3) < 5uLL)
  {
    if (v69 >= 5)
    {
      *((_QWORD *)v67 + 2) = *((_QWORD *)v68 + 2);
      *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
      swift_bridgeObjectRetain();
      goto LABEL_48;
    }
    goto LABEL_46;
  }
  if (v69 < 5)
  {
    sub_1AFACE0DC((uint64_t)(v67 + 16), &qword_1EEE752E0);
LABEL_46:
    *((_OWORD *)v67 + 1) = *((_OWORD *)v68 + 1);
    goto LABEL_48;
  }
  *((_QWORD *)v67 + 2) = *((_QWORD *)v68 + 2);
  *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_48:
  v67[32] = v68[32];
  v67[33] = v68[33];
  v67[34] = v68[34];
  *((_QWORD *)v67 + 5) = *((_QWORD *)v68 + 5);
  *((_QWORD *)v67 + 6) = *((_QWORD *)v68 + 6);
  *((_QWORD *)v67 + 7) = *((_QWORD *)v68 + 7);
  *((_QWORD *)v67 + 8) = *((_QWORD *)v68 + 8);
  *((_QWORD *)v67 + 9) = *((_QWORD *)v68 + 9);
  v70 = *((_QWORD *)v68 + 10);
  v67[88] = v68[88];
  *((_QWORD *)v67 + 10) = v70;
  a1[a3[12]] = a2[a3[12]];
  v71 = a3[13];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = sub_1B0005FD4();
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v74);
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  v77 = *(_QWORD *)(v74 - 8);
  if (v76)
  {
    (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v72, v74);
LABEL_53:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v77 + 24))(v72, v73, v74);
LABEL_54:
  v79 = a3[14];
  v80 = &a1[v79];
  v81 = &a2[v79];
  v82 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v79], 1, v9);
  v83 = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v9);
  if (!v82)
  {
    if (!v83)
    {
      v88(v80, v81, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v80, v9);
    goto LABEL_59;
  }
  if (v83)
  {
LABEL_59:
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v80, v81, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v9);
  return a1;
}

_BYTE *initializeWithTake for WeatherConditionBackgroundModelFactoryInput(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B00058D8();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = &a1[v12];
  v16 = &a2[v12];
  v17 = (int *)type metadata accessor for BackgroundMoonData();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v10(v15, v16, v9);
    v19 = v17[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v19], 1, v9))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v10(v20, v21, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v9);
    }
    v23 = v17[6];
    v24 = &v15[v23];
    v25 = &v16[v23];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v23], 1, v9))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v10(v24, v25, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v9);
    }
    *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
    *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v16[v17[8]];
    *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
    *(_OWORD *)&v15[v17[10]] = *(_OWORD *)&v16[v17[10]];
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_1B0005FB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  v32 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_1B00068E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  }
  memcpy(&a1[a3[11]], &a2[a3[11]], 0x59uLL);
  v37 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_1B0005FD4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
  }
  v42 = a3[14];
  v43 = &a1[v42];
  v44 = &a2[v42];
  if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v9))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v10(v43, v44, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v9);
  }
  return a1;
}

_BYTE *assignWithTake for WeatherConditionBackgroundModelFactoryInput(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  _OWORD *v68;
  unint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B00058D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  v18 = (int *)type metadata accessor for BackgroundMoonData();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (!EnumTagSinglePayload)
  {
    if (v20)
    {
      sub_1AFAE2D74((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
      goto LABEL_7;
    }
    v87 = v11;
    v89 = v10;
    v11(v16, v17, v9);
    v27 = v18[5];
    v28 = &v16[v27];
    v29 = &v17[v27];
    v30 = __swift_getEnumTagSinglePayload((uint64_t)&v16[v27], 1, v9);
    v31 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v9);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v28, v29, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v9);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v31)
      {
        v87(v28, v29, v9);
LABEL_19:
        v37 = v18[6];
        v38 = &v16[v37];
        v39 = &v17[v37];
        v40 = __swift_getEnumTagSinglePayload((uint64_t)&v16[v37], 1, v9);
        v41 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v9);
        if (v40)
        {
          if (v41)
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
            v10 = v89;
          }
          else
          {
            v10 = v89;
            (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v38, v39, v9);
            __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v9);
          }
        }
        else
        {
          if (!v41)
          {
            v85 = v39;
            v11 = v87;
            v87(v38, v85, v9);
            v10 = v89;
            goto LABEL_26;
          }
          v10 = v89;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v38, v9);
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        v11 = v87;
LABEL_26:
        *(_QWORD *)&v16[v18[7]] = *(_QWORD *)&v17[v18[7]];
        *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
        *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
        v44 = v18[10];
        v45 = &v16[v44];
        v46 = &v17[v44];
        v48 = *(_QWORD *)v46;
        v47 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = v48;
        *((_QWORD *)v45 + 1) = v47;
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v28, v9);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_27;
  }
  v86 = v11;
  v88 = v10;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(v16, v17, v9);
  v22 = v18[5];
  v23 = &v16[v22];
  v24 = &v17[v22];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v22], 1, v9))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v21(v23, v24, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v9);
  }
  v32 = v18[6];
  v33 = &v16[v32];
  v34 = &v17[v32];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v32], 1, v9))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v21(v33, v34, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v9);
  }
  v10 = v88;
  *(_QWORD *)&v16[v18[7]] = *(_QWORD *)&v17[v18[7]];
  *(_QWORD *)&v16[v18[8]] = *(_QWORD *)&v17[v18[8]];
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  *(_OWORD *)&v16[v18[10]] = *(_OWORD *)&v17[v18[10]];
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v18);
  v11 = v86;
LABEL_27:
  v49 = a3[8];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_1B0005FB0();
  v53 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v52);
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  v55 = *(_QWORD *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v50, v52);
LABEL_32:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 40))(v50, v51, v52);
LABEL_33:
  v57 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v58 = &a1[v57];
  v59 = &a2[v57];
  v60 = sub_1B00068E0();
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v60);
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  v63 = *(_QWORD *)(v60 - 8);
  if (v62)
  {
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v58, v60);
LABEL_38:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 40))(v58, v59, v60);
LABEL_39:
  v65 = a3[11];
  v66 = &a1[v65];
  v67 = &a2[v65];
  *(_QWORD *)&a1[v65] = *(_QWORD *)&a2[v65];
  swift_bridgeObjectRelease();
  v66[8] = v67[8];
  v66[9] = v67[9];
  v68 = v67 + 16;
  if (*((_QWORD *)v66 + 3) < 5uLL)
  {
LABEL_42:
    *((_OWORD *)v66 + 1) = *v68;
    goto LABEL_44;
  }
  v69 = *((_QWORD *)v67 + 3);
  if (v69 < 5)
  {
    sub_1AFACE0DC((uint64_t)(v66 + 16), &qword_1EEE752E0);
    goto LABEL_42;
  }
  *((_QWORD *)v66 + 2) = *(_QWORD *)v68;
  *((_QWORD *)v66 + 3) = v69;
  swift_bridgeObjectRelease();
LABEL_44:
  v66[32] = v67[32];
  v66[33] = v67[33];
  v66[34] = v67[34];
  *(_OWORD *)(v66 + 40) = *(_OWORD *)(v67 + 40);
  *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
  *((_QWORD *)v66 + 9) = *((_QWORD *)v67 + 9);
  *((_QWORD *)v66 + 10) = *((_QWORD *)v67 + 10);
  v66[88] = v67[88];
  v70 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = sub_1B0005FD4();
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v73);
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  v76 = *(_QWORD *)(v73 - 8);
  if (v75)
  {
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v71, v73);
LABEL_49:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 40))(v71, v72, v73);
LABEL_50:
  v78 = a3[14];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v78], 1, v9);
  v82 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v9);
  if (!v81)
  {
    if (!v82)
    {
      v11(v79, v80, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v79, v9);
    goto LABEL_55;
  }
  if (v82)
  {
LABEL_55:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v79, v80, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v9);
  return a1;
}

uint64_t sub_1AFE53110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v10;
    v8 = a3[7];
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  OUTLINED_FUNCTION_0_1();
  if (v11)
  {
    v7 = v12;
    v8 = a3[8];
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
  OUTLINED_FUNCTION_0_1();
  if (v13)
  {
    v7 = v14;
    v8 = a3[10];
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
    OUTLINED_FUNCTION_0_1();
    if (v9)
    {
      v7 = v17;
      v8 = a3[13];
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      v8 = a3[14];
    }
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  v15 = *(_QWORD *)(a1 + a3[11]);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

void sub_1AFE53224(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_1_12();
  if (v11)
  {
    v9 = v8;
    v10 = a4[5];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    OUTLINED_FUNCTION_1_12();
    if (v11)
    {
      v9 = v12;
      v10 = a4[7];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
      OUTLINED_FUNCTION_1_12();
      if (v13)
      {
        v9 = v14;
        v10 = a4[8];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC00);
        OUTLINED_FUNCTION_1_12();
        if (v15)
        {
          v9 = v16;
          v10 = a4[10];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(_QWORD *)(a1 + a4[11]) = (a2 - 1);
            return;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECB00);
          OUTLINED_FUNCTION_1_12();
          if (v11)
          {
            v9 = v17;
            v10 = a4[13];
          }
          else
          {
            v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
            v10 = a4[14];
          }
        }
      }
    }
  }
  __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
}

uint64_t method lookup function for WeatherConditionBackgroundModelFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:automationEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WeatherConditionBackgroundModelFactory.__allocating_init(gradientManager:automationEnabled:isDemoPresetActive:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1AFE53358(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  VFXSceneTemplateManager.templateBackgroundScene.setter((uint64_t)v1);
}

void VFXSceneTemplateManager.templateBackgroundScene.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0_139(v2);
}

void (*VFXSceneTemplateManager.templateBackgroundScene.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  VFXSceneTemplateManager.templateBackgroundScene.getter();
  *a1 = v3;
  return sub_1AFE533C4;
}

void sub_1AFE533C4(void **a1, char a2)
{
  sub_1AFE534A8(a1, a2, (void (*)(void *))VFXSceneTemplateManager.templateBackgroundScene.setter);
}

void VFXSceneTemplateManager.templateCollisionScene.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  char v5;

  v1 = *(void **)(v0 + 24);
  if (v1 == (void *)1)
  {
    v5 = 1;
    v2 = (void *)sub_1AFAC8960(&v5);
    v3 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    v4 = v2;
    sub_1AFB497E8(v3);
  }
  sub_1AFB497D8(v1);
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFE53430(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  VFXSceneTemplateManager.templateCollisionScene.setter((uint64_t)v1);
}

void VFXSceneTemplateManager.templateCollisionScene.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0_139(v2);
}

void (*VFXSceneTemplateManager.templateCollisionScene.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  VFXSceneTemplateManager.templateCollisionScene.getter();
  *a1 = v3;
  return sub_1AFE5349C;
}

void sub_1AFE5349C(void **a1, char a2)
{
  sub_1AFE534A8(a1, a2, (void (*)(void *))VFXSceneTemplateManager.templateCollisionScene.setter);
}

void sub_1AFE534A8(void **a1, char a2, void (*a3)(void *))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3(v4);

  }
  else
  {
    a3(*a1);
  }
}

int64x2_t VFXSceneTemplateManager.__allocating_init()()
{
  int64x2_t *v0;
  int64x2_t result;

  v0 = (int64x2_t *)swift_allocObject();
  result = vdupq_n_s64(1uLL);
  v0[1] = result;
  return result;
}

uint64_t VFXSceneTemplateManager.deinit()
{
  uint64_t v0;

  sub_1AFB497E8(*(id *)(v0 + 16));
  sub_1AFB497E8(*(id *)(v0 + 24));
  return v0;
}

uint64_t VFXSceneTemplateManager.__deallocating_deinit()
{
  VFXSceneTemplateManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1AFE5357C()
{
  VFXSceneTemplateManager.templateCollisionScene.getter();
}

void sub_1AFE5359C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  VFXSceneTemplateManager.templateBackgroundScene.getter();
  *a1 = v2;
}

void sub_1AFE535C8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  VFXSceneTemplateManager.templateCollisionScene.getter();
  *a1 = v2;
}

uint64_t dispatch thunk of VFXSceneTemplateManagerType.templateBackgroundScene.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VFXSceneTemplateManagerType.templateCollisionScene.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for VFXSceneTemplateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VFXSceneTemplateManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1AFE53618()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 0;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 6;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 5;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB0000000053202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF53656C676E6953;
  v24 = 5;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC76528();
  sub_1AFC76528();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1164394496;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42C800003F97AAABLL, v5, 0x3E851EB83E570A3DLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4296000000000000,
    v7,
    0x3E6147AE3E0F5C29,
    0x3F8000003F800000,
    0x3E9A5D8D3F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE53E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1B00065C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA28);
  v5[2] = 0;
  v5[3] = 1;
  v5[1] = 20;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1B000661C();
  qword_1EEE752E8 = result;
  return result;
}

uint64_t static Settings.VFX.listVfxCellsEnabled.getter()
{
  return sub_1AFB4B190(qword_1EEE70260);
}

void sub_1AFE53F64(uint64_t a1)
{
  sub_1AFB4B084(a1, 1, 0xD000000000000028, 0x80000001B00641D0, &qword_1ED1ECBB0);
}

uint64_t static Settings.VFX.allListVfxBackgroundsEnabled.getter()
{
  return sub_1AFB4B190(&qword_1ED1EC528);
}

uint64_t static Settings.VFX.moonEnabled.getter()
{
  return sub_1AFB4B190(&qword_1ED1F2698);
}

uint64_t Settings.VFX.AnimatedBackgrounds.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return Settings.VFX.AnimatedBackgrounds.init(key:defaultValue:access:)(a1, a2, a3, a4);
}

uint64_t sub_1AFE54024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v0 = sub_1B00065C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B00065E0();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD, __n128))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[1] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA28);
  swift_allocObject();
  result = sub_1B0006628();
  qword_1ED1ECA10 = result;
  return result;
}

uint64_t Settings.VFX.AnimatedBackgrounds.AnimationKind.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B0008E60();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1AFE541A0(char *a1, char *a2)
{
  sub_1AFC0BE1C(*a1, *a2);
}

void sub_1AFE541AC()
{
  sub_1AFD77548();
}

uint64_t sub_1AFE541B4()
{
  return sub_1AFDF06FC();
}

void sub_1AFE541BC()
{
  sub_1AFD77704();
}

uint64_t sub_1AFE541C4@<X0>(char *a1@<X8>)
{
  return Settings.VFX.AnimatedBackgrounds.AnimationKind.init(rawValue:)(a1);
}

uint64_t sub_1AFE541D0()
{
  sub_1AFB4B5E4();
  return sub_1B0008740();
}

uint64_t sub_1AFE54210()
{
  sub_1AFB4B5E4();
  return sub_1B0008734();
}

uint64_t Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter()
{
  return OUTLINED_FUNCTION_4_120();
}

uint64_t sub_1AFE54264()
{
  swift_release();
  return swift_release();
}

uint64_t Settings.VFX.AnimatedBackgrounds.deinit()
{
  uint64_t v0;

  v0 = sub_1B000658C();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Settings.VFX.AnimatedBackgrounds.__deallocating_deinit()
{
  Settings.VFX.AnimatedBackgrounds.deinit();
  return swift_deallocClassInstance();
}

void sub_1AFE542F0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  __swift_allocate_value_buffer(v0, qword_1ED1EC9F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED1EC9F8);
  sub_1AFE54338(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFE54338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1B00065BC();
  sub_1B00065A4();
  if (qword_1ED1ECA20 != -1)
    swift_once();
  sub_1B0006598();
  swift_release();
  if (v5 < 1)
  {
    v2 = 1;
  }
  else
  {
    sub_1B0005878();
    v2 = 0;
  }
  v3 = sub_1B00058D8();
  return __swift_storeEnumTagSinglePayload(a1, v2, 1, v3);
}

uint64_t static Settings.VFX.overrideConditionBackgroundDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED1EC498 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED1EC9F8);
  return sub_1AFAF8390(v3, a1);
}

ValueMetadata *type metadata accessor for Settings.VFX()
{
  return &type metadata for Settings.VFX;
}

uint64_t sub_1AFE54460()
{
  return type metadata accessor for Settings.VFX.AnimatedBackgrounds();
}

void sub_1AFE54468()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[9];

  v18[0] = 3;
  sub_1AFDD3868();
  sub_1AFE54CB8();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F333333;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 30, 0, 3250, 200, 30, 1, 4, 0x414000003F800000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    _Q0,
    _Q0,
    v11,
    1084227584,
    v12,
    _Q0,
    _Q0,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40C0000040800000);
}

uint64_t sub_1AFE54CB8()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = (__int128)_Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v11 = _Q1;
  v8 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = _Q1;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B00268C0;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B00268D0;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B002C6E0;
  v79 = xmmword_1B003CE80;
  v76 = xmmword_1B003CE90;
  v77 = v11;
  v74 = xmmword_1B0025F50;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025F60;
  v69 = xmmword_1B0025F70;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = xmmword_1B0026920;
  v17 = v11;
  v14 = xmmword_1B0026930;
  v15 = xmmword_1B0026940;
  v12 = xmmword_1B0026950;
  v13 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B0026030;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)xmmword_1B0026060;
  v63 = xmmword_1B0026070;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B0026990;
  v12 = xmmword_1B0026980;
  v13 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1106247680,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B0026160;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B00269B0;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B00269D0;
  v13 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026240;
  v65 = xmmword_1B0026250;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B00269F0;
  v15 = xmmword_1B0026A00;
  v12 = xmmword_1B0026A10;
  v13 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026300;
  v65 = xmmword_1B0026310;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0026330;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A30;
  v15 = xmmword_1B0026A40;
  v12 = xmmword_1B0026A50;
  v13 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026370;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A70;
  v15 = xmmword_1B0026A80;
  v12 = xmmword_1B0026A90;
  v13 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AC0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AE0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026440;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026450;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AF0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = v11;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B00264C0;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026B00;
  v15 = xmmword_1B0026B10;
  v12 = xmmword_1B0026B20;
  v13 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026560;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026570;
  v67 = xmmword_1B0026580;
  v64 = xmmword_1B0026590;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026B40;
  v15 = xmmword_1B0026B50;
  v12 = xmmword_1B0026B60;
  v13 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026660;
  v67 = xmmword_1B0026670;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = xmmword_1B0026B80;
  v17 = xmmword_1B0026B90;
  v14 = xmmword_1B0026BA0;
  v15 = xmmword_1B0026BB0;
  v12 = xmmword_1B0026BC0;
  v13 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026BD0;
  v81 = v11;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B0026060;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = xmmword_1B0026BE0;
  v17 = xmmword_1B0026BF0;
  v14 = xmmword_1B0026C00;
  v15 = xmmword_1B0026A00;
  v12 = xmmword_1B0026C10;
  v13 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B00267C0;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026C30;
  v17 = v11;
  v14 = xmmword_1B0026C40;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026C60;
  v13 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1106247680,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026C80;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026C90;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  return v0;
}

ValueMetadata *type metadata accessor for VerticalGaugeStyle()
{
  return &type metadata for VerticalGaugeStyle;
}

uint64_t sub_1AFE58280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE58290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = OUTLINED_FUNCTION_0_140();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(double *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *a3 = sub_1AFE58E04;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v13;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AFE58378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  *a4 = sub_1B00082D8();
  a4[1] = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75308);
  return sub_1AFE583E4(a2, a1, a3, (char *)a4 + *(int *)(v9 + 44));
}

uint64_t sub_1AFE583E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  double v30;
  double v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[152];
  _BYTE v81[152];
  _OWORD v82[2];
  uint64_t v83;
  char v84[48];

  v72 = a3;
  v77 = a4;
  v78 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75310);
  MEMORY[0x1E0C80A78](v5);
  v69 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75318);
  MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t *)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75320);
  MEMORY[0x1E0C80A78](v68);
  v67 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75328);
  v65 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v63 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75330);
  MEMORY[0x1E0C80A78](v11);
  v76 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v63 - v14;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75338);
  MEMORY[0x1E0C80A78](v73);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B000751C();
  MEMORY[0x1E0C80A78](v17);
  v19 = (double *)((char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75340);
  MEMORY[0x1E0C80A78](v70);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75348);
  MEMORY[0x1E0C80A78](v71);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75350);
  v79 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v63 - v28;
  swift_bridgeObjectRetain();
  sub_1B0008374();
  sub_1B000835C();
  v64 = a1;
  MEMORY[0x1B5E021D8](a1);
  sub_1B0007408();
  sub_1B0007378();
  v31 = v30 * 0.5;
  v32 = (char *)v19 + *(int *)(v17 + 20);
  v33 = *MEMORY[0x1E0CDB0C0];
  v34 = sub_1B00077D4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  *v19 = v31;
  v19[1] = v31;
  sub_1AFE58E54((uint64_t)v19, (uint64_t)v16);
  *(_WORD *)&v16[*(int *)(v73 + 36)] = 256;
  sub_1AFAC4890((uint64_t)v16, (uint64_t)&v21[*(int *)(v70 + 36)], &qword_1EEE75338);
  v35 = v82[1];
  *(_OWORD *)v21 = v82[0];
  *((_OWORD *)v21 + 1) = v35;
  *((_QWORD *)v21 + 4) = v83;
  swift_bridgeObjectRetain();
  v36 = (uint64_t)v16;
  v37 = v26;
  sub_1AFACB308(v36, &qword_1EEE75338);
  sub_1AFE58E98((uint64_t)v19);
  sub_1AFBFC388((uint64_t)v82);
  sub_1AFAC4890((uint64_t)v21, (uint64_t)v23, &qword_1EEE75340);
  *(_QWORD *)&v23[*(int *)(v71 + 36)] = 0x3FD3333333333333;
  sub_1AFACB308((uint64_t)v21, &qword_1EEE75340);
  sub_1AFAEEF7C(&qword_1EEE75358, &qword_1EEE75348, (uint64_t (*)(void))sub_1AFE58ED4, MEMORY[0x1E0CD9728]);
  sub_1B0007DD4();
  sub_1AFACB308((uint64_t)v23, &qword_1EEE75348);
  v38 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v73 = (uint64_t)v29;
  v38(v29, v26, v24);
  sub_1B0007990();
  if (v39 <= 0.0)
  {
    v52 = v74;
    v49 = (uint64_t)v75;
    v50 = (uint64_t)v75;
    v51 = 1;
  }
  else
  {
    v40 = v64;
    swift_bridgeObjectRetain();
    sub_1B0008374();
    sub_1B000835C();
    MEMORY[0x1B5E021D8](v40);
    sub_1B0007408();
    v41 = sub_1B00082E4();
    LOBYTE(v62) = 0;
    LOBYTE(v61) = 1;
    sub_1AFF065B4(0, (uint64_t)v80, 0, v61, 0x7FF0000000000000, v62, v41);
    sub_1AFBFC388((uint64_t)v84);
    memcpy(v81, v80, sizeof(v81));
    v42 = sub_1B0007810();
    v43 = (uint64_t)v66;
    *v66 = v42;
    *(_QWORD *)(v43 + 8) = 0;
    *(_BYTE *)(v43 + 16) = 1;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75378);
    sub_1AFE58B18(v43 + *(int *)(v44 + 44));
    v45 = v69;
    sub_1AFAC4890(v43, v69, &qword_1EEE75318);
    v46 = v67;
    sub_1AFAC4890(v45, (uint64_t)&v67[*(int *)(v68 + 36)], &qword_1EEE75310);
    memcpy(v46, v81, 0x98uLL);
    sub_1AFB4A714((uint64_t)v81);
    sub_1AFACB308(v45, &qword_1EEE75310);
    sub_1AFACB308(v43, &qword_1EEE75318);
    sub_1AFBFC388((uint64_t)v81);
    sub_1AFE58F58();
    v47 = v63;
    sub_1B0007DD4();
    sub_1AFACB308((uint64_t)v46, &qword_1EEE75320);
    v48 = v74;
    v49 = (uint64_t)v75;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v75, v47, v74);
    v50 = v49;
    v51 = 0;
    v52 = v48;
  }
  __swift_storeEnumTagSinglePayload(v50, v51, 1, v52);
  v53 = v79;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v55 = v73;
  v54(v37, v73, v24);
  v56 = v76;
  sub_1AFAC4890(v49, v76, &qword_1EEE75330);
  v57 = v77;
  v54(v77, (uint64_t)v37, v24);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75370);
  sub_1AFAC4890(v56, (uint64_t)&v57[*(int *)(v58 + 48)], &qword_1EEE75330);
  sub_1AFACB308(v49, &qword_1EEE75330);
  v59 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v59(v55, v24);
  sub_1AFACB308(v56, &qword_1EEE75330);
  return ((uint64_t (*)(char *, uint64_t))v59)(v37, v24);
}

void sub_1AFE58B18(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[3];

  v2 = sub_1B000751C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (double *)((char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE753A0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  sub_1B0007378();
  v12 = v11 * 0.5;
  v13 = (char *)v4 + *(int *)(v2 + 20);
  v14 = *MEMORY[0x1E0CDB0C0];
  v15 = sub_1B00077D4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *v4 = v12;
  v4[1] = v12;
  sub_1AFE58D14();
  sub_1B00082E4();
  sub_1B0007360();
  sub_1AFE58E54((uint64_t)v4, (uint64_t)v7);
  v16 = &v7[*(int *)(v5 + 36)];
  v17 = v19[1];
  *(_OWORD *)v16 = v19[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v19[2];
  sub_1AFE58E98((uint64_t)v4);
  sub_1AFE58FFC((uint64_t)v7, (uint64_t)v10);
  sub_1AFAC4890((uint64_t)v10, (uint64_t)v7, &qword_1EEE753A0);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE753A8);
  sub_1AFAC4890((uint64_t)v7, a1 + *(int *)(v18 + 48), &qword_1EEE753A0);
  sub_1AFACB308((uint64_t)v10, &qword_1EEE753A0);
  sub_1AFACB308((uint64_t)v7, &qword_1EEE753A0);
}

uint64_t sub_1AFE58D14()
{
  sub_1B0007378();
  sub_1B0007378();
  sub_1B0007378();
  return sub_1B0007990();
}

uint64_t sub_1AFE58D88@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  uint64_t v2;

  return sub_1AFE58290(a1, *(_QWORD *)(v2 + 8), a2, *(double *)v2);
}

uint64_t sub_1AFE58D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_0_140();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1AFE58E04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_140() - 8) + 80);
  return sub_1AFE58378(a1, *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5), a2);
}

uint64_t sub_1AFE58E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B000751C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE58E98(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B000751C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFE58ED4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE75360;
  if (!qword_1EEE75360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75340);
    v2 = sub_1AFC7D320();
    sub_1AFAD71A0(&qword_1EEE75368, &qword_1EEE75338, MEMORY[0x1E0CD89F0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE75360);
  }
  return result;
}

unint64_t sub_1AFE58F58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE75380;
  if (!qword_1EEE75380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75320);
    v2 = sub_1AFAEEF7C(&qword_1EEE75388, &qword_1EEE75390, (uint64_t (*)(void))sub_1AFC7D320, MEMORY[0x1E0CDA228]);
    sub_1AFAD71A0(&qword_1EEE75398, &qword_1EEE75310, MEMORY[0x1E0CD8A38]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE75380);
  }
  return result;
}

uint64_t sub_1AFE58FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE753A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFE59044()
{
  sub_1AFAD71A0(&qword_1EEE753B0, &qword_1EEE753B8, MEMORY[0x1E0CD9318]);
}

void WindCornerContentView.status.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WindCornerContentView(0);
  sub_1AFADA740(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
}

uint64_t type metadata accessor for WindCornerContentView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE75438);
}

void WindCornerContentView.init(status:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for WindCornerContentView(0);
  sub_1AFC757F4(a1, (uint64_t)a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
}

void WindCornerContentView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE753C0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_9();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE753C8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  type metadata accessor for WindCornerContentView.Content(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v13 = v12 - v11;
  OUTLINED_FUNCTION_9_108();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  v18 = type metadata accessor for WindComplicationViewModel();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_9();
  v22 = v21 - v20;
  v23 = type metadata accessor for WindCornerContentView(0);
  sub_1AFADA740(v0 + *(int *)(v23 + 20), v17, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
  if (__swift_getEnumTagSinglePayload(v17, 2, v18))
  {
    sub_1AFAE2D74(v17, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
    sub_1AFE5A084();
    sub_1B0007E28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v5, v1);
    swift_storeEnumTagMultiPayload();
    sub_1AFAF86C8(&qword_1EEE753D8, type metadata accessor for WindCornerContentView.Content, (uint64_t)&unk_1B003CFCC);
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_12_6();
    sub_1B0007918();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    sub_1AFC757F4(v17, v22, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
    sub_1AFADA740(v22, v13, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
    sub_1AFADA740(v13, v9, type metadata accessor for WindCornerContentView.Content);
    swift_storeEnumTagMultiPayload();
    sub_1AFAF86C8(&qword_1EEE753D8, type metadata accessor for WindCornerContentView.Content, (uint64_t)&unk_1B003CFCC);
    sub_1AFE5A084();
    OUTLINED_FUNCTION_10_20();
    OUTLINED_FUNCTION_12_6();
    sub_1B0007918();
    sub_1AFAE2D74(v13, type metadata accessor for WindCornerContentView.Content);
    sub_1AFAE2D74(v22, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
  }
}

uint64_t sub_1AFE593C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v47 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1B00079D8();
  v5 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE858);
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE630);
  MEMORY[0x1E0C80A78](v40);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75510);
  MEMORY[0x1E0C80A78](v43);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75518);
  v44 = *(_QWORD *)(v18 - 8);
  v45 = v18;
  MEMORY[0x1E0C80A78](v18);
  v42 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WindComplicationViewModel();
  v46 = v1;
  v50 = sub_1B00063DC();
  v51 = v20;
  sub_1AFAF9424();
  v50 = sub_1B0007D5C();
  v51 = v21;
  v52 = v22 & 1;
  v53 = v23;
  sub_1B00079B4();
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v39);
  sub_1AFAED640(v50, v51, v52);
  swift_bridgeObjectRelease();
  if (qword_1ED1EEE70 != -1)
    swift_once();
  v50 = qword_1ED1FEC08;
  v51 = unk_1ED1FEC10;
  v48 = MEMORY[0x1E0CDDD78];
  v49 = MEMORY[0x1E0CDDD58];
  swift_getOpaqueTypeConformance2();
  sub_1B0007EC4();
  v24 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v8);
  v25 = v46;
  v50 = sub_1AFB97DBC(v24);
  v51 = v26;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFACE0DC((uint64_t)v12, &qword_1ED1EE630);
  v27 = *MEMORY[0x1E0CDDC08];
  v28 = sub_1B0007CFC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v4, v27, v28);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v28);
  KeyPath = swift_getKeyPath();
  v30 = v43;
  v31 = (uint64_t *)&v17[*(int *)(v43 + 36)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7E0);
  sub_1AFAF869C((uint64_t)v4, (uint64_t)v31 + *(int *)(v32 + 28), &qword_1ED1EE7F8);
  *v31 = KeyPath;
  sub_1AFAF869C((uint64_t)v15, (uint64_t)v17, &qword_1ED1EE630);
  sub_1AFACE0DC((uint64_t)v4, &qword_1ED1EE7F8);
  sub_1AFACE0DC((uint64_t)v15, &qword_1ED1EE630);
  v33 = sub_1AFE5ABF4();
  v34 = v42;
  sub_1B0007DE0();
  sub_1AFACE0DC((uint64_t)v17, &qword_1EEE75510);
  MEMORY[0x1E0C80A78](v35);
  *(&v38 - 2) = v25;
  v50 = v30;
  v51 = v33;
  swift_getOpaqueTypeConformance2();
  v36 = v45;
  sub_1B0007DC8();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v34, v36);
}

uint64_t sub_1AFE59880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  sub_1AFB98858();
  sub_1AFAF9424();
  v2 = sub_1B0007D5C();
  v4 = v3;
  v6 = v5 & 1;
  sub_1B0007B64();
  sub_1B0007B58();
  swift_release();
  v7 = sub_1B0007D08();
  v9 = v8;
  v11 = v10;
  swift_release();
  sub_1AFAED640(v2, v4, v6);
  swift_bridgeObjectRelease();
  if (qword_1ED1EE870 != -1)
    swift_once();
  v12 = sub_1B0007CCC();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_1AFAED640(v7, v9, v11 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v14;
  *(_BYTE *)(a1 + 16) = v16 & 1;
  *(_QWORD *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_1AFE599DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v32 = a1;
  v1 = sub_1B00079D8();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE858);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE630);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A40);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEE6FFA0 != -1)
    swift_once();
  v35 = qword_1EEE92000;
  v36 = *(_QWORD *)algn_1EEE92008;
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v35 = sub_1B0007D5C();
  v36 = v16;
  v37 = v17 & 1;
  v38 = v18;
  sub_1B00079B4();
  v19 = MEMORY[0x1E0CDDD78];
  v20 = MEMORY[0x1E0CDDD58];
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  sub_1AFAED640(v35, v36, v37);
  swift_bridgeObjectRelease();
  if (qword_1ED1EEE70 != -1)
    swift_once();
  v35 = qword_1ED1FEC08;
  v36 = unk_1ED1FEC10;
  v33 = v19;
  v34 = v20;
  swift_getOpaqueTypeConformance2();
  v21 = v29;
  sub_1B0007EC4();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v21);
  if (qword_1EEE6FF98 != -1)
    swift_once();
  v35 = qword_1EEE91FF0;
  v36 = *(_QWORD *)algn_1EEE91FF8;
  sub_1B00074EC();
  sub_1AFACE0DC((uint64_t)v9, &qword_1ED1EE630);
  v22 = sub_1AFCFF458();
  sub_1B0007DE0();
  sub_1AFACE0DC((uint64_t)v12, &qword_1ED1EE630);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5C0);
  v35 = v7;
  v36 = v22;
  swift_getOpaqueTypeConformance2();
  sub_1AFC6EE60();
  v23 = v31;
  sub_1B0007DC8();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v23);
}

uint64_t sub_1AFE59D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7E0);
  MEMORY[0x1E0C80A78](v29);
  v2 = (uint64_t *)((char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v6 = (id)qword_1ED1F4470;
  v7 = sub_1B00054B8();
  v9 = v8;

  v31 = v7;
  v32 = v9;
  sub_1AFAF9424();
  v10 = sub_1B0007D5C();
  v12 = v11;
  v14 = v13;
  if (qword_1ED1EE870 != -1)
    swift_once();
  v15 = v14 & 1;
  v16 = sub_1B0007CCC();
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  sub_1AFAED640(v10, v12, v15);
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0CDDC08];
  v24 = sub_1B0007CFC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v5, v23, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v24);
  KeyPath = swift_getKeyPath();
  sub_1AFAF869C((uint64_t)v5, (uint64_t)v2 + *(int *)(v29 + 28), &qword_1ED1EE7F8);
  *v2 = KeyPath;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5C0);
  v27 = v30;
  sub_1AFAF869C((uint64_t)v2, v30 + *(int *)(v26 + 36), &qword_1ED1EE7E0);
  *(_QWORD *)v27 = v16;
  *(_QWORD *)(v27 + 8) = v18;
  *(_BYTE *)(v27 + 16) = v22;
  *(_QWORD *)(v27 + 24) = v20;
  sub_1AFBB755C(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC((uint64_t)v2, &qword_1ED1EE7E0);
  sub_1AFACE0DC((uint64_t)v5, &qword_1ED1EE7F8);
  sub_1AFAED640(v16, v18, v22);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for WindCornerContentView.Content(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE754D8);
}

unint64_t sub_1AFE5A084()
{
  unint64_t result;

  result = qword_1EEE753D0;
  if (!qword_1EEE753D0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D01C, &type metadata for WindCornerContentView.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1EEE753D0);
  }
  return result;
}

uint64_t sub_1AFE5A0C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for WindCornerContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE5A0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_108();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for WindCornerContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE5A150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_9_108();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

unint64_t sub_1AFE5A1C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE75470;
  if (!qword_1EEE75470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEE75478);
    sub_1AFAF86C8(&qword_1EEE753D8, type metadata accessor for WindCornerContentView.Content, (uint64_t)&unk_1B003CFCC);
    v3 = v2;
    v4[2] = &type metadata for WindCornerContentView.Placeholder;
    v4[3] = sub_1AFE5A084();
    v4[0] = v3;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE75470);
  }
  return result;
}

_QWORD *sub_1AFE5A268(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for WindComplicationViewModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = v6[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v23 = v6[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AFE5A404(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (int *)type metadata accessor for WindComplicationViewModel();
  v3 = a1 + v2[5];
  v4 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[6];
  v6 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v2[9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1AFE5A4D4(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for WindComplicationViewModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v10[v13[6]] = v11[v13[6]];
  v10[v13[7]] = v11[v13[7]];
  *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
  v10[v13[9]] = v11[v13[9]];
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  a1[v4[8]] = a2[v4[8]];
  v21 = v4[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_1AFE5A644(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for WindComplicationViewModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v10[v13[6]] = v11[v13[6]];
  v10[v13[7]] = v11[v13[7]];
  *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
  v10[v13[9]] = v11[v13[9]];
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  a1[v4[8]] = a2[v4[8]];
  v21 = v4[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_1AFE5A7C0(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for WindComplicationViewModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v10[v13[6]] = v11[v13[6]];
  v10[v13[7]] = v11[v13[7]];
  *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
  v10[v13[9]] = v11[v13[9]];
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  a1[v4[8]] = a2[v4[8]];
  v21 = v4[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  return a1;
}

_BYTE *sub_1AFE5A92C(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for WindComplicationViewModel();
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v10[v13[6]] = v11[v13[6]];
  v10[v13[7]] = v11[v13[7]];
  *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
  v10[v13[9]] = v11[v13[9]];
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  a1[v4[8]] = a2[v4[8]];
  v21 = v4[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFE5AAA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE5AAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_7_106();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1AFE5AAD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE5AAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_7_106();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_1AFE5AB0C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WindComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WindCornerContentView.Placeholder()
{
  return &type metadata for WindCornerContentView.Placeholder;
}

uint64_t sub_1AFE5AB84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE5AB94()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AFE5ABA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1EE7D8;
  if (!qword_1ED1EE7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE7E0);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1EE7D8);
  }
  return result;
}

unint64_t sub_1AFE5ABF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEE75520;
  if (!qword_1EEE75520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75510);
    v2[0] = sub_1AFCFF458();
    v2[1] = sub_1AFE5ABA8();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEE75520);
  }
  return result;
}

uint64_t sub_1AFE5AC60@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFE59880(a1);
}

uint64_t sub_1AFE5AC68()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE72A40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE5C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE630);
  sub_1AFCFF458();
  OUTLINED_FUNCTION_1_123();
  sub_1AFC6EE60();
  return OUTLINED_FUNCTION_1_123();
}

uint64_t sub_1AFE5ACF0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75518);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75510);
  sub_1AFE5ABF4();
  OUTLINED_FUNCTION_1_123();
  return OUTLINED_FUNCTION_1_123();
}

void sub_1AFE5AD68()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[16];
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30[9];

  v30[0] = 5;
  v25 = 0xD000000000000010;
  v26 = 0x80000001B0050EC0;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0050EE0;
  v29 = 9;
  v21 = 0x80000001B0050EC0;
  v22 = 0xD000000000000014;
  v23 = 0x80000001B0050EE0;
  v24 = 9;
  strcpy(v18, "Cirrus_SingleL");
  v18[15] = -18;
  v19 = 10;
  v20 = 0xD000000000000010;
  sub_1AFE5B59C();
  sub_1AFE5B59C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v30, 30, 0, 812, 50, 15, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFE5B59C()
{
  uint64_t v0;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  double v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  double v32;
  __n128 v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  __n128 v40;
  double v41;
  __n128 v42;
  double v43;
  __n128 v44;
  _OWORD *v45;
  unsigned int v46;
  __n128 *v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  double v56;
  __n128 v57;
  float v58;
  float v59;
  float v60;
  __n128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD *v64;
  uint64_t v65;
  float v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  double v75;
  __n128 v76;
  float v77;
  float v78;
  float v79;
  float v80;
  __n128 v81;
  double v82;
  __n128 v83;
  __n128 v84;
  __n128 *v85;
  uint64_t v86;
  float v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  uint64_t v95;
  double v96;
  __n128 v97;
  float v98;
  float v99;
  float v100;
  __n128 v101;
  double v102;
  __n128 v103;
  __int128 v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  uint64_t v115;
  double v116;
  __n128 v117;
  float v118;
  float v119;
  float v120;
  float v121;
  float v122;
  double v123;
  double v124;
  __int128 v125;
  double v126;
  double v127;
  __n128 v128;
  __int128 v129;
  __int128 v130;
  double v131;
  __n128 v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  uint64_t v140;
  double v141;
  __n128 v142;
  float v143;
  float v144;
  float v145;
  float v146;
  double v147;
  double v148;
  double v149;
  __int128 v150;
  __int128 v151;
  __n128 v152;
  double v153;
  double v154;
  __n128 v155;
  __int128 v156;
  double v157;
  double v158;
  __n128 v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  uint64_t v167;
  double v168;
  __n128 v169;
  float v170;
  float v171;
  float v172;
  float v173;
  __n128 v174;
  __int128 v175;
  double v176;
  __n128 v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  uint64_t v185;
  double v186;
  __n128 v187;
  float v188;
  float v189;
  float v190;
  float v191;
  float v192;
  float v193;
  __n128 v194;
  __int128 v195;
  double v196;
  __n128 v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  uint64_t v206;
  double v207;
  __n128 v208;
  float v209;
  float v210;
  float v211;
  float v212;
  float v213;
  float v214;
  __n128 v215;
  double v216;
  __int128 v217;
  __int128 v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  uint64_t v227;
  double v228;
  __n128 v229;
  float v230;
  float v231;
  float v232;
  float v233;
  double v234;
  double v235;
  __int128 v236;
  double v237;
  double v238;
  __n128 v239;
  __int128 v240;
  __int128 v241;
  double v242;
  __n128 v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  uint64_t v251;
  double v252;
  __n128 v253;
  float v254;
  float v255;
  __n128 v256;
  double v257;
  __n128 v258;
  __n128 v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  uint64_t v267;
  double v268;
  __n128 v269;
  float v270;
  float v271;
  float v272;
  float v273;
  unsigned int v274;
  __n128 v275;
  __n128 v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  uint64_t v284;
  double v285;
  __n128 v286;
  float v287;
  unsigned int v288;
  __n128 v289;
  __n128 v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  uint64_t v298;
  double v299;
  float v300;
  float v301;
  float v302;
  double v303;
  __n128 v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  uint64_t v313;
  double v314;
  float v315;
  __n128 v317;
  int v318;
  uint64_t v319;
  _OWORD *v320;
  _OWORD *v321;
  uint64_t v322;
  __int128 v323;
  __n128 v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  uint64_t v333;
  double v334;
  __n128 v335;
  float v336;
  float v337;
  float v338;
  float v339;
  float v340;
  float v341;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  _OWORD *v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  _OWORD *v417;
  _OWORD *v418;
  _OWORD *v419;
  _OWORD *v420;
  _OWORD *v421;
  _OWORD *v422;
  _OWORD *v423;
  _OWORD *v424;
  _OWORD *v425;
  _OWORD *v426;
  _OWORD *v427;
  _OWORD *v428;
  _OWORD *v429;
  _OWORD *v430;
  _OWORD *v431;
  _OWORD *v432;
  _OWORD *v433;
  _OWORD *v434;
  _OWORD *v435;
  _OWORD *v436;
  _OWORD *v437;
  _OWORD *v438;
  _OWORD *v439;
  _OWORD *v440;
  _OWORD *v441;
  _OWORD *v442;
  _OWORD *v443;
  _OWORD *v444;
  _OWORD *v445;
  _OWORD *v446;
  _OWORD *v447;
  _OWORD *v448;
  _OWORD *v449;
  _OWORD *v450;
  _OWORD *v451;
  _OWORD *v452;
  _OWORD *v453;
  _OWORD *v454;
  _OWORD *v455;
  _OWORD *v456;
  _OWORD *v457;
  _OWORD *v458;
  _OWORD *v459;
  _OWORD *v460;
  _OWORD *v461;
  _OWORD *v462;
  _OWORD *v463;
  _OWORD *v464;
  _OWORD *v465;
  _OWORD *v466;
  _OWORD *v467;
  _OWORD *v468;
  _OWORD *v469;
  _OWORD *v470;
  _OWORD *v471;
  _OWORD *v472;
  _OWORD *v473;
  _OWORD *v474;
  _OWORD *v475;
  _OWORD *v476;
  _OWORD *v477;
  _OWORD *v478;
  _OWORD *v479;
  _OWORD *v480;
  _OWORD *v481;
  _OWORD *v482;
  _OWORD *v483;
  _OWORD *v484;
  _OWORD *v485;
  _OWORD *v486;
  _OWORD *v487;
  _OWORD *v488;
  _OWORD *v489;
  _OWORD *v490;
  _OWORD *v491;
  _OWORD *v492;
  _OWORD *v493;
  _OWORD *v494;
  _OWORD *v495;
  _OWORD *v496;
  _OWORD *v497;
  _OWORD *v498;
  _OWORD *v499;
  _OWORD *v500;
  _OWORD *v501;
  _OWORD *v502;
  _OWORD *v503;
  _OWORD *v504;
  _OWORD *v505;
  _OWORD *v506;
  _OWORD *v507;
  _OWORD *v508;
  _OWORD *v509;
  _OWORD *v510;
  _OWORD *v511;
  _OWORD *v512;
  _OWORD *v513;
  _OWORD *v514;
  _OWORD *v515;
  _OWORD *v516;
  _OWORD *v517;
  _OWORD *v518;
  _OWORD *v519;
  _OWORD *v520;
  _OWORD *v521;
  _OWORD *v522;
  _OWORD *v523;
  _OWORD *v524;
  _OWORD *v525;
  _OWORD *v526;
  _OWORD *v527;
  _OWORD *v528;
  _OWORD *v529;
  _OWORD *v530;
  _OWORD *v531;
  _OWORD *v532;
  _OWORD *v533;
  _OWORD *v534;
  _OWORD *v535;
  _OWORD *v536;
  _OWORD *v537;
  _OWORD *v538;
  _OWORD *v539;
  _OWORD *v540;
  _OWORD *v541;
  _OWORD *v542;
  _OWORD *v543;
  _OWORD *v544;
  _OWORD *v545;
  _OWORD *v546;
  _OWORD *v547;
  _OWORD *v548;
  _OWORD *v549;
  _OWORD *v550;
  _OWORD *v551;
  _OWORD *v552;
  _OWORD *v553;
  _OWORD *v554;
  _OWORD *v555;
  _OWORD *v556;
  _OWORD *v557;
  _OWORD *v558;
  _OWORD *v559;
  _OWORD *v560;
  _OWORD *v561;
  _OWORD *v562;
  _OWORD *v563;
  _OWORD *v564;
  _OWORD *v565;
  _OWORD *v566;
  _OWORD *v567;
  _OWORD *v568;
  _OWORD *v569;
  _OWORD *v570;
  _OWORD *v571;
  _OWORD *v572;
  _OWORD *v573;
  _OWORD *v574;
  _OWORD *v575;
  _OWORD *v576;
  _OWORD *v577;
  _OWORD *v578;
  _OWORD *v579;
  _OWORD *v580;
  _OWORD *v581;
  _OWORD *v582;
  _OWORD *v583;
  _OWORD *v584;
  _OWORD *v585;
  _OWORD *v586;
  _OWORD *v587;
  _OWORD *v588;
  _OWORD *v589;
  _OWORD *v590;
  _OWORD *v591;
  _OWORD *v592;
  _OWORD *v593;
  _OWORD *v594;
  _OWORD *v595;
  _OWORD *v596;
  _OWORD *v597;
  _OWORD *v598;
  _OWORD *v599;
  _OWORD *v600;
  _OWORD *v601;
  _OWORD *v602;
  _OWORD *v603;
  _OWORD *v604;
  _OWORD *v605;
  _OWORD *v606;
  _OWORD *v607;
  _OWORD *v608;
  _OWORD *v609;
  _OWORD *v610;
  _OWORD *v611;
  _OWORD *v612;
  _OWORD *v613;
  _OWORD *v614;
  _OWORD *v615;
  _OWORD *v616;
  _OWORD *v617;
  _OWORD *v618;
  _OWORD *v619;
  _OWORD *v620;
  _OWORD *v621;
  _OWORD *v622;
  _OWORD *v623;
  _OWORD *v624;
  _OWORD *v625;
  _OWORD *v626;
  _OWORD *v627;
  _OWORD *v628;
  _OWORD *v629;
  _OWORD *v630;
  _OWORD *v631;
  _OWORD *v632;
  _OWORD *v633;
  _OWORD *v634;
  _OWORD *v635;
  _OWORD *v636;
  _OWORD *v637;
  _OWORD *v638;
  _OWORD *v639;
  _OWORD *v640;
  _OWORD *v641;
  _OWORD *v642;
  _OWORD *v643;
  _OWORD *v644;
  _OWORD *v645;
  _OWORD *v646;
  _OWORD *v647;
  _OWORD *v648;
  _OWORD *v649;
  _OWORD *v650;
  _OWORD *v651;
  _OWORD *v652;
  _OWORD *v653;
  _OWORD *v654;
  _OWORD *v655;
  _OWORD *v656;
  _OWORD *v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  _OWORD *v682;
  _OWORD *v683;
  _OWORD *v684;
  _OWORD *v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  float v692;
  __n128 v693;
  __n128 v694;
  int64x2_t v695;
  __n128 v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  __int128 v700;
  __int128 v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  __int128 v705;
  __int128 v706;
  _OWORD v707[2];
  _OWORD v708[2];
  _OWORD v709[2];
  _OWORD v710[2];
  _OWORD v711[2];
  _OWORD v712[2];
  _OWORD v713[2];
  _OWORD v714[2];
  _OWORD v715[2];
  _OWORD v716[2];
  _OWORD v717[2];
  _OWORD v718[2];
  _OWORD v719[2];
  _OWORD v720[2];
  _OWORD v721[2];
  _OWORD v722[2];
  _OWORD v723[2];
  _OWORD v724[2];
  _OWORD v725[2];
  _OWORD v726[2];
  int64x2_t v727;
  __int128 v728;
  __int128 v729;
  __int128 v730;
  __int128 v731;
  __int128 v732;
  __int128 v733;
  __int128 v734;
  __n128 v735;
  __int128 v736;
  int64x2_t v737;
  __int128 v738;
  __int128 v739;
  __int128 v740;
  __int128 v741;
  __int128 v742;
  __int128 v743;
  __int128 v744;
  __int128 v745;
  __int128 v746;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v745 = xmmword_1B0025DD0;
  v746 = xmmword_1B0025DE0;
  v743 = xmmword_1B0025DF0;
  v744 = xmmword_1B0025E00;
  v741 = xmmword_1B0025E10;
  v742 = xmmword_1B0025E20;
  v739 = xmmword_1B0025E30;
  v740 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v695 = _Q0;
  v737 = _Q0;
  v738 = xmmword_1B0026E60;
  __asm { FMOV            V2.2D, #1.0 }
  v735 = _Q2;
  v736 = (__int128)_Q2;
  v733 = xmmword_1B0025E60;
  v734 = xmmword_1B0025E70;
  v731 = (__int128)_Q2;
  v732 = xmmword_1B0025E50;
  v729 = xmmword_1B0025E80;
  v730 = (__int128)_Q2;
  v727 = (int64x2_t)_Q2;
  v728 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_0_35(1.0, 0.988235235, _Q2);
  v7.n128_f64[0] = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_17_91(v7, (__n128)xmmword_1B0025EA0);
  v703 = xmmword_1B0025EB0;
  v704 = xmmword_1B0025EC0;
  v696 = v8;
  OUTLINED_FUNCTION_12_34(0.296345949, 0.497940063, v8);
  v686 = v9;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_15_2(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v731, &v729, 0x3F8000003F000000,
    1060320051,
    &v727,
    1065353216,
    v726,
    v725,
    v724,
    v723,
    v722,
    v721,
    v720,
    v719,
    v718,
    v717,
    v716,
    v715,
    v714,
    v713,
    v712,
    v711,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    1112014848,
    1097859072,
    &v699,
    v686);
  OUTLINED_FUNCTION_1_124();
  v20.n128_f64[0] = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_17_91(v20, (__n128)xmmword_1B0025EE0);
  OUTLINED_FUNCTION_20_75((__n128)xmmword_1B0025EF0, (__n128)xmmword_1B0025F00, v21);
  v682 = v22;
  OUTLINED_FUNCTION_8_110();
  v425 = v23;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_32_42();
  OUTLINED_FUNCTION_15_2(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, &v731, &v729, 0x3F8000003F000000,
    1060320051,
    &v727,
    1065353216,
    v726,
    v725,
    v724,
    v723,
    v425,
    v441,
    v457,
    v473,
    v489,
    v505,
    v521,
    v537,
    v553,
    v569,
    v585,
    v601,
    v612,
    v622,
    v632,
    v638,
    v642,
    v646,
    v650,
    1112014848,
    1097859072,
    v682,
    v687);
  v745 = xmmword_1B0025F10;
  v746 = (__int128)v696;
  v743 = xmmword_1B0025F20;
  v744 = xmmword_1B0025F30;
  v741 = xmmword_1B0025F40;
  v742 = (__int128)v696;
  v739 = xmmword_1B0025F50;
  v740 = xmmword_1B0025E50;
  v737 = v695;
  v738 = xmmword_1B00271F0;
  v735 = v696;
  v736 = (__int128)v696;
  v733 = xmmword_1B0025F60;
  v734 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_1B0025F80, (__n128)xmmword_1B0025E50);
  v729 = xmmword_1B0025F90;
  v730 = xmmword_1B0025FA0;
  v727 = (int64x2_t)v40;
  v728 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_2_127(1.0, 0.988235235, v41, v40);
  v42.n128_f64[0] = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_17_91(v42, (__n128)xmmword_1B0025FB0);
  v703 = xmmword_1B0025FC0;
  v704 = xmmword_1B0025FD0;
  OUTLINED_FUNCTION_11_98(0.295633078, 0.49942553, v43, v44);
  OUTLINED_FUNCTION_8_110();
  v426 = v45;
  OUTLINED_FUNCTION_12_8();
  v353 = v46 | 0x3F4CCCCD00000000;
  v694 = v47[206];
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_15_2(v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, 0.8, 0.8, 0.7, &v731, &v729, v353,
    1060320051,
    &v727,
    1065353216,
    v726,
    v725,
    v724,
    v723,
    v426,
    v442,
    v458,
    v474,
    v490,
    v506,
    v522,
    v538,
    v554,
    v570,
    v586,
    v602,
    v613,
    v623,
    v633,
    v639,
    v643,
    v647,
    v651,
    1112014848,
    1097859072,
    &v699,
    (uint64_t)&v697);
  v745 = xmmword_1B0025FE0;
  v746 = (__int128)v696;
  v743 = xmmword_1B0025FF0;
  v744 = xmmword_1B0026000;
  v741 = xmmword_1B0026010;
  v742 = xmmword_1B0026020;
  v739 = xmmword_1B0026030;
  v740 = xmmword_1B0026040;
  v737 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v738 = xmmword_1B0026EA0;
  OUTLINED_FUNCTION_35_32(*(double *)v737.i64, 0.767019749, v696);
  OUTLINED_FUNCTION_33_42((__n128)xmmword_1B0026050);
  v727 = (int64x2_t)xmmword_1B0026060;
  v728 = xmmword_1B0026070;
  OUTLINED_FUNCTION_0_35(0.701960802, 0.992156863, v61);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026080, (__n128)xmmword_1B0026090);
  v703 = xmmword_1B00260A0;
  v704 = v62;
  v701 = v63;
  v702 = v63;
  v699 = v63;
  v700 = v63;
  v697 = v63;
  v698 = v63;
  OUTLINED_FUNCTION_23_70();
  v652 = v64;
  OUTLINED_FUNCTION_9_109();
  OUTLINED_FUNCTION_12_8();
  v66 = *(float *)(v65 + 2528);
  OUTLINED_FUNCTION_37_34();
  OUTLINED_FUNCTION_15_2(v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, 0.8, v66, v79, v80, &v731, &v729, 0x3F59999A3F59999ALL,
    0,
    &v727,
    0,
    v726,
    v383,
    v397,
    v411,
    v427,
    v443,
    v459,
    v475,
    v491,
    v507,
    v523,
    v539,
    v555,
    v571,
    v587,
    v603,
    v614,
    v624,
    v634,
    v707,
    &v705,
    &v703,
    v652,
    v658,
    v670,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B00260C0, (__n128)xmmword_1B00260D0);
  v743 = xmmword_1B00260E0;
  v744 = xmmword_1B00260F0;
  v741 = xmmword_1B0026100;
  v742 = xmmword_1B0026110;
  v739 = (__int128)v696;
  v740 = xmmword_1B0026120;
  v737 = (int64x2_t)v696;
  v738 = xmmword_1B0026FC0;
  v735 = v696;
  v736 = xmmword_1B0026130;
  v733 = (__int128)v696;
  v734 = xmmword_1B0026140;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_1B0026150, (__n128)xmmword_1B0026160);
  OUTLINED_FUNCTION_33_42((__n128)xmmword_1B0026170);
  v727 = (int64x2_t)v81;
  v728 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_0_35(1.0, v82, v81);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026180, (__n128)xmmword_1B0026190);
  OUTLINED_FUNCTION_12_103((__n128)xmmword_1B00261A0, v83, v84);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_9_109();
  OUTLINED_FUNCTION_30_57();
  OUTLINED_FUNCTION_12_8();
  v693 = v85[27];
  v87 = *(float *)(v86 + 2616);
  OUTLINED_FUNCTION_37_34();
  OUTLINED_FUNCTION_15_2(v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, 0.8, v87, v87, v100, &v731, &v729, 0x3F6666663F666666,
    0,
    v360,
    v365,
    v726,
    v384,
    v398,
    v412,
    v428,
    v444,
    v460,
    v476,
    v492,
    v508,
    v524,
    v540,
    v556,
    v572,
    v588,
    v604,
    v615,
    v625,
    v635,
    v707,
    &v705,
    &v703,
    &v701,
    v659,
    v671,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B00261C0, (__n128)xmmword_1B00261D0);
  v743 = xmmword_1B00261E0;
  v744 = xmmword_1B00261F0;
  OUTLINED_FUNCTION_42_20((__n128)xmmword_1B0026200, (__n128)xmmword_1B0026210);
  v737 = (int64x2_t)v101;
  OUTLINED_FUNCTION_31_50((__n128)xmmword_1B0027030, v102, v101);
  v733 = (__int128)v103;
  v734 = xmmword_1B0026140;
  v731 = xmmword_1B0026220;
  v732 = xmmword_1B0026230;
  v729 = xmmword_1B0026240;
  v730 = xmmword_1B0026250;
  v727 = (int64x2_t)xmmword_1B0026260;
  v728 = xmmword_1B0026270;
  OUTLINED_FUNCTION_0_35(0.985039473, 0.98524636, v103);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026280, (__n128)xmmword_1B0026290);
  v703 = xmmword_1B00262A0;
  v704 = v104;
  OUTLINED_FUNCTION_12_34(0.899999976, *(double *)&v104, v105);
  v688 = v106;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_7_107();
  OUTLINED_FUNCTION_30_57();
  OUTLINED_FUNCTION_12_8();
  v692 = *(float *)(v107 + 2512);
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_15_2(v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v87, v121, v122, &v731, &v729, 0x3F6666663F666666,
    0,
    v361,
    v366,
    v726,
    v385,
    v399,
    v413,
    v429,
    v445,
    v461,
    v477,
    v493,
    v509,
    v525,
    v541,
    v557,
    v573,
    v589,
    v605,
    v616,
    v626,
    v636,
    v640,
    &v705,
    &v703,
    &v701,
    v660,
    v672,
    &v699,
    v688);
  OUTLINED_FUNCTION_22_11((__n128)vdupq_n_s64(0x3FECBCBCC0000000uLL), (__n128)xmmword_1B00262C0);
  v743 = xmmword_1B00262D0;
  v744 = xmmword_1B0025F70;
  v741 = xmmword_1B00262E0;
  v742 = xmmword_1B00262F0;
  OUTLINED_FUNCTION_18_78(0.925020874, 0.792787254, v123, v124, v696);
  v736 = xmmword_1B0026130;
  v733 = v125;
  v734 = xmmword_1B0026140;
  v731 = xmmword_1B0026220;
  OUTLINED_FUNCTION_45_12();
  v729 = xmmword_1B0026300;
  v730 = xmmword_1B0026310;
  v727 = (int64x2_t)xmmword_1B0026320;
  v728 = xmmword_1B0026330;
  OUTLINED_FUNCTION_4_121(0.970078886, 0.97049284, v126, v127, v128);
  v705 = xmmword_1B0026340;
  v706 = v129;
  v703 = xmmword_1B0026350;
  v704 = v130;
  OUTLINED_FUNCTION_19_72(0.599999964, v131, *(double *)&v129, *(double *)&v130, v132);
  OUTLINED_FUNCTION_25_63();
  OUTLINED_FUNCTION_7_107();
  OUTLINED_FUNCTION_30_57();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_36_34();
  OUTLINED_FUNCTION_15_2(v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v87, v146, v87, &v731, &v729, 0x3F6666663F666666,
    0,
    v362,
    v367,
    v726,
    v386,
    v400,
    v414,
    v430,
    v446,
    v462,
    v478,
    v494,
    v510,
    v526,
    v542,
    v558,
    v574,
    v590,
    v606,
    v617,
    v627,
    v637,
    v641,
    &v701,
    &v703,
    &v701,
    v661,
    v673,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_14_102();
  v743 = xmmword_1B0026370;
  v744 = (__int128)v696;
  v741 = (__int128)v696;
  v742 = (__int128)v696;
  OUTLINED_FUNCTION_18_78(0.449999928, v147, v148, v149, v696);
  v736 = xmmword_1B0026130;
  v733 = v150;
  v734 = xmmword_1B0026140;
  v731 = xmmword_1B0026220;
  OUTLINED_FUNCTION_45_12();
  v729 = v151;
  v730 = (__int128)v152;
  v727 = (int64x2_t)xmmword_1B0026380;
  v728 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_4_121(0.996078432, v153, v154, *(double *)&v151, v152);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026390, v155);
  v703 = xmmword_1B00263A0;
  v704 = v156;
  OUTLINED_FUNCTION_19_72(0.399999946, v157, *(double *)&v156, v158, v159);
  OUTLINED_FUNCTION_25_63();
  OUTLINED_FUNCTION_6_111();
  HIDWORD(v354) = 1063675494;
  OUTLINED_FUNCTION_15_95();
  OUTLINED_FUNCTION_34_41();
  OUTLINED_FUNCTION_15_2(v160, v161, v162, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, v87, v87, v343, v348, v354,
    0,
    v363,
    v368,
    v373,
    v387,
    v401,
    v415,
    v431,
    v447,
    v463,
    v479,
    v495,
    v511,
    v527,
    v543,
    v559,
    v575,
    v591,
    v607,
    v618,
    v628,
    v708,
    v707,
    &v701,
    &v703,
    &v701,
    v662,
    v674,
    &v731,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_14_102();
  v743 = xmmword_1B00263C0;
  v744 = xmmword_1B00263D0;
  v741 = xmmword_1B00263E0;
  v742 = xmmword_1B00263F0;
  OUTLINED_FUNCTION_21_68();
  v734 = xmmword_1B0026140;
  v731 = xmmword_1B0026220;
  v732 = xmmword_1B0026230;
  v729 = xmmword_1B0026220;
  v730 = (__int128)v174;
  v727 = (int64x2_t)xmmword_1B0026380;
  v728 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_2_127(0.996078432, 1.0, 1.0, v174);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026390, (__n128)xmmword_1B0026400);
  v703 = xmmword_1B0026410;
  v704 = v175;
  OUTLINED_FUNCTION_11_98(0.399999946, v176, *(double *)&v175, v177);
  OUTLINED_FUNCTION_5_115();
  HIDWORD(v355) = 1063675494;
  OUTLINED_FUNCTION_15_95();
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_15_2(v178, v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v190, v191, v192, v193, v344, v349, v355,
    0,
    &v727,
    v369,
    v374,
    v388,
    v402,
    v416,
    v432,
    v448,
    v464,
    v480,
    v496,
    v512,
    v528,
    v544,
    v560,
    v576,
    v592,
    v608,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    1112014848,
    1097859072,
    &v731,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_14_102();
  v743 = xmmword_1B00263C0;
  v744 = xmmword_1B00263D0;
  v741 = xmmword_1B00263E0;
  v742 = xmmword_1B00263F0;
  OUTLINED_FUNCTION_21_68();
  v734 = xmmword_1B0026140;
  v731 = xmmword_1B0026220;
  v732 = xmmword_1B0025E50;
  v729 = xmmword_1B0026220;
  v730 = (__int128)v194;
  v727 = (int64x2_t)xmmword_1B0026380;
  v728 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_2_127(0.996078432, 1.0, 0.999995947, v194);
  v705 = xmmword_1B0026430;
  v706 = xmmword_1B0026400;
  v703 = xmmword_1B00263A0;
  v704 = v195;
  OUTLINED_FUNCTION_11_98(0.399999946, *(double *)&v195, v196, v197);
  OUTLINED_FUNCTION_23_70();
  v653 = v198;
  OUTLINED_FUNCTION_3_121();
  OUTLINED_FUNCTION_12_8();
  HIDWORD(v356) = 1063675494;
  OUTLINED_FUNCTION_15_95();
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_29(v199, v200, v201, v202, v203, v204, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v345, v350, v356,
    0,
    &v727,
    0,
    v375,
    v389,
    v403,
    v417,
    v433,
    v449,
    v465,
    v481,
    v497,
    v513,
    v529,
    v545,
    v561,
    v577,
    v593,
    v711,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    v653,
    v663,
    v675,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_14_102();
  v743 = xmmword_1B0026440;
  v744 = (__int128)v696;
  v741 = (__int128)v696;
  v742 = (__int128)v696;
  v739 = (__int128)v696;
  v740 = (__int128)v696;
  v737 = (int64x2_t)v696;
  v738 = xmmword_1B0027030;
  v735 = v696;
  v736 = xmmword_1B0026130;
  v733 = (__int128)v696;
  v734 = xmmword_1B0026450;
  v731 = xmmword_1B0026220;
  OUTLINED_FUNCTION_45_12();
  v729 = (__int128)v215;
  v730 = (__int128)v215;
  v727 = (int64x2_t)xmmword_1B0026380;
  v728 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_0_35(v215.n128_f64[0], v216, v215);
  v705 = xmmword_1B0026430;
  v706 = v217;
  v703 = xmmword_1B0026410;
  v704 = xmmword_1B0026140;
  v701 = v218;
  v702 = v218;
  v699 = v218;
  v700 = v218;
  v697 = v218;
  v698 = v218;
  OUTLINED_FUNCTION_23_70();
  v654 = v219;
  OUTLINED_FUNCTION_6_111();
  HIDWORD(v357) = 1063675494;
  OUTLINED_FUNCTION_15_95();
  OUTLINED_FUNCTION_34_41();
  OUTLINED_FUNCTION_29(v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v66, v87, v346, v351, v357,
    0,
    v364,
    v370,
    v376,
    v390,
    v404,
    v418,
    v434,
    v450,
    v466,
    v482,
    v498,
    v514,
    v530,
    v546,
    v562,
    v578,
    v594,
    v609,
    v619,
    v629,
    v708,
    v707,
    &v705,
    &v703,
    v654,
    v664,
    v676,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_22_11((__n128)vdupq_n_s64(0x3FEC9CDC00000000uLL), (__n128)xmmword_1B0026470);
  v743 = xmmword_1B0026480;
  v744 = xmmword_1B0026490;
  v741 = xmmword_1B00264A0;
  v742 = xmmword_1B00264B0;
  OUTLINED_FUNCTION_18_78(0.691202879, 0.925020874, v234, v235, v696);
  v736 = xmmword_1B0026130;
  v733 = v236;
  v734 = xmmword_1B0026140;
  v731 = v236;
  OUTLINED_FUNCTION_45_12();
  OUTLINED_FUNCTION_33_42((__n128)xmmword_1B00264C0);
  v727 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v728 = xmmword_1B00264D0;
  OUTLINED_FUNCTION_4_121(*(double *)v727.i64, 0.89028424, v237, v238, v239);
  v705 = xmmword_1B0026430;
  v706 = v240;
  v703 = xmmword_1B00264E0;
  v704 = v241;
  OUTLINED_FUNCTION_19_72(0.5, v242, *(double *)&v241, *(double *)&v240, v243);
  OUTLINED_FUNCTION_27_62();
  OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_5_115();
  HIDWORD(v358) = 1063675494;
  OUTLINED_FUNCTION_15_95();
  OUTLINED_FUNCTION_36_34();
  OUTLINED_FUNCTION_29(v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, 0.7, v87, v87, v66, v347, v352, v358,
    0,
    &v727,
    v371,
    v377,
    v391,
    v405,
    v419,
    v435,
    v451,
    v467,
    v483,
    v499,
    v515,
    v531,
    v547,
    v563,
    v579,
    v595,
    v610,
    v620,
    v630,
    v708,
    v707,
    v644,
    v648,
    v655,
    v665,
    v677,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B0026500, (__n128)xmmword_1B0026510);
  v743 = xmmword_1B0026520;
  v744 = xmmword_1B0026530;
  OUTLINED_FUNCTION_42_20((__n128)xmmword_1B0026540, (__n128)xmmword_1B0026550);
  v737 = (int64x2_t)v256;
  OUTLINED_FUNCTION_31_50((__n128)xmmword_1B0027030, v257, v256);
  v733 = xmmword_1B0026560;
  v734 = xmmword_1B0026140;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_1B0026570, (__n128)xmmword_1B0026580);
  OUTLINED_FUNCTION_33_42((__n128)xmmword_1B0026590);
  v727 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v728 = xmmword_1B00265A0;
  OUTLINED_FUNCTION_0_35(*(double *)v727.i64, 0.911051631, v258);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B00265B0, (__n128)xmmword_1B00265C0);
  OUTLINED_FUNCTION_16_85((__n128)xmmword_1B00265D0, (__n128)xmmword_1B00265E0, v259);
  OUTLINED_FUNCTION_27_62();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_29(v260, v261, v262, v263, v264, v265, v266, v267, v268, v269, v692, v270, v271, v87, v272, v273, &v731, &v729, 0x3F6666663F666666,
    0,
    &v727,
    0,
    v726,
    v725,
    v724,
    v723,
    v722,
    v721,
    v720,
    v719,
    v718,
    v717,
    v716,
    v715,
    v714,
    v713,
    v712,
    v711,
    v710,
    v709,
    v707,
    v707,
    v645,
    v649,
    v656,
    v666,
    v678,
    v683,
    v689);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B0026600, (__n128)xmmword_1B0026610);
  v743 = xmmword_1B0026620;
  v744 = xmmword_1B0026630;
  v741 = xmmword_1B0026640;
  v742 = xmmword_1B0026650;
  v739 = (__int128)v696;
  v740 = xmmword_1B0026120;
  v737 = (int64x2_t)v696;
  OUTLINED_FUNCTION_31_50((__n128)xmmword_1B0026FC0, 0.423529387, v696);
  v733 = xmmword_1B0026220;
  v734 = xmmword_1B0026140;
  OUTLINED_FUNCTION_17_32((__n128)xmmword_1B0026660, (__n128)xmmword_1B0026670);
  OUTLINED_FUNCTION_44_14((__n128)xmmword_1B0026170);
  v727 = vdupq_n_s64(v274 | 0x3FEE6AC300000000uLL);
  v728 = xmmword_1B0026680;
  OUTLINED_FUNCTION_0_35(*(double *)v727.i64, 0.931819081, v275);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026690, (__n128)xmmword_1B00266A0);
  OUTLINED_FUNCTION_16_85((__n128)xmmword_1B00266B0, (__n128)xmmword_1B00266C0, v276);
  OUTLINED_FUNCTION_5_115();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_29(v277, v278, v279, v280, v281, v282, v283, v284, v285, v286, 600.0, v287, 0.8, v87, v66, 0.8, &v731, &v729, 0x3F6666663F666666,
    0,
    &v727,
    v372,
    v378,
    v392,
    v406,
    v420,
    v436,
    v452,
    v468,
    v484,
    v500,
    v516,
    v532,
    v548,
    v564,
    v580,
    v596,
    v611,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    1112014848,
    1097859072,
    v684,
    v690);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B00266E0, (__n128)xmmword_1B00266F0);
  v743 = xmmword_1B0026700;
  v744 = xmmword_1B0026710;
  v741 = xmmword_1B0026720;
  v742 = xmmword_1B0026730;
  v739 = xmmword_1B0026060;
  v740 = xmmword_1B0026040;
  v737 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v738 = xmmword_1B00271B0;
  OUTLINED_FUNCTION_35_32(*(double *)v737.i64, 0.780397475, v696);
  OUTLINED_FUNCTION_44_14((__n128)xmmword_1B0026050);
  v727 = vdupq_n_s64(v288 | 0x3FEF23CF00000000uLL);
  v728 = xmmword_1B0026740;
  OUTLINED_FUNCTION_0_35(*(double *)v727.i64, 0.96295315, v289);
  OUTLINED_FUNCTION_17_91((__n128)xmmword_1B0026750, (__n128)xmmword_1B0026760);
  OUTLINED_FUNCTION_12_103((__n128)xmmword_1B0026770, (__n128)xmmword_1B0026780, v290);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_3_121();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_29(v291, v292, v293, v294, v295, v296, v297, v298, v299, v693, v300, v301, v302, v66, v66, 0.8, &v731, &v729, 0x3F59999A3F59999ALL,
    0,
    &v727,
    665496235,
    v379,
    v393,
    v407,
    v421,
    v437,
    v453,
    v469,
    v485,
    v501,
    v517,
    v533,
    v549,
    v565,
    v581,
    v597,
    v711,
    v621,
    v631,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    v667,
    v679,
    &v699,
    (uint64_t)&v697);
  v745 = xmmword_1B0026790;
  v746 = (__int128)v696;
  v743 = xmmword_1B00267A0;
  v744 = xmmword_1B00267B0;
  v741 = xmmword_1B0025F40;
  v742 = (__int128)v696;
  v739 = xmmword_1B00267C0;
  v740 = xmmword_1B0025E50;
  v737 = v695;
  v738 = xmmword_1B00271F0;
  v735 = v696;
  v736 = (__int128)v696;
  v733 = xmmword_1B00267D0;
  v734 = xmmword_1B00267E0;
  v731 = xmmword_1B00267F0;
  v732 = xmmword_1B0025E50;
  v729 = xmmword_1B0025F90;
  v730 = xmmword_1B0025FA0;
  v727 = (int64x2_t)v696;
  v728 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_2_127(0.988235235, 1.0, 1.0, v696);
  v705 = xmmword_1B0026800;
  v706 = xmmword_1B0025EA0;
  v703 = xmmword_1B0026810;
  v704 = xmmword_1B0025EA0;
  OUTLINED_FUNCTION_11_98(0.291475832, 0.5, v303, v304);
  OUTLINED_FUNCTION_23_70();
  v657 = v305;
  OUTLINED_FUNCTION_3_121();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_29(v306, v307, v308, v309, v310, v311, v312, v313, v314, v694, 100.0, 300.0, v315, 0.8, 0.8, 0.7, &v731, &v729, 0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v727,
    1065353216,
    v380,
    v394,
    v408,
    v422,
    v438,
    v454,
    v470,
    v486,
    v502,
    v518,
    v534,
    v550,
    v566,
    v582,
    v598,
    v711,
    v710,
    v709,
    &v705,
    v707,
    &v705,
    &v703,
    v657,
    v668,
    v680,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_1_124();
  __asm { FMOV            V0.2D, #0.25 }
  v705 = _Q0;
  v706 = xmmword_1B0025EA0;
  OUTLINED_FUNCTION_12_103((__n128)xmmword_1B0026820, (__n128)xmmword_1B0025EA0, v317);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_3_121();
  OUTLINED_FUNCTION_12_8();
  HIDWORD(v359) = v318;
  LODWORD(v359) = 1056964608;
  OUTLINED_FUNCTION_29(v320, v321, &v741, &v739, &v737, &v735, &v733, v322, *(double *)(v319 + 3208), (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v731, &v729, v359,
    1060320051,
    &v727,
    1065353216,
    v381,
    v395,
    v409,
    v423,
    v439,
    v455,
    v471,
    v487,
    v503,
    v519,
    v535,
    v551,
    v567,
    v583,
    v599,
    v711,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    v669,
    v681,
    &v699,
    (uint64_t)&v697);
  OUTLINED_FUNCTION_1_124();
  *(double *)&v323 = OUTLINED_FUNCTION_44_0();
  v705 = v323;
  v706 = xmmword_1B0025EA0;
  OUTLINED_FUNCTION_20_75((__n128)xmmword_1B0026830, (__n128)xmmword_1B0026840, v324);
  v685 = v325;
  OUTLINED_FUNCTION_3_121();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_32_42();
  OUTLINED_FUNCTION_29(v326, v327, v328, v329, v330, v331, v332, v333, v334, v335, v336, v337, v338, v339, v340, v341, &v731, &v729, 0x3F8000003F000000,
    1060320051,
    &v727,
    1065353216,
    v382,
    v396,
    v410,
    v424,
    v440,
    v456,
    v472,
    v488,
    v504,
    v520,
    v536,
    v552,
    v568,
    v584,
    v600,
    v711,
    v710,
    v709,
    v708,
    v707,
    &v705,
    &v703,
    &v701,
    1112014848,
    1097859072,
    v685,
    v691);
  return v0;
}

void sub_1AFE5CDEC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 0;
  sub_1AFD9EE98();
  sub_1AFD9EE98();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E4CCCCD3E051EB8;
  *(_QWORD *)&v11 = 0x4396000041900000;
  LODWORD(v9) = 1091567616;
  DWORD2(v8) = 1128792064;
  *(_QWORD *)&v8 = 0x41F00000413B04ADLL;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42B4000040400000, v5, 0x3E8000003E3851EBLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB12ED63F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E8F5C293E23D70ALL,
    1091994787,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1088421888,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFE5D618()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 6;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0xEF4C202D20737574;
  v28 = 0xD000000000000013;
  v29 = 0x80000001B0051480;
  v30 = 9;
  v21 = 0x617274736F746C41;
  v22 = 0xEF53202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0050E80;
  v25 = 9;
  v26 = 0x617274736F746C41;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE5DDF0();
  sub_1AFE610D4();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3B03126F3F800000;
  *((_QWORD *)&v14 + 1) = 0x417000003F333333;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v36, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x42400000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFE5DDF0()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int64x2_t v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int64x2_t v78;
  __int128 v79;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = xmmword_1B0025E50;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = _Q1;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = _Q1;
  v60 = (int64x2_t)_Q1;
  v61 = xmmword_1B0025E90;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = _Q1;
  v21 = _Q1;
  v18 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0025EB0;
  v17 = xmmword_1B0025EC0;
  v9 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  v10 = _Q1;
  v11 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v19 = xmmword_1B0025EE0;
  v16 = xmmword_1B0025EF0;
  v17 = xmmword_1B0025F00;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B002A7C0;
  v77 = xmmword_1B0025F30;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026900;
  v67 = xmmword_1B0026910;
  v64 = xmmword_1B0025F80;
  v65 = xmmword_1B0027840;
  v62 = (int64x2_t)xmmword_1B002A7E0;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF992720000000uLL);
  v19 = xmmword_1B0025FB0;
  v16 = xmmword_1B0025FC0;
  v17 = xmmword_1B0025FD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025FE0;
  v79 = v9;
  v76 = xmmword_1B0025FF0;
  v77 = xmmword_1B0026000;
  v74 = xmmword_1B002A7F0;
  v75 = xmmword_1B0028210;
  v72 = xmmword_1B003D0B0;
  v73 = xmmword_1B003D0C0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026080;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B00260A0;
  v17 = xmmword_1B0026090;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 1.0, 0.6, 0.45, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A820;
  v79 = xmmword_1B00260D0;
  v76 = xmmword_1B00260E0;
  v77 = xmmword_1B00260F0;
  v74 = xmmword_1B0026100;
  v75 = xmmword_1B0026110;
  v72 = xmmword_1B002A830;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026150;
  v65 = xmmword_1B002A840;
  v62 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026180;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B00261A0;
  v17 = xmmword_1B0026190;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 1.0, 0.9, 0.7, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A850;
  v79 = xmmword_1B00261D0;
  v76 = xmmword_1B002BF40;
  v77 = xmmword_1B002BF50;
  v74 = xmmword_1B0026200;
  v75 = xmmword_1B0026210;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0027040;
  v65 = xmmword_1B002A870;
  v62 = (int64x2_t)xmmword_1B002A880;
  v63 = xmmword_1B002A890;
  v60 = (int64x2_t)xmmword_1B0026260;
  v61 = xmmword_1B0026270;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026280;
  v19 = xmmword_1B0026290;
  v16 = xmmword_1B00262A0;
  v17 = xmmword_1B0026290;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 1.0, 0.89, 0.8, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v8 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF60;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00262E0;
  v75 = xmmword_1B0027420;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A8B0;
  v63 = xmmword_1B002A8C0;
  v60 = (int64x2_t)xmmword_1B0026320;
  v61 = xmmword_1B0027440;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026340;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026350;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 1.0, 0.88, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 1.0, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B002A8D0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BFE0;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)v9;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 1.1967e-26, 0.75, 1.0, 0.85, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v79 = xmmword_1B002A8E0;
  v76 = xmmword_1B002BFF0;
  v77 = xmmword_1B0025FA0;
  v74 = xmmword_1B002A900;
  v75 = xmmword_1B002A910;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A920;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v61 = xmmword_1B00264D0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00264E0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 1.0, 0.9, 0.85, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A940;
  v79 = xmmword_1B0027B30;
  v76 = xmmword_1B002A950;
  v77 = xmmword_1B002A960;
  v74 = xmmword_1B002A970;
  v75 = xmmword_1B002A980;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026560;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B002A990;
  v63 = xmmword_1B002A9A0;
  v60 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v61 = xmmword_1B00265A0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B00265B0;
  v19 = xmmword_1B00265C0;
  v16 = xmmword_1B00265D0;
  v17 = xmmword_1B00265E0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 1.0, 0.875, 0.835, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026600;
  v79 = xmmword_1B0026610;
  v76 = xmmword_1B0027140;
  v77 = xmmword_1B0027150;
  v74 = xmmword_1B0026640;
  v75 = xmmword_1B0026650;
  v72 = v9;
  v73 = xmmword_1B0026130;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026220;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A9C0;
  v63 = xmmword_1B002A9D0;
  v60 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v61 = xmmword_1B0026680;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026690;
  v19 = xmmword_1B00266A0;
  v16 = xmmword_1B00266B0;
  v17 = xmmword_1B00266C0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 1.0, 0.85, 0.82, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00266E0;
  v79 = xmmword_1B00266F0;
  v76 = xmmword_1B0026700;
  v77 = xmmword_1B0026710;
  v74 = xmmword_1B0026720;
  v75 = xmmword_1B0026730;
  v72 = xmmword_1B003D0D0;
  v73 = xmmword_1B003D0E0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v61 = xmmword_1B0026740;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026750;
  v19 = xmmword_1B0026760;
  v16 = xmmword_1B0026770;
  v17 = xmmword_1B0026780;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 1.0, 0.85, 0.88, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    665496235,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B002B1B0;
  v77 = xmmword_1B00267B0;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026900;
  v67 = xmmword_1B0026910;
  v64 = xmmword_1B0027200;
  v65 = xmmword_1B0027840;
  v62 = (int64x2_t)xmmword_1B002AA00;
  v63 = xmmword_1B0027210;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026800;
  v19 = xmmword_1B0027930;
  v16 = xmmword_1B0026810;
  v17 = xmmword_1B0027930;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  __asm { FMOV            V0.2D, #0.25 }
  v18 = _Q0;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026820;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026830;
  v17 = xmmword_1B0026840;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 1.0, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  return v0;
}

uint64_t sub_1AFE610D4()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int64x2_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int64x2_t v63;
  __int128 v64;
  int64x2_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  int64x2_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int64x2_t v81;
  __int128 v82;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = xmmword_1B002A790;
  v76 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v11 = (__int128)_Q0;
  v73 = _Q0;
  v74 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v71 = _Q1;
  v72 = _Q1;
  v69 = _Q1;
  v70 = _Q1;
  v67 = xmmword_1B002A7B0;
  v68 = xmmword_1B0027740;
  v65 = (int64x2_t)xmmword_1B0025E80;
  v66 = _Q1;
  v63 = (int64x2_t)_Q1;
  v64 = xmmword_1B0025E90;
  v61 = _Q1;
  v62 = _Q1;
  v59 = _Q1;
  v60 = _Q1;
  v57 = _Q1;
  v58 = _Q1;
  v55 = _Q1;
  v56 = _Q1;
  v53 = _Q1;
  v54 = _Q1;
  v51 = _Q1;
  v52 = _Q1;
  v49 = _Q1;
  v50 = _Q1;
  v47 = _Q1;
  v48 = _Q1;
  v45 = _Q1;
  v46 = _Q1;
  v43 = _Q1;
  v44 = _Q1;
  v41 = _Q1;
  v42 = _Q1;
  v39 = _Q1;
  v40 = _Q1;
  v37 = _Q1;
  v38 = _Q1;
  v35 = _Q1;
  v36 = _Q1;
  v33 = _Q1;
  v34 = _Q1;
  v31 = _Q1;
  v32 = _Q1;
  v29 = _Q1;
  v30 = _Q1;
  v27 = _Q1;
  v28 = _Q1;
  v25 = _Q1;
  v26 = _Q1;
  v23 = _Q1;
  v24 = _Q1;
  v12 = _Q1;
  v21 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0025EB0;
  v20 = xmmword_1B0025EC0;
  v17 = xmmword_1B0026860;
  v18 = _Q1;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F8000003F000000,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1106247680,
    &v15,
    (uint64_t)&v13);
  v9 = vdupq_n_s64(0x3FD7575760000000uLL);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = xmmword_1B002A790;
  v76 = xmmword_1B002A7A0;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B002A7B0;
  v68 = xmmword_1B0027740;
  v65 = (int64x2_t)xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = xmmword_1B0025EE0;
  v19 = xmmword_1B0025EF0;
  v20 = xmmword_1B0025F00;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B00268C0;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B00268D0;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F8000003F000000,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1106247680,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v78 = v12;
  v75 = xmmword_1B002A790;
  v76 = xmmword_1B002A7D0;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B00271F0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026900;
  v70 = xmmword_1B0026910;
  v67 = xmmword_1B0025F80;
  v68 = xmmword_1B0027840;
  v65 = (int64x2_t)xmmword_1B002A7E0;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = xmmword_1B0025FB0;
  v19 = xmmword_1B0025FC0;
  v20 = xmmword_1B0025FD0;
  v17 = xmmword_1B0026920;
  v18 = v12;
  v15 = xmmword_1B0027950;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B0026950;
  v14 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1106247680,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025FE0;
  v82 = v12;
  v79 = xmmword_1B0025FF0;
  v80 = xmmword_1B0026000;
  v77 = xmmword_1B0026010;
  v78 = xmmword_1B0026020;
  v75 = xmmword_1B002A800;
  v76 = xmmword_1B002A810;
  v73 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v74 = xmmword_1B0026EA0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B00277B0;
  v65 = (int64x2_t)xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026080;
  v22 = xmmword_1B0026090;
  v19 = xmmword_1B00260A0;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0027960;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B0026980;
  v14 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v67, &v65,
    0x3F59999A3F59999ALL,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1106247680,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00260C0;
  v82 = xmmword_1B00260D0;
  v79 = xmmword_1B00260E0;
  v80 = xmmword_1B00260F0;
  v77 = xmmword_1B0026100;
  v78 = xmmword_1B0026110;
  v75 = xmmword_1B002A830;
  v76 = xmmword_1B0025E50;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026150;
  v68 = xmmword_1B002A840;
  v65 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026180;
  v22 = xmmword_1B0026190;
  v19 = xmmword_1B00261A0;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0027970;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B00269D0;
  v14 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00261C0;
  v82 = xmmword_1B00261D0;
  v79 = xmmword_1B00261E0;
  v80 = xmmword_1B00261F0;
  v77 = xmmword_1B0026200;
  v78 = xmmword_1B0026210;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0027040;
  v68 = xmmword_1B002A870;
  v65 = (int64x2_t)xmmword_1B002A880;
  v66 = xmmword_1B002A890;
  v63 = (int64x2_t)xmmword_1B0026260;
  v64 = xmmword_1B0026270;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026280;
  v22 = xmmword_1B0026290;
  v19 = xmmword_1B00262A0;
  v20 = xmmword_1B0026290;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0027980;
  v16 = xmmword_1B00267B0;
  v13 = xmmword_1B0026A10;
  v14 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v10 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00262D0;
  v80 = xmmword_1B0025F70;
  v77 = xmmword_1B00262E0;
  v78 = xmmword_1B00262F0;
  v75 = v12;
  v76 = xmmword_1B0026120;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B00277B0;
  v65 = (int64x2_t)xmmword_1B002A8B0;
  v66 = xmmword_1B002A8C0;
  v63 = (int64x2_t)xmmword_1B0026320;
  v64 = xmmword_1B0027440;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026340;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B0026350;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0026A30;
  v16 = xmmword_1B0026A40;
  v13 = xmmword_1B0026A50;
  v14 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026370;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0027FF0;
  v65 = (int64x2_t)xmmword_1B0026220;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B002BF80;
  v22 = xmmword_1B002BF90;
  v19 = xmmword_1B002BF80;
  v20 = xmmword_1B002BFA0;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0026A70;
  v16 = xmmword_1B0026A80;
  v13 = xmmword_1B0026A90;
  v14 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B00277B0;
  v65 = (int64x2_t)xmmword_1B0026220;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B002BFB0;
  v22 = xmmword_1B002BFC0;
  v19 = xmmword_1B002BFB0;
  v20 = xmmword_1B002BFD0;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AC0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B002A8D0;
  v65 = (int64x2_t)xmmword_1B0026220;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B002BFB0;
  v22 = xmmword_1B002BFC0;
  v19 = xmmword_1B002BFB0;
  v20 = xmmword_1B002BFD0;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AE0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026440;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0027FF0;
  v65 = (int64x2_t)v12;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B002BF80;
  v22 = xmmword_1B002BF90;
  v19 = xmmword_1B002BF80;
  v20 = xmmword_1B002BFA0;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AF0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v82 = xmmword_1B0026470;
  v79 = xmmword_1B0026480;
  v80 = xmmword_1B0026490;
  v77 = xmmword_1B00264A0;
  v78 = xmmword_1B00264B0;
  v75 = v12;
  v76 = xmmword_1B0026120;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B00277B0;
  v65 = (int64x2_t)xmmword_1B002A920;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v64 = xmmword_1B00264D0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B00264E0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0027990;
  v16 = xmmword_1B0026C70;
  v13 = xmmword_1B0026B20;
  v14 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026500;
  v82 = xmmword_1B0026510;
  v79 = xmmword_1B0026520;
  v80 = xmmword_1B0026530;
  v77 = xmmword_1B0026540;
  v78 = xmmword_1B0026550;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026560;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0027FF0;
  v65 = (int64x2_t)xmmword_1B002A990;
  v66 = xmmword_1B002A9A0;
  v63 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v64 = xmmword_1B00265A0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B00265B0;
  v22 = xmmword_1B00265C0;
  v19 = xmmword_1B00265D0;
  v20 = xmmword_1B00265E0;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00279A0;
  v16 = xmmword_1B0026C20;
  v13 = xmmword_1B0026B60;
  v14 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026600;
  v82 = xmmword_1B0026610;
  v79 = xmmword_1B0026620;
  v80 = xmmword_1B0026630;
  v77 = xmmword_1B0026640;
  v78 = xmmword_1B0026650;
  v75 = v12;
  v76 = xmmword_1B0026130;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026220;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B00277B0;
  v65 = (int64x2_t)xmmword_1B002A9C0;
  v66 = xmmword_1B002A9D0;
  v63 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v64 = xmmword_1B0026680;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026690;
  v22 = xmmword_1B00266A0;
  v19 = xmmword_1B00266B0;
  v20 = xmmword_1B00266C0;
  v17 = xmmword_1B0026B80;
  v18 = xmmword_1B0026B90;
  v15 = xmmword_1B00279B0;
  v16 = xmmword_1B00279C0;
  v13 = xmmword_1B0026BC0;
  v14 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026BD0;
  v82 = v12;
  v79 = xmmword_1B0026700;
  v80 = xmmword_1B0026710;
  v77 = xmmword_1B0026720;
  v78 = xmmword_1B0026730;
  v75 = xmmword_1B002A830;
  v76 = xmmword_1B0025E50;
  v73 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v74 = xmmword_1B00271B0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0027FF0;
  v65 = (int64x2_t)xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v64 = xmmword_1B0026740;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026750;
  v22 = xmmword_1B0026760;
  v19 = xmmword_1B0026770;
  v20 = xmmword_1B0026780;
  v17 = xmmword_1B0026BE0;
  v18 = xmmword_1B0026BF0;
  v15 = xmmword_1B00279D0;
  v16 = xmmword_1B00279E0;
  v13 = xmmword_1B0026C10;
  v14 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.88, &v67, &v65,
    0x3F59999A3F59999ALL,
    0,
    &v63,
    665496235,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v78 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v75 = xmmword_1B002A9F0;
  v76 = xmmword_1B002A7D0;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B00271F0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B00267D0;
  v70 = xmmword_1B00267E0;
  v67 = xmmword_1B00267F0;
  v68 = xmmword_1B00278C0;
  v65 = (int64x2_t)xmmword_1B002AA00;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026800;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026810;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026C30;
  v18 = v12;
  v15 = xmmword_1B00279F0;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B0026C60;
  v14 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1106247680,
    &v15,
    (uint64_t)&v13);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = xmmword_1B002A9F0;
  v76 = xmmword_1B002A7A0;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B002AA10;
  v68 = xmmword_1B0027740;
  v65 = (int64x2_t)xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  __asm { FMOV            V0.2D, #0.25 }
  v21 = _Q0;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026820;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026C80;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026C90;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F8000003F000000,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1106247680,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = xmmword_1B002A9F0;
  v76 = xmmword_1B002A7A0;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B002AA10;
  v68 = xmmword_1B0027740;
  v65 = (int64x2_t)xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026830;
  v20 = xmmword_1B0026840;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v67, &v65,
    0x3F8000003F000000,
    1045220557,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1106247680,
    &v15,
    (uint64_t)&v13);
  return v0;
}

_QWORD *sub_1AFE64710(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    v15 = v8[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v20 = v8[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = v8[10];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1AFE64924(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v4 = a1 + v3[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + v3[7];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v3[9];
  v9 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + v3[10];
  v11 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_1AFE64A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v13 = v7[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v18 = v7[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = v7[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE64C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v16 = v7[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_13:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE64E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v13 = v7[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v18 = v7[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = v7[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE6507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for WindComplicationHourlyViewModel();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0FB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  v16 = v7[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (!v20)
  {
    v22 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 40))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
LABEL_13:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v24 = v7[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = v7[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AFE652F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE65300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = OUTLINED_FUNCTION_4_11();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1AFE65384()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE65390(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_4_11();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for WindHourlyContentView()
{
  uint64_t result;

  result = qword_1EEE75580;
  if (!qword_1EEE75580)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE65438()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WindComplicationHourlyViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFE654A8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFE654B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t (*v20)();

  type metadata accessor for WindHourlyTextContentView();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_9();
  v4 = v3 - v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE755B8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9();
  v12 = v11 - v10;
  type metadata accessor for WindHourlyGlyphContentView();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_9();
  v16 = v15 - v14;
  if (qword_1EEE6FFA8 != -1)
    swift_once();
  v17 = byte_1EEE92010;
  sub_1AFAE2DFC(v0, v12, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
  v18 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for WindHourlyContentView() + 20));
  if (v17 == 1)
  {
    sub_1AFE1BB70(v12, v18, v16);
    sub_1AFAE2DFC(v16, v8, (uint64_t (*)(_QWORD))type metadata accessor for WindHourlyGlyphContentView);
    swift_storeEnumTagMultiPayload();
    sub_1AFAF86C8(&qword_1EEE755C0, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyGlyphContentView, (uint64_t)&unk_1B003B668);
    sub_1AFAF86C8(&qword_1EEE755C8, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyTextContentView, (uint64_t)&unk_1B0046D68);
    OUTLINED_FUNCTION_0_141();
    v19 = v16;
    v20 = type metadata accessor for WindHourlyGlyphContentView;
  }
  else
  {
    sub_1AFF7B8C8(v12, v18, v4);
    sub_1AFAE2DFC(v4, v8, (uint64_t (*)(_QWORD))type metadata accessor for WindHourlyTextContentView);
    swift_storeEnumTagMultiPayload();
    sub_1AFAF86C8(&qword_1EEE755C0, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyGlyphContentView, (uint64_t)&unk_1B003B668);
    sub_1AFAF86C8(&qword_1EEE755C8, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyTextContentView, (uint64_t)&unk_1B0046D68);
    OUTLINED_FUNCTION_0_141();
    v19 = v4;
    v20 = type metadata accessor for WindHourlyTextContentView;
  }
  sub_1AFB489D0(v19, (uint64_t (*)(_QWORD))v20);
}

uint64_t sub_1AFE656EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = sub_1B0007FCC();
  v1 = sub_1B0007FF0();
  v2 = sub_1B0007FF0();
  sub_1B0007FF0();
  v3 = sub_1B0008014();
  result = swift_release();
  qword_1EEE922C0 = v0;
  *(_QWORD *)algn_1EEE922C8 = v1;
  qword_1EEE922D0 = v2;
  unk_1EEE922D8 = v3;
  return result;
}

unint64_t sub_1AFE65764()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE755D0;
  if (!qword_1EEE755D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE755D8);
    sub_1AFAF86C8(&qword_1EEE755C0, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyGlyphContentView, (uint64_t)&unk_1B003B668);
    v3 = v2;
    sub_1AFAF86C8(&qword_1EEE755C8, (uint64_t (*)(uint64_t))type metadata accessor for WindHourlyTextContentView, (uint64_t)&unk_1B0046D68);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE755D0);
  }
  return result;
}

uint64_t destroy for WindHourlyContentView.Style()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for WindHourlyContentView.Style(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for WindHourlyContentView.Style(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WindHourlyContentView.Style(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WindHourlyContentView.Style()
{
  return &type metadata for WindHourlyContentView.Style;
}

ValueMetadata *type metadata accessor for WindHourlyContentView.Layout()
{
  return &type metadata for WindHourlyContentView.Layout;
}

void sub_1AFE6598C(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E607A4C0;
}

void sub_1AFE659A4()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[9];

  v18[0] = 0;
  sub_1AFE661D4();
  sub_1AFE69504();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFE661D4()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B002D210;
  v81 = xmmword_1B0026850;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = _Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v11 = _Q1;
  v16 = _Q1;
  v17 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v21 = xmmword_1B0025EE0;
  v18 = xmmword_1B0025EF0;
  v19 = xmmword_1B0025F00;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B0025F50;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B0026030;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)xmmword_1B0026060;
  v63 = xmmword_1B0026070;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B002D220;
  v77 = xmmword_1B002D230;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B0026160;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026240;
  v65 = xmmword_1B0026250;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002D240;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B002D250;
  v77 = xmmword_1B0027420;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026300;
  v65 = xmmword_1B0026310;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0026330;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v79 = xmmword_1B0025F70;
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v79 = xmmword_1B0025F70;
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF70;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B003BF10;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B00264C0;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = xmmword_1B0026570;
  v67 = xmmword_1B0026580;
  v64 = xmmword_1B0026590;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = xmmword_1B0026660;
  v67 = xmmword_1B0026670;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00266E0;
  v81 = xmmword_1B00266F0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B0026060;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.8, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026790;
  v81 = v11;
  v78 = xmmword_1B00267A0;
  v79 = xmmword_1B00267B0;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B00267C0;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0027940;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  __asm { FMOV            V0.2D, #0.25 }
  v20 = _Q0;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026820;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026830;
  v19 = xmmword_1B0026840;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 50.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFE69504()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  int64x2_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int64x2_t v82;
  __int128 v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v10 = vdupq_n_s64(0x3FD7575760000000uLL);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v12 = (__int128)_Q0;
  v74 = _Q0;
  v75 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v72 = _Q1;
  v73 = _Q1;
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = _Q1;
  v64 = (int64x2_t)_Q1;
  v65 = xmmword_1B0025E90;
  v62 = _Q1;
  v63 = _Q1;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v13 = _Q1;
  v9 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = _Q1;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 32, -90.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B00268C0;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B00268D0;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 1248, -60.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v80 = xmmword_1B0034B10;
  v81 = xmmword_1B0034B20;
  v78 = xmmword_1B0025F40;
  v79 = v13;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B00271F0;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026920;
  v19 = v13;
  v16 = xmmword_1B0027950;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026950;
  v15 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 2464, -12.0, (__n128)xmmword_1B002D260, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025FE0;
  v83 = v13;
  v80 = xmmword_1B0025FF0;
  v81 = xmmword_1B0026000;
  v78 = xmmword_1B0026010;
  v79 = xmmword_1B0026020;
  v76 = xmmword_1B0026030;
  v77 = xmmword_1B0026040;
  v74 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v75 = xmmword_1B0026EA0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)xmmword_1B0026060;
  v65 = xmmword_1B0026070;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026080;
  v23 = xmmword_1B0026090;
  v20 = xmmword_1B00260A0;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027960;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1106247680,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00260C0;
  v83 = xmmword_1B00260D0;
  v80 = xmmword_1B00260E0;
  v81 = xmmword_1B00260F0;
  v78 = xmmword_1B0026100;
  v79 = xmmword_1B0026110;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026150;
  v69 = xmmword_1B0026160;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026180;
  v23 = xmmword_1B0026190;
  v20 = xmmword_1B00261A0;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027970;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B00269D0;
  v15 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00261C0;
  v83 = xmmword_1B00261D0;
  v80 = xmmword_1B00261E0;
  v81 = xmmword_1B00261F0;
  v78 = xmmword_1B0026200;
  v79 = xmmword_1B0026210;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026240;
  v67 = xmmword_1B0026250;
  v64 = (int64x2_t)xmmword_1B0026260;
  v65 = xmmword_1B0026270;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026280;
  v23 = xmmword_1B0026290;
  v20 = xmmword_1B00262A0;
  v21 = xmmword_1B0026290;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027980;
  v17 = xmmword_1B00267B0;
  v14 = xmmword_1B0026A10;
  v15 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v11 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00262D0;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00262E0;
  v79 = xmmword_1B00262F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026300;
  v67 = xmmword_1B0026310;
  v64 = (int64x2_t)xmmword_1B0026320;
  v65 = xmmword_1B0026330;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026340;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026350;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A30;
  v17 = xmmword_1B0026A40;
  v14 = xmmword_1B0026A50;
  v15 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A70;
  v17 = xmmword_1B0026A80;
  v14 = xmmword_1B0026A90;
  v15 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AC0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0039190;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AE0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B003BF10;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = v13;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AF0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v83 = xmmword_1B0026470;
  v80 = xmmword_1B0026480;
  v81 = xmmword_1B0026490;
  v78 = xmmword_1B00264A0;
  v79 = xmmword_1B00264B0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B00264C0;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v65 = xmmword_1B00264D0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00264E0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027990;
  v17 = xmmword_1B0026C70;
  v14 = xmmword_1B0026B20;
  v15 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026500;
  v83 = xmmword_1B0026510;
  v80 = xmmword_1B0026520;
  v81 = xmmword_1B0026530;
  v78 = xmmword_1B0026540;
  v79 = xmmword_1B0026550;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026560;
  v71 = v13;
  v68 = xmmword_1B0026570;
  v69 = xmmword_1B0026580;
  v66 = xmmword_1B0026590;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v65 = xmmword_1B00265A0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B00265B0;
  v23 = xmmword_1B00265C0;
  v20 = xmmword_1B00265D0;
  v21 = xmmword_1B00265E0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B00279A0;
  v17 = xmmword_1B0026C20;
  v14 = xmmword_1B0026B60;
  v15 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026600;
  v83 = xmmword_1B0026610;
  v80 = xmmword_1B0026620;
  v81 = xmmword_1B0026630;
  v78 = xmmword_1B0026640;
  v79 = xmmword_1B0026650;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026220;
  v71 = v13;
  v68 = xmmword_1B0026660;
  v69 = xmmword_1B0026670;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v65 = xmmword_1B0026680;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026690;
  v23 = xmmword_1B00266A0;
  v20 = xmmword_1B00266B0;
  v21 = xmmword_1B00266C0;
  v18 = xmmword_1B0026B80;
  v19 = xmmword_1B0026B90;
  v16 = xmmword_1B00279B0;
  v17 = xmmword_1B00279C0;
  v14 = xmmword_1B0026BC0;
  v15 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026BD0;
  v83 = v13;
  v80 = xmmword_1B0026700;
  v81 = xmmword_1B0026710;
  v78 = xmmword_1B0026720;
  v79 = xmmword_1B0026730;
  v76 = xmmword_1B0026060;
  v77 = xmmword_1B0026040;
  v74 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v75 = xmmword_1B00271B0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v65 = xmmword_1B0026740;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026750;
  v23 = xmmword_1B0026760;
  v20 = xmmword_1B0026770;
  v21 = xmmword_1B0026780;
  v18 = xmmword_1B0026BE0;
  v19 = xmmword_1B0026BF0;
  v16 = xmmword_1B00279D0;
  v17 = xmmword_1B00279E0;
  v14 = xmmword_1B0026C10;
  v15 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    665496235,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v79 = v13;
  v80 = xmmword_1B0034B10;
  v81 = xmmword_1B0034B20;
  v78 = xmmword_1B0025F40;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B00271F0;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026C30;
  v19 = v13;
  v16 = xmmword_1B00279F0;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026C60;
  v15 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 18272, -12.0, (__n128)xmmword_1B002D260, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026C80;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026C90;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 19488, -60.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 20704, -90.0, (__n128)xmmword_1B002D260, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  return v0;
}

uint64_t sub_1AFE6CAAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 8);
  j__swift_retain(v1, v2);
  sub_1AFACD4BC();
  v4 = v3;
  j__swift_release(v1, v2);
  return v4;
}

uint64_t sub_1AFE6CB00()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  sub_1AFACF5C4(v1, v2);
  sub_1AFB4A850();
  v4 = v3;
  sub_1AFACCD50(v1, v2);
  return v4 & 1;
}

uint64_t sub_1AFE6CB54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 40);
  sub_1AFACF5C4(v1, v2);
  sub_1AFB4A850();
  v4 = v3;
  sub_1AFACCD50(v1, v2);
  return v4 & 1;
}

uint64_t sub_1AFE6CBA8()
{
  type metadata accessor for ForegroundEffectRenderer();
  sub_1AFAF8704(&qword_1EEE75678, (uint64_t (*)(uint64_t))type metadata accessor for ForegroundEffectRenderer, (uint64_t)&unk_1B0048398);
  return sub_1B00072A0();
}

void sub_1AFE6CC0C()
{
  type metadata accessor for ForegroundEffectRenderer();
  swift_allocObject();
  sub_1AFFA4754();
}

uint64_t ForegroundEffectView.init(fallbackContent:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;

  *(_QWORD *)a4 = swift_getKeyPath();
  *(_BYTE *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = swift_getKeyPath();
  *(_BYTE *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = swift_getKeyPath();
  *(_BYTE *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = sub_1AFE6CC0C;
  *(_QWORD *)(a4 + 56) = 0;
  *(_BYTE *)(a4 + 64) = 0;
  type metadata accessor for ForegroundEffectView(0, a2, a3, v8);
  return a1();
}

void ForegroundEffectView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[15];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD v45[2];

  v34 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](a1);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = v5;
  v42 = *(_QWORD *)(v5 + 24);
  type metadata accessor for ForegroundEffectView._MetalLayer(255, v6, v42, v8);
  v30[3] = OUTLINED_FUNCTION_8_111();
  v41 = v6;
  v9 = sub_1B0007924();
  v45[0] = MEMORY[0x1E0CDF5B0];
  v45[1] = v42;
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v9, v45);
  v30[4] = sub_1B0007900();
  v30[5] = sub_1B00074F8();
  v30[6] = *(_QWORD *)(sub_1B0007924() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  v13 = sub_1B00074F8();
  v14 = *(_QWORD *)(v13 - 8);
  v30[7] = v13;
  v30[8] = v14;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v15);
  v44 = (char *)v30 - v16;
  v17 = OUTLINED_FUNCTION_4_122();
  v30[12] = *(_QWORD *)(v17 - 8);
  v30[9] = v17;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v18);
  v43 = (char *)v30 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE755E0);
  v20 = sub_1B00074F8();
  v32 = *(_QWORD *)(v20 - 8);
  v30[13] = v20;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x1E0C80A78](v21);
  v30[10] = (char *)v30 - v22;
  v31 = OUTLINED_FUNCTION_4_122();
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30[11] = (char *)v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v30[14] = (char *)v30 - v25;
  v39 = v2;
  sub_1AFE6D3F4(v7, (uint64_t)v12);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v38((char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v7);
  v26 = *(unsigned __int8 *)(v3 + 80);
  v27 = (v26 + 32) & ~v26;
  v36 = v27;
  v37 = v26 | 7;
  v40 = v27 + v4;
  v28 = swift_allocObject();
  v29 = v42;
  *(_QWORD *)(v28 + 16) = v41;
  *(_QWORD *)(v28 + 24) = v29;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v35(v28 + v27, (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  OUTLINED_FUNCTION_2_96();
}

void sub_1AFE6D008()
{
  OUTLINED_FUNCTION_2_96();
}

void sub_1AFE6D01C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = a1;
  OUTLINED_FUNCTION_2_96();
}

void sub_1AFE6D034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  OUTLINED_FUNCTION_13_104();
}

void sub_1AFE6D04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  sub_1B0007F54();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 384) + 8))(v5, v4);
  *(_QWORD *)(v7 - 424) = v6;
  v9 = *(_QWORD *)(v7 - 248);
  v10 = v2;
  *(_QWORD *)(v7 - 416) = v2;
  v11 = v2;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 256);
  v12(v6, v9, v11);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v3;
  *(_QWORD *)(v13 + 24) = v1;
  v14 = *(_QWORD *)(v7 - 272);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 280);
  v15(v13 + v14, v6, v10);
  v16 = MEMORY[0x1E0CDC8B0];
  *(_QWORD *)(v7 - 152) = a1;
  *(_QWORD *)(v7 - 144) = v16;
  v17 = *(_QWORD *)(v7 - 376);
  v18 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v17, v7 - 152);
  v19 = *(_QWORD *)(v7 - 208);
  sub_1B0007E34();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 368) + 8))(v19, v17);
  v20 = *(_QWORD *)(v7 - 424);
  v21 = *(_QWORD *)(v7 - 416);
  v12(v20, v9, v21);
  v22 = swift_allocObject();
  v23 = *(_QWORD *)(v7 - 232);
  v24 = *(_QWORD *)(v7 - 224);
  *(_QWORD *)(v22 + 16) = v23;
  *(_QWORD *)(v22 + 24) = v24;
  v25 = v22 + v14;
  v26 = v20;
  v27 = v21;
  v15(v25, v20, v21);
  type metadata accessor for CGRect(0);
  *(_QWORD *)(v7 - 368) = v28;
  *(_QWORD *)(v7 - 168) = v18;
  *(_QWORD *)(v7 - 160) = MEMORY[0x1E0CDC8B0];
  v29 = *(_QWORD *)(v7 - 360);
  v30 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v29, v7 - 168);
  *(_QWORD *)(v7 - 208) = sub_1AFAF8704(&qword_1EEE755E8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9D0]);
  v31 = *(_QWORD *)(v7 - 216);
  sub_1B0007E94();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 336) + 8))(v31, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 - 256))(v26, *(_QWORD *)(v7 - 248), v27);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v23;
  *(_QWORD *)(v32 + 24) = v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 280))(v32 + *(_QWORD *)(v7 - 272), v26, v27);
  v33 = sub_1AFE6E348();
  *(_QWORD *)(v7 - 184) = v30;
  *(_QWORD *)(v7 - 176) = v33;
  OUTLINED_FUNCTION_13_104();
}

uint64_t sub_1AFE6D2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v7 = *(_QWORD *)(v5 - 344);
  sub_1B0007E94();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 304) + 8))(v4, v2);
  *(_QWORD *)(v5 - 200) = a1;
  *(_QWORD *)(v5 - 192) = v1;
  v8 = *(_QWORD *)(v5 - 312);
  MEMORY[0x1B5E03BF4](v3, v8, v5 - 200);
  v9 = *(_QWORD *)(v5 - 320);
  sub_1AFC5FAC8(v7, v8, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 8);
  v10(v7, v8);
  sub_1AFC5DB5C(v9, v8, *(_QWORD *)(v5 - 288));
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v8);
}

uint64_t sub_1AFE6D3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v51[4];
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[3];

  v64 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v56 = (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v51 - v7;
  v52 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v52 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = *(_QWORD *)(v11 + 24);
  v51[2] = type metadata accessor for ForegroundEffectView._MetalLayer(255, v4, v12, v13);
  v14 = sub_1B0007354();
  v55 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v53 = (char *)v51 - v15;
  v16 = sub_1B0007924();
  v69[0] = MEMORY[0x1E0CDF5B0];
  v69[1] = v12;
  v58 = v12;
  v17 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v16, v69);
  v51[3] = v16;
  v51[1] = v17;
  v18 = sub_1B0007900();
  v63 = v14;
  v61 = v18;
  v19 = sub_1B00074F8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v54 = (uint64_t)v51 - v24;
  v62 = sub_1B0007924();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v59 = (char *)v51 - v25;
  v26 = v2;
  if ((sub_1AFE6CB00() & 1) != 0)
  {
    v27 = v52;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    v57 = v20;
    v29 = v26;
    v28((char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26, a1);
    v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v31 = swift_allocObject();
    v32 = v58;
    *(_QWORD *)(v31 + 16) = v4;
    *(_QWORD *)(v31 + 24) = v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
    v33 = v53;
    v34 = sub_1B0007348();
    v35 = MEMORY[0x1E0C80A78](v34);
    v51[-4] = v4;
    v51[-3] = v32;
    v51[-2] = v29;
    v36 = v63;
    v37 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8D48], v63, v35);
    sub_1B00082E4();
    sub_1B0007E04();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v36);
    v38 = v61;
    v39 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB838], v61);
    v65[0] = v37;
    v65[1] = v39;
    MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v19, v65);
    v40 = v54;
    sub_1AFC5FAC8((uint64_t)v22, v19, v54);
    v41 = *(void (**)(char *, uint64_t))(v57 + 8);
    v41(v22, v19);
    sub_1AFC5DB5C(v40, v19, (uint64_t)v22);
    v42 = (uint64_t)v59;
    sub_1AFC5DB74();
    v41(v22, v19);
    v41((char *)v40, v19);
  }
  else
  {
    v32 = v58;
    sub_1AFC5FAC8(v2 + *(int *)(a1 + 48), v4, (uint64_t)v8);
    v43 = v56;
    sub_1AFC5DB5C((uint64_t)v8, v4, v56);
    v36 = v63;
    v44 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8D48], v63);
    v38 = v61;
    v45 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB838], v61);
    v68[0] = v44;
    v68[1] = v45;
    MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v19, v68);
    v42 = (uint64_t)v59;
    sub_1AFC5DBEC();
    v46 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v46(v43, v4);
    v46((uint64_t)v8, v4);
  }
  v47 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8D48], v36);
  v48 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB838], v38);
  v67[0] = v47;
  v67[1] = v48;
  v66[0] = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v19, v67);
  v66[1] = v32;
  v49 = v62;
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v62, v66);
  sub_1AFC5DB5C(v42, v49, v64);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v42, v49);
}

void sub_1AFE6D93C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  type metadata accessor for ForegroundEffectView(0, a2, a3, (uint64_t)a4);
  if (sub_1AFE6CAAC())
  {
    sub_1AFE6CBA8();
    a4();
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t sub_1AFE6D9A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AFE6DA40(0xD000000000000010, 0x80000001B0064320, a1);
}

uint64_t sub_1AFE6D9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ForegroundEffectView(0, a3, a4, a4);
  sub_1AFE6CBA8();
  sub_1AFFA3604();
  return swift_release();
}

uint64_t sub_1AFE6DA24@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AFE6DA40(0xD000000000000028, 0x80000001B00642F0, a1);
}

uint64_t sub_1AFE6DA40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v6 = sub_1B000793C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a1;
  v19[1] = a2;
  sub_1B0007984();
  sub_1B0007384();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v11;
  a3[1] = v13;
  a3[2] = v15;
  a3[3] = v17;
  return result;
}

uint64_t sub_1AFE6DB30(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t result;
  uint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  type metadata accessor for ForegroundEffectView(0, a3, a4, a4);
  result = sub_1AFE6CB54();
  if ((result & 1) != 0)
  {
    result = sub_1AFE6CAAC();
    if (result)
    {
      v9 = sub_1AFE6CBA8();
      sub_1AFBC4D74(v9, v4, v5, v6, v7);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1AFE6DBE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEEDD8] & *a1;
  objc_msgSend(a1, sel_setAllowsDisplayCompositing_, 0);
  objc_msgSend(a1, sel_setPixelFormat_, 80);
  type metadata accessor for ForegroundEffectView(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v3);
  sub_1AFE6CBA8();
  sub_1AFFA3648(a1);
  return swift_release();
}

uint64_t sub_1AFE6DC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v23 = a4;
  v21 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v12 = sub_1B0007924();
  v22 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - v13;
  v16 = type metadata accessor for ForegroundEffectView(0, a2, a3, v15);
  sub_1AFE6CBA8();
  v17 = sub_1AFFA3684();
  swift_release();
  v18 = MEMORY[0x1E0CDF5B0];
  if ((v17 & 1) != 0)
  {
    v24 = sub_1B0007FE4();
    sub_1AFC5DB74();
    swift_release();
  }
  else
  {
    sub_1AFC5FAC8(a1 + *(int *)(v16 + 48), a2, (uint64_t)v11);
    sub_1AFC5DB5C((uint64_t)v11, a2, (uint64_t)v8);
    sub_1AFC5DBEC();
    v19 = *(void (**)(char *, uint64_t))(v21 + 8);
    v19(v8, a2);
    v19(v11, a2);
  }
  v25[0] = v18;
  v25[1] = a3;
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v12, v25);
  sub_1AFC5DB5C((uint64_t)v14, v12, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v12);
}

double sub_1AFE6DE68(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  sub_1AFE6DEC0();
  v3 = v2;

  return v3;
}

id sub_1AFE6DEC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_bounds);
}

void sub_1AFE6DEF4(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;

  v9 = a1;
  sub_1AFE6DF58(a2, a3, a4, a5);

}

void sub_1AFE6DF58(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v9;

  v9.receiver = v4;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_setBounds_, a1, a2, a3, a4);
  sub_1AFE6DFC0();
}

void sub_1AFE6DFC0()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  sub_1AFE6DEC0();
  v2 = v1;
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v5, sel_nativeScale);
  v7 = v6;

  v8 = v2 * v7;
  if (v8 > 0.0)
  {
    v9 = v4 * v7;
    if (v9 > 0.0)
    {
      sub_1AFE6DEC0();
      if (v8 != v11 || v9 != v10)
        objc_msgSend(v0, sel_setDrawableSize_, v8, v9);
    }
  }
}

id sub_1AFE6E07C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1AFE6E0B0()
{
  return sub_1AFE6E07C();
}

id sub_1AFE6E0D0(_QWORD *a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1B0008F98();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithLayer_, v4);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

id sub_1AFE6E154()
{
  _QWORD v1[4];

  swift_unknownObjectRetain();
  sub_1B0008C44();
  swift_unknownObjectRelease();
  return sub_1AFE6E0D0(v1);
}

id sub_1AFE6E1A0(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1AFE6E1F0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1AFE6E1A0(a3);
}

void sub_1AFE6E220()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_12_104();
  OUTLINED_FUNCTION_10_105(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1AFE6E23C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_7_108(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1AFE6E254()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_99();
  OUTLINED_FUNCTION_10_105(v0);
  OUTLINED_FUNCTION_0();
}

void sub_1AFE6E270(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_6_112(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ForegroundEffectView._MetalLayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ForegroundEffectView._MetalLayer);
}

void sub_1AFE6E298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE6E2B4((uint64_t)sub_1AFBC5240, a2, a3, a4);
}

void sub_1AFE6E2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFE6E2B4((uint64_t)sub_1AFBC529C, a2, a3, a4);
}

void sub_1AFE6E2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_1_125(a1, a2, a3, a4);
  sub_1AFE6D93C(v5 + v8, v6, v7, v4);
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFE6E2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE6E304(a1, sub_1AFE6D9C0, a3, a4);
}

uint64_t sub_1AFE6E2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AFE6E304(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFE6DB30, a3, a4);
}

uint64_t sub_1AFE6E304(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_1_125(a1, (uint64_t)a2, a3, a4);
  return a2(v4, v5 + v8, v6, v7);
}

unint64_t sub_1AFE6E348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE755F0[0];
  if (!qword_1EEE755F0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE755E0);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDC4E8], v1);
    atomic_store(result, qword_1EEE755F0);
  }
  return result;
}

uint64_t sub_1AFE6E38C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE6E3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 65) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v11 = *(_QWORD *)a2;
    v12 = *(_BYTE *)(a2 + 8);
    j__swift_retain(*(_QWORD *)a2, v12);
    *(_QWORD *)a1 = v11;
    *(_BYTE *)(a1 + 8) = v12;
    v13 = a1 & 0xFFFFFFFFFFFFFFF8;
    v14 = a2 & 0xFFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    LOBYTE(v11) = *(_BYTE *)(v14 + 24);
    sub_1AFACF5C4(v15, v11);
    *(_QWORD *)(v13 + 16) = v15;
    *(_BYTE *)(v13 + 24) = v11;
    v16 = *(_QWORD *)(v14 + 32);
    LOBYTE(v11) = *(_BYTE *)(v14 + 40);
    sub_1AFACF5C4(v16, v11);
    *(_QWORD *)(v13 + 32) = v16;
    *(_BYTE *)(v13 + 40) = v11;
    v17 = *(_QWORD *)(v14 + 48);
    v18 = *(_QWORD *)(v14 + 56);
    v19 = *(_BYTE *)(v14 + 64);
    sub_1AFB4A7E0();
    *(_QWORD *)(v13 + 48) = v17;
    *(_QWORD *)(v13 + 56) = v18;
    *(_BYTE *)(v13 + 64) = v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 65) & ~v7, (v14 + v7 + 65) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_1AFE6E500(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1;
  j__swift_release(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  v3 &= 0xFFFFFFFFFFFFFFF8;
  sub_1AFACCD50(*(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  sub_1AFACCD50(*(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
  sub_1AFB4A7E8();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1AFE6E570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  j__swift_retain(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a1 & 0xFFFFFFFFFFFFFFF8;
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  LOBYTE(v6) = *(_BYTE *)(v9 + 24);
  sub_1AFACF5C4(v10, v6);
  *(_QWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 24) = v6;
  v11 = *(_QWORD *)(v9 + 32);
  LOBYTE(v6) = *(_BYTE *)(v9 + 40);
  sub_1AFACF5C4(v11, v6);
  *(_QWORD *)(v8 + 32) = v11;
  *(_BYTE *)(v8 + 40) = v6;
  v12 = *(_QWORD *)(v9 + 48);
  v13 = *(_QWORD *)(v9 + 56);
  v14 = *(_BYTE *)(v9 + 64);
  sub_1AFB4A7E0();
  *(_QWORD *)(v8 + 48) = v12;
  *(_QWORD *)(v8 + 56) = v13;
  *(_BYTE *)(v8 + 64) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 16))((*(unsigned __int8 *)(v15 + 80) + 65 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (*(unsigned __int8 *)(v15 + 80) + 65 + v9) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

uint64_t sub_1AFE6E654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  j__swift_retain(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  j__swift_release(v8, v9);
  v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  LOBYTE(v6) = *(_BYTE *)(v11 + 24);
  sub_1AFACF5C4(v12, v6);
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  v14 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v10 + 16) = v12;
  *(_BYTE *)(v10 + 24) = v6;
  sub_1AFACCD50(v13, v14);
  v15 = *(_QWORD *)(v11 + 32);
  LOBYTE(v6) = *(_BYTE *)(v11 + 40);
  sub_1AFACF5C4(v15, v6);
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v17 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v10 + 32) = v15;
  *(_BYTE *)(v10 + 40) = v6;
  sub_1AFACCD50(v16, v17);
  v18 = *(_QWORD *)(v11 + 48);
  v19 = *(_QWORD *)(v11 + 56);
  v20 = *(_BYTE *)(v11 + 64);
  sub_1AFB4A7E0();
  *(_QWORD *)(v10 + 48) = v18;
  *(_QWORD *)(v10 + 56) = v19;
  *(_BYTE *)(v10 + 64) = v20;
  sub_1AFB4A7E8();
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))((*(unsigned __int8 *)(v21 + 80) + 65 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 65 + v11) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

uint64_t sub_1AFE6E768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v4 + 24) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v4 + 16) = v5;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v4 + 40) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v4 + 32) = v6;
  v7 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(_BYTE *)(v4 + 64) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  *(_OWORD *)(v4 + 48) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(unsigned __int8 *)(v8 + 80) + 65 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 65 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1AFE6E7F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v4 = a2;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  j__swift_release(v8, v9);
  v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 = (uint64_t *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
  v11 = *((_BYTE *)v4 + 24);
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  v13 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v10 + 16) = v4[2];
  *(_BYTE *)(v10 + 24) = v11;
  sub_1AFACCD50(v12, v13);
  v14 = *((_BYTE *)v4 + 40);
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v16 = *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v10 + 32) = v4[4];
  *(_BYTE *)(v10 + 40) = v14;
  sub_1AFACCD50(v15, v16);
  v17 = *((_BYTE *)v4 + 64);
  *(_OWORD *)(v10 + 48) = *((_OWORD *)v4 + 3);
  *(_BYTE *)(v10 + 64) = v17;
  sub_1AFB4A7E8();
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))((*(unsigned __int8 *)(v18 + 80) + 65 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v4 + *(unsigned __int8 *)(v18 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_1AFE6E8C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 65) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if (v6 > 0xFE)
        return __swift_getEnumTagSinglePayload(((a1 & 0xFFFFFFFFFFFFFFF8) + v8 + 65) & ~v8, v6, v4);
      v16 = *(unsigned __int8 *)(a1 + 8);
      if (v16 > 1)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AFE6E99C + 4 * byte_1B003D180[(v10 - 1)]))();
}

void sub_1AFE6EA0C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1AFE6EC0C()
{
  return swift_initClassMetadata2();
}

void sub_1AFE6EC40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];

  v4 = a1[1];
  type metadata accessor for ForegroundEffectView._MetalLayer(255, *a1, v4, a4);
  v5 = OUTLINED_FUNCTION_8_111();
  v6 = sub_1B0007924();
  v13[0] = MEMORY[0x1E0CDF5B0];
  v13[1] = v4;
  v7 = MEMORY[0x1E0CDB8A0];
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v6, v13);
  v8 = sub_1B0007900();
  v9 = sub_1B00074F8();
  v10 = sub_1B0007924();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_8_3();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE755E0);
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_8_3();
  v12[0] = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8D48], v5);
  v12[1] = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB838], v8);
  v11[0] = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v9, v12);
  v11[1] = v4;
  MEMORY[0x1B5E03BF4](v7, v10, v11);
  OUTLINED_FUNCTION_13_104();
}

uint64_t sub_1AFE6EDB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v11 = a1;
  v12 = v1;
  v6 = MEMORY[0x1B5E03BF4](v2, v5, &v11);
  v7 = sub_1AFE6E348();
  v10[0] = v6;
  v10[1] = v7;
  v9[0] = MEMORY[0x1B5E03BF4](v2, v4, v10);
  v9[1] = v7;
  return MEMORY[0x1B5E03BF4](v2, v3, v9);
}

uint64_t sub_1AFE6EE24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ForegroundEffectView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_1AFE6DBE0(a1);
}

uint64_t sub_1AFE6EE64@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1AFE6DC60(v1[4], v1[2], v1[3], a1);
}

void MoonInlineContentView.init(status:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;

  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MoonInlineContentView() + 20));
  *v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
  OUTLINED_FUNCTION_9_5();
  sub_1AFD156AC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MoonComplicationDataStatus);
}

uint64_t type metadata accessor for MoonInlineContentView()
{
  uint64_t result;

  result = qword_1ED1EEAA0;
  if (!qword_1ED1EEAA0)
    return swift_getSingletonMetadata();
  return result;
}

void MoonInlineContentView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumTagSinglePayload;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _BYTE v118[24];
  uint64_t v119;
  uint64_t v120;
  _BYTE v121[24];
  uint64_t v122;
  uint64_t v123;

  v115 = a1;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE250);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_33();
  v111 = v4;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE238);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v6);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE2F0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v8);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE630);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_33();
  v110 = v10;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE208);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_33();
  v104 = v12;
  v96 = sub_1B00079D8();
  OUTLINED_FUNCTION_13_5(*(_QWORD *)(v96 - 8));
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v14);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE390);
  OUTLINED_FUNCTION_13_5(*(_QWORD *)(v99 - 8));
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66(v16);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE138);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v100 = (char *)&v88 - v20;
  MEMORY[0x1E0C80A78](v21);
  v102 = (uint64_t)&v88 - v22;
  v93 = sub_1B0007288();
  OUTLINED_FUNCTION_13_5(*(_QWORD *)(v93 - 8));
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_9();
  v26 = v25 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_9();
  v30 = v29 - v28;
  v31 = sub_1B0006064();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_41_0();
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE278);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_9();
  v36 = v35 - v34;
  v37 = type metadata accessor for MoonComplicationViewModel();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_9();
  v41 = v40 - v39;
  type metadata accessor for MoonComplicationDataStatus();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_34();
  sub_1AFD15514(v1, v2);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 2, v37);
  if (EnumTagSinglePayload)
  {
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_7_109();
      OUTLINED_FUNCTION_8_112(v1, v108);
      OUTLINED_FUNCTION_17_92();
      sub_1AFE6FE10();
      OUTLINED_FUNCTION_15_96();
      v44 = v109;
      sub_1B0007918();
      sub_1AFD157D0(v44, v111, &qword_1ED1EE2F0);
      OUTLINED_FUNCTION_9_5();
      sub_1AFE6FDF4();
      OUTLINED_FUNCTION_20_76();
      sub_1B0007918();
      sub_1AFACB308(v44, &qword_1ED1EE2F0);
    }
    else
    {
      OUTLINED_FUNCTION_7_109();
      OUTLINED_FUNCTION_8_112(v1, v111);
      OUTLINED_FUNCTION_17_92();
      sub_1AFE6FDF4();
      OUTLINED_FUNCTION_15_96();
      sub_1B0007918();
    }
    OUTLINED_FUNCTION_5_8(v1);
  }
  else
  {
    v88 = v1;
    v89 = v32;
    v91 = v36;
    sub_1AFD156AC(v2, v41, (uint64_t (*)(_QWORD))type metadata accessor for MoonComplicationViewModel);
    sub_1AFD157D0(v41, v30, &qword_1ED1EE538);
    v45 = __swift_getEnumTagSinglePayload(v30, 1, v31);
    v90 = v41;
    if (v45 == 1)
    {
      sub_1AFACB308(v30, &qword_1ED1EE538);
      OUTLINED_FUNCTION_7_109();
      OUTLINED_FUNCTION_8_112(v1, v104);
      OUTLINED_FUNCTION_17_92();
      sub_1AFE6FE94();
      OUTLINED_FUNCTION_15_96();
      OUTLINED_FUNCTION_22_68();
      sub_1B0007918();
      OUTLINED_FUNCTION_5_8(v1);
    }
    else
    {
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32);
      v47 = v1;
      v110 = v31;
      v46(v1, v30, v31);
      v48 = sub_1B0006040();
      v118[0] = *(_BYTE *)(v41 + *(int *)(v37 + 20));
      MoonPhase.symbolName(for:)((uint64_t)v118, v48);
      v50 = v49;
      v52 = v51;
      type metadata accessor for MoonInlineContentView();
      sub_1AFC34410();
      sub_1AFFA7F34(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v26, v93);
      v53 = sub_1B0008098();
      v54 = sub_1B0007A98();
      v55 = sub_1B0007AB0();
      v56 = sub_1B0007AA4();
      sub_1B0007AA4();
      if (sub_1B0007AA4() != v54)
        v56 = sub_1B0007AA4();
      sub_1B0007AA4();
      v57 = sub_1B0007AA4();
      v58 = v97;
      v59 = v96;
      v60 = v95;
      v61 = v94;
      if (v57 != v55)
        v56 = sub_1B0007AA4();
      v62 = v104;
      sub_1AFE6F910((uint64_t)v118);
      v63 = v118[16];
      v64 = v119;
      v65 = v120;
      v66 = BYTE1(v120);
      v67 = v121[16];
      v68 = v122;
      v69 = *(_OWORD *)v118;
      v70 = *(_OWORD *)v121;
      v118[0] = v56;
      *(_OWORD *)&v118[8] = v69;
      LOBYTE(v119) = v63;
      v120 = v64;
      v121[0] = v65;
      v121[1] = v66;
      *(_OWORD *)&v121[8] = v70;
      LOBYTE(v122) = v67;
      v123 = v68;
      sub_1B00079B4();
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE080);
      v72 = sub_1AFE6FF28();
      v104 = v53;
      v73 = v72;
      sub_1B0007EF4();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v59);
      v74 = *(_QWORD *)&v121[8];
      v75 = *(_QWORD *)&v121[16];
      v76 = v122;
      sub_1AFAED640(*(uint64_t *)&v118[8], *(uint64_t *)&v118[16], v119);
      swift_bridgeObjectRelease();
      sub_1AFAED640(v74, v75, v76);
      swift_bridgeObjectRelease();
      sub_1B00077BC();
      if (qword_1ED1F46A8 != -1)
        swift_once();
      OUTLINED_FUNCTION_4_3();
      v77 = (id)qword_1ED1F4470;
      OUTLINED_FUNCTION_11_3();
      v78 = OUTLINED_FUNCTION_13_105();
      v80 = v79;
      v30 = v81 & 1;
      v116 = v71;
      v117 = v73;
      swift_getOpaqueTypeConformance2();
      v82 = (uint64_t)v101;
      v83 = v99;
      sub_1B0007EB8();
      sub_1AFAED640(v78, v80, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v58, v83);
      sub_1B0006040();
      v116 = sub_1B00064F0();
      v117 = v84;
      sub_1AFAF9424();
      v85 = (uint64_t)v100;
      sub_1B00074EC();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5_8(v82);
      v86 = v102;
      sub_1AFE6FF6C(v85, v102);
      OUTLINED_FUNCTION_8_112(v86, v62);
      OUTLINED_FUNCTION_9_5();
      sub_1AFE6FE94();
      OUTLINED_FUNCTION_21_69();
      OUTLINED_FUNCTION_22_68();
      sub_1B0007918();
      swift_release();
      OUTLINED_FUNCTION_5_8(v86);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v47, v110);
    }
    OUTLINED_FUNCTION_8_112(v30, v108);
    OUTLINED_FUNCTION_9_5();
    sub_1AFE6FE10();
    OUTLINED_FUNCTION_21_69();
    v87 = v109;
    sub_1B0007918();
    sub_1AFD157D0(v87, v111, &qword_1ED1EE2F0);
    OUTLINED_FUNCTION_9_5();
    sub_1AFE6FDF4();
    OUTLINED_FUNCTION_20_76();
    sub_1B0007918();
    sub_1AFACB308(v87, &qword_1ED1EE2F0);
    OUTLINED_FUNCTION_5_8(v30);
    sub_1AFBBBFD4(v90);
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFE6F910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  v2 = sub_1B00077B0();
  MEMORY[0x1E0C80A78](v2);
  sub_1B00077A4();
  sub_1B0007798();
  sub_1B0007780();
  sub_1B0007798();
  sub_1B0006040();
  sub_1B00064F0();
  sub_1B000778C();
  swift_bridgeObjectRelease();
  sub_1B0007798();
  sub_1B00077C8();
  v3 = sub_1B0007D44();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  sub_1B00077A4();
  sub_1B0007798();
  sub_1B0007780();
  sub_1B0007798();
  v10 = sub_1B0006040();
  MoonPhase.abbreviatedDescription.getter(v10);
  sub_1B000778C();
  swift_bridgeObjectRelease();
  sub_1B0007798();
  sub_1B00077C8();
  v11 = sub_1B0007D44();
  v13 = v12;
  v15 = v14 & 1;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = 257;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v14 & 1;
  *(_QWORD *)(a1 + 64) = v16;
  sub_1AFBB755C(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_1AFBB755C(v11, v13, v15);
  swift_bridgeObjectRetain();
  sub_1AFAED640(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1AFAED640(v3, v5, v9);
  return swift_bridgeObjectRelease();
}

void sub_1AFE6FB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = sub_1B00079D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_34();
  sub_1B00077B0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41_0();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE858);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  sub_1B00077A4();
  sub_1B0007798();
  sub_1B0008098();
  sub_1B0007780();
  swift_release();
  sub_1B0007798();
  sub_1B00077C8();
  OUTLINED_FUNCTION_11_3();
  v17 = OUTLINED_FUNCTION_13_105();
  v18 = v9;
  v19 = v10 & 1;
  sub_1B00079B4();
  sub_1B0007EF4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  sub_1AFAED640(v17, v18, v19);
  swift_bridgeObjectRelease();
  sub_1B00077BC();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  v11 = (id)qword_1ED1F4470;
  OUTLINED_FUNCTION_11_3();
  v12 = OUTLINED_FUNCTION_13_105();
  v14 = v13;
  v16 = v15 & 1;
  swift_getOpaqueTypeConformance2();
  sub_1B0007EB8();
  sub_1AFAED640(v12, v14, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFE6FDF4()
{
  return sub_1AFE6FE2C(&qword_1ED1EE2E8, &qword_1ED1EE2F0, (void (*)(void))sub_1AFE6FE10);
}

uint64_t sub_1AFE6FE10()
{
  return sub_1AFE6FE2C(&qword_1ED1EE270, &qword_1ED1EE278, (void (*)(void))sub_1AFE6FE94);
}

uint64_t sub_1AFE6FE2C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    v7[0] = a3;
    v7[1] = OUTLINED_FUNCTION_21_69();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFE6FE94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1ED1EE130;
  if (!qword_1ED1EE130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE138);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE080);
    v2[3] = sub_1AFE6FF28();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1AFC6C710();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1EE130);
  }
  return result;
}

unint64_t sub_1AFE6FF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1EE078;
  if (!qword_1ED1EE078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE080);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8CC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1EE078);
  }
  return result;
}

uint64_t sub_1AFE6FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE6FFB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for MoonInlineContentView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MoonComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v7))
    {
      v8 = type metadata accessor for MoonComplicationDataStatus();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_1B0006064();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v10);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_1B0007288();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MoonInlineContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for MoonComplicationViewModel();
  if (!__swift_getEnumTagSinglePayload(a1, 2, v4))
  {
    v5 = sub_1B0006064();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_1B0007288();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *initializeWithCopy for MoonInlineContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = type metadata accessor for MoonComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    v7 = type metadata accessor for MoonComplicationDataStatus();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1B0006064();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v8);
    }
    a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_1B0007288();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithCopy for MoonInlineContentView(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = type metadata accessor for MoonComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1AFBBBFD4((uint64_t)a1);
      goto LABEL_7;
    }
    v12 = sub_1B0006064();
    v13 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v12);
    v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
LABEL_16:
        a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
        goto LABEL_17;
      }
    }
    else
    {
      v15 = *(_QWORD *)(v12 - 8);
      if (!v14)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 24))(a1, a2, v12);
        goto LABEL_16;
      }
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(a1, v12);
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    v11 = type metadata accessor for MoonComplicationDataStatus();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  v9 = sub_1B0006064();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
  }
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
LABEL_17:
  if (a1 != a2)
  {
    v17 = *(int *)(a3 + 20);
    v18 = &a1[v17];
    v19 = &a2[v17];
    sub_1AFACB308((uint64_t)&a1[v17], &qword_1ED1EE578);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_1B0007288();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for MoonInlineContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for MoonComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    v7 = type metadata accessor for MoonComplicationDataStatus();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1B0006064();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v8);
    }
    a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_1B0007288();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for MoonInlineContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for MoonComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_1B0006064();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
      }
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1AFBBBFD4((uint64_t)a1);
LABEL_7:
    v11 = type metadata accessor for MoonComplicationDataStatus();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  v12 = sub_1B0006064();
  v13 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v12);
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(a1, a2, v12);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(a1, v12);
    goto LABEL_15;
  }
  if (v14)
  {
LABEL_15:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v12);
LABEL_16:
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
LABEL_17:
  if (a1 != a2)
  {
    v17 = *(int *)(a3 + 20);
    v18 = &a1[v17];
    v19 = &a2[v17];
    sub_1AFACB308((uint64_t)&a1[v17], &qword_1ED1EE578);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_1B0007288();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MoonInlineContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE70A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_9_76();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72C18);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for MoonInlineContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE70AC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_9_76();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72C18);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

void sub_1AFE70B30()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for MoonComplicationDataStatus();
  if (v0 <= 0x3F)
  {
    sub_1AFD1545C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AFE70BB4()
{
  return sub_1AFE6FE2C(&qword_1ED1EE328, &qword_1ED1EC720, (void (*)(void))sub_1AFE6FDF4);
}

uint64_t sub_1AFE70BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71370);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  v6 = type metadata accessor for PlatterViewLocation();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  sub_1AFE71244((uint64_t)v5, (uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v6) == 1)
  {
    sub_1AFE7128C((uint64_t)v2);
    v7 = 0;
    v8 = 0xE000000000000000;
  }
  else
  {
    v7 = *v2;
    v8 = v2[1];
    swift_bridgeObjectRetain();
    sub_1AFC3A97C((uint64_t)v2);
  }
  qword_1EEE922E0 = v7;
  *(_QWORD *)algn_1EEE922E8 = v8;
  qword_1EEE922F0 = 0;
  unk_1EEE922F8 = 0xE000000000000000;
  qword_1EEE92300 = 0;
  unk_1EEE92308 = 0xE000000000000000;
  qword_1EEE92310 = 0;
  unk_1EEE92318 = 0xE000000000000000;
  qword_1EEE92320 = 0;
  unk_1EEE92328 = 0xE000000000000000;
  xmmword_1EEE92330 = 0u;
  unk_1EEE92340 = 0u;
  return sub_1AFE7128C((uint64_t)v5);
}

uint64_t static CurrentObservationsHeaderViewModel.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t result;
  char v14;
  BOOL v15;
  char v16;
  BOOL v17;
  char v18;
  BOOL v19;
  char v20;
  BOOL v21;
  char v22;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v39 = a1[6];
  v37 = a1[8];
  v38 = a1[7];
  v31 = a1[10];
  v33 = a1[11];
  v27 = a1[12];
  v29 = a1[13];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v35 = a2[8];
  v36 = a1[9];
  v34 = a2[9];
  v30 = a2[10];
  v32 = a2[11];
  v12 = *a1 == *a2 && a1[1] == a2[1];
  v26 = a2[12];
  v28 = a2[13];
  if (v12 || (OUTLINED_FUNCTION_3_5(), result = OUTLINED_FUNCTION_1_8(), (v14 & 1) != 0))
  {
    v15 = v2 == v6 && v3 == v7;
    if (v15 || (OUTLINED_FUNCTION_3_5(), result = OUTLINED_FUNCTION_1_8(), (v16 & 1) != 0))
    {
      v17 = v4 == v8 && v5 == v9;
      if (v17 || (OUTLINED_FUNCTION_3_5(), result = OUTLINED_FUNCTION_1_8(), (v18 & 1) != 0))
      {
        v19 = v39 == v10 && v38 == v11;
        if (v19 || (OUTLINED_FUNCTION_3_5(), result = OUTLINED_FUNCTION_1_8(), (v20 & 1) != 0))
        {
          v21 = v37 == v35 && v36 == v34;
          if (v21 || (OUTLINED_FUNCTION_3_5(), result = OUTLINED_FUNCTION_1_8(), (v22 & 1) != 0))
          {
            if (v33)
            {
              if (!v32)
                return 0;
              if (v31 != v30 || v33 != v32)
              {
                OUTLINED_FUNCTION_3_5();
                result = OUTLINED_FUNCTION_1_8();
                if ((v24 & 1) == 0)
                  return result;
              }
            }
            else if (v32)
            {
              return 0;
            }
            if (v29)
            {
              if (v28)
              {
                v25 = v27 == v26 && v29 == v28;
                if (v25 || (OUTLINED_FUNCTION_3_5() & 1) != 0)
                  return 1;
              }
            }
            else if (!v28)
            {
              return 1;
            }
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t destroy for CurrentObservationsHeaderViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CurrentObservationsHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CurrentObservationsHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CurrentObservationsHeaderViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentObservationsHeaderViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentObservationsHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentObservationsHeaderViewModel()
{
  return &type metadata for CurrentObservationsHeaderViewModel;
}

uint64_t sub_1AFE71244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE7128C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE712CC()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _WORD v20[8];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _WORD v24[8];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _WORD v28[8];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _WORD v32[8];
  uint64_t v33;
  _BYTE v34[9];

  v34[0] = 0;
  v30 = 0x7970736957;
  v31 = 0xE500000000000000;
  strcpy((char *)v32, "Wispy_Single");
  HIBYTE(v32[6]) = 0;
  v32[7] = -5120;
  v33 = 6;
  v27 = 0xE500000000000000;
  strcpy((char *)v28, "Wispy_Single");
  HIBYTE(v28[6]) = 0;
  v28[7] = -5120;
  v29 = 6;
  v22 = 0x7970736957;
  v23 = 0xE500000000000000;
  strcpy((char *)v24, "Wispy_Single");
  HIBYTE(v24[6]) = 0;
  v24[7] = -5120;
  v25 = 6;
  v26 = 0x7970736957;
  strcpy((char *)v20, "Wispy_Single");
  HIBYTE(v20[6]) = 0;
  v20[7] = -5120;
  v21 = 6;
  sub_1AFC8ACE4();
  sub_1AFC8ACE4();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #3.25
    FMOV            V2.2S, #6.0
  }
  *((_QWORD *)&v19 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v19 = 0x4248000044BB8000;
  DWORD2(v17) = 1116471296;
  *(_QWORD *)&v17 = 0x43FA000040400000;
  *(_QWORD *)&v15 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v15 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v13 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v13 = 1086324736;
  LODWORD(v11) = 1101004800;
  DWORD2(v10) = 1166843904;
  *(_QWORD *)&v10 = 0x41F0000040A00000;
  LODWORD(v9) = 1153138688;
  LODWORD(v7) = 1140457472;
  sub_1AFB471E4((uint64_t)v34, 48, 0, 2000, 133, 10, 0, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v7, 0x3E8000003DF5C28FLL, v8, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v9,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4000000000000000,
    v10,
    0x3D4CCCCD3CF5C28FLL,
    1097147068,
    v11,
    v12,
    _Q0,
    _Q0,
    v13,
    1084227584,
    v14,
    _Q0,
    _Q0,
    v15,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v16,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1039516303,
    1048576000,
    v18,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v19,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4094035940A00000);
}

void VFXView.setupView(with:)(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;

  v2 = *a1;
  v3 = *((double *)a1 + 1);
  v4 = a1[2];
  v5 = *((unsigned __int8 *)a1 + 24);
  v6 = objc_msgSend(v1, sel_subviews);
  sub_1AFB3931C();
  v7 = sub_1B0008788();

  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    OUTLINED_FUNCTION_32();
LABEL_12:
    objc_msgSend(v1, sel_setEffect_, v2);
    objc_msgSend(v1, sel_setResizingMode_, v5);
    v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v13);

    objc_msgSend(v1, sel_setScaleFactor_, v3);
    objc_msgSend(v1, sel_setPreferredFramesPerSecond_, v4);
    return;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1B0008E0C();
  OUTLINED_FUNCTION_32();
  if (!v12)
    goto LABEL_11;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1B5E02C64](0, v7);
LABEL_6:
    v9 = v8;
    OUTLINED_FUNCTION_32();
    v10 = objc_msgSend(v9, sel_layer);

    if (v10)
    {
      objc_opt_self();
      v11 = (void *)swift_dynamicCastObjCClass();
      if (v11)
        objc_msgSend(v11, sel_setLowLatency_, 0);

    }
    goto LABEL_12;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1AFE71C3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, unint64_t, uint64_t);
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  int v89;
  char v90;
  int v91;
  char v92;
  _DWORD *v93;
  unsigned int *v94;
  float *v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  char v100;
  unsigned int *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  char v116;
  char v117;
  char v118;
  char v119;
  float *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  char v127;
  uint64_t v128;
  char v129;
  char v130;
  unsigned int *v131;
  char v132;
  uint64_t *v133;
  char v134;
  float *v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  char v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  float *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  int v213;
  float *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  unsigned int *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238[8];
  double v239;
  char v240[8];
  uint64_t v241;

  v212 = a5;
  v213 = a4;
  v232 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4168);
  OUTLINED_FUNCTION_12_0(v6, (uint64_t)v240);
  v208 = v7;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v9);
  v10 = sub_1B0008F8C();
  OUTLINED_FUNCTION_12_0(v10, (uint64_t)v238);
  v204 = v11;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v13);
  v14 = sub_1B0005A04();
  OUTLINED_FUNCTION_12_0(v14, (uint64_t)&v234);
  v202 = v15;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v17);
  v227 = sub_1B0005A1C();
  v201 = *(_QWORD *)(v227 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v19);
  v20 = sub_1B00058D8();
  v233 = *(_QWORD *)(v20 - 8);
  v234 = v20;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_9();
  v24 = v23 - v22;
  v25 = sub_1B0005E6C();
  v235 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_9();
  v29 = v28 - v27;
  v225 = sub_1B00060E8();
  v228 = *(_QWORD *)(v225 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v33);
  v224 = (char *)&v198 - v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_33();
  v37 = OUTLINED_FUNCTION_3_64(v36);
  type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(v37);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_33();
  v222 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_12_0(v40, (uint64_t)&v241);
  v216 = v41;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v43);
  v218 = (char *)&v198 - v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4040);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_38();
  v223 = v46;
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v48);
  v230 = (char *)&v198 - v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_9();
  v53 = v52 - v51;
  v54 = sub_1B0005BFC();
  v229 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_33();
  v231 = v56;
  v57 = sub_1B0005B18();
  v58 = *(void (***)(uint64_t, uint64_t))(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_9();
  v61 = v60 - v59;
  v217 = a3;
  sub_1B0005A34();
  v62 = sub_1B0005E78();
  v63 = v62;
  if (!*(_QWORD *)(v62 + 16))
  {
    OUTLINED_FUNCTION_20_0();
    v58[1](v61, v57);
    return 0;
  }
  v226 = (unsigned int *)v58;
  v214 = (float *)v57;
  MEMORY[0x1E0C80A78](v62);
  *(&v198 - 2) = v61;
  sub_1AFAD7010();
  if (__swift_getEnumTagSinglePayload(v53, 1, v54) != 1)
  {
    v232 = v61;
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v229 + 32);
    v65 = v231;
    v200 = v54;
    v64(v231, v53, v54);
    v199 = sub_1AFE74568(v217, v65);
    v66 = *(_QWORD *)(v63 + 16);
    v217 = v67;
    if (v66)
    {
      v68 = v63 + ((*(unsigned __int8 *)(v235 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80));
      v69 = *(_QWORD *)(v235 + 72);
      v70 = *(void (**)(uint64_t, unint64_t, uint64_t))(v235 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v70(v29, v68, v25);
        sub_1B0005E54();
        v71 = sub_1B0005A7C();
        (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v24, v234);
        if ((v71 & 1) != 0)
          break;
        OUTLINED_FUNCTION_70_0(v29, *(uint64_t (**)(uint64_t, uint64_t))(v235 + 8));
        v68 += v69;
        if (!--v66)
        {
          OUTLINED_FUNCTION_20_0();
          goto LABEL_10;
        }
      }
      OUTLINED_FUNCTION_20_0();
      v74 = (uint64_t)v230;
      (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v230, v29, v25);
      v72 = 0;
      v73 = v225;
    }
    else
    {
LABEL_10:
      v72 = 1;
      v73 = v225;
      v74 = (uint64_t)v230;
    }
    __swift_storeEnumTagSinglePayload(v74, v72, 1, v25);
    OUTLINED_FUNCTION_20_0();
    v75 = v215;
    sub_1B0005BC0();
    v76 = objc_msgSend((id)objc_opt_self(), sel_fahrenheit);
    v77 = (uint64_t)v218;
    v78 = v221;
    sub_1B00050E0();

    (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v75, v78);
    sub_1B0005068();
    v80 = v79;
    OUTLINED_FUNCTION_55_6();
    sub_1B0005BC0();
    static Set<>.full.getter();
    v81 = v219;
    __swift_storeEnumTagSinglePayload(v219, 1, 1, v227);
    v82 = v222;
    static WeatherFormatStyle<>.weather(_:locale:)();
    OUTLINED_FUNCTION_20_0();
    sub_1AFAF6288(v81, &qword_1ED1F44D8);
    sub_1B0006700();
    v83 = sub_1B00066D0();
    v233 = sub_1AFCBBF68(v82, 0, v83, v77);
    v234 = v84;
    swift_release();
    sub_1AFBBF05C((uint64_t)v82);
    OUTLINED_FUNCTION_55_6();
    v85 = (uint64_t)v224;
    sub_1B0005B9C();
    v86 = v220;
    sub_1AFAFB498(v74, v220);
    if (__swift_getEnumTagSinglePayload(v86, 1, v25) == 1)
    {
      sub_1AFAF6288(v86, &qword_1ED1F4040);
      v87 = 0;
    }
    else
    {
      sub_1B0005E3C();
      OUTLINED_FUNCTION_70_0(v86, *(uint64_t (**)(uint64_t, uint64_t))(v235 + 8));
      v87 = sub_1B0005E60();
    }
    v88 = v223;
    sub_1AFAFB498(v74, v223);
    if (__swift_getEnumTagSinglePayload(v88, 1, v25) == 1)
    {
      sub_1AFAF6288(v88, &qword_1ED1F4040);
      v89 = 0;
      if ((v87 & 1) != 0)
      {
        v90 = 1;
        goto LABEL_20;
      }
    }
    else
    {
      sub_1B0005E3C();
      OUTLINED_FUNCTION_70_0(v88, *(uint64_t (**)(uint64_t, uint64_t))(v235 + 8));
      v90 = 1;
      v89 = sub_1B0005E60();
      if ((v87 & 1) != 0)
        goto LABEL_20;
    }
    v90 = v89;
LABEL_20:
    v91 = sub_1AFE74C7C(v74, v85);
    v92 = v91;
    v93 = (_DWORD *)MEMORY[0x1E0CEED18];
    v94 = (unsigned int *)MEMORY[0x1E0CEED20];
    if ((v90 & 1) != 0)
    {
      v95 = &_NTKAPLGammaTable[108];
      if ((v89 & v91 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_59_5(40.0);
        if (!v97)
        {
          if (v80 < 75.0)
          {
            OUTLINED_FUNCTION_24_68();
            OUTLINED_FUNCTION_62_5();
            OUTLINED_FUNCTION_37_35();
            OUTLINED_FUNCTION_33_43();
            if ((v87 & 1) != 0)
            {
              if ((*(_DWORD *)(v122 - 256) & 1) != 0)
              {
                OUTLINED_FUNCTION_5_116();
                OUTLINED_FUNCTION_8_113();
                OUTLINED_FUNCTION_3_122();
                OUTLINED_FUNCTION_20_77();
                OUTLINED_FUNCTION_4_123();
                v123 = qword_1ED1F46A8;
                if ((v87 & 1) == 0)
                {
                  if ((v213 & 1) != 0)
                  {
                    if (qword_1ED1F46A8 == -1)
                      goto LABEL_151;
                    goto LABEL_292;
                  }
                  if (qword_1ED1F46A8 == -1)
                  {
LABEL_226:
                    v157 = &qword_1ED1F4470;
                    OUTLINED_FUNCTION_0_142();
                    OUTLINED_FUNCTION_8();
                    OUTLINED_FUNCTION_38_27();
                    OUTLINED_FUNCTION_23();
                    goto LABEL_260;
                  }
LABEL_309:
                  swift_once();
                  goto LABEL_226;
                }
LABEL_136:
                if ((v213 & 1) != 0)
                {
                  if (v123 == -1)
                    goto LABEL_259;
                }
                else if (v123 == -1)
                {
                  goto LABEL_259;
                }
                goto LABEL_303;
              }
              goto LABEL_139;
            }
            if ((*(_DWORD *)(v122 - 256) & 1) != 0)
            {
              OUTLINED_FUNCTION_5_116();
              OUTLINED_FUNCTION_8_113();
              OUTLINED_FUNCTION_3_122();
              OUTLINED_FUNCTION_20_77();
              OUTLINED_FUNCTION_4_123();
              v149 = qword_1ED1F46A8;
              if ((v87 & 1) == 0)
              {
                if ((v213 & 1) != 0)
                {
                  if (qword_1ED1F46A8 == -1)
                    goto LABEL_259;
                }
                else if (qword_1ED1F46A8 == -1)
                {
                  goto LABEL_259;
                }
                goto LABEL_303;
              }
              goto LABEL_177;
            }
LABEL_180:
            OUTLINED_FUNCTION_19_73();
            if ((v174 & 1) != 0)
            {
              if (v173 == -1)
                goto LABEL_259;
            }
            else if (v173 == -1)
            {
              goto LABEL_259;
            }
            goto LABEL_303;
          }
          v95 = v214;
          v94 = v226;
          if (v80 < 90.0)
          {
            OUTLINED_FUNCTION_30_58();
            if ((v134 & 1) != 0)
            {
              OUTLINED_FUNCTION_5_116();
              OUTLINED_FUNCTION_8_113();
              OUTLINED_FUNCTION_3_122();
              OUTLINED_FUNCTION_20_77();
              OUTLINED_FUNCTION_4_123();
              v123 = qword_1ED1F46A8;
              if ((v87 & 1) == 0)
              {
                if ((v213 & 1) != 0)
                {
                  if (qword_1ED1F46A8 == -1)
                    goto LABEL_259;
                }
                else if (qword_1ED1F46A8 == -1)
                {
                  goto LABEL_259;
                }
                goto LABEL_303;
              }
              goto LABEL_136;
            }
            goto LABEL_139;
          }
          OUTLINED_FUNCTION_24_68();
          OUTLINED_FUNCTION_62_5();
          OUTLINED_FUNCTION_37_35();
          if ((v87 & 1) == 0)
          {
            if ((v212 & 1) == 0)
              goto LABEL_180;
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_8_113();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_20_77();
            OUTLINED_FUNCTION_4_123();
            v149 = qword_1ED1F46A8;
            if ((v87 & 1) != 0)
            {
LABEL_177:
              if ((v213 & 1) == 0)
              {
                if (v149 != -1)
                  swift_once();
                OUTLINED_FUNCTION_0_142();
                v157 = (uint64_t *)OUTLINED_FUNCTION_8();
                OUTLINED_FUNCTION_23();
                OUTLINED_FUNCTION_66_6();
                goto LABEL_260;
              }
              if (v149 == -1)
                goto LABEL_259;
              goto LABEL_303;
            }
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_259;
            }
            else if (qword_1ED1F46A8 == -1)
            {
LABEL_259:
              OUTLINED_FUNCTION_0_142();
              v157 = (uint64_t *)OUTLINED_FUNCTION_8();
              OUTLINED_FUNCTION_23();
              goto LABEL_260;
            }
LABEL_303:
            swift_once();
            goto LABEL_259;
          }
          if ((v212 & 1) != 0)
          {
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_8_113();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_20_77();
            OUTLINED_FUNCTION_4_123();
            v123 = qword_1ED1F46A8;
            if ((v87 & 1) != 0)
              goto LABEL_136;
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_259;
            }
            else if (qword_1ED1F46A8 == -1)
            {
              goto LABEL_259;
            }
            goto LABEL_303;
          }
LABEL_139:
          OUTLINED_FUNCTION_19_73();
          if ((v154 & 1) != 0)
          {
            if (v153 == -1)
              goto LABEL_259;
          }
          else if (v153 == -1)
          {
            goto LABEL_259;
          }
          goto LABEL_303;
        }
        v95 = v203;
        OUTLINED_FUNCTION_57_11(v96, *v94);
        v98 = OUTLINED_FUNCTION_63_6();
        v99 = OUTLINED_FUNCTION_19_50((uint64_t)v95);
        if ((v98 & 1) != 0)
        {
          v95 = v214;
          v94 = v226;
          OUTLINED_FUNCTION_30_58();
          if ((v100 & 1) == 0)
          {
            OUTLINED_FUNCTION_19_73();
            if ((v144 & 1) != 0)
            {
              if (v143 == -1)
                goto LABEL_259;
            }
            else if (v143 == -1)
            {
              goto LABEL_259;
            }
            goto LABEL_303;
          }
          OUTLINED_FUNCTION_5_116();
          OUTLINED_FUNCTION_8_113();
          OUTLINED_FUNCTION_3_122();
          OUTLINED_FUNCTION_20_77();
          OUTLINED_FUNCTION_4_123();
          if ((v98 & 1) != 0)
          {
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_259;
            }
            else if (qword_1ED1F46A8 == -1)
            {
              goto LABEL_259;
            }
            goto LABEL_303;
          }
          if ((v213 & 1) == 0)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_226;
            goto LABEL_309;
          }
          if (qword_1ED1F46A8 == -1)
          {
LABEL_151:
            v157 = &qword_1ED1F4470;
            OUTLINED_FUNCTION_0_142();
            OUTLINED_FUNCTION_8();
            OUTLINED_FUNCTION_43_14();
            OUTLINED_FUNCTION_23();
LABEL_260:
            OUTLINED_FUNCTION_3_12();

            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
            v180 = OUTLINED_FUNCTION_14_70();
            *(_OWORD *)(v180 + 16) = xmmword_1B00275C0;
            OUTLINED_FUNCTION_44_15();
            v141 = sub_1AFE74EAC(v181, v182, v183);
            v185 = v184;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v180 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v180 + 64) = sub_1AFAFB1D0();
            *(_QWORD *)(v180 + 32) = v141;
            *(_QWORD *)(v180 + 40) = v185;
            OUTLINED_FUNCTION_47_11();
            OUTLINED_FUNCTION_14_103();
            OUTLINED_FUNCTION_40();
            v186 = OUTLINED_FUNCTION_17_93();
            OUTLINED_FUNCTION_34_42(v186, &qword_1ED1F4040);
            OUTLINED_FUNCTION_7_110();
            (*((void (**)(uint64_t, float *))v94 + 1))(v232, v95);
            return v141;
          }
        }
        else
        {
          OUTLINED_FUNCTION_57_11(v99, *v93);
          v127 = OUTLINED_FUNCTION_63_6();
          OUTLINED_FUNCTION_19_50((uint64_t)v95);
          OUTLINED_FUNCTION_33_43();
          if ((v127 & 1) == 0)
          {
            if ((*(_DWORD *)(v128 - 256) & 1) != 0)
            {
              OUTLINED_FUNCTION_5_116();
              OUTLINED_FUNCTION_8_113();
              OUTLINED_FUNCTION_3_122();
              OUTLINED_FUNCTION_20_77();
              OUTLINED_FUNCTION_4_123();
              v149 = qword_1ED1F46A8;
              if ((v127 & 1) == 0)
              {
                if ((v213 & 1) != 0)
                {
                  if (qword_1ED1F46A8 == -1)
                    goto LABEL_259;
                }
                else if (qword_1ED1F46A8 == -1)
                {
                  goto LABEL_259;
                }
                goto LABEL_303;
              }
              goto LABEL_177;
            }
            goto LABEL_180;
          }
          if ((*(_DWORD *)(v128 - 256) & 1) == 0)
            goto LABEL_139;
          OUTLINED_FUNCTION_5_116();
          OUTLINED_FUNCTION_8_113();
          OUTLINED_FUNCTION_3_122();
          OUTLINED_FUNCTION_20_77();
          OUTLINED_FUNCTION_4_123();
          v123 = qword_1ED1F46A8;
          if ((v127 & 1) != 0)
            goto LABEL_136;
          if ((v213 & 1) == 0)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_226;
            goto LABEL_309;
          }
          if (qword_1ED1F46A8 == -1)
            goto LABEL_151;
        }
LABEL_292:
        swift_once();
        goto LABEL_151;
      }
      if ((v87 & 1) != 0)
      {
        OUTLINED_FUNCTION_61_5();
        OUTLINED_FUNCTION_59_5(50.0);
        if (!(!v116 & v118))
        {
          v131 = v226;
          OUTLINED_FUNCTION_30_58();
          if ((v132 & 1) != 0)
          {
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_10_106();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_32_43();
            OUTLINED_FUNCTION_6_113();
            if ((v87 & 1) != 0)
            {
              if ((v213 & 1) != 0)
              {
                if (qword_1ED1F46A8 == -1)
                {
LABEL_82:
                  v133 = &qword_1ED1F4470;
                  OUTLINED_FUNCTION_0_142();
                  OUTLINED_FUNCTION_8();
                  OUTLINED_FUNCTION_50_9();
LABEL_265:
                  OUTLINED_FUNCTION_14_0();
                  goto LABEL_266;
                }
LABEL_290:
                swift_once();
                goto LABEL_82;
              }
              if (qword_1ED1F46A8 == -1)
                goto LABEL_220;
              goto LABEL_306;
            }
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_270;
            }
            else if (qword_1ED1F46A8 == -1)
            {
              goto LABEL_270;
            }
            goto LABEL_285;
          }
LABEL_108:
          OUTLINED_FUNCTION_19_73();
          if ((v148 & 1) != 0)
          {
            if (v147 == -1)
              goto LABEL_270;
          }
          else if (v147 == -1)
          {
            goto LABEL_270;
          }
          goto LABEL_285;
        }
        OUTLINED_FUNCTION_59_5(92.0);
        v131 = v226;
        if (!v97)
        {
          if ((v212 & 1) == 0)
            goto LABEL_108;
          OUTLINED_FUNCTION_19_73();
          if ((v146 & 1) != 0)
          {
            if (v145 == -1)
              goto LABEL_233;
            goto LABEL_305;
          }
          if (v145 == -1)
          {
LABEL_255:
            v133 = &qword_1ED1F4470;
            OUTLINED_FUNCTION_0_142();
            OUTLINED_FUNCTION_8();
            OUTLINED_FUNCTION_52_11();
            OUTLINED_FUNCTION_23();
            goto LABEL_266;
          }
LABEL_319:
          swift_once();
          goto LABEL_255;
        }
        OUTLINED_FUNCTION_30_58();
        if ((v119 & 1) == 0)
          goto LABEL_108;
        OUTLINED_FUNCTION_5_116();
        OUTLINED_FUNCTION_10_106();
        OUTLINED_FUNCTION_3_122();
        OUTLINED_FUNCTION_32_43();
        OUTLINED_FUNCTION_6_113();
        if ((v87 & 1) != 0)
        {
          if ((v213 & 1) != 0)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_82;
            goto LABEL_290;
          }
          if (qword_1ED1F46A8 == -1)
          {
LABEL_220:
            v133 = &qword_1ED1F4470;
            OUTLINED_FUNCTION_0_142();
            OUTLINED_FUNCTION_8();
            OUTLINED_FUNCTION_49_11();
            goto LABEL_265;
          }
LABEL_306:
          swift_once();
          goto LABEL_220;
        }
        if ((v213 & 1) == 0)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_255;
          goto LABEL_319;
        }
        if (qword_1ED1F46A8 == -1)
          goto LABEL_233;
        goto LABEL_305;
      }
      v120 = v214;
      v121 = (uint64_t)v230;
      if ((v89 & 1) != 0)
      {
        OUTLINED_FUNCTION_61_5();
        OUTLINED_FUNCTION_59_5(40.0);
        if (v97)
        {
          OUTLINED_FUNCTION_30_58();
          if ((v126 & 1) != 0)
          {
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_10_106();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_32_43();
            OUTLINED_FUNCTION_6_113();
            v131 = v226;
            if ((v120 & 1) == 0)
            {
              if ((v213 & 1) == 0)
              {
                if (qword_1ED1F46A8 == -1)
                  goto LABEL_255;
                goto LABEL_319;
              }
              if (qword_1ED1F46A8 == -1)
                goto LABEL_233;
              goto LABEL_305;
            }
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_213;
              goto LABEL_322;
            }
            if (qword_1ED1F46A8 == -1)
              goto LABEL_264;
            goto LABEL_325;
          }
          v131 = v226;
          goto LABEL_214;
        }
        if (v80 < 75.0)
        {
          v131 = v226;
          OUTLINED_FUNCTION_30_58();
          if ((v152 & 1) != 0)
          {
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_10_106();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_32_43();
            OUTLINED_FUNCTION_6_113();
            if ((v120 & 1) == 0)
            {
              if ((v213 & 1) == 0)
              {
                if (qword_1ED1F46A8 == -1)
                  goto LABEL_255;
                goto LABEL_319;
              }
              if (qword_1ED1F46A8 == -1)
              {
LABEL_233:
                v133 = &qword_1ED1F4470;
                OUTLINED_FUNCTION_0_142();
                OUTLINED_FUNCTION_8();
                OUTLINED_FUNCTION_51_4();
                OUTLINED_FUNCTION_23();
                OUTLINED_FUNCTION_66_6();
LABEL_266:
                OUTLINED_FUNCTION_1_0();
                sub_1B00054B8();

                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
                v187 = OUTLINED_FUNCTION_13_20();
                *(_OWORD *)(v187 + 16) = xmmword_1B00275A0;
                OUTLINED_FUNCTION_44_15();
                v191 = sub_1AFE74EAC(v188, v189, v190);
                v193 = v192;
                swift_bridgeObjectRelease();
                v194 = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v187 + 56) = MEMORY[0x1E0DEA968];
                v195 = sub_1AFAFB1D0();
                *(_QWORD *)(v187 + 32) = v191;
                *(_QWORD *)(v187 + 40) = v193;
                *(_QWORD *)(v187 + 96) = v194;
                *(_QWORD *)(v187 + 104) = v195;
                v196 = v233;
                *(_QWORD *)(v187 + 64) = v195;
                *(_QWORD *)(v187 + 72) = v196;
                *(_QWORD *)(v187 + 80) = v234;
                v141 = sub_1B0008560();
                OUTLINED_FUNCTION_40();
                OUTLINED_FUNCTION_32();
                v197 = OUTLINED_FUNCTION_17_93();
                OUTLINED_FUNCTION_34_42(v197, &qword_1ED1F4040);
                OUTLINED_FUNCTION_7_110();
                (*((void (**)(uint64_t, float *))v131 + 1))(v232, v214);
                return v141;
              }
LABEL_305:
              swift_once();
              goto LABEL_233;
            }
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_213;
              goto LABEL_322;
            }
            if (qword_1ED1F46A8 == -1)
            {
LABEL_264:
              v133 = &qword_1ED1F4470;
              OUTLINED_FUNCTION_0_142();
              OUTLINED_FUNCTION_8();
              OUTLINED_FUNCTION_16_86();
              goto LABEL_265;
            }
LABEL_325:
            swift_once();
            goto LABEL_264;
          }
          goto LABEL_214;
        }
        v131 = v226;
        if (v80 >= 90.0)
        {
          if ((v212 & 1) != 0)
          {
            OUTLINED_FUNCTION_5_116();
            OUTLINED_FUNCTION_10_106();
            OUTLINED_FUNCTION_3_122();
            OUTLINED_FUNCTION_32_43();
            OUTLINED_FUNCTION_6_113();
            if ((v120 & 1) != 0)
            {
              if ((v213 & 1) == 0)
              {
                if (qword_1ED1F46A8 == -1)
                  goto LABEL_264;
                goto LABEL_325;
              }
              if (qword_1ED1F46A8 == -1)
              {
LABEL_213:
                v133 = &qword_1ED1F4470;
                OUTLINED_FUNCTION_0_142();
                OUTLINED_FUNCTION_8();
                OUTLINED_FUNCTION_15_97();
                goto LABEL_265;
              }
LABEL_322:
              swift_once();
              goto LABEL_213;
            }
            if ((v213 & 1) != 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_270;
            }
            else if (qword_1ED1F46A8 == -1)
            {
LABEL_270:
              OUTLINED_FUNCTION_0_142();
              v133 = (uint64_t *)OUTLINED_FUNCTION_8();
              OUTLINED_FUNCTION_23();
              goto LABEL_266;
            }
LABEL_285:
            swift_once();
            goto LABEL_270;
          }
        }
        else if ((v212 & 1) != 0)
        {
          OUTLINED_FUNCTION_5_116();
          OUTLINED_FUNCTION_10_106();
          OUTLINED_FUNCTION_3_122();
          OUTLINED_FUNCTION_32_43();
          OUTLINED_FUNCTION_6_113();
          if ((v120 & 1) != 0)
          {
            if ((v213 & 1) == 0)
            {
              if (qword_1ED1F46A8 == -1)
                goto LABEL_264;
              goto LABEL_325;
            }
            if (qword_1ED1F46A8 == -1)
              goto LABEL_213;
            goto LABEL_322;
          }
          if ((v213 & 1) != 0)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_270;
          }
          else if (qword_1ED1F46A8 == -1)
          {
            goto LABEL_270;
          }
          goto LABEL_285;
        }
LABEL_214:
        OUTLINED_FUNCTION_19_73();
        if ((v179 & 1) != 0)
        {
          if (v178 == -1)
            goto LABEL_270;
        }
        else if (v178 == -1)
        {
          goto LABEL_270;
        }
        goto LABEL_285;
      }
      swift_bridgeObjectRelease();
      v101 = v226;
LABEL_94:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17_93();
      sub_1AFAF6288(v121, &qword_1ED1F4040);
      OUTLINED_FUNCTION_7_110();
      (*((void (**)(uint64_t, float *))v101 + 1))(v232, v120);
      return 0;
    }
    swift_bridgeObjectRelease();
    v101 = v226;
    if ((v92 & 1) == 0)
    {
      v120 = v214;
      v121 = (uint64_t)v230;
      goto LABEL_94;
    }
    v102 = v85;
    sub_1B0005BCC();
    v103 = v73;
    v104 = v211;
    sub_1B0005B9C();
    v105 = *MEMORY[0x1E0DED4F0];
    v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 104);
    v107 = v205;
    v108 = v206;
    v106(v205, v105, v206);
    OUTLINED_FUNCTION_53_9(0.05);
    OUTLINED_FUNCTION_54_5();
    v106(v107, v105, v108);
    v109 = OUTLINED_FUNCTION_53_9(0.01);
    OUTLINED_FUNCTION_54_5();
    v239 = v109;
    sub_1B000595C();
    sub_1AFAF0DA8();
    v110 = v207;
    sub_1B00055F0();
    sub_1AFAF0DE4();
    v111 = v209;
    sub_1B0008458();
    (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v110, v111);
    v112 = v237;
    v235 = v236;
    v113 = v228;
    v114 = v210;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16))(v210, v104, v103);
    v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 88))(v114, v103);
    if (v115 == *v93)
    {
      if ((v212 & 1) != 0)
      {
        OUTLINED_FUNCTION_35_33();
        if ((v117 & 1) != 0)
        {
          if (v116)
          {
LABEL_36:
            OUTLINED_FUNCTION_0_142();
            OUTLINED_FUNCTION_8();
            OUTLINED_FUNCTION_42_21();
            OUTLINED_FUNCTION_23();
LABEL_155:
            OUTLINED_FUNCTION_3_12();
            OUTLINED_FUNCTION_26_61();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
            v158 = OUTLINED_FUNCTION_13_20();
            *(_OWORD *)(v158 + 16) = xmmword_1B00275A0;
            v141 = MEMORY[0x1E0DEA968];
            v159 = OUTLINED_FUNCTION_60_6(v158);
            *(_QWORD *)(v158 + 32) = v235;
            *(_QWORD *)(v158 + 40) = v112;
            *(_QWORD *)(v158 + 96) = v141;
            *(_QWORD *)(v158 + 104) = v159;
            v160 = v199;
            *(_QWORD *)(v158 + 64) = v159;
            *(_QWORD *)(v158 + 72) = v160;
            *(_QWORD *)(v158 + 80) = v217;
LABEL_168:
            OUTLINED_FUNCTION_45_13();
            OUTLINED_FUNCTION_14_103();
            OUTLINED_FUNCTION_32();
            OUTLINED_FUNCTION_13_106();
            v172 = OUTLINED_FUNCTION_19_50(v103);
            OUTLINED_FUNCTION_34_42(v172, &qword_1ED1F4040);
            OUTLINED_FUNCTION_7_110();
            (*((void (**)(uint64_t, unsigned int *))v226 + 1))(v232, v94);
            return v141;
          }
LABEL_35:
          swift_once();
          goto LABEL_36;
        }
        if (!v116)
          swift_once();
        goto LABEL_154;
      }
      OUTLINED_FUNCTION_35_33();
      if ((v130 & 1) != 0)
      {
        if (v129)
        {
LABEL_77:
          OUTLINED_FUNCTION_0_142();
          OUTLINED_FUNCTION_8();
          OUTLINED_FUNCTION_39_24();
          OUTLINED_FUNCTION_23();
LABEL_167:
          OUTLINED_FUNCTION_3_12();
          OUTLINED_FUNCTION_26_61();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v170 = OUTLINED_FUNCTION_13_20();
          *(_OWORD *)(v170 + 16) = xmmword_1B00275A0;
          v141 = MEMORY[0x1E0DEA968];
          v171 = OUTLINED_FUNCTION_60_6(v170);
          OUTLINED_FUNCTION_21_70(v171);
          goto LABEL_168;
        }
LABEL_76:
        swift_once();
        goto LABEL_77;
      }
      if (!v129)
        swift_once();
      goto LABEL_166;
    }
    if (v115 == *v94)
    {
      v94 = (unsigned int *)v214;
      v103 = v102;
      if ((v212 & 1) != 0)
      {
        OUTLINED_FUNCTION_19_73();
        if ((v125 & 1) != 0)
        {
          if (v124 == -1)
            goto LABEL_36;
          goto LABEL_35;
        }
        if (v124 != -1)
          swift_once();
LABEL_154:
        OUTLINED_FUNCTION_0_142();
        OUTLINED_FUNCTION_8();
        OUTLINED_FUNCTION_41_19();
        OUTLINED_FUNCTION_23();
        goto LABEL_155;
      }
      OUTLINED_FUNCTION_19_73();
      if ((v151 & 1) != 0)
      {
        if (v150 == -1)
          goto LABEL_77;
        goto LABEL_76;
      }
      if (v150 != -1)
        swift_once();
LABEL_166:
      OUTLINED_FUNCTION_0_142();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_40_23();
      OUTLINED_FUNCTION_23();
      goto LABEL_167;
    }
    v135 = v214;
    OUTLINED_FUNCTION_30_58();
    v136 = v102;
    if ((v137 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_73();
      if ((v139 & 1) != 0)
      {
        v140 = v232;
        if (v138 == -1)
          goto LABEL_161;
      }
      else
      {
        v140 = v232;
        if (v138 == -1)
        {
LABEL_161:
          OUTLINED_FUNCTION_0_142();
          v161 = OUTLINED_FUNCTION_8();
          OUTLINED_FUNCTION_48_12();
          OUTLINED_FUNCTION_36_35();
          v141 = sub_1B00054B8();

          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v162 = OUTLINED_FUNCTION_14_70();
          *(_OWORD *)(v162 + 16) = xmmword_1B00275C0;
          OUTLINED_FUNCTION_44_15();
          v166 = sub_1AFE74EAC(v163, v164, v165);
          v168 = v167;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v162 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v162 + 64) = sub_1AFAFB1D0();
          *(_QWORD *)(v162 + 32) = v166;
          *(_QWORD *)(v162 + 40) = v168;
          OUTLINED_FUNCTION_47_11();
          OUTLINED_FUNCTION_14_103();
          OUTLINED_FUNCTION_40();
          OUTLINED_FUNCTION_13_106();
          v169 = OUTLINED_FUNCTION_19_50(v136);
          OUTLINED_FUNCTION_34_42(v169, &qword_1ED1F4040);
          OUTLINED_FUNCTION_7_110();
          (*((void (**)(uint64_t, float *))v226 + 1))(v140, v135);
LABEL_187:
          OUTLINED_FUNCTION_19_50(v210);
          return v141;
        }
      }
      swift_once();
      goto LABEL_161;
    }
    OUTLINED_FUNCTION_19_73();
    if ((v156 & 1) != 0)
    {
      if (v155 == -1)
        goto LABEL_186;
    }
    else if (v155 == -1)
    {
LABEL_186:
      OUTLINED_FUNCTION_0_142();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_48_12();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_3_12();
      OUTLINED_FUNCTION_26_61();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
      v175 = OUTLINED_FUNCTION_13_20();
      *(_OWORD *)(v175 + 16) = xmmword_1B00275A0;
      v141 = MEMORY[0x1E0DEA968];
      v176 = OUTLINED_FUNCTION_60_6(v175);
      OUTLINED_FUNCTION_21_70(v176);
      OUTLINED_FUNCTION_45_13();
      OUTLINED_FUNCTION_14_103();
      OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_13_106();
      v177 = OUTLINED_FUNCTION_19_50(v102);
      OUTLINED_FUNCTION_34_42(v177, &qword_1ED1F4040);
      OUTLINED_FUNCTION_7_110();
      (*((void (**)(uint64_t, float *))v226 + 1))(v232, v135);
      goto LABEL_187;
    }
    swift_once();
    goto LABEL_186;
  }
  OUTLINED_FUNCTION_20_0();
  (*((void (**)(uint64_t, float *))v226 + 1))(v61, v214);
  sub_1AFAF6288(v53, &qword_1ED1F4080);
  return 0;
}

uint64_t sub_1AFE744C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1B00058D8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005BE4();
  v4 = sub_1B0005A7C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1AFE74568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  char v17;
  char v18;
  uint64_t v20;

  v20 = a2;
  v2 = sub_1B00058D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B0005B84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B0005B18();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005ADC();
  sub_1B0005AE8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1AFAF8704(&qword_1ED1F1C58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
  LOBYTE(v13) = sub_1B0008530();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) == 0)
  {
    sub_1B0005BE4();
    if (qword_1ED1F4070 != -1)
      swift_once();
    sub_1AFAF93A0();
    v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v2);
    sub_1B0005BE4();
    Date.weekday(in:)();
    v18 = v17;
    v16(v5, v2);
    __asm { BR              X10 }
  }
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v14 = (id)qword_1ED1F4470;
  v15 = sub_1B00054B8();

  return v15;
}

uint64_t sub_1AFE74C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  void (*v20)(char *, uint64_t);
  char v21;
  uint64_t v23;

  v4 = sub_1B00060E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4040);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B0005E6C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFAFB498(a1, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    sub_1AFAF6288((uint64_t)v13, &qword_1ED1F4040);
LABEL_6:
    v21 = 0;
    return v21 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  sub_1B0005E48();
  v18 = sub_1B0005E60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  if ((v18 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_6;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CEED10], v4);
  sub_1AFAF8704(&qword_1EEE74DB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEED38], MEMORY[0x1E0CEED50]);
  v19 = sub_1B0008530();
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v10, v4);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v21 = v19 ^ 1;
  return v21 & 1;
}

uint64_t sub_1AFE74EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((String.beginsWithFirstArgument.getter() & 1) != 0)
  {
    sub_1AFAF9424();
    return sub_1B0008BFC();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a3;
}

uint64_t sub_1AFE74F14()
{
  return sub_1AFE744C8() & 1;
}

unint64_t OUTLINED_FUNCTION_66_6()
{
  return 0xD00000000000001DLL;
}

void sub_1AFE74F44()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 2;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0050E80;
  v33 = 6;
  v26 = 0xE500000000000000;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x7970736957;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFB80478();
  sub_1AFB80478();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #6.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 1086324736;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1166843904;
  *(_QWORD *)&v9 = 0x41F0000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 48, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4000000000000000,
    v9,
    0x3D23D70A3CA3D70ALL,
    1097147068,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4094035940A00000);
}

void UltravioletHourlyRectangularContentView.status.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UltravioletHourlyRectangularContentView(0);
  sub_1AFADA740(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationDataStatus);
}

uint64_t type metadata accessor for UltravioletHourlyRectangularContentView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE756F8);
}

void UltravioletHourlyRectangularContentView.init(status:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for UltravioletHourlyRectangularContentView(0);
  sub_1AFC757F4(a1, (uint64_t)a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationDataStatus);
}

void UltravioletHourlyRectangularContentView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  ValueMetadata *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  __int128 v45;
  uint64_t v46;

  v36[2] = a1;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75680);
  v36[0] = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_9();
  v4 = v3 - v2;
  v36[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75688);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  v9 = type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v13 = v12 - v11;
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  v18 = OUTLINED_FUNCTION_0_45();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v36 - v23;
  v25 = type metadata accessor for UltravioletHourlyRectangularContentView(0);
  sub_1AFADA740(v1 + *(int *)(v25 + 20), v17, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationDataStatus);
  if (__swift_getEnumTagSinglePayload(v17, 2, v18))
  {
    sub_1AFAE2D74(v17, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationDataStatus);
    KeyPath = swift_getKeyPath();
    v27 = swift_getKeyPath();
    if (qword_1EEE70148 != -1)
      swift_once();
    v38 = (ValueMetadata *)KeyPath;
    LOBYTE(v39) = 0;
    v40 = v27;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = xmmword_1EEE72F20;
    v46 = qword_1EEE72F30;
    v28 = sub_1AFE77878();
    sub_1B0007E28();
    sub_1AFACCD50(KeyPath, 0);
    sub_1AFBB4D8C(v27, 0, 0, 0, 0);
    v29 = v36[0];
    v30 = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36[0] + 16))(v8, v4, v37);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB7034((uint64_t)&unk_1EEE75698);
    v38 = &type metadata for UltravioletHourlyRectangularContentView.Placeholder;
    v39 = v28;
    OUTLINED_FUNCTION_18_2();
    sub_1B0007918();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v4, v30);
  }
  else
  {
    sub_1AFC757F4(v17, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationViewModel);
    sub_1AFADA740((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationViewModel);
    v31 = swift_getKeyPath();
    v32 = swift_getKeyPath();
    *(_QWORD *)v13 = v31;
    *(_BYTE *)(v13 + 8) = 0;
    *(_QWORD *)(v13 + 16) = v32;
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0;
    *(_BYTE *)(v13 + 48) = 0;
    sub_1AFC757F4((uint64_t)v21, v13 + *(int *)(v9 + 24), (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationViewModel);
    v33 = v13 + *(int *)(v9 + 28);
    if (qword_1EEE70148 != -1)
      swift_once();
    v34 = qword_1EEE72F30;
    *(_OWORD *)v33 = xmmword_1EEE72F20;
    *(_QWORD *)(v33 + 16) = v34;
    sub_1AFADA740(v13, v8, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB7034((uint64_t)&unk_1EEE75698);
    v35 = sub_1AFE77878();
    v38 = &type metadata for UltravioletHourlyRectangularContentView.Placeholder;
    v39 = v35;
    OUTLINED_FUNCTION_18_2();
    sub_1B0007918();
    sub_1AFAE2D74(v13, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
    sub_1AFAE2D74((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for UltravioletComplicationViewModel);
  }
}

void sub_1AFE75BC0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;

  v2 = v1;
  v36 = a1;
  v3 = sub_1B00079D8();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75850);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75858);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75860);
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75868);
  MEMORY[0x1E0C80A78](v35);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B000781C();
  v31 = type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
  v18 = *(_QWORD *)(v2 + *(int *)(v31 + 28) + 8);
  *(_QWORD *)v8 = v17;
  *((_QWORD *)v8 + 1) = v18;
  v8[16] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75870);
  sub_1AFE75F24(v2, (uint64_t)&v8[*(int *)(v19 + 44)]);
  v20 = sub_1AFE76C24();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  LOBYTE(v17) = sub_1B0007AD4();
  sub_1AFAF869C((uint64_t)v8, (uint64_t)v11, &qword_1EEE75850);
  v27 = &v11[*(int *)(v9 + 36)];
  *v27 = v17;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_1AFACE0DC((uint64_t)v8, &qword_1EEE75850);
  sub_1B00079B4();
  v28 = sub_1AFBB720C((uint64_t)&unk_1EEE75878);
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
  sub_1AFACE0DC((uint64_t)v11, &qword_1EEE75858);
  if (qword_1ED1EF7B8 != -1)
    swift_once();
  v39 = xmmword_1ED1FEC58;
  v37 = v9;
  v38 = v28;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  sub_1B0007EC4();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
  sub_1AFBE3944();
  *(_QWORD *)&v39 = v29;
  *((_QWORD *)&v39 + 1) = v30;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFACE0DC((uint64_t)v16, &qword_1EEE75868);
}

uint64_t sub_1AFE75F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  Swift::Double v17;
  Swift::OpaquePointer v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE v26[12];
  int v27;
  _BYTE *v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75888);
  MEMORY[0x1E0C80A78](v4);
  v28 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v26[-v7];
  v9 = type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 24));
  sub_1AFADA740(a1, (uint64_t)v12, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  sub_1AFC757F4((uint64_t)v12, v15 + v14, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
  type metadata accessor for UltravioletComplicationViewModel();
  if (qword_1ED1EE560 != -1)
    swift_once();
  v16 = (void *)qword_1ED1EE558;
  swift_bridgeObjectRetain();
  v17 = (double)sub_1B0006460();
  v18._rawValue = v16;
  v19 = ColorSpectrum.color(for:in:)(v18, v17);
  swift_bridgeObjectRelease();
  sub_1AFADA740(a1, (uint64_t)v12, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
  v20 = swift_allocObject();
  sub_1AFC757F4((uint64_t)v12, v20 + v14, type metadata accessor for UltravioletHourlyRectangularContentView.Content);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v8 = sub_1B0007744();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75890);
  sub_1AFE76750(a1, (uint64_t)&v8[*(int *)(v22 + 44)]);
  v23 = v28;
  sub_1AFAF869C((uint64_t)v8, (uint64_t)v28, &qword_1EEE75888);
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 9) = v27;
  *(_BYTE *)(a2 + 10) = 0;
  *(_QWORD *)(a2 + 16) = sub_1AFE77C24;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = sub_1AFE77D10;
  *(_QWORD *)(a2 + 48) = v20;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75898);
  sub_1AFAF869C((uint64_t)v23, a2 + *(int *)(v24 + 48), &qword_1EEE75888);
  sub_1AFACF5C4(KeyPath, 0);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1AFACE0DC((uint64_t)v8, &qword_1EEE75888);
  sub_1AFACE0DC((uint64_t)v23, &qword_1EEE75888);
  sub_1AFACCD50(KeyPath, 0);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1AFE76210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  if (qword_1EEE6FFD8 != -1)
    swift_once();
  if (byte_1EEE92059 == 1)
  {
    v2 = sub_1B0007744();
    sub_1AFE76574((uint64_t)&v38);
    v3 = v39;
    v4 = v40;
    v31 = v2;
    v32 = 0;
    LOBYTE(v33) = 1;
    v34 = v38;
    v35 = v39;
    LOBYTE(v36) = v40;
    *((_QWORD *)&v36 + 1) = v41;
    swift_retain();
    sub_1AFBB755C(v3, *((uint64_t *)&v3 + 1), v4);
    swift_bridgeObjectRetain();
    sub_1AFBB20A4((uint64_t)&v31, (uint64_t)&v38);
    v29 = v39;
    v30 = v38;
    v27 = v40;
    v28 = *((_QWORD *)&v39 + 1);
    v5 = v42;
    v26 = v41;
    v6 = v43;
    v7 = v44;
    v8 = v45;
    swift_release();
    sub_1AFAED640(v3, *((uint64_t *)&v3 + 1), v4);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AFAED640(v3, *((uint64_t *)&v3 + 1), v4);
    result = swift_bridgeObjectRelease();
    v11 = v26;
    v10 = v27;
    v13 = v28;
    v12 = v29;
    v14 = v30;
  }
  else
  {
    type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v15 = (id)qword_1ED1F4470;
    sub_1B00054B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B00275C0;
    type metadata accessor for UltravioletComplicationViewModel();
    v17 = sub_1AFBE3E30();
    v19 = v18;
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 64) = sub_1AFAFB1D0();
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    sub_1B00085A8();
    swift_bridgeObjectRelease();
    sub_1AFAF9424();
    v20 = sub_1B0008BE4();
    v22 = v21;
    swift_bridgeObjectRelease();
    v31 = sub_1B0007D5C();
    v32 = v24;
    v33 = v23 & 1;
    v34 = v25;
    v35 = 0u;
    v36 = 0u;
    v37 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C70);
    sub_1AFBB756C((uint64_t)&unk_1EEE70C78);
    result = sub_1B0007918();
    v14 = v20;
    v13 = *((_QWORD *)&v39 + 1);
    v12 = v22;
    v10 = v40;
    v11 = v41;
    v5 = v42;
    v6 = v43;
    v7 = v44;
    v8 = v45;
  }
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  return result;
}

uint64_t sub_1AFE76574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
  type metadata accessor for UltravioletComplicationViewModel();
  sub_1B000646C();
  sub_1B0006448();
  v2 = sub_1B0008098();
  sub_1AFBE3E30();
  sub_1AFAF9424();
  v3 = sub_1B0007D5C();
  v5 = v4;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v7 = v6 & 1;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v6 & 1;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  sub_1AFBB755C(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1AFAED640(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE76694@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  type metadata accessor for UltravioletHourlyRectangularContentView.Content(0);
  type metadata accessor for UltravioletComplicationViewModel();
  sub_1B000646C();
  sub_1B000643C();
  sub_1AFAF9424();
  sub_1B0008BE4();
  swift_bridgeObjectRelease();
  result = sub_1B0007D5C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1AFE76750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75828);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - v6;
  sub_1AFE343EC((uint64_t)v44);
  v35 = v44[0];
  v41 = v44[1];
  v34 = v44[2];
  v40 = v44[3];
  v33 = v45;
  v8 = v46;
  v9 = v47;
  v10 = v48;
  v11 = v49;
  v12 = v50;
  v13 = v52;
  v39 = v51;
  v14 = a1 + *(int *)(type metadata accessor for UltravioletHourlyRectangularContentView.Content(0) + 24);
  v42 = *(_QWORD *)(v14 + *(int *)(type metadata accessor for UltravioletComplicationViewModel() + 32));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F40);
  sub_1AFBB756C((uint64_t)&unk_1EEE75830);
  v15 = sub_1B00088C0();
  v16 = *(_QWORD *)(v15 + 16);
  v42 = 0;
  v43 = v16;
  swift_getKeyPath();
  *(_QWORD *)(swift_allocObject() + 16) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75838);
  sub_1AFDB1598();
  sub_1AFBB756C((uint64_t)&unk_1EEE75840);
  v17 = v7;
  sub_1B0008278();
  if (qword_1EEE70150 != -1)
    swift_once();
  v18 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v19 = qword_1EEE92170;
  v20 = v36;
  v21 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v22 = v38;
  v23 = v17;
  v32 = v17;
  v24 = v37;
  v21(v38, v23, v37);
  v25 = v41;
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v25;
  v26 = v40;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 32) = v33;
  *(_QWORD *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v39;
  *(_QWORD *)(a2 + 88) = v13;
  *(_QWORD *)(a2 + 96) = 0x3FF0000000000000;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758A0);
  v21((char *)(a2 + *(int *)(v27 + 48)), v22, v24);
  v28 = (uint64_t *)(a2 + *(int *)(v27 + 64));
  *v28 = v18;
  v28[1] = v19;
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain_n();
  v29(v32, v24);
  swift_release();
  v29(v22, v24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AFE76B20(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v5 = *a1;
  if (qword_1EEE70150 != -1)
    swift_once();
  v6 = qword_1EEE92168;
  if (qword_1EEE70158 == -1)
  {
    if ((v5 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_once();
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v5 < *(_QWORD *)(a2 + 16))
  {
    v7 = qword_1EEE92170;
    swift_retain();
    v8 = swift_bridgeObjectRetain();
    sub_1AFE3CBC8(v8, 0, (uint64_t)&v13);
    v9 = v13;
    v10 = v17;
    v11 = v14 & 1;
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v7;
    *(_QWORD *)(a3 + 16) = v9;
    *(_BYTE *)(a3 + 24) = v11;
    v12 = v16;
    *(_OWORD *)(a3 + 32) = v15;
    *(_OWORD *)(a3 + 48) = v12;
    *(_QWORD *)(a3 + 64) = v10;
    return;
  }
LABEL_9:
  __break(1u);
}

double sub_1AFE76C24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  double v5;
  __int128 v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  char v11;
  _BYTE v12[40];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1AFACF5C4(*(_QWORD *)v0, v2);
  sub_1AFB4A850();
  v4 = v3;
  sub_1AFACCD50(v1, v2);
  if ((v4 & 1) != 0)
  {
    v5 = *(double *)(v0
                   + *(int *)(type metadata accessor for UltravioletHourlyRectangularContentView.Content(0) + 28)
                   + 16);
    v11 = *(_BYTE *)(v0 + 48);
    v6 = *(_OWORD *)(v0 + 32);
    v9 = *(_OWORD *)(v0 + 16);
    v10 = v6;
    sub_1AFDC2F60((uint64_t)&v9, (uint64_t)v12);
  }
  else
  {
    v7 = *(_OWORD *)(v0 + 32);
    v9 = *(_OWORD *)(v0 + 16);
    v10 = v7;
    v11 = *(_BYTE *)(v0 + 48);
    sub_1AFDC2F60((uint64_t)&v9, (uint64_t)v12);
    v5 = 0.0;
  }
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  return v5;
}

void sub_1AFE76D78(uint64_t a1@<X8>)
{
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _OWORD v38[5];
  _QWORD __dst[11];

  v35 = a1;
  v32 = sub_1B00079D8();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE757D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE757E0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE757E8);
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE757F0);
  MEMORY[0x1E0C80A78](v34);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, v1, 0x50uLL);
  v16 = sub_1B000781C();
  v17 = __dst[8];
  *(_QWORD *)v7 = v16;
  *((_QWORD *)v7 + 1) = v17;
  v7[16] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE757F8);
  sub_1AFE771BC(__dst, (uint64_t *)&v7[*(int *)(v18 + 44)]);
  memcpy(v38, __dst, sizeof(v38));
  v19 = sub_1AFBB48D4();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = sub_1B0007AD4();
  sub_1AFAF869C((uint64_t)v7, (uint64_t)v10, &qword_1EEE757D8);
  v27 = &v10[*(int *)(v8 + 36)];
  *v27 = v26;
  *((double *)v27 + 1) = v19;
  *((_QWORD *)v27 + 2) = v21;
  *((_QWORD *)v27 + 3) = v23;
  *((_QWORD *)v27 + 4) = v25;
  v27[40] = 0;
  sub_1AFACE0DC((uint64_t)v7, &qword_1EEE757D8);
  sub_1B00079B4();
  v28 = sub_1AFBB720C((uint64_t)&unk_1EEE75800);
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32);
  sub_1AFACE0DC((uint64_t)v10, &qword_1EEE757E0);
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  if (qword_1ED1EF7B8 != -1)
    swift_once();
  v29 = xmmword_1ED1FEC58;
  swift_bridgeObjectRetain();
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v38[0] = v29;
  v36 = v8;
  v37 = v28;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  sub_1B0007EC4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  if (qword_1ED1F1020 != -1)
    swift_once();
  v30 = xmmword_1ED1FED58;
  swift_bridgeObjectRetain();
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v38[0] = v30;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFACE0DC((uint64_t)v15, &qword_1EEE757F0);
}

uint64_t sub_1AFE771BC@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75810);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v20 - v8;
  if ((a1[49] & 1) != 0)
  {
    sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v12 = (id)qword_1ED1F4470;
    v13 = sub_1B00054B8();
    v15 = v14;

    v20[1] = v13;
    v20[2] = v15;
    sub_1AFAF9424();
    v10 = sub_1B0008BE4();
    v11 = v16;
    swift_bridgeObjectRelease();
    sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  *(_QWORD *)v9 = sub_1B0007744();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75818);
  sub_1AFE7740C(a1, &v9[*(int *)(v17 + 44)]);
  sub_1AFAF869C((uint64_t)v9, (uint64_t)v6, &qword_1EEE75810);
  *a2 = v10;
  a2[1] = v11;
  a2[2] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75820);
  sub_1AFAF869C((uint64_t)v6, (uint64_t)a2 + *(int *)(v18 + 48), &qword_1EEE75810);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC((uint64_t)v9, &qword_1EEE75810);
  sub_1AFACE0DC((uint64_t)v6, &qword_1EEE75810);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE7740C@<X0>(const void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75828);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v10 = sub_1B0005B84();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  sub_1B0005B78();
  v14 = sub_1AFEB62D8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v27 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74F40);
  sub_1AFBB756C((uint64_t)&unk_1EEE75830);
  v15 = sub_1B00088C0();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  v27 = 0;
  v28 = v16;
  swift_getKeyPath();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  memcpy((void *)(v17 + 24), a1, 0x50uLL);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75838);
  sub_1AFDB1598();
  sub_1AFBB756C((uint64_t)&unk_1EEE75840);
  sub_1B0008278();
  if (qword_1EEE70150 != -1)
    swift_once();
  v18 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v19 = qword_1EEE92170;
  v20 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v20(v6, v9, v3);
  v21 = v26;
  v20(v26, v6, v3);
  v22 = (uint64_t *)&v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75848) + 48)];
  *v22 = v18;
  v22[1] = v19;
  v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  swift_retain_n();
  v23(v9, v3);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v23)(v6, v3);
}

void sub_1AFE7773C(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v7 = *a1;
  if (qword_1EEE70150 != -1)
    swift_once();
  v8 = qword_1EEE92168;
  if (qword_1EEE70158 == -1)
  {
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_once();
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_5:
  if (v7 < *(_QWORD *)(a2 + 16))
  {
    v9 = qword_1EEE92170;
    v10 = *(_BYTE *)(a3 + 49);
    swift_retain();
    v11 = swift_bridgeObjectRetain();
    sub_1AFE3CBC8(v11, v10, (uint64_t)&v16);
    v12 = v16;
    v13 = v20;
    v14 = v17 & 1;
    *(_QWORD *)a4 = v8;
    *(_QWORD *)(a4 + 8) = v9;
    *(_QWORD *)(a4 + 16) = v12;
    *(_BYTE *)(a4 + 24) = v14;
    v15 = v19;
    *(_OWORD *)(a4 + 32) = v18;
    *(_OWORD *)(a4 + 48) = v15;
    *(_QWORD *)(a4 + 64) = v13;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t type metadata accessor for UltravioletHourlyRectangularContentView.Content(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE75798);
}

unint64_t sub_1AFE77878()
{
  unint64_t result;

  result = qword_1EEE75690;
  if (!qword_1EEE75690)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D624, &type metadata for UltravioletHourlyRectangularContentView.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1EEE75690);
  }
  return result;
}

uint64_t sub_1AFE778B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for UltravioletHourlyRectangularContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE778D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_11_7();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_6_5(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for UltravioletHourlyRectangularContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE7793C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_11_7();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return OUTLINED_FUNCTION_5_4(v10, a2, a2, v9);
}

unint64_t sub_1AFE779A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE75730;
  if (!qword_1EEE75730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEE75738);
    sub_1AFBB7034((uint64_t)&unk_1EEE75698);
    v3 = v2;
    v4[2] = &type metadata for UltravioletHourlyRectangularContentView.Placeholder;
    v4[3] = sub_1AFE77878();
    v4[0] = v3;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE75730);
  }
  return result;
}

uint64_t sub_1AFE77A4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE77A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = OUTLINED_FUNCTION_0_45();
    return OUTLINED_FUNCTION_6_5(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AFE77AB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE77AC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_0_45();
    return OUTLINED_FUNCTION_5_4(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AFE77B20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UltravioletComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UltravioletHourlyRectangularContentView.Placeholder()
{
  return &type metadata for UltravioletHourlyRectangularContentView.Placeholder;
}

uint64_t sub_1AFE77BB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE77BC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE77BD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AFACCD50(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  sub_1AFBB4D8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocObject();
}

void sub_1AFE77C14(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFE7773C(a1, *(_QWORD *)(v2 + 16), v2 + 24, a2);
}

uint64_t sub_1AFE77C24()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_114();
  return sub_1AFE76210(v0);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UltravioletHourlyRectangularContentView.Content(0)
                                      - 8)
                          + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  sub_1AFACCD50(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_1AFBB4D8C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
  OUTLINED_FUNCTION_0_45();
  v3 = sub_1B0005B84();
  OUTLINED_FUNCTION_0_24(v3);
  v4 = sub_1B0006478();
  OUTLINED_FUNCTION_0_24(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AFE77D10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_114();
  return sub_1AFE76694(v0);
}

uint64_t sub_1AFE77D2C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1AFE77D50(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFE76B20(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1AFE77D5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE758A8;
  if (!qword_1EEE758A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE757F0);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE757E0);
    v4[3] = sub_1AFBB720C((uint64_t)&unk_1EEE75800);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE758A8);
  }
  return result;
}

unint64_t sub_1AFE77E34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE758B0;
  if (!qword_1EEE758B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75868);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75858);
    v4[3] = sub_1AFBB720C((uint64_t)&unk_1EEE75878);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE758B0);
  }
  return result;
}

uint64_t static Image.TemplateRenderingMode.macSafeOriginal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CDF760];
  v3 = sub_1B00080D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void destroy for CurrentObservationsHeaderView(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for CurrentObservationsHeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v19;
  void *v20;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = (void *)a2[14];
  v11 = (void *)a2[15];
  a1[14] = v10;
  a1[15] = v11;
  v12 = (void *)a2[16];
  v19 = (void *)a2[17];
  a1[16] = v12;
  a1[17] = v19;
  v20 = (void *)a2[18];
  a1[18] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v10;
  v14 = v11;
  v15 = v12;
  v16 = v19;
  v17 = v20;
  return a1;
}

_QWORD *assignWithCopy for CurrentObservationsHeaderView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[14];
  v5 = (void *)a1[14];
  a1[14] = v4;
  v6 = v4;

  v7 = (void *)a2[15];
  v8 = (void *)a1[15];
  a1[15] = v7;
  v9 = v7;

  v10 = (void *)a2[16];
  v11 = (void *)a1[16];
  a1[16] = v10;
  v12 = v10;

  v13 = (void *)a2[17];
  v14 = (void *)a1[17];
  a1[17] = v13;
  v15 = v13;

  v16 = (void *)a2[18];
  v17 = (void *)a1[18];
  a1[18] = v16;
  v18 = v16;

  return a1;
}

void *__swift_memcpy152_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for CurrentObservationsHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v10 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  v11 = *(void **)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);

  v12 = *(void **)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);

  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentObservationsHeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentObservationsHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentObservationsHeaderView()
{
  return &type metadata for CurrentObservationsHeaderView;
}

uint64_t sub_1AFE783B4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFE783C4(uint64_t *a1@<X8>)
{
  const void *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD __dst[19];

  memcpy(__dst, v1, sizeof(__dst));
  *a1 = sub_1B00082E4();
  a1[1] = v3;
  v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758B8) + 44);
  *(_QWORD *)v4 = sub_1B0007744();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758C0);
  sub_1AFE7843C(__dst, (uint64_t)&v4[*(int *)(v5 + 44)]);
}

void sub_1AFE7843C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  int *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, uint64_t);
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[30];
  _BYTE v103[216];
  _BYTE v104[232];
  _BYTE v105[248];

  v83 = a1;
  v91 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758C8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758D0);
  MEMORY[0x1E0C80A78](v87);
  v85 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758D8);
  MEMORY[0x1E0C80A78](v88);
  v86 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758E0);
  v101 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v99 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v89 = (char *)&v83 - v10;
  v98 = sub_1B00079D8();
  v84 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v92 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758E8);
  v96 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v94 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v95 = (char *)&v83 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758F0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE758F8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75900);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v83 - v25;
  v97 = (uint64_t)&v83 - v25;
  sub_1AFE78B60((uint64_t)a1, (uint64_t)v17);
  v27 = sub_1B0007AF8();
  sub_1B0007264();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_1AFAF2558((uint64_t)v17, (uint64_t)v20, &qword_1EEE758F0);
  v36 = &v20[*(int *)(v18 + 36)];
  *v36 = v27;
  *((_QWORD *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_1AFACB308((uint64_t)v17, &qword_1EEE758F0);
  LOBYTE(v17) = sub_1B0007B04();
  sub_1B0007264();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_1AFAF2558((uint64_t)v20, (uint64_t)v23, &qword_1EEE758F8);
  v45 = &v23[*(int *)(v21 + 36)];
  v93 = v23;
  *v45 = (char)v17;
  *((_QWORD *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_1AFACB308((uint64_t)v20, &qword_1EEE758F8);
  sub_1AFAE8274((uint64_t)v23, (uint64_t)v26, &qword_1EEE75900);
  v46 = sub_1B000781C();
  v47 = v83;
  sub_1AFE79158(v83, (uint64_t)v103);
  v104[224] = 1;
  memcpy(&v104[7], v103, 0xD3uLL);
  v102[0] = v46;
  v102[1] = 0;
  LOBYTE(v102[2]) = 1;
  memcpy((char *)&v102[2] + 1, v104, 0xDAuLL);
  v48 = v92;
  sub_1B00079C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75908);
  sub_1AFAD71A0(&qword_1EEE75910, &qword_1EEE75908, MEMORY[0x1E0CDFCC0]);
  v49 = v94;
  sub_1B0007EF4();
  v84 = *(_QWORD *)(v84 + 8);
  ((void (*)(char *, uint64_t))v84)(v48, v98);
  memcpy(v105, v102, 0xEBuLL);
  sub_1AFE79BE8((uint64_t)v105);
  v50 = v95;
  v51 = v96;
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v49, v100);
  *(_QWORD *)v5 = sub_1B0007828();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75918);
  sub_1AFE79648(v47, (uint64_t)&v5[*(int *)(v52 + 44)]);
  v53 = v85;
  sub_1AFAF2558((uint64_t)v5, v85, &qword_1EEE758C8);
  *(_QWORD *)(v53 + *(int *)(v87 + 36)) = 0x3FF0000000000000;
  sub_1AFACB308((uint64_t)v5, &qword_1EEE758C8);
  LOBYTE(v21) = sub_1B0007B04();
  sub_1B0007264();
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v61 = v60;
  v62 = v86;
  sub_1AFAF2558(v53, v86, &qword_1EEE758D0);
  v63 = v62 + *(int *)(v88 + 36);
  *(_BYTE *)v63 = v21;
  *(_QWORD *)(v63 + 8) = v55;
  *(_QWORD *)(v63 + 16) = v57;
  *(_QWORD *)(v63 + 24) = v59;
  *(_QWORD *)(v63 + 32) = v61;
  *(_BYTE *)(v63 + 40) = 0;
  sub_1AFACB308(v53, &qword_1EEE758D0);
  v64 = v92;
  sub_1B00079C0();
  sub_1AFE79E20(&qword_1EEE75920, &qword_1EEE758D8);
  v65 = v99;
  sub_1B0007EF4();
  ((void (*)(char *, uint64_t))v84)(v64, v98);
  sub_1AFACB308(v62, &qword_1EEE758D8);
  v66 = v101;
  v67 = v89;
  v68 = v65;
  v69 = v65;
  v70 = v90;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v89, v69, v90);
  v71 = (uint64_t)v93;
  sub_1AFAF2558(v97, (uint64_t)v93, &qword_1EEE75900);
  v72 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v73 = v94;
  v74 = v100;
  v72(v94, v50, v100);
  v75 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v75(v68, v67, v70);
  v76 = v91;
  sub_1AFAF2558(v71, v91, &qword_1EEE75900);
  v77 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75938);
  v78 = v73;
  v72((char *)(v76 + v77[12]), v73, v74);
  v79 = v76 + v77[16];
  *(_QWORD *)v79 = 0x4020000000000000;
  *(_BYTE *)(v79 + 8) = 0;
  v80 = v99;
  v75((char *)(v76 + v77[20]), v99, v70);
  v81 = *(void (**)(char *, uint64_t))(v101 + 8);
  v81(v67, v70);
  v82 = *(void (**)(char *, uint64_t))(v96 + 8);
  v82(v95, v74);
  sub_1AFACB308(v97, &qword_1EEE75900);
  v81(v80, v70);
  v82(v78, v74);
  sub_1AFACB308((uint64_t)v93, &qword_1EEE75900);
}

void sub_1AFE78B60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75948);
  MEMORY[0x1E0C80A78](v54);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72080);
  MEMORY[0x1E0C80A78](v48);
  v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1B00080E0();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1B00080A4();
  v10 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72088);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75950);
  MEMORY[0x1E0C80A78](v46);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75958);
  MEMORY[0x1E0C80A78](v50);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75960);
  MEMORY[0x1E0C80A78](v53);
  MEMORY[0x1E0C80A78](v20);
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v25 = v23 & 0xFFFFFFFFFFFFLL;
  if (v25)
  {
    v43 = v22;
    v44 = (uint64_t)&v43 - v21;
    swift_bridgeObjectRetain();
    sub_1B0008098();
    v26 = *MEMORY[0x1E0CDF760];
    v27 = sub_1B00080D4();
    v45 = a2;
    v28 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v15, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v28);
    sub_1B00080B0();
    swift_release();
    sub_1AFACB308((uint64_t)v15, &qword_1EEE72088);
    v29 = v47;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDF6F8], v47);
    v30 = sub_1B00080EC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
    v32 = v51;
    v31 = v52;
    v33 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v49, *MEMORY[0x1E0CDF7C0], v52);
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v7 + *(int *)(v48 + 28), v33, v31);
    *v7 = KeyPath;
    sub_1AFAF2558((uint64_t)v7, (uint64_t)&v17[*(int *)(v46 + 36)], &qword_1EEE72080);
    *(_QWORD *)v17 = v30;
    *((_QWORD *)v17 + 1) = 0;
    *((_WORD *)v17 + 8) = 1;
    swift_retain();
    sub_1AFACB308((uint64_t)v7, &qword_1EEE72080);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
    swift_release();
    sub_1B00082E4();
    sub_1B0007360();
    sub_1AFAF2558((uint64_t)v17, (uint64_t)v19, &qword_1EEE75950);
    v35 = &v19[*(int *)(v50 + 36)];
    v36 = v56;
    *(_OWORD *)v35 = v55;
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v57;
    sub_1AFACB308((uint64_t)v17, &qword_1EEE75950);
    sub_1AFE79E20(&qword_1EEE75968, &qword_1EEE75958);
    v37 = v43;
    sub_1B0007EDC();
    sub_1AFACB308((uint64_t)v19, &qword_1EEE75958);
    v38 = v44;
    sub_1AFAE8274(v37, v44, &qword_1EEE75960);
    sub_1AFAF2558(v38, (uint64_t)v5, &qword_1EEE75960);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75978);
    sub_1AFE79F14();
    sub_1AFE79FA0(&qword_1EEE75988, &qword_1EEE75978);
    sub_1B0007918();
    sub_1AFACB308(v38, &qword_1EEE75960);
  }
  else
  {
    sub_1B00082E4();
    sub_1B0007360();
    v39 = v55;
    v40 = BYTE8(v55);
    v41 = v56;
    v42 = BYTE8(v56);
    *(_QWORD *)v5 = 0;
    v5[8] = 1;
    *((_QWORD *)v5 + 2) = v39;
    v5[24] = v40;
    *((_QWORD *)v5 + 4) = v41;
    v5[40] = v42;
    *((_OWORD *)v5 + 3) = v57;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75978);
    sub_1AFE79F14();
    sub_1AFE79FA0(&qword_1EEE75988, &qword_1EEE75978);
    sub_1B0007918();
  }
}

uint64_t sub_1AFE79158@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t KeyPath;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  char v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  __int16 v78;
  uint64_t v79;
  char v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  __int16 v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  __int16 v101;
  uint64_t *v102[13];

  v3 = (void *)a1[14];
  v2 = (void *)a1[15];
  v64 = (id)a1[16];
  objc_msgSend(v3, sel_wu_scaledValueForValue_, 32.0);
  v5 = v4;
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v6 = sub_1B0007D5C();
  v8 = v7;
  v10 = v9 & 1;
  v11 = v3;
  sub_1B0007C6C();
  v12 = sub_1B0007D08();
  v67 = v13;
  v68 = v12;
  v66 = v14;
  v69 = v15;
  swift_release();
  sub_1AFAED640(v6, v8, v10);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  objc_msgSend(v2, sel_wu_scaledValueForValue_, 20.0);
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_1B0007D5C();
  v20 = v19;
  v22 = v21 & 1;
  v23 = v2;
  sub_1B0007C6C();
  v24 = sub_1B0007D08();
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_1AFAED640(v18, v20, v22);
  swift_bridgeObjectRelease();
  v58 = (id)objc_opt_self();
  v29 = objc_msgSend(v58, sel_labelColor);
  v30 = objc_msgSend(v29, sel_colorWithAlphaComponent_, 0.8);

  MEMORY[0x1B5E01F8C](v30);
  v31 = sub_1B0007CCC();
  v61 = v32;
  v62 = v31;
  v60 = v33;
  v63 = v34;
  swift_release();
  sub_1AFAED640(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  v59 = swift_getKeyPath();
  objc_msgSend(v64, sel_wu_scaledValueForValue_, 16.0);
  v36 = v35;
  swift_bridgeObjectRetain();
  v37 = sub_1B0007D5C();
  v39 = v38;
  LOBYTE(v24) = v40 & 1;
  v41 = v64;
  sub_1B0007C6C();
  v42 = sub_1B0007D08();
  v44 = v43;
  v46 = v45;
  swift_release();
  v47 = v46 & 1;
  sub_1AFAED640(v37, v39, v24);
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v58, sel_labelColor);
  v49 = objc_msgSend(v48, sel_colorWithAlphaComponent_, 0.8);

  MEMORY[0x1B5E01F8C](v49);
  v50 = sub_1B0007CCC();
  v52 = v51;
  LOBYTE(v49) = v53;
  v55 = v54;
  swift_release();
  sub_1AFAED640(v42, v44, v47);
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_wu_scaledValueForValue_, 20.0);
  v99 = v5;
  v100 = 0;
  v101 = 256;
  v92 = v68;
  v93 = v67;
  v94 = v66 & 1;
  v95 = v69;
  v96 = KeyPath;
  v97 = 1;
  v98 = 0;
  v102[0] = &v99;
  v102[1] = &v92;
  v89 = v17;
  v90 = 0;
  v91 = 256;
  v82 = v62;
  v83 = v61;
  v84 = v60 & 1;
  v85 = v63;
  v86 = v59;
  v87 = 1;
  v88 = 0;
  v102[2] = &v89;
  v102[3] = &v82;
  v79 = v36;
  v80 = 0;
  v81 = 256;
  v74 = v50;
  v75 = v52;
  v76 = v49 & 1;
  v77 = v55;
  v78 = 256;
  v102[4] = &v79;
  v102[5] = &v74;
  v71 = v56;
  v72 = 0;
  v73 = 256;
  v102[6] = &v71;
  sub_1AFD4DAC4(v102, a2);
  sub_1AFAED640(v74, v75, v76);
  swift_bridgeObjectRelease();
  sub_1AFAED640(v82, v83, v84);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AFAED640(v92, v93, v94);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE79648@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  __int16 v79;
  uint64_t v80;
  char v81;
  __int16 v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  __int16 v92;
  uint64_t v93;
  char v94;
  __int16 v95;
  _QWORD v96[8];
  _QWORD v97[14];
  _BYTE v98[16];
  _BYTE v99[16];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;

  v71 = a2;
  v63 = type metadata accessor for TemperatureHighLowText();
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v66 = (uint64_t)&v62 - v5;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75940);
  MEMORY[0x1E0C80A78](v68);
  v65 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73638);
  MEMORY[0x1E0C80A78](v7);
  v70 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t)&v62 - v10;
  v11 = (void *)a1[14];
  v12 = (void *)a1[15];
  v13 = (void *)a1[17];
  v72 = (void *)a1[18];
  objc_msgSend(v11, sel_wu_scaledValueForValue_, 32.0);
  v15 = v14;
  objc_msgSend(v12, (SEL)&selRef_setRendererStyle_ + 2, 20.0);
  v17 = v16;
  memcpy(v97, a1, sizeof(v97));
  v83 = v97[8];
  v84 = v97[9];
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v18 = sub_1B0007D5C();
  v20 = v19;
  v22 = v21 & 1;
  v23 = v13;
  sub_1B0007C6C();
  v24 = sub_1B0007D08();
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_1AFAED640(v18, v20, v22);
  swift_bridgeObjectRelease();
  v29 = (void *)objc_opt_self();
  MEMORY[0x1B5E01F8C](objc_msgSend(v29, sel_labelColor));
  v67 = sub_1B0007CCC();
  v75 = v30;
  v74 = v31;
  v33 = v32;
  swift_release();
  v34 = v72;
  sub_1AFAED640(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  objc_msgSend(v34, sel_wu_scaledValueForValue_, 16.0);
  v37 = v36;
  sub_1AFAE8274((uint64_t)&v97[10], (uint64_t)v99, &qword_1EEE70B90);
  sub_1AFAE8274((uint64_t)v99, (uint64_t)&v100, &qword_1EEE70B90);
  v76 = v33;
  v73 = KeyPath;
  if (*((_QWORD *)&v100 + 1)
    && (v101 = v100,
        sub_1AFAE8274((uint64_t)&v97[12], (uint64_t)v98, &qword_1EEE70B90),
        sub_1AFAE8274((uint64_t)v98, (uint64_t)&v102, &qword_1EEE70B90),
        *((_QWORD *)&v102 + 1)))
  {
    v103 = v102;
    sub_1AFBB71B4((uint64_t)v99);
    sub_1AFBB71B4((uint64_t)v98);
    v38 = v34;
    v39 = sub_1B0007C6C();
    v40 = objc_msgSend(v29, sel_labelColor);
    v41 = objc_msgSend(v40, sel_colorWithAlphaComponent_, 0.8);

    v42 = MEMORY[0x1B5E01F8C](v41);
    v43 = sub_1B00082FC();
    v45 = v44;
    v46 = (uint64_t)v64;
    v47 = (uint64_t *)&v64[*(int *)(v63 + 48)];
    *v47 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
    swift_storeEnumTagMultiPayload();
    v48 = v103;
    *(_OWORD *)v46 = v101;
    *(_OWORD *)(v46 + 16) = v48;
    *(_QWORD *)(v46 + 32) = v39;
    *(_QWORD *)(v46 + 40) = v42;
    *(_BYTE *)(v46 + 48) = 0;
    *(_QWORD *)(v46 + 56) = v43;
    *(_QWORD *)(v46 + 64) = v45;
    *(_BYTE *)(v46 + 72) = 0;
    *(_QWORD *)(v46 + 80) = 0;
    v49 = v66;
    sub_1AFE79D54(v46, v66);
    v50 = swift_getKeyPath();
    v51 = v65;
    sub_1AFE79D98(v49, v65);
    v52 = v68;
    v53 = v51 + *(int *)(v68 + 36);
    *(_QWORD *)v53 = v50;
    *(_QWORD *)(v53 + 8) = 1;
    *(_BYTE *)(v53 + 16) = 0;
    sub_1AFE79DDC(v49);
    v54 = v69;
    sub_1AFAE8274(v51, v69, &qword_1EEE75940);
    v55 = 0;
    v57 = (uint64_t)v70;
    v56 = v71;
  }
  else
  {
    v55 = 1;
    v57 = (uint64_t)v70;
    v56 = v71;
    v52 = v68;
    v54 = v69;
  }
  v58 = v67;
  __swift_storeEnumTagSinglePayload(v54, v55, 1, v52);
  objc_msgSend(v34, sel_wu_scaledValueForValue_, 20.0);
  v60 = v59;
  v93 = v15;
  v94 = 0;
  v95 = 256;
  v90 = v17;
  v91 = 0;
  v92 = 256;
  v96[0] = &v93;
  v96[1] = &v90;
  v83 = v58;
  v84 = v75;
  v85 = v74 & 1;
  v86 = v76;
  v87 = v73;
  v88 = 1;
  v89 = 0;
  v80 = v37;
  v81 = 0;
  v82 = 256;
  v96[2] = &v83;
  v96[3] = &v80;
  sub_1AFAF2558(v54, v57, &qword_1EEE73638);
  v77 = v60;
  v78 = 0;
  v79 = 256;
  v96[4] = v57;
  v96[5] = &v77;
  sub_1AFD4DC80((uint64_t)v96, v56);
  sub_1AFACB308(v54, &qword_1EEE73638);
  sub_1AFACB308(v57, &qword_1EEE73638);
  sub_1AFAED640(v83, v84, v85);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFE79BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 192);
  v8 = *(_BYTE *)(a1 + 200);
  sub_1AFAED640(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AFAED640(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AFAED640(v5, v6, v8);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AFE79CAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE75928;
  if (!qword_1EEE75928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE758D0);
    sub_1AFAD71A0(&qword_1EEE75930, &qword_1EEE758C8, MEMORY[0x1E0CDFCC0]);
    v3 = v2;
    sub_1AFAD71A0(&qword_1ED1F2490, &qword_1ED1F2498, MEMORY[0x1E0CDBEF0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE75928);
  }
  return result;
}

uint64_t sub_1AFE79D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TemperatureHighLowText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE79D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TemperatureHighLowText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFE79DDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TemperatureHighLowText();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE79E20(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  _QWORD v6[2];

  if (!*a1)
  {
    v5 = OUTLINED_FUNCTION_11_2(0, a2);
    v6[0] = v3();
    v6[1] = v2;
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6), a1);
  }
  OUTLINED_FUNCTION_10_1();
}

unint64_t sub_1AFE79E70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE75970;
  if (!qword_1EEE75970)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75950);
    sub_1AFE79FA0(&qword_1ED1F0F88, &qword_1ED1F0F90);
    v3 = v2;
    sub_1AFAD71A0(&qword_1EEE720D0, &qword_1EEE72080, MEMORY[0x1E0CDCF80]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE75970);
  }
  return result;
}

unint64_t sub_1AFE79F14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE75980;
  if (!qword_1EEE75980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75960);
    sub_1AFE79E20(&qword_1EEE75968, &qword_1EEE75958);
    v3[0] = v2;
    v3[1] = sub_1AFC6C710();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE75980);
  }
  return result;
}

void sub_1AFE79FA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[2];

  if (!*a1)
  {
    v5 = OUTLINED_FUNCTION_11_2(0, a2);
    v6[0] = v3;
    v6[1] = v2;
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6), a1);
  }
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFE79FE8()
{
  sub_1AFAD71A0(&qword_1EEE75990, &qword_1EEE75998, MEMORY[0x1E0CDFCF8]);
}

void sub_1AFE7A014()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 5;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0050E80;
  v33 = 6;
  v26 = 0xE500000000000000;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x7970736957;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBEB368();
  sub_1AFBEB368();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #1.5
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 30, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40E0000040C00000);
}

uint64_t HumidityComplicationDailyViewModel.init(current:daily:date:timeZone:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1B00058F0();
  v14 = (int *)OUTLINED_FUNCTION_1_126();
  v15 = a7 + v14[5];
  *(_QWORD *)v15 = a1;
  *(_BYTE *)(v15 + 8) = a2 & 1;
  v16 = a7 + v14[6];
  *(_QWORD *)v16 = a3;
  *(_BYTE *)(v16 + 8) = a4 & 1;
  v17 = a7 + v14[7];
  v18 = OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a5, v18);
  v19 = a7 + v14[8];
  v20 = OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a6, v20);
}

uint64_t type metadata accessor for HumidityComplicationDailyViewModel()
{
  uint64_t result;

  result = qword_1EEE75A10;
  if (!qword_1EEE75A10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE7A8C4()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_1_126();
  OUTLINED_FUNCTION_29_8();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_11_0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v14 = v13 - v12;
  sub_1B00058A8();
  sub_1AFF6E990(v14, 0, 6);
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v25 = *(_QWORD *)(v11 + 72);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v19 = MEMORY[0x1E0DEE9D8];
    v26 = v11;
    while (1)
    {
      v27(v9, v18, v10);
      OUTLINED_FUNCTION_104(v9, 0);
      if (__swift_getEnumTagSinglePayload(v9, 1, v10) == 1)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v5 + v0[7], v9, v10);
      sub_1B0005B78();
      sub_1B00058F0();
      v20 = v5 + v0[5];
      *(_QWORD *)v20 = 0;
      *(_BYTE *)(v20 + 8) = 1;
      v21 = v5 + v0[6];
      *(_QWORD *)v21 = 0;
      *(_BYTE *)(v21 + 8) = 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = OUTLINED_FUNCTION_21_71(0, *(_QWORD *)(v19 + 16) + 1);
      v23 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      if (v23 >= v22 >> 1)
        v19 = OUTLINED_FUNCTION_21_71(v22 > 1, v23 + 1);
      *(_QWORD *)(v19 + 16) = v23 + 1;
      sub_1AFE7BF90(v5, v19+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v23);
      v11 = v26;
      v18 += v25;
      if (!--v17)
        goto LABEL_11;
    }
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_11:
    OUTLINED_FUNCTION_104(v9, 1);
  }
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t HumidityComplicationDailyViewModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6_75();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t HumidityComplicationDailyViewModel.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6_75();
  return OUTLINED_FUNCTION_0_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*HumidityComplicationDailyViewModel.id.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t HumidityComplicationDailyViewModel.current.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_126();
  return OUTLINED_FUNCTION_23_71(v0 + *(int *)(v1 + 20));
}

uint64_t HumidityComplicationDailyViewModel.daily.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_126();
  return OUTLINED_FUNCTION_23_71(v0 + *(int *)(v1 + 24));
}

uint64_t HumidityComplicationDailyViewModel.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_126();
  OUTLINED_FUNCTION_11_0();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t HumidityComplicationDailyViewModel.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_126();
  OUTLINED_FUNCTION_12();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t static HumidityComplicationDailyViewModel.== infix(_:_:)()
{
  int v0;
  char v1;
  char v2;
  int v3;
  char v4;
  char v5;

  if ((sub_1B00058E4() & 1) != 0)
  {
    OUTLINED_FUNCTION_1_126();
    OUTLINED_FUNCTION_17_94();
    if ((v1 & 1) != 0)
    {
      if (!v0)
        return 0;
    }
    else
    {
      OUTLINED_FUNCTION_20_39();
      if ((v2 & 1) != 0)
        return 0;
    }
    OUTLINED_FUNCTION_17_94();
    if ((v4 & 1) != 0)
    {
      if (!v3)
        return 0;
    }
    else
    {
      OUTLINED_FUNCTION_20_39();
      if ((v5 & 1) != 0)
        return 0;
    }
    if ((sub_1B0005890() & 1) != 0)
      JUMPOUT(0x1B5DFFA84);
  }
  return 0;
}

uint64_t sub_1AFE7ACB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x796C696164 && a2 == 0xE500000000000000;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1702125924 && a2 == 0xE400000000000000;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1B0008FB0();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AFE7AE8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFE7AEB4 + 4 * byte_1B003D7B0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1AFE7AEB4()
{
  return 0x746E6572727563;
}

uint64_t sub_1AFE7AECC()
{
  return 0x796C696164;
}

uint64_t sub_1AFE7AEE0()
{
  return 1702125924;
}

uint64_t sub_1AFE7AEF0()
{
  return 0x656E6F5A656D6974;
}

uint64_t sub_1AFE7AF08()
{
  unsigned __int8 *v0;

  return sub_1AFE7AE8C(*v0);
}

uint64_t sub_1AFE7AF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFE7ACB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFE7AF34()
{
  sub_1AFE7B180();
  return sub_1B0009118();
}

uint64_t sub_1AFE7AF5C()
{
  sub_1AFE7B180();
  return sub_1B0009124();
}

uint64_t HumidityComplicationDailyViewModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v6 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE759A0);
  OUTLINED_FUNCTION_29_8();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE7B180();
  sub_1B0009058();
  sub_1B00058FC();
  sub_1AFAF8704(&qword_1EEE72AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_46();
  if (!v3)
  {
    v9 = type metadata accessor for HumidityComplicationDailyViewModel();
    OUTLINED_FUNCTION_23_71(v6 + *(int *)(v9 + 20));
    OUTLINED_FUNCTION_12_105();
    OUTLINED_FUNCTION_23_71(v6 + *(int *)(v9 + 24));
    OUTLINED_FUNCTION_12_105();
    sub_1B00058D8();
    sub_1AFAF8704(&qword_1ED1F3CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_46();
    sub_1B0005B84();
    sub_1AFAF8704(&qword_1EEE72AD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    OUTLINED_FUNCTION_46();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
}

unint64_t sub_1AFE7B180()
{
  unint64_t result;

  result = qword_1EEE759A8;
  if (!qword_1EEE759A8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D9A4, &type metadata for HumidityComplicationDailyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE759A8);
  }
  return result;
}

uint64_t HumidityComplicationDailyViewModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = sub_1B0005B84();
  v20 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_33();
  v22 = v4;
  v5 = sub_1B00058D8();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33();
  v24 = v7;
  v27 = sub_1B00058FC();
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_33();
  v28 = v9;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE759B0);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_14();
  v10 = (int *)type metadata accessor for HumidityComplicationDailyViewModel();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_9();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFE7B180();
  sub_1B000904C();
  if (v30)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1AFAF8704(&qword_1EEE72B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  OUTLINED_FUNCTION_18_79();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v14, v28, v27);
  v15 = OUTLINED_FUNCTION_13_107();
  OUTLINED_FUNCTION_20_78(v15, v16, v10[5]);
  v17 = OUTLINED_FUNCTION_13_107();
  OUTLINED_FUNCTION_20_78(v17, v18, v10[6]);
  sub_1AFAF8704(&qword_1ED1F3CB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  OUTLINED_FUNCTION_18_79();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v14 + v10[7], v24, v26);
  sub_1AFAF8704(&qword_1EEE72B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
  OUTLINED_FUNCTION_18_79();
  OUTLINED_FUNCTION_8_114();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14 + v10[8], v22, v23);
  sub_1AFBB81B8(v14, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AFBB81FC(v14);
}

uint64_t sub_1AFE7B534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HumidityComplicationDailyViewModel.init(from:)(a1, a2);
}

uint64_t sub_1AFE7B548(_QWORD *a1)
{
  return HumidityComplicationDailyViewModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HumidityComplicationDailyViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1B00058D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[8];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for HumidityComplicationDailyViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 32);
  v8 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for HumidityComplicationDailyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for HumidityComplicationDailyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for HumidityComplicationDailyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for HumidityComplicationDailyViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B00058FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for HumidityComplicationDailyViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE7BA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_6_75();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_11_0();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 28);
    }
    else
    {
      v7 = OUTLINED_FUNCTION_12();
      v10 = *(int *)(a3 + 32);
    }
    v8 = a1 + v10;
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for HumidityComplicationDailyViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE7BB20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_6_75();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_11_0();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 28);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_12();
      v12 = *(int *)(a4 + 32);
    }
    v10 = a1 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_1AFE7BBA8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1B00058FC();
  if (v1 <= 0x3F)
  {
    result = sub_1B00058D8();
    if (v2 <= 0x3F)
    {
      result = sub_1B0005B84();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HumidityComplicationDailyViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AFE7BCA0 + 4 * byte_1B003D7BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AFE7BCD4 + 4 * byte_1B003D7B5[v4]))();
}

uint64_t sub_1AFE7BCD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE7BCDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE7BCE4);
  return result;
}

uint64_t sub_1AFE7BCF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE7BCF8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AFE7BCFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE7BD04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HumidityComplicationDailyViewModel.CodingKeys()
{
  return &type metadata for HumidityComplicationDailyViewModel.CodingKeys;
}

unint64_t sub_1AFE7BD24()
{
  unint64_t result;

  result = qword_1EEE75A58;
  if (!qword_1EEE75A58)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D97C, &type metadata for HumidityComplicationDailyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75A58);
  }
  return result;
}

unint64_t sub_1AFE7BD64()
{
  unint64_t result;

  result = qword_1EEE75A60;
  if (!qword_1EEE75A60)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D8EC, &type metadata for HumidityComplicationDailyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75A60);
  }
  return result;
}

unint64_t sub_1AFE7BDA4()
{
  unint64_t result;

  result = qword_1EEE75A68;
  if (!qword_1EEE75A68)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003D914, &type metadata for HumidityComplicationDailyViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE75A68);
  }
  return result;
}

uint64_t sub_1AFE7BDE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  Swift::Double v17;
  Swift::OpaquePointer v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  if (qword_1EEE70470 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_1_126();
  v5 = v4;
  v6 = (uint64_t *)(v1 + *(int *)(v4 + 24));
  v7 = *v6;
  v8 = *((_BYTE *)v6 + 8);
  if ((v8 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_19_74();
    v10 = v2 + *(int *)(v5 + 28);
    v11 = a1 + *(int *)(type metadata accessor for ComplicationDailyGaugeViewModel() + 28);
    v12 = OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
    v13 = OUTLINED_FUNCTION_12();
    result = OUTLINED_FUNCTION_7_111(v13);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  else
  {
    v15 = v1 + *(int *)(v4 + 20);
    if ((*(_BYTE *)(v15 + 8) & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = 0.0;
    }
    else
    {
      v17 = *(double *)v15;
      v18._rawValue = (void *)swift_bridgeObjectRetain();
      v16 = ColorSpectrum.color(for:in:)(v18, v17);
    }
    v9 = OUTLINED_FUNCTION_19_74();
    swift_bridgeObjectRelease();
    v19 = v2 + *(int *)(v5 + 28);
    v20 = a1 + *(int *)(type metadata accessor for ComplicationDailyGaugeViewModel() + 28);
    v21 = OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
    v22 = OUTLINED_FUNCTION_12();
    result = OUTLINED_FUNCTION_7_111(v22);
    *(_QWORD *)a1 = v16;
    *(Swift::Double *)(a1 + 8) = v17;
  }
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_1AFE7BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HumidityComplicationDailyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFE7BFD4()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36[9];

  v36[0] = 6;
  v31 = 0xD000000000000010;
  v32 = 0x80000001B0051400;
  v33 = 0xD000000000000014;
  v34 = 0x80000001B0051420;
  v35 = 6;
  v27 = 0xEB000000004D202DLL;
  v28 = 0x5F73756C756D7543;
  v29 = 0xEF4D656C676E6953;
  v30 = 10;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB000000004D202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF4D656C676E6953;
  v25 = 10;
  v26 = 0x2073756C756D7543;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE7C7E8();
  sub_1AFE7C7E8();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1167663104;
  LODWORD(v6) = 1128792064;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 4, 0, 0x42400000C20C0000, 0x42DC000040400000, v6, 0x3E851EB83E570A3DLL, v7, 0x3F8000003F800000, 0x3E4CCCCD3F800000, 0x3F8000003F800000, 0x3E428F5C3F800000, 1065353216,
    0x428C000000000000,
    v8,
    0x3E570A3D3E0F5C29,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    1056964608,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE7C7E8()
{
  uint64_t v0;
  __n128 v6;
  __int128 v7;
  __n128 v8;
  double v9;
  __int128 v10;
  __n128 v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  double v23;
  double v24;
  __n128 v25;
  __n128 v26;
  double v27;
  __int128 v28;
  __n128 v29;
  double v30;
  __int128 v31;
  __n128 v32;
  __n128 v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  double v44;
  __n128 v45;
  double v46;
  __n128 v47;
  double v48;
  double v49;
  double v50;
  double v51;
  __n128 v52;
  __n128 v53;
  double v54;
  double v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __int128 v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  _OWORD *v67;
  uint64_t v68;
  double v69;
  __n128 v70;
  float v71;
  float v72;
  float v73;
  double v74;
  double v75;
  __n128 v76;
  __n128 v77;
  double v78;
  double v79;
  double v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __int128 v85;
  _OWORD *v86;
  double v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  uint64_t v95;
  __n128 v96;
  float v97;
  float v98;
  float v99;
  __n128 v100;
  __int128 v101;
  double v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  uint64_t v110;
  __n128 v111;
  float v112;
  float v113;
  float v114;
  float v115;
  float v116;
  float v117;
  __n128 v118;
  __int128 v119;
  double v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  __n128 v129;
  float v130;
  float v131;
  float v132;
  float v133;
  float v134;
  float v135;
  __n128 v136;
  __int128 v137;
  __int128 v138;
  __n128 v139;
  __n128 v140;
  double v141;
  _OWORD *v142;
  double v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  uint64_t v151;
  float v152;
  float v153;
  float v154;
  __int128 v155;
  __int128 v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  uint64_t v164;
  double v165;
  __n128 v166;
  float v167;
  double v168;
  __n128 v169;
  __n128 v170;
  __n128 v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  uint64_t v180;
  __n128 v181;
  __n128 v182;
  __n128 v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  uint64_t v192;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  __n128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __n128 v339;
  __int128 v340;
  __n128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __n128 v347;
  __n128 v348;
  __n128 v349;
  __int128 v350;
  __n128 v351;
  __n128 v352;
  __n128 v353;
  __n128 v354;
  __n128 v355;
  __n128 v356;
  __n128 v357;
  __n128 v358;
  __n128 v359;
  __int128 v360;
  __n128 v361;
  __n128 v362;
  __n128 v363;
  __int128 v364;
  __n128 v365;
  __int128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __n128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __n128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v401 = xmmword_1B00292B0;
  v402 = xmmword_1B00292C0;
  v399 = xmmword_1B00292D0;
  v400 = xmmword_1B00292E0;
  v397 = xmmword_1B0028220;
  v398 = xmmword_1B0028230;
  v395 = xmmword_1B00292F0;
  v396 = xmmword_1B0029300;
  __asm { FMOV            V2.2D, #1.0 }
  v393 = _Q2;
  v394 = xmmword_1B0025E50;
  v391 = xmmword_1B0027B20;
  v392 = xmmword_1B0027B30;
  v389 = xmmword_1B0029320;
  v390 = xmmword_1B0029330;
  v387 = xmmword_1B0029340;
  v388 = xmmword_1B0029350;
  v385 = xmmword_1B0029360;
  v386 = xmmword_1B0029370;
  OUTLINED_FUNCTION_25_6(0.380392194, 0.509803951, _Q2);
  v379 = v6;
  v380 = xmmword_1B0027030;
  v377 = xmmword_1B0029380;
  v378 = xmmword_1B0029390;
  v375 = xmmword_1B00293A0;
  v376 = xmmword_1B00293B0;
  v373 = xmmword_1B00293C0;
  v374 = xmmword_1B00293D0;
  v371 = xmmword_1B00293E0;
  v372 = xmmword_1B00293F0;
  v369 = v6;
  OUTLINED_FUNCTION_22_69((__n128)xmmword_1B0025E90, 0.353558868, v6);
  v364 = v7;
  v361 = v8;
  v362 = v8;
  v359 = v8;
  v360 = xmmword_1B0027770;
  OUTLINED_FUNCTION_6_115(1.0, v9, v8);
  v350 = v10;
  v331 = v10;
  v347 = v11;
  v332 = v12;
  v348 = (__n128)v12;
  v345 = xmmword_1B0029400;
  v346 = xmmword_1B00287A0;
  v343 = xmmword_1B0029410;
  v344 = xmmword_1B0029420;
  v330 = v11;
  v341 = v11;
  v342 = v10;
  v339 = v11;
  v340 = v12;
  v337 = (__int128)v11;
  v338 = (__int128)v11;
  v335 = (__int128)v11;
  v336 = (__int128)v11;
  v333 = (__int128)v11;
  v334 = (__int128)v11;
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_18_5(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 650.0, 35.0, 0.3, 0.4, &v387, &v385, 0x3F4CCCCD3F4CCCCDLL, 0, &v383,
    1067450368,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v401 = xmmword_1B00292B0;
  v402 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  v395 = xmmword_1B0029430;
  v396 = xmmword_1B0029440;
  v393 = v330;
  v394 = v331;
  *(_QWORD *)&v23 = OUTLINED_FUNCTION_9_110().n128_u64[0];
  OUTLINED_FUNCTION_25_6(v23, v24, v25);
  v379 = v26;
  v380 = v332;
  v377 = xmmword_1B0029380;
  v378 = xmmword_1B0029390;
  v375 = xmmword_1B00293A0;
  v376 = xmmword_1B00293B0;
  v373 = xmmword_1B00293C0;
  v374 = xmmword_1B00293D0;
  v371 = xmmword_1B00293E0;
  v372 = xmmword_1B00293F0;
  v369 = v26;
  OUTLINED_FUNCTION_22_69((__n128)xmmword_1B0025E90, v27, v26);
  v364 = v28;
  v361 = v29;
  v362 = v29;
  v359 = v29;
  v360 = xmmword_1B0027770;
  OUTLINED_FUNCTION_6_115(1.0, v30, v29);
  v350 = v31;
  v347 = v32;
  v348 = v33;
  v345 = xmmword_1B0029400;
  v346 = xmmword_1B00287A0;
  v343 = xmmword_1B0029410;
  v344 = xmmword_1B0029450;
  v341 = v32;
  v342 = v31;
  OUTLINED_FUNCTION_13_108(0.810572743, 1.0, v32, v33);
  v318 = v34;
  OUTLINED_FUNCTION_2_108();
  v218 = v35;
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_18_5(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, 650.0, 35.0, 0.3, 0.4, &v387, &v385, 0x3F4CCCCD3F4CCCCDLL, 0, &v383,
    1067450368,
    &v381,
    &v379,
    &v377,
    &v375,
    v218,
    v222,
    v226,
    v230,
    v236,
    v242,
    v248,
    v254,
    v260,
    v266,
    v272,
    v278,
    v282,
    v286,
    v290,
    v294,
    v298,
    v302,
    &v337,
    1112014848,
    1097859072,
    v318,
    v324);
  v401 = xmmword_1B0029460;
  v402 = xmmword_1B0029470;
  v399 = xmmword_1B0029480;
  v400 = xmmword_1B0029490;
  OUTLINED_FUNCTION_9_96();
  v395 = xmmword_1B00294A0;
  v396 = xmmword_1B00294B0;
  v393 = v330;
  v394 = v331;
  *(_QWORD *)&v46 = OUTLINED_FUNCTION_9_110().n128_u64[0];
  v383 = (__int128)v47;
  v384 = (__int128)v47;
  OUTLINED_FUNCTION_20_79(v46, v48, v49, v50, v47);
  v377 = xmmword_1B00294E0;
  v378 = xmmword_1B00294F0;
  v375 = xmmword_1B0029500;
  v376 = xmmword_1B0029510;
  v373 = xmmword_1B0029520;
  v374 = xmmword_1B0029530;
  OUTLINED_FUNCTION_8_115((__n128)xmmword_1B0029540, (__n128)xmmword_1B0029550, v51, v52, v53);
  OUTLINED_FUNCTION_14_104(v57.n128_f64[0], v54, v55, v56, v57);
  v347 = v58;
  v348 = v59;
  v345 = xmmword_1B0029560;
  v346 = xmmword_1B0029570;
  v343 = xmmword_1B0029580;
  v344 = xmmword_1B0029590;
  v341 = v58;
  v342 = v60;
  v339 = v58;
  v340 = (__int128)v59;
  OUTLINED_FUNCTION_21_72(0.810572863, 1.0, v59.n128_f64[0], v58);
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_18_5(v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, 0.4, v73, &v387, &v385, v198, v203, &v383,
    1067450368,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v401 = xmmword_1B00295A0;
  v402 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_21_56();
  v397 = xmmword_1B00295C0;
  v398 = xmmword_1B00295D0;
  v395 = xmmword_1B00295E0;
  v396 = xmmword_1B00295F0;
  v393 = v330;
  v394 = v331;
  v391 = xmmword_1B0027B20;
  v392 = xmmword_1B0027B30;
  v389 = xmmword_1B0029610;
  v390 = xmmword_1B0029620;
  v387 = xmmword_1B0029340;
  v388 = xmmword_1B0029350;
  v385 = xmmword_1B0029630;
  v386 = xmmword_1B0026A00;
  v383 = xmmword_1B0026320;
  v384 = xmmword_1B0026330;
  OUTLINED_FUNCTION_20_79(0.970078886, 0.97049284, v74, *(double *)&v331, v330);
  v377 = xmmword_1B0029640;
  v378 = xmmword_1B0029650;
  v375 = xmmword_1B0029660;
  v376 = xmmword_1B0029670;
  v373 = xmmword_1B0029680;
  v374 = xmmword_1B0029690;
  *(_QWORD *)&v78 = OUTLINED_FUNCTION_8_115((__n128)xmmword_1B00296A0, (__n128)xmmword_1B00296B0, v75, v76, v77).n128_u64[0];
  OUTLINED_FUNCTION_14_104(v78, v79, v80, v81, v82);
  v347 = v83;
  v348 = v84;
  v345 = xmmword_1B00296C0;
  v346 = xmmword_1B00296D0;
  v343 = xmmword_1B00296E0;
  v344 = xmmword_1B0026FC0;
  v341 = v83;
  v342 = v85;
  v339 = v83;
  v340 = (__int128)v84;
  v337 = (__int128)v83;
  v338 = (__int128)v83;
  v335 = (__int128)v83;
  v336 = (__int128)v83;
  v333 = (__int128)v83;
  v334 = (__int128)v83;
  OUTLINED_FUNCTION_2_108();
  v219 = v86;
  v87 = OUTLINED_FUNCTION_23_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v88, v89, v90, v91, v92, v93, v94, v95, v87, v96, 1400.0, v97, v98, v99, 0.9, 0.7, &v387, &v385,
    0x3F6666663F666666,
    0,
    &v383,
    1065353216,
    &v381,
    &v379,
    &v377,
    &v375,
    v219,
    v223,
    v227,
    v231,
    v237,
    v243,
    v249,
    v255,
    v261,
    v267,
    v273,
    v279,
    v283,
    v287,
    v291,
    v295,
    v299,
    v303,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v401 = xmmword_1B00296F0;
  v402 = xmmword_1B0029700;
  v399 = xmmword_1B0029710;
  v400 = xmmword_1B0029720;
  OUTLINED_FUNCTION_9_96();
  v395 = xmmword_1B0029730;
  v396 = xmmword_1B0029740;
  v393 = v330;
  OUTLINED_FUNCTION_4_124();
  v383 = xmmword_1B0027D70;
  v384 = xmmword_1B0027D80;
  v382 = 0u;
  v381 = 0u;
  v379 = v100;
  v380 = v332;
  v377 = xmmword_1B0029750;
  v378 = xmmword_1B0029760;
  v375 = xmmword_1B0029770;
  v376 = xmmword_1B0029780;
  v373 = xmmword_1B0029790;
  v374 = xmmword_1B00297A0;
  v371 = xmmword_1B00297B0;
  v372 = xmmword_1B00297C0;
  v369 = v100;
  v370 = xmmword_1B0025E90;
  v367 = v100;
  v368 = v100;
  v365 = v100;
  v366 = xmmword_1B0025E90;
  v363 = v100;
  v364 = v101;
  v361 = v100;
  v362 = v100;
  v359 = v100;
  v360 = xmmword_1B0027770;
  v357 = v100;
  v358 = v100;
  v355 = v100;
  v356 = v100;
  v353 = v100;
  v354 = v100;
  v351 = v100;
  v352 = v100;
  v349 = v100;
  v350 = v101;
  v347 = v100;
  v348 = (__n128)v332;
  v345 = xmmword_1B00297D0;
  v346 = xmmword_1B00297E0;
  v343 = xmmword_1B00297F0;
  v344 = xmmword_1B0029800;
  v341 = v100;
  v342 = v101;
  v339 = v100;
  v340 = v332;
  OUTLINED_FUNCTION_21_72(*(double *)&v101, *(double *)&v332, 0.752212465, v100);
  v102 = OUTLINED_FUNCTION_7_91();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v103, v104, v105, v106, v107, v108, v109, v110, v102, v111, v112, v113, v114, v115, v116, v117, v194, v196,
    v199,
    v204,
    &v383,
    1065353216,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v401 = xmmword_1B00296F0;
  v402 = xmmword_1B0029700;
  v399 = xmmword_1B0029710;
  v400 = xmmword_1B0029720;
  v395 = xmmword_1B0029730;
  v396 = xmmword_1B0029740;
  v383 = xmmword_1B0027D70;
  v384 = xmmword_1B0027D80;
  v377 = xmmword_1B0029750;
  v378 = xmmword_1B0029760;
  v375 = xmmword_1B0029770;
  v376 = xmmword_1B0029780;
  v373 = xmmword_1B0029790;
  v374 = xmmword_1B00297A0;
  v371 = xmmword_1B00297B0;
  v372 = xmmword_1B00297C0;
  v345 = xmmword_1B00297D0;
  v346 = xmmword_1B00297E0;
  v343 = xmmword_1B00297F0;
  v344 = xmmword_1B0029800;
  v397 = xmmword_1B0028220;
  v398 = xmmword_1B0028230;
  v393 = v330;
  OUTLINED_FUNCTION_4_124();
  v382 = 0u;
  v381 = 0u;
  v379 = v118;
  v380 = v332;
  v369 = v118;
  v370 = xmmword_1B0025E90;
  v367 = v118;
  v368 = v118;
  v365 = v118;
  v366 = xmmword_1B0025E90;
  v363 = v118;
  v364 = v119;
  v361 = v118;
  v362 = v118;
  v359 = v118;
  v360 = xmmword_1B0027770;
  v357 = v118;
  v358 = v118;
  v355 = v118;
  v356 = v118;
  v353 = v118;
  v354 = v118;
  v351 = v118;
  v352 = v118;
  v349 = v118;
  v350 = v119;
  v347 = v118;
  v348 = (__n128)v332;
  v341 = v118;
  v342 = v119;
  v339 = v118;
  v340 = v332;
  v337 = (__int128)v118;
  v338 = (__int128)v118;
  v335 = (__int128)v118;
  v336 = (__int128)v118;
  v333 = (__int128)v118;
  v334 = (__int128)v118;
  OUTLINED_FUNCTION_1_127();
  OUTLINED_FUNCTION_20_11();
  v120 = OUTLINED_FUNCTION_7_91();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v121, v122, v123, v124, v125, v126, v127, v128, v120, v129, v130, v131, v132, v133, v134, v135, v195, v197,
    v200,
    v205,
    v208,
    1065353216,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    v232,
    v238,
    v244,
    v250,
    v256,
    v262,
    v268,
    v274,
    v280,
    v284,
    v288,
    v292,
    v296,
    v300,
    v304,
    v306,
    v310,
    v314,
    v319,
    v325);
  v401 = xmmword_1B00295A0;
  v402 = xmmword_1B00295B0;
  v397 = xmmword_1B00295C0;
  v398 = xmmword_1B00295D0;
  v395 = xmmword_1B00295E0;
  v396 = xmmword_1B00295F0;
  v389 = xmmword_1B0029610;
  v390 = xmmword_1B0029620;
  v385 = xmmword_1B0029630;
  v386 = xmmword_1B0026A00;
  v383 = xmmword_1B0026320;
  v384 = xmmword_1B0026330;
  v377 = xmmword_1B0029640;
  v378 = xmmword_1B0029650;
  v375 = xmmword_1B0029660;
  v376 = xmmword_1B0029670;
  v373 = xmmword_1B0029680;
  v374 = xmmword_1B0029690;
  v371 = xmmword_1B00296A0;
  v372 = xmmword_1B00296B0;
  v345 = xmmword_1B00296C0;
  v346 = xmmword_1B00296D0;
  v343 = xmmword_1B00296E0;
  v344 = xmmword_1B0026FC0;
  OUTLINED_FUNCTION_21_56();
  v393 = v330;
  v394 = v331;
  OUTLINED_FUNCTION_27_63();
  OUTLINED_FUNCTION_26_62();
  v382 = 0u;
  v381 = 0u;
  v379 = v136;
  v380 = v332;
  v369 = v136;
  v370 = xmmword_1B0025E90;
  v367 = v136;
  v368 = v136;
  v365 = v136;
  v366 = xmmword_1B0025E90;
  v363 = v136;
  v364 = v137;
  v361 = v136;
  v362 = v136;
  v359 = v136;
  v360 = xmmword_1B0027770;
  OUTLINED_FUNCTION_6_115(*(double *)&v137, 1.0, v136);
  v350 = v138;
  v347 = v139;
  v348 = v140;
  v341 = v139;
  v342 = v138;
  OUTLINED_FUNCTION_13_108(*(double *)&v138, v141, v139, v140);
  v320 = v142;
  OUTLINED_FUNCTION_20_11();
  v143 = OUTLINED_FUNCTION_23_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v144, v145, v146, v147, v148, v149, v150, v151, v143, (__n128)xmmword_1B0026420, 1400.0, v152, v153, v154, 0.9, 0.7, &v387, &v385,
    0x3F6666663F666666,
    0,
    v209,
    1065353216,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    v320,
    v326);
  v401 = xmmword_1B0029460;
  v402 = xmmword_1B0029470;
  OUTLINED_FUNCTION_21_56();
  v395 = xmmword_1B00294A0;
  v396 = xmmword_1B00294B0;
  v377 = xmmword_1B00294E0;
  v378 = xmmword_1B00294F0;
  v375 = xmmword_1B0029500;
  v376 = xmmword_1B0029510;
  v373 = xmmword_1B0029520;
  v374 = xmmword_1B0029530;
  v371 = xmmword_1B0029540;
  v372 = xmmword_1B0029550;
  v345 = xmmword_1B0029560;
  v346 = xmmword_1B0029570;
  v343 = xmmword_1B0029580;
  v344 = xmmword_1B0029590;
  OUTLINED_FUNCTION_9_96();
  v393 = v330;
  v394 = v331;
  OUTLINED_FUNCTION_27_63();
  v389 = xmmword_1B0029320;
  v390 = xmmword_1B0029330;
  OUTLINED_FUNCTION_26_62();
  v385 = xmmword_1B0029360;
  v386 = xmmword_1B0029370;
  v383 = v155;
  v384 = v155;
  v382 = 0u;
  v381 = 0u;
  v379 = (__n128)v155;
  v380 = v332;
  v369 = (__n128)v155;
  v370 = xmmword_1B0025E90;
  v367 = (__n128)v155;
  v368 = (__n128)v155;
  v365 = (__n128)v155;
  v366 = xmmword_1B0025E90;
  v363 = (__n128)v155;
  v364 = v156;
  v361 = (__n128)v155;
  v362 = (__n128)v155;
  v359 = (__n128)v155;
  v360 = xmmword_1B0027770;
  v357 = (__n128)v155;
  v358 = (__n128)v155;
  v355 = (__n128)v155;
  v356 = (__n128)v155;
  v353 = (__n128)v155;
  v354 = (__n128)v155;
  v351 = (__n128)v155;
  v352 = (__n128)v155;
  v349 = (__n128)v155;
  v350 = v156;
  v347 = (__n128)v155;
  v348 = (__n128)v332;
  v341 = (__n128)v155;
  v342 = v156;
  v339 = (__n128)v155;
  v340 = v332;
  v337 = v155;
  v338 = v155;
  v335 = v155;
  v336 = v155;
  v333 = v155;
  v334 = v155;
  OUTLINED_FUNCTION_1_127();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_17_7(v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, 900.0, 150.0, 0.4, v167, &v387, &v385, v201, v206, &v383,
    1067450368,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    v233,
    v239,
    v245,
    v251,
    v257,
    v263,
    v269,
    v275,
    v281,
    v285,
    v289,
    v293,
    v297,
    v301,
    v305,
    v307,
    v311,
    v315,
    v321,
    v327);
  v395 = xmmword_1B0029430;
  v396 = xmmword_1B0029440;
  v344 = xmmword_1B0029450;
  v343 = xmmword_1B0029410;
  v401 = xmmword_1B00292B0;
  v402 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  *(_QWORD *)&v168 = OUTLINED_FUNCTION_0_143().n128_u64[0];
  OUTLINED_FUNCTION_5_101(v168, v169, v170, v171);
  v308 = v172;
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_17_7(v173, v174, v175, v176, v177, v178, v179, v180, -18.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, 0.4, &v387, &v385, v202, v207, &v383,
    1067450368,
    v210,
    v212,
    v214,
    v216,
    v220,
    v224,
    v228,
    v234,
    v240,
    v246,
    v252,
    v258,
    v264,
    v270,
    v276,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    v308,
    v312,
    v316,
    v322,
    v328);
  v401 = xmmword_1B00292B0;
  v402 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  v395 = xmmword_1B00292F0;
  v396 = xmmword_1B0029300;
  OUTLINED_FUNCTION_0_143();
  v343 = xmmword_1B0029410;
  v344 = xmmword_1B0029420;
  OUTLINED_FUNCTION_5_101(1.0, v181, v182, v183);
  v309 = v184;
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_17_7(v185, v186, v187, v188, v189, v190, v191, v192, -90.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, 0.4, &v387, &v385, 0x3F4CCCCD3F4CCCCDLL, 0, &v383,
    1067450368,
    v211,
    v213,
    v215,
    v217,
    v221,
    v225,
    v229,
    v235,
    v241,
    v247,
    v253,
    v259,
    v265,
    v271,
    v277,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    v309,
    v313,
    v317,
    v323,
    v329);
  return v0;
}

uint64_t sub_1AFE7DD44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE7DD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_3();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1AFE7DD78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE7DD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_3();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for AirQualityCornerNumericalContentView()
{
  uint64_t result;

  result = qword_1EEE75AC8;
  if (!qword_1EEE75AC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFE7DDE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE7DDF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v45 = a1;
  v2 = sub_1B00079D8();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE858);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE630);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A40);
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_9();
  v23 = v22 - v21;
  v24 = *(int *)(type metadata accessor for AirQualityComplicationViewModel() + 24);
  v44 = v1;
  v48 = *(_QWORD *)(v1 + v24);
  sub_1AFBBCBC0();
  v48 = sub_1B0008C38();
  v49 = v25;
  sub_1AFAF9424();
  v48 = sub_1B0007D5C();
  v49 = v26;
  v50 = v27 & 1;
  v51 = v28;
  sub_1B00079B4();
  v29 = MEMORY[0x1E0CDDD78];
  v30 = MEMORY[0x1E0CDDD58];
  sub_1B0007EF4();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v6, v39);
  sub_1AFAED640(v48, v49, v50);
  swift_bridgeObjectRelease();
  if (qword_1ED1EF4D0 != -1)
    swift_once();
  v48 = qword_1ED1FEC20;
  v49 = *(_QWORD *)algn_1ED1FEC28;
  v46 = v29;
  v47 = v30;
  OUTLINED_FUNCTION_2_30();
  v31 = v41;
  sub_1B0007EC4();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v11, v31);
  v32 = v44;
  v48 = sub_1AFBBC7A8();
  v49 = v33;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFE7E398((uint64_t)v15);
  v34 = sub_1AFCFF458();
  sub_1B0007DE0();
  v35 = sub_1AFE7E398((uint64_t)v18);
  MEMORY[0x1E0C80A78](v35);
  *(&v38 - 2) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72D70);
  v48 = v12;
  v49 = v34;
  OUTLINED_FUNCTION_2_30();
  sub_1AFD23A48();
  v36 = v43;
  sub_1B0007DC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v23, v36);
}

void sub_1AFE7E154(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (double)*(uint64_t *)(a1 + *(int *)(type metadata accessor for AirQualityComplicationViewModel() + 24));
  sub_1AFBBC9C8();
  v9 = v8;
  sub_1AFBBC918();
  if (v9 > v11)
  {
    __break(1u);
  }
  else
  {
    v20 = v9;
    v21 = v11;
    MEMORY[0x1E0C80A78](v10);
    MEMORY[0x1E0C80A78](v12);
    sub_1AFAF0DA8();
    sub_1B0008074();
    v13 = AirQualityScale.gradientColors.getter();
    v14 = sub_1AFECE4D0(v13);
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1B5E021D8](v14);
    KeyPath = swift_getKeyPath();
    v20 = *(double *)&v15;
    swift_bridgeObjectRetain();
    v17 = sub_1B000736C();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
    swift_bridgeObjectRelease();
    v18 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72D70) + 36));
    *v18 = KeyPath;
    v18[1] = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1AFE7E398(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFE7E3D8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AFE7E154(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1AFE7E3E8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE72A40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE72D70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE630);
  sub_1AFCFF458();
  OUTLINED_FUNCTION_2_30();
  sub_1AFD23A48();
  return OUTLINED_FUNCTION_2_30();
}

void sub_1AFE7E478()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 6;
  v27 = 0xEB000000004C202DLL;
  v28 = 0x5F73756C756D7543;
  v29 = 0xEF4C656C676E6953;
  v30 = 5;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB0000000053202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF53656C676E6953;
  v25 = 5;
  v26 = 0x2073756C756D7543;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFE7ECA8();
  sub_1AFE7ECA8();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1165623296;
  LODWORD(v6) = 1137180672;
  sub_1AFB471E4((uint64_t)&v36, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42C8000040400000, v6, 0x3E851EB83E570A3DLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4296000000000000,
    v8,
    0x3E4CCCCD3DCCCCCDLL,
    0x3F8000003F800000,
    0x3E9A5D8D3F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFE7ECA8()
{
  uint64_t v0;
  __n128 v6;
  double v7;
  double v8;
  __n128 v9;
  __n128 v10;
  double v11;
  __n128 v12;
  __int128 v13;
  __n128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  double v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __int128 v28;
  __n128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  int v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  double v44;
  double v45;
  __n128 v46;
  double v47;
  __n128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __n128 v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  uint64_t v60;
  double v61;
  __n128 v62;
  float v63;
  float v64;
  float v65;
  float v66;
  __n128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  float v71;
  uint64_t v72;
  float v73;
  double v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  uint64_t v82;
  __n128 v83;
  float v84;
  float v85;
  float v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  double v95;
  double v96;
  __n128 v97;
  double v98;
  __n128 v99;
  __int128 v100;
  __n128 v101;
  __int128 v102;
  double v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  uint64_t v111;
  __n128 v112;
  float v113;
  float v114;
  float v115;
  float v116;
  float v117;
  float v118;
  double v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  __n128 v128;
  float v129;
  float v130;
  float v131;
  float v132;
  float v133;
  float v134;
  double v135;
  double v136;
  double v137;
  double v138;
  __n128 v139;
  __n128 v140;
  double v141;
  double v142;
  double v143;
  __n128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __n128 v148;
  double v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  __n128 v158;
  float v159;
  float v160;
  float v161;
  double v162;
  __n128 v163;
  double v164;
  double v165;
  __n128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __n128 v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  uint64_t v179;
  double v180;
  __n128 v181;
  float v182;
  float v183;
  double v184;
  double v185;
  __n128 v186;
  double v187;
  double v188;
  __n128 v189;
  __int128 v190;
  __n128 v191;
  __int128 v192;
  __n128 v193;
  int v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  uint64_t v202;
  double v203;
  __n128 v204;
  __n128 v205;
  double v206;
  double v207;
  __n128 v208;
  double v209;
  double v210;
  __int128 v211;
  __n128 v212;
  __int128 v213;
  __n128 v214;
  __n128 v215;
  __int128 v216;
  __int128 v217;
  int v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  uint64_t v226;
  _OWORD *v228;
  _OWORD *v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  _OWORD *v237;
  _OWORD *v238;
  int v239;
  int v240;
  int v241;
  int v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  int64x2_t v364;
  __n128 v365;
  __int128 v366;
  __n128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __n128 v374;
  __int128 v375;
  __n128 v376;
  __int128 v377;
  __int128 v378;
  __n128 v379;
  __int128 v380;
  __int128 v381;
  __n128 v382;
  __int128 v383;
  __n128 v384;
  __int128 v385;
  __n128 v386;
  __n128 v387;
  __n128 v388;
  __n128 v389;
  __n128 v390;
  __n128 v391;
  __n128 v392;
  __n128 v393;
  __n128 v394;
  __int128 v395;
  __n128 v396;
  __n128 v397;
  __n128 v398;
  __int128 v399;
  __n128 v400;
  __n128 v401;
  __n128 v402;
  __n128 v403;
  __n128 v404;
  __n128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __n128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __n128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __n128 v428;
  __n128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v436 = xmmword_1B002D980;
  v437 = xmmword_1B002D990;
  v434 = xmmword_1B002D9A0;
  v435 = xmmword_1B002D9B0;
  v432 = xmmword_1B0028220;
  v433 = xmmword_1B0028230;
  v430 = xmmword_1B002D9C0;
  v431 = xmmword_1B002D9D0;
  __asm { FMOV            V3.2D, #1.0 }
  v428 = (__n128)_Q3;
  v429 = (__n128)_Q3;
  v426 = xmmword_1B002DA00;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B0029320;
  v425 = xmmword_1B002DA10;
  v422 = (__n128)_Q3;
  v423 = xmmword_1B0027740;
  v420 = xmmword_1B0029360;
  v421 = xmmword_1B0029370;
  v418 = _Q3;
  v419 = _Q3;
  v417 = 0u;
  v416 = 0u;
  v414 = (__n128)_Q3;
  v415 = xmmword_1B0027030;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002DA20, (__n128)xmmword_1B002DA30);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002DA40, (__n128)xmmword_1B002DA50);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DA60, (__n128)xmmword_1B002DA70);
  OUTLINED_FUNCTION_28_57((__n128)xmmword_1B002DA80, (__n128)xmmword_1B002DA90);
  v365 = v6;
  v404 = v6;
  OUTLINED_FUNCTION_29_1((__n128)xmmword_1B0025E90, v7, v8, v6);
  v367 = v9;
  v398 = v10;
  v399 = xmmword_1B0025E50;
  v396 = v10;
  v397 = v10;
  v394 = v10;
  v395 = xmmword_1B0027770;
  OUTLINED_FUNCTION_5_117(1.0, (__n128)xmmword_1B0025E50, v11, v10);
  v382 = v12;
  v366 = v13;
  v383 = v13;
  v380 = xmmword_1B002DAA0;
  v381 = xmmword_1B0029000;
  v378 = xmmword_1B002DAB0;
  v379 = v14;
  v376 = v12;
  v377 = v15;
  v374 = v12;
  v375 = v13;
  v372 = (__int128)v12;
  v373 = (__int128)v12;
  v370 = (__int128)v12;
  v371 = (__int128)v12;
  v368 = (__int128)v12;
  v369 = (__int128)v12;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_17_4(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, 600.0, 100.0, 0.4, 0.4, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    1112014848,
    1097859072,
    &v370,
    (uint64_t)&v368);
  v436 = xmmword_1B002D980;
  v437 = xmmword_1B002D990;
  v434 = xmmword_1B002D9A0;
  v435 = xmmword_1B002D9B0;
  v432 = xmmword_1B0028220;
  v433 = xmmword_1B0028230;
  v430 = xmmword_1B002D9C0;
  v431 = xmmword_1B002D9D0;
  v428 = v365;
  v429 = v365;
  v426 = xmmword_1B002DA00;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B0029320;
  v425 = xmmword_1B002DA10;
  v422 = v365;
  v423 = xmmword_1B0027740;
  v420 = xmmword_1B0029360;
  v421 = xmmword_1B0029370;
  v418 = (__int128)v365;
  OUTLINED_FUNCTION_34_29(0.509803951, v365);
  v414 = v26;
  v415 = v366;
  v412 = xmmword_1B002DA20;
  v413 = xmmword_1B002DA30;
  v410 = xmmword_1B002DA40;
  v411 = xmmword_1B002DA50;
  v408 = xmmword_1B002DA60;
  v409 = xmmword_1B002DA70;
  OUTLINED_FUNCTION_26_63();
  v404 = v27;
  v405 = v367;
  v402 = v27;
  v403 = v27;
  v400 = v27;
  v401 = v367;
  v398 = v27;
  v399 = xmmword_1B0025E50;
  v396 = v27;
  v397 = v27;
  v394 = v27;
  v395 = xmmword_1B0027770;
  v392 = v27;
  v393 = v27;
  v390 = v27;
  v391 = v27;
  v388 = v27;
  v389 = v27;
  v386 = v27;
  v387 = v27;
  v384 = v27;
  v385 = xmmword_1B0025E50;
  v382 = v27;
  v383 = v28;
  OUTLINED_FUNCTION_24_69((__n128)xmmword_1B002DAA0);
  v379 = v29;
  v376 = v30;
  v377 = v31;
  v374 = v30;
  v375 = v32;
  v372 = (__int128)v30;
  v373 = (__int128)v30;
  v370 = (__int128)v30;
  v371 = (__int128)v30;
  v368 = (__int128)v30;
  v369 = (__int128)v30;
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_38_4();
  v232 = v33;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_17_4(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, 600.0, 100.0, 0.4, 0.4, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, v232, &v418,
    v239,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    v245,
    v251,
    v257,
    v263,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    v312,
    v318,
    v324,
    v330,
    v334,
    v338,
    &v372,
    1112014848,
    1097859072,
    &v370,
    (uint64_t)&v368);
  v436 = xmmword_1B0029460;
  v437 = xmmword_1B0029470;
  v434 = xmmword_1B0029480;
  v435 = xmmword_1B0029490;
  OUTLINED_FUNCTION_37_22();
  v430 = xmmword_1B002DAC0;
  v431 = xmmword_1B002DAD0;
  v428 = v365;
  v429 = v365;
  v426 = xmmword_1B0027B20;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B002DAE0;
  v425 = xmmword_1B002DAF0;
  OUTLINED_FUNCTION_8_116(0.376470596, 0.498039216, v365);
  v415 = v366;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002DB00, (__n128)xmmword_1B002DB10);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002DB20, (__n128)xmmword_1B002DB30);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DB40, (__n128)xmmword_1B002DB50);
  OUTLINED_FUNCTION_28_57((__n128)xmmword_1B002DB60, (__n128)xmmword_1B002B0B0);
  *(_QWORD *)&v47 = OUTLINED_FUNCTION_12_106(v44, v45, v46).n128_u64[0];
  v399 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_9_75(v47, 1.0, v48);
  v385 = v49;
  v382 = (__n128)v50;
  v383 = v51;
  v380 = v50;
  v381 = v51;
  v378 = xmmword_1B002DB70;
  v379 = v52;
  v376 = (__n128)v50;
  v377 = v49;
  v374 = (__n128)v50;
  v375 = v51;
  v372 = v50;
  v373 = v50;
  v370 = v50;
  v371 = v50;
  v368 = v50;
  v369 = v50;
  OUTLINED_FUNCTION_30_59();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_17_4(v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    v246,
    v252,
    v258,
    v264,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    v313,
    v319,
    v325,
    v331,
    v335,
    v339,
    (_OWORD *)0x4170000042480000,
    1112014848,
    1097859072,
    v352,
    v358);
  v436 = xmmword_1B00295A0;
  v437 = xmmword_1B00295B0;
  v434 = xmmword_1B002DB80;
  v435 = xmmword_1B0027150;
  v432 = xmmword_1B00295C0;
  v433 = xmmword_1B00295D0;
  v430 = xmmword_1B002DB90;
  v431 = xmmword_1B0026120;
  v428 = v365;
  v429 = v365;
  v426 = xmmword_1B0027B20;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B002DAE0;
  v425 = xmmword_1B002DBB0;
  v422 = v365;
  v423 = xmmword_1B0027740;
  v420 = xmmword_1B0029630;
  v421 = xmmword_1B0026A00;
  v418 = xmmword_1B0026320;
  OUTLINED_FUNCTION_34_29(0.970078886, (__n128)xmmword_1B0026330);
  v414 = v67;
  v415 = v366;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002DBC0, (__n128)xmmword_1B002DBD0);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002DBE0, (__n128)xmmword_1B002DBF0);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DC00, (__n128)xmmword_1B002DC10);
  OUTLINED_FUNCTION_28_57((__n128)xmmword_1B002DC20, (__n128)xmmword_1B002DC30);
  v404 = (__n128)v68;
  v405 = v367;
  v402 = (__n128)v68;
  v403 = (__n128)v68;
  v400 = (__n128)v68;
  v401 = v367;
  v398 = (__n128)v68;
  v399 = xmmword_1B0025E50;
  v396 = (__n128)v68;
  v397 = (__n128)v68;
  v394 = (__n128)v68;
  v395 = xmmword_1B0027770;
  v392 = (__n128)v68;
  v393 = (__n128)v68;
  v390 = (__n128)v68;
  v391 = (__n128)v68;
  v388 = (__n128)v68;
  v389 = (__n128)v68;
  v386 = (__n128)v68;
  v387 = (__n128)v68;
  v384 = (__n128)v68;
  v385 = xmmword_1B0025E50;
  v382 = (__n128)v68;
  v383 = v69;
  v380 = v68;
  v381 = v69;
  v378 = xmmword_1B002DC40;
  v379 = v367;
  v376 = (__n128)v68;
  v377 = xmmword_1B0025E50;
  v374 = (__n128)v68;
  v375 = v69;
  v372 = v68;
  v373 = v68;
  v370 = v68;
  v371 = v68;
  v368 = v68;
  v369 = v68;
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_30_5();
  v71 = *(float *)(v70 + 2616);
  v73 = *(float *)(v72 + 3240);
  v74 = OUTLINED_FUNCTION_20_56();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v75, v76, v77, v78, v79, v80, v81, v82, v74, v83, v84, v85, 0.8, v86, v71, v73, &v422, &v420,
    0x3F6666663F666666,
    0,
    &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    (_OWORD *)0x4170000042480000,
    v344,
    v348,
    &v370,
    (uint64_t)&v368);
  v436 = xmmword_1B00296F0;
  v437 = xmmword_1B0029700;
  *(_QWORD *)&v87 = OUTLINED_FUNCTION_16_9().n128_u64[0];
  v431 = (__int128)v365;
  OUTLINED_FUNCTION_14_105(v87, v88, v89, v365);
  OUTLINED_FUNCTION_18_80((__n128)xmmword_1B002DAF0, v90, v91, v92);
  v418 = xmmword_1B0027D70;
  OUTLINED_FUNCTION_34_29(1.0, (__n128)xmmword_1B0027D80);
  v414 = v93;
  v415 = v366;
  OUTLINED_FUNCTION_35_3((__n128)xmmword_1B002DC50, (__n128)xmmword_1B002DC60);
  OUTLINED_FUNCTION_31_31((__n128)xmmword_1B002DC70, (__n128)xmmword_1B002DC80);
  OUTLINED_FUNCTION_34_26((__n128)xmmword_1B002DC90, (__n128)xmmword_1B002A1C0);
  OUTLINED_FUNCTION_28_57((__n128)xmmword_1B002DC20, (__n128)xmmword_1B002DCA0);
  v404 = v94;
  OUTLINED_FUNCTION_29_1(v367, v95, v96, v94);
  v398 = v97;
  v399 = xmmword_1B0025E50;
  v396 = v97;
  v397 = v97;
  v394 = v97;
  v395 = xmmword_1B0027770;
  OUTLINED_FUNCTION_5_117(v97.n128_f64[0], (__n128)xmmword_1B0025E50, v98, v97);
  v382 = v99;
  v383 = v100;
  v364 = vdupq_n_s64(0x3FED51B200000000uLL);
  v380 = (__int128)v364;
  v381 = xmmword_1B002DCB0;
  v378 = xmmword_1B002DCC0;
  v379 = v101;
  v376 = v99;
  v377 = v102;
  v374 = v99;
  v375 = v100;
  OUTLINED_FUNCTION_20_80(v99);
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_30_5();
  v103 = OUTLINED_FUNCTION_14_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v104, v105, v106, v107, v108, v109, v110, v111, v103, v112, v113, v114, v115, v116, v117, v118, &v422, &v420,
    0x3F6666663F666666,
    0,
    &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    v243,
    v247,
    v253,
    v259,
    v265,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v314,
    v320,
    v326,
    &v378,
    &v376,
    &v374,
    &v372,
    v345,
    v349,
    v353,
    v359);
  v436 = xmmword_1B00296F0;
  v437 = xmmword_1B0029700;
  v418 = xmmword_1B0027D70;
  v419 = xmmword_1B0027D80;
  v412 = xmmword_1B002DC50;
  v413 = xmmword_1B002DC60;
  v410 = xmmword_1B002DC70;
  v411 = xmmword_1B002DC80;
  v408 = xmmword_1B002DC90;
  v409 = xmmword_1B002A1C0;
  v407 = xmmword_1B002DCA0;
  v380 = (__int128)v364;
  v381 = xmmword_1B002DCB0;
  v378 = xmmword_1B002DCC0;
  v406 = xmmword_1B002DC20;
  OUTLINED_FUNCTION_16_9();
  v431 = (__int128)v365;
  v428 = v365;
  v429 = v365;
  v426 = xmmword_1B0027B20;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B002DAE0;
  v425 = xmmword_1B002DAF0;
  v422 = v365;
  v423 = xmmword_1B0027740;
  v420 = xmmword_1B0029630;
  v421 = xmmword_1B0026A00;
  v417 = 0u;
  v416 = 0u;
  v414 = v365;
  v415 = v366;
  v404 = v365;
  v405 = v367;
  v402 = v365;
  v403 = v365;
  v400 = v365;
  v401 = v367;
  v398 = v365;
  v399 = xmmword_1B0025E50;
  v396 = v365;
  v397 = v365;
  v394 = v365;
  v395 = xmmword_1B0027770;
  v392 = v365;
  v393 = v365;
  v390 = v365;
  v391 = v365;
  v388 = v365;
  v389 = v365;
  v386 = v365;
  v387 = v365;
  v384 = v365;
  v385 = xmmword_1B0025E50;
  v382 = v365;
  v383 = v366;
  v379 = v367;
  v376 = v365;
  v377 = xmmword_1B0025E50;
  v374 = v365;
  v375 = v366;
  OUTLINED_FUNCTION_20_80(v365);
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_36_3();
  v119 = OUTLINED_FUNCTION_14_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v120, v121, v122, v123, v124, v125, v126, v127, v119, v128, v129, v130, v131, v132, v133, v134, &v422, v228,
    v230,
    v233,
    v237,
    v240,
    &v416,
    &v414,
    &v412,
    &v410,
    v244,
    v248,
    v254,
    v260,
    v266,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v315,
    v321,
    v327,
    &v378,
    &v376,
    &v374,
    &v372,
    1112014848,
    1097859072,
    v354,
    v360);
  v436 = xmmword_1B00295A0;
  v437 = xmmword_1B00295B0;
  v434 = xmmword_1B002DB80;
  v435 = xmmword_1B0027150;
  v432 = xmmword_1B00295C0;
  v433 = xmmword_1B00295D0;
  v430 = xmmword_1B002DB90;
  v431 = xmmword_1B0026120;
  OUTLINED_FUNCTION_14_105(1.0, v135, v136, v365);
  OUTLINED_FUNCTION_18_80((__n128)xmmword_1B002DBB0, v137, v138, v139);
  v418 = xmmword_1B0026320;
  v419 = xmmword_1B0026330;
  v417 = 0u;
  v416 = 0u;
  v414 = v140;
  v415 = v366;
  v412 = xmmword_1B002DBC0;
  v413 = xmmword_1B002DBD0;
  v410 = xmmword_1B002DBE0;
  v411 = xmmword_1B002DBF0;
  v408 = xmmword_1B002DC00;
  v409 = xmmword_1B002DC10;
  v406 = xmmword_1B002DC20;
  *(_QWORD *)&v142 = OUTLINED_FUNCTION_10_107((__n128)xmmword_1B002DC30, *(double *)&v366, v141, v140).n128_u64[0];
  v399 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_11_14(v142, v143, 1.0, v144);
  v385 = v145;
  v382 = (__n128)v146;
  v383 = v147;
  v380 = v146;
  v381 = v147;
  v378 = xmmword_1B002DC40;
  v379 = v148;
  v376 = (__n128)v146;
  v377 = v145;
  v374 = (__n128)v146;
  v375 = v147;
  v372 = v146;
  v373 = v146;
  v370 = v146;
  v371 = v146;
  v368 = v146;
  v369 = v146;
  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_36_3();
  v149 = OUTLINED_FUNCTION_20_56();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v150, v151, v152, v153, v154, v155, v156, v157, v149, v158, v159, v160, 0.8, v161, v71, v73, &v422, v229,
    v231,
    v234,
    v238,
    v241,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    1112014848,
    1097859072,
    &v370,
    (uint64_t)&v368);
  v436 = xmmword_1B0029460;
  v437 = xmmword_1B0029470;
  v434 = xmmword_1B0029480;
  v435 = xmmword_1B0029490;
  OUTLINED_FUNCTION_37_22();
  v430 = xmmword_1B002DAC0;
  v431 = xmmword_1B002DAD0;
  v428 = v365;
  v429 = v365;
  v426 = xmmword_1B0027B20;
  v427 = xmmword_1B0027B30;
  v424 = xmmword_1B002DAE0;
  v425 = xmmword_1B002DAF0;
  OUTLINED_FUNCTION_8_116(0.498039216, v162, v365);
  v415 = v366;
  v412 = xmmword_1B002DB00;
  v413 = xmmword_1B002DB10;
  v410 = xmmword_1B002DB20;
  v411 = xmmword_1B002DB30;
  v408 = xmmword_1B002DB40;
  v409 = xmmword_1B002DB50;
  v406 = xmmword_1B002DCD0;
  v407 = xmmword_1B002B0B0;
  *(_QWORD *)&v164 = OUTLINED_FUNCTION_12_106(0.600000024, *(double *)&v366, v163).n128_u64[0];
  v399 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_9_75(v164, v165, v166);
  v385 = v167;
  v382 = (__n128)v168;
  v383 = v169;
  v380 = v168;
  v381 = v169;
  v378 = xmmword_1B002DB70;
  v379 = v170;
  v376 = (__n128)v168;
  v377 = v167;
  v374 = (__n128)v168;
  v375 = v169;
  v372 = v168;
  v373 = v168;
  v370 = v168;
  v371 = v168;
  v368 = v168;
  v369 = v168;
  OUTLINED_FUNCTION_0_8();
  v267 = v171;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_16_0(v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, 900.0, 150.0, v182, v183, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    v267,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v316,
    v322,
    v328,
    v332,
    v336,
    v340,
    v342,
    v346,
    v350,
    v355,
    v361);
  OUTLINED_FUNCTION_0_144();
  v406 = xmmword_1B002DCE0;
  *(_QWORD *)&v187 = OUTLINED_FUNCTION_10_107((__n128)xmmword_1B002DA90, v184, v185, v186).n128_u64[0];
  v399 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_11_14(v187, 1.0, v188, v189);
  v385 = v190;
  v382 = v191;
  v383 = v192;
  v380 = xmmword_1B002DCF0;
  v381 = xmmword_1B002DD00;
  v378 = xmmword_1B002DAB0;
  v379 = v193;
  v376 = v191;
  v377 = v190;
  v374 = v191;
  v375 = v192;
  v372 = (__int128)v191;
  v373 = (__int128)v191;
  v370 = (__int128)v191;
  v371 = (__int128)v191;
  v368 = (__int128)v191;
  v369 = (__int128)v191;
  OUTLINED_FUNCTION_0_8();
  OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_12_8();
  v235 = v194;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_16_0(v195, v196, v197, v198, v199, v200, v201, v202, v203, v204, 600.0, 100.0, 0.4, 0.4, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, v235, &v418,
    1065353216,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    v249,
    v255,
    v261,
    v268,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v317,
    v323,
    v329,
    v333,
    v337,
    v341,
    v343,
    v347,
    v351,
    v356,
    v362);
  OUTLINED_FUNCTION_0_144();
  OUTLINED_FUNCTION_26_63();
  v404 = v205;
  OUTLINED_FUNCTION_29_1(v367, v206, v207, v205);
  v398 = v208;
  v399 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_11_14(v209, v209, v210, v208);
  v385 = v211;
  v382 = v212;
  v383 = v213;
  OUTLINED_FUNCTION_24_69((__n128)xmmword_1B002DD10);
  v379 = v214;
  v376 = v215;
  v377 = v216;
  v374 = v215;
  v375 = v217;
  v372 = (__int128)v215;
  v373 = (__int128)v215;
  v370 = (__int128)v215;
  v371 = (__int128)v215;
  v368 = (__int128)v215;
  v369 = (__int128)v215;
  OUTLINED_FUNCTION_30_59();
  OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_38_4();
  v236 = v218;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_16_0(v219, v220, v221, v222, v223, v224, v225, v226, -90.0, (__n128)xmmword_1B0026420, 600.0, 100.0, 0.4, 0.4, &v422, &v420, 0x3F4CCCCD3F4CCCCDLL, v236, &v418,
    v242,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    v250,
    v256,
    v262,
    v269,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    1112014848,
    1097859072,
    v357,
    v363);
  return v0;
}

double sub_1AFE80200@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v7;
  int64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v24;

  v4 = a2;
  v7 = a3;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = 0.0;
    v10 = 32;
    v11 = *(_QWORD *)(a1 + 16);
    do
    {
      v9 = v9 + *(double *)(a1 + v10);
      v10 += 24;
      --v11;
    }
    while (v11);
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1AFBA8A00(0, v8, 0);
    v12 = 0;
    v13 = v24;
    v14 = *(_QWORD *)(v24 + 16);
    v15 = 24 * v14;
    do
    {
      v16 = *(double *)(a1 + v12 + 32);
      v17 = *(_QWORD *)(a1 + v12 + 40);
      v18 = *(_QWORD *)(a1 + v12 + 48);
      v19 = *(_QWORD *)(v24 + 24);
      swift_retain();
      if (v14 >= v19 >> 1)
        sub_1AFBA8A00((char *)(v19 > 1), v14 + 1, 1);
      *(_QWORD *)(v24 + 16) = v14 + 1;
      v20 = v24 + v15 + v12;
      *(double *)(v20 + 32) = v16 / v9;
      *(_QWORD *)(v20 + 40) = v17;
      *(_QWORD *)(v20 + 48) = v18;
      v12 += 24;
      ++v14;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v4 = a2;
    v7 = a3;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)v7 = v13;
  *(double *)(v7 + 8) = a4;
  *(_QWORD *)(v7 + 16) = v4;
  result = 1.75;
  *(_OWORD *)(v7 + 24) = xmmword_1B003DAB0;
  *(_QWORD *)(v7 + 40) = 9;
  return result;
}

void sub_1AFE80374(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1AFE80380(uint64_t a1, __n128 a2)
{
  _QWORD *v2;
  long double v3;
  long double v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  double v12;
  unint64_t v13;
  double *v14;
  double v15;
  int64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  double v22;
  char v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v36;

  v3 = a2.n128_f64[0];
  v4 = *((double *)v2 + 3);
  a2.n128_u64[0] = v2[4];
  v36 = a2.n128_f64[0];
  sub_1AFC97FC8(v2[5], *v2, a2);
  v8 = v5;
  v9 = v6;
  v10 = v7;
  v11 = v7 >> 1;
  v12 = 0.0;
  v13 = (v7 >> 1) - v6;
  if (v7 >> 1 == v6)
  {
LABEL_5:
    v16 = v11 - v6;
    if (__OFSUB__(v11, v6))
    {
      __break(1u);
    }
    else if ((v16 & 0x8000000000000000) == 0)
    {
      if (!v16)
      {
        swift_bridgeObjectRetain();
LABEL_28:
        swift_unknownObjectRelease();
        return;
      }
      v17 = atan2(v4, v3);
      if (v9 <= 0)
      {
        if (v10 >= 2)
        {
          if (v16 <= v11)
          {
            v18 = v17;
            swift_bridgeObjectRetain();
            v19 = 0;
            v20 = (double *)(v8 + 16);
            v21 = MEMORY[0x1E0DEE9D8];
            v22 = 0.0;
            do
            {
              if (v19)
                v23 = 2 * (v16 - 1 == v19);
              else
                v23 = 1;
              v24 = *(v20 - 2);
              v25 = *((_QWORD *)v20 - 1);
              v26 = *v20;
              v27 = v36 * v24 / v12;
              if (v22 == 0.0)
                v28 = (6.28318531 - v36) * 0.5 + v27 * 0.5 + 1.57079633;
              else
                v28 = -0.0;
              swift_retain();
              if (*(uint64_t *)&v26 <= a1)
              {
                swift_retain();
                v29 = v25;
              }
              else
              {
                v29 = sub_1B0008014();
              }
              swift_retain_n();
              swift_retain_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1AFD0B590();
                v21 = v33;
              }
              v30 = *(_QWORD *)(v21 + 16);
              if (v30 >= *(_QWORD *)(v21 + 24) >> 1)
              {
                sub_1AFD0B590();
                v21 = v34;
              }
              ++v19;
              v31 = v22 + v28;
              v20 += 3;
              *(_QWORD *)(v21 + 16) = v30 + 1;
              v32 = v21 + (v30 << 6);
              *(double *)(v32 + 32) = v26;
              v22 = v27 + v22 + v28;
              *(double *)(v32 + 40) = v31;
              *(double *)(v32 + 48) = v24;
              *(_QWORD *)(v32 + 56) = v25;
              *(double *)(v32 + 64) = v26;
              *(_BYTE *)(v32 + 72) = v23;
              *(double *)(v32 + 80) = v27 - v18;
              *(_QWORD *)(v32 + 88) = v29;
              swift_release_n();
              swift_release_n();
            }
            while (v16 != v19);
            goto LABEL_28;
          }
          goto LABEL_33;
        }
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_31;
  }
  if ((uint64_t)(v7 >> 1) > v6)
  {
    v14 = (double *)(v5 + 24 * v6);
    do
    {
      v15 = *v14;
      v14 += 3;
      v12 = v12 + v15;
      --v13;
    }
    while (v13);
    goto LABEL_5;
  }
LABEL_34:
  __break(1u);
}

uint64_t NonNumericalGaugeChart.body.getter@<X0>(void (**a1)(uint64_t a1)@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  void (*v4)(uint64_t);
  __int128 v5;
  _OWORD v7[3];

  v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  v7[2] = v1[2];
  v4 = (void (*)(uint64_t))swift_allocObject();
  v5 = v1[1];
  *((_OWORD *)v4 + 1) = *v1;
  *((_OWORD *)v4 + 2) = v5;
  *((_OWORD *)v4 + 3) = v1[2];
  *a1 = sub_1AFE80888;
  a1[1] = v4;
  return sub_1AFB4A714((uint64_t)v7);
}

void sub_1AFE806A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double *v19;
  uint64_t v20;

  v4 = sub_1B0007750();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B38);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B40);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = sub_1B00082E4();
  v10[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B48);
  sub_1AFE808A0(a1, a2);
  sub_1B0007378();
  v16 = v15 * 0.5;
  sub_1B0007378();
  v18 = v17 * 0.5;
  sub_1AFE81C34((uint64_t)v10, (uint64_t)v13);
  v19 = (double *)&v13[*(int *)(v11 + 36)];
  *v19 = v16;
  v19[1] = v18;
  sub_1AFACB308((uint64_t)v10, &qword_1EEE75B38);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDAE98], v4);
  sub_1AFE81C7C();
  sub_1B0007E58();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AFACB308((uint64_t)v13, &qword_1EEE75B40);
}

uint64_t sub_1AFE80864()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1AFE80888(uint64_t a1)
{
  uint64_t v1;

  sub_1AFE806A8(a1, v1 + 16);
}

uint64_t sub_1AFE80890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFE808A0(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  __n128 v7;
  uint64_t v8;
  __int128 v9;

  sub_1B0007378();
  v4 = v3 * 0.5;
  sub_1B0007378();
  if (v5 * 0.5 >= v4)
    v6 = v4;
  else
    v6 = v5 * 0.5;
  v7.n128_u64[1] = *(_QWORD *)(a2 + 40);
  v7.n128_f64[0] = v6;
  sub_1AFE80380(*(_QWORD *)(a2 + 16), v7);
  v8 = swift_allocObject();
  *(double *)(v8 + 16) = v6;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 40) = v9;
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + 32);
  sub_1AFB4A714(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B68);
  sub_1AFAD71A0(&qword_1EEE75B70, &qword_1EEE75B60, MEMORY[0x1E0DEAF48]);
  sub_1AFAD71A0(&qword_1EEE75B78, &qword_1EEE75B68, MEMORY[0x1E0CD8668]);
  sub_1AFE81D30();
  return sub_1B0008284();
}

uint64_t sub_1AFE809F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = a4 - *(double *)(a2 + 8);
  sub_1B0008368();
  *(_QWORD *)a3 = v8;
  *(double *)(a3 + 8) = v10;
  *(double *)(a3 + 16) = a4;
  *(_QWORD *)(a3 + 24) = 0x3FF4000000000000;
  *(_BYTE *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v11;
  *(_QWORD *)(a3 + 56) = v12;
  *(_QWORD *)(a3 + 64) = v9;
  *(_WORD *)(a3 + 72) = 256;
  return swift_retain();
}

uint64_t initializeWithCopy for NonNumericalGaugeChart(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NonNumericalGaugeChart(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NonNumericalGaugeChart(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNumericalGaugeChart(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNumericalGaugeChart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNumericalGaugeChart()
{
  return &type metadata for NonNumericalGaugeChart;
}

void sub_1AFE80C1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for NonNumericalGaugeChart.Data(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for NonNumericalGaugeChart.Data(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for NonNumericalGaugeChart.Data()
{
  return &type metadata for NonNumericalGaugeChart.Data;
}

void sub_1AFE80CF4()
{
  sub_1AFAD71A0(&qword_1EEE75B00, &qword_1EEE75B08, MEMORY[0x1E0CD9318]);
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Arc(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Arc(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Arc()
{
  return &type metadata for Arc;
}

uint64_t destroy for NonNumericalGaugeChart.SegmentViewModel()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for NonNumericalGaugeChart.SegmentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NonNumericalGaugeChart.SegmentViewModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for NonNumericalGaugeChart.SegmentViewModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNumericalGaugeChart.SegmentViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNumericalGaugeChart.SegmentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNumericalGaugeChart.SegmentViewModel()
{
  return &type metadata for NonNumericalGaugeChart.SegmentViewModel;
}

uint64_t sub_1AFE80FF0()
{
  return MEMORY[0x1E0DEB428];
}

void sub_1AFE80FFC()
{
  sub_1AFAD71A0(&qword_1EEE75B10, &qword_1EEE75B18, MEMORY[0x1E0CD8668]);
}

uint64_t sub_1AFE81028@<X0>(_BYTE *a1@<X8>, double a2@<D0>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = GEOLocationCoordinate2DMake(*v2, a2);
  *a1 = result;
  return result;
}

double sub_1AFE81050@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  if (*(_BYTE *)(v1 + 32))
    sub_1AFE81484(*(_BYTE *)(v1 + 32) != 1, (uint64_t)v6, *(double *)(v1 + 8), *(double *)(v1 + 16), *(double *)(v1 + 24));
  else
    sub_1AFE810E4((uint64_t)v6, *(double *)(v1 + 8), *(double *)(v1 + 16), *(double *)(v1 + 24));
  v3 = v7;
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v3;
  return result;
}

double sub_1AFE810E4@<D0>(uint64_t a1@<X8>, double a2@<D1>, double a3@<D2>, double a4@<D3>)
{
  double *v4;
  double *v5;
  CGPath *Mutable;
  double v11;
  double v12;
  __double2 v13;
  float cosval;
  float sinval;
  __double2 v16;
  float v17;
  float v18;
  double result;
  double v20;
  float v21;
  float v22;
  double v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v5 = v4;
  Mutable = CGPathCreateMutable();
  if (a4 == 0.0)
  {
    v11 = *v5;
    __sincos_stret(*v5 * 0.5);
    sub_1B0008A1C();
    sub_1B0008A34();
    sub_1B0008A28();
    sin(-(v11 * 0.5));
    sub_1B0008A34();
  }
  else
  {
    v20 = atan2(a4 * a4 / (a2 + a2) + a4, a2 + a4);
    v23 = atan2(a4 - a4 * a4 / (a3 + a3), a3 - a4);
    v12 = *v5 * 0.5;
    __sincos_stret(v12);
    v13 = __sincos_stret(v12 - v20);
    cosval = v13.__cosval;
    sinval = v13.__sinval;
    v16 = __sincos_stret(v12 - v23);
    v17 = v16.__cosval;
    v18 = v16.__sinval;
    v21 = v18;
    v22 = v17;
    sub_1B0008A1C();
    sub_1B0008A34();
    sub_1B0008A28();
    atan2(sinval, cosval);
    sub_1B0008A28();
    sub_1B0008A28();
    sub_1B0008A34();
    sub_1B0008A28();
    atan2((float)-v21, v22);
    sub_1B0008A28();
  }
  sub_1B0008A28();
  CGPathCloseSubpath(Mutable);
  sub_1B0007C90();
  result = *(double *)&v24;
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v25;
  *(_BYTE *)(a1 + 32) = v26;
  return result;
}

double sub_1AFE81484@<D0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  double *v5;
  double *v6;
  CGPath *Mutable;
  double v13;
  __double2 v14;
  float cosval;
  float sinval;
  __double2 v17;
  float v18;
  float v19;
  double v20;
  double v21;
  double v22;
  float v23;
  __float2 v24;
  float v25;
  __float2 v26;
  double v27;
  double v28;
  float v29;
  float v30;
  float v31;
  float v32;
  double result;
  float v34;
  float v35;
  float v36;
  double v37;
  float v38;
  double v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v6 = v5;
  Mutable = CGPathCreateMutable();
  v39 = atan2(a5 * a5 / (a3 + a3) + a5, a3 + a5);
  v37 = atan2(a5 - a5 * a5 / (a4 + a4), a4 - a5);
  v13 = *v6 * 0.5;
  __sincos_stret(v13);
  v14 = __sincos_stret(v13 - v39);
  cosval = v14.__cosval;
  v38 = cosval;
  sinval = v14.__sinval;
  v36 = sinval;
  v17 = __sincos_stret(v13 - v37);
  v18 = v17.__cosval;
  v35 = v18;
  v19 = v17.__sinval;
  v34 = v19;
  v20 = (a4 - a3) * 0.5;
  v21 = atan2(v20 + v20 * v20 / (a3 + a3), v20 + a3);
  v22 = atan2(v20 - v20 * v20 / (a4 + a4), a4 - v20);
  v23 = v13 - v21;
  v24 = __sincosf_stret(v23);
  v25 = v13 - v22;
  v26 = __sincosf_stret(v25);
  atan2(v36, v38);
  v27 = atan2(v24.__sinval, v24.__cosval);
  v28 = atan2((float)-v26.__sinval, v26.__cosval);
  atan2((float)-v34, v35);
  if ((a1 & 1) != 0)
  {
    v31 = v27;
    __sincosf_stret(v31);
    v32 = -v28;
    __sincosf_stret(v32);
    sub_1B0008A28();
    sub_1B0008A28();
    sub_1B0008A34();
  }
  else
  {
    v29 = -v27;
    __sincosf_stret(v29);
    v30 = v28;
    __sincosf_stret(v30);
    sub_1B0008A1C();
    sub_1B0008A34();
    sub_1B0008A28();
    sub_1B0008A28();
  }
  sub_1B0008A28();
  sub_1B0008A28();
  sub_1B0008A28();
  CGPathCloseSubpath(Mutable);
  sub_1B0007C90();
  result = *(double *)&v40;
  *(_OWORD *)a2 = v40;
  *(_OWORD *)(a2 + 16) = v41;
  *(_BYTE *)(a2 + 32) = v42;
  return result;
}

double sub_1AFE81A10@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v3 = v1[1];
  v8 = *v1;
  v9 = v3;
  v10 = *((_BYTE *)v1 + 32);
  sub_1AFE81050((uint64_t)v6);
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_1AFE81A68(uint64_t a1)
{
  double *v1;

  return GEOLocationCoordinate2DMake(a1, *v1);
}

uint64_t sub_1AFE81AA0()
{
  sub_1AFE81BF8();
  return sub_1B000814C();
}

uint64_t sub_1AFE81AF0()
{
  sub_1AFE81BF8();
  return sub_1B000811C();
}

uint64_t sub_1AFE81B40()
{
  sub_1AFE81BF8();
  return sub_1B0008134();
}

unint64_t sub_1AFE81B7C()
{
  unint64_t result;

  result = qword_1EEE75B20;
  if (!qword_1EEE75B20)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DBEC, &type metadata for Arc);
    atomic_store(result, (unint64_t *)&qword_1EEE75B20);
  }
  return result;
}

unint64_t sub_1AFE81BBC()
{
  unint64_t result;

  result = qword_1EEE75B28;
  if (!qword_1EEE75B28)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DB9C, &type metadata for Arc);
    atomic_store(result, (unint64_t *)&qword_1EEE75B28);
  }
  return result;
}

unint64_t sub_1AFE81BF8()
{
  unint64_t result;

  result = qword_1EEE75B30;
  if (!qword_1EEE75B30)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DC3C, &type metadata for Arc);
    atomic_store(result, (unint64_t *)&qword_1EEE75B30);
  }
  return result;
}

uint64_t sub_1AFE81C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFE81C7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE75B50;
  if (!qword_1EEE75B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE75B40);
    sub_1AFAD71A0(&qword_1EEE75B58, &qword_1EEE75B38, MEMORY[0x1E0CDFCF8]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD90E0];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE75B50);
  }
  return result;
}

uint64_t sub_1AFE81D00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AFE81D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AFE809F4(a1, v2 + 24, a2, *(double *)(v2 + 16));
}

unint64_t sub_1AFE81D30()
{
  unint64_t result;

  result = qword_1EEE75B80;
  if (!qword_1EEE75B80)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DB64, &type metadata for NonNumericalGaugeChart.SegmentViewModel);
    atomic_store(result, (unint64_t *)&qword_1EEE75B80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Arc.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AFE81DB8 + 4 * byte_1B003DAD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AFE81DEC + 4 * byte_1B003DAD0[v4]))();
}

uint64_t sub_1AFE81DEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE81DF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE81DFCLL);
  return result;
}

uint64_t sub_1AFE81E08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE81E10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AFE81E14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE81E1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Arc.Style()
{
  return &type metadata for Arc.Style;
}

unint64_t sub_1AFE81E3C()
{
  unint64_t result;

  result = qword_1EEE75B88;
  if (!qword_1EEE75B88)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DCCC, &type metadata for Arc.Style);
    atomic_store(result, (unint64_t *)&qword_1EEE75B88);
  }
  return result;
}

unint64_t sub_1AFE81E7C()
{
  unint64_t result;

  result = qword_1EEE75B90;
  if (!qword_1EEE75B90)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003DD0C, &type metadata for Arc.Style);
    atomic_store(result, (unint64_t *)&qword_1EEE75B90);
  }
  return result;
}

void sub_1AFE81EB8()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 1;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x617274736F746C41;
  v21 = 0xEF4C202D20737574;
  v22 = 0xD000000000000013;
  v23 = 0x80000001B0051480;
  v24 = 6;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC1BA0C();
  sub_1AFC1BA0C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E3851EC3DCCCCCDLL;
  *(_QWORD *)&v11 = 0x42A0000041400000;
  LODWORD(v9) = 1093310165;
  DWORD2(v8) = 1109393408;
  *(_QWORD *)&v8 = 0x4100000041727059;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 10, 0, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E19999A3DB851ECLL,
    1091529988,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1091005916,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t Gradient.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1B0006838();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B00067FC();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v24 = a1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1AFAEED9C();
    v8 = *(unsigned __int8 *)(v3 + 80);
    v23 = v6;
    v9 = v6 + ((v8 + 32) & ~v8);
    v25 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v11 = v3;
    do
    {
      v10(v5, v9, v2);
      v12 = sub_1B0006820();
      Color.init(hex:)(v12, v13);
      sub_1B000682C();
      v14 = sub_1B00082A8();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v17 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_145();
        v17 = v26;
      }
      v18 = *(_QWORD *)(v17 + 16);
      if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        OUTLINED_FUNCTION_0_145();
        v17 = v26;
      }
      *(_QWORD *)(v17 + 16) = v18 + 1;
      v19 = v17 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v9 += v25;
      --v7;
      v3 = v11;
    }
    while (v7);
    swift_bridgeObjectRelease();
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v20 = MEMORY[0x1B5E021D8](v17);
  v21 = sub_1B0006808();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
  return v20;
}

void sub_1AFE828B8()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36[9];

  v36[0] = 3;
  v31 = 0xD000000000000010;
  v32 = 0x80000001B0051400;
  v33 = 0xD000000000000014;
  v34 = 0x80000001B0051420;
  v35 = 10;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 10;
  v21 = 0xD000000000000010;
  v22 = 0x80000001B0051400;
  v23 = 0xD000000000000014;
  v24 = 0x80000001B0051420;
  v25 = 6;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBD31FC();
  sub_1AFBD31FC();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V4.2S, #13.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E4CCCCD3DB851ECLL;
  *(_QWORD *)&v12 = 0x437A000041500000;
  LODWORD(v10) = 1093310349;
  DWORD2(v9) = 1126170624;
  *(_QWORD *)&v9 = 0x4190000041727059;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 12, 0, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x40E0000000000000,
    v9,
    0x3E1DB22D3DCCCCCDLL,
    1091529988,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1091005916,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

BOOL static VFXEffectType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_1AFE830A4(char a1)
{
  _BYTE *v1;
  void *v2;

  v2 = &unk_1E6084248;
  if ((a1 & 1) != 0)
    v2 = &unk_1E6084220;
  if (*v1)
    return &unk_1E6084270;
  else
    return v2;
}

uint64_t VFXEffectType.hash(into:)()
{
  return sub_1B0009010();
}

uint64_t VFXEffectType.hashValue.getter()
{
  sub_1B0009004();
  sub_1B0009010();
  return sub_1B0009040();
}

uint64_t VFXEffectType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F6973696C6C6F63;
  else
    return 0x756F72676B636162;
}

unint64_t sub_1AFE83194()
{
  unint64_t result;

  result = qword_1EEE75B98;
  if (!qword_1EEE75B98)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for VFXEffectType, &type metadata for VFXEffectType);
    atomic_store(result, (unint64_t *)&qword_1EEE75B98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VFXEffectType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFE83220 + 4 * byte_1B003DD85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFE83254 + 4 * byte_1B003DD80[v4]))();
}

uint64_t sub_1AFE83254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE8325C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFE83264);
  return result;
}

uint64_t sub_1AFE83270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFE83278);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFE8327C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFE83284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VFXEffectType()
{
  return &type metadata for VFXEffectType;
}

void sub_1AFE832A0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22[16];
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 0;
  v29 = 0x617274736F746C41;
  v30 = 0xEF4C202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0051480;
  v33 = 9;
  v25 = 0x80000001B0050EC0;
  v26 = 0xD000000000000014;
  v27 = 0x80000001B0050EE0;
  v28 = 9;
  v20 = 0x2D20737572726943;
  v21 = 0xEA00000000005320;
  strcpy(v22, "Cirrus_SingleS");
  v22[15] = -18;
  v23 = 6;
  v24 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC6AB5C();
  sub_1AFC6AB5C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B449BA63F4CCCCDLL;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 30, 0, 3250, 200, 30, 1, 6, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    _Q0,
    _Q0,
    v11,
    1084227584,
    v12,
    _Q0,
    _Q0,
    v13,
    0x404000003E4CCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40C0000040800000);
}

uint64_t InterpolatedMoonData.init(illuminatedFraction:moonPhase:distance:moonrise:moonset:nextFullMoonDuration:librationPositionAngle:isMoonRisen:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>)
{
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  v23 = sub_1B0006994();
  MEMORY[0x1E0C80A78](v23);
  *(double *)a9 = a10;
  *(_BYTE *)(a9 + 8) = a1;
  *(double *)(a9 + 16) = a11;
  v24 = (int *)OUTLINED_FUNCTION_0_146();
  sub_1AFAF8390(a2, a9 + v24[7]);
  sub_1AFAF8390(a3, a9 + v24[8]);
  v25 = a9 + v24[9];
  *(_QWORD *)v25 = a4;
  *(_QWORD *)(v25 + 8) = a5;
  *(_BYTE *)(v25 + 16) = a6;
  *(double *)(a9 + v24[10]) = a12;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a7;
  *(_QWORD *)(v26 + 24) = a8;
  sub_1AFB4AE10();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3B80);
  sub_1AFB3A8BC();
  sub_1B0008C68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75BA0);
  swift_allocObject();
  v27 = sub_1B0006A9C();
  swift_release();
  sub_1AFB4BDAC(a3);
  result = sub_1AFB4BDAC(a2);
  *(_QWORD *)(a9 + v24[11]) = v27;
  return result;
}

uint64_t type metadata accessor for InterpolatedMoonData()
{
  uint64_t result;

  result = qword_1EEE75C00;
  if (!qword_1EEE75C00)
    return swift_getSingletonMetadata();
  return result;
}

double InterpolatedMoonData.illuminatedFraction.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t InterpolatedMoonData.moonPhase.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

double InterpolatedMoonData.distance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t InterpolatedMoonData.moonrise.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_146();
  return OUTLINED_FUNCTION_1_128(v1 + *(int *)(v3 + 28), a1);
}

uint64_t InterpolatedMoonData.moonset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_146();
  return OUTLINED_FUNCTION_1_128(v1 + *(int *)(v3 + 32), a1);
}

uint64_t InterpolatedMoonData.nextFullMoonDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_0_146() + 36);
  v2 = *(_QWORD *)v1;
  sub_1AFE83E58(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  return v2;
}

double InterpolatedMoonData.librationPositionAngle.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_146() + 40));
}

uint64_t InterpolatedMoonData.isMoonRisen.getter()
{
  unsigned __int8 v1;

  OUTLINED_FUNCTION_0_146();
  sub_1B0006A90();
  return v1;
}

uint64_t sub_1AFE83E0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AFE83E30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1AFE83E58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1AFB43350(a1, a2, a3);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for InterpolatedMoonData(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = a3[7];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_1B00058D8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[8];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v13, 1, v10))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v14, v15, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
    }
    v17 = a3[9];
    v18 = (char *)v4 + v17;
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = *((unsigned __int8 *)v19 + 16);
    if (v20 == 255)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v18[16] = *((_BYTE *)v19 + 16);
    }
    else
    {
      v21 = *v19;
      v22 = v19[1];
      sub_1AFB43350(*v19, v22, *((_BYTE *)v19 + 16));
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v22;
      v18[16] = v20;
    }
    v23 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for InterpolatedMoonData(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v4 = a1 + a2[7];
  v5 = sub_1B00058D8();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6, v5);
  v7 = a1 + a2[9];
  v8 = *(unsigned __int8 *)(v7 + 16);
  if (v8 != 255)
    sub_1AFC35708(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), v8);
  return swift_release();
}

uint64_t initializeWithCopy for InterpolatedMoonData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  if (__swift_getEnumTagSinglePayload(a2 + v11, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *((unsigned __int8 *)v17 + 16);
  if (v18 == 255)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_BYTE *)(v16 + 16) = *((_BYTE *)v17 + 16);
  }
  else
  {
    v19 = *v17;
    v20 = v17[1];
    sub_1AFB43350(*v17, v20, *((_BYTE *)v17 + 16));
    *(_QWORD *)v16 = v19;
    *(_QWORD *)(v16 + 8) = v20;
    *(_BYTE *)(v16 + 16) = v18;
  }
  v21 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InterpolatedMoonData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B00058D8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = __swift_getEnumTagSinglePayload(a1 + v14, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v19 = *(_QWORD *)(v9 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v15, v9);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v15, v16, v9);
LABEL_13:
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *(unsigned __int8 *)(a2 + v21 + 16);
  if (*(unsigned __int8 *)(a1 + v21 + 16) == 255)
  {
    if (v24 == 255)
    {
      v33 = *v23;
      *(_BYTE *)(v22 + 16) = *((_BYTE *)v23 + 16);
      *(_OWORD *)v22 = v33;
    }
    else
    {
      v30 = *(_QWORD *)v23;
      v31 = *((_QWORD *)v23 + 1);
      sub_1AFB43350(v30, v31, v24);
      *(_QWORD *)v22 = v30;
      *(_QWORD *)(v22 + 8) = v31;
      *(_BYTE *)(v22 + 16) = v24;
    }
  }
  else if (v24 == 255)
  {
    sub_1AFE84534(v22);
    v32 = *((_BYTE *)v23 + 16);
    *(_OWORD *)v22 = *v23;
    *(_BYTE *)(v22 + 16) = v32;
  }
  else
  {
    v25 = *(_QWORD *)v23;
    v26 = *((_QWORD *)v23 + 1);
    sub_1AFB43350(v25, v26, v24);
    v27 = *(_QWORD *)v22;
    v28 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v26;
    v29 = *(_BYTE *)(v22 + 16);
    *(_BYTE *)(v22 + 16) = v24;
    sub_1AFC35708(v27, v28, v29);
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1AFE84534(uint64_t a1)
{
  destroy for TemporalString(a1);
  return a1;
}

uint64_t initializeWithTake for InterpolatedMoonData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B00058D8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  if (__swift_getEnumTagSinglePayload(a2 + v11, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  v15 = a3[9];
  v16 = a3[10];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for InterpolatedMoonData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B00058D8();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = a3[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = __swift_getEnumTagSinglePayload(a1 + v14, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v15, v16, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v19 = *(_QWORD *)(v9 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v15, v9);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v15, v16, v9);
LABEL_13:
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int8 *)(a1 + v21 + 16);
  if (v24 == 255)
  {
LABEL_17:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    goto LABEL_18;
  }
  v25 = *(unsigned __int8 *)(v23 + 16);
  if (v25 == 255)
  {
    sub_1AFE84534(v22);
    goto LABEL_17;
  }
  v26 = *(_QWORD *)v22;
  v27 = *(_QWORD *)(v22 + 8);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_BYTE *)(v22 + 16) = v25;
  sub_1AFC35708(v26, v27, v24);
LABEL_18:
  v28 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolatedMoonData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE84924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InterpolatedMoonData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE849B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

void sub_1AFE84A2C()
{
  unint64_t v0;

  sub_1AFB4BDEC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AFE84ACC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 5;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 10;
  v20 = 0xD000000000000010;
  v21 = 0x80000001B0051400;
  v22 = 0xD000000000000014;
  v23 = 0x80000001B0051420;
  v24 = 6;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFE852C4();
  sub_1AFE852C4();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3F19999A3F000000;
  *(_QWORD *)&v11 = 0x432F32C742200000;
  LODWORD(v9) = 1093310165;
  DWORD2(v8) = 1120403456;
  *(_QWORD *)&v8 = 0x4270000041727059;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 11, 0, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4140000000000000,
    v8,
    0x3F4CCCCD3F19999ALL,
    1091529988,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1091005916,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFE852C4()
{
  uint64_t v0;
  double v7;
  double v8;
  __n128 v9;
  __n128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  double v24;
  __n128 v25;
  float v26;
  float v27;
  double v28;
  double v29;
  double v30;
  double v31;
  __n128 v32;
  double v33;
  double v34;
  double v35;
  double v36;
  __n128 v37;
  __n128 v38;
  __int128 v39;
  double v40;
  __int128 v41;
  __int128 v42;
  double v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  double v47;
  double v48;
  double v49;
  __n128 v50;
  double v51;
  double v52;
  double v53;
  double v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  _OWORD *v58;
  _OWORD *v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  double v67;
  __n128 v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  double v78;
  double v79;
  double v80;
  __n128 v81;
  __int128 v82;
  __n128 v83;
  __int128 v84;
  __int128 v85;
  double v86;
  double v87;
  _OWORD *v88;
  unsigned int v89;
  __n128 *v90;
  uint64_t v91;
  float v92;
  uint64_t v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  _OWORD *v100;
  uint64_t v101;
  double v102;
  __n128 v103;
  float v104;
  float v105;
  float v106;
  __int128 v107;
  __int128 v108;
  double v109;
  __n128 v110;
  __int128 v111;
  double v112;
  double v113;
  __int128 v114;
  __n128 v115;
  __int128 v116;
  double v117;
  double v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  double v128;
  __n128 v129;
  float v130;
  float v131;
  float v132;
  __n128 v133;
  double v134;
  __n128 v135;
  __n128 v136;
  __int128 v137;
  __n128 v138;
  __int128 v139;
  __int128 v140;
  __n128 v141;
  __int128 v142;
  _OWORD *v143;
  double v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  uint64_t v152;
  __n128 v153;
  float v154;
  __n128 v155;
  double v156;
  __n128 v157;
  __int128 v158;
  __n128 v159;
  __int128 v160;
  double v161;
  double v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  uint64_t v170;
  float v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  uint64_t v183;
  double v184;
  float v185;
  float v186;
  __int128 v187;
  __n128 v188;
  __int128 v189;
  __n128 v190;
  __int128 v191;
  __int128 v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  uint64_t v200;
  double v201;
  float v202;
  __n128 v203;
  double v204;
  double v205;
  __n128 v206;
  __int128 v207;
  double v208;
  __int128 v209;
  __int128 v210;
  double v211;
  __n128 v212;
  __n128 v213;
  __n128 v214;
  double v215;
  __n128 v216;
  __int128 v217;
  double v218;
  __n128 v219;
  __n128 v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  uint64_t v228;
  double v229;
  __n128 v230;
  float v231;
  __int128 v232;
  __int128 v233;
  double v234;
  __n128 v235;
  __int128 v236;
  __n128 v237;
  __int128 v238;
  __int128 v239;
  double v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  uint64_t v248;
  double v249;
  __n128 v250;
  float v251;
  float v252;
  float v253;
  float v254;
  float v255;
  uint64_t v257;
  int v258;
  int v259;
  int v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  _OWORD *v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  _OWORD *v429;
  _OWORD *v430;
  _OWORD *v431;
  _OWORD *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  __n128 v437;
  float v438;
  __n128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __n128 v447;
  __int128 v448;
  __n128 v449;
  __int128 v450;
  __n128 v451;
  __int128 v452;
  __n128 v453;
  __int128 v454;
  __n128 v455;
  __int128 v456;
  __n128 v457;
  __int128 v458;
  __n128 v459;
  __n128 v460;
  __n128 v461;
  __n128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __n128 v467;
  __int128 v468;
  __n128 v469;
  __n128 v470;
  __n128 v471;
  __int128 v472;
  __n128 v473;
  __int128 v474;
  __n128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __n128 v479;
  __int128 v480;
  __n128 v481;
  __int128 v482;
  __n128 v483;
  __int128 v484;
  __n128 v485;
  __int128 v486;
  __n128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __n128 v501;
  __int128 v502;
  __n128 v503;
  __n128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v509 = xmmword_1B002B2B0;
  v510 = xmmword_1B00276B0;
  v507 = xmmword_1B002B2C0;
  v508 = xmmword_1B0026AB0;
  v505 = xmmword_1B002B2D0;
  v506 = xmmword_1B002B2E0;
  __asm { FMOV            V4.2D, #1.0 }
  v503 = _Q4;
  v504 = _Q4;
  __asm { FMOV            V0.2D, #0.5 }
  v439 = _Q0;
  v501 = _Q0;
  v502 = xmmword_1B0026E60;
  v499 = xmmword_1B002B2F0;
  v500 = xmmword_1B002B300;
  OUTLINED_FUNCTION_31_0((__n128)xmmword_1B002B310, (__n128)xmmword_1B0029080);
  v495 = xmmword_1B002B320;
  v496 = xmmword_1B0027740;
  v493 = xmmword_1B002B330;
  v494 = xmmword_1B0027730;
  OUTLINED_FUNCTION_28_58(1.0, 1.0, v7, v8, v9);
  v487 = v10;
  v488 = xmmword_1B0027030;
  v485 = v10;
  v486 = xmmword_1B0025E90;
  v483 = v10;
  v484 = v11;
  v481 = v10;
  v482 = xmmword_1B0025E90;
  v479 = v10;
  v480 = xmmword_1B0025E50;
  v477 = (__int128)v10;
  v478 = xmmword_1B0025E90;
  v475 = v10;
  v476 = xmmword_1B0026140;
  v473 = v10;
  v474 = xmmword_1B0025E90;
  v471 = v10;
  v472 = v12;
  v469 = v10;
  v470 = v10;
  v467 = v10;
  v468 = xmmword_1B0027770;
  v465 = xmmword_1B0027FE0;
  v466 = xmmword_1B0025E90;
  v463 = xmmword_1B0028000;
  v464 = xmmword_1B002B340;
  v461 = v10;
  v462 = v10;
  v459 = v10;
  v460 = v10;
  v457 = v10;
  v458 = xmmword_1B0025E50;
  v455 = v10;
  v456 = xmmword_1B0027030;
  v453 = v10;
  OUTLINED_FUNCTION_35_34((__n128)xmmword_1B00277B0, 1.0, 1.0, 1.0, v10);
  v440 = v13;
  v449 = (__n128)v13;
  v450 = v14;
  v447 = (__n128)v13;
  v448 = v15;
  v445 = v13;
  v446 = v13;
  v443 = v13;
  v444 = v13;
  v441 = v13;
  v442 = v13;
  OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_15_2(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, 0.1, 0.8, 0.8, 0.8, &v495, &v493, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v491,
    0,
    &v489,
    &v487,
    &v485,
    &v483,
    &v481,
    &v479,
    &v477,
    &v475,
    &v473,
    &v471,
    &v469,
    &v467,
    &v465,
    &v463,
    &v461,
    &v459,
    &v457,
    &v455,
    &v453,
    &v451,
    &v449,
    &v447,
    &v445,
    1112014848,
    1097859072,
    &v443,
    (uint64_t)&v441);
  OUTLINED_FUNCTION_13_4();
  v507 = xmmword_1B002B350;
  v508 = xmmword_1B0026A00;
  v505 = xmmword_1B002B360;
  v506 = xmmword_1B002B370;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  OUTLINED_FUNCTION_4_37();
  OUTLINED_FUNCTION_26_17((__n128)xmmword_1B002B380);
  v495 = xmmword_1B002B390;
  v496 = xmmword_1B0027740;
  OUTLINED_FUNCTION_31_4((__n128)xmmword_1B002B330, (__n128)xmmword_1B0028260);
  v33 = OUTLINED_FUNCTION_28_58(v28, v29, v30, v31, v32);
  OUTLINED_FUNCTION_32_44(v33, v34, v35, v36, v37);
  v486 = xmmword_1B0025E90;
  v483 = v38;
  v484 = xmmword_1B0027730;
  v481 = v38;
  v482 = xmmword_1B0025E90;
  v479 = v38;
  v480 = xmmword_1B0025E50;
  v477 = xmmword_1B0027FE0;
  v478 = xmmword_1B0025E90;
  v475 = v38;
  v476 = xmmword_1B0026140;
  v473 = v38;
  v474 = xmmword_1B0025E90;
  v471 = v38;
  v472 = v39;
  *(_QWORD *)&v40 = OUTLINED_FUNCTION_23_72(1.0, 1.0, 0.899999976, *(double *)&v39, v38).n128_u64[0];
  v465 = v41;
  v466 = v42;
  OUTLINED_FUNCTION_5_118(v40, *(double *)&v42, *(double *)&v41, v43, v44, v45, v46);
  *(_QWORD *)&v51 = OUTLINED_FUNCTION_35_34((__n128)xmmword_1B00277B0, v47, v48, v49, v50).n128_u64[0];
  OUTLINED_FUNCTION_9_111(v51, v52, v53, v54, v55, v56, v57);
  OUTLINED_FUNCTION_1_29();
  v285 = v58;
  OUTLINED_FUNCTION_21_13();
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_15_2(v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, &v495, &v493, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v491,
    0,
    &v489,
    &v487,
    &v485,
    &v483,
    v285,
    v294,
    v303,
    v312,
    v321,
    v330,
    v339,
    v348,
    v357,
    v366,
    v375,
    v384,
    v393,
    v397,
    v401,
    v405,
    v409,
    &v447,
    &v445,
    1112014848,
    1097859072,
    &v443,
    (uint64_t)&v441);
  v509 = xmmword_1B002B3A0;
  v510 = xmmword_1B002B3B0;
  v507 = xmmword_1B002B3C0;
  v508 = xmmword_1B002B3D0;
  v505 = xmmword_1B002B3E0;
  v506 = xmmword_1B0026110;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  v501 = v439;
  v502 = xmmword_1B00271F0;
  v499 = v440;
  v500 = v440;
  OUTLINED_FUNCTION_31_0((__n128)xmmword_1B002B3F0, (__n128)xmmword_1B002B400);
  v495 = xmmword_1B002B410;
  v496 = xmmword_1B0027740;
  OUTLINED_FUNCTION_31_4((__n128)xmmword_1B002B420, (__n128)xmmword_1B002B430);
  v491 = v75;
  v492 = v75;
  v490 = 0u;
  v489 = 0u;
  v487 = (__n128)v75;
  v488 = xmmword_1B0027030;
  v485 = (__n128)v75;
  v486 = xmmword_1B002B440;
  v483 = (__n128)v75;
  v484 = xmmword_1B0027730;
  v481 = (__n128)v75;
  v482 = xmmword_1B0025E90;
  v479 = (__n128)v75;
  v480 = xmmword_1B0025E50;
  v477 = v75;
  v478 = xmmword_1B002B450;
  v475 = (__n128)v75;
  v476 = xmmword_1B0026140;
  v473 = (__n128)v75;
  v474 = xmmword_1B002B460;
  v471 = (__n128)v75;
  v472 = v76;
  v469 = (__n128)v75;
  v470 = (__n128)v75;
  v467 = (__n128)v75;
  OUTLINED_FUNCTION_25_64();
  v465 = xmmword_1B0027FE0;
  v466 = v77;
  v463 = xmmword_1B0028000;
  v464 = xmmword_1B002B340;
  OUTLINED_FUNCTION_8_30(1.0, v78, v79, v80, *(double *)&v77, v81);
  v458 = v82;
  v455 = v83;
  v456 = v84;
  v453 = v83;
  v454 = xmmword_1B00277B0;
  v451 = v83;
  v452 = v85;
  v449 = v83;
  v450 = v82;
  v447 = v83;
  v448 = v84;
  OUTLINED_FUNCTION_8_117(1.0, *(double *)&v85, v86, *(double *)&v82, v87, v83);
  OUTLINED_FUNCTION_1_29();
  v286 = v88;
  OUTLINED_FUNCTION_19_4();
  v257 = v89 | 0x3F4CCCCD00000000;
  v437 = v90[163];
  v92 = *(float *)(v91 + 2228);
  v438 = *(float *)(v93 + 1392);
  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_15_2(v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v92, 0.8, 0.8, v106, &v495, &v493, v257,
    1061997773,
    &v491,
    0,
    &v489,
    &v487,
    &v485,
    &v483,
    v286,
    v295,
    v304,
    v313,
    v322,
    v331,
    v340,
    v349,
    v358,
    v367,
    v376,
    v385,
    v394,
    v398,
    v402,
    v406,
    v410,
    &v447,
    &v445,
    1112014848,
    1097859072,
    v429,
    v433);
  v509 = xmmword_1B002B470;
  v510 = v440;
  v507 = xmmword_1B002B480;
  v508 = xmmword_1B002B490;
  v505 = v440;
  v506 = v440;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  v501 = (__n128)v440;
  v502 = xmmword_1B0027030;
  v499 = v440;
  v500 = v440;
  OUTLINED_FUNCTION_31_0((__n128)xmmword_1B002B4A0, (__n128)xmmword_1B002B4B0);
  v495 = xmmword_1B002B4C0;
  v496 = xmmword_1B00277A0;
  OUTLINED_FUNCTION_31_4((__n128)xmmword_1B002B420, (__n128)xmmword_1B002B4D0);
  OUTLINED_FUNCTION_28_14((__n128)xmmword_1B0026320, (__n128)xmmword_1B0027440);
  v487 = (__n128)v107;
  v488 = v108;
  v485 = (__n128)v107;
  v486 = xmmword_1B002B4E0;
  v483 = (__n128)v107;
  v484 = xmmword_1B002B4F0;
  v481 = (__n128)v107;
  v482 = xmmword_1B0025E90;
  v479 = (__n128)v107;
  v480 = xmmword_1B0025E50;
  v477 = v107;
  v478 = xmmword_1B0026230;
  v475 = (__n128)v107;
  v476 = xmmword_1B0027890;
  v473 = (__n128)v107;
  v474 = xmmword_1B00277B0;
  v471 = (__n128)v107;
  v472 = xmmword_1B0026230;
  v469 = (__n128)v107;
  v470 = (__n128)v107;
  v467 = (__n128)v107;
  *(_QWORD *)&v109 = OUTLINED_FUNCTION_25_64().n128_u64[0];
  v465 = (__int128)v110;
  v466 = v111;
  v463 = (__int128)v110;
  v464 = xmmword_1B002B500;
  OUTLINED_FUNCTION_8_30(v109, 1.0, *(double *)&v111, v112, v113, v110);
  v458 = v114;
  v455 = v115;
  v456 = v116;
  v453 = v115;
  v454 = xmmword_1B0028150;
  v451 = v115;
  v452 = xmmword_1B0026140;
  v449 = v115;
  v450 = v114;
  v447 = v115;
  v448 = v116;
  OUTLINED_FUNCTION_8_117(v117, 1.0, v118, *(double *)&v116, *(double *)&v114, v115);
  OUTLINED_FUNCTION_2_25();
  v271 = v119;
  OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_15_2(v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131, 0.7, 0.9, 0.9, v132, &v495, &v493, 0x3F6666663EE66666,
    0,
    &v491,
    0,
    &v489,
    &v487,
    v271,
    v278,
    v287,
    v296,
    v305,
    v314,
    v323,
    v332,
    v341,
    v350,
    v359,
    v368,
    v377,
    v386,
    v395,
    v399,
    &v453,
    &v451,
    &v449,
    &v447,
    &v445,
    1112014848,
    1097859072,
    v430,
    v434);
  OUTLINED_FUNCTION_23_0((__n128)xmmword_1B002B510);
  v505 = xmmword_1B0028220;
  v506 = xmmword_1B0028230;
  v503 = v133;
  v504 = v133;
  v501 = v133;
  v502 = xmmword_1B0026FC0;
  v499 = xmmword_1B002B520;
  v500 = xmmword_1B0028260;
  OUTLINED_FUNCTION_31_0((__n128)xmmword_1B002B530, (__n128)xmmword_1B0026400);
  v495 = xmmword_1B002B540;
  v496 = xmmword_1B00277A0;
  OUTLINED_FUNCTION_31_4((__n128)xmmword_1B002B420, (__n128)xmmword_1B002B550);
  v134 = OUTLINED_FUNCTION_28_14((__n128)xmmword_1B0027D70, (__n128)xmmword_1B0027D80);
  OUTLINED_FUNCTION_7_30(v134, v135.n128_f64[0], v135);
  v482 = xmmword_1B0025E90;
  v479 = v136;
  v480 = xmmword_1B0025E50;
  v477 = v137;
  v478 = v137;
  v475 = (__n128)v137;
  v476 = v137;
  v473 = (__n128)v137;
  v474 = xmmword_1B0025E90;
  v471 = (__n128)v137;
  v472 = xmmword_1B002B560;
  v469 = (__n128)v137;
  v470 = (__n128)v137;
  v467 = (__n128)v137;
  OUTLINED_FUNCTION_25_64();
  v465 = (__int128)v138;
  v466 = v139;
  v463 = (__int128)v138;
  OUTLINED_FUNCTION_17_8(v138, (__n128)xmmword_1B002B500);
  v458 = v140;
  v455 = v141;
  v456 = v142;
  v453 = v141;
  v454 = xmmword_1B00278C0;
  v451 = v141;
  v452 = xmmword_1B0026140;
  v449 = v141;
  v450 = v140;
  v447 = v141;
  v448 = v142;
  OUTLINED_FUNCTION_22_14(v141);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_25();
  v272 = v143;
  v144 = OUTLINED_FUNCTION_20_25();
  OUTLINED_FUNCTION_15_2(v145, v146, v147, v148, v149, v150, v151, v152, v144, v153, 790.0, v154, 0.8, 0.9, 0.9, 0.95, &v495, &v493, 0x3F6666663F06D628,
    0,
    &v491,
    0,
    &v489,
    &v487,
    v272,
    v279,
    v288,
    v297,
    v306,
    v315,
    v324,
    v333,
    v342,
    v351,
    v360,
    v369,
    v378,
    v387,
    v396,
    v400,
    &v493,
    &v451,
    &v449,
    &v447,
    &v445,
    v417,
    v423,
    &v443,
    (uint64_t)&v441);
  OUTLINED_FUNCTION_23_0((__n128)xmmword_1B002B510);
  v505 = xmmword_1B0028220;
  v506 = xmmword_1B0028230;
  v503 = v155;
  v504 = v155;
  v501 = v155;
  v502 = xmmword_1B0026FC0;
  v499 = xmmword_1B002B520;
  v500 = xmmword_1B0028260;
  v497 = xmmword_1B002B530;
  v498 = xmmword_1B0026400;
  v495 = xmmword_1B002B540;
  v496 = xmmword_1B00277A0;
  v493 = xmmword_1B002B420;
  v494 = xmmword_1B002B550;
  v491 = xmmword_1B0027D70;
  v492 = xmmword_1B0027D80;
  v490 = 0u;
  v489 = 0u;
  OUTLINED_FUNCTION_7_30(0.0, v156, v155);
  v482 = xmmword_1B0025E90;
  v479 = v157;
  v480 = xmmword_1B0025E50;
  v477 = (__int128)v157;
  v478 = (__int128)v157;
  v475 = v157;
  v476 = (__int128)v157;
  v473 = v157;
  v474 = xmmword_1B0025E90;
  v471 = v157;
  v472 = xmmword_1B002B560;
  v469 = v157;
  v470 = v157;
  v467 = v157;
  v468 = xmmword_1B0027770;
  v465 = (__int128)v157;
  v466 = xmmword_1B0025E90;
  v463 = (__int128)v157;
  OUTLINED_FUNCTION_16_31((__n128)xmmword_1B002B500, 1.0, v157);
  v458 = v158;
  v455 = v159;
  v456 = v160;
  v453 = v159;
  v454 = xmmword_1B00278C0;
  v451 = v159;
  v452 = xmmword_1B0026140;
  v449 = v159;
  v450 = v158;
  v447 = v159;
  v448 = v160;
  OUTLINED_FUNCTION_25_12(v161, 1.0, v159);
  OUTLINED_FUNCTION_11_37();
  OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_19_4();
  v162 = OUTLINED_FUNCTION_20_25();
  OUTLINED_FUNCTION_29(v163, v164, v165, v166, v167, v168, v169, v170, v162, (__n128)xmmword_1B0028DF0, 790.0, v171, 0.8, 0.9, 0.9, 0.95, &v495, &v493, 0x3F6666663F06D628,
    0,
    &v491,
    0,
    v261,
    v266,
    v273,
    v280,
    v289,
    v298,
    v307,
    v316,
    v325,
    v334,
    v343,
    v352,
    v361,
    v370,
    v379,
    v388,
    &v457,
    &v455,
    v403,
    v407,
    v411,
    v413,
    v415,
    v418,
    v424,
    v431,
    v435);
  v509 = xmmword_1B002B470;
  v510 = v440;
  v506 = v440;
  v507 = xmmword_1B002B480;
  v508 = xmmword_1B002B490;
  v505 = v440;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  v501 = (__n128)v440;
  v502 = xmmword_1B0027030;
  v499 = v440;
  v500 = v440;
  v497 = xmmword_1B002B4A0;
  v498 = xmmword_1B002B4B0;
  v495 = xmmword_1B002B4C0;
  v496 = xmmword_1B00277A0;
  v493 = xmmword_1B002B420;
  v494 = xmmword_1B002B4D0;
  v491 = xmmword_1B0026320;
  v492 = xmmword_1B0027440;
  v490 = 0u;
  v489 = 0u;
  v487 = (__n128)v440;
  v488 = xmmword_1B0027030;
  v485 = (__n128)v440;
  v486 = xmmword_1B002B4E0;
  v483 = (__n128)v440;
  v484 = xmmword_1B002B4F0;
  v481 = (__n128)v440;
  v482 = xmmword_1B0025E90;
  v479 = (__n128)v440;
  v480 = xmmword_1B0025E50;
  v477 = v440;
  v478 = xmmword_1B0026230;
  v475 = (__n128)v440;
  v476 = xmmword_1B0027890;
  v473 = (__n128)v440;
  v474 = xmmword_1B00277B0;
  v471 = (__n128)v440;
  v472 = xmmword_1B0026230;
  v469 = (__n128)v440;
  v470 = (__n128)v440;
  v467 = (__n128)v440;
  OUTLINED_FUNCTION_25_64();
  v465 = v172;
  v466 = v173;
  v463 = v172;
  v464 = xmmword_1B002B500;
  v461 = (__n128)v172;
  v462 = (__n128)v172;
  v459 = (__n128)v172;
  v460 = (__n128)v172;
  v457 = (__n128)v172;
  v458 = v174;
  v455 = (__n128)v172;
  v456 = v175;
  v453 = (__n128)v172;
  v454 = xmmword_1B0028150;
  v451 = (__n128)v172;
  v452 = xmmword_1B0026140;
  v449 = (__n128)v172;
  v450 = v174;
  v447 = (__n128)v172;
  v448 = v175;
  v445 = v172;
  v446 = v172;
  v443 = v172;
  v444 = v172;
  v441 = v172;
  v442 = v172;
  OUTLINED_FUNCTION_11_37();
  OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_29(v176, v177, v178, v179, v180, v181, v182, v183, v184, (__n128)xmmword_1B0028200, 700.0, v185, 0.7, 0.9, 0.9, v186, &v495, &v493, 0x3F6666663EE66666,
    0,
    &v491,
    v258,
    v262,
    v267,
    v274,
    v281,
    v290,
    v299,
    v308,
    v317,
    v326,
    v335,
    v344,
    v353,
    v362,
    v371,
    v380,
    v389,
    &v457,
    &v455,
    v404,
    v408,
    v412,
    v414,
    v416,
    v419,
    v425,
    v432,
    v436);
  v509 = xmmword_1B002B3A0;
  v510 = xmmword_1B002B3B0;
  v507 = xmmword_1B002B3C0;
  v508 = xmmword_1B002B3D0;
  v505 = xmmword_1B002B3E0;
  v506 = xmmword_1B0026110;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  v501 = v439;
  v502 = xmmword_1B00271F0;
  v499 = v440;
  v500 = v440;
  v497 = xmmword_1B002B3F0;
  v498 = xmmword_1B002B400;
  v495 = xmmword_1B002B410;
  v496 = xmmword_1B0027740;
  v493 = xmmword_1B002B420;
  v494 = xmmword_1B002B430;
  v491 = v440;
  v492 = v440;
  v490 = 0u;
  v489 = 0u;
  v487 = (__n128)v440;
  v488 = xmmword_1B0027030;
  v485 = (__n128)v440;
  v486 = xmmword_1B002B440;
  v483 = (__n128)v440;
  v484 = xmmword_1B0027730;
  v481 = (__n128)v440;
  v482 = xmmword_1B0025E90;
  v479 = (__n128)v440;
  v480 = xmmword_1B0025E50;
  v477 = v440;
  v478 = xmmword_1B002B450;
  v475 = (__n128)v440;
  v476 = xmmword_1B0026140;
  v473 = (__n128)v440;
  v474 = xmmword_1B002B460;
  v471 = (__n128)v440;
  v472 = xmmword_1B0027740;
  v469 = (__n128)v440;
  v470 = (__n128)v440;
  v467 = (__n128)v440;
  OUTLINED_FUNCTION_36_6();
  v466 = v187;
  v463 = xmmword_1B0028000;
  OUTLINED_FUNCTION_17_8(v188, (__n128)xmmword_1B002B340);
  v458 = v189;
  v455 = v190;
  v456 = v191;
  v453 = v190;
  v454 = xmmword_1B00277B0;
  v451 = v190;
  v452 = v192;
  v449 = v190;
  v450 = v189;
  v447 = v190;
  v448 = v191;
  OUTLINED_FUNCTION_22_14(v190);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_29(v193, v194, v195, v196, v197, v198, v199, v200, v201, v437, 250.0, v202, v92, 0.8, 0.8, v438, &v495, &v493, 0x3F4CCCCD3ED112DDLL,
    1061997773,
    &v491,
    v259,
    v263,
    v268,
    v275,
    v282,
    v291,
    v300,
    v309,
    v318,
    v327,
    v336,
    v345,
    v354,
    v363,
    v372,
    v381,
    v390,
    &v457,
    &v455,
    &v453,
    &v451,
    &v449,
    &v447,
    &v445,
    v420,
    v426,
    &v443,
    (uint64_t)&v441);
  OUTLINED_FUNCTION_13_4();
  v507 = xmmword_1B002B350;
  v508 = xmmword_1B0026A00;
  v505 = xmmword_1B002B360;
  v506 = xmmword_1B002B370;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  OUTLINED_FUNCTION_4_37();
  OUTLINED_FUNCTION_26_17((__n128)xmmword_1B002B380);
  v495 = xmmword_1B002B390;
  v496 = xmmword_1B0027740;
  v493 = xmmword_1B002B330;
  v494 = xmmword_1B0028260;
  v491 = (__int128)v203;
  v492 = (__int128)v203;
  v490 = 0u;
  v489 = 0u;
  OUTLINED_FUNCTION_32_44(1.0, 0.0, v204, v205, v203);
  v486 = xmmword_1B0025E90;
  v483 = v206;
  v484 = xmmword_1B0027730;
  v481 = v206;
  v482 = xmmword_1B0025E90;
  v479 = v206;
  v480 = xmmword_1B0025E50;
  v477 = xmmword_1B0027FE0;
  v478 = xmmword_1B0025E90;
  v475 = v206;
  v476 = xmmword_1B0026140;
  v473 = v206;
  v474 = xmmword_1B0025E90;
  v471 = v206;
  v472 = v207;
  *(_QWORD *)&v208 = OUTLINED_FUNCTION_23_72(*(double *)&v207, 1.0, 1.0, 0.899999976, v206).n128_u64[0];
  v465 = v209;
  v466 = v210;
  *(_QWORD *)&v215 = OUTLINED_FUNCTION_5_118(v208, v211, *(double *)&v210, *(double *)&v209, v212, v213, v214).n128_u64[0];
  v454 = xmmword_1B00277B0;
  v451 = v216;
  v452 = v217;
  OUTLINED_FUNCTION_9_111(v215, *(double *)&v217, 1.0, v218, v216, v219, v220);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_21_13();
  OUTLINED_FUNCTION_29(v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, 200.0, v231, 0.1, 0.8, 0.8, 0.85, &v495, &v493, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v491,
    v260,
    v264,
    v269,
    v276,
    v283,
    v292,
    v301,
    v310,
    v319,
    v328,
    v337,
    v346,
    v355,
    v364,
    v373,
    v382,
    v391,
    &v457,
    &v455,
    &v453,
    &v451,
    &v449,
    &v447,
    &v445,
    v421,
    v427,
    &v443,
    (uint64_t)&v441);
  OUTLINED_FUNCTION_13_4();
  v507 = xmmword_1B002B2C0;
  v508 = xmmword_1B0026AB0;
  v505 = xmmword_1B002B2D0;
  v506 = xmmword_1B002B2E0;
  v503 = (__n128)v440;
  v504 = (__n128)v440;
  OUTLINED_FUNCTION_4_37();
  OUTLINED_FUNCTION_26_17((__n128)xmmword_1B002B310);
  v495 = xmmword_1B002B320;
  v496 = xmmword_1B0027740;
  v493 = xmmword_1B002B330;
  v494 = xmmword_1B0027730;
  v491 = v232;
  v492 = v232;
  v490 = 0u;
  v489 = 0u;
  v487 = (__n128)v232;
  v488 = xmmword_1B0027030;
  v485 = (__n128)v232;
  v486 = xmmword_1B0025E90;
  v483 = (__n128)v232;
  v484 = xmmword_1B0027730;
  v481 = (__n128)v232;
  v482 = xmmword_1B0025E90;
  v479 = (__n128)v232;
  v480 = xmmword_1B0025E50;
  v477 = v232;
  v478 = xmmword_1B0025E90;
  v475 = (__n128)v232;
  v476 = xmmword_1B0026140;
  v473 = (__n128)v232;
  v474 = xmmword_1B0025E90;
  v471 = (__n128)v232;
  v472 = xmmword_1B0027740;
  v469 = (__n128)v232;
  v470 = (__n128)v232;
  v467 = (__n128)v232;
  OUTLINED_FUNCTION_36_6();
  v466 = v233;
  v463 = xmmword_1B0028000;
  OUTLINED_FUNCTION_16_31((__n128)xmmword_1B002B340, v234, v235);
  v458 = v236;
  v455 = v237;
  v456 = v238;
  v453 = v237;
  v454 = xmmword_1B00277B0;
  v451 = v237;
  v452 = v239;
  v449 = v237;
  v450 = v236;
  v447 = v237;
  v448 = v238;
  OUTLINED_FUNCTION_25_12(1.0, v240, v237);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_29(v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, 0.8, &v495, &v493, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v491,
    0,
    v265,
    v270,
    v277,
    v284,
    v293,
    v302,
    v311,
    v320,
    v329,
    v338,
    v347,
    v356,
    v365,
    v374,
    v383,
    v392,
    &v457,
    &v455,
    &v453,
    &v451,
    &v449,
    &v447,
    &v445,
    v422,
    v428,
    &v443,
    (uint64_t)&v441);
  return v0;
}

uint64_t PrecipitationComplicationViewModel.localWeather.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PrecipitationComplicationViewModel.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_12_2();
  sub_1B0005B84();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for PrecipitationComplicationViewModel()
{
  uint64_t result;

  result = qword_1ED1EF978;
  if (!qword_1ED1EF978)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PrecipitationComplicationViewModel.gradientModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_12_2() + 24);
  return sub_1AFBC399C(v3, a1);
}

uint64_t PrecipitationComplicationViewModel.precipitation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_4_125();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

double PrecipitationComplicationViewModel.chance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_12_2() + 32));
}

uint64_t PrecipitationComplicationViewModel.hourly.getter()
{
  OUTLINED_FUNCTION_12_2();
  return swift_bridgeObjectRetain();
}

uint64_t PrecipitationComplicationViewModel.init(localWeather:timeZone:gradientModel:precipitation:chance:hourly:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>, double a7@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t result;
  _BYTE *v35;
  uint64_t v36;

  v12 = sub_1B0005B84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9();
  v35 = (_BYTE *)(v15 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_9();
  v19 = v18 - v17;
  v20 = OUTLINED_FUNCTION_38_2();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_9();
  v23 = v22 - v21;
  *a6 = a1;
  v24 = (int *)OUTLINED_FUNCTION_12_2();
  v36 = v13;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v25(&a6[v24[5]], a2, v12);
  sub_1AFBC3D54(a3, v19);
  if (__swift_getEnumTagSinglePayload(v19, 1, v20) == 1)
  {
    if (qword_1ED1EE920 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED1EE900);
    sub_1AFBC399C(v26, v23);
    sub_1AFBC4044(v19);
  }
  else
  {
    sub_1AFC7D270(v19, v23);
  }
  sub_1AFC7D270(v23, (uint64_t)&a6[v24[6]]);
  v27 = &a6[v24[7]];
  v28 = OUTLINED_FUNCTION_4_125();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16))(v27, a4, v28);
  v30 = 0.0;
  if (a7 >= 0.0)
    v30 = a7;
  *(double *)&a6[v24[8]] = fmin(v30, 1.0);
  v25(v35, a2, v12);
  v31 = a5;
  if (!a5)
  {
    sub_1AFBC36DC();
    v31 = v32;
  }
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(a4, v28);
  sub_1AFBC4044(a3);
  v33 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v33(a2, v12);
  result = ((uint64_t (*)(_BYTE *, uint64_t))v33)(v35, v12);
  *(_QWORD *)&a6[v24[9]] = v31;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PrecipitationComplicationViewModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = a3[7];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1B00060E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PrecipitationComplicationViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + a2[5];
  v5 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_bridgeObjectRelease();
}

_BYTE *initializeWithCopy for PrecipitationComplicationViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *assignWithCopy for PrecipitationComplicationViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *initializeWithTake for PrecipitationComplicationViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  return a1;
}

_BYTE *assignWithTake for PrecipitationComplicationViewModel(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationComplicationViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFE872A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v14;

  OUTLINED_FUNCTION_3_123();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
    return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
  }
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v10;
    v8 = a3[6];
    return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
  }
  OUTLINED_FUNCTION_4_125();
  OUTLINED_FUNCTION_0_1();
  if (v11)
  {
    v7 = v12;
    v8 = a3[7];
    return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
  }
  v14 = *(_QWORD *)(v4 + a3[9]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PrecipitationComplicationViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFE87344(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  OUTLINED_FUNCTION_3_123();
  OUTLINED_FUNCTION_1_12();
  if (v10)
  {
    v8 = v7;
    v9 = a4[5];
  }
  else
  {
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_1_12();
    if (v10)
    {
      v8 = v11;
      v9 = a4[6];
    }
    else
    {
      OUTLINED_FUNCTION_4_125();
      OUTLINED_FUNCTION_1_12();
      if (!v12)
      {
        *(_QWORD *)(v5 + a4[9]) = (v4 - 1);
        return;
      }
      v8 = v13;
      v9 = a4[7];
    }
  }
  __swift_storeEnumTagSinglePayload(v5 + v9, v4, v4, v8);
}

uint64_t sub_1AFE873D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1B0005B84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for WeatherConditionGradientModel();
    if (v2 <= 0x3F)
    {
      result = sub_1B00060E8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1AFE874A0()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _WORD v20[8];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _WORD v24[8];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _WORD v28[8];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _WORD v32[8];
  uint64_t v33;
  char v34;

  v34 = 0;
  v30 = 0x7970736957;
  v31 = 0xE500000000000000;
  strcpy((char *)v32, "Wispy_Single");
  HIBYTE(v32[6]) = 0;
  v32[7] = -5120;
  v33 = 6;
  v27 = 0xE500000000000000;
  strcpy((char *)v28, "Wispy_Single");
  HIBYTE(v28[6]) = 0;
  v28[7] = -5120;
  v29 = 6;
  v22 = 0x7970736957;
  v23 = 0xE500000000000000;
  strcpy((char *)v24, "Wispy_Single");
  HIBYTE(v24[6]) = 0;
  v24[7] = -5120;
  v25 = 6;
  v26 = 0x7970736957;
  strcpy((char *)v20, "Wispy_Single");
  HIBYTE(v20[6]) = 0;
  v20[7] = -5120;
  v21 = 6;
  sub_1AFE87C50();
  sub_1AFE87C50();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #3.25
    FMOV            V2.2S, #6.0
  }
  *((_QWORD *)&v19 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v19 = 0x4248000044BB8000;
  DWORD2(v17) = 1116471296;
  *(_QWORD *)&v17 = 0x43FA000040400000;
  *(_QWORD *)&v15 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v15 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v13 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v13 = 0x4348000040C00000;
  LODWORD(v11) = 1101004800;
  DWORD2(v10) = 1132068864;
  *(_QWORD *)&v10 = 0x4140000040A00000;
  LODWORD(v9) = 1153138688;
  LODWORD(v7) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 30, 0, 2000, 133, 10, 0, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v7, 0x3E8000003DF5C28FLL, v8, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v9,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v10,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v11,
    v12,
    _Q0,
    _Q0,
    v13,
    1084227584,
    v14,
    _Q0,
    _Q0,
    v15,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v16,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1039516303,
    1048576000,
    v18,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v19,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4100000040A00000);
}

uint64_t sub_1AFE87C50()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  double v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __n128 v18;
  float v19;
  float v20;
  float v21;
  __n128 v22;
  __n128 v23;
  double v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  __n128 v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  double v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 *v44;
  uint64_t v45;
  float v46;
  double v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  __n128 v56;
  float v57;
  float v58;
  float v59;
  float v60;
  double v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  uint64_t v65;
  _OWORD *v66;
  double v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  _OWORD *v74;
  uint64_t v75;
  __n128 v76;
  float v77;
  float v78;
  float v79;
  float v80;
  float v81;
  float v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  _OWORD *v86;
  double v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  uint64_t v95;
  __n128 v96;
  float v97;
  float v98;
  float v99;
  float v100;
  float v101;
  float v102;
  __n128 v103;
  __n128 v104;
  __n128 v105;
  double v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  uint64_t v114;
  float v115;
  float v116;
  float v117;
  float v118;
  __n128 v119;
  double v120;
  double v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  __n128 v130;
  float v131;
  float v132;
  float v133;
  float v134;
  float v135;
  float v136;
  __n128 v137;
  double v138;
  uint64_t v139;
  double v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  uint64_t v148;
  float v149;
  float v150;
  float v151;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  int v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64x2_t v208;
  __n128 v209;
  int64x2_t v210;
  _BYTE v211[32];
  _OWORD v212[2];
  _OWORD v213[2];
  _OWORD v214[2];
  _OWORD v215[2];
  _OWORD v216[2];
  _OWORD v217[2];
  _OWORD v218[2];
  _OWORD v219[2];
  _OWORD v220[2];
  _OWORD v221[2];
  _OWORD v222[2];
  _OWORD v223[2];
  _OWORD v224[2];
  _OWORD v225[2];
  _OWORD v226[2];
  _OWORD v227[2];
  _OWORD v228[2];
  _OWORD v229[2];
  _OWORD v230[2];
  _OWORD v231[2];
  _OWORD v232[2];
  _OWORD v233[2];
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __n128 v240;
  __n128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  int64x2_t v253;
  __int128 v254;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025810;
  v253 = 0uLL;
  *(_QWORD *)&v254 = 0;
  *((_QWORD *)&v254 + 1) = 0x3FF0000000000000;
  __asm { FMOV            V2.2D, #1.0 }
  v251 = _Q2;
  v252 = _Q2;
  v249 = _Q2;
  v250 = _Q2;
  v247 = _Q2;
  v248 = _Q2;
  v246 = xmmword_1B0028320;
  OUTLINED_FUNCTION_7_112((__n128)xmmword_1B0028320, (__n128)xmmword_1B0028330);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B0028340, (__n128)xmmword_1B0028350);
  OUTLINED_FUNCTION_9_112((__n128)xmmword_1B0028360, (__n128)xmmword_1B0028370, v6);
  v239 = 0u;
  v238 = 0u;
  v236 = xmmword_1B0025880;
  v237 = xmmword_1B0025890;
  v234 = xmmword_1B00258A0;
  v235 = xmmword_1B00258B0;
  OUTLINED_FUNCTION_0_147(0.549602747, 1.0, v7);
  v205 = v8;
  v9 = OUTLINED_FUNCTION_14_106();
  OUTLINED_FUNCTION_15_2(v10, v11, v12, v13, v14, v15, v16, v17, v9, v18, 100.0, 500.0, v19, 0.4, v20, v21, &v242, &v240, 0x3F8000003F800000,
    0,
    &v238,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    1112014848,
    1097859072,
    v212,
    v205);
  v208 = vdupq_n_s64(0x3C74BCC7A0000000uLL);
  v253 = v208;
  v254 = xmmword_1B0025910;
  OUTLINED_FUNCTION_4_126();
  v246 = xmmword_1B0028380;
  OUTLINED_FUNCTION_7_112((__n128)xmmword_1B0028380, (__n128)xmmword_1B0028390);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B00283A0, (__n128)xmmword_1B00283B0);
  OUTLINED_FUNCTION_9_112((__n128)xmmword_1B00283C0, (__n128)xmmword_1B00283D0, v22);
  v238 = (__int128)v23;
  v239 = (__int128)v23;
  v236 = xmmword_1B0025880;
  v237 = xmmword_1B0025920;
  v234 = xmmword_1B00258A0;
  v235 = xmmword_1B0025930;
  OUTLINED_FUNCTION_1_129(0.549602747, 1.0, v23);
  OUTLINED_FUNCTION_14_50();
  v24 = OUTLINED_FUNCTION_8_118();
  OUTLINED_FUNCTION_15_2(v25, v26, v27, v28, v29, v30, v31, v32, v24, v33, v34, v35, v36, v37, v38, v39, &v242, &v240, 0x3F8000003F800000,
    0,
    &v238,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    1112014848,
    1097859072,
    v212,
    (uint64_t)v211);
  v210 = vdupq_n_s64(0x3FCF1B2BA0000000uLL);
  v253 = v210;
  v254 = xmmword_1B0025AB0;
  OUTLINED_FUNCTION_4_126();
  OUTLINED_FUNCTION_20_81((__n128)xmmword_1B00283E0, v40, v41);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B00283F0, (__n128)xmmword_1B0028400);
  OUTLINED_FUNCTION_9_112((__n128)xmmword_1B0028410, (__n128)xmmword_1B0028420, v42);
  v238 = xmmword_1B0028430;
  v239 = xmmword_1B0028440;
  v236 = (__int128)v43;
  v237 = xmmword_1B0025B20;
  v234 = (__int128)v43;
  v235 = xmmword_1B0025B30;
  OUTLINED_FUNCTION_1_129(1.0, 0.652150393, v43);
  OUTLINED_FUNCTION_15_98();
  v209 = v44[118];
  v46 = *(float *)(v45 + 3016);
  v47 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_15_2(v48, v49, v50, v51, v52, v53, v54, v55, v47, v56, v46, 500.0, v57, v58, v59, v60, &v242, &v240, 0x3F8000003FC00000,
    0,
    &v238,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    1112014848,
    1097859072,
    v212,
    (uint64_t)v211);
  v253 = v210;
  v254 = xmmword_1B0025AB0;
  OUTLINED_FUNCTION_4_126();
  OUTLINED_FUNCTION_20_81((__n128)xmmword_1B0028450, v61, v62);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B0028460, (__n128)xmmword_1B0028470);
  OUTLINED_FUNCTION_9_112((__n128)xmmword_1B0028410, (__n128)xmmword_1B0028480, v63);
  v238 = xmmword_1B0028430;
  v239 = xmmword_1B0028490;
  v236 = (__int128)v64;
  v237 = xmmword_1B0025B20;
  v234 = (__int128)v64;
  v235 = xmmword_1B0025B30;
  OUTLINED_FUNCTION_0_147(1.0, 0.652150452, v64);
  v206 = v65;
  OUTLINED_FUNCTION_3_124();
  v161 = v66;
  OUTLINED_FUNCTION_15_98();
  v67 = OUTLINED_FUNCTION_5_119();
  OUTLINED_FUNCTION_15_2(v68, v69, v70, v71, v72, v73, v74, v75, v67, v76, v77, v78, v79, v80, v81, v82, v153, v155, 0x3F8000003FC00000,
    0,
    &v238,
    0,
    &v236,
    &v234,
    v161,
    v163,
    v165,
    v167,
    v169,
    v171,
    v173,
    v175,
    v177,
    v179,
    v181,
    v183,
    v185,
    v187,
    v189,
    v191,
    v193,
    v195,
    v215,
    v214,
    v213,
    1112014848,
    1097859072,
    v212,
    v206);
  v83 = OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_7_112(v83, (__n128)xmmword_1B0028450);
  v244 = xmmword_1B0028460;
  v245 = xmmword_1B0028470;
  v242 = xmmword_1B0028410;
  OUTLINED_FUNCTION_16_87(v84, (__n128)xmmword_1B0028480);
  OUTLINED_FUNCTION_2_128(v85, (__n128)xmmword_1B0028490);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_3_124();
  v162 = v86;
  OUTLINED_FUNCTION_10_108();
  LODWORD(v157) = 1069547520;
  v87 = OUTLINED_FUNCTION_5_119();
  OUTLINED_FUNCTION_29(v88, v89, v90, v91, v92, v93, v94, v95, v87, v96, v97, v98, v99, v100, v101, v102, v154, v156, v157,
    v159,
    &v238,
    0,
    &v236,
    &v234,
    v162,
    v164,
    v166,
    v168,
    v170,
    v172,
    v174,
    v176,
    v178,
    v180,
    v182,
    v184,
    v186,
    v188,
    v190,
    v192,
    v194,
    v196,
    v215,
    v214,
    v213,
    v197,
    v201,
    v212,
    (uint64_t)v211);
  v103 = OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_7_112(v103, (__n128)xmmword_1B00283E0);
  v244 = xmmword_1B00283F0;
  v245 = xmmword_1B0028400;
  v242 = xmmword_1B0028410;
  OUTLINED_FUNCTION_16_87(v104, (__n128)xmmword_1B0028420);
  OUTLINED_FUNCTION_2_128(v105, (__n128)xmmword_1B0028440);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_10_108();
  LODWORD(v158) = 1069547520;
  v106 = OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_29(v107, v108, v109, v110, v111, v112, v113, v114, v106, v209, v46, 500.0, v115, v116, v117, v118, &v242, &v240, v158,
    v160,
    &v236,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    v198,
    v202,
    v212,
    (uint64_t)v211);
  v253 = v208;
  v254 = xmmword_1B0025910;
  OUTLINED_FUNCTION_4_126();
  v246 = xmmword_1B0028380;
  OUTLINED_FUNCTION_7_112((__n128)xmmword_1B0028380, (__n128)xmmword_1B0028390);
  v244 = xmmword_1B00283A0;
  v245 = xmmword_1B00283B0;
  v242 = xmmword_1B00283C0;
  v243 = xmmword_1B00283D0;
  v240 = v119;
  v241 = v119;
  v238 = (__int128)v119;
  v239 = (__int128)v119;
  v236 = xmmword_1B0025880;
  v237 = xmmword_1B0025920;
  v234 = xmmword_1B00258A0;
  v235 = xmmword_1B0025930;
  OUTLINED_FUNCTION_1_129(1.0, v120, v119);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_14_50();
  v121 = OUTLINED_FUNCTION_8_118();
  OUTLINED_FUNCTION_29(v122, v123, v124, v125, v126, v127, v128, v129, v121, v130, v131, v132, v133, v134, v135, v136, &v242, &v240, 0x3F8000003F800000,
    0,
    &v236,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    v199,
    v203,
    v212,
    (uint64_t)v211);
  v253 = 0uLL;
  *(_QWORD *)&v254 = 0;
  *((_QWORD *)&v254 + 1) = 0x3FF0000000000000;
  OUTLINED_FUNCTION_4_126();
  v246 = xmmword_1B0028320;
  OUTLINED_FUNCTION_7_112((__n128)xmmword_1B0028320, (__n128)xmmword_1B0028330);
  v244 = xmmword_1B0028340;
  v245 = xmmword_1B0028350;
  v242 = xmmword_1B0028360;
  v243 = xmmword_1B0028370;
  v240 = v137;
  v241 = v137;
  v239 = 0u;
  v238 = 0u;
  v236 = xmmword_1B0025880;
  v237 = xmmword_1B0025890;
  v234 = xmmword_1B00258A0;
  v235 = xmmword_1B00258B0;
  OUTLINED_FUNCTION_0_147(1.0, v138, v137);
  v207 = v139;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_14_50();
  v140 = OUTLINED_FUNCTION_14_106();
  OUTLINED_FUNCTION_29(v141, v142, v143, v144, v145, v146, v147, v148, v140, (__n128)xmmword_1B0025900, 100.0, 500.0, v149, 0.4, v150, v151, &v242, &v240, 0x3F8000003F800000,
    0,
    &v238,
    0,
    &v236,
    &v234,
    v233,
    v232,
    v231,
    v230,
    v229,
    v228,
    v227,
    v226,
    v225,
    v224,
    v223,
    v222,
    v221,
    v220,
    v219,
    v218,
    v217,
    v216,
    v215,
    v214,
    v213,
    v200,
    v204,
    v212,
    v207);
  return v0;
}

_QWORD *sub_1AFE88800@<X0>(uint64_t a1@<X0>, char a2@<W1>, double *a3@<X8>)
{
  _QWORD *result;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;

  result = (_QWORD *)sub_1AFE8A1CC(a1, a2);
  v5 = result[2];
  if (!v5)
  {
    __break(1u);
    goto LABEL_19;
  }
  v6 = (_QWORD *)result[4];
  v7 = v6[2];
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7 == 1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7 < 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v5 < 2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = (_QWORD *)result[5];
  v9 = v8[2];
  if (!v9)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v9 == 1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v9 < 3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 < 3)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = (_QWORD *)result[6];
  v11 = v10[2];
  if (!v11)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v11 == 1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v11 < 3)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v12 = v6[4];
  v13 = v6[5];
  v23 = v6[6];
  v14 = v8[4];
  v15 = v8[5];
  v16 = v8[6];
  v18 = v10[4];
  v17 = v10[5];
  v19 = v10[6];
  v20 = sub_1AFBDBA08((uint64_t)result);
  result = (_QWORD *)swift_bridgeObjectRelease();
  v22 = v19;
  if (!v20)
  {
    v21 = 0.5;
    goto LABEL_17;
  }
  if (*(_QWORD *)(v20 + 16) >= 2uLL)
  {
    v21 = *(double *)(v20 + 40);
    result = (_QWORD *)swift_bridgeObjectRelease();
LABEL_17:
    *(_QWORD *)a3 = v12;
    *((_QWORD *)a3 + 1) = v13;
    *((_QWORD *)a3 + 2) = v23;
    a3[3] = 1.0;
    *((_QWORD *)a3 + 4) = v14;
    *((_QWORD *)a3 + 5) = v15;
    *((_QWORD *)a3 + 6) = v16;
    a3[7] = 1.0;
    *((_QWORD *)a3 + 8) = v18;
    *((_QWORD *)a3 + 9) = v17;
    *((_QWORD *)a3 + 10) = v22;
    a3[11] = 1.0;
    a3[12] = v21;
    return result;
  }
LABEL_30:
  __break(1u);
  return result;
}

double sub_1AFE88980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF40;
  *(_QWORD *)(v1 + 48) = 0x3FC0A3D70A3D70A4;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = &unk_1E6077728;
  *(_QWORD *)(v0 + 48) = &unk_1E6077760;
  v2 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v2 + 32) = xmmword_1B003DF50;
  *(_QWORD *)(v2 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v2;
  qword_1ED1F3DD0 = v0;
  return result;
}

double sub_1AFE88A5C()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077C30;
  *(_QWORD *)(v0 + 40) = &unk_1E6077C68;
  *(_QWORD *)(v0 + 48) = &unk_1E6077CA0;
  *(_QWORD *)(v0 + 56) = &unk_1E6077CD8;
  qword_1ED1F4428 = v0;
  return result;
}

double sub_1AFE88AC0()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60768F0;
  *(_QWORD *)(v0 + 40) = &unk_1E6076928;
  *(_QWORD *)(v0 + 48) = &unk_1E6076960;
  *(_QWORD *)(v0 + 56) = &unk_1E6076998;
  qword_1EEE75C50 = v0;
  return result;
}

double sub_1AFE88B24()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6078058;
  *(_QWORD *)(v0 + 40) = &unk_1E6078090;
  *(_QWORD *)(v0 + 48) = &unk_1E60780C8;
  *(_QWORD *)(v0 + 56) = &unk_1E6078100;
  qword_1EEE75C58 = v0;
  return result;
}

double sub_1AFE88B88()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076E68;
  *(_QWORD *)(v0 + 40) = &unk_1E6076EA0;
  *(_QWORD *)(v0 + 48) = &unk_1E6076ED8;
  *(_QWORD *)(v0 + 56) = &unk_1E6076F10;
  qword_1EEE75C60 = v0;
  return result;
}

double sub_1AFE88BEC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077F08;
  *(_QWORD *)(v0 + 40) = &unk_1E6077F40;
  *(_QWORD *)(v0 + 48) = &unk_1E6077F78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF60;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C68 = v0;
  return result;
}

double sub_1AFE88C8C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077FB0;
  *(_QWORD *)(v0 + 40) = &unk_1E6077FE8;
  *(_QWORD *)(v0 + 48) = &unk_1E6078020;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF70;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C70 = v0;
  return result;
}

double sub_1AFE88D2C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076650;
  *(_QWORD *)(v0 + 40) = &unk_1E6076688;
  *(_QWORD *)(v0 + 48) = &unk_1E60766C0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF80;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C78 = v0;
  return result;
}

double sub_1AFE88DCC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60766F8;
  *(_QWORD *)(v0 + 40) = &unk_1E6076730;
  *(_QWORD *)(v0 + 48) = &unk_1E6076768;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF90;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C80 = v0;
  return result;
}

double sub_1AFE88E6C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60767A0;
  *(_QWORD *)(v0 + 40) = &unk_1E60767D8;
  *(_QWORD *)(v0 + 48) = &unk_1E6076810;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF70;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C88 = v0;
  return result;
}

double sub_1AFE88F0C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076848;
  *(_QWORD *)(v0 + 40) = &unk_1E6076880;
  *(_QWORD *)(v0 + 48) = &unk_1E60768B8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFA0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C90 = v0;
  return result;
}

double sub_1AFE88FAC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60769D0;
  *(_QWORD *)(v0 + 40) = &unk_1E6076A08;
  *(_QWORD *)(v0 + 48) = &unk_1E6076A40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFB0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFFC0 = v0;
  return result;
}

double sub_1AFE8904C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076A78;
  *(_QWORD *)(v0 + 40) = &unk_1E6076AB0;
  *(_QWORD *)(v0 + 48) = &unk_1E6076AE8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFB0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75C98 = v0;
  return result;
}

double sub_1AFE890EC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076BC8;
  *(_QWORD *)(v0 + 40) = &unk_1E6076C00;
  *(_QWORD *)(v0 + 48) = &unk_1E6076C38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFC0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CA0 = v0;
  return result;
}

double sub_1AFE8918C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076B20;
  *(_QWORD *)(v0 + 40) = &unk_1E6076B58;
  *(_QWORD *)(v0 + 48) = &unk_1E6076B90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFD0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CA8 = v0;
  return result;
}

double sub_1AFE8922C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076C70;
  *(_QWORD *)(v0 + 40) = &unk_1E6076CA8;
  *(_QWORD *)(v0 + 48) = &unk_1E6076CE0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFE0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CB0 = v0;
  return result;
}

double sub_1AFE892CC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076DC0;
  *(_QWORD *)(v0 + 40) = &unk_1E6076DF8;
  *(_QWORD *)(v0 + 48) = &unk_1E6076E30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFF0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CB8 = v0;
  return result;
}

double sub_1AFE8936C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076D18;
  *(_QWORD *)(v0 + 40) = &unk_1E6076D50;
  *(_QWORD *)(v0 + 48) = &unk_1E6076D88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E000;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CC0 = v0;
  return result;
}

double sub_1AFE8940C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076F48;
  *(_QWORD *)(v0 + 40) = &unk_1E6076F80;
  *(_QWORD *)(v0 + 48) = &unk_1E6076FB8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E010;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFEC0 = v0;
  return result;
}

double sub_1AFE894AC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6076FF0;
  *(_QWORD *)(v0 + 40) = &unk_1E6077028;
  *(_QWORD *)(v0 + 48) = &unk_1E6077060;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E020;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CC8 = v0;
  return result;
}

double sub_1AFE8954C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077098;
  *(_QWORD *)(v0 + 40) = &unk_1E60770D0;
  *(_QWORD *)(v0 + 48) = &unk_1E6077108;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFA0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CD0 = v0;
  return result;
}

double sub_1AFE895EC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077140;
  *(_QWORD *)(v0 + 40) = &unk_1E6077178;
  *(_QWORD *)(v0 + 48) = &unk_1E60771B0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF60;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CD8 = v0;
  return result;
}

double sub_1AFE8968C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60771E8;
  *(_QWORD *)(v0 + 40) = &unk_1E6077220;
  *(_QWORD *)(v0 + 48) = &unk_1E6077258;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF60;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CE0 = v0;
  return result;
}

double sub_1AFE8972C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077290;
  *(_QWORD *)(v0 + 40) = &unk_1E60772C8;
  *(_QWORD *)(v0 + 48) = &unk_1E6077300;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF80;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CE8 = v0;
  return result;
}

double sub_1AFE897CC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077338;
  *(_QWORD *)(v0 + 40) = &unk_1E6077370;
  *(_QWORD *)(v0 + 48) = &unk_1E60773A8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFB0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CF0 = v0;
  return result;
}

double sub_1AFE8986C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60773E0;
  *(_QWORD *)(v0 + 40) = &unk_1E6077418;
  *(_QWORD *)(v0 + 48) = &unk_1E6077450;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF70;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75CF8 = v0;
  return result;
}

double sub_1AFE8990C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077488;
  *(_QWORD *)(v0 + 40) = &unk_1E60774C0;
  *(_QWORD *)(v0 + 48) = &unk_1E60774F8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DF70;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D00 = v0;
  return result;
}

double sub_1AFE899AC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077530;
  *(_QWORD *)(v0 + 40) = &unk_1E6077568;
  *(_QWORD *)(v0 + 48) = &unk_1E60775A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFB0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D08 = v0;
  return result;
}

double sub_1AFE89A4C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60775D8;
  *(_QWORD *)(v0 + 40) = &unk_1E6077610;
  *(_QWORD *)(v0 + 48) = &unk_1E6077648;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003DFB0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D10 = v0;
  return result;
}

double sub_1AFE89AEC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077680;
  *(_QWORD *)(v0 + 40) = &unk_1E60776B8;
  *(_QWORD *)(v0 + 48) = &unk_1E60776F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E030;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFFD0 = v0;
  return result;
}

double sub_1AFE89B8C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077798;
  *(_QWORD *)(v0 + 40) = &unk_1E60777D0;
  *(_QWORD *)(v0 + 48) = &unk_1E6077808;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E040;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D18 = v0;
  return result;
}

double sub_1AFE89C2C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077840;
  *(_QWORD *)(v0 + 40) = &unk_1E6077878;
  *(_QWORD *)(v0 + 48) = &unk_1E60778B0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E050;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D20 = v0;
  return result;
}

double sub_1AFE89CCC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E60778E8;
  *(_QWORD *)(v0 + 40) = &unk_1E6077920;
  *(_QWORD *)(v0 + 48) = &unk_1E6077958;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E060;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D28 = v0;
  return result;
}

double sub_1AFE89D6C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077990;
  *(_QWORD *)(v0 + 40) = &unk_1E60779C8;
  *(_QWORD *)(v0 + 48) = &unk_1E6077A00;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E010;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFFC8 = v0;
  return result;
}

double sub_1AFE89E0C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077AE0;
  *(_QWORD *)(v0 + 40) = &unk_1E6077B18;
  *(_QWORD *)(v0 + 48) = &unk_1E6077B50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E070;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1F3D00 = v0;
  return result;
}

double sub_1AFE89EAC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077A38;
  *(_QWORD *)(v0 + 40) = &unk_1E6077A70;
  *(_QWORD *)(v0 + 48) = &unk_1E6077AA8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E080;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFED8 = v0;
  return result;
}

double sub_1AFE89F4C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077B88;
  *(_QWORD *)(v0 + 40) = &unk_1E6077BC0;
  *(_QWORD *)(v0 + 48) = &unk_1E6077BF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E080;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1F4440 = v0;
  return result;
}

double sub_1AFE89FEC()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077D10;
  *(_QWORD *)(v0 + 40) = &unk_1E6077D48;
  *(_QWORD *)(v0 + 48) = &unk_1E6077D80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E090;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1ED1EFFE8 = v0;
  return result;
}

double sub_1AFE8A08C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077DB8;
  *(_QWORD *)(v0 + 40) = &unk_1E6077DF0;
  *(_QWORD *)(v0 + 48) = &unk_1E6077E28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E0A0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D30 = v0;
  return result;
}

double sub_1AFE8A12C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4140);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B00275B0;
  *(_QWORD *)(v0 + 32) = &unk_1E6077E60;
  *(_QWORD *)(v0 + 40) = &unk_1E6077E98;
  *(_QWORD *)(v0 + 48) = &unk_1E6077ED0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4130);
  v1 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v1 + 16) = xmmword_1B002B5A0;
  *(_OWORD *)(v1 + 32) = xmmword_1B003E0B0;
  *(_QWORD *)(v1 + 48) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  qword_1EEE75D38 = v0;
  return result;
}

uint64_t sub_1AFE8A1CC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  void (*v12)(char *, uint64_t);
  uint64_t v13;

  v4 = sub_1B0005FB0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0CEEB20])
  {
LABEL_2:
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70388 != -1)
        swift_once();
      v10 = qword_1EEE75D38;
LABEL_170:
      swift_bridgeObjectRetain();
      return v10;
    }
LABEL_167:
    if (qword_1EEE70280 != -1)
      swift_once();
    v10 = qword_1EEE75C50;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA00])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70318 != -1)
        swift_once();
      v10 = qword_1EEE75CD8;
    }
    else
    {
      if (qword_1EEE70320 != -1)
        swift_once();
      v10 = qword_1EEE75CE0;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA08])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702F0 != -1)
        swift_once();
      v10 = qword_1EEE75CB8;
      goto LABEL_170;
    }
LABEL_183:
    if (qword_1EEE70290 != -1)
      swift_once();
    v10 = qword_1EEE75C60;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEB00])
  {
    if ((a2 & 1) != 0)
    {
LABEL_21:
      if (qword_1ED1EFF28 != -1)
        swift_once();
      v10 = qword_1ED1EFFD0;
      goto LABEL_170;
    }
LABEL_111:
    if (qword_1ED1F4420 != -1)
      swift_once();
    v10 = qword_1ED1F3DD0;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEAD8])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED1F4450 != -1)
        swift_once();
      v10 = qword_1ED1F4440;
      goto LABEL_170;
    }
    goto LABEL_111;
  }
  if (v9 == *MEMORY[0x1E0CEEB08])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70370 != -1)
        swift_once();
      v10 = qword_1EEE75D28;
    }
    else
    {
      if (qword_1ED1EFF18 != -1)
        swift_once();
      v10 = qword_1ED1EFFC8;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEB18])
    goto LABEL_35;
  if (v9 == *MEMORY[0x1E0CEEB30])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702E8 != -1)
        swift_once();
      v10 = qword_1EEE75CB0;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEAE0])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70328 != -1)
        swift_once();
      v10 = qword_1EEE75CE8;
    }
    else
    {
      if (qword_1EEE70330 != -1)
        swift_once();
      v10 = qword_1EEE75CF0;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA70])
  {
LABEL_35:
    if ((a2 & 1) != 0)
    {
      if (qword_1ED1EFF08 != -1)
        swift_once();
      v10 = qword_1ED1EFFC0;
    }
    else
    {
      if (qword_1EEE702D0 != -1)
        swift_once();
      v10 = qword_1EEE75C98;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA30])
  {
LABEL_57:
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702E0 != -1)
        swift_once();
      v10 = qword_1EEE75CA8;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEB10])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70368 != -1)
        swift_once();
      v10 = qword_1EEE75D20;
      goto LABEL_170;
    }
    goto LABEL_111;
  }
  if (v9 == *MEMORY[0x1E0CEEAB8])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70308 != -1)
        swift_once();
      v10 = qword_1EEE75CC8;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEAC0])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70338 != -1)
        swift_once();
      v10 = qword_1EEE75CF8;
    }
    else
    {
      if (qword_1EEE70340 != -1)
        swift_once();
      v10 = qword_1EEE75D00;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEB70])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70380 != -1)
        swift_once();
      v10 = qword_1EEE75D30;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEB78])
    goto LABEL_2;
  if (v9 == *MEMORY[0x1E0CEEAB0])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED1EFF48 != -1)
        swift_once();
      v10 = qword_1ED1EFFE8;
      goto LABEL_170;
    }
    goto LABEL_111;
  }
  if (v9 == *MEMORY[0x1E0CEEB80])
  {
    if ((a2 & 1) == 0)
    {
      if (qword_1EEE702B8 != -1)
        swift_once();
      v10 = qword_1EEE75C88;
      goto LABEL_170;
    }
    goto LABEL_95;
  }
  if (v9 == *MEMORY[0x1E0CEEA78])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70288 != -1)
        swift_once();
      v10 = qword_1EEE75C58;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEA20])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED1F4438 != -1)
        swift_once();
      v10 = qword_1ED1F4428;
      goto LABEL_170;
    }
    goto LABEL_111;
  }
  if (v9 == *MEMORY[0x1E0CEEA38])
  {
    if ((a2 & 1) != 0)
      goto LABEL_21;
LABEL_116:
    if (qword_1ED1EFED0 != -1)
      swift_once();
    v10 = qword_1ED1EFEC0;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA40])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED1EFEE8 != -1)
        swift_once();
      v10 = qword_1ED1EFED8;
    }
    else
    {
      if (qword_1ED1F3D10 != -1)
        swift_once();
      v10 = qword_1ED1F3D00;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEAC8])
    goto LABEL_57;
  if (v9 == *MEMORY[0x1E0CEEA88])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70298 != -1)
        swift_once();
      v10 = qword_1EEE75C68;
    }
    else
    {
      if (qword_1EEE702A0 != -1)
        swift_once();
      v10 = qword_1EEE75C70;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEAE8])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70310 != -1)
        swift_once();
      v10 = qword_1EEE75CD0;
      goto LABEL_170;
    }
    goto LABEL_183;
  }
  if (v9 == *MEMORY[0x1E0CEEAF0])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70348 != -1)
        swift_once();
      v10 = qword_1EEE75D08;
    }
    else
    {
      if (qword_1EEE70350 != -1)
        swift_once();
      v10 = qword_1EEE75D10;
    }
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEAD0])
  {
    if ((a2 & 1) == 0)
      goto LABEL_116;
LABEL_148:
    if (qword_1EEE702F8 != -1)
      swift_once();
    v10 = qword_1EEE75CC0;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEA48])
    goto LABEL_155;
  if (v9 == *MEMORY[0x1E0CEEA28])
  {
    if ((a2 & 1) == 0)
      goto LABEL_167;
    goto LABEL_148;
  }
  if (v9 == *MEMORY[0x1E0CEE9F8])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702D8 != -1)
        swift_once();
      v10 = qword_1EEE75CA0;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (v9 == *MEMORY[0x1E0CEEA60])
    goto LABEL_155;
  if (v9 == *MEMORY[0x1E0CEEA68])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702A8 != -1)
        swift_once();
      v10 = qword_1EEE75C78;
      goto LABEL_170;
    }
LABEL_95:
    if (qword_1EEE702B0 != -1)
      swift_once();
    v10 = qword_1EEE75C80;
    goto LABEL_170;
  }
  if (v9 == *MEMORY[0x1E0CEEAF8])
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE70360 != -1)
        swift_once();
      v10 = qword_1EEE75D18;
      goto LABEL_170;
    }
    goto LABEL_183;
  }
  if (v9 == *MEMORY[0x1E0CEEB90])
  {
LABEL_155:
    if ((a2 & 1) != 0)
    {
      if (qword_1EEE702C0 != -1)
        swift_once();
      v10 = qword_1EEE75C90;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (qword_1ED1F4438 != -1)
    swift_once();
  v10 = qword_1ED1F4428;
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v12(v8, v4);
  return v10;
}

uint64_t sub_1AFE8ADF0(uint64_t a1)
{
  return sub_1AFE8AEAC(a1, "Units configuration has changed - clearing out formatted string cache for units.");
}

uint64_t sub_1AFE8ADFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1B0005158();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1B000514C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1AFE8AEA0(uint64_t a1)
{
  return sub_1AFE8AEAC(a1, "Locale has changed - clearing out formatted string cache for units.");
}

uint64_t sub_1AFE8AEAC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v4 = sub_1B0006D00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_130();
  sub_1B0006CD0();
  v6 = sub_1B0006CE8();
  v7 = sub_1B00089D4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_26();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1AFABF000, v6, v7, a2, v8, 2u);
    OUTLINED_FUNCTION_25();
  }

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  if (qword_1ED1F47B8 != -1)
    swift_once();
  return sub_1AFBAB2D4();
}

uint64_t sub_1AFE8AFAC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AFE8AFD0()
{
  sub_1AFE8AFAC();
  return swift_deallocClassInstance();
}

void sub_1AFE8AFF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 + 1 > *(_QWORD *)(*(_QWORD *)v1 + 24) >> 1)
  {
    sub_1AFD0B358();
    *(_QWORD *)v1 = v2;
  }
}

uint64_t sub_1AFE8B034@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];

  v38 = a8;
  v39 = a7;
  v37 = a6;
  v32 = a3;
  v33 = a2;
  v10 = a1;
  v34 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v32 - v22;
  v24 = sub_1B0007924();
  v36 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v32 - v26;
  if ((v10 & 1) != 0)
  {
    v33(v35, v25);
    sub_1AFC5FAC8((uint64_t)v20, a5, (uint64_t)v23);
    v28 = *(void (**)(char *, uint64_t))(v17 + 8);
    OUTLINED_FUNCTION_0_149();
    sub_1AFC5DB5C((uint64_t)v23, a5, (uint64_t)v20);
    v29 = v37;
    sub_1AFC5DB74();
    OUTLINED_FUNCTION_0_149();
    v28(v23, a5);
  }
  else
  {
    v29 = v37;
    sub_1AFC5FAC8(v35, a4, (uint64_t)v15);
    sub_1AFC5DB5C((uint64_t)v15, a4, (uint64_t)v12);
    sub_1AFC5DBEC();
    v30 = *(void (**)(char *, uint64_t))(v34 + 8);
    v30(v12, a4);
    v30(v15, a4);
  }
  v40[0] = v39;
  v40[1] = v29;
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v24, v40);
  sub_1AFC5DB5C((uint64_t)v27, v24, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v27, v24);
}

void sub_1AFE8B28C()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 2;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 5;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 15;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC802E0();
  sub_1AFC802E0();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1147207680;
  LODWORD(v5) = 1128792064;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42DC00003F800000, v5, 0x3E75C28F3E3851ECLL, v6, 0x3F8000003F800000, 0x3E721D783F800000, 0x3F8000003F800000, 0x3EC9FB9B3F800000, 0,
    0x428C000000000000,
    v7,
    0x3E3851EC3DCCCCCDLL,
    0x3F8000003F800000,
    0x3DBDEECD3F800000,
    0x3F8000003F800000,
    0x3F01EF303F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFE8BACC(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E607EBD0;
}

void WeatherPlatterViewController.__allocating_init(location:)()
{
  void *v0;

  OUTLINED_FUNCTION_12_107();
  WeatherPlatterViewController.init(location:)(v0);
}

void WeatherPlatterViewController.init(location:)(void *a1)
{
  void *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  void *v18;
  char *v19;
  id v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  objc_super v23;
  _QWORD v24[4];

  v3 = (objc_class *)OUTLINED_FUNCTION_3_0();
  v4 = type metadata accessor for WeatherPlatterView();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  *(_QWORD *)(v7 - v6) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE068);
  swift_storeEnumTagMultiPayload();
  v9 = qword_1EEE703E0;
  v10 = v1;
  v11 = a1;
  if (v9 != -1)
    swift_once();
  sub_1AFD8DD20((uint64_t)&unk_1EEE77810, (uint64_t)v24);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  type metadata accessor for WeatherPlatterViewModelUpdater();
  if (sub_1B00069A0())
  {
    v12 = (uint64_t *)(v8 + *(int *)(v4 + 20));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    sub_1AFE8C64C();
    *v12 = sub_1B0007414();
    v12[1] = v13;
    *(_QWORD *)(v8 + *(int *)(v4 + 24) + 8) = 0;
    swift_unknownObjectWeakInit();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v11;
    v15 = v11;
    swift_retain();
    sub_1AFEE8964((uint64_t)&unk_1EEE75D48, v14);
    swift_release();

    swift_release();
    v16 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE75D50));
    *(_QWORD *)&v10[OBJC_IVAR___WUWeatherPlatterViewController_platterViewHost] = sub_1B0007858();

    v23.receiver = v10;
    v23.super_class = v3;
    v17 = (char *)OUTLINED_FUNCTION_10_109(&v23, sel_initWithNibName_bundle_);
    v18 = *(void **)&v17[OBJC_IVAR___WUWeatherPlatterViewController_platterViewHost];
    v19 = v17;
    v20 = v18;
    v21 = (void (*)(_QWORD *, _QWORD))sub_1B0007864();
    *(_QWORD *)(v22 + *(int *)(v4 + 24) + 8) = &protocol witness table for WeatherPlatterViewController;
    swift_unknownObjectWeakAssign();
    v21(v24, 0);

    OUTLINED_FUNCTION_2_3();
  }
  else
  {
    __break(1u);
  }
}

