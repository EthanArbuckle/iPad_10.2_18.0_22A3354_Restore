uint64_t sub_1AFB2B798()
{
  uint64_t v0;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int64x2_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int64x2_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int64x2_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v71 = _Q0;
  v72 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v69 = _Q1;
  v70 = _Q1;
  v67 = _Q1;
  v68 = _Q1;
  v65 = _Q1;
  v66 = _Q1;
  v63 = xmmword_1B0025E80;
  v64 = _Q1;
  v61 = (int64x2_t)_Q1;
  v62 = xmmword_1B0025E90;
  v59 = _Q1;
  v60 = _Q1;
  v57 = _Q1;
  v58 = _Q1;
  v55 = _Q1;
  v56 = _Q1;
  v53 = _Q1;
  v54 = _Q1;
  v51 = _Q1;
  v52 = _Q1;
  v49 = _Q1;
  v50 = _Q1;
  v47 = _Q1;
  v48 = _Q1;
  v45 = _Q1;
  v46 = _Q1;
  v43 = _Q1;
  v44 = _Q1;
  v41 = _Q1;
  v42 = _Q1;
  v39 = _Q1;
  v40 = _Q1;
  v37 = _Q1;
  v38 = _Q1;
  v35 = _Q1;
  v36 = _Q1;
  v33 = _Q1;
  v34 = _Q1;
  v31 = _Q1;
  v32 = _Q1;
  v29 = _Q1;
  v30 = _Q1;
  v27 = _Q1;
  v28 = _Q1;
  v25 = _Q1;
  v26 = _Q1;
  v23 = _Q1;
  v24 = _Q1;
  v21 = _Q1;
  v22 = _Q1;
  v19 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0025EB0;
  v18 = xmmword_1B0025EC0;
  v10 = _Q1;
  v11 = _Q1;
  v15 = _Q1;
  v16 = _Q1;
  v13 = _Q1;
  v14 = _Q1;
  v12 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v20 = xmmword_1B0025EE0;
  v17 = xmmword_1B0025EF0;
  v18 = xmmword_1B0025F00;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025FE0;
  v80 = v10;
  v77 = xmmword_1B0026E70;
  v78 = xmmword_1B0026000;
  v75 = xmmword_1B0026E80;
  v76 = xmmword_1B0026E90;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v72 = xmmword_1B0026EA0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF992720000000uLL);
  v20 = xmmword_1B0025FB0;
  v17 = xmmword_1B0025FC0;
  v18 = xmmword_1B0025FD0;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 2464, -12.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026EB0;
  v80 = xmmword_1B0026EC0;
  v77 = xmmword_1B0026ED0;
  v78 = xmmword_1B0026EE0;
  v75 = xmmword_1B0026EF0;
  v76 = xmmword_1B0026F00;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FEB079E00000000uLL);
  v72 = xmmword_1B0026F10;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026F20;
  v66 = xmmword_1B0026F30;
  v63 = xmmword_1B0026F40;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0026F50;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026080;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B00260A0;
  v18 = xmmword_1B0026090;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 3680, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1200.0, 0.8, 0.86667, 0.86667, 0.86667, &v65, &v63,
    0x3F5DDDDE3F5DDDDELL,
    1036831949,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026F60;
  v80 = xmmword_1B0026F70;
  v77 = xmmword_1B00260E0;
  v78 = xmmword_1B00260F0;
  v75 = xmmword_1B0026F80;
  v76 = xmmword_1B0026F90;
  v73 = xmmword_1B0041280;
  v74 = xmmword_1B0041290;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026FD0;
  v66 = xmmword_1B0026160;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026180;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B00261A0;
  v18 = xmmword_1B0026190;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026FE0;
  v80 = xmmword_1B0026FF0;
  v77 = xmmword_1B0027000;
  v78 = xmmword_1B00261F0;
  v75 = xmmword_1B0026200;
  v76 = xmmword_1B0026210;
  v73 = xmmword_1B00412A0;
  v74 = xmmword_1B00412B0;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0027040;
  v66 = xmmword_1B0027050;
  v63 = xmmword_1B0026240;
  v64 = xmmword_1B0026250;
  v61 = (int64x2_t)xmmword_1B0026260;
  v62 = xmmword_1B0026270;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026280;
  v20 = xmmword_1B0026290;
  v17 = xmmword_1B00262A0;
  v18 = xmmword_1B0026290;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0027070;
  v78 = xmmword_1B0025F70;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026300;
  v64 = xmmword_1B0026310;
  v61 = (int64x2_t)xmmword_1B0026320;
  v62 = xmmword_1B0026330;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026340;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B0026350;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027080;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026370;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0027090;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B00281D0;
  v17 = xmmword_1B002E3A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027080;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026440;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = v10;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B00281D0;
  v16 = v10;
  v17 = xmmword_1B002E3B0;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00270A0;
  v80 = xmmword_1B0026470;
  v77 = xmmword_1B00270B0;
  v78 = xmmword_1B0026490;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B00264C0;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v62 = xmmword_1B00264D0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B00264E0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00270C0;
  v80 = xmmword_1B0026510;
  v77 = xmmword_1B00270D0;
  v78 = xmmword_1B00270E0;
  v75 = xmmword_1B00270F0;
  v76 = xmmword_1B0027100;
  v73 = xmmword_1B00412C0;
  v74 = xmmword_1B00412D0;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026560;
  v68 = xmmword_1B0027130;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026590;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v62 = xmmword_1B00265A0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B00265B0;
  v20 = xmmword_1B00265C0;
  v17 = xmmword_1B00265D0;
  v18 = xmmword_1B00265E0;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 800.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026600;
  v80 = xmmword_1B0026610;
  v77 = xmmword_1B0027140;
  v78 = xmmword_1B0027150;
  v75 = xmmword_1B0027160;
  v76 = xmmword_1B0027170;
  v73 = xmmword_1B00412E0;
  v74 = xmmword_1B00412F0;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B00271A0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v62 = xmmword_1B0026680;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026690;
  v20 = xmmword_1B00266A0;
  v17 = xmmword_1B00266B0;
  v18 = xmmword_1B00266C0;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00266E0;
  v80 = xmmword_1B00266F0;
  v77 = xmmword_1B0026700;
  v78 = xmmword_1B0026710;
  v75 = xmmword_1B0026720;
  v76 = xmmword_1B0026730;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v72 = xmmword_1B00271B0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = xmmword_1B00271C0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEF1F1F40000000uLL);
  v62 = xmmword_1B00271D0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026750;
  v20 = xmmword_1B0026760;
  v17 = xmmword_1B0026770;
  v18 = xmmword_1B0026780;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    1036831949,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025F10;
  v80 = v10;
  v77 = xmmword_1B00271E0;
  v78 = xmmword_1B00267B0;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B00271F0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026900;
  v68 = xmmword_1B0026910;
  v65 = xmmword_1B0027200;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0027210;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026800;
  v20 = xmmword_1B0027930;
  v17 = xmmword_1B0026810;
  v18 = xmmword_1B0027930;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 18272, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  __asm { FMOV            V0.2D, #0.25 }
  v19 = _Q0;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026820;
  v18 = xmmword_1B0025EA0;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026830;
  v18 = xmmword_1B0026840;
  v15 = v10;
  v16 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  v12 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  return v0;
}

__n128 WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)@<Q0>(char a1@<W0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X3>, _OWORD *a5@<X4>, _OWORD *a6@<X5>, _OWORD *a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, __n128 a11@<Q1>, float a12@<S2>, float a13@<S3>, float a14@<S4>, float a15@<S5>, float a16@<S6>, float a17@<S7>, _OWORD *a18, _OWORD *a19, uint64_t a20,int a21,_OWORD *a22,int a23,_OWORD *a24,_OWORD *a25,_OWORD *a26,_OWORD *a27,_OWORD *a28,_OWORD *a29,_OWORD *a30,_OWORD *a31,_OWORD *a32,_OWORD *a33,_OWORD *a34,_OWORD *a35,_OWORD *a36,_OWORD *a37,_OWORD *a38,_OWORD *a39,_OWORD *a40,_OWORD *a41,_OWORD *a42,_OWORD *a43,_OWORD *a44,_OWORD *a45,_OWORD *a46,int a47,int a48,_OWORD *a49,uint64_t a50)
{
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __n128 result;
  __int128 v85;

  *(double *)a9 = a10;
  *(__n128 *)(a9 + 16) = a11;
  *(float *)(a9 + 32) = a12;
  *(float *)(a9 + 36) = a13;
  *(float *)(a9 + 40) = a14;
  v50 = a2[1];
  *(_OWORD *)(a9 + 48) = *a2;
  *(_OWORD *)(a9 + 64) = v50;
  v51 = a3[1];
  *(_OWORD *)(a9 + 80) = *a3;
  *(_OWORD *)(a9 + 96) = v51;
  v52 = a4[1];
  *(_OWORD *)(a9 + 112) = *a4;
  *(_OWORD *)(a9 + 128) = v52;
  v53 = a5[1];
  *(_OWORD *)(a9 + 144) = *a5;
  *(_OWORD *)(a9 + 160) = v53;
  v54 = a6[1];
  *(_OWORD *)(a9 + 176) = *a6;
  *(_OWORD *)(a9 + 192) = v54;
  v55 = a7[1];
  *(_OWORD *)(a9 + 208) = *a7;
  *(_OWORD *)(a9 + 224) = v55;
  v56 = a8[1];
  *(_OWORD *)(a9 + 240) = *a8;
  *(_OWORD *)(a9 + 256) = v56;
  v57 = a18[1];
  *(_OWORD *)(a9 + 272) = *a18;
  *(_OWORD *)(a9 + 288) = v57;
  v58 = a19[1];
  *(_OWORD *)(a9 + 304) = *a19;
  *(_OWORD *)(a9 + 320) = v58;
  *(float *)(a9 + 336) = a15;
  *(float *)(a9 + 340) = a16;
  *(float *)(a9 + 344) = a17;
  *(_DWORD *)(a9 + 356) = a21;
  v59 = a22[1];
  *(_OWORD *)(a9 + 360) = *a22;
  *(_OWORD *)(a9 + 376) = v59;
  *(_DWORD *)(a9 + 392) = a23;
  v60 = a24[1];
  *(_OWORD *)(a9 + 400) = *a24;
  *(_OWORD *)(a9 + 416) = v60;
  v61 = a25[1];
  *(_OWORD *)(a9 + 432) = *a25;
  *(_OWORD *)(a9 + 448) = v61;
  v62 = a26[1];
  *(_OWORD *)(a9 + 464) = *a26;
  *(_OWORD *)(a9 + 480) = v62;
  v63 = a27[1];
  *(_OWORD *)(a9 + 496) = *a27;
  *(_OWORD *)(a9 + 512) = v63;
  v64 = a28[1];
  *(_OWORD *)(a9 + 528) = *a28;
  *(_OWORD *)(a9 + 544) = v64;
  v65 = a29[1];
  *(_OWORD *)(a9 + 560) = *a29;
  *(_OWORD *)(a9 + 576) = v65;
  v66 = a30[1];
  *(_OWORD *)(a9 + 592) = *a30;
  *(_OWORD *)(a9 + 608) = v66;
  v67 = a31[1];
  *(_OWORD *)(a9 + 624) = *a31;
  *(_OWORD *)(a9 + 640) = v67;
  v68 = a32[1];
  *(_OWORD *)(a9 + 656) = *a32;
  *(_OWORD *)(a9 + 672) = v68;
  v69 = a33[1];
  *(_OWORD *)(a9 + 688) = *a33;
  *(_OWORD *)(a9 + 704) = v69;
  v70 = a34[1];
  *(_OWORD *)(a9 + 720) = *a34;
  *(_OWORD *)(a9 + 736) = v70;
  v71 = a35[1];
  *(_OWORD *)(a9 + 752) = *a35;
  *(_OWORD *)(a9 + 768) = v71;
  v72 = a36[1];
  *(_OWORD *)(a9 + 784) = *a36;
  *(_OWORD *)(a9 + 800) = v72;
  v73 = a37[1];
  *(_OWORD *)(a9 + 816) = *a37;
  *(_OWORD *)(a9 + 832) = v73;
  v74 = a38[1];
  *(_OWORD *)(a9 + 848) = *a38;
  *(_OWORD *)(a9 + 864) = v74;
  v75 = a39[1];
  *(_OWORD *)(a9 + 880) = *a39;
  *(_OWORD *)(a9 + 896) = v75;
  v76 = a40[1];
  *(_OWORD *)(a9 + 912) = *a40;
  *(_OWORD *)(a9 + 928) = v76;
  v77 = a41[1];
  *(_OWORD *)(a9 + 944) = *a41;
  *(_OWORD *)(a9 + 960) = v77;
  v78 = a42[1];
  *(_OWORD *)(a9 + 976) = *a42;
  *(_OWORD *)(a9 + 992) = v78;
  v79 = a43[1];
  *(_OWORD *)(a9 + 1008) = *a43;
  *(_OWORD *)(a9 + 1024) = v79;
  v80 = a44[1];
  *(_OWORD *)(a9 + 1040) = *a44;
  *(_OWORD *)(a9 + 1056) = v80;
  v81 = a45[1];
  *(_OWORD *)(a9 + 1072) = *a45;
  *(_OWORD *)(a9 + 1088) = v81;
  v82 = a46[1];
  *(_OWORD *)(a9 + 1104) = *a46;
  *(_OWORD *)(a9 + 1120) = v82;
  *(_DWORD *)(a9 + 1136) = a47;
  *(_DWORD *)(a9 + 1140) = a48;
  v83 = a49[1];
  *(_OWORD *)(a9 + 1144) = *a49;
  *(_OWORD *)(a9 + 1160) = v83;
  result = *(__n128 *)a50;
  v85 = *(_OWORD *)(a50 + 16);
  *(_OWORD *)(a9 + 1176) = *(_OWORD *)a50;
  *(_OWORD *)(a9 + 1192) = v85;
  *(_BYTE *)(a9 + 8) = a1;
  *(_QWORD *)(a9 + 348) = a20;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundOptions()
{
  return &type metadata for WeatherConditionBackgroundOptions;
}

uint64_t storeEnumTagSinglePayload for Elevation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

void BackgroundAnimationKind.gradientContext.getter(BOOL *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1 != 2;
}

ValueMetadata *type metadata accessor for VFXEffectViewID()
{
  return &type metadata for VFXEffectViewID;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation()
{
  return &type metadata for WeatherConditionBackgroundOptions.DisplayLocation;
}

uint64_t WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, _OWORD *a4@<X3>, char a5@<W4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, char a15)
{
  char v15;
  char v16;

  v15 = *a6;
  v16 = *a7;
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 9) = a3;
  *(_OWORD *)(a9 + 16) = *a4;
  *(_BYTE *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 33) = v15;
  *(_BYTE *)(a9 + 34) = v16;
  *(double *)(a9 + 40) = a10;
  *(double *)(a9 + 48) = a11;
  *(double *)(a9 + 56) = a12;
  *(double *)(a9 + 64) = a13;
  *(double *)(a9 + 72) = a14;
  *(_QWORD *)(a9 + 80) = a8;
  *(_BYTE *)(a9 + 88) = a15 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType()
{
  return &type metadata for WeatherConditionBackgroundConfig.CameraPositionType;
}

_BYTE *sub_1AFB2EC78(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
    v2 = *result & 1 | ((_BYTE)a2 << 6);
  else
    v2 = a2 & 1 | 0x80;
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionGradientModel.PresentationContext()
{
  return &type metadata for WeatherConditionGradientModel.PresentationContext;
}

ValueMetadata *type metadata accessor for WeatherConditionGradientModel.AnimationContext()
{
  return &type metadata for WeatherConditionGradientModel.AnimationContext;
}

void sub_1AFB2ECC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AFB2F330(a1, a2, a3, (void (*)(_BYTE *))sub_1AFB2F468);
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for NSUnitLength.WeatherFormatUsage()
{
  return &type metadata for NSUnitLength.WeatherFormatUsage;
}

ValueMetadata *type metadata accessor for NSUnitSpeed.WeatherFormatUsage()
{
  return &type metadata for NSUnitSpeed.WeatherFormatUsage;
}

double Elevation.degrees.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

ValueMetadata *type metadata accessor for MicaView()
{
  return &type metadata for MicaView;
}

ValueMetadata *type metadata accessor for HorizontalBarPointView()
{
  return &type metadata for HorizontalBarPointView;
}

ValueMetadata *type metadata accessor for AnimatedLinearGradient()
{
  return &type metadata for AnimatedLinearGradient;
}

void RoundedPrecipitation.formattedAccessibleString.getter()
{
  char v0;

  v0 = 0;
  RoundedPrecipitation.formatted(accessible:hideUnit:scaling:)(1, 0, (WeatherUI::WeatherFormatScaling)&v0);
  OUTLINED_FUNCTION_14_134();
}

void RoundedPrecipitation.formattedString.getter()
{
  char v0;

  v0 = 0;
  RoundedPrecipitation.formatted(accessible:hideUnit:scaling:)(0, 0, (WeatherUI::WeatherFormatScaling)&v0);
  OUTLINED_FUNCTION_14_134();
}

uint64_t static PressureFormatter.minPressure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFADE69C(&qword_1ED1ED338, (uint64_t)qword_1ED1ED318, a1);
}

uint64_t static PressureFormatter.maxPressure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFADE69C(&qword_1ED1ED310, (uint64_t)qword_1ED1ED2F8, a1);
}

ValueMetadata *type metadata accessor for CloudAltitudeKind()
{
  return &type metadata for CloudAltitudeKind;
}

uint64_t destroy for MoonDataProvider.MoonPhaseWithEphemeris()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for WeatherFormatScaling()
{
  return &type metadata for WeatherFormatScaling;
}

uint64_t type metadata accessor for ForegroundEffectCoordinator()
{
  uint64_t result;

  result = qword_1ED1ED788;
  if (!qword_1ED1ED788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFB2EE24(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s9WeatherUI16AnimatedGradientVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForegroundEffect(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AFB2EEFC + 4 * byte_1B003923A[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AFB2EF30 + 4 * byte_1B0039235[v5]))();
}

uint64_t sub_1AFB2EF30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB2EF38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFB2EF40);
  return result;
}

uint64_t sub_1AFB2EF4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFB2EF54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AFB2EF58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB2EF60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB2EF78()
{
  return sub_1B0008110();
}

uint64_t sub_1AFB2EF90()
{
  uint64_t v0;

  return sub_1AFAF44E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for WeatherVFXConditionBackground()
{
  uint64_t result;

  result = qword_1ED1F27D0;
  if (!qword_1ED1F27D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for WeakWeatherConditionPlaybackCoordinatorBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeStyle()
{
  return &type metadata for TimeStyle;
}

ValueMetadata *type metadata accessor for IsHidden()
{
  return &type metadata for IsHidden;
}

void sub_1AFB2F03C(char *a1)
{
  sub_1AFAD3884(*a1);
}

uint64_t type metadata accessor for ForegroundEffectView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ForegroundEffectView);
}

uint64_t destroy for CollisionViewMetrics()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for WeatherDayVarianceView()
{
  uint64_t result;

  result = qword_1ED1F3FE0;
  if (!qword_1ED1F3FE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFB2F098@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return sub_1AFAD71DC(*v1, a1);
}

ValueMetadata *type metadata accessor for ForegroundEffectPlaybackModifier()
{
  return &type metadata for ForegroundEffectPlaybackModifier;
}

ValueMetadata *type metadata accessor for EnableForegroundEffectModifier()
{
  return &type metadata for EnableForegroundEffectModifier;
}

uint64_t sub_1AFB2F0D8(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

__n128 AnimatedLinearGradient.init(gradient:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

void type metadata accessor for VibrantDividerStyle()
{
  OUTLINED_FUNCTION_27_0();
}

ValueMetadata *type metadata accessor for RoundedCornersShape()
{
  return &type metadata for RoundedCornersShape;
}

uint64_t RoundedCornersShape.init(corners:radius:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1AFB2F14C()
{
  return sub_1B0007444();
}

void WeatherConditionBackgroundModel.animationKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 104);
}

uint64_t WeatherVFXConditionBackground.backgroundEffectModel.getter()
{
  return sub_1AFAD6304();
}

void WeatherDayVarianceView.init(weekMaxTemp:weekMinTemp:dayHighTemp:dayLowTemp:currentTemp:isDaylight:temperatureGradient:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  char v17;
  int *v18;
  char *v19;

  v17 = a2 & 1;
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3F90);
  swift_storeEnumTagMultiPayload();
  v18 = (int *)OUTLINED_FUNCTION_0_64();
  *(double *)((char *)a5 + v18[6]) = a6;
  *(double *)((char *)a5 + v18[7]) = a7;
  *(double *)((char *)a5 + v18[8]) = a8;
  *(double *)((char *)a5 + v18[9]) = a9;
  v19 = (char *)a5 + v18[10];
  *(_QWORD *)v19 = a1;
  v19[8] = v17;
  *((_BYTE *)a5 + v18[11]) = a3;
  *(uint64_t *)((char *)a5 + v18[12]) = a4;
  swift_bridgeObjectRetain();
  WeatherDayVarianceViewModel.init(weekMaxTemp:weekMinTemp:dayHighTemp:dayLowTemp:currentTemp:isDaylight:temperatureGradient:)(a1, v17, a6, a7, a8, a9, a3, a4);
}

__n128 sub_1AFB2F264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __n128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  v2 = v0 + *(int *)(v1 + 20);
  *(_QWORD *)v2 = v4;
  *(_BYTE *)(v2 + 8) = v5;
  *(_QWORD *)(v2 + 16) = v6;
  *(_BYTE *)(v2 + 24) = v7;
  result = v8;
  *(__n128 *)(v2 + 32) = v8;
  *(_OWORD *)(v2 + 48) = v9;
  *(_QWORD *)(v2 + 64) = v10;
  *(_BYTE *)(v2 + 72) = v11;
  return result;
}

uint64_t sub_1AFB2F2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonRiseSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFB2F310()
{
  MoonDataProvider.weatherBackgroundMoonData(for:timeZone:coordinate:)();
}

void sub_1AFB2F330(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_1B0009004();
  a4(v5);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFB2F360()
{
  OUTLINED_FUNCTION_11_0();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F2628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_57_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_28_5();
}

uint64_t sub_1AFB2F3E4()
{
  sub_1B0009034();
  OUTLINED_FUNCTION_20_2();
  type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey(0);
  OUTLINED_FUNCTION_11_0();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F2628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_88_1();
  return sub_1B00084D0();
}

void sub_1AFB2F468()
{
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_20_2();
  type metadata accessor for MoonDataProvider.DayMoonPhaseCacheKey(0);
  OUTLINED_FUNCTION_11_0();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F2628, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B00084D0();
  OUTLINED_FUNCTION_12();
  sub_1AFAF86C8(&qword_1ED1ECAF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
  sub_1B00084D0();
  OUTLINED_FUNCTION_28_5();
}

uint64_t sub_1AFB2F520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  int EnumCaseMultiPayload;
  void (**v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t, uint64_t);
  char *v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  int EnumTagSinglePayload;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)();
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  void (**v90)(uint64_t, uint64_t, uint64_t);
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)();
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  os_log_type_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (**v138)(uint64_t, uint64_t, uint64_t);
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, uint64_t);
  void (**v161)(uint64_t, uint64_t, uint64_t);
  void (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v130 = a6;
  v128 = a5;
  v151 = a4;
  v152 = a3;
  v159 = a2;
  v135 = a7;
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2620);
  MEMORY[0x1E0C80A78](v150);
  v149 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v148 = (char *)&v127 - v10;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  MEMORY[0x1E0C80A78](v147);
  v146 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v145 = (uint64_t)&v127 - v13;
  v14 = sub_1B00058D8();
  v15 = *(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v139 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v129 = (char *)&v127 - v18;
  MEMORY[0x1E0C80A78](v19);
  v153 = (char *)&v127 - v20;
  MEMORY[0x1E0C80A78](v21);
  v154 = (char *)&v127 - v22;
  MEMORY[0x1E0C80A78](v23);
  v157 = (char *)&v127 - v24;
  MEMORY[0x1E0C80A78](v25);
  v158 = (char *)&v127 - v26;
  v27 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for MoonRiseSet();
  v28 = *((_QWORD *)v27 - 1);
  MEMORY[0x1E0C80A78](v27);
  v132 = (uint64_t)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v143 = (char *)&v127 - v31;
  MEMORY[0x1E0C80A78](v32);
  v142 = (char *)&v127 - v33;
  MEMORY[0x1E0C80A78](v34);
  v131 = (uint64_t)&v127 - v35;
  MEMORY[0x1E0C80A78](v36);
  v134 = (uint64_t)&v127 - v37;
  MEMORY[0x1E0C80A78](v38);
  v156 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v127 - v39);
  MEMORY[0x1E0C80A78](v40);
  v162 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v127 - v41);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v127 - v43;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v127 - v46;
  MEMORY[0x1E0C80A78](v48);
  v133 = (uint64_t)&v127 - v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  MEMORY[0x1E0C80A78](v50);
  v141 = (uint64_t)&v127 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v140 = (uint64_t)&v127 - v53;
  MEMORY[0x1E0C80A78](v54);
  v137 = (uint64_t)&v127 - v55;
  MEMORY[0x1E0C80A78](v56);
  v58 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v127 - v57);
  v59 = *(_QWORD *)(a1 + 16);
  v163 = v14;
  v160 = v27;
  v161 = v15;
  v144 = v28;
  v138 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v127 - v57);
  if (!v59)
    goto LABEL_36;
  v60 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v61 = *(_QWORD *)(v28 + 72);
  swift_bridgeObjectRetain();
  v136 = a1;
  v62 = a1 + v60 + v61 * (v59 - 1);
  v63 = -v61;
  v155 = v63;
  v64 = v158;
  while (1)
  {
    sub_1AFADA740(v62, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    sub_1AFADA740((uint64_t)v47, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1AFAE2D74((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v66 = v161;
    v67 = v163;
    v161[2]((uint64_t)v64, v159, v163);
    sub_1AFADA740((uint64_t)v47, (uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    if (EnumCaseMultiPayload != 1)
      break;
    sub_1AFAE2D74((uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    ((void (*)(char *, uint64_t))v66[1])(v64, v67);
LABEL_6:
    --v59;
    sub_1AFAE2D74((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v62 += v63;
    v27 = v160;
    if (!v59)
    {
      v77 = 1;
      v58 = v138;
      v15 = v161;
      goto LABEL_9;
    }
  }
  v68 = v47;
  v69 = v44;
  v70 = v162;
  v71 = v156;
  sub_1AFADA740((uint64_t)v162, (uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
  v72 = v157;
  v73 = v71;
  v74 = (uint64_t)v70;
  v44 = v69;
  v47 = v68;
  v63 = v155;
  v66[4]((uint64_t)v157, (uint64_t)v73, v67);
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v75 = sub_1B000850C();
  v76 = v66[1];
  ((void (*)(char *, uint64_t))v76)(v72, v163);
  sub_1AFAE2D74(v74, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
  ((void (*)(char *, uint64_t))v76)(v64, v163);
  if ((v75 & 1) != 0)
    goto LABEL_6;
  v58 = v138;
  sub_1AFC757F4((uint64_t)v47, (uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
  v77 = 0;
  v27 = v160;
  v15 = v161;
  while (1)
  {
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)v58, v77, 1, (uint64_t)v27);
    swift_bridgeObjectRelease();
    v78 = v137;
    sub_1AFAF869C((uint64_t)v58, v137, &qword_1ED1F2EE8);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v78, 1, (uint64_t)v27);
    v81 = v153;
    v80 = v154;
    if (EnumTagSinglePayload != 1)
    {
      sub_1AFACE0DC((uint64_t)v58, &qword_1ED1F2EE8);
      v111 = v133;
      sub_1AFC757F4(v78, v133, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v112 = v134;
      sub_1AFADA740(v111, v134, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v113 = v135;
      v99 = v163;
      v15[4](v135, v112, v163);
      sub_1AFAE2D74(v111, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v114 = 0;
      return __swift_storeEnumTagSinglePayload(v113, v114, 1, v99);
    }
    sub_1AFACE0DC(v78, &qword_1ED1F2EE8);
    v27 = v15[2];
    v15 = (void (**)(uint64_t, uint64_t, uint64_t))v163;
    v27((uint64_t)v80, v159, v163);
    sub_1B00057B8();
    sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v58 = v15;
    v155 = v82;
    if ((sub_1B0008518() & 1) != 0)
      break;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v77 = 1;
  }
  v83 = 1;
  v84 = type metadata accessor for MoonRiseSet;
  v156 = v27;
  while (1)
  {
    v157 = (char *)v83;
    v85 = v150;
    v86 = v148;
    v87 = &v148[*(int *)(v150 + 48)];
    v27((uint64_t)v148, (uint64_t)v81, (uint64_t)v15);
    v27((uint64_t)v87, (uint64_t)v80, (uint64_t)v15);
    v88 = v149;
    v89 = &v149[*(int *)(v85 + 48)];
    v27((uint64_t)v149, (uint64_t)v86, (uint64_t)v15);
    v27((uint64_t)v89, (uint64_t)v87, (uint64_t)v15);
    v90 = v161;
    v91 = v161[4];
    v92 = (uint64_t)v146;
    v91((uint64_t)v146, (uint64_t)v88, (uint64_t)v15);
    v93 = v90[1];
    ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t)))v93)(v89, v15);
    v94 = &v88[*(int *)(v85 + 48)];
    v91((uint64_t)v88, (uint64_t)v86, (uint64_t)v15);
    v91((uint64_t)v94, (uint64_t)v87, (uint64_t)v15);
    v95 = v92 + *(int *)(v147 + 36);
    v162 = v91;
    v91(v95, (uint64_t)v94, (uint64_t)v15);
    ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t)))v93)(v88, v15);
    v96 = v145;
    sub_1AFB30304(v92, v145);
    v97 = MoonDataProvider.moonRiseSetEvents(in:coordinate:)();
    sub_1AFACE0DC(v96, &qword_1ED1F3BC0);
    v98 = *(_QWORD *)(v97 + 16);
    if (v98)
    {
      v158 = (char *)v93;
      v99 = v144;
      v100 = (v97
                        + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80)));
      swift_bridgeObjectRetain();
      v101 = v98 - 1;
      v102 = (uint64_t)v160;
      v103 = (uint64_t)v143;
      v104 = (uint64_t)v142;
      while (v101 < *(_QWORD *)(v97 + 16))
      {
        sub_1AFADA740((uint64_t)v100 + *(_QWORD *)(v99 + 72) * v101, v104, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        sub_1AFADA740(v104, v103, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        v105 = swift_getEnumCaseMultiPayload();
        sub_1AFAE2D74(v103, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        if (v105 != 1)
        {
          swift_bridgeObjectRelease();
          v107 = v140;
          sub_1AFC757F4(v104, v140, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
          v106 = 0;
          v81 = v153;
          v93 = (void (*)(uint64_t, uint64_t, uint64_t))v158;
          goto LABEL_20;
        }
        sub_1AFAE2D74(v104, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        if (--v101 == -1)
        {
          swift_bridgeObjectRelease();
          v106 = 1;
          v81 = v153;
          v93 = (void (*)(uint64_t, uint64_t, uint64_t))v158;
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_32;
    }
    v81 = v153;
    v106 = 1;
    v102 = (uint64_t)v160;
LABEL_18:
    v107 = v140;
LABEL_20:
    __swift_storeEnumTagSinglePayload(v107, v106, 1, v102);
    swift_bridgeObjectRelease();
    v80 = v154;
    v15 = (void (**)(uint64_t, uint64_t, uint64_t))v163;
    ((void (*)(char *, uint64_t))v93)(v154, v163);
    v108 = (uint64_t (*)())v93;
    v109 = v141;
    sub_1AFAF869C(v107, v141, &qword_1ED1F2EE8);
    if (__swift_getEnumTagSinglePayload(v109, 1, v102) != 1)
    {
      sub_1AFACE0DC(v107, &qword_1ED1F2EE8);
      ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t)))v108)(v81, v15);
      sub_1AFACE0DC((uint64_t)v138, &qword_1ED1F2EE8);
      v115 = v131;
      sub_1AFC757F4(v109, v131, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v116 = v132;
      sub_1AFADA740(v115, v132, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v113 = v135;
      v162(v135, v116, (uint64_t)v15);
      sub_1AFAE2D74(v115, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v114 = 0;
      v99 = (uint64_t)v15;
      return __swift_storeEnumTagSinglePayload(v113, v114, 1, v99);
    }
    sub_1AFACE0DC(v109, &qword_1ED1F2EE8);
    v27 = v156;
    v156((uint64_t)v80, (uint64_t)v81, (uint64_t)v15);
    v110 = v139;
    sub_1B00057B8();
    sub_1AFACE0DC(v107, &qword_1ED1F2EE8);
    ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t)))v108)(v81, v15);
    v162((uint64_t)v81, (uint64_t)v110, (uint64_t)v15);
    if (v157 == (char *)30)
      break;
    v83 = (uint64_t)(v157 + 1);
    v58 = v15;
    if ((sub_1B0008518() & 1) == 0)
      goto LABEL_35;
  }
  v84 = v108;
  v88 = v129;
  if (qword_1ED1F4030 != -1)
    swift_once();
  v117 = sub_1B0006D00();
  __swift_project_value_buffer(v117, (uint64_t)qword_1ED1F4018);
  v99 = v163;
  v156((uint64_t)v88, v159, v163);
  v118 = v130;
  swift_bridgeObjectRetain_n();
  v100 = sub_1B0006CE8();
  v119 = sub_1B00089BC();
  v120 = os_log_type_enabled(v100, v119);
  v97 = (uint64_t)v154;
  if (v120)
  {
    v121 = swift_slowAlloc();
    v122 = swift_slowAlloc();
    v165 = v122;
    *(_DWORD *)v121 = 136315651;
    sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v123 = sub_1B0008F80();
    v164 = sub_1AFB4AD14(v123, v124, &v165);
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v84)(v88, v163);
    *(_WORD *)(v121 + 12) = 2160;
    v164 = 1752392040;
    sub_1B0008BB4();
    *(_WORD *)(v121 + 22) = 2081;
    swift_bridgeObjectRetain();
    v164 = sub_1AFB4AD14(v128, v118, &v165);
    v99 = v163;
    sub_1B0008BB4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFABF000, v100, v119, "Did not find a previous moonrise within the previous 30 days from %s at coordinate=%{private,mask.hash}s", (uint8_t *)v121, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B5E03CC0](v122, -1, -1);
    MEMORY[0x1B5E03CC0](v121, -1, -1);

    ((void (*)(char *, uint64_t))v84)(v153, v99);
    v125 = v154;
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRelease_n();

  ((void (*)(char *, uint64_t))v84)(v88, v99);
  ((void (*)(char *, uint64_t))v84)(v153, v99);
  v125 = (char *)v97;
LABEL_33:
  ((void (*)(char *, uint64_t))v84)(v125, v99);
  sub_1AFACE0DC((uint64_t)v138, &qword_1ED1F2EE8);
  v114 = 1;
  v113 = v135;
  return __swift_storeEnumTagSinglePayload(v113, v114, 1, v99);
}

uint64_t sub_1AFB30304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MoonDataProvider.moonRiseSetEvents(in:coordinate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  char **v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_14_51();
  v66 = v2;
  v67 = v5;
  v6 = v0;
  OUTLINED_FUNCTION_22_39();
  v8 = v7;
  v9 = type metadata accessor for MoonRiseSet();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_38();
  v64 = v11;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9_1();
  v63 = v13;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_19_47();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v56 - v16;
  v18 = OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_28_0();
  v22 = v20 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v56 - v24;
  v60 = v8;
  sub_1AFAF869C(v8, (uint64_t)&v56 - v24, &qword_1ED1F3BC0);
  v26 = &v25[*(int *)(v18 + 20)];
  *(_QWORD *)v26 = v4;
  *((_QWORD *)v26 + 1) = v3;
  OUTLINED_FUNCTION_14_31();
  sub_1B0006AE4();
  OUTLINED_FUNCTION_41();
  v27 = v65;
  if (v65)
  {
    v28 = type metadata accessor for MoonDataProvider.LunarEventsCacheKey;
    v29 = (uint64_t)v25;
LABEL_22:
    sub_1AFAE2D74(v29, v28);
    return v27;
  }
  v30 = v22;
  v61 = v17;
  v62 = v1;
  v58 = v25;
  v59 = v6;
  v31 = OUTLINED_FUNCTION_5_64();
  v33 = sub_1AFB31DA8(v31, v32);
  v34 = (void *)sub_1B0005848();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  v35 = (void *)sub_1B0005848();
  v36 = objc_msgSend(v33, sel_lunarEventsFrom_to_, v34, v35);

  sub_1AFB31CF8();
  v37 = sub_1B0008788();

  v57 = v30;
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1B0008E0C();
    v38 = result;
  }
  else
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v56 = v33;
  if (!v38)
  {
    v27 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_48_4((uint64_t)v58, v57);
    v65 = v27;
    OUTLINED_FUNCTION_14_31();
    swift_bridgeObjectRetain();
    sub_1B0006AF0();

    OUTLINED_FUNCTION_41();
    v29 = OUTLINED_FUNCTION_88_1();
    goto LABEL_22;
  }
  if (v38 >= 1)
  {
    v40 = 0;
    v41 = v37 & 0xC000000000000001;
    v27 = MEMORY[0x1E0DEE9D8];
    v42 = &selRef_texturePreloadingQueue;
    v60 = v37;
    do
    {
      if (v41)
        v43 = (id)MEMORY[0x1B5E02C64](v40, v37);
      else
        v43 = *(id *)(v37 + 8 * v40 + 32);
      v44 = v43;
      switch((unint64_t)objc_msgSend(v43, v42[8], v56, v57))
      {
        case 0uLL:
        case 1uLL:
          v45 = v38;
          v46 = v41;
          v47 = v10;
          v48 = v9;
          v49 = objc_msgSend(v44, sel_date);
          v50 = v63;
          sub_1B000589C();

          v9 = v48;
          swift_storeEnumTagMultiPayload();
          v51 = v62;
          OUTLINED_FUNCTION_93_0(v50, v62);
          v52 = v51;
          v53 = (uint64_t)v61;
          OUTLINED_FUNCTION_93_0(v52, (uint64_t)v61);
          OUTLINED_FUNCTION_93_0(v53, v64);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = OUTLINED_FUNCTION_76_1(0, *(_QWORD *)(v27 + 16) + 1);
          v55 = *(_QWORD *)(v27 + 16);
          v54 = *(_QWORD *)(v27 + 24);
          v10 = v47;
          v42 = &selRef_texturePreloadingQueue;
          if (v55 >= v54 >> 1)
            v27 = OUTLINED_FUNCTION_76_1(v54 > 1, v55 + 1);
          v41 = v46;
          *(_QWORD *)(v27 + 16) = v55 + 1;
          sub_1AFC757F4(v64, v27+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v55, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
          v38 = v45;
          v37 = v60;
          break;
        default:

          break;
      }
      ++v40;
    }
    while (v38 != v40);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1AFB30774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_14_51();
  a21 = v25;
  a22 = v26;
  v28 = v27;
  v30 = v29;
  v31 = OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_46();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_38_11();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&a9 - v36;
  v38 = sub_1AFB31BA8(v30, v28);
  OUTLINED_FUNCTION_27_33(v30, (uint64_t)v37);
  OUTLINED_FUNCTION_27_33(v28, v24);
  if ((v38 & 1) == 0)
  {
    OUTLINED_FUNCTION_137(v24);
    OUTLINED_FUNCTION_137((uint64_t)v37);
    sub_1AFADA740(v30, v23, type metadata accessor for MoonDataProvider.LunarEventsCacheKey);
    v43 = OUTLINED_FUNCTION_88_1();
    sub_1AFADA740(v43, v44, type metadata accessor for MoonDataProvider.LunarEventsCacheKey);
    goto LABEL_5;
  }
  v39 = *(double *)&v37[*(int *)(v31 + 20)];
  OUTLINED_FUNCTION_39_3((uint64_t)v37);
  v40 = *(double *)(v24 + *(int *)(v31 + 20));
  OUTLINED_FUNCTION_39_3(v24);
  OUTLINED_FUNCTION_27_33(v30, v23);
  v41 = OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_27_33(v41, v42);
  if (v39 != v40)
  {
LABEL_5:
    OUTLINED_FUNCTION_102(v22);
    OUTLINED_FUNCTION_102(v23);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_102(v23);
  OUTLINED_FUNCTION_102(v22);
LABEL_6:
  OUTLINED_FUNCTION_2_16();
}

BOOL sub_1AFB308F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  double *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;

  type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_46();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_38_11();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_19_47();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_63_0();
  v12 = OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_36_18(a1, (uint64_t)v5);
  OUTLINED_FUNCTION_36_18(a2, (uint64_t)v4);
  if ((v12 & 1) != 0)
  {
    v13 = *v5;
    OUTLINED_FUNCTION_61_0((uint64_t)v5);
    v14 = *v4;
    OUTLINED_FUNCTION_61_0((uint64_t)v4);
    OUTLINED_FUNCTION_36_18(a1, v3);
    OUTLINED_FUNCTION_36_18(a2, v2);
    if (v13 == v14)
    {
      v15 = *(double *)(v3 + 8);
      OUTLINED_FUNCTION_102(v3);
      v16 = *(double *)(v2 + 8);
      OUTLINED_FUNCTION_102(v2);
      return v15 == v16;
    }
  }
  else
  {
    OUTLINED_FUNCTION_61_0((uint64_t)v4);
    OUTLINED_FUNCTION_61_0((uint64_t)v5);
    OUTLINED_FUNCTION_36_18(a1, v3);
    OUTLINED_FUNCTION_36_18(a2, v2);
  }
  OUTLINED_FUNCTION_102(v2);
  OUTLINED_FUNCTION_102(v3);
  return 0;
}

char *initializeWithCopy for BackgroundMoonData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_1B00058D8();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v12], 1, v6))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
  }
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1F3178);
}

uint64_t type metadata accessor for MoonRiseSet()
{
  uint64_t result;

  result = qword_1ED1F2EB0;
  if (!qword_1ED1F2EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for MoonDataProvider.LunarEventsCacheKey(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1F3210);
}

uint64_t type metadata accessor for MoonDataProvider.DayMoonPhaseCacheKey(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1F30D8);
}

uint64_t sub_1AFB30C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_OWORD *sub_1AFB30CA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t sub_1AFB30D3C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), void (*a7)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  size_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_23_9();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (!v15)
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v16 = *(_QWORD *)(a6(0) - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (v21 = v17 == -1) : (v21 = 0), v21))
  {
LABEL_23:
    OUTLINED_FUNCTION_0_2();
    result = OUTLINED_FUNCTION_20_55();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_18:
  a6(0);
  OUTLINED_FUNCTION_16_11();
  v23 = (unint64_t)v19 + v22;
  if ((a1 & 1) != 0)
  {
    a7(a4 + v22, v14, v23);
    OUTLINED_FUNCTION_2_92();
  }
  else
  {
    sub_1AFB30EF0(0, v14, v23, a4, a6);
  }
  return (uint64_t)v19;
}

uint64_t sub_1AFB30ED4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1AFB30D3C(a1, a2, a3, a4, &qword_1ED1F3C38, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet, (void (*)(uint64_t, uint64_t, unint64_t))sub_1AFB31E6C);
}

uint64_t sub_1AFB30EF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  OUTLINED_FUNCTION_0_2();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

void MoonDataProvider.weatherBackgroundMoonData(for:timeZone:coordinate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  long double v82;
  int *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  uint64_t v89;
  id v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD v118[2];
  int *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;

  OUTLINED_FUNCTION_22_39();
  v132 = v3;
  v135 = v4;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_38();
  v134 = v8;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_24_13();
  v136 = v10;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2620);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_65_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v118 - v13;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_28_0();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_24_13();
  v129 = v20;
  v21 = OUTLINED_FUNCTION_11_0();
  v133 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_38();
  v126 = v23;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v118 - v25;
  v27 = OUTLINED_FUNCTION_55();
  v131 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_33();
  v137 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_38();
  v130 = v31;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v118 - v33;
  type metadata accessor for BackgroundMoonData();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_28_0();
  v38 = v36 - v37;
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)v118 - v41;
  if (qword_1ED1F30C8 != -1)
  {
    v122 = v21;
    v117 = v40;
    swift_once();
    v40 = v117;
    v21 = v122;
  }
  if (byte_1ED1F30B8 != 1)
  {
    OUTLINED_FUNCTION_37_15();
    __swift_storeEnumTagSinglePayload(v105, v106, v107, v108);
    return;
  }
  v121 = v27;
  v123 = v26;
  v122 = v21;
  v125 = v6;
  v43 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1B00275A0;
  v45 = MEMORY[0x1E0DEB070];
  v46 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v44 + 64) = v46;
  *(_QWORD *)(v44 + 32) = v2;
  *(_QWORD *)(v44 + 96) = v45;
  *(_QWORD *)(v44 + 104) = v46;
  *(_QWORD *)(v44 + 72) = v1;
  v47 = sub_1B00085A8();
  v49 = v48;
  v124 = v47;
  v139 = v47;
  v140 = v48;
  OUTLINED_FUNCTION_14_31();
  swift_bridgeObjectRetain();
  sub_1B0006AD8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_41();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v43) != 1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_60((uint64_t)v34, (uint64_t)v42);
    OUTLINED_FUNCTION_60((uint64_t)v42, v125);
    v101 = OUTLINED_FUNCTION_58_0();
    v104 = v43;
    goto LABEL_14;
  }
  v120 = v49;
  v119 = (int *)v43;
  sub_1AFACE0DC((uint64_t)v34, &qword_1ED1F3450);
  v50 = OUTLINED_FUNCTION_5_64();
  v51 = v135;
  v53 = _s9WeatherUI16MoonDataProviderC13moonEphemeris3for10coordinateAA09CelestialG0CSg10Foundation4DateV_So22CLLocationCoordinate2DVtF_0(v135, v50, v52);
  if (!v53)
  {
    v55 = v122;
    if (qword_1ED1F4030 == -1)
    {
LABEL_11:
      v109 = OUTLINED_FUNCTION_90();
      __swift_project_value_buffer(v109, (uint64_t)qword_1ED1F4018);
      v110 = v133;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 16))(v126, v51, v55);
      v111 = v120;
      swift_bridgeObjectRetain();
      v112 = sub_1B0006CE8();
      v113 = sub_1B00089D4();
      if (os_log_type_enabled(v112, v113))
      {
        v114 = OUTLINED_FUNCTION_4_18();
        v139 = OUTLINED_FUNCTION_4_18();
        *(_DWORD *)v114 = 136446723;
        sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v115 = sub_1B0008F80();
        v138 = sub_1AFB4AD14(v115, v116, &v139);
        sub_1B0008BB4();
        OUTLINED_FUNCTION_4_15();
        OUTLINED_FUNCTION_82_0(*(uint64_t (**)(uint64_t, uint64_t))(v133 + 8));
        *(_WORD *)(v114 + 12) = 2160;
        v138 = 1752392040;
        sub_1B0008BB4();
        *(_WORD *)(v114 + 22) = 2081;
        swift_bridgeObjectRetain();
        v138 = sub_1AFB4AD14(v124, v111, &v139);
        sub_1B0008BB4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AFABF000, v112, v113, "Failed to generate celestial ephemeris required for moon rendering; date=%{public}s, coordinate=%{private,mask.hash}s",
          (uint8_t *)v114,
          0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_25();
      }
      OUTLINED_FUNCTION_82_0(*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8));

      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_37_15();
      v104 = (uint64_t)v119;
      goto LABEL_14;
    }
LABEL_16:
    swift_once();
    goto LABEL_11;
  }
  v118[1] = v53;
  v126 = v18;
  sub_1B0005A34();
  v54 = (uint64_t)v123;
  sub_1B00057B8();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v55 = v122;
  if ((OUTLINED_FUNCTION_84_0() & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v56 = v128;
  v57 = (uint64_t)&v14[*(int *)(v128 + 48)];
  v58 = v133;
  v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 16);
  OUTLINED_FUNCTION_25_33((uint64_t)v14, v51);
  OUTLINED_FUNCTION_25_33(v57, v54);
  v59 = v0 + *(int *)(v56 + 48);
  OUTLINED_FUNCTION_25_33(v0, (uint64_t)v14);
  OUTLINED_FUNCTION_25_33(v59, v57);
  v60 = v126;
  OUTLINED_FUNCTION_25_33(v126, v0);
  v61 = *(_QWORD *)(v58 + 8);
  OUTLINED_FUNCTION_41_7(v59);
  v133 = v61;
  v62 = v0 + *(int *)(v56 + 48);
  OUTLINED_FUNCTION_25_33(v0, (uint64_t)v14);
  OUTLINED_FUNCTION_25_33(v62, v57);
  OUTLINED_FUNCTION_25_33(v60 + *(int *)(v127 + 36), v62);
  OUTLINED_FUNCTION_41_7(v0);
  v63 = v129;
  sub_1AFB30304(v60, v129);
  OUTLINED_FUNCTION_5_64();
  MoonDataProvider.moonRiseSetEvents(in:coordinate:)();
  sub_1AFACE0DC(v63, &qword_1ED1F3BC0);
  v64 = v135;
  v65 = v123;
  OUTLINED_FUNCTION_5_64();
  v66 = v124;
  v67 = v120;
  sub_1AFB328F4(v68, v69, v70, v71, v72, v124, v120, v73);
  v74 = v134;
  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_5_64();
  sub_1AFB2F520(v75, v76, v77, v78, v66, v67, v79);
  v80 = OUTLINED_FUNCTION_4_15();
  GEOCelestialEphemeris.moonPhaseAngle.getter(v80);
  v82 = fmod(v81 + 180.0, 360.0);
  v132(v38, v64, v55);
  v83 = v119;
  sub_1AFAF869C(v74, v38 + v119[5], &qword_1ED1F4BA0);
  sub_1AFAF869C(v136, v38 + v83[6], &qword_1ED1F4BA0);
  v84 = (void *)CelestialEphemeris.horizontalCoord.getter();
  objc_msgSend(v84, sel_altitude);
  v86 = v85;

  v87 = CelestialEphemeris.librationPositionAngle.getter();
  v88 = v87 - CelestialEphemeris.topocentricParallacticAngle.getter();
  v90 = OUTLINED_FUNCTION_14_3(v89, sel_phaseAngle);
  v92 = v91;
  OUTLINED_FUNCTION_14_3((uint64_t)v90, sel_parallacticAngle);
  v94 = static MoonImage.imageName(phaseAngle:parallacticAngle:)(v92, v93);
  *(_QWORD *)(v38 + v83[7]) = v86;
  *(long double *)(v38 + v83[8]) = v82;
  *(double *)(v38 + v83[9]) = v88;
  v95 = (uint64_t *)(v38 + v83[10]);
  *v95 = v94;
  v95[1] = v96;
  sub_1AFADA740(v38, v130, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
  v97 = OUTLINED_FUNCTION_79_2();
  __swift_storeEnumTagSinglePayload(v97, v98, v99, v100);
  v139 = v124;
  v140 = v120;
  OUTLINED_FUNCTION_14_31();
  sub_1B0006AF0();
  swift_release();
  OUTLINED_FUNCTION_41();
  sub_1AFACE0DC(v134, &qword_1ED1F4BA0);
  sub_1AFACE0DC(v136, &qword_1ED1F4BA0);
  ((void (*)(char *, uint64_t))v133)(v65, v55);
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v137, v121);
  sub_1AFC757F4(v38, v125, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
  v101 = OUTLINED_FUNCTION_79_2();
LABEL_14:
  __swift_storeEnumTagSinglePayload(v101, v102, v103, v104);
  OUTLINED_FUNCTION_28_3();
}

uint64_t Date.dayOfWeek(timeZone:context:)()
{
  if (qword_1ED1F4070 != -1)
    swift_once();
  OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_14_83();
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_6()
{
  JUMPOUT(0x1B5E03BF4);
}

uint64_t OUTLINED_FUNCTION_39_8()
{
  return sub_1B0008EE4();
}

void OUTLINED_FUNCTION_39_9(float a1)
{
  float *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_39_10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 736) = *(_QWORD *)(v0 + 176);
}

void OUTLINED_FUNCTION_39_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 112) = v0;
  *(_QWORD *)(v1 + 120) = v2;
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 144) = 3;
}

__n128 OUTLINED_FUNCTION_39_14(double a1, __n128 a2, __n128 a3)
{
  __n128 result;

  *(__n128 *)&STACK[0x740] = a2;
  result = *(__n128 *)&STACK[0x3C0];
  *(_OWORD *)&STACK[0x750] = *(_OWORD *)&STACK[0x3C0];
  *(__n128 *)&STACK[0x720] = a2;
  *(__n128 *)&STACK[0x730] = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return sub_1B0005BE4();
}

uint64_t OUTLINED_FUNCTION_39_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_19()
{
  return sub_1AFD98328();
}

BOOL OUTLINED_FUNCTION_39_20@<W0>(unint64_t a1@<X8>)
{
  STACK[0x1AB0] = a1;
  return static CloudAssetType.== infix(_:_:)(&STACK[0x1AC0], &STACK[0x1A90]);
}

uint64_t OUTLINED_FUNCTION_39_21()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v0(v3 + *(int *)(v4 + 20), v2, v1);
}

uint64_t OUTLINED_FUNCTION_39_22()
{
  return sub_1B0008644();
}

uint64_t OUTLINED_FUNCTION_39_23@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1B0005FB0();
}

unint64_t OUTLINED_FUNCTION_39_24()
{
  return 0xD000000000000037;
}

unint64_t OUTLINED_FUNCTION_39_26()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 15;
  return sub_1AFF582D8();
}

void OUTLINED_FUNCTION_39_27()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_1AFB3E84C(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_39_28()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  STACK[0x438] = v0;
  STACK[0x440] = v1;
  STACK[0x448] = v2;
  STACK[0x450] = v3;
  return sub_1B0007FF0();
}

uint64_t OUTLINED_FUNCTION_39_29(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_1AFF6A69C((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_39_30()
{
  return sub_1B0009010();
}

__n128 OUTLINED_FUNCTION_39_31(__n128 a1, __n128 a2)
{
  __n128 result;

  *(__n128 *)&STACK[0x840] = a1;
  *(__n128 *)&STACK[0x850] = a2;
  result = *(__n128 *)&STACK[0x700];
  *(_OWORD *)&STACK[0x820] = *(_OWORD *)&STACK[0x700];
  return result;
}

uint64_t sub_1AFB31BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  sub_1B00058D8();
  sub_1AFAF86C8(&qword_1ED1F2630, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v10 = sub_1B0008530();
  sub_1AFAF869C(a1, (uint64_t)v9, &qword_1ED1F3BC0);
  sub_1AFAF869C(a2, (uint64_t)v6, &qword_1ED1F3BC0);
  if ((v10 & 1) != 0)
    v11 = sub_1B0008530();
  else
    v11 = 0;
  sub_1AFACE0DC((uint64_t)v6, &qword_1ED1F3BC0);
  sub_1AFACE0DC((uint64_t)v9, &qword_1ED1F3BC0);
  return v11 & 1;
}

unint64_t sub_1AFB31CF8()
{
  unint64_t result;

  result = qword_1ED1F3BD8;
  if (!qword_1ED1F3BD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F3BD8);
  }
  return result;
}

double sub_1AFB31D34()
{
  double v1;

  OUTLINED_FUNCTION_2_13();
  swift_retain();
  sub_1B0006AA8();
  swift_release();
  return v1;
}

id sub_1AFB31DA8(double a1, double a2)
{
  id result;
  id v5;
  id v6;
  void *v7;

  swift_retain();
  sub_1B0006AE4();
  swift_release();
  result = v7;
  if (!v7)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D27188]), sel_initWithLocation_, a1, a2);
    swift_retain();
    v6 = v5;
    sub_1B0006AF0();
    swift_release();
    return v6;
  }
  return result;
}

void sub_1AFB31E6C(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFB31E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_13();
    if (v5 && (v4(0), OUTLINED_FUNCTION_40_2(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_9_11();
        OUTLINED_FUNCTION_13_25();
      }
    }
    else
    {
      v4(0);
      OUTLINED_FUNCTION_9_11();
      OUTLINED_FUNCTION_14_11();
    }
  }
}

id GEOCelestialEphemeris.moonPhaseAngle.getter(uint64_t a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_14_3(a1, sel_parallacticAngle);
  return OUTLINED_FUNCTION_14_3((uint64_t)v1, sel_phaseAngle);
}

uint64_t _s9WeatherUI16MoonDataProviderC13moonEphemeris3for10coordinateAA09CelestialG0CSg10Foundation4DateV_So22CLLocationCoordinate2DVtF_0(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (double *)((char *)&v24 - v13);
  v16 = (char *)&v24 + *(int *)(v15 + 20) - v13;
  v17 = sub_1B00058D8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, a1, v17);
  *v14 = a2;
  v14[1] = a3;
  swift_retain();
  sub_1B0006AE4();
  swift_release();
  v19 = v25;
  if (!v25)
  {
    v18(v8, a1, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v17);
    v20 = objc_allocWithZone(MEMORY[0x1E0D26F40]);
    v21 = sub_1AFB32164((uint64_t)v8, 4);
    type metadata accessor for CelestialEphemeris();
    swift_allocObject();
    v22 = v21;
    v19 = sub_1AFB3222C((uint64_t)v21);
    sub_1AFADA740((uint64_t)v14, (uint64_t)v11, type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey);
    v25 = v19;
    swift_retain();
    swift_retain();
    sub_1B0006AF0();

    swift_release();
  }
  sub_1AFAE2D74((uint64_t)v14, type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey);
  return v19;
}

id sub_1AFB32164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  double v6;
  id v7;
  SEL v8;
  id v9;

  OUTLINED_FUNCTION_22_39();
  v4 = OUTLINED_FUNCTION_11_0();
  v5 = 0;
  if (__swift_getEnumTagSinglePayload(a1, 1, v4) != 1)
  {
    v5 = (void *)sub_1B0005848();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  v6 = OUTLINED_FUNCTION_5_64();
  v9 = objc_msgSend(v7, v8, v5, a2, v6);

  return v9;
}

uint64_t type metadata accessor for CelestialEphemeris()
{
  return objc_opt_self();
}

uint64_t sub_1AFB3222C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  v4 = sub_1B0006970();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BE0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B00275C0;
  sub_1B0006964();
  sub_1AFB323B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BF0);
  sub_1AFB3236C();
  sub_1B0008C68();
  sub_1B0006988();
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1B000697C();
  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

unint64_t sub_1AFB3236C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F4BF8;
  if (!qword_1ED1F4BF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F4BF0);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F4BF8);
  }
  return result;
}

unint64_t sub_1AFB323B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F4BE8;
  if (!qword_1ED1F4BE8)
  {
    v1 = sub_1B0006970();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DB3208], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F4BE8);
  }
  return result;
}

uint64_t static MoonImage.imageName(phaseAngle:parallacticAngle:)(double a1, double a2)
{
  sub_1AFB32464(a1, a2);
  sub_1B0008F80();
  sub_1B0008644();
  swift_bridgeObjectRelease();
  return 0x736168506E6F6F6DLL;
}

uint64_t sub_1AFB32464(double a1, double a2)
{
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  if (a1 >= 0.0 && a1 <= 24.0)
    return 14;
  if (a1 >= 24.0 && a1 <= 38.0)
  {
    v9 = a2 < 180.0;
    v10 = 15;
    v11 = 13;
    goto LABEL_59;
  }
  if (a1 >= 38.0 && a1 <= 50.0)
  {
    v9 = a2 < 180.0;
    v10 = 16;
    v11 = 12;
    goto LABEL_59;
  }
  if (a1 >= 50.0 && a1 <= 58.0)
  {
    v9 = a2 < 180.0;
    v10 = 17;
    v11 = 11;
    goto LABEL_59;
  }
  if (a1 >= 58.0 && a1 <= 68.0)
  {
    v9 = a2 < 180.0;
    v10 = 18;
    v11 = 10;
    goto LABEL_59;
  }
  if (a1 >= 68.0 && a1 <= 76.0)
  {
    v9 = a2 < 180.0;
    v10 = 19;
    v11 = 9;
    goto LABEL_59;
  }
  if (a1 >= 76.0 && a1 <= 85.0)
  {
    v9 = a2 < 180.0;
    v10 = 20;
    v11 = 8;
    goto LABEL_59;
  }
  if (a1 >= 85.0 && a1 <= 95.0)
  {
    v9 = a2 < 180.0;
    v10 = 21;
    v11 = 7;
    goto LABEL_59;
  }
  if (a1 >= 95.0 && a1 <= 109.0)
  {
    v9 = a2 < 180.0;
    v10 = 22;
    v11 = 6;
    goto LABEL_59;
  }
  if (a1 >= 109.0 && a1 <= 123.0)
  {
    v9 = a2 < 180.0;
    v10 = 23;
    v11 = 5;
    goto LABEL_59;
  }
  if (a1 >= 123.0 && a1 <= 135.0)
  {
    v9 = a2 < 180.0;
    v10 = 24;
    v11 = 4;
    goto LABEL_59;
  }
  if (a1 >= 135.0 && a1 <= 140.0)
  {
    v9 = a2 < 180.0;
    v10 = 25;
    v11 = 3;
    goto LABEL_59;
  }
  if (a1 >= 140.0 && a1 <= 144.0)
  {
    v9 = a2 < 180.0;
    v10 = 26;
    v11 = 2;
LABEL_59:
    if (v9)
      return v10;
    else
      return v11;
  }
  if (a1 < 144.0 || a1 > 156.0)
  {
    if (a1 < 156.0 || a1 > 180.0)
    {
      if (qword_1ED1F4030 != -1)
        swift_once();
      v13 = sub_1B0006D00();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED1F4018);
      v14 = sub_1B0006CE8();
      v15 = sub_1B00089BC();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v16 = 134349056;
        sub_1B0008BB4();
        _os_log_impl(&dword_1AFABF000, v14, v15, "Unexpected phase angle found when generating moon phase image. phaseAngle=%{public}f", v16, 0xCu);
        MEMORY[0x1B5E03CC0](v16, -1, -1);
      }

    }
    return 0;
  }
  else if (a2 >= 180.0)
  {
    return 1;
  }
  else
  {
    return 27;
  }
}

double CelestialEphemeris.topocentricParallacticAngle.getter()
{
  return sub_1AFB31D34();
}

double CelestialEphemeris.librationPositionAngle.getter()
{
  return sub_1AFB31D34();
}

uint64_t CelestialEphemeris.horizontalCoord.getter()
{
  return sub_1AFB32860(&qword_1ED1F3C00);
}

uint64_t sub_1AFB32860(unint64_t *a1)
{
  uint64_t v3;

  OUTLINED_FUNCTION_2_13();
  sub_1AFAEC5C0(0, a1);
  swift_retain();
  sub_1B0006AA8();
  swift_release();
  return v3;
}

uint64_t sub_1AFB328F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  int EnumTagSinglePayload;
  char *v76;
  char *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;

  v133 = a7;
  v131 = a6;
  v157 = a5;
  v158 = a4;
  v139 = a3;
  v162 = a2;
  v140 = a8;
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2620);
  MEMORY[0x1E0C80A78](v156);
  v155 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v154 = (char *)&v130 - v11;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BC0);
  MEMORY[0x1E0C80A78](v153);
  v152 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v151 = (uint64_t)&v130 - v14;
  v168 = (char *)sub_1B00058D8();
  v15 = *((_QWORD *)v168 - 1);
  MEMORY[0x1E0C80A78](v168);
  v148 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v132 = (char *)&v130 - v18;
  MEMORY[0x1E0C80A78](v19);
  v159 = (char *)&v130 - v20;
  MEMORY[0x1E0C80A78](v21);
  v160 = (char *)&v130 - v22;
  MEMORY[0x1E0C80A78](v23);
  v147 = (char *)&v130 - v24;
  MEMORY[0x1E0C80A78](v25);
  v165 = (char *)&v130 - v26;
  v27 = type metadata accessor for MoonRiseSet();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v144 = (char *)&v130 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v130 - v34;
  MEMORY[0x1E0C80A78](v36);
  v135 = (uint64_t)&v130 - v37;
  MEMORY[0x1E0C80A78](v38);
  v138 = (uint64_t)&v130 - v39;
  MEMORY[0x1E0C80A78](v40);
  v146 = (uint64_t)&v130 - v41;
  MEMORY[0x1E0C80A78](v42);
  v164 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v130 - v43);
  MEMORY[0x1E0C80A78](v44);
  v163 = (uint64_t)&v130 - v45;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v130 - v47;
  MEMORY[0x1E0C80A78](v49);
  v137 = (uint64_t)&v130 - v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  MEMORY[0x1E0C80A78](a1);
  v150 = (uint64_t)&v130 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v149 = (uint64_t)&v130 - v53;
  MEMORY[0x1E0C80A78](v54);
  v141 = (uint64_t *)((char *)&v130 - v55);
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)&v130 - v58;
  v60 = *(_QWORD *)(v57 + 16);
  v166 = v15;
  v167 = v27;
  v145 = v28;
  v142 = (char *)&v130 - v58;
  v136 = v30;
  if (v60)
  {
    v61 = v57 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v161 = *(_QWORD *)(v28 + 72);
    v134 = v57;
    swift_bridgeObjectRetain();
    v63 = (uint64_t)v164;
    v62 = v165;
    do
    {
      sub_1AFADA740(v61, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v64 = v163;
      sub_1AFADA740((uint64_t)v48, v163, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_1AFAE2D74(v64, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      (*(void (**)(char *, uint64_t, char *))(v15 + 16))(v62, v162, v168);
      sub_1AFADA740((uint64_t)v48, v63, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      if (EnumCaseMultiPayload == 1)
      {
        v66 = v146;
        sub_1AFADA740(v63, v146, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        v67 = v147;
        v68 = v66;
        v69 = (uint64_t)v168;
        (*(void (**)(char *, uint64_t, char *))(v15 + 32))(v147, v68, v168);
        sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
        v70 = sub_1B000850C();
        v71 = *(void (**)(char *, uint64_t))(v166 + 8);
        v72 = v67;
        v62 = v165;
        v71(v72, v69);
        sub_1AFAE2D74(v63, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        v71(v62, v69);
        v15 = v166;
        if ((v70 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v59 = v142;
          sub_1AFC757F4((uint64_t)v48, (uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
          v73 = 0;
          goto LABEL_10;
        }
      }
      else
      {
        sub_1AFAE2D74(v63, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        (*(void (**)(char *, char *))(v15 + 8))(v62, v168);
      }
      sub_1AFAE2D74((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v61 += v161;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    v73 = 1;
    v59 = v142;
LABEL_10:
    v27 = v167;
  }
  else
  {
    v73 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v59, v73, 1, v27);
  v74 = v141;
  sub_1AFAF869C((uint64_t)v59, (uint64_t)v141, &qword_1ED1F2EE8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v27);
  v77 = v159;
  v76 = v160;
  v78 = &qword_1ED1F2EE8;
  if (EnumTagSinglePayload != 1)
    goto LABEL_26;
  sub_1AFACE0DC((uint64_t)v74, &qword_1ED1F2EE8);
  v79 = (uint64_t)v168;
  v165 = *(char **)(v15 + 16);
  ((void (*)(char *, uint64_t, char *))v165)(v76, v139, v168);
  sub_1B00057B8();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v59 = (char *)v79;
  v161 = v80;
  if ((sub_1B0008518() & 1) == 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1AFACE0DC((uint64_t)v59, v78);
    v110 = v137;
    sub_1AFC757F4((uint64_t)v74, v137, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v111 = v138;
    sub_1AFADA740(v110, v138, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v112 = v140;
    (*(void (**)(uint64_t, uint64_t, char *))(v15 + 32))(v140, v111, v168);
    v113 = v110;
LABEL_28:
    sub_1AFAE2D74(v113, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v117 = 0;
    return __swift_storeEnumTagSinglePayload(v112, v117, 1, (uint64_t)v168);
  }
  v81 = 1;
  v143 = v35;
  while (1)
  {
    v163 = v81;
    v82 = v156;
    v83 = v154;
    v84 = &v154[*(int *)(v156 + 48)];
    v85 = (uint64_t)v168;
    v86 = (void (*)(char *, char *, uint64_t))v165;
    ((void (*)(char *, char *, char *))v165)(v154, v76, v168);
    v86(v84, v77, v85);
    v87 = v155;
    v88 = &v155[*(int *)(v82 + 48)];
    v86(v155, v83, v85);
    v86(v88, v84, v85);
    v89 = v166;
    v90 = *(void (**)(char *, char *, uint64_t))(v166 + 32);
    v91 = v152;
    v90(v152, v87, v85);
    v92 = *(void (**)(char *, uint64_t))(v89 + 8);
    v92(v88, v85);
    v93 = &v87[*(int *)(v82 + 48)];
    v90(v87, v83, v85);
    v90(v93, v84, v85);
    v94 = &v91[*(int *)(v153 + 36)];
    v164 = (void (*)(uint64_t, uint64_t, uint64_t))v90;
    v90(v94, v93, v85);
    v92(v87, v85);
    v95 = (uint64_t)v91;
    v96 = v151;
    sub_1AFB30304(v95, v151);
    v97 = MoonDataProvider.moonRiseSetEvents(in:coordinate:)();
    sub_1AFACE0DC(v96, &qword_1ED1F3BC0);
    v98 = *(_QWORD *)(v97 + 16);
    if (v98)
    {
      v99 = v145;
      v100 = v97 + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
      swift_bridgeObjectRetain();
      v101 = *(_QWORD *)(v99 + 72);
      v102 = v167;
      v103 = (uint64_t)v144;
      v104 = (uint64_t)v143;
      while (1)
      {
        sub_1AFADA740(v100, v104, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        sub_1AFADA740(v104, v103, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        v105 = swift_getEnumCaseMultiPayload();
        sub_1AFAE2D74(v103, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        if (v105 == 1)
          break;
        sub_1AFAE2D74(v104, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
        v100 += v101;
        if (!--v98)
        {
          swift_bridgeObjectRelease();
          v106 = 1;
          v77 = v159;
          v15 = v149;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      v15 = v149;
      sub_1AFC757F4(v104, v149, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v106 = 0;
    }
    else
    {
      v106 = 1;
      v102 = v167;
      v15 = v149;
    }
    v77 = v159;
LABEL_22:
    __swift_storeEnumTagSinglePayload(v15, v106, 1, v102);
    swift_bridgeObjectRelease();
    v76 = v160;
    v92(v160, (uint64_t)v168);
    v107 = v150;
    v74 = &qword_1ED1F2EE8;
    sub_1AFAF869C(v15, v150, &qword_1ED1F2EE8);
    if (__swift_getEnumTagSinglePayload(v107, 1, v102) != 1)
    {
      sub_1AFACE0DC(v15, &qword_1ED1F2EE8);
      v114 = (uint64_t)v168;
      v92(v77, (uint64_t)v168);
      sub_1AFACE0DC((uint64_t)v142, &qword_1ED1F2EE8);
      v115 = v135;
      sub_1AFC757F4(v107, v135, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v116 = (uint64_t)v136;
      sub_1AFADA740(v115, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      v112 = v140;
      v164(v140, v116, v114);
      v113 = v115;
      goto LABEL_28;
    }
    sub_1AFACE0DC(v107, &qword_1ED1F2EE8);
    v108 = (uint64_t)v168;
    ((void (*)(char *, char *, char *))v165)(v76, v77, v168);
    v109 = v148;
    sub_1B00057B8();
    sub_1AFACE0DC(v15, &qword_1ED1F2EE8);
    v92(v77, v108);
    v164((uint64_t)v77, (uint64_t)v109, v108);
    if (v163 == 30)
      break;
    v81 = v163 + 1;
    v59 = v168;
    if ((sub_1B0008518() & 1) == 0)
      goto LABEL_25;
  }
  v118 = v132;
  if (qword_1ED1F4030 != -1)
    swift_once();
  v119 = sub_1B0006D00();
  __swift_project_value_buffer(v119, (uint64_t)qword_1ED1F4018);
  ((void (*)(char *, uint64_t, char *))v165)(v118, v162, v168);
  v120 = v133;
  swift_bridgeObjectRetain_n();
  v121 = sub_1B0006CE8();
  v122 = sub_1B00089BC();
  if (os_log_type_enabled(v121, v122))
  {
    v123 = swift_slowAlloc();
    v167 = swift_slowAlloc();
    v170 = v167;
    *(_DWORD *)v123 = 136315651;
    sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v124 = (uint64_t)v168;
    v125 = sub_1B0008F80();
    v169 = sub_1AFB4AD14(v125, v126, &v170);
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    v92(v118, v124);
    *(_WORD *)(v123 + 12) = 2160;
    v169 = 1752392040;
    sub_1B0008BB4();
    *(_WORD *)(v123 + 22) = 2081;
    swift_bridgeObjectRetain();
    v169 = sub_1AFB4AD14(v131, v120, &v170);
    sub_1B0008BB4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AFABF000, v121, v122, "Did not find a next moonset within the next 30 days from %s at coordinate=%{private,mask.hash}s", (uint8_t *)v123, 0x20u);
    v127 = v167;
    swift_arrayDestroy();
    MEMORY[0x1B5E03CC0](v127, -1, -1);
    MEMORY[0x1B5E03CC0](v123, -1, -1);

    v92(v159, v124);
    v92(v160, v124);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v128 = (uint64_t)v168;
    v92(v118, (uint64_t)v168);
    v92(v77, v128);
    v92(v76, v128);
  }
  sub_1AFACE0DC((uint64_t)v142, &qword_1ED1F2EE8);
  v117 = 1;
  v112 = v140;
  return __swift_storeEnumTagSinglePayload(v112, v117, 1, (uint64_t)v168);
}

void static WeatherFormatStyle<>.weather(_:usage:locale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;

  OUTLINED_FUNCTION_22_0();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_24_85();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&a9 - v35;
  OUTLINED_FUNCTION_70_8();
  *(_QWORD *)v30 = v28;
  *(_BYTE *)(v30 + 8) = v26;
  sub_1AFAF2558((uint64_t)v36, v21, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_4_0(v21, 1, v31);
  if (v37)
  {
    v38 = qword_1ED1F47A0;
    OUTLINED_FUNCTION_86_1();
    if (v38 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_31();
    sub_1B0006B14();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_3_65((uint64_t)v36);
    OUTLINED_FUNCTION_3_65(v21);
  }
  else
  {
    v39 = OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_134(v39, &qword_1ED1F44D8);
    OUTLINED_FUNCTION_141(v20, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
  }
  v40 = (int *)type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  OUTLINED_FUNCTION_141(v30 + v40[6], v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
  *(_BYTE *)(v30 + v40[7]) = 0;
  *(_BYTE *)(v30 + v40[8]) = 1;
  OUTLINED_FUNCTION_2_3();
}

void static WeatherFormatStyle<>.weather(_:locale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  int *v5;
  int **v6;
  int **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD v20[2];

  OUTLINED_FUNCTION_22_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_24();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_23_8();
  v20[0] = *(_QWORD *)(v12 - 8);
  v20[1] = v12;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_10_56();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_60_4();
  sub_1AFAF869C(v3, v1, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_86_1();
  sub_1B0005650();
  *v7 = v5;
  sub_1AFAF869C(v1, v0, &qword_1ED1F44D8);
  OUTLINED_FUNCTION_14_65(v0);
  if (v16)
  {
    if (qword_1ED1F47A0 != -1)
      swift_once();
    OUTLINED_FUNCTION_14_31();
    sub_1B0006B14();
    OUTLINED_FUNCTION_41();
    v5 = (int *)&qword_1ED1F44D8;
    OUTLINED_FUNCTION_17_85(v1);
    OUTLINED_FUNCTION_17_85(v0);
  }
  else
  {
    sub_1AFAF866C(v1, &qword_1ED1F44D8);
    OUTLINED_FUNCTION_141((uint64_t)v11, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
  }
  v17 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v18 = OUTLINED_FUNCTION_66_5(v17);
  OUTLINED_FUNCTION_141(v18, (uint64_t)v11, v19);
  *((_BYTE *)v7 + v5[6]) = 0;
  *((_BYTE *)v7 + v5[7]) = 0;
  OUTLINED_FUNCTION_21_61((uint64_t)v7 + v5[8]);
  OUTLINED_FUNCTION_2_3();
}

void static WeatherFormatStyle<>.weather.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_10();
  static Set<>.full.getter();
  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_108(v0, v3, v4, v2);
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_85(v0);
  OUTLINED_FUNCTION_9_0();
}

void sub_1AFB33A90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_11(a1, a2, a3);
  OUTLINED_FUNCTION_115_2();
  OUTLINED_FUNCTION_5_2(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t _s30WeatherFormatUnitConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_1AFB33BE4()
{
  unint64_t result;

  result = qword_1ED1F44C0;
  if (!qword_1ED1F44C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F44C0);
  }
  return result;
}

void NSUnitSpeed.BaseWeatherFormatStyle.hash(into:)()
{
  OUTLINED_FUNCTION_86_1();
  sub_1AFB33D2C();
  OUTLINED_FUNCTION_4_15();
  sub_1B0009010();
  type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  OUTLINED_FUNCTION_24();
  sub_1AFADA43C(&qword_1ED1F47A8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  sub_1B00084D0();
  sub_1B000901C();
  sub_1B0009010();
  OUTLINED_FUNCTION_28_5();
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  return sub_1B0008518();
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_84_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return sub_1B0005ED8();
}

void OUTLINED_FUNCTION_84_4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1AFACE0DC(*(_QWORD *)(v2 - 296), a2);
}

uint64_t type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1F42C8);
}

void sub_1AFB33D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  unint64_t v24;
  unint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  __int128 v59;
  uint64_t v60;

  OUTLINED_FUNCTION_22_0();
  v4 = v3;
  v6 = v5;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4048);
  v53 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v52 = v8;
  v9 = OUTLINED_FUNCTION_33_0();
  type metadata accessor for NSUnitSpeed.WeatherFormatComponent(v9);
  OUTLINED_FUNCTION_65();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_10_56();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_32_24();
  MEMORY[0x1E0C80A78](v12);
  v55 = (uint64_t)v48 - v13;
  v14 = OUTLINED_FUNCTION_174();
  v48[1] = v6;
  v58 = v14;
  v59 = v15;
  v60 = v16;
  v56 = OUTLINED_FUNCTION_35_14();
  v50 = v4 + 56;
  OUTLINED_FUNCTION_11_58();
  v19 = v18 & v17;
  OUTLINED_FUNCTION_170();
  v49 = v20;
  v57 = v4;
  swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  v23 = type metadata accessor for NSUnitSpeed.WeatherFormatComponent;
  v51 = v2;
  if (!v19)
    goto LABEL_3;
LABEL_2:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v24 | (v22 << 6); ; i = v30 + (v22 << 6))
  {
    v31 = v55;
    sub_1AFAF2DFC(*(_QWORD *)(v57 + 48) + *(_QWORD *)(v0 + 72) * i, v55, v23);
    sub_1AFAF2984(v31, v2, v23);
    OUTLINED_FUNCTION_185();
    v32 = OUTLINED_FUNCTION_184();
    sub_1AFAF2DFC(v32, v33, v23);
    v34 = OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_4_0(v1, 1, v34);
    if (v35)
    {
      OUTLINED_FUNCTION_83();
    }
    else
    {
      v36 = v53;
      v37 = v52;
      v38 = OUTLINED_FUNCTION_184();
      v39 = v23;
      v40 = v21;
      v41 = v0;
      v42 = v54;
      OUTLINED_FUNCTION_141(v38, v43, v44);
      OUTLINED_FUNCTION_118_0();
      sub_1AFB23DC0(&qword_1ED1F41F0, &qword_1ED1F4048);
      sub_1B00084D0();
      v45 = v37;
      v2 = v51;
      v46 = v42;
      v0 = v41;
      v21 = v40;
      v23 = v39;
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v45, v46);
    }
    v47 = sub_1B0009040();
    sub_1AFAE2D74(v2, v23);
    v21 ^= v47;
    if (v19)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v22++, 1))
      goto LABEL_20;
    if (v22 >= v49)
    {
LABEL_18:
      swift_release();
      OUTLINED_FUNCTION_158();
      OUTLINED_FUNCTION_2_3();
      return;
    }
    if (!*(_QWORD *)(v50 + 8 * v22))
      break;
LABEL_12:
    OUTLINED_FUNCTION_123();
    v19 = v29 & v28;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v49)
    goto LABEL_18;
  if (*(_QWORD *)(v50 + 8 * v27))
  {
    ++v22;
    goto LABEL_12;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v49)
      goto LABEL_18;
    ++v27;
    if (*(_QWORD *)(v50 + 8 * v22))
      goto LABEL_12;
  }
  __break(1u);
LABEL_20:
  __break(1u);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t DeviceIsSlow()
{
  if (DeviceIsSlow_onceToken != -1)
    dispatch_once(&DeviceIsSlow_onceToken, &__block_literal_global_176);
  return DeviceIsSlow_result;
}

uint64_t OUTLINED_FUNCTION_91()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return type metadata accessor for MoonDataProvider.LunarEventsCacheKey(0);
}

uint64_t OUTLINED_FUNCTION_91_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_91_3(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  a2[1] = 0;
  return GEOLocationCoordinate2DMake();
}

uint64_t OUTLINED_FUNCTION_91_4()
{
  return sub_1B0005620();
}

uint64_t OUTLINED_FUNCTION_91_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 312))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_91_6()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 248);
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t DeviceUsesWireframeOnLocationViewScroll()
{
  if (DeviceUsesWireframeOnLocationViewScroll_onceToken[0] != -1)
    dispatch_once(DeviceUsesWireframeOnLocationViewScroll_onceToken, &__block_literal_global_167);
  return DeviceUsesWireframeOnLocationViewScroll_result;
}

uint64_t DeviceSupportsStickyHeaders()
{
  if (DeviceSupportsStickyHeaders_onceToken != -1)
    dispatch_once(&DeviceSupportsStickyHeaders_onceToken, &__block_literal_global_69);
  return DeviceSupportsStickyHeaders_result;
}

uint64_t DeviceSupportsMaterialBackgrounds()
{
  if (DeviceSupportsMaterialBackgrounds_onceToken != -1)
    dispatch_once(&DeviceSupportsMaterialBackgrounds_onceToken, &__block_literal_global_34);
  return DeviceSupportsMaterialBackgrounds_result;
}

uint64_t DeviceRequiresProMotionOptOut()
{
  if (DeviceRequiresProMotionOptOut_onceToken != -1)
    dispatch_once(&DeviceRequiresProMotionOptOut_onceToken, &__block_literal_global_226);
  return DeviceRequiresProMotionOptOut_result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx07WeatherB030EnableForegroundEffectModifier33_A39A32B40A4B6358E5C401BA018B3258LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v4 = *(_QWORD *)(a1 + 8);
  v5 = sub_1B00074F8();
  v6[0] = v4;
  v6[1] = a3();
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6);
  OUTLINED_FUNCTION_10_1();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t);

  v1 = type metadata accessor for DailyGaugeView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_7_85();
  v6 = v4 + *(int *)(v5 + 28);
  sub_1B00058D8();
  OUTLINED_FUNCTION_31_2();
  v7(v6);
  v8 = v4 + *(int *)(v5 + 32);
  sub_1B0005B84();
  OUTLINED_FUNCTION_31_2();
  v9(v8);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = OUTLINED_FUNCTION_11_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = OUTLINED_FUNCTION_6_98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t HourPrecipitationChartContentView;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  HourPrecipitationChartContentView = type metadata accessor for NextHourPrecipitationChartContentView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(HourPrecipitationChartContentView - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)OUTLINED_FUNCTION_71_0();
  v5 = v3 + v4[10];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71AC8);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    v7 = OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_20_3(v7);
  }
  v8 = v3 + v4[11];
  OUTLINED_FUNCTION_24_41();
  if (!OUTLINED_FUNCTION_25_57())
  {
    v9 = OUTLINED_FUNCTION_11_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = v3 + v4[12];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C50);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    v12 = OUTLINED_FUNCTION_11_0();
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v10, v12);
    v13(v10 + *(int *)(v11 + 36), v12);
  }
  OUTLINED_FUNCTION_11_0();
  if (!OUTLINED_FUNCTION_26_57())
    OUTLINED_FUNCTION_8_102();
  if (!OUTLINED_FUNCTION_26_57())
    OUTLINED_FUNCTION_8_102();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747F0);
  swift_release();
  OUTLINED_FUNCTION_38_25();
  swift_release();
  OUTLINED_FUNCTION_38_25();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE747D8);
  if (!OUTLINED_FUNCTION_25_57())
    OUTLINED_FUNCTION_8_102();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE588);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_1B00074D4();
    OUTLINED_FUNCTION_20_3(v14);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_44_12(v3 + *(int *)(HourPrecipitationChartContentView + 36));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ForegroundEffectView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  j__swift_release(*(_QWORD *)v8, *(unsigned __int8 *)(v8 + 8));
  sub_1AFACCD50(*(_QWORD *)(v8 + 16), *(_BYTE *)(v8 + 24));
  sub_1AFACCD50(*(_QWORD *)(v8 + 32), *(_BYTE *)(v8 + 40));
  sub_1AFB4A7E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 48), v5);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5(void (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
  return swift_deallocObject();
}

void *__swift_memcpy2328_16(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x918uLL);
}

uint64_t sub_1AFB36734(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

__n128 static SIMD3<>.interpolated(between:and:progress:)(float32x4_t a1, float32x4_t a2, float a3)
{
  uint64_t inited;
  float32x4_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B002B5A0;
  v4 = vsubq_f32(a2, a1);
  *(float32x2_t *)(inited + 32) = vadd_f32(*(float32x2_t *)a1.f32, vmul_n_f32(*(float32x2_t *)v4.f32, a3));
  *(float *)(inited + 40) = a1.f32[2] + vmuls_lane_f32(a3, v4, 2);
  sub_1AFB36848(inited, v5, v6, v7, v8, v9, v10, v11);
  return result;
}

uint64_t static SIMD2<>.interpolated(between:and:progress:)(float32x2_t a1, float32x2_t a2, float a3)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B00275A0;
  *(float32x2_t *)(inited + 32) = vadd_f32(vmul_n_f32(vsub_f32(a2, a1), a3), a1);
  return sub_1AFAC3274(inited);
}

void sub_1AFB36848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = v8 - 4;
    do
    {
      if (v9 < 0xFFFFFFFFFFFFFFFDLL)
      {
        __break(1u);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_1_65(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12, v13);
    }
    while (!v10);
    swift_bridgeObjectRelease();
    if (v8 < 3)
      goto LABEL_10;
    OUTLINED_FUNCTION_5_6();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1AFB368A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1B000865C();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  sub_1AFB36D10(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1B0008D34();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_1B0008E3C();
  __break(1u);
LABEL_14:
  result = sub_1B0008DDC();
  __break(1u);
  return result;
}

uint64_t sub_1AFB36A14(uint64_t a1, uint64_t a2)
{
  return sub_1AFAC88B4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], &qword_1ED1F2648, MEMORY[0x1E0CEEBC0]);
}

char *sub_1AFB36A30(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AFBA7930(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFB38EA4(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_1AFB36B18(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AFBA7AC4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFB38F70(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_1AFB36C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  uint64_t v20;
  unint64_t v21;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_23_9();
      if (v10)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_30_10(a1, a2, a3, a4, a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1)
    goto LABEL_23;
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_18:
  a6(0);
  OUTLINED_FUNCTION_19_21();
  v21 = a4 + v20;
  if ((v8 & 1) != 0)
  {
    sub_1AFB31E78(v21, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFB3903C(v21, v12, (unint64_t)v17 + v20, a6);
  }
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFB36D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4410);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_0();
}

void sub_1AFB36D70(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  OUTLINED_FUNCTION_27_50(a1, a2);
  sub_1AFAF15B0();
  OUTLINED_FUNCTION_9_85();
  if (v3)
  {
    __break(1u);
LABEL_8:
    sub_1B0008FF8();
    __break(1u);
    return;
  }
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C20);
  if ((OUTLINED_FUNCTION_36_24() & 1) != 0)
  {
    OUTLINED_FUNCTION_35_20();
    sub_1AFAF15B0();
    if ((v4 & 1) != (v5 & 1))
      goto LABEL_8;
  }
  if ((v4 & 1) != 0)
  {
    type metadata accessor for Request(0);
    sub_1AFD7C8C8();
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_85_3();
    sub_1AFB36E44(v6, v7, v8, v9, v10);
    v11 = OUTLINED_FUNCTION_35_20();
    sub_1AFAF1B38(v11, v12);
  }
}

void sub_1AFB36E44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  OUTLINED_FUNCTION_2_131(a1, a2, a3, a4, a5);
  v9 = *(_QWORD *)(v8 + 56);
  v10 = OUTLINED_FUNCTION_30_60();
  sub_1AFAF2984(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for Request);
  v11 = *(_QWORD *)(a5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v13;
    OUTLINED_FUNCTION_9_0();
  }
}

_QWORD *sub_1AFB36EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  unint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  _QWORD v13[2];

  v4 = (_QWORD *)a1;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AFB38D9C(0, v7, v9);
    swift_bridgeObjectRetain();
    v10 = sub_1AFAF1C44(v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = (_QWORD *)v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (unint64_t *)swift_slowAlloc();
    sub_1AFB38D9C(0, v7, v11);
    swift_bridgeObjectRetain();
    v4 = (_QWORD *)sub_1AFAF1C44(v11, v7, v4, a2);
    MEMORY[0x1B5E03CC0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1AFB37060(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  _QWORD *v28;

  v27 = a1;
  v7 = type metadata accessor for Request(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - v12;
  if (!a3)
    return;
  if (a4[2] == a3)
  {
    swift_retain();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4010);
  v28 = (_QWORD *)sub_1B0008E30();
  v26 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *v27;
  v15 = 0;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_25;
    }
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_29;
    if (v18 >= v26)
      return;
    v19 = v27[v18];
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v26)
        return;
      v19 = v27[v15];
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v26)
          return;
        v19 = v27[v15];
        if (!v19)
          break;
      }
    }
LABEL_24:
    v14 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_25:
    v21 = (uint64_t *)(a4[6] + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    sub_1AFAF2DFC(a4[7] + *(_QWORD *)(v8 + 72) * v17, (uint64_t)v13, type metadata accessor for Request);
    sub_1AFAF2984((uint64_t)v13, (uint64_t)v11, type metadata accessor for Request);
    sub_1AFAF1B38(v22, v23);
    sub_1AFE9E278(v22, v23, (uint64_t)v11, v28);
    if (__OFSUB__(a3--, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (!a3)
      return;
  }
  v20 = v18 + 3;
  if (v20 >= v26)
    return;
  v19 = v27[v20];
  if (v19)
  {
    v15 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v26)
      return;
    v19 = v27[v15];
    ++v20;
    if (v19)
      goto LABEL_24;
  }
LABEL_30:
  __break(1u);
}

void sub_1AFB372A4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFAEEDD0();
  *v0 = v1;
}

char *sub_1AFB372D8(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AFB36A30(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1AFB372F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1ED1F1C18, type metadata accessor for BackgroundAnimationData.Model);
  *v3 = v4;
}

char *sub_1AFB37320(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AFB36B18(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1AFB3733C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t);
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v20 = a5;
  v27 = a4(0);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_17_2(v10, (uint64_t)v20);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v13 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v15 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, a3 + v14 + v15 * v13, v27);
      v16 = a1(v12);
      if (v5)
      {
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_32();
        swift_release();
        goto LABEL_16;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v24(v26, v12, v27);
        if ((OUTLINED_FUNCTION_36_7() & 1) == 0)
        {
          v17 = OUTLINED_FUNCTION_21_22();
          v20(v17);
          a2 = v28;
        }
        v19 = *(_QWORD *)(a2 + 16);
        v18 = *(_QWORD *)(a2 + 24);
        if (v19 >= v18 >> 1)
        {
          ((void (*)(BOOL, unint64_t, uint64_t))v20)(v18 > 1, v19 + 1, 1);
          a2 = v28;
        }
        *(_QWORD *)(a2 + 16) = v19 + 1;
        v24((char *)(a2 + v14 + v19 * v15), v26, v27);
        v28 = a2;
        a2 = v22;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        OUTLINED_FUNCTION_31_11();
      }
      if (v25 == ++v13)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_32();
LABEL_16:
    OUTLINED_FUNCTION_4();
  }
}

void sub_1AFB374F8(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1AFB3733C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE8B0], (void (*)(uint64_t))sub_1AFBA8884);
}

uint64_t sub_1AFB3751C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1AFB30D3C(a1, a2, a3, a4, &qword_1ED1F3C48, type metadata accessor for VFXLoadResponse, (void (*)(uint64_t, uint64_t, unint64_t))sub_1AFBA7F74);
}

void sub_1AFB37538(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_0_92(a1, a2, a3, a4, &qword_1ED1EC5F8, a6, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1AFB37570, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1AFAEDBA4);
}

uint64_t sub_1AFB37554(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1AFB30D3C(a1, a2, a3, a4, &qword_1ED1F3C40, type metadata accessor for VFXLoadRequest, (void (*)(uint64_t, uint64_t, unint64_t))sub_1AFBA7F68);
}

uint64_t sub_1AFB37570(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFB37664(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1AFB368A4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1AFC8D260(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_1AFC8D260((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1AFB376F8(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1AFC8D19C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1B0008BC0();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1AFB37664(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_1B0008D64();
    if (!v8)
    {
      result = sub_1B0008DDC();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_1AFB3784C(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(void);
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  char *v93;
  void (*v94)(uint64_t, char *, uint64_t);
  void (*v95)(void);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  void (*v102)(void);
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  char v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t *v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  void (*v163)(void);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  void (*v168)(uint64_t, uint64_t);
  void (*v169)(uint64_t, uint64_t, uint64_t, char *);
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  uint64_t v176;
  void (*v177)(void);
  char *v178;
  char *v179;
  uint64_t v180;
  _QWORD *v181;

  v2 = v1;
  v173 = OUTLINED_FUNCTION_11_0();
  v166 = *(_QWORD *)(v173 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  v172 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v6);
  v176 = OUTLINED_FUNCTION_15_82(v7, v8, v9, v10, v11, v12, v13, v14, v154);
  v181 = *(_QWORD **)(v176 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_38();
  v162 = v16;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_9_1();
  v178 = v18;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v19);
  v170 = (char *)&v154 - v20;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_36_25(v22, v23, v24, v25, v26, v27, v28, v29, v154);
  v30 = *(_QWORD *)(a1 + 8);
  v31 = sub_1B0008F74();
  if (v31 >= v30)
  {
    if (v30 < 0)
      goto LABEL_139;
    if (v30)
      sub_1AFADE708(0, v30, 1, (_QWORD *)a1);
LABEL_116:
    OUTLINED_FUNCTION_4();
    return;
  }
  v158 = v31;
  v156 = sub_1AFC91258(v30 / 2);
  v164 = v32;
  v157 = v30;
  if (v30 <= 0)
    goto LABEL_102;
  v33 = 0;
  v34 = (char *)MEMORY[0x1E0DEE9D8];
  v175 = (_QWORD *)a1;
  while (1)
  {
    v35 = (uint64_t)v33;
    v36 = (uint64_t)v33 + 1;
    v161 = v34;
    v163 = v33;
    if ((uint64_t)v33 + 1 < v30)
    {
      v159 = *(_QWORD *)a1;
      v37 = v159;
      v179 = (char *)v181[9];
      v38 = v179;
      v180 = (uint64_t)v33 + 1;
      v39 = (void (*)(void))v181[2];
      v40 = v176;
      v39();
      v41 = v37 + (_QWORD)v38 * v35;
      v42 = v170;
      v177 = v39;
      ((void (*)(char *, uint64_t, uint64_t))v39)(v170, v41, v40);
      v43 = v171;
      sub_1B0005BE4();
      v44 = v172;
      OUTLINED_FUNCTION_39_17();
      LODWORD(v169) = sub_1B0005860();
      v45 = *(void (**)(char *, uint64_t))(v166 + 8);
      v46 = v173;
      v45(v44, v173);
      v47 = v43;
      v35 = (uint64_t)v163;
      v168 = (void (*)(uint64_t, uint64_t))v45;
      v45(v47, v46);
      v48 = v179;
      v49 = (void (*)(char *, uint64_t))v181[1];
      v49(v42, v40);
      v167 = (char *)v49;
      v49(v174, v40);
      v36 = v35 + 2;
      if (v35 + 2 < v30)
      {
        v155 = v2;
        v165 = (_QWORD)v48 * v180;
        v50 = v159;
        v160 = (_QWORD)v48 * v36;
        while (1)
        {
          v51 = v30;
          v52 = v36;
          v53 = v174;
          v55 = v176;
          v54 = v177;
          ((void (*)(char *, uint64_t, uint64_t))v177)(v174, v50 + v160, v176);
          v56 = v170;
          ((void (*)(char *, uint64_t, uint64_t))v54)(v170, v50 + v165, v55);
          v57 = v171;
          sub_1B0005BE4();
          v58 = v172;
          sub_1B0005BE4();
          LODWORD(v180) = sub_1B0005860();
          v59 = v58;
          v60 = v173;
          v61 = v168;
          v168((uint64_t)v59, v173);
          v61((uint64_t)v57, v60);
          v62 = (void (*)(uint64_t, uint64_t))v167;
          ((void (*)(char *, uint64_t))v167)(v56, v55);
          v62((uint64_t)v53, v55);
          if (((v169 ^ v180) & 1) != 0)
            break;
          v36 = v52 + 1;
          v48 = v179;
          v50 += (uint64_t)v179;
          v30 = v51;
          if (v36 >= v51)
          {
            v36 = v51;
            a1 = (int64_t)v175;
            v2 = v155;
            v35 = (uint64_t)v163;
            goto LABEL_11;
          }
        }
        a1 = (int64_t)v175;
        v2 = v155;
        v36 = v52;
        v35 = (uint64_t)v163;
        v30 = v51;
        v48 = v179;
      }
LABEL_11:
      v34 = v161;
      if ((v169 & 1) != 0)
      {
        if (v36 < v35)
          goto LABEL_140;
        if (v35 < v36)
        {
          v168 = (void (*)(uint64_t, uint64_t))v30;
          v63 = 0;
          v64 = (_QWORD)v48 * (v36 - 1);
          v65 = v36 * (_QWORD)v48;
          v66 = v35 * (_QWORD)v48;
          v177 = (void (*)(void))v36;
          do
          {
            if (v35 != v36 + v63 - 1)
            {
              v67 = v159;
              if (!v159)
                goto LABEL_146;
              v68 = v2;
              v69 = v159 + v66;
              v180 = v159 + v64;
              v70 = v176;
              v169 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v181[4];
              v169(v162, v159 + v66, v176, v34);
              if (v66 < v64 || v69 >= v67 + v65)
              {
                OUTLINED_FUNCTION_40_15();
                swift_arrayInitWithTakeFrontToBack();
                v48 = v179;
              }
              else
              {
                v48 = v179;
                if (v66 != v64)
                {
                  OUTLINED_FUNCTION_40_15();
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, uint64_t, uint64_t))v169)(v180, v162, v70);
              v34 = v161;
              v2 = v68;
              v36 = (uint64_t)v177;
            }
            ++v35;
            --v63;
            v64 -= (uint64_t)v48;
            v65 -= (uint64_t)v48;
            v66 += (uint64_t)v48;
          }
          while (v35 < v36 + v63);
          a1 = (int64_t)v175;
          v35 = (uint64_t)v163;
          v30 = (uint64_t)v168;
        }
      }
    }
    if (v36 < v30)
    {
      if (__OFSUB__(v36, v35))
        goto LABEL_138;
      if (v36 - v35 < v158)
      {
        if (__OFADD__(v35, v158))
          goto LABEL_141;
        if (v35 + v158 >= v30)
          v72 = v30;
        else
          v72 = v35 + v158;
        if (v72 < v35)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (v36 != v72)
        {
          v155 = v2;
          v73 = (char *)v181[9];
          v165 = v181[2];
          v74 = (_QWORD)v73 * (v36 - 1);
          v167 = v73;
          v75 = v36 * (_QWORD)v73;
          v76 = v176;
          v160 = v72;
          do
          {
            v77 = 0;
            v177 = (void (*)(void))v36;
            v168 = (void (*)(uint64_t, uint64_t))v75;
            v169 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v74;
            while (1)
            {
              v78 = *(_QWORD *)a1;
              v179 = (char *)(v75 + v77);
              v180 = v35;
              v79 = (char *)(v75 + v77 + v78);
              v80 = v174;
              v81 = (void (*)(char *, uint64_t, uint64_t))v165;
              ((void (*)(char *, char *, uint64_t, char *))v165)(v174, v79, v76, v34);
              v82 = v74 + v77 + v78;
              v83 = (uint64_t *)a1;
              v84 = v170;
              v81(v170, v82, v76);
              v85 = v171;
              OUTLINED_FUNCTION_39_17();
              v86 = v172;
              sub_1B0005BE4();
              LOBYTE(v78) = sub_1B0005860();
              v87 = *(void (**)(char *, uint64_t))(v166 + 8);
              v88 = v86;
              v89 = v173;
              v87(v88, v173);
              v90 = v85;
              v76 = v176;
              v87(v90, v89);
              v91 = (void (*)(char *, uint64_t))v181[1];
              v91(v84, v76);
              v91(v80, v76);
              if ((v78 & 1) == 0)
                break;
              v92 = *v83;
              if (!*v83)
                goto LABEL_144;
              v75 = (uint64_t)v168;
              v74 = (uint64_t)v169;
              v93 = (char *)v169 + v92 + v77;
              v94 = (void (*)(uint64_t, char *, uint64_t))v181[4];
              v94((uint64_t)v178, (char *)v168 + v92 + v77, v76);
              swift_arrayInitWithTakeFrontToBack();
              v94((uint64_t)v93, v178, v76);
              v77 -= (uint64_t)v167;
              v35 = v180 + 1;
              v95 = v177;
              a1 = (int64_t)v175;
              if (v177 == (void (*)(void))(v180 + 1))
                goto LABEL_44;
            }
            v95 = v177;
            a1 = (int64_t)v83;
            v75 = (uint64_t)v168;
            v74 = (uint64_t)v169;
LABEL_44:
            v36 = (uint64_t)v95 + 1;
            v74 += (uint64_t)v167;
            v75 += (uint64_t)v167;
            v35 = (uint64_t)v163;
          }
          while (v36 != v160);
          v36 = v160;
          v2 = v155;
        }
      }
    }
    if (v36 < v35)
      goto LABEL_137;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v177 = (void (*)(void))v36;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v34 = v161;
    else
      v34 = sub_1AFC92E70(0, *((_QWORD *)v161 + 2) + 1, 1, v161);
    v98 = *((_QWORD *)v34 + 2);
    v97 = *((_QWORD *)v34 + 3);
    v99 = v98 + 1;
    if (v98 >= v97 >> 1)
      v34 = sub_1AFC92E70((char *)(v97 > 1), v98 + 1, 1, v34);
    *((_QWORD *)v34 + 2) = v99;
    v100 = v34 + 32;
    v101 = &v34[16 * v98 + 32];
    v102 = v177;
    *(_QWORD *)v101 = v35;
    *((_QWORD *)v101 + 1) = v102;
    if (v98)
      break;
    v99 = 1;
LABEL_94:
    a1 = (int64_t)v175;
    v30 = v175[1];
    v33 = v177;
    if ((uint64_t)v177 >= v30)
      goto LABEL_103;
  }
  while (1)
  {
    v103 = v99 - 1;
    if (v99 >= 4)
    {
      v108 = &v100[16 * v99];
      v109 = *((_QWORD *)v108 - 8);
      v110 = *((_QWORD *)v108 - 7);
      v114 = __OFSUB__(v110, v109);
      v111 = v110 - v109;
      if (v114)
        goto LABEL_122;
      v113 = *((_QWORD *)v108 - 6);
      v112 = *((_QWORD *)v108 - 5);
      v114 = __OFSUB__(v112, v113);
      v106 = v112 - v113;
      v107 = v114;
      if (v114)
        goto LABEL_123;
      v115 = v99 - 2;
      v116 = &v100[16 * v99 - 32];
      v118 = *(_QWORD *)v116;
      v117 = *((_QWORD *)v116 + 1);
      v114 = __OFSUB__(v117, v118);
      v119 = v117 - v118;
      if (v114)
        goto LABEL_124;
      v114 = __OFADD__(v106, v119);
      v120 = v106 + v119;
      if (v114)
        goto LABEL_126;
      if (v120 >= v111)
      {
        v138 = &v100[16 * v103];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v114 = __OFSUB__(v139, v140);
        v141 = v139 - v140;
        if (v114)
          goto LABEL_132;
        v131 = v106 < v141;
        goto LABEL_83;
      }
    }
    else
    {
      if (v99 != 3)
      {
        v132 = *((_QWORD *)v34 + 4);
        v133 = *((_QWORD *)v34 + 5);
        v114 = __OFSUB__(v133, v132);
        v125 = v133 - v132;
        v126 = v114;
        goto LABEL_77;
      }
      v105 = *((_QWORD *)v34 + 4);
      v104 = *((_QWORD *)v34 + 5);
      v114 = __OFSUB__(v104, v105);
      v106 = v104 - v105;
      v107 = v114;
    }
    if ((v107 & 1) != 0)
      goto LABEL_125;
    v115 = v99 - 2;
    v121 = &v100[16 * v99 - 32];
    v123 = *(_QWORD *)v121;
    v122 = *((_QWORD *)v121 + 1);
    v124 = __OFSUB__(v122, v123);
    v125 = v122 - v123;
    v126 = v124;
    if (v124)
      goto LABEL_127;
    v127 = &v100[16 * v103];
    v129 = *(_QWORD *)v127;
    v128 = *((_QWORD *)v127 + 1);
    v114 = __OFSUB__(v128, v129);
    v130 = v128 - v129;
    if (v114)
      goto LABEL_129;
    if (__OFADD__(v125, v130))
      goto LABEL_131;
    if (v125 + v130 >= v106)
    {
      v131 = v106 < v130;
LABEL_83:
      if (v131)
        v103 = v115;
      goto LABEL_85;
    }
LABEL_77:
    if ((v126 & 1) != 0)
      goto LABEL_128;
    v134 = &v100[16 * v103];
    v136 = *(_QWORD *)v134;
    v135 = *((_QWORD *)v134 + 1);
    v114 = __OFSUB__(v135, v136);
    v137 = v135 - v136;
    if (v114)
      goto LABEL_130;
    if (v137 < v125)
      goto LABEL_94;
LABEL_85:
    v142 = v103 - 1;
    if (v103 - 1 >= v99)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*v175)
      goto LABEL_145;
    v143 = v34;
    v144 = (uint64_t *)&v100[16 * v142];
    v145 = *v144;
    v146 = &v100[16 * v103];
    a1 = *((_QWORD *)v146 + 1);
    OUTLINED_FUNCTION_41_12(*v175 + v181[9] * *v144, *v175 + v181[9] * *(_QWORD *)v146, *v175 + v181[9] * a1);
    v2 = v1;
    if (v1)
      break;
    if (a1 < v145)
      goto LABEL_119;
    if (v103 > *((_QWORD *)v143 + 2))
      goto LABEL_120;
    *v144 = v145;
    *(_QWORD *)&v100[16 * v142 + 8] = a1;
    v147 = *((_QWORD *)v143 + 2);
    if (v103 >= v147)
      goto LABEL_121;
    v99 = v147 - 1;
    memmove(&v100[16 * v103], v146 + 16, 16 * (v147 - 1 - v103));
    v34 = v143;
    *((_QWORD *)v143 + 2) = v147 - 1;
    if (v147 <= 2)
      goto LABEL_94;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v157 >= -1)
    goto LABEL_115;
  __break(1u);
LABEL_102:
  v34 = (char *)MEMORY[0x1E0DEE9D8];
  v99 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
  if (v99 >= 2)
  {
    v148 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v99 - 2;
      if (v99 < 2)
        break;
      if (!v148)
        goto LABEL_147;
      v149 = v34;
      v150 = *(_QWORD *)&v34[16 * a1 + 32];
      v151 = *(_QWORD *)&v34[16 * v99 + 24];
      OUTLINED_FUNCTION_41_12(v148 + v181[9] * v150, v148 + v181[9] * *(_QWORD *)&v34[16 * v99 + 16], v148 + v181[9] * v151);
      if (v1)
        goto LABEL_100;
      if (v151 < v150)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v149 = sub_1AFC92F64();
      if ((unint64_t)a1 >= *((_QWORD *)v149 + 2))
        goto LABEL_135;
      v152 = &v149[16 * a1 + 32];
      *(_QWORD *)v152 = v150;
      *((_QWORD *)v152 + 1) = v151;
      v153 = *((_QWORD *)v149 + 2);
      if (v99 > v153)
        goto LABEL_136;
      memmove(&v149[16 * v99 + 16], &v149[16 * v99 + 32], 16 * (v153 - v99));
      v34 = v149;
      *((_QWORD *)v149 + 2) = v153 - 1;
      v99 = v153 - 1;
      if (v153 <= 2)
        goto LABEL_114;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v157 >= -1)
  {
LABEL_115:
    *(_QWORD *)(v156 + 16) = 0;
    swift_bridgeObjectRelease();
    goto LABEL_116;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

void sub_1AFB382AC(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(void);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(void);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  void (*v79)(void);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(void);
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t *v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  void (*v147)(void);
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  void (*v152)(char *, uint64_t);
  void (*v153)(char *, uint64_t, uint64_t, char *);
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  _QWORD *v159;
  uint64_t v160;
  void (*v161)(void);
  char *v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;

  v2 = v1;
  v157 = sub_1B00058D8();
  v150 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v156 = (char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v155 = (char *)&v138 - v6;
  v160 = sub_1B0005BFC();
  v165 = *(_QWORD **)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v146 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v162 = (char *)&v138 - v9;
  MEMORY[0x1E0C80A78](v10);
  v154 = (char *)&v138 - v11;
  MEMORY[0x1E0C80A78](v12);
  v158 = (char *)&v138 - v13;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = sub_1B0008F74();
  if (v15 >= v14)
  {
    if (v14 < 0)
      goto LABEL_139;
    if (v14)
      sub_1AFAD8284(0, v14, 1, (_QWORD *)a1);
    return;
  }
  v142 = v15;
  v140 = sub_1AFC91258(v14 / 2);
  v148 = v16;
  v141 = v14;
  if (v14 <= 0)
    goto LABEL_102;
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v159 = (_QWORD *)a1;
  while (1)
  {
    v19 = (uint64_t)v17;
    v20 = (uint64_t)v17 + 1;
    v145 = v18;
    v147 = v17;
    if ((uint64_t)v17 + 1 < v14)
    {
      v143 = *(_QWORD *)a1;
      v21 = v143;
      v163 = (char *)v165[9];
      v22 = v163;
      v164 = (uint64_t)v17 + 1;
      v23 = (void (*)(void))v165[2];
      v24 = v160;
      v23();
      v25 = v21 + (_QWORD)v22 * v19;
      v26 = v154;
      v161 = v23;
      ((void (*)(char *, uint64_t, uint64_t))v23)(v154, v25, v24);
      v27 = v155;
      sub_1B0005BE4();
      v28 = v156;
      sub_1B0005BE4();
      LODWORD(v153) = sub_1B0005860();
      v29 = *(void (**)(char *, uint64_t))(v150 + 8);
      v30 = v157;
      v29(v28, v157);
      v31 = v27;
      v19 = (uint64_t)v147;
      v152 = v29;
      v29(v31, v30);
      v32 = v163;
      v33 = (void (*)(char *, uint64_t))v165[1];
      v33(v26, v24);
      v151 = (char *)v33;
      v33(v158, v24);
      v20 = v19 + 2;
      if (v19 + 2 < v14)
      {
        v139 = v2;
        v149 = (_QWORD)v32 * v164;
        v34 = v143;
        v144 = (_QWORD)v32 * v20;
        while (1)
        {
          v35 = v14;
          v36 = v20;
          v37 = v158;
          v39 = v160;
          v38 = v161;
          ((void (*)(char *, uint64_t, uint64_t))v161)(v158, v34 + v144, v160);
          v40 = v154;
          ((void (*)(char *, uint64_t, uint64_t))v38)(v154, v34 + v149, v39);
          v41 = v155;
          sub_1B0005BE4();
          v42 = v156;
          sub_1B0005BE4();
          LODWORD(v164) = sub_1B0005860();
          v43 = v42;
          v44 = v157;
          v45 = v152;
          v152(v43, v157);
          v45(v41, v44);
          v46 = (void (*)(char *, uint64_t))v151;
          ((void (*)(char *, uint64_t))v151)(v40, v39);
          v46(v37, v39);
          if (((v153 ^ v164) & 1) != 0)
            break;
          v20 = v36 + 1;
          v32 = v163;
          v34 += (uint64_t)v163;
          v14 = v35;
          if (v20 >= v35)
          {
            v20 = v35;
            a1 = (int64_t)v159;
            v2 = v139;
            v19 = (uint64_t)v147;
            goto LABEL_11;
          }
        }
        a1 = (int64_t)v159;
        v2 = v139;
        v20 = v36;
        v19 = (uint64_t)v147;
        v14 = v35;
        v32 = v163;
      }
LABEL_11:
      v18 = v145;
      if ((v153 & 1) != 0)
      {
        if (v20 < v19)
          goto LABEL_140;
        if (v19 < v20)
        {
          v152 = (void (*)(char *, uint64_t))v14;
          v47 = 0;
          v48 = (_QWORD)v32 * (v20 - 1);
          v49 = v20 * (_QWORD)v32;
          v50 = v19 * (_QWORD)v32;
          v161 = (void (*)(void))v20;
          do
          {
            if (v19 != v20 + v47 - 1)
            {
              v51 = v143;
              if (!v143)
                goto LABEL_146;
              v52 = v2;
              v53 = v143 + v50;
              v164 = v143 + v48;
              v54 = v160;
              v153 = (void (*)(char *, uint64_t, uint64_t, char *))v165[4];
              v153(v146, v143 + v50, v160, v18);
              if (v50 < v48 || v53 >= v51 + v49)
              {
                swift_arrayInitWithTakeFrontToBack();
                v32 = v163;
              }
              else
              {
                v32 = v163;
                if (v50 != v48)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v153)(v164, v146, v54);
              v18 = v145;
              v2 = v52;
              v20 = (uint64_t)v161;
            }
            ++v19;
            --v47;
            v48 -= (uint64_t)v32;
            v49 -= (uint64_t)v32;
            v50 += (uint64_t)v32;
          }
          while (v19 < v20 + v47);
          a1 = (int64_t)v159;
          v19 = (uint64_t)v147;
          v14 = (uint64_t)v152;
        }
      }
    }
    if (v20 < v14)
    {
      if (__OFSUB__(v20, v19))
        goto LABEL_138;
      if (v20 - v19 < v142)
      {
        if (__OFADD__(v19, v142))
          goto LABEL_141;
        if (v19 + v142 >= v14)
          v56 = v14;
        else
          v56 = v19 + v142;
        if (v56 < v19)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (v20 != v56)
        {
          v139 = v2;
          v57 = (char *)v165[9];
          v149 = v165[2];
          v58 = (_QWORD)v57 * (v20 - 1);
          v151 = v57;
          v59 = v20 * (_QWORD)v57;
          v60 = v160;
          v144 = v56;
          do
          {
            v61 = 0;
            v161 = (void (*)(void))v20;
            v152 = (void (*)(char *, uint64_t))v59;
            v153 = (void (*)(char *, uint64_t, uint64_t, char *))v58;
            while (1)
            {
              v62 = *(_QWORD *)a1;
              v163 = (char *)(v59 + v61);
              v164 = v19;
              v63 = (char *)(v59 + v61 + v62);
              v64 = v158;
              v65 = (void (*)(char *, uint64_t, uint64_t))v149;
              ((void (*)(char *, char *, uint64_t, char *))v149)(v158, v63, v60, v18);
              v66 = v58 + v61 + v62;
              v67 = (uint64_t *)a1;
              v68 = v154;
              v65(v154, v66, v60);
              v69 = v155;
              sub_1B0005BE4();
              v70 = v156;
              sub_1B0005BE4();
              LOBYTE(v62) = sub_1B0005860();
              v71 = *(void (**)(char *, uint64_t))(v150 + 8);
              v72 = v70;
              v73 = v157;
              v71(v72, v157);
              v74 = v69;
              v60 = v160;
              v71(v74, v73);
              v75 = (void (*)(char *, uint64_t))v165[1];
              v75(v68, v60);
              v75(v64, v60);
              if ((v62 & 1) == 0)
                break;
              v76 = *v67;
              if (!*v67)
                goto LABEL_144;
              v59 = (uint64_t)v152;
              v58 = (uint64_t)v153;
              v77 = (char *)v153 + v76 + v61;
              v78 = (void (*)(char *, char *, uint64_t))v165[4];
              v78(v162, (char *)v152 + v76 + v61, v60);
              swift_arrayInitWithTakeFrontToBack();
              v78(v77, v162, v60);
              v61 -= (uint64_t)v151;
              v19 = v164 + 1;
              v79 = v161;
              a1 = (int64_t)v159;
              if (v161 == (void (*)(void))(v164 + 1))
                goto LABEL_44;
            }
            v79 = v161;
            a1 = (int64_t)v67;
            v59 = (uint64_t)v152;
            v58 = (uint64_t)v153;
LABEL_44:
            v20 = (uint64_t)v79 + 1;
            v58 += (uint64_t)v151;
            v59 += (uint64_t)v151;
            v19 = (uint64_t)v147;
          }
          while (v20 != v144);
          v20 = v144;
          v2 = v139;
        }
      }
    }
    if (v20 < v19)
      goto LABEL_137;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v161 = (void (*)(void))v20;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v18 = v145;
    else
      v18 = sub_1AFC92E70(0, *((_QWORD *)v145 + 2) + 1, 1, v145);
    v82 = *((_QWORD *)v18 + 2);
    v81 = *((_QWORD *)v18 + 3);
    v83 = v82 + 1;
    if (v82 >= v81 >> 1)
      v18 = sub_1AFC92E70((char *)(v81 > 1), v82 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v83;
    v84 = v18 + 32;
    v85 = &v18[16 * v82 + 32];
    v86 = v161;
    *(_QWORD *)v85 = v19;
    *((_QWORD *)v85 + 1) = v86;
    if (v82)
      break;
    v83 = 1;
LABEL_94:
    a1 = (int64_t)v159;
    v14 = v159[1];
    v17 = v161;
    if ((uint64_t)v161 >= v14)
      goto LABEL_103;
  }
  while (1)
  {
    v87 = v83 - 1;
    if (v83 >= 4)
    {
      v92 = &v84[16 * v83];
      v93 = *((_QWORD *)v92 - 8);
      v94 = *((_QWORD *)v92 - 7);
      v98 = __OFSUB__(v94, v93);
      v95 = v94 - v93;
      if (v98)
        goto LABEL_122;
      v97 = *((_QWORD *)v92 - 6);
      v96 = *((_QWORD *)v92 - 5);
      v98 = __OFSUB__(v96, v97);
      v90 = v96 - v97;
      v91 = v98;
      if (v98)
        goto LABEL_123;
      v99 = v83 - 2;
      v100 = &v84[16 * v83 - 32];
      v102 = *(_QWORD *)v100;
      v101 = *((_QWORD *)v100 + 1);
      v98 = __OFSUB__(v101, v102);
      v103 = v101 - v102;
      if (v98)
        goto LABEL_124;
      v98 = __OFADD__(v90, v103);
      v104 = v90 + v103;
      if (v98)
        goto LABEL_126;
      if (v104 >= v95)
      {
        v122 = &v84[16 * v87];
        v124 = *(_QWORD *)v122;
        v123 = *((_QWORD *)v122 + 1);
        v98 = __OFSUB__(v123, v124);
        v125 = v123 - v124;
        if (v98)
          goto LABEL_132;
        v115 = v90 < v125;
        goto LABEL_83;
      }
    }
    else
    {
      if (v83 != 3)
      {
        v116 = *((_QWORD *)v18 + 4);
        v117 = *((_QWORD *)v18 + 5);
        v98 = __OFSUB__(v117, v116);
        v109 = v117 - v116;
        v110 = v98;
        goto LABEL_77;
      }
      v89 = *((_QWORD *)v18 + 4);
      v88 = *((_QWORD *)v18 + 5);
      v98 = __OFSUB__(v88, v89);
      v90 = v88 - v89;
      v91 = v98;
    }
    if ((v91 & 1) != 0)
      goto LABEL_125;
    v99 = v83 - 2;
    v105 = &v84[16 * v83 - 32];
    v107 = *(_QWORD *)v105;
    v106 = *((_QWORD *)v105 + 1);
    v108 = __OFSUB__(v106, v107);
    v109 = v106 - v107;
    v110 = v108;
    if (v108)
      goto LABEL_127;
    v111 = &v84[16 * v87];
    v113 = *(_QWORD *)v111;
    v112 = *((_QWORD *)v111 + 1);
    v98 = __OFSUB__(v112, v113);
    v114 = v112 - v113;
    if (v98)
      goto LABEL_129;
    if (__OFADD__(v109, v114))
      goto LABEL_131;
    if (v109 + v114 >= v90)
    {
      v115 = v90 < v114;
LABEL_83:
      if (v115)
        v87 = v99;
      goto LABEL_85;
    }
LABEL_77:
    if ((v110 & 1) != 0)
      goto LABEL_128;
    v118 = &v84[16 * v87];
    v120 = *(_QWORD *)v118;
    v119 = *((_QWORD *)v118 + 1);
    v98 = __OFSUB__(v119, v120);
    v121 = v119 - v120;
    if (v98)
      goto LABEL_130;
    if (v121 < v109)
      goto LABEL_94;
LABEL_85:
    v126 = v87 - 1;
    if (v87 - 1 >= v83)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*v159)
      goto LABEL_145;
    v127 = v18;
    v128 = (uint64_t *)&v84[16 * v126];
    v129 = *v128;
    v130 = &v84[16 * v87];
    a1 = *((_QWORD *)v130 + 1);
    sub_1AFC81CA4(*v159 + v165[9] * *v128, *v159 + v165[9] * *(_QWORD *)v130, *v159 + v165[9] * a1, v148);
    if (v2)
      break;
    if (a1 < v129)
      goto LABEL_119;
    if (v87 > *((_QWORD *)v127 + 2))
      goto LABEL_120;
    *v128 = v129;
    *(_QWORD *)&v84[16 * v126 + 8] = a1;
    v131 = *((_QWORD *)v127 + 2);
    if (v87 >= v131)
      goto LABEL_121;
    v83 = v131 - 1;
    memmove(&v84[16 * v87], v130 + 16, 16 * (v131 - 1 - v87));
    v18 = v127;
    *((_QWORD *)v127 + 2) = v131 - 1;
    if (v131 <= 2)
      goto LABEL_94;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v141 >= -1)
    goto LABEL_115;
  __break(1u);
LABEL_102:
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v83 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
  if (v83 >= 2)
  {
    v132 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v83 - 2;
      if (v83 < 2)
        break;
      if (!v132)
        goto LABEL_147;
      v133 = v18;
      v134 = *(_QWORD *)&v18[16 * a1 + 32];
      v135 = *(_QWORD *)&v18[16 * v83 + 24];
      sub_1AFC81CA4(v132 + v165[9] * v134, v132 + v165[9] * *(_QWORD *)&v18[16 * v83 + 16], v132 + v165[9] * v135, v148);
      if (v2)
        goto LABEL_100;
      if (v135 < v134)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v133 = sub_1AFC92F64();
      if ((unint64_t)a1 >= *((_QWORD *)v133 + 2))
        goto LABEL_135;
      v136 = &v133[16 * a1 + 32];
      *(_QWORD *)v136 = v134;
      *((_QWORD *)v136 + 1) = v135;
      v137 = *((_QWORD *)v133 + 2);
      if (v83 > v137)
        goto LABEL_136;
      memmove(&v133[16 * v83 + 16], &v133[16 * v83 + 32], 16 * (v137 - v83));
      v18 = v133;
      *((_QWORD *)v133 + 2) = v137 - 1;
      v83 = v137 - 1;
      if (v137 <= 2)
        goto LABEL_114;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v141 >= -1)
  {
LABEL_115:
    *(_QWORD *)(v140 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

uint64_t sub_1AFB38D9C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1AFB38DB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (v3 = a1 + 16 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_1B0008E3C();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BB8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_1AFB38EA4(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[120 * a2] <= __src || &__src[120 * a2] <= __dst))
    return memcpy(__dst, __src, 120 * a2);
  result = (void *)sub_1B0008E3C();
  __break(1u);
  return result;
}

void *sub_1AFB38F70(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[88 * a2] <= __src || &__src[88 * a2] <= __dst))
    return memcpy(__dst, __src, 88 * a2);
  result = (void *)sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFB3903C(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    v6 = *(_QWORD *)(*(_QWORD *)(a4(0) - 8) + 72) * a2;
    v7 = a3 + v6;
    v8 = a1 + v6;
    if (v7 <= a1 || v8 <= a3)
      return swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_11_28();
  }
  result = OUTLINED_FUNCTION_3_18();
  __break(1u);
  return result;
}

uint64_t sub_1AFB39100()
{
  uint64_t result;

  result = sub_1B0008554();
  qword_1ED1FEDA0 = result;
  return result;
}

void sub_1AFB39134(void *a1)
{
  id v1;

  v1 = a1;
  sub_1AFACE188();

}

uint64_t sub_1AFB39168()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_1AFB39178(uint64_t a1, uint64_t a2)
{
  return sub_1AFFED38C(a1, a2, (uint64_t (*)(void))sub_1AFB39358);
}

uint64_t sub_1AFB39184@<X0>(void *a1@<X1>, void *a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1AFAC2DFC(a1, a2, 5785174, 0xE300000000000000, a3);
}

id sub_1AFB39194()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for BundleLookup();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED1F4470 = (uint64_t)result;
  return result;
}

id sub_1AFB391E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_URLForResource_withExtension_subdirectory_, a1, a2, v8);

  return v9;
}

void sub_1AFB39268()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  OUTLINED_FUNCTION_36_50();
  v1 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_URLForResource_withExtension_, v1, v2);

  OUTLINED_FUNCTION_28_5();
}

unint64_t sub_1AFB392E0()
{
  unint64_t result;

  result = qword_1ED1F4BA8;
  if (!qword_1ED1F4BA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F4BA8);
  }
  return result;
}

unint64_t sub_1AFB3931C()
{
  unint64_t result;

  result = qword_1ED1F1C10;
  if (!qword_1ED1F1C10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F1C10);
  }
  return result;
}

id sub_1AFB39358()
{
  void *v0;

  return objc_msgSend(v0, sel_bounds);
}

unint64_t sub_1AFB39368()
{
  unint64_t result;

  result = qword_1ED1F3BF8;
  if (!qword_1ED1F3BF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F3BF8);
  }
  return result;
}

void sub_1AFB393A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_0();
}

void sub_1AFB393D8()
{
  unint64_t v0;

  sub_1AFB4C1B4(319, &qword_1ED1F4778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE2B0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AFB39458()
{
  sub_1AFADA43C(&qword_1ED1F49E0, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
}

uint64_t sub_1AFB39484()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NSUnitTemperature.WeatherFormatUnitConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFB394D8()
{
  sub_1AFADA43C(&qword_1ED1F4938, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
}

uint64_t sub_1AFB39504()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B0005A1C();
  if (v1 <= 0x3F)
  {
    result = sub_1B000565C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1AFB395A4(uint64_t a1)
{
  uint64_t v2;

  sub_1AFADA43C(&qword_1ED1F4930, (void (*)(uint64_t))type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AFB395E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_149();
  v1 = v0;
  OUTLINED_FUNCTION_77_4();
  v2 = OUTLINED_FUNCTION_106();
  *v1 = sub_1AFADF278(v2, v3, v4, v5, v6, v7);
  v1[1] = v8;
  OUTLINED_FUNCTION_28_5();
}

id sub_1AFB39614()
{
  id result;

  result = sub_1AFB39630();
  qword_1ED1EC308 = (uint64_t)result;
  return result;
}

id sub_1AFB39630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v7;

  v0 = sub_1B0005A1C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  sub_1B000595C();
  v5 = (void *)sub_1B0005950();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  objc_msgSend(v4, sel_setMaximumFractionDigits_, 0);
  objc_msgSend(v4, sel_setNumberStyle_, 3);
  return v4;
}

id static NSNumberFormatter.percent.getter()
{
  return sub_1AFB39730(&qword_1ED1EC338, (id *)&qword_1ED1EC308);
}

id sub_1AFB39730(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

unint64_t sub_1AFB39784()
{
  unint64_t result;

  result = qword_1ED1F3BE8;
  if (!qword_1ED1F3BE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F3BE8);
  }
  return result;
}

unint64_t sub_1AFB397C0()
{
  unint64_t result;

  result = qword_1ED1F3BE0;
  if (!qword_1ED1F3BE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F3BE0);
  }
  return result;
}

id sub_1AFB397FC()
{
  id result;

  result = sub_1AFB39818();
  qword_1ED1FED68 = (uint64_t)result;
  return result;
}

id sub_1AFB39818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v7;

  v0 = sub_1B0005A1C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1B000595C();
  v5 = (void *)sub_1B0005950();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  return v4;
}

unint64_t sub_1AFB398D4()
{
  unint64_t result;

  result = qword_1ED1EC3D8;
  if (!qword_1ED1EC3D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1EC3D8);
  }
  return result;
}

void sub_1AFB39910(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_13(v3);
  OUTLINED_FUNCTION_0();
}

void sub_1AFB3993C()
{
  sub_1AFADA43C(&qword_1ED1EDC50, (void (*)(uint64_t))type metadata accessor for NSUnitPressure.WeatherFormatComponent);
}

void sub_1AFB39968()
{
  unint64_t v0;

  sub_1AFB4C264();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_1AFB399BC()
{
  sub_1AFADA43C(&qword_1ED1EDBB0, (void (*)(uint64_t))type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle);
}

uint64_t sub_1AFB399E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005A1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AFB39A68(uint64_t a1)
{
  uint64_t v2;

  sub_1AFADA43C(&qword_1ED1EDBA8, (void (*)(uint64_t))type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AFB39AA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_149();
  v1 = v0;
  swift_getObjectType();
  v2 = OUTLINED_FUNCTION_106();
  *v1 = sub_1AFAD7514(v2, v3, v4, v5, v6, v7);
  v1[1] = v8;
  OUTLINED_FUNCTION_28_5();
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EDBA0);
}

id UIApplication.expectedWindow.getter@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v2 = UIApplication.maybeWindow.getter();
  if (v2)
  {
    v3 = (uint64_t)v2;
    result = (id)OUTLINED_FUNCTION_13_1((uint64_t)v2, &qword_1ED1EC5F0);
    a1[3] = (uint64_t)result;
    a1[4] = (uint64_t)&protocol witness table for UIWindow;
    *a1 = v3;
  }
  else
  {
    if (qword_1EEE70098 != -1)
      swift_once();
    v5 = sub_1B0006D00();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EEE721A8);
    v6 = sub_1B0006CE8();
    v7 = sub_1B00089BC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1AFABF000, v6, v7, "expected a window, but don't have one. returning fallback", v8, 2u);
      MEMORY[0x1B5E03CC0](v8, -1, -1);
    }

    if (qword_1EEE704A8 != -1)
      swift_once();
    v17 = xmmword_1EEE78B88;
    v18 = xmmword_1EEE78B78;
    v9 = qword_1EEE78BA8;
    v10 = unk_1EEE78BB0;
    v13 = (void *)qword_1EEE78BB8;
    v15 = unk_1EEE78BC0;
    v16 = xmmword_1EEE78B98;
    v14 = *(__int128 *)((char *)&xmmword_1EEE78BC8 + 8);
    v11 = qword_1EEE78BE0;
    a1[3] = (uint64_t)&type metadata for Window;
    a1[4] = (uint64_t)&protocol witness table for Window;
    v12 = swift_allocObject();
    *a1 = v12;
    *(_OWORD *)(v12 + 16) = v18;
    *(_OWORD *)(v12 + 32) = v17;
    *(_OWORD *)(v12 + 48) = v16;
    *(_QWORD *)(v12 + 64) = v9;
    *(_QWORD *)(v12 + 72) = v10;
    *(_QWORD *)(v12 + 80) = v13;
    *(_OWORD *)(v12 + 88) = v15;
    *(_OWORD *)(v12 + 104) = v14;
    *(_QWORD *)(v12 + 120) = v11;
    return v13;
  }
  return result;
}

id sub_1AFB39CE4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_1B0008F98();
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_displayLinkWithTarget_selector_, v4, a2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EC5E8);
}

void sub_1AFB39D74(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t sub_1AFB39DB8()
{
  unint64_t result;

  result = qword_1ED1EC3D0;
  if (!qword_1ED1EC3D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1EC3D0);
  }
  return result;
}

void sub_1AFB39DF4()
{
  sub_1AFADA43C(&qword_1ED1EDB08, (void (*)(uint64_t))type metadata accessor for NSUnitLength.WeatherFormatComponent);
}

void sub_1AFB39E20()
{
  unint64_t v0;

  sub_1AFB4C2BC();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_1AFB39E74()
{
  sub_1AFADA43C(&qword_1ED1EDA58, (void (*)(uint64_t))type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
}

uint64_t sub_1AFB39EA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B0005A1C();
  if (v1 <= 0x3F)
  {
    result = sub_1B000565C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1AFB39F50(uint64_t a1)
{
  uint64_t v2;

  sub_1AFADA43C(&qword_1ED1EDA50, (void (*)(uint64_t))type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AFB39F8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_149();
  v1 = v0;
  swift_getObjectType();
  v2 = OUTLINED_FUNCTION_106();
  *v1 = sub_1AFAC2440(v2, v3, v4, v5, v6, v7);
  v1[1] = v8;
  OUTLINED_FUNCTION_28_5();
}

unint64_t sub_1AFB39FC4()
{
  unint64_t result;

  result = qword_1ED1F4698;
  if (!qword_1ED1F4698)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F4698);
  }
  return result;
}

void sub_1AFB3A000()
{
  sub_1AFADA43C(&qword_1ED1F4368, (void (*)(uint64_t))type metadata accessor for NSUnitSpeed.WeatherFormatComponent);
}

void sub_1AFB3A02C()
{
  unint64_t v0;

  sub_1AFB4C314();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_1AFB3A080()
{
  sub_1AFADA43C(&qword_1ED1F42C0, (void (*)(uint64_t))type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
}

uint64_t sub_1AFB3A0AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005A1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AFB3A130(uint64_t a1)
{
  uint64_t v2;

  sub_1AFADA43C(&qword_1ED1F42B8, (void (*)(uint64_t))type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AFB3A16C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_149();
  v1 = v0;
  swift_getObjectType();
  v2 = OUTLINED_FUNCTION_106();
  *v1 = sub_1AFAE12D4(v2, v3, v4, v5, v6, v7);
  v1[1] = v8;
  OUTLINED_FUNCTION_28_5();
}

void sub_1AFB3A1A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F3BC8)
  {
    sub_1B00058D8();
    sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v0 = sub_1B0008944();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F3BC8);
  }
}

void sub_1AFB3A21C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;

  if (a1 < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1AFB3B2CC(0, a1, v4);
  if ((v6 & 1) != 0)
    v7 = v4;
  else
    v7 = v5;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v4 >= v7)
  {
    a3(0);
    OUTLINED_FUNCTION_93_1();
    OUTLINED_FUNCTION_9_0();
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_1AFB3A290(uint64_t a1, uint64_t a2)
{
  sub_1AFB3A21C(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0CEE608]);
}

uint64_t sub_1AFB3A29C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  a2(0);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_34_7();
    v4(v3);
  }
  v5 = OUTLINED_FUNCTION_29_18();
  return OUTLINED_FUNCTION_5_4(v5, v6, v7, v8);
}

uint64_t sub_1AFB3A300(uint64_t a1)
{
  return sub_1AFB3A29C(a1, (void (*)(_QWORD))MEMORY[0x1E0CEE8B0]);
}

uint64_t static Int.interpolated(between:and:progress:)(uint64_t result, uint64_t a2, float a3)
{
  float v3;

  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v3 = (float)((float)(a2 - result) * a3) + (float)result;
  if ((~LODWORD(v3) & 0x7F800000) == 0)
    return 0;
  if (v3 <= -9.2234e18)
    goto LABEL_8;
  if (v3 < 9.2234e18)
    return (uint64_t)v3;
LABEL_9:
  __break(1u);
  return result;
}

void sub_1AFB3A36C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = type metadata accessor for NSUnitPressure.WeatherFormatComponent(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    sub_1AFB39910(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, (uint64_t)v9, type metadata accessor for NSUnitPressure.WeatherFormatComponent);
    sub_1AFFA149C((uint64_t)v9, (uint64_t)v6);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA80);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v21) != 1)
    {
      swift_release();
      sub_1AFB4C21C((uint64_t)v6, v24);
      return;
    }
    sub_1AFAE2D74((uint64_t)v6, type metadata accessor for NSUnitPressure.WeatherFormatComponent);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v14)
      goto LABEL_23;
    v19 = *(_QWORD *)(v10 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_23;
      v19 = *(_QWORD *)(v10 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v14)
          goto LABEL_23;
        v19 = *(_QWORD *)(v10 + 8 * v15);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v14)
  {
LABEL_23:
    swift_release();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC340);
    __swift_storeEnumTagSinglePayload(v24, 1, 1, v22);
    return;
  }
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v14)
      goto LABEL_23;
    v19 = *(_QWORD *)(v10 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_1AFB3A59C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v3 = type metadata accessor for NSUnitLength.WeatherFormatComponent(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    sub_1AFAF2DFC(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, (uint64_t)v9, type metadata accessor for NSUnitLength.WeatherFormatComponent);
    sub_1AFAF2984((uint64_t)v9, (uint64_t)v7, type metadata accessor for NSUnitLength.WeatherFormatComponent);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA60);
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v21) != 1)
    {
      swift_release();
      sub_1AFAE8274((uint64_t)v7, v24, &qword_1ED1ECA68);
      return;
    }
    sub_1AFAE2D74((uint64_t)v7, type metadata accessor for NSUnitLength.WeatherFormatComponent);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v14)
      goto LABEL_23;
    v19 = *(_QWORD *)(v10 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_23;
      v19 = *(_QWORD *)(v10 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v14)
          goto LABEL_23;
        v19 = *(_QWORD *)(v10 + 8 * v15);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v14)
  {
LABEL_23:
    swift_release();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA58);
    __swift_storeEnumTagSinglePayload(v24, 1, 1, v22);
    return;
  }
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v14)
      goto LABEL_23;
    v19 = *(_QWORD *)(v10 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

BOOL sub_1AFB3A7D8(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 0xC000000000000001) != 0)
    v1 = sub_1B0008C98();
  else
    v1 = *(_QWORD *)(a1 + 16);
  return v1 == 0;
}

uint64_t sub_1AFB3A810(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E03BF4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFB3A850(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AFB3A890(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    OUTLINED_FUNCTION_15_1(0, a2);
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFB3A8BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F3B88;
  if (!qword_1ED1F3B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F3B80);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F3B88);
  }
  return result;
}

void sub_1AFB3A900(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF38], v3), a1);
  }
  OUTLINED_FUNCTION_0();
}

BOOL sub_1AFB3A93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1AFB3A9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float64x2_t *v3;
  float64x2_t *v4;
  uint64_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  int32x2_t v9;
  char v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v10 = 1;
    }
    else
    {
      v3 = (float64x2_t *)(a1 + 32);
      v4 = (float64x2_t *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = *v3++;
        v7 = v6;
        v8 = *v4++;
        v9 = vmovn_s64(vceqq_f64(v7, v8));
        v10 = v9.i8[0] & v9.i8[4];
        v12 = v5-- != 0;
      }
      while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v12);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1AFB3AA14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a2;
  v3 = sub_1B0005B18();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x1E0C80A78](v3);
  v56 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v51 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  v16 = sub_1B00058D8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v53 = (char *)&v51 - v20;
  MEMORY[0x1E0C80A78](v21);
  v57 = (char *)&v51 - v22;
  MEMORY[0x1E0C80A78](v23);
  v54 = (char *)&v51 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v51 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v51 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v51 - v32;
  v34 = a1;
  sub_1AFAF8390(a1, (uint64_t)v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    v12 = v15;
    v35 = v60;
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36(v33, v15, v16);
    v35 = v60;
    sub_1AFAF8390(v60, (uint64_t)v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v16) != 1)
    {
      v36(v30, v12, v16);
      sub_1B0005884();
      sub_1B0005884();
      v41 = *(void (**)(char *, uint64_t))(v17 + 8);
      v41(v30, v16);
      v42 = v33;
      return ((uint64_t (*)(char *, uint64_t))v41)(v42, v16);
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v16);
  }
  sub_1AFB4BDAC((uint64_t)v12);
  sub_1AFAF8390(v34, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v27, v9, v16);
    v39 = v56;
    sub_1B0005ADC();
    v40 = v57;
    sub_1B0005A28();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
    sub_1B0005884();
    sub_1B0005884();
    v41 = *(void (**)(char *, uint64_t))(v17 + 8);
    v41(v40, v16);
    v42 = v27;
    return ((uint64_t (*)(char *, uint64_t))v41)(v42, v16);
  }
  sub_1AFB4BDAC((uint64_t)v9);
  v37 = v55;
  sub_1AFAF8390(v35, v55);
  if (__swift_getEnumTagSinglePayload(v37, 1, v16) == 1)
    return sub_1AFB4BDAC(v37);
  v43 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v54, v37, v16);
  v44 = v56;
  sub_1B0005ADC();
  v45 = v52;
  sub_1B0005A28();
  v46 = v59;
  v47 = *(void (**)(char *, uint64_t))(v58 + 8);
  v47(v44, v59);
  sub_1B0005ADC();
  v48 = v53;
  sub_1B00057B8();
  v47(v44, v46);
  v49 = *(void (**)(char *, uint64_t))(v17 + 8);
  v49(v45, v16);
  v50 = v57;
  sub_1B000583C();
  v49(v48, v16);
  sub_1B0005884();
  sub_1B0005884();
  v49(v50, v16);
  return ((uint64_t (*)(char *, uint64_t))v49)(v43, v16);
}

double sub_1AFB3AEAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B00058D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFAF8390(a1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1AFB4BDAC((uint64_t)v4);
    return 0.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v9 = Date.exactTimeOfDay(in:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t Array<A>.timeShifted(sunrise:sunset:timeZone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6;
  double v7;
  double v8;
  int64_t v9;
  uint64_t result;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  sub_1AFB3AA14(a2, a1);
  v7 = v6;
  v8 = sub_1AFB3AEAC(a1);
  v9 = *(_QWORD *)(a4 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v11 = v8 + -6.0;
    v32 = MEMORY[0x1E0DEE9D8];
    v12 = v7 / 12.0;
    sub_1AFB37320(0, v9, 0);
    v13 = -6.0;
    v14 = 0;
    result = v32;
    v15 = *(_QWORD *)(v32 + 16);
    v16 = 88 * v15;
    v17 = 6.0;
    do
    {
      v18 = *(double *)(a4 + v14 + 32);
      v19 = *(_QWORD *)(a4 + v14 + 40);
      v20 = *(_DWORD *)(a4 + v14 + 48);
      v21 = *(_OWORD *)(a4 + v14 + 56);
      v22 = *(_OWORD *)(a4 + v14 + 72);
      v23 = *(_DWORD *)(a4 + v14 + 88);
      v24 = *(_QWORD *)(a4 + v14 + 96);
      v25 = *(_QWORD *)(a4 + v14 + 104);
      v26 = *(_DWORD *)(a4 + v14 + 112);
      v27 = *(_QWORD *)(result + 24);
      v28 = v15 + 1;
      v33 = result;
      if (v15 >= v27 >> 1)
      {
        v30 = *(_OWORD *)(a4 + v14 + 72);
        v31 = *(_OWORD *)(a4 + v14 + 56);
        sub_1AFB37320((char *)(v27 > 1), v15 + 1, 1);
        v22 = v30;
        v21 = v31;
        v17 = 6.0;
        v13 = -6.0;
        result = v33;
      }
      *(_QWORD *)(result + 16) = v28;
      v29 = result + v16 + v14;
      *(double *)(v29 + 32) = v11 + v12 * (v18 + v13) + v17;
      *(_QWORD *)(v29 + 40) = v19;
      *(_DWORD *)(v29 + 48) = v20;
      *(_OWORD *)(v29 + 56) = v21;
      *(_OWORD *)(v29 + 72) = v22;
      *(_DWORD *)(v29 + 88) = v23;
      *(_QWORD *)(v29 + 96) = v24;
      *(_QWORD *)(v29 + 104) = v25;
      *(_DWORD *)(v29 + 112) = v26;
      v14 += 88;
      v15 = v28;
      --v9;
    }
    while (v9);
  }
  return result;
}

uint64_t Array<A>.withSunToggled(visible:)(unsigned int a1, uint64_t a2)
{
  int64_t v3;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  int32x2_t v8;
  uint64_t v9;
  int8x8_t v10;
  int64x2_t v11;
  int8x16_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x8_t v18;
  float v19;
  uint64_t v20;
  float v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = *(_QWORD *)(a2 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1AFB37320(0, v3, 0);
    v6 = 0;
    result = v28;
    v7 = *(_QWORD *)(v28 + 16);
    v8 = vdup_n_s32(a1);
    v9 = 88 * v7;
    v10 = (int8x8_t)vcltz_s32(vshl_n_s32(v8, 0x1FuLL));
    v11.i64[0] = v8.u32[0];
    v11.i64[1] = v8.u32[1];
    v12 = (int8x16_t)vcltzq_s64(vshlq_n_s64(v11, 0x3FuLL));
    do
    {
      v13 = *(_QWORD *)(a2 + v6 + 32);
      v14 = *(_QWORD *)(a2 + v6 + 40);
      v15 = *(_DWORD *)(a2 + v6 + 48);
      v16 = *(int8x16_t *)(a2 + v6 + 56);
      v17 = *(int8x16_t *)(a2 + v6 + 72);
      v18 = *(int8x8_t *)(a2 + v6 + 104);
      if ((a1 & 1) != 0)
        v19 = *(float *)(a2 + v6 + 112);
      else
        v19 = 0.0;
      if ((a1 & 1) != 0)
        v20 = *(_QWORD *)(a2 + v6 + 96);
      else
        v20 = 0;
      if ((a1 & 1) != 0)
        v21 = *(float *)(a2 + v6 + 88);
      else
        v21 = 0.0;
      v29 = result;
      v22 = *(_QWORD *)(result + 24);
      v23 = v7 + 1;
      if (v7 >= v22 >> 1)
      {
        v26 = *(int8x16_t *)(a2 + v6 + 56);
        v27 = v12;
        v25 = *(int8x16_t *)(a2 + v6 + 72);
        sub_1AFB37320((char *)(v22 > 1), v7 + 1, 1);
        v17 = v25;
        v16 = v26;
        v12 = v27;
        result = v29;
      }
      *(_QWORD *)(result + 16) = v23;
      v24 = result + v9 + v6;
      *(_QWORD *)(v24 + 32) = v13;
      *(_QWORD *)(v24 + 40) = v14;
      *(_DWORD *)(v24 + 48) = v15;
      *(int8x16_t *)(v24 + 56) = vandq_s8(v16, v12);
      *(int8x16_t *)(v24 + 72) = vandq_s8(v17, v12);
      *(float *)(v24 + 88) = v21;
      *(_QWORD *)(v24 + 96) = v20;
      *(int8x8_t *)(v24 + 104) = vand_s8(v18, v10);
      v6 += 88;
      v7 = v23;
      *(float *)(v24 + 112) = v19;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1AFB3B2CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

uint64_t sub_1AFB3B318(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1B00087AC();
  return result;
}

uint64_t sub_1AFB3B344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5 - v4, a1, v3);
  sub_1AFB4BA18();
  v9 = sub_1B0008710();
  sub_1AFB3B5F0(&v9);
  v7 = v9;
  if (v1)
    swift_release();
  return v7;
}

uint64_t sub_1AFB3B3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  v4 = MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v4);
  sub_1AFAD71A0((unint64_t *)&qword_1ED1F41C8, &qword_1ED1F41D8, MEMORY[0x1E0CEF530]);
  v10 = sub_1B0008710();
  sub_1AFB3B670(&v10);
  v7 = v10;
  if (v1)
    swift_release();
  return v7;
}

uint64_t sub_1AFB3B4D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t *);
  uint64_t (*v6)(uint64_t *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_16_2();
  v14 = v1;
  v15 = v3;
  v4 = v2;
  v6 = v5;
  if (v2 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_1B0008E0C())
  {
    v8 = 4;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1B5E02C64](v8 - 4, v4);
      }
      else
      {
        v9 = *(_QWORD *)(v4 + 8 * v8);
        swift_retain();
      }
      v10 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v13 = v9;
      v11 = v6(&v13);
      if (v0)
      {
        OUTLINED_FUNCTION_40();
        swift_release();
        return v9;
      }
      if ((v11 & 1) != 0)
      {
        OUTLINED_FUNCTION_40();
        return v9;
      }
      swift_release();
      ++v8;
      if (v10 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  OUTLINED_FUNCTION_40();
  return 0;
}

void sub_1AFB3B5F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_1B0005BFC() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC92F74();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1AFB3784C((int64_t)v6);
  *a1 = v3;
}

void sub_1AFB3B670(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_1B0005BFC() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC92F74();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1AFB382AC((int64_t)v6);
  *a1 = v3;
}

void sub_1AFB3B6F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3AD0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Request(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v12) == 1)
  {
    sub_1AFACE0DC(a1, &qword_1ED1F3AD0);
    sub_1AFE9E000((uint64_t)v8);
    sub_1AFAF1B24(a2, a3);
    sub_1AFACE0DC((uint64_t)v8, &qword_1ED1F3AD0);
  }
  else
  {
    sub_1AFAF2984(a1, (uint64_t)v11, type metadata accessor for Request);
    sub_1AFB3B81C((uint64_t)v11, a2, a3);
    sub_1AFAF1B24(a2, a3);
  }
}

uint64_t sub_1AFB3B81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFC43A04(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFB36D70);
}

unint64_t sub_1AFB3B828()
{
  unint64_t result;

  result = qword_1ED1F3B60;
  if (!qword_1ED1F3B60)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEA9B0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED1F3B60);
  }
  return result;
}

unint64_t sub_1AFB3B864()
{
  unint64_t result;

  result = qword_1ED1F3B58;
  if (!qword_1ED1F3B58)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED1F3B58);
  }
  return result;
}

uint64_t sub_1AFB3B8A0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = OUTLINED_FUNCTION_14_31();
  v1(v2);
  return swift_release();
}

uint64_t sub_1AFB3B8C8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

float sub_1AFB3B8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  float result;
  double v6;

  v3 = *(double *)a2;
  v4 = 180.0 - *(double *)a1;
  if (!*(_BYTE *)(a1 + 8))
    v4 = *(double *)a1;
  if (*(_BYTE *)(a2 + 8))
    v3 = 180.0 - v3;
  result = 0.0;
  if (v4 != v3)
  {
    v6 = *(double *)v2;
    if (*(_BYTE *)(v2 + 8))
      v6 = 180.0 - *(double *)v2;
    return (v6 - v4) / (v3 - v4);
  }
  return result;
}

uint64_t sub_1AFB3B95C()
{
  return sub_1B0007324();
}

uint64_t sub_1AFB3B974()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t Assembly.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EDD58);
  v1 = OUTLINED_FUNCTION_20();
  *(_OWORD *)(v1 + 16) = xmmword_1B00275A0;
  v2 = type metadata accessor for MoonAssembly();
  v3 = OUTLINED_FUNCTION_20();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = sub_1AFAF8704(&qword_1ED1ED108, (uint64_t (*)(uint64_t))type metadata accessor for MoonAssembly, (uint64_t)&unk_1B0049848);
  *(_QWORD *)(v1 + 32) = v3;
  v4 = type metadata accessor for ProviderAssembly();
  v5 = OUTLINED_FUNCTION_20();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = sub_1AFAF8704(&qword_1ED1ED1C0, (uint64_t (*)(uint64_t))type metadata accessor for ProviderAssembly, (uint64_t)&unk_1B003EA24);
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1AFB3BA80()
{
  return Assembly.assemblies.getter();
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AFB3BAA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VFXLoadRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1AFB3BB14()
{
  return swift_initClassMetadata2();
}

void sub_1AFB3BB60()
{
  int *v0;
  uint64_t v1;

  v0 = (int *)OUTLINED_FUNCTION_0_102();
  __swift_allocate_value_buffer((uint64_t)v0, qword_1ED1F1028);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1ED1F1028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_169(v1, 1);
  OUTLINED_FUNCTION_169(v1 + v0[5], 1);
  *(_QWORD *)(v1 + v0[6]) = 0;
  *(_QWORD *)(v1 + v0[7]) = 0;
  *(_QWORD *)(v1 + v0[8]) = 0;
  OUTLINED_FUNCTION_9_0();
}

unint64_t sub_1AFB3BBE4()
{
  unint64_t result;

  result = qword_1ED1ED9B0;
  if (!qword_1ED1ED9B0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047E1C, &type metadata for ForegroundEffectsHasContainerCoordinateSpaceKey);
    atomic_store(result, (unint64_t *)&qword_1ED1ED9B0);
  }
  return result;
}

void sub_1AFB3BC20(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t type metadata accessor for NextHourPrecipitationChartViewModelFactory()
{
  return objc_opt_self();
}

uint64_t NextHourPrecipitationChartViewModelFactory.init(leadingPrecipitationValueRule:)(__int128 *a1)
{
  uint64_t v1;

  sub_1AFAFB284(a1, v1 + 16);
  return v1;
}

unint64_t sub_1AFB3BC64()
{
  unint64_t result;

  result = qword_1ED1ED9A8;
  if (!qword_1ED1ED9A8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047C68, &type metadata for ForegroundEffectPlaybackControllerKey);
    atomic_store(result, (unint64_t *)&qword_1ED1ED9A8);
  }
  return result;
}

double sub_1AFB3BCA0()
{
  double result;

  result = 0.0;
  xmmword_1ED1ED990 = xmmword_1B002BDE0;
  return result;
}

__int128 *sub_1AFB3BCB8()
{
  if (qword_1ED1ED9A0 != -1)
    swift_once();
  return &xmmword_1ED1ED990;
}

void sub_1AFB3BCF8(uint64_t a1@<X8>)
{
  __int128 *v2;

  v2 = sub_1AFB3BCB8();
  sub_1AFAC4890((uint64_t)v2, a1, &qword_1ED1ECE08);
}

uint64_t sub_1AFB3BD28()
{
  sub_1AFB499C4(&qword_1ED1ECE10, &qword_1ED1ECE08);
  return sub_1B00073F0();
}

void sub_1AFB3BD90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  v2 = sub_1B000793C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC88);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECD88);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, a1, v10);
  v11 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v11 = KeyPath;
  v11[8] = 1;
  v12[0] = 0xD000000000000028;
  v12[1] = 0x80000001B00642F0;
  sub_1B0007984();
  sub_1AFB4A534();
  sub_1B0007E7C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1AFACB308((uint64_t)v8, &qword_1ED1ECC88);
}

uint64_t sub_1AFB3BF10()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFB3BF20()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(319);
  if (v0 <= 0x3F)
  {
    sub_1AFB41E0C(319, &qword_1ED1F3900, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationChartViewModel.Point);
    if (v1 <= 0x3F)
    {
      sub_1AFC9D388();
      if (v2 <= 0x3F)
      {
        sub_1AFB41E0C(319, (unint64_t *)&qword_1ED1F4158, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for NextHourPrecipitationChartViewModel(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F1C60);
}

uint64_t sub_1AFB3C038()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationChartViewModel.Point(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1ED1F38C8);
}

uint64_t sub_1AFB3C0C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F3848);
}

unint64_t sub_1AFB3C128()
{
  unint64_t result;

  result = qword_1ED1ED988;
  if (!qword_1ED1ED988)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047C30, &type metadata for ForegroundEffectsAreAbleToRenderKey);
    atomic_store(result, (unint64_t *)&qword_1ED1ED988);
  }
  return result;
}

uint64_t sub_1AFB3C164()
{
  return sub_1B00073F0();
}

uint64_t type metadata accessor for NextHourPrecipitationStringBuilder()
{
  return objc_opt_self();
}

uint64_t NextHourPrecipitationStringBuilder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t dispatch thunk of SunriseSunsetViewModelFactoryType.makeViewModel(for:component:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t destroy for ForegroundEffectPlaybackModifier(uint64_t a1)
{
  return sub_1AFB4A844(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void initializeBufferWithCopyOfBuffer for ForegroundEffectPlaybackModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AFACCF70(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AFACCFB0);
}

unint64_t sub_1AFB3C1BC()
{
  unint64_t result;

  result = qword_1ED1ED980;
  if (!qword_1ED1ED980)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047D94, &type metadata for ForegroundEffectPlaybackModifier);
    atomic_store(result, (unint64_t *)&qword_1ED1ED980);
  }
  return result;
}

uint64_t sub_1AFB3C1F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFB3C204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1AFB3C204(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t ObjectType;

  v6 = a4 & 1;
  sub_1AFACCFB0(a2, a3, a4 & 1);
  sub_1AFB4A954();
  v8 = v7;
  v10 = v9;
  result = sub_1AFB4A844(a2, a3, v6);
  if (v8)
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(1, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1AFB3C2A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFAC8E5C(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_1AFB3C2B4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFB3C2C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1AFB4BDEC();
  if (v0 <= 0x3F)
  {
    sub_1B0005B84();
    if (v1 <= 0x3F)
    {
      sub_1B0005D1C();
      if (v2 <= 0x3F)
      {
        sub_1AFB4B964();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for ConstantConditionsStringBuilder()
{
  return objc_opt_self();
}

void sub_1AFB3C3AC()
{
  unint64_t v0;

  sub_1AFB4A784();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void *sub_1AFB3C448()
{
  return &unk_1EEE782E0;
}

uint64_t sub_1AFB3C454@<X0>(_QWORD *a1@<X8>)
{
  *a1 = *(_QWORD *)sub_1AFB3C448();
  return swift_retain();
}

uint64_t destroy for EnableForegroundEffectModifier()
{
  return sub_1AFB4A7E8();
}

void initializeBufferWithCopyOfBuffer for EnableForegroundEffectModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AFACCF70(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AFB4A7E0);
}

uint64_t *sub_1AFB3C49C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithCopy for EnableForegroundEffectModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1AFB3C49C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AFB4A7E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AFB4A7E8);
}

unint64_t sub_1AFB3C510()
{
  unint64_t result;

  result = qword_1ED1ED970;
  if (!qword_1ED1ED970)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047BE0, &type metadata for EnableForegroundEffectModifier);
    atomic_store(result, (unint64_t *)&qword_1ED1ED970);
  }
  return result;
}

uint64_t sub_1AFB3C54C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  type metadata accessor for ForegroundEffectCoordinator();
  sub_1AFADA43C(qword_1ED1ED778, (void (*)(uint64_t))type metadata accessor for ForegroundEffectCoordinator);
  sub_1B00072A0();
  a4();
  return swift_release();
}

uint64_t sub_1AFB3C5D0()
{
  uint64_t v0;

  return sub_1AFB3C54C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), sub_1AFB3D2A0);
}

uint64_t sub_1AFB3C5F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFB3C600(a1);
}

uint64_t sub_1AFB3C600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ForegroundEffectCoordinator();
  sub_1AFADA43C(qword_1ED1ED778, (void (*)(uint64_t))type metadata accessor for ForegroundEffectCoordinator);
  result = sub_1B00072A0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFB3C67C()
{
  type metadata accessor for ForegroundEffectCoordinator();
  swift_allocObject();
  return sub_1AFAD4818();
}

void sub_1AFB3C6B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFAD20E4(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_1AFB3C6BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SunriseSunsetViewModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1AFB3C6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SunriseSunsetViewModelFactory.makeViewModel(for:component:)(a1, a2, a3);
}

uint64_t SunriseSunsetViewModelFactory.init(stringBuilder:sunriseSunsetEventCalculator:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1AFB3C718(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFAC569C(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F80]) & 1;
}

uint64_t sub_1AFB3C73C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFAC569C(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1000]) & 1;
}

uint64_t sub_1AFB3C760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v12;

  v6 = sub_1B00058D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v10 = v9 - v8;
  sub_1B0005CEC();
  static GeoHandler.getElevation(for:on:)(a1, v10, (unint64_t *)&v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  if (v12 >= 0.0)
    return sub_1AFAE24F4(a1, a2, a3);
  else
    return sub_1AFD7EC18(a1, a2, a3);
}

uint64_t type metadata accessor for ChangingForecastStringBuilder()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SunriseSunsetEventCalculator()
{
  return &type metadata for SunriseSunsetEventCalculator;
}

uint64_t sub_1AFB3C85C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StatusBarPreservingModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFB3C898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatusBarPreservingModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFB3C8DC()
{
  unint64_t v0;

  sub_1AFB4ABA0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for StatusBarPreservingModifier()
{
  uint64_t result;

  result = qword_1ED1ED8E0;
  if (!qword_1ED1ED8E0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1AFB3C988()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1ED8D8;
  if (!qword_1ED1ED8D8)
  {
    v1 = type metadata accessor for StatusBarPreservingModifier();
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StatusBarPreservingModifier, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1ED8D8);
  }
  return result;
}

void StatusBarPreservingModifier.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  sub_1AFB3CA5C(v2);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC68);
  sub_1AFB4AB10(v2, a2 + *(int *)(v6 + 36));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  sub_1AFB4AAD0(v2);
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFB3CA5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_BYTE *)(v1 + 8);
  sub_1AFACF5C4(*(_QWORD *)v1, v7);
  sub_1AFB4A850();
  v9 = v8;
  sub_1AFACCD50(v6, v7);
  v10 = v1 + *(int *)(type metadata accessor for StatusBarPreservingModifier() + 20);
  if ((v9 & 1) == 0)
    return sub_1AFB4AB10(v10, a1);
  sub_1AFB4AB10(v10, (uint64_t)v5);
  v11 = sub_1B0007288();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v11) == 1)
  {
    sub_1AFB4AAD0((uint64_t)v5);
    v12 = a1;
    v13 = 1;
  }
  else
  {
    sub_1AFC446AC(a1);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
    v12 = a1;
    v13 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
}

uint64_t sub_1AFB3CBA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SetForegroundEffectModifier(uint64_t a1)
{
  return j__swift_release(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

ValueMetadata *type metadata accessor for SetForegroundEffectModifier()
{
  return &type metadata for SetForegroundEffectModifier;
}

unint64_t sub_1AFB3CBD0()
{
  unint64_t result;

  result = qword_1ED1ED8D0;
  if (!qword_1ED1ED8D0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047B90, &type metadata for SetForegroundEffectModifier);
    atomic_store(result, (unint64_t *)&qword_1ED1ED8D0);
  }
  return result;
}

uint64_t sub_1AFB3CC0C()
{
  uint64_t v0;

  return sub_1AFB3CC28(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24) | (unsigned __int16)(*(unsigned __int8 *)(v0 + 25) << 8));
}

uint64_t sub_1AFB3CC28(uint64_t a1, __int16 a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v2 = HIBYTE(a2);
  v4 = a2 & 1;
  j__swift_retain(a1, v4);
  sub_1AFACD4BC();
  v6 = v5;
  result = j__swift_release(a1, v4);
  if (v6)
  {
    v8 = v2;
    sub_1AFAD1DB0(&v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFB3CC9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 8);
  v5 = *((_BYTE *)v0 + 9);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 25) = v5;
  j__swift_retain(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECD50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ED1B0);
  sub_1AFB3A890(&qword_1ED1ECD48, &qword_1ED1ECD50);
  sub_1AFB499C4(&qword_1ED1ED1B8, &qword_1ED1ED1B0);
  sub_1B0007F6C();
  return swift_release();
}

uint64_t sub_1AFB3CDB4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFB3CDC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1AFB4AFB0();
  if (v0 <= 0x3F)
  {
    sub_1AFB4AF38();
    if (v1 <= 0x3F)
    {
      sub_1AFB4ABF4();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

float sub_1AFB3CEEC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 24);
}

uint64_t sub_1AFB3CF20()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_2();
  return *(unsigned __int8 *)(v0 + 28);
}

void sub_1AFB3CF4C()
{
  uint64_t v0;
  void *v1;
  id v2;
  BOOL v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink);
  if (v1)
  {
    swift_beginAccess();
    if (*(_BYTE *)(v0 + 28) == 1)
    {
      v2 = v1;
      v3 = 1;
    }
    else
    {
      swift_beginAccess();
      v4 = v1;
      v5 = swift_bridgeObjectRetain();
      v3 = sub_1AFB3A7D8(v5);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v1, sel_setPaused_, v3);

  }
}

uint64_t sub_1AFB3CFFC()
{
  uint64_t v0;

  swift_weakInit();
  swift_weakAssign();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for ForegroundEffectCoordinator.WeakBox()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ForegroundEffectCoordinator.Context()
{
  return &type metadata for ForegroundEffectCoordinator.Context;
}

uint64_t sub_1AFB3D068()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1AFB3D074()
{
  return sub_1AFB3D07C();
}

uint64_t sub_1AFB3D07C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_beginAccess();
    if (*(_BYTE *)(v1 + 28) == 1)
    {
      if (qword_1ED1EC4C8 != -1)
        swift_once();
      v2 = sub_1B0006D00();
      __swift_project_value_buffer(v2, (uint64_t)qword_1ED1EC4A8);
      v3 = sub_1B0006CE8();
      v4 = sub_1B00089D4();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_1AFABF000, v3, v4, "The effect was updated while frozen - disabling FGFX rendering until the next VFX render.", v5, 2u);
        MEMORY[0x1B5E03CC0](v5, -1, -1);
      }

      sub_1AFBC4C94();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFB3D1AC()
{
  char v0;
  uint64_t result;

  sub_1B00065BC();
  sub_1B00065A4();
  if (qword_1ED1ECB28 != -1)
    swift_once();
  DeviceSupportsForegroundEffects();
  v0 = sub_1B00065B0();
  result = swift_release();
  byte_1ED1ED730 = v0 & 1;
  return result;
}

uint64_t sub_1AFB3D230()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B0007228();
  swift_release();
  swift_release();
  return v1;
}

void sub_1AFB3D2A0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 29);
  if (v1 == 2 || (v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_2();
    *(_BYTE *)(v0 + 28) = 0;
    sub_1AFB3CF4C();
  }
}

uint64_t sub_1AFB3D2E4()
{
  uint64_t v0;

  return sub_1AFB3D2F0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1AFB3D2F0(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    *(_BYTE *)(result + 16) = a2;
    sub_1AFACE740();
    *(_DWORD *)(v4 + 20) = 0;
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMorningRule()
{
  return &type metadata for SunriseSunsetMorningRule;
}

ValueMetadata *type metadata accessor for SkyElevationGradientStop()
{
  return &type metadata for SkyElevationGradientStop;
}

uint64_t type metadata accessor for SevereStormStringBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1AFB3D394()
{
  return sub_1AFAF8704(&qword_1ED1ED5C0, (uint64_t (*)(uint64_t))type metadata accessor for ForegroundEffectRenderer, (uint64_t)&unk_1B0048370);
}

void sub_1AFB3D3C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1AFB4ABF4();
  if (v0 <= 0x3F)
  {
    sub_1AFB4B01C(319, &qword_1ED1ECBD0, &qword_1ED1EDA48, (uint64_t *)&unk_1ED1EDD20);
    if (v1 <= 0x3F)
    {
      sub_1AFB4B01C(319, &qword_1ED1ECBE8, (uint64_t *)&unk_1ED1EDCF0, &qword_1ED1EDD38);
      if (v2 <= 0x3F)
      {
        sub_1AFB4B01C(319, &qword_1ED1ECBF0, &qword_1ED1EDD18, (uint64_t *)&unk_1ED1EDD20);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for ForegroundEffectRenderer()
{
  uint64_t result;

  result = qword_1ED1ED5C8;
  if (!qword_1ED1ED5C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for VFXSceneTemplateManager()
{
  return objc_opt_self();
}

int64x2_t VFXSceneTemplateManager.init()()
{
  int64x2_t *v0;
  int64x2_t result;

  result = vdupq_n_s64(1uLL);
  v0[1] = result;
  return result;
}

void sub_1AFB3D58C()
{
  VFXSceneTemplateManager.templateBackgroundScene.getter();
}

void VFXSceneTemplateManager.templateBackgroundScene.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  char v5;

  v1 = *(void **)(v0 + 16);
  if (v1 == (void *)1)
  {
    v5 = 0;
    v2 = (void *)sub_1AFAC8960(&v5);
    v3 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    v4 = v2;
    sub_1AFB497E8(v3);
  }
  sub_1AFB497D8(v1);
  OUTLINED_FUNCTION_10_1();
}

void type metadata accessor for StyledVariableAttribute()
{
  OUTLINED_FUNCTION_27_0();
}

unint64_t sub_1AFB3D614()
{
  unint64_t result;

  result = qword_1ED1F3798;
  if (!qword_1ED1F3798)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute, &type metadata for StyledVariableAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED1F3798);
  }
  return result;
}

void type metadata accessor for StyledVariableAttribute.Style()
{
  OUTLINED_FUNCTION_27_0();
}

unint64_t sub_1AFB3D660()
{
  unint64_t result;

  result = qword_1ED1F3790;
  if (!qword_1ED1F3790)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute.Style, &type metadata for StyledVariableAttribute.Style);
    atomic_store(result, (unint64_t *)&qword_1ED1F3790);
  }
  return result;
}

uint64_t static StyledVariableAttribute.name.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_2();
  v0 = *(_QWORD *)aStyles_0;
  OUTLINED_FUNCTION_19_0();
  return v0;
}

char *MicaBackgroundAnimation.__allocating_init(windowBounds:)()
{
  objc_class *v0;
  id v1;
  double v2;
  char *v3;
  double v4;
  double v5;
  double v6;

  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_5_124();
  return MicaBackgroundAnimation.init(windowBounds:mode:)(v3, v2, v4, v5, v6);
}

void sub_1AFB3D74C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v8;
  double v9;
  double v10;
  CGRect v11;

  v8 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v8, sel_scale);
  v10 = v9;

  if (v10 != 4.0 && v10 == 3.0)
  {
    v11.origin.x = a1;
    v11.origin.y = a2;
    v11.size.width = a3;
    v11.size.height = a4;
    CGRectGetHeight(v11);
  }
}

_BYTE *sub_1AFB3D810(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for BackgroundAnimationKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AFB3D87C + 4 * byte_1B0040FC4[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AFB3D8B0 + 4 * byte_1B0040FBF[v5]))();
}

uint64_t sub_1AFB3D8B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB3D8B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFB3D8C0);
  return result;
}

uint64_t sub_1AFB3D8CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFB3D8D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AFB3D8D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB3D8E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t static BackgroundAnimationKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_1AFB3D92C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BackgroundAnimationData.Model(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BackgroundAnimationData.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for BackgroundAnimationData.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B00068E0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B00058D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
    v22 = a3[10];
    v23 = a3[11];
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    v28 = (int *)type metadata accessor for BackgroundMoonData();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, (uint64_t)v28))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v12(v26, v27, v11);
      v31 = v28[5];
      v32 = &v26[v31];
      v33 = &v27[v31];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v27[v31], 1, v11))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v12(v32, v33, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v11);
      }
      v35 = v28[6];
      v36 = &v26[v35];
      v37 = &v27[v35];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v27[v35], 1, v11))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v12(v36, v37, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v11);
      }
      *(_QWORD *)&v26[v28[7]] = *(_QWORD *)&v27[v28[7]];
      *(_QWORD *)&v26[v28[8]] = *(_QWORD *)&v27[v28[8]];
      *(_QWORD *)&v26[v28[9]] = *(_QWORD *)&v27[v28[9]];
      v39 = v28[10];
      v40 = &v26[v39];
      v41 = &v27[v39];
      v42 = *((_QWORD *)v41 + 1);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, (uint64_t)v28);
    }
    v43 = a3[12];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    *(_QWORD *)v44 = *(_QWORD *)((char *)a2 + v43);
    *((_WORD *)v44 + 4) = *(_WORD *)((char *)a2 + v43 + 8);
    v46 = (_QWORD *)((char *)a2 + v43 + 16);
    v47 = *(_QWORD *)((char *)a2 + v43 + 24);
    swift_bridgeObjectRetain();
    if (v47 >= 5)
    {
      *((_QWORD *)v44 + 2) = *v46;
      *((_QWORD *)v44 + 3) = v47;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v44 + 1) = *(_OWORD *)v46;
    }
    v44[32] = v45[32];
    v44[33] = v45[33];
    v44[34] = v45[34];
    *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    v48 = *((_QWORD *)v45 + 10);
    *((_QWORD *)v44 + 9) = *((_QWORD *)v45 + 9);
    *((_QWORD *)v44 + 10) = v48;
    v44[88] = v45[88];
    v49 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v49, 1, v11))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v12(v50, v51, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v11);
    }
    v53 = a3[15];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v53, 1, v11))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v12(v54, v55, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v11);
    }
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  }
  return a1;
}

void sub_1AFB3DDE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F3730)
  {
    type metadata accessor for BackgroundAnimationData.Model(255);
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F3730);
  }
}

void sub_1AFB3DE38()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1B00068E0();
  if (v0 <= 0x3F)
  {
    sub_1B00058D8();
    if (v1 <= 0x3F)
    {
      sub_1B0005FB0();
      if (v2 <= 0x3F)
      {
        sub_1AFB4C15C(319, &qword_1ED1F4218, (uint64_t (*)(uint64_t))sub_1AFB39FC4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
        if (v3 <= 0x3F)
        {
          sub_1AFB4C15C(319, &qword_1ED1F3458, (uint64_t (*)(uint64_t))type metadata accessor for BackgroundMoonData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          if (v4 <= 0x3F)
          {
            sub_1AFB4C15C(319, (unint64_t *)&qword_1ED1F4158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t BackgroundAnimationData.Model.location.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6_98();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t BackgroundAnimationData.Model.options.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_1_142() + 48);
  v3 = *(_BYTE *)(v2 + 8);
  v4 = *(_BYTE *)(v2 + 9);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_BYTE *)(v2 + 32);
  v8 = *(_BYTE *)(v2 + 33);
  v9 = *(_BYTE *)(v2 + 34);
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(_QWORD *)(v2 + 80);
  v12 = *(_BYTE *)(v2 + 88);
  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_BYTE *)(v0 + 8) = v3;
  *(_BYTE *)(v0 + 9) = v4;
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v6;
  *(_BYTE *)(v0 + 32) = v7;
  *(_BYTE *)(v0 + 33) = v8;
  *(_BYTE *)(v0 + 34) = v9;
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v2 + 56);
  *(_QWORD *)(v0 + 72) = v10;
  *(_QWORD *)(v0 + 80) = v11;
  *(_BYTE *)(v0 + 88) = v12;
  swift_bridgeObjectRetain();
  return sub_1AFAF1B38(v5, v6);
}

uint64_t BackgroundAnimationData.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = v1;
  type metadata accessor for BackgroundAnimationData.Model(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_29();
  type metadata accessor for BackgroundAnimationData(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v7 = v6 - v5;
  sub_1AFAEE710(v2, v6 - v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AFACBF6C(v7, v0, type metadata accessor for BackgroundAnimationData.Model);
    BackgroundAnimationData.Model.description.getter();
    sub_1B0008644();
    swift_bridgeObjectRelease();
    v8 = 0x646564616F4CLL;
    OUTLINED_FUNCTION_137(v0);
  }
  else
  {
    v9 = *(_QWORD *)(v7 + 24);
    strcpy((char *)v11, "None(viewID=");
    BYTE5(v11[1]) = 0;
    HIWORD(v11[1]) = -5120;
    OUTLINED_FUNCTION_45_15();
    switch(v9)
    {
      case 0:
      case 1:
      case 2:
      case 4:
        break;
      case 3:
        OUTLINED_FUNCTION_37_1();
        break;
      default:
        OUTLINED_FUNCTION_39_25();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_40_25();
        break;
    }
    sub_1B0008644();
    OUTLINED_FUNCTION_40();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_68();
    OUTLINED_FUNCTION_26_68();
    OUTLINED_FUNCTION_56_9();
    return v11[0];
  }
  return v8;
}

uint64_t sub_1AFB3E254()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SunriseSunsetViewModel.PolarNightModel(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SunriseSunsetViewModel.PolarDayModel(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void type metadata accessor for SunriseSunsetViewModel.Point()
{
  OUTLINED_FUNCTION_27_0();
}

uint64_t static SunriseSunsetViewModel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  char v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_22_0();
  v42 = v2;
  v43 = v3;
  v41 = v4;
  v6 = v5;
  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v40 = v8;
  type metadata accessor for SunriseSunsetViewModel.PolarNightModel(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_70_6();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  v13 = OUTLINED_FUNCTION_0_15();
  type metadata accessor for SunriseSunsetViewModel(v13);
  v14 = type metadata accessor for SunriseSunsetViewModel;
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_28_0();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_55();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C08);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (uint64_t)&v25[*(int *)(v26 + 48)];
  sub_1AFADA740(v6, (uint64_t)v25, type metadata accessor for SunriseSunsetViewModel);
  sub_1AFADA740(v41, v27, type metadata accessor for SunriseSunsetViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1AFADA740((uint64_t)v25, v1, type metadata accessor for SunriseSunsetViewModel);
      if (OUTLINED_FUNCTION_1_138() == 1)
      {
        v29 = type metadata accessor for SunriseSunsetViewModel.PolarNightModel;
        OUTLINED_FUNCTION_73_7(v27, (uint64_t)v11);
        static SunriseSunsetViewModel.PolarNightModel.== infix(_:_:)(v1, (uint64_t)v11);
        OUTLINED_FUNCTION_136_1();
        v30 = v1;
LABEL_9:
        v37 = v29;
LABEL_14:
        sub_1AFAE2D74(v30, v37);
        sub_1AFAE2D74((uint64_t)v25, type metadata accessor for SunriseSunsetViewModel);
        return v14 & 1;
      }
      v34 = type metadata accessor for SunriseSunsetViewModel.PolarNightModel;
      v35 = v1;
    }
    else
    {
      sub_1AFADA740((uint64_t)v25, v18, type metadata accessor for SunriseSunsetViewModel);
      if (OUTLINED_FUNCTION_1_138() == 2)
      {
        v29 = type metadata accessor for SunriseSunsetViewModel.PolarDayModel;
        v36 = v40;
        OUTLINED_FUNCTION_73_7(v27, v40);
        static SunriseSunsetViewModel.PolarDayModel.== infix(_:_:)(v18, v36);
        OUTLINED_FUNCTION_136_1();
        v30 = v18;
        goto LABEL_9;
      }
      v34 = type metadata accessor for SunriseSunsetViewModel.PolarDayModel;
      v35 = v18;
    }
  }
  else
  {
    v31 = OUTLINED_FUNCTION_118();
    sub_1AFADA740(v31, v32, v33);
    if (!OUTLINED_FUNCTION_1_138())
    {
      sub_1AFB3E84C(v27, v0, type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel);
      static SunriseSunsetViewModel.NormalSunriseSunsetModel.== infix(_:_:)();
      LOBYTE(v14) = v38;
      sub_1AFAE2D74(v0, type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel);
      v30 = (uint64_t)v22;
      v37 = type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel;
      goto LABEL_14;
    }
    v34 = type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel;
    v35 = (uint64_t)v22;
  }
  sub_1AFAE2D74(v35, v34);
  sub_1AFACE0DC((uint64_t)v25, &qword_1ED1F1C08);
  LOBYTE(v14) = 0;
  return v14 & 1;
}

#error "1AFB3E670: call analysis failed (funcsize=78)"

#error "1AFB3E7B8: call analysis failed (funcsize=81)"

void sub_1AFB3E84C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v3)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_12_3(a1, a2, a3);
  OUTLINED_FUNCTION_2_65();
  OUTLINED_FUNCTION_5_2(v3);
  OUTLINED_FUNCTION_0();
}

void static SunriseSunsetViewModel.PolarDayModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1AFB40388(a1, a2, (void (*)(_QWORD))type metadata accessor for SunriseSunsetViewModel.PolarDayModel);
}

void sub_1AFB3E880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  uint64_t v33[18];

  OUTLINED_FUNCTION_62();
  v33[10] = v0;
  v33[11] = v1;
  v33[5] = v2;
  v33[3] = v3;
  v33[1] = v4;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_12();
  v8 = OUTLINED_FUNCTION_159_0(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_26_15(v9, v33[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_83_6(v11, v33[0]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v33 - v13;
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_65();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_8_142();
  v16 = OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_42_26(v16);
  OUTLINED_FUNCTION_5_152();
  v17 = OUTLINED_FUNCTION_24_83();
  OUTLINED_FUNCTION_66_7(v17, v18, v19, MEMORY[0x1E0DEE9D8], v20, v21);
  OUTLINED_FUNCTION_142_0();
  do
  {
    OUTLINED_FUNCTION_71_10();
    OUTLINED_FUNCTION_139_1();
    if (v25)
      OUTLINED_FUNCTION_95_5(v22, v23, v24);
    OUTLINED_FUNCTION_55_8();
  }
  while (!v26);
  v27 = OUTLINED_FUNCTION_91_6();
  sub_1AFB3F238(v27, v28, v29, v30, 1, v31);
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_65_8();
  OUTLINED_FUNCTION_85_0(v6);
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_85_0((uint64_t)v14);
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_169_0();
  OUTLINED_FUNCTION_50_12();
  OUTLINED_FUNCTION_54_10(v32);
  OUTLINED_FUNCTION_49_0();
}

uint64_t sub_1AFB3E9DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    result = sub_1B0005B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetViewModel.NormalSunriseSunsetModel(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F2590);
}

uint64_t static SunriseSunsetViewModel.ChartViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  char v6;
  int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  int v12;
  int v13;
  uint64_t result;
  char v15;
  BOOL v16;
  char v18;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(unsigned __int8 *)(a1 + 41);
  v8 = *(double *)(a2 + 8);
  v9 = *(double *)(a2 + 16);
  v11 = *(double *)(a2 + 24);
  v10 = *(double *)(a2 + 32);
  v12 = *(unsigned __int8 *)(a2 + 40);
  v13 = *(unsigned __int8 *)(a2 + 41);
  sub_1AFB3A9A8(*(_QWORD *)a1, *(_QWORD *)a2);
  result = OUTLINED_FUNCTION_1_8();
  if ((v15 & 1) != 0)
  {
    v16 = v2 == v8 && v3 == v9;
    if (v16 && v5 == v11)
    {
      if ((v6 & 1) != 0)
      {
        if (!v12)
          return 0;
      }
      else
      {
        if (v4 == v10)
          v18 = v12;
        else
          v18 = 1;
        if ((v18 & 1) != 0)
          return 0;
      }
      return v7 ^ v13 ^ 1u;
    }
  }
  return result;
}

void sub_1AFB3EB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  double v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v71 = a4;
  v68 = a3;
  v6 = sub_1B0005B18();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v63 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v63 - v14;
  v16 = sub_1B00058D8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v66 = (char *)&v63 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v63 - v25;
  MEMORY[0x1E0C80A78](v27);
  v74 = (char *)&v63 - v28;
  MEMORY[0x1E0C80A78](v29);
  v73 = (char *)&v63 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v63 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v63 - v35;
  sub_1AFAF8390(a1, (uint64_t)v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    v37 = (uint64_t)v15;
LABEL_5:
    sub_1AFACE0DC(v37, &qword_1ED1F4BA0);
    return;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v38(v36, v15, v16);
  sub_1AFAF8390(a2, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v16);
    v37 = (uint64_t)v12;
    goto LABEL_5;
  }
  v64 = v36;
  v39 = v33;
  v38(v33, v12, v16);
  v40 = v72;
  sub_1B0005A34();
  v41 = v73;
  sub_1B0005A28();
  sub_1B00057B8();
  sub_1B0005A28();
  v42 = *(void (**)(char *, uint64_t))(v17 + 8);
  v42(v26, v16);
  sub_1B0005830();
  if (v43 <= 0.0)
  {
    if (qword_1ED1F1A10 != -1)
      swift_once();
    v47 = sub_1B0006D00();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED1F2368);
    v48 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v49 = v66;
    v48(v66, v41, v16);
    v50 = v67;
    v51 = v74;
    v48(v67, v74, v16);
    v52 = sub_1B0006CE8();
    v53 = sub_1B00089D4();
    v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      v55 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v76 = v71;
      *(_DWORD *)v55 = 136446466;
      v65 = (char *)(v55 + 4);
      sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      LODWORD(v68) = v54;
      v56 = sub_1B0008F80();
      v75 = sub_1AFB4AD14(v56, v57, &v76);
      sub_1B0008BB4();
      swift_bridgeObjectRelease();
      v42(v49, v16);
      *(_WORD *)(v55 + 12) = 2082;
      v58 = sub_1B0008F80();
      v75 = sub_1AFB4AD14(v58, v59, &v76);
      sub_1B0008BB4();
      swift_bridgeObjectRelease();
      v42(v50, v16);
      _os_log_impl(&dword_1AFABF000, v52, (os_log_type_t)v68, "Sunrise/sunset day length is incorrectly zero when calculating horizon position. currentDayStart=%{public}s nextDayStart=%{public}s", (uint8_t *)v55, 0x16u);
      v60 = v71;
      swift_arrayDestroy();
      MEMORY[0x1B5E03CC0](v60, -1, -1);
      MEMORY[0x1B5E03CC0](v55, -1, -1);

      v42(v74, v16);
      v42(v73, v16);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v70);
    }
    else
    {

      v42(v50, v16);
      v42(v49, v16);
      v42(v51, v16);
      v42(v41, v16);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v70);
    }
    v42(v39, v16);
    v42(v64, v16);
  }
  else
  {
    v44 = v64;
    if ((sub_1B0005854() & 1) != 0)
    {
      sub_1B0005830();
      v46 = v69;
      v45 = v70;
    }
    else
    {
      sub_1B00057F4();
      v61 = v65;
      sub_1B0005ADC();
      sub_1B00057B8();
      v46 = v69;
      v62 = v61;
      v45 = v70;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v70);
      sub_1B0005830();
      sub_1B0005830();
      v42(v23, v16);
      v42(v26, v16);
    }
    v42(v74, v16);
    v42(v73, v16);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v40, v45);
    v42(v39, v16);
    v42(v44, v16);
  }
}

uint64_t sub_1AFB3F238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, double *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t result;
  char *v58;
  char *v59;
  double v60;
  double v61;
  void (*v62)(char *, uint64_t);
  double v63;
  double v64;
  char *v65;
  double v66;
  double v67;
  double v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  NSObject *v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  NSObject *v107;
  os_log_type_t v108;
  _BOOL4 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char *v121;
  char *v122;
  char v123;
  uint64_t (*v124)(char *, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  double v134;
  char *v135;
  double v136;
  double v137;
  double v138;
  double v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  double *v142;
  char *v143;
  char *v144;
  double *v145;
  uint64_t v146;
  char *v147;
  char v148;
  char *v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double *v154;
  double v155;
  void (*v156)(char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  double v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  double *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184[2];

  LODWORD(v179) = a5;
  v181 = a4;
  v182 = a3;
  v177 = (char *)a2;
  v180 = a6;
  v162 = sub_1B0005B00();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x1E0C80A78](v162);
  v160 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B0005B18();
  v172 = *(_QWORD *)(v8 - 8);
  v173 = v8;
  MEMORY[0x1E0C80A78](v8);
  v163 = (char *)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v158 - v11;
  MEMORY[0x1E0C80A78](v13);
  v176 = (char *)&v158 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v15);
  v167 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v158 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v158 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v158 - v24;
  v26 = sub_1B00058D8();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v171 = (void (*)(char *, uint64_t))((char *)&v158 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v158 - v30;
  MEMORY[0x1E0C80A78](v32);
  v166 = (char *)&v158 - v33;
  MEMORY[0x1E0C80A78](v34);
  v168 = (char *)&v158 - v35;
  MEMORY[0x1E0C80A78](v36);
  v164 = (char *)&v158 - v37;
  MEMORY[0x1E0C80A78](v38);
  v165 = (char *)&v158 - v39;
  MEMORY[0x1E0C80A78](v40);
  v169 = (char *)&v158 - v41;
  MEMORY[0x1E0C80A78](v42);
  v170 = (char *)&v158 - v43;
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v158 - v45;
  MEMORY[0x1E0C80A78](v47);
  v178 = (char *)&v158 - v48;
  MEMORY[0x1E0C80A78](v49);
  v174 = (char *)&v158 - v50;
  MEMORY[0x1E0C80A78](v51);
  v175 = (char *)&v158 - v52;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v158 - v54;
  sub_1AFAF8390(a1, (uint64_t)v25);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26) == 1)
  {
    v22 = v25;
LABEL_5:
    sub_1AFACE0DC((uint64_t)v22, &qword_1ED1F4BA0);
    return sub_1AFACD6B8(v179 & 1, v180);
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v56(v55, v25, v26);
  sub_1AFAF8390((uint64_t)v177, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v55, v26);
    goto LABEL_5;
  }
  v177 = v19;
  v179 = v55;
  v58 = v175;
  v56(v175, v22, v26);
  sub_1B0005A34();
  v59 = v174;
  sub_1B0005A28();
  sub_1B0005830();
  v61 = v60;
  sub_1B00057B8();
  sub_1B0005A28();
  v62 = *(void (**)(char *, uint64_t))(v27 + 8);
  v62(v46, v26);
  sub_1B0005830();
  if (v63 > 0.0)
  {
    v64 = v63;
    v65 = v179;
    if ((sub_1B0005860() & 1) != 0)
    {
      sub_1B0005740();
      sub_1B0005740();
      sub_1B0005734();
      sub_1B0005830();
      v67 = v61 * 360.0 / v64 - (v66 - v64 * 0.5) / v64 * 360.0;
      v68 = (sin((v67 + -90.0) / 180.0 * 3.14159265) + 1.0) * 0.5 + 0.0;
      v62(v46, v26);
      v62(v178, v26);
      v62(v59, v26);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v176, v173);
      v62(v58, v26);
      result = ((uint64_t (*)(char *, uint64_t))v62)(v65, v26);
      goto LABEL_45;
    }
    v171 = v62;
    v85 = v181;
    sub_1B00057F4();
    sub_1B0005ADC();
    v86 = 1;
    sub_1B00057B8();
    v172 = *(_QWORD *)(v172 + 8);
    ((void (*)(char *, uint64_t))v172)(v12, v173);
    sub_1B0005830();
    v88 = v87;
    sub_1B0005830();
    v159 = v88 + v89;
    v90 = v26;
    v91 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v92 = (uint64_t)v177;
    v91(v177, v65, v26);
    __swift_storeEnumTagSinglePayload(v92, 0, 1, v26);
    v93 = (uint64_t)v167;
    v91(v167, v58, v26);
    v94 = v26;
    __swift_storeEnumTagSinglePayload(v93, 0, 1, v26);
    v95 = v182;
    sub_1AFB3EB60(v92, v93, v182, v85);
    v97 = v96;
    sub_1AFACE0DC(v93, &qword_1ED1F4BA0);
    sub_1AFACE0DC(v92, &qword_1ED1F4BA0);
    v98 = 0;
    v99 = 0;
    v100 = v168;
    while (1)
    {
      v101 = (sin(((double)v99 + -90.0) / 180.0 * 3.14159265) + 1.0) * 0.5 + 0.0;
      if (v97 <= v101)
        v102 = v99;
      else
        v102 = v98;
      if ((v86 & 1) != 0)
      {
        v86 &= v97 > v101;
        v98 = v102;
      }
      else
      {
        if (v101 <= v97)
        {
          v120 = sub_1B0005854();
          v121 = v165;
          v91(v165, (char *)v95, v94);
          v122 = v164;
          v91(v164, v179, v94);
          if ((v120 & 1) != 0)
          {
            v123 = sub_1B0005860();
            v124 = (uint64_t (*)(char *, uint64_t))v171;
            v171(v122, v94);
            result = v124(v121, v94);
            v125 = v94;
            v126 = v170;
            if ((v123 & 1) != 0)
            {
              sub_1B0005A34();
              v127 = v161;
              v128 = v160;
              v129 = v162;
              (*(void (**)(char *, _QWORD, uint64_t))(v161 + 104))(v160, *MEMORY[0x1E0CB1140], v162);
              v130 = sub_1B0005B0C();
              result = (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v128, v129);
              v131 = v99 - v98;
              if (!__OFSUB__(v99, v98))
              {
                v132 = 360 - v131;
                v133 = v179;
                if (!__OFSUB__(360, v131))
                {
                  v134 = v64 - v159;
                  v135 = v175;
                  sub_1B0005830();
                  v137 = v136 / v134;
                  if (v130 > 11)
                  {
                    v155 = 360.0 - (1.0 - v137) * (double)v132 * 0.5;
                    v139 = (sin((v155 + -90.0) / 180.0 * 3.14159265) + 1.0) * 0.5 + 0.0;
                    v156 = (void (*)(char *, uint64_t))v172;
                    v157 = v173;
                    ((void (*)(char *, uint64_t))v172)(v163, v173);
                    v124(v169, v125);
                    v124(v126, v125);
                    v124(v178, v125);
                    v124(v174, v125);
                    v156(v176, v157);
                    v124(v135, v125);
                    result = v124(v133, v125);
                    v142 = v180;
                    *v180 = v155;
                  }
                  else
                  {
                    v138 = v137 * (double)v132 * 0.5;
                    v139 = (sin((v138 + -90.0) / 180.0 * 3.14159265) + 1.0) * 0.5 + 0.0;
                    v140 = (void (*)(char *, uint64_t))v172;
                    v141 = v173;
                    ((void (*)(char *, uint64_t))v172)(v163, v173);
                    v124(v169, v125);
                    v124(v126, v125);
                    v124(v178, v125);
                    v124(v174, v125);
                    v140(v176, v141);
                    v124(v135, v125);
                    result = v124(v133, v125);
                    v142 = v180;
                    *v180 = v138;
                  }
                  v142[1] = v139;
                  return result;
                }
LABEL_49:
                __break(1u);
                return result;
              }
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
          }
          else
          {
            v124 = (uint64_t (*)(char *, uint64_t))v171;
            v171(v122, v94);
            result = v124(v121, v94);
            v125 = v94;
            v126 = v170;
          }
          v146 = v99 - v98;
          if (__OFSUB__(v99, v98))
          {
            __break(1u);
            goto LABEL_48;
          }
          sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          v147 = v175;
          v148 = sub_1B000850C();
          v149 = v179;
          if ((v148 & 1) != 0)
          {
            sub_1B0005830();
            v151 = v150;
            sub_1B0005830();
            v153 = v151 + v152;
          }
          else
          {
            sub_1B0005830();
          }
          v67 = v153 / v159 * (double)v146 + (double)v98;
          v68 = (sin((v67 + -90.0) / 180.0 * 3.14159265) + 1.0) * 0.5 + 0.0;
          v124(v169, v125);
          v124(v126, v125);
          v124(v178, v125);
          v124(v174, v125);
          ((void (*)(char *, uint64_t))v172)(v176, v173);
          v124(v147, v125);
          result = v124(v149, v125);
LABEL_45:
          v154 = v180;
          *v180 = v67;
          v154[1] = v68;
          return result;
        }
        v86 = 0;
      }
      if (v99 == 360)
      {
        if (qword_1ED1F1A10 != -1)
          swift_once();
        v103 = sub_1B0006D00();
        __swift_project_value_buffer(v103, (uint64_t)qword_1ED1F2368);
        v104 = v179;
        v91(v100, v179, v90);
        v105 = v166;
        v106 = v175;
        v91(v166, v175, v90);
        v107 = sub_1B0006CE8();
        v108 = sub_1B00089D4();
        v109 = os_log_type_enabled(v107, v108);
        v110 = v173;
        if (v109)
        {
          v111 = swift_slowAlloc();
          v182 = swift_slowAlloc();
          v184[0] = v182;
          *(_DWORD *)v111 = 136446466;
          sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
          v112 = sub_1B0008F80();
          v183 = sub_1AFB4AD14(v112, v113, v184);
          sub_1B0008BB4();
          swift_bridgeObjectRelease();
          v114 = v100;
          v115 = v171;
          v171(v114, v94);
          *(_WORD *)(v111 + 12) = 2082;
          v116 = sub_1B0008F80();
          v183 = sub_1AFB4AD14(v116, v117, v184);
          v110 = v173;
          sub_1B0008BB4();
          swift_bridgeObjectRelease();
          v115(v105, v94);
          _os_log_impl(&dword_1AFABF000, v107, v108, "Sunrise/sunset day has no daylightStart/daylightEnd. sunrise=%{public}s sunset=%{public}s", (uint8_t *)v111, 0x16u);
          v118 = v182;
          swift_arrayDestroy();
          v104 = v179;
          MEMORY[0x1B5E03CC0](v118, -1, -1);
          v119 = v111;
          v106 = v175;
          MEMORY[0x1B5E03CC0](v119, -1, -1);
        }
        else
        {
          v143 = v100;
          v115 = v171;
          v171(v143, v94);
          v115(v105, v94);
        }

        v144 = v170;
        v115(v169, v94);
        v115(v144, v94);
        v115(v178, v94);
        v115(v174, v94);
        ((void (*)(char *, uint64_t))v172)(v176, v110);
        v115(v106, v94);
        result = ((uint64_t (*)(char *, uint64_t))v115)(v104, v94);
        goto LABEL_38;
      }
      ++v99;
    }
  }
  v69 = v58;
  if (qword_1ED1F1A10 != -1)
    swift_once();
  v70 = sub_1B0006D00();
  __swift_project_value_buffer(v70, (uint64_t)qword_1ED1F2368);
  v71 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v71(v31, v59, v26);
  v72 = (char *)v171;
  v71((char *)v171, v178, v26);
  v73 = sub_1B0006CE8();
  v74 = v26;
  v75 = sub_1B00089D4();
  if (os_log_type_enabled(v73, v75))
  {
    v76 = swift_slowAlloc();
    v182 = swift_slowAlloc();
    v184[0] = v182;
    *(_DWORD *)v76 = 136446466;
    sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v77 = sub_1B0008F80();
    v183 = sub_1AFB4AD14(v77, v78, v184);
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    v62(v31, v26);
    *(_WORD *)(v76 + 12) = 2082;
    v79 = (char *)v171;
    v80 = sub_1B0008F80();
    v183 = sub_1AFB4AD14(v80, v81, v184);
    v59 = v174;
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    v62(v79, v26);
    _os_log_impl(&dword_1AFABF000, v73, v75, "Sunrise/sunset day length is incorrectly zero when calculating sun position. currentDayStart=%{public}s nextDayStart=%{public}s", (uint8_t *)v76, 0x16u);
    v82 = v182;
    swift_arrayDestroy();
    MEMORY[0x1B5E03CC0](v82, -1, -1);
    v83 = v175;
    MEMORY[0x1B5E03CC0](v76, -1, -1);

    v84 = v173;
  }
  else
  {
    v62(v31, v26);
    v62(v72, v26);

    v84 = v173;
    v83 = v69;
  }
  v62(v178, v74);
  v62(v59, v74);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v176, v84);
  v62(v83, v74);
  result = ((uint64_t (*)(char *, uint64_t))v62)(v179, v74);
LABEL_38:
  v145 = v180;
  *v180 = 0.0;
  v145[1] = 0.0;
  return result;
}

uint64_t sub_1AFB402C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    result = sub_1B0005B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetViewModel.PolarNightModel(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F2580);
}

void sub_1AFB40388(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  if ((OUTLINED_FUNCTION_167_0() & 1) != 0)
  {
    a3(0);
    OUTLINED_FUNCTION_157_1();
  }
  OUTLINED_FUNCTION_123_2();
}

ValueMetadata *type metadata accessor for SunriseSunsetPolarRule()
{
  return &type metadata for SunriseSunsetPolarRule;
}

uint64_t sub_1AFB4047C(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetPolarRule.isSatisfied(for:data:)(a1, a2) & 1;
}

uint64_t sub_1AFB40494(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetPolarRule.description(for:data:)(a1, a2);
}

uint64_t SunriseSunsetPolarRule.isSatisfied(for:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  _BOOL8 v15;
  uint64_t v17;

  v3 = type metadata accessor for SunriseSunsetDescriptionContext();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - v12;
  sub_1AFAC4890(a2, (uint64_t)&v17 - v12, &qword_1ED1F4BA0);
  sub_1B00058D8();
  v14 = OUTLINED_FUNCTION_21_19((uint64_t)v13);
  sub_1AFAF866C((uint64_t)v13, &qword_1ED1F4BA0);
  sub_1AFAEA0C4(a2, v7);
  if (v14 == 1)
  {
    sub_1AFAEA394(v7);
    return 1;
  }
  else
  {
    sub_1AFAC4890(v7 + *(int *)(v3 + 20), (uint64_t)v10, &qword_1ED1F4BA0);
    sub_1AFAEA394(v7);
    v15 = OUTLINED_FUNCTION_21_19((uint64_t)v10) == 1;
    sub_1AFAF866C((uint64_t)v10, &qword_1ED1F4BA0);
  }
  return v15;
}

ValueMetadata *type metadata accessor for SunriseSunsetNightRule()
{
  return &type metadata for SunriseSunsetNightRule;
}

uint64_t HorizontalBarPointView.init(point:pointColor:gradient:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_1AFB4061C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AFAC4E34(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t HorizontalBarPointView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = sub_1B0007750();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F1208);
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = *((_BYTE *)v1 + 8);
  v12 = v1[2];
  v11 = v1[3];
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v9;
  *(_BYTE *)(v13 + 24) = v10;
  *(_QWORD *)(v13 + 32) = v12;
  *(_QWORD *)(v13 + 40) = v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDAE98], v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B0008188();
  sub_1B000817C();
  v15 = v17;
  v14 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v18, v8, v6);
  *(_BYTE *)(v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F11B0) + 36)) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v6);
}

uint64_t sub_1AFB407C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FeelsLikeStringBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1AFB407F8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SkyBackgroundGradient()
{
  return &type metadata for SkyBackgroundGradient;
}

void SkyBackgroundGradient.mutated(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  float v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  __n128 v39;
  _QWORD v44[5];
  double v45;
  double v46;
  double v47;
  __n128 v48;
  double v49;
  double v50;
  double v51;

  v5 = OUTLINED_FUNCTION_13_62();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)v2;
  v8 = *(double *)(v2 + 8);
  v10 = *(double *)(v2 + 16);
  v11 = *(double *)(v2 + 24);
  v12 = *(double *)(v2 + 32);
  v13 = *(double *)(v2 + 40);
  v14 = *(double *)(v2 + 48);
  v15 = *(double *)(v2 + 56);
  v16 = *(double *)(v2 + 64);
  v17 = *(double *)(v2 + 72);
  v18 = *(double *)(v2 + 80);
  _Q3 = *(__n128 *)(v2 + 88);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    v21 = *(float *)a1;
    v20 = *(float *)(a1 + 4);
    LODWORD(v22) = *(_QWORD *)(a1 + 8);
    if (*(float *)a1 != 0.0 || v20 != 0.0 || v22 != 0.0 || (*(_QWORD *)(a1 + 8) & 0x7FFFFFFF00000000) != 0)
    {
      v45 = *(double *)(v2 + 64);
      v46 = v17;
      v47 = v18;
      v48 = _Q3;
      v49 = v12;
      v50 = v13;
      v51 = v14;
      sub_1B0007FD8();
      sub_1B0007FB4();
      static Color.interpolated(between:and:progress:)(v21);
      v24 = v23;
      OUTLINED_FUNCTION_25_1();
      OUTLINED_FUNCTION_10_3();
      sub_1B0007FD8();
      sub_1B0008008();
      static Color.interpolated(between:and:progress:)(v20);
      v44[3] = v25;
      OUTLINED_FUNCTION_10_3();
      OUTLINED_FUNCTION_18_7();
      sub_1B0007FD8();
      sub_1B0007FC0();
      static Color.interpolated(between:and:progress:)(v22);
      v44[1] = v26;
      OUTLINED_FUNCTION_18_7();
      swift_release();
      OUTLINED_FUNCTION_4_92();
      MEMORY[0x1B5E01F68](v7, v9, v8, v10, v11);
      sub_1B0007FF0();
      v44[2] = v24;
      Color.remapped(between:and:)();
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_7_75();
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      OUTLINED_FUNCTION_12_78();
      OUTLINED_FUNCTION_18_7();
      sub_1B0007FF0();
      OUTLINED_FUNCTION_28_43();
      v44[4] = v27;
      OUTLINED_FUNCTION_7_75();
      OUTLINED_FUNCTION_12_78();
      OUTLINED_FUNCTION_4_92();
      MEMORY[0x1B5E01F68](v7, v49, v50, v51, v15);
      sub_1B0007FF0();
      OUTLINED_FUNCTION_28_43();
      OUTLINED_FUNCTION_7_75();
      OUTLINED_FUNCTION_12_78();
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_7_75();
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      OUTLINED_FUNCTION_12_78();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_4_92();
      MEMORY[0x1B5E01F68](v7, v45, v46, v47, v48);
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_10_49();
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      swift_release();
      OUTLINED_FUNCTION_41();
      sub_1B0007FF0();
      Color.remapped(between:and:)();
      swift_release();
      OUTLINED_FUNCTION_41();
      swift_retain();
      v9 = Color.rgbaComponents.getter();
      v8 = v28;
      v10 = v29;
      v11 = v30;
      OUTLINED_FUNCTION_41();
      swift_retain();
      v49 = Color.rgbaComponents.getter();
      v50 = v31;
      v51 = v32;
      v15 = v33;
      OUTLINED_FUNCTION_7_75();
      v34 = Color.rgbaComponents.getter();
      v36 = v35;
      v38 = v37;
      v48 = v39;
      OUTLINED_FUNCTION_12_78();
      OUTLINED_FUNCTION_10_3();
      OUTLINED_FUNCTION_18_7();
      OUTLINED_FUNCTION_7_75();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_10_49();
      v13 = v50;
      v14 = v51;
      v12 = v49;
      v18 = v38;
      v17 = v36;
      v16 = v34;
      __asm { FMOV            V3.2D, #0.5 }
      _Q3.n128_u64[0] = v48.n128_u64[0];
    }
  }
  *(double *)a2 = v9;
  *(double *)(a2 + 8) = v8;
  *(double *)(a2 + 16) = v10;
  *(double *)(a2 + 24) = v11;
  *(double *)(a2 + 32) = v12;
  *(double *)(a2 + 40) = v13;
  *(double *)(a2 + 48) = v14;
  *(double *)(a2 + 56) = v15;
  *(double *)(a2 + 64) = v16;
  *(double *)(a2 + 72) = v17;
  *(double *)(a2 + 80) = v18;
  *(__n128 *)(a2 + 88) = _Q3;
}

double static SkyBackgroundGradient.interpolated(between:and:progress:)@<D0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  double result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1[1];
  v5 = *((_QWORD *)a1 + 6);
  v6 = *((_QWORD *)a1 + 7);
  v24 = a1[4];
  v22 = *((_QWORD *)a1 + 11);
  v23 = *((_QWORD *)a1 + 10);
  v16 = a2[2];
  v17 = a1[2];
  v7 = *((_QWORD *)a2 + 6);
  v8 = *((_QWORD *)a2 + 7);
  v21 = a2[4];
  v9 = *((_QWORD *)a2 + 10);
  v20 = *((_QWORD *)a2 + 11);
  v33 = *a1;
  v34 = v4;
  v10 = a2[1];
  v31 = *a2;
  v32 = v10;
  OUTLINED_FUNCTION_17_57((double *)&v33, (double *)&v31, (double *)&v35);
  v19 = v35;
  v12 = v36;
  v11 = v37;
  v31 = v17;
  *(_QWORD *)&v32 = v5;
  *((_QWORD *)&v32 + 1) = v6;
  v28 = v16;
  v29 = v7;
  v30 = v8;
  OUTLINED_FUNCTION_17_57((double *)&v31, (double *)&v28, (double *)&v33);
  v18 = v33;
  v13 = v34;
  v28 = v24;
  v29 = v23;
  v30 = v22;
  v25 = v21;
  v26 = v9;
  v27 = v20;
  OUTLINED_FUNCTION_17_57((double *)&v28, (double *)&v25, (double *)&v31);
  *(_OWORD *)a3 = v19;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v11;
  *(_OWORD *)(a3 + 32) = v18;
  *(_OWORD *)(a3 + 48) = v13;
  result = *(double *)&v31;
  v15 = v32;
  *(_OWORD *)(a3 + 64) = v31;
  *(_OWORD *)(a3 + 80) = v15;
  *(_QWORD *)(a3 + 96) = 0x3FE0000000000000;
  return result;
}

void static SkyBackgroundGradient.interpolated(forElevation:isPM:stops:)(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  unint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v61[6];
  uint64_t v62;
  __int128 v63[6];
  uint64_t v64;
  _OWORD v65[6];
  uint64_t v66;

  if (a4 < -90.0 || a4 > 90.0 || (v7 = *(_QWORD *)(a2 + 16)) == 0)
  {
    OUTLINED_FUNCTION_16_56();
    SkyBackgroundGradient.init(hexes:)(v25, v26);
    return;
  }
  *(_QWORD *)&v65[0] = MEMORY[0x1E0DEE9D8];
  sub_1AFB372D8(0, v7, 0);
  v8 = 0;
  v9 = 0;
  v10 = *(_QWORD *)&v65[0];
  v59 = a2 + 32;
  v11 = *(_QWORD *)(*(_QWORD *)&v65[0] + 16);
  do
  {
    v12 = v11 + v9;
    v13 = *(_BYTE *)(a2 + v8 + 40);
    v14 = *(_OWORD *)(a2 + v8 + 48);
    v15 = *(_OWORD *)(a2 + v8 + 64);
    v16 = *(_OWORD *)(a2 + v8 + 80);
    v17 = *(_OWORD *)(a2 + v8 + 96);
    v18 = *(_OWORD *)(a2 + v8 + 112);
    v19 = *(_OWORD *)(a2 + v8 + 128);
    v20 = *(_QWORD *)(a2 + v8 + 144);
    if (v13)
      v21 = 180.0 - *(double *)(a2 + v8 + 32);
    else
      v21 = *(double *)(a2 + v8 + 32);
    *(_QWORD *)&v65[0] = v10;
    v22 = *(_QWORD *)(v10 + 24);
    v23 = v12 + 1;
    if (v12 >= v22 >> 1)
    {
      v57 = v15;
      v58 = v14;
      v55 = v17;
      v56 = v16;
      v53 = v19;
      v54 = v18;
      sub_1AFB372D8((char *)(v22 > 1), v12 + 1, 1);
      v19 = v53;
      v18 = v54;
      v17 = v55;
      v16 = v56;
      v15 = v57;
      v14 = v58;
      v10 = *(_QWORD *)&v65[0];
    }
    ++v9;
    *(_QWORD *)(v10 + 16) = v23;
    v24 = v10 + 120 * v11 + v8;
    *(double *)(v24 + 32) = v21;
    *(_BYTE *)(v24 + 40) = v13;
    *(_OWORD *)(v24 + 48) = v14;
    *(_OWORD *)(v24 + 64) = v15;
    *(_OWORD *)(v24 + 80) = v16;
    *(_OWORD *)(v24 + 96) = v17;
    *(_OWORD *)(v24 + 112) = v18;
    *(_OWORD *)(v24 + 128) = v19;
    v8 += 120;
    *(_QWORD *)(v24 + 144) = v20;
  }
  while (v7 != v9);
  v27 = 0;
  if ((a1 & 1) != 0)
    v28 = 180.0 - a4;
  else
    v28 = a4;
  v29 = 32;
  do
  {
    if (v28 < *(double *)(v10 + v29))
    {
      swift_release();
      goto LABEL_24;
    }
    ++v27;
    v29 += 120;
  }
  while (v11 + v9 != v27);
  swift_release();
  if (v7 <= 1)
    v30 = 1;
  else
    v30 = v7;
  v27 = v30 - 1;
LABEL_24:
  if (__OFSUB__(v27, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v27 >= v7)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v31 = (v27 - 1) & ~((uint64_t)(v27 - 1) >> 63);
  if (v31 < v7)
  {
    v32 = v59 + 120 * v27;
    v33 = *(_OWORD *)(v32 + 16);
    v34 = *(_OWORD *)(v32 + 32);
    v35 = *(_OWORD *)(v32 + 48);
    v36 = *(_OWORD *)(v32 + 64);
    v37 = *(_OWORD *)(v32 + 80);
    v38 = *(_OWORD *)(v32 + 96);
    v39 = *(_QWORD *)(v32 + 112);
    v40 = v59 + 120 * v31;
    v41 = *(_OWORD *)(v40 + 32);
    v42 = *(_OWORD *)(v40 + 48);
    v43 = *(_OWORD *)(v40 + 64);
    v44 = *(_OWORD *)(v40 + 80);
    v45 = *(_OWORD *)(v40 + 96);
    v46 = *(_QWORD *)(v40 + 112);
    v63[0] = *(_OWORD *)(v40 + 16);
    v63[1] = v41;
    v63[2] = v42;
    v63[3] = v43;
    v63[4] = v44;
    v63[5] = v45;
    v64 = v46;
    v61[0] = v33;
    v61[1] = v34;
    v61[2] = v35;
    v61[3] = v36;
    v61[4] = v37;
    v61[5] = v38;
    v62 = v39;
    static SkyBackgroundGradient.interpolated(between:and:progress:)(v63, v61, (uint64_t)v65);
    v47 = v66;
    v48 = v65[1];
    v49 = v65[2];
    v50 = v65[3];
    v51 = v65[4];
    v52 = v65[5];
    *(_OWORD *)a3 = v65[0];
    *(_OWORD *)(a3 + 16) = v48;
    *(_OWORD *)(a3 + 32) = v49;
    *(_OWORD *)(a3 + 48) = v50;
    *(_OWORD *)(a3 + 64) = v51;
    *(_OWORD *)(a3 + 80) = v52;
    *(_QWORD *)(a3 + 96) = v47;
    OUTLINED_FUNCTION_16_56();
    return;
  }
LABEL_30:
  __break(1u);
}

double sub_1AFB40FF8()
{
  double result;

  xmmword_1ED1ED408 = xmmword_1B0035870;
  xmmword_1ED1ED418 = xmmword_1B0035880;
  xmmword_1ED1ED428 = xmmword_1B0035890;
  xmmword_1ED1ED438 = xmmword_1B00358A0;
  result = 0.203921569;
  xmmword_1ED1ED448 = xmmword_1B00358B0;
  xmmword_1ED1ED458 = xmmword_1B00358C0;
  qword_1ED1ED468 = 0x3FE0000000000000;
  return result;
}

uint64_t dispatch thunk of MoonStringBuilderType.nextFullMoonDurationString(fullMoonDate:now:timeZone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of MoonStringBuilderType.nextMoonRiseSetString(_:now:timeZone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1AFB41058(uint64_t a1, unsigned __int8 *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  int v18;
  void (*v19)(uint64_t, uint64_t);
  int v20;

  v6 = sub_1B0005FB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v10 = v9 - v8;
  v11 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9 - v8, a1, v6);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v10, v6);
  if (v12 == *MEMORY[0x1E0CEEB20])
  {
    OUTLINED_FUNCTION_79_0();
    return 0;
  }
  if (v12 == *MEMORY[0x1E0CEEA00])
  {
    OUTLINED_FUNCTION_79_0();
    return 1;
  }
  if (v12 == *MEMORY[0x1E0CEEA08])
  {
    OUTLINED_FUNCTION_79_0();
    return 2;
  }
  if (v12 != *MEMORY[0x1E0CEEB00])
  {
    if (v12 == *MEMORY[0x1E0CEEAD8])
    {
      OUTLINED_FUNCTION_79_0();
      return 3;
    }
    if (v12 == *MEMORY[0x1E0CEEB08])
    {
      v16 = 6;
    }
    else
    {
      if (v12 == *MEMORY[0x1E0CEEB18])
      {
        OUTLINED_FUNCTION_79_0();
        return 7;
      }
      if (v12 == *MEMORY[0x1E0CEEB30])
      {
        OUTLINED_FUNCTION_79_0();
        return 8;
      }
      if (v12 == *MEMORY[0x1E0CEEAE0])
      {
        OUTLINED_FUNCTION_79_0();
        return 9;
      }
      if (v12 == *MEMORY[0x1E0CEEA70])
      {
        OUTLINED_FUNCTION_79_0();
        return 10;
      }
      if (v12 == *MEMORY[0x1E0CEEA30])
      {
        OUTLINED_FUNCTION_79_0();
        return 11;
      }
      if (v12 == *MEMORY[0x1E0CEEB10])
      {
        OUTLINED_FUNCTION_79_0();
        return 12;
      }
      if (v12 == *MEMORY[0x1E0CEEAB8])
      {
        OUTLINED_FUNCTION_79_0();
        return 13;
      }
      if (v12 == *MEMORY[0x1E0CEEAC0])
      {
        OUTLINED_FUNCTION_79_0();
        return 14;
      }
      if (v12 == *MEMORY[0x1E0CEEB70])
      {
        OUTLINED_FUNCTION_79_0();
        return 15;
      }
      if (v12 == *MEMORY[0x1E0CEEB78])
      {
        OUTLINED_FUNCTION_79_0();
        return 16;
      }
      if (v12 == *MEMORY[0x1E0CEEAB0])
      {
        OUTLINED_FUNCTION_79_0();
        return 17;
      }
      if (v12 == *MEMORY[0x1E0CEEB80])
      {
        OUTLINED_FUNCTION_79_0();
        return 18;
      }
      if (v12 == *MEMORY[0x1E0CEEA78])
      {
        OUTLINED_FUNCTION_79_0();
        return 19;
      }
      if (v12 == *MEMORY[0x1E0CEEA20])
      {
        OUTLINED_FUNCTION_79_0();
        return 20;
      }
      if (v12 == *MEMORY[0x1E0CEEA38])
      {
        v16 = 23;
      }
      else
      {
        if (v12 != *MEMORY[0x1E0CEEA40])
        {
          if (v12 == *MEMORY[0x1E0CEEAC8])
          {
            OUTLINED_FUNCTION_79_0();
            return 27;
          }
          if (v12 == *MEMORY[0x1E0CEEA88])
          {
            OUTLINED_FUNCTION_79_0();
            return 28;
          }
          if (v12 == *MEMORY[0x1E0CEEAE8])
          {
            OUTLINED_FUNCTION_79_0();
            return 29;
          }
          if (v12 == *MEMORY[0x1E0CEEAF0])
          {
            OUTLINED_FUNCTION_79_0();
            return 30;
          }
          if (v12 == *MEMORY[0x1E0CEEAD0])
          {
            OUTLINED_FUNCTION_79_0();
            return 31;
          }
          if (v12 == *MEMORY[0x1E0CEEA48])
          {
            OUTLINED_FUNCTION_79_0();
            return 32;
          }
          if (v12 == *MEMORY[0x1E0CEEA28])
          {
            OUTLINED_FUNCTION_79_0();
            return 33;
          }
          if (v12 == *MEMORY[0x1E0CEE9F8])
          {
            OUTLINED_FUNCTION_79_0();
            return 34;
          }
          if (v12 == *MEMORY[0x1E0CEEA60])
          {
            OUTLINED_FUNCTION_79_0();
            return 35;
          }
          if (v12 == *MEMORY[0x1E0CEEA68])
          {
            OUTLINED_FUNCTION_79_0();
            return 36;
          }
          if (v12 == *MEMORY[0x1E0CEEAF8])
            goto LABEL_8;
          v18 = *MEMORY[0x1E0CEEB90];
          v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
          v20 = v12;
          v19(a1, v6);
          if (v20 == v18)
            return 37;
          v19(v10, v6);
          return 3;
        }
        v16 = 26;
      }
    }
    v13 = (v16 - v11);
    OUTLINED_FUNCTION_79_0();
    return v13;
  }
LABEL_8:
  OUTLINED_FUNCTION_79_0();
  if (a3 >= 0.875)
  {
    v15 = 6;
    return (v15 - v11);
  }
  if (a3 >= 0.625)
  {
    v15 = 23;
    return (v15 - v11);
  }
  if (a3 < 0.125)
    v14 = 3;
  else
    v14 = 20;
  if (a3 >= 0.375)
    return (26 - v11);
  else
    return v14;
}

uint64_t sub_1AFB41594@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = byte_1B0044782[(char)result];
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDayRule()
{
  return &type metadata for SunriseSunsetDayRule;
}

void sub_1AFB415C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  sub_1AFB4C108();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t dispatch thunk of MoonDataProviderType.moonEphemeris(for:coordinate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MoonDataProviderType.nextFullMoonDate(for:timeZone:coordinate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of MoonDataProviderType.dayMoonData(for:timeZone:coordinate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1AFB4165C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFB416E0()
{
  return swift_allocateGenericValueMetadata();
}

WeatherUI::CollisionViewMetrics __swiftcall CollisionViewMetrics.init(vfxViewWidth:gapWidth:leadingPadding:componentWidths:)(Swift::Float vfxViewWidth, Swift::Float gapWidth, Swift::Float leadingPadding, Swift::OpaquePointer componentWidths)
{
  uint64_t v4;
  WeatherUI::CollisionViewMetrics result;

  *(Swift::Float *)v4 = vfxViewWidth;
  *(Swift::Float *)(v4 + 4) = gapWidth;
  *(Swift::Float *)(v4 + 8) = leadingPadding;
  *(Swift::OpaquePointer *)(v4 + 16) = componentWidths;
  result.componentWidths = componentWidths;
  result.leadingPadding = leadingPadding;
  result.gapWidth = gapWidth;
  result.vfxViewWidth = vfxViewWidth;
  return result;
}

ValueMetadata *type metadata accessor for SunPositionKeyframe()
{
  return &type metadata for SunPositionKeyframe;
}

uint64_t SunPositionKeyframe.rayCenter.getter()
{
  uint64_t v0;
  uint64_t inited;
  unsigned int v3;
  unsigned int v4;

  v4 = *(_QWORD *)(v0 + 8);
  *(float *)&v3 = 1.0 - COERCE_FLOAT(HIDWORD(*(_QWORD *)(v0 + 8)));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B002B5A0;
  *(float32x2_t *)(inited + 32) = vadd_f32(vmul_f32((float32x2_t)__PAIR64__(v3, v4), (float32x2_t)0x4236666641B4CCCDLL), (float32x2_t)0xC1B66666C134CCCDLL);
  *(_DWORD *)(inited + 40) = 0;
  return sub_1AFB36840();
}

uint64_t static SunPositionKeyframe.interpolated(for:keyframes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  float32x2_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  double v42;
  double v43;
  double v44;
  double v45;
  float v46;
  uint64_t v47;
  float v48;
  BOOL v49;
  double v50;
  double v51;
  float v52;
  uint64_t v53;
  uint64_t v54;
  float v55;
  uint64_t v56;
  uint64_t v57;
  float v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  __int128 v64;
  float32x2_t v65;
  float v66;
  float v67;
  __int128 v68;
  float32x2_t v69;
  __int128 v70;
  __int128 v71;
  float v72;
  double v73[4];
  double v74[4];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v9 = v6;
    do
    {
      v10 = a1 + v7;
      v11 = *(double *)(a1 + v7 + 32);
      if (v11 == a3)
      {
        v12 = *(_QWORD *)(v10 + 40);
        v13 = *(_DWORD *)(v10 + 48);
        v68 = *(_OWORD *)(v10 + 72);
        v70 = *(_OWORD *)(v10 + 56);
        v14 = *(_DWORD *)(v10 + 88);
        v15 = *(_QWORD *)(v10 + 96);
        v16 = *(_QWORD *)(v10 + 104);
        v17 = *(_DWORD *)(v10 + 112);
        *(_QWORD *)&v75 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AFB37320(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v75;
        }
        v19 = *(_QWORD *)(v8 + 16);
        v18 = *(_QWORD *)(v8 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1AFB37320((char *)(v18 > 1), v19 + 1, 1);
          v8 = v75;
        }
        *(_QWORD *)(v8 + 16) = v19 + 1;
        v20 = v8 + 88 * v19;
        *(double *)(v20 + 32) = v11;
        *(_QWORD *)(v20 + 40) = v12;
        *(_DWORD *)(v20 + 48) = v13;
        *(_OWORD *)(v20 + 56) = v70;
        *(_OWORD *)(v20 + 72) = v68;
        *(_DWORD *)(v20 + 88) = v14;
        *(_QWORD *)(v20 + 96) = v15;
        *(_QWORD *)(v20 + 104) = v16;
        *(_DWORD *)(v20 + 112) = v17;
      }
      v7 += 88;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v21 = *(_QWORD *)(v8 + 32);
    v22 = *(_QWORD *)(v8 + 40);
    v23 = *(_DWORD *)(v8 + 48);
    v71 = *(_OWORD *)(v8 + 56);
    v24 = *(_QWORD *)(v8 + 72);
    v25 = *(_QWORD *)(v8 + 80);
    v26 = *(_DWORD *)(v8 + 88);
    v27 = *(_QWORD *)(v8 + 96);
    v28 = *(_DWORD *)(v8 + 112);
    v29 = *(_QWORD *)(v8 + 104);
    result = swift_release();
    *(_QWORD *)a2 = v21;
    *(_QWORD *)(a2 + 8) = v22;
    *(_DWORD *)(a2 + 16) = v23;
    *(_OWORD *)(a2 + 24) = v71;
    *(_QWORD *)(a2 + 40) = v24;
    *(_QWORD *)(a2 + 48) = v25;
    *(_DWORD *)(a2 + 56) = v26;
    *(_QWORD *)(a2 + 64) = v27;
    *(_QWORD *)(a2 + 72) = v29;
    *(_DWORD *)(a2 + 80) = v28;
    return result;
  }
  result = swift_release();
  if (v6)
  {
    v31 = 0;
    v32 = (double *)(a1 + 32);
    while (*v32 <= a3)
    {
      ++v31;
      v32 += 11;
      if (v6 == v31)
        goto LABEL_18;
    }
  }
  else
  {
LABEL_18:
    if (v6 <= 1)
      v33 = 1;
    else
      v33 = v6;
    v31 = v33 - 1;
  }
  if (v31 <= 1)
    v34 = 1;
  else
    v34 = v31;
  if (v31 >= (unint64_t)v6)
  {
    __break(1u);
    goto LABEL_32;
  }
  v35 = v34 - 1;
  if (v35 >= v6)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  v36 = a1 + 32 + 88 * v31;
  v38 = *(double *)v36;
  v37 = *(float32x2_t *)(v36 + 8);
  v58 = *(float *)(v36 + 16);
  v62 = *(double *)(v36 + 32);
  v63 = *(double *)(v36 + 24);
  v60 = *(double *)(v36 + 48);
  v61 = *(double *)(v36 + 40);
  v39 = *(_QWORD *)(v36 + 64);
  v69 = *(float32x2_t *)(v36 + 72);
  v66 = *(float *)(v36 + 56);
  v67 = *(float *)(v36 + 80);
  v40 = a1 + 32 + 88 * v35;
  v41 = *(float *)(v40 + 16);
  v42 = *(double *)(v40 + 24);
  v43 = *(double *)(v40 + 32);
  v44 = *(double *)(v40 + 40);
  v45 = *(double *)(v40 + 48);
  v46 = *(float *)(v40 + 56);
  v47 = *(_QWORD *)(v40 + 64);
  v65 = *(float32x2_t *)(v40 + 72);
  v48 = *(float *)(v40 + 80);
  v49 = *(double *)v40 == v38;
  v50 = v38 - *(double *)v40;
  v51 = (a3 - *(double *)v40) / v50;
  if (v49)
    v51 = 0.0;
  v59 = *(double *)v40 + v50 * v51;
  v52 = v51;
  v72 = v52;
  static SIMD2<>.interpolated(between:and:progress:)(*(float32x2_t *)(v40 + 8), v37, v52);
  v54 = v53;
  v74[0] = v42;
  v74[1] = v43;
  v55 = v41 + (float)((float)(v58 - v41) * v72);
  v74[2] = v44;
  v74[3] = v45;
  v73[0] = v63;
  v73[1] = v62;
  v73[2] = v61;
  v73[3] = v60;
  static CodableColor.interpolated(between:and:progress:)(v74, v73, (double *)&v75, v72);
  v64 = v75;
  v56 = v76;
  v57 = v77;
  result = static Int.interpolated(between:and:progress:)(v47, v39, v72);
  *(double *)a2 = v59;
  *(_QWORD *)(a2 + 8) = v54;
  *(float *)(a2 + 16) = v55;
  *(_OWORD *)(a2 + 24) = v64;
  *(_QWORD *)(a2 + 40) = v56;
  *(_QWORD *)(a2 + 48) = v57;
  *(float *)(a2 + 56) = v46 + (float)((float)(v66 - v46) * v72);
  *(_QWORD *)(a2 + 64) = result;
  *(float32x2_t *)(a2 + 72) = vadd_f32(v65, vmul_n_f32(vsub_f32(v69, v65), v72));
  *(float *)(a2 + 80) = v48 + (float)((float)(v67 - v48) * v72);
  return result;
}

unint64_t sub_1AFB41B24()
{
  unint64_t result;

  result = qword_1ED1ED348;
  if (!qword_1ED1ED348)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for RoundedCornersShape, &type metadata for RoundedCornersShape);
    atomic_store(result, (unint64_t *)&qword_1ED1ED348);
  }
  return result;
}

unint64_t sub_1AFB41B60()
{
  unint64_t result;

  result = qword_1ED1ED340;
  if (!qword_1ED1ED340)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for RoundedCornersShape, &type metadata for RoundedCornersShape);
    atomic_store(result, (unint64_t *)&qword_1ED1ED340);
  }
  return result;
}

uint64_t sub_1AFB41BA8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1AFB41BB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B0005D1C();
  if (v0 <= 0x3F)
  {
    sub_1AFB4B964();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t SunriseSunsetModel.init(currentWeather:dailyForecast:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B0005D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(OUTLINED_FUNCTION_10_99() + 20);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t sub_1AFB41CB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetEvent()
{
  uint64_t result;

  result = qword_1ED1F3618;
  if (!qword_1ED1F3618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for MicaConditionMedia()
{
  return objc_opt_self();
}

id CelestialEphemeris.illuminatedFraction.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_illuminatedFraction);
}

uint64_t sub_1AFB41D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BackgroundMoonData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFB41DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFB41E0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B0008B9C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1AFB41E58()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B00058D8();
  if (v0 <= 0x3F)
  {
    sub_1AFB4BDEC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AFB41EF8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char *a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t EnumTagSinglePayload;
  uint64_t result;
  uint64_t v19;
  char *v20;
  char v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BackgroundMoonData();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WeatherConditionConfigurationModel();
  sub_1AFB41DC4(a1 + *(int *)(v16 + 52), (uint64_t)v12);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_0_180(EnumTagSinglePayload, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionConfigurationModel);
    result = sub_1AFF6E950((uint64_t)v12);
LABEL_14:
    v25 = 2;
    goto LABEL_15;
  }
  v19 = sub_1AFB41D80((uint64_t)v12, (uint64_t)v15);
  if ((a3 & 1) != 0 || (a2 & 1) == 0 || *(double *)&v15[*(int *)(v13 + 28)] <= a5)
  {
    OUTLINED_FUNCTION_0_180(v19, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionConfigurationModel);
    v26 = type metadata accessor for BackgroundMoonData;
    v27 = (uint64_t)v15;
LABEL_13:
    result = sub_1AFB45FC8(v27, (uint64_t (*)(_QWORD))v26);
    goto LABEL_14;
  }
  v20 = &v15[*(int *)(v13 + 40)];
  if (*(_QWORD *)v20 == 0x736168506E6F6F6DLL && *((_QWORD *)v20 + 1) == 0xEA00000000003065)
  {
    sub_1AFB45FC8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
    goto LABEL_17;
  }
  v22 = sub_1B0008FB0();
  v23 = sub_1AFB45FC8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for BackgroundMoonData);
  if ((v22 & 1) != 0)
  {
LABEL_17:
    v26 = type metadata accessor for WeatherConditionConfigurationModel;
    v27 = a1;
    goto LABEL_13;
  }
  v24 = *(unsigned __int8 *)(a1 + *(int *)(v16 + 68));
  result = OUTLINED_FUNCTION_0_180(v23, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionConfigurationModel);
  v25 = v24 == 0;
LABEL_15:
  *a4 = v25;
  return result;
}

uint64_t sub_1AFB420F4(uint64_t a1)
{
  return sub_1AFB42108(a1, qword_1ED1ED318);
}

uint64_t sub_1AFB42108(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC360);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_millibars);
  sub_1AFB398D4();
  return sub_1B000505C();
}

uint64_t sub_1AFB42198(uint64_t a1)
{
  return sub_1AFB42108(a1, qword_1ED1ED2F8);
}

uint64_t type metadata accessor for MoonStringBuilder()
{
  return objc_opt_self();
}

void sub_1AFB421CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MoonStringBuilder.nextFullMoonDurationString(fullMoonDate:now:timeZone:)(a1, a2, a3);
}

void sub_1AFB421EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MoonStringBuilder.nextMoonRiseSetString(_:now:timeZone:)(a1, a2, a3);
}

uint64_t MoonStringBuilder.nextFullMoonDurationString(fullMoonDate:relativeTo:timeZone:useRelativeDatePhrase:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_1B0005B18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_10();
  sub_1B0005A34();
  if ((a4 & 1) != 0)
    v7 = sub_1AFD4751C();
  else
    v7 = sub_1AFD4778C();
  v9 = v7;
  v10 = v8;
  OUTLINED_FUNCTION_121(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  if (v10)
    return v9;
  else
    return 0;
}

uint64_t type metadata accessor for VFXOverrideCache()
{
  return objc_opt_self();
}

uint64_t sub_1AFB422E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B0006970();
  MEMORY[0x1E0C80A78](v1);
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BE0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B00275C0;
  sub_1B0006964();
  sub_1AFB323B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BF0);
  sub_1AFB3236C();
  sub_1B0008C68();
  sub_1B0006988();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1B000697C();
  return v0;
}

uint64_t type metadata accessor for ProviderAssembly()
{
  return objc_opt_self();
}

unint64_t sub_1AFB42420@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC20);
  result = sub_1B00069AC();
  if (v7)
  {
    v4 = type metadata accessor for WeatherServiceConfigurationProvider();
    v5 = swift_allocObject();
    sub_1AFAFB284(&v6, v5 + 16);
    a2[3] = v4;
    result = sub_1AFB45D9C();
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AFB424C0()
{
  uint64_t v0;

  v0 = sub_1B0006AFC();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_5_125();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1EC500);
  OUTLINED_FUNCTION_0_154();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_1_134();
  OUTLINED_FUNCTION_3_131();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_133();
  OUTLINED_FUNCTION_5_125();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07F0);
  OUTLINED_FUNCTION_0_154();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_1_134();
  OUTLINED_FUNCTION_3_131();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_2_133();
  OUTLINED_FUNCTION_5_125();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E8);
  OUTLINED_FUNCTION_0_154();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_1_134();
  sub_1B0006940();
  swift_release();
  swift_release();
  return OUTLINED_FUNCTION_2_133();
}

uint64_t sub_1AFB4260C()
{
  return sub_1AFB424C0();
}

uint64_t type metadata accessor for MoonDataProvider()
{
  return objc_opt_self();
}

uint64_t sub_1AFB42640()
{
  return MoonDataProvider.moonEphemeris(for:coordinate:)();
}

void sub_1AFB42660()
{
  MoonDataProvider.nextFullMoonDate(for:timeZone:coordinate:)();
}

uint64_t sub_1AFB42680@<X0>(uint64_t a1@<X8>)
{
  return MoonDataProvider.dayMoonData(for:timeZone:coordinate:)(a1);
}

ValueMetadata *type metadata accessor for MoonDataProvider.LunarCalculatorCacheKey()
{
  return &type metadata for MoonDataProvider.LunarCalculatorCacheKey;
}

unint64_t sub_1AFB426B4()
{
  unint64_t result;

  result = qword_1ED1F32A0;
  if (!qword_1ED1F32A0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0031A10, &type metadata for MoonDataProvider.LunarCalculatorCacheKey);
    atomic_store(result, (unint64_t *)&qword_1ED1F32A0);
  }
  return result;
}

void sub_1AFB426F0()
{
  sub_1AFAF86C8(&qword_1ED1F3208, type metadata accessor for MoonDataProvider.LunarEventsCacheKey, (uint64_t)&unk_1B0031A78);
}

void sub_1AFB4271C()
{
  unint64_t v0;

  sub_1AFB3A1A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for MoonDataProvider.MoonPhaseWithEphemeris()
{
  return &type metadata for MoonDataProvider.MoonPhaseWithEphemeris;
}

void sub_1AFB427A0()
{
  sub_1AFAF86C8(&qword_1ED1F3170, type metadata accessor for MoonDataProvider.MoonEphemerisCacheKey, (uint64_t)&unk_1B00319A8);
}

uint64_t sub_1AFB427CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFB42840(double a1, double a2)
{
  int v3;
  unsigned int v4;
  unsigned int v5;

  if (a1 > 0.0 && a2 < 0.0)
    return 0;
  if (a1 < -90.0 && a2 > -90.0)
    return 2;
  if (a1 < 0.0 && a2 > 0.0)
    return 4;
  if (a1 < -90.0)
    v3 = 1;
  else
    v3 = 3;
  if (a1 >= 90.0)
    v4 = 7;
  else
    v4 = 5;
  if (a1 < 90.0 && a2 > 90.0)
    v5 = 6;
  else
    v5 = v3;
  if (a1 < 0.0 || a1 < -90.0 || a1 < 90.0 && a2 > 90.0)
    return v5;
  else
    return v4;
}

void sub_1AFB428EC()
{
  sub_1AFAF86C8(&qword_1ED1F30D0, type metadata accessor for MoonDataProvider.DayMoonPhaseCacheKey, (uint64_t)&unk_1B0031AE0);
}

uint64_t sub_1AFB42918()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    result = sub_1B0005B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AFB429A8()
{
  char v0;
  uint64_t result;

  sub_1B00065BC();
  sub_1B00065A4();
  if (qword_1ED1F2698 != -1)
    swift_once();
  v0 = sub_1B00065B0();
  result = swift_release();
  byte_1ED1F30B8 = v0 & 1;
  return result;
}

unint64_t sub_1AFB42A24()
{
  unint64_t result;

  result = qword_1ED1ED1A8;
  if (!qword_1ED1ED1A8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for ForegroundEffect, &type metadata for ForegroundEffect);
    atomic_store(result, (unint64_t *)&qword_1ED1ED1A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForegroundEffect.RainDropsTier()
{
  return &type metadata for ForegroundEffect.RainDropsTier;
}

uint64_t AnimatedGradient.visibleGradient.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnimatedGradient.init(baseGradient:animatedGradient:showAnimatedGradient:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t AnimatedGradient.setGradient(gradient:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = v3 ^ 1;
  if (v3)
    v4 = 0;
  else
    v4 = 8;
  swift_bridgeObjectRetain();
  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v1 + v4) = a1;
  return result;
}

uint64_t sub_1AFB42AE0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VFXLoadRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for VFXLoadResponse(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F1BE8);
}

uint64_t sub_1AFB42B70(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t storeEnumTagSinglePayload for VFXEffectViewID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

unint64_t sub_1AFB42BDC()
{
  unint64_t result;

  result = qword_1ED1F3028[0];
  if (!qword_1ED1F3028[0])
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for VFXEffectViewID, &type metadata for VFXEffectViewID);
    atomic_store(result, qword_1ED1F3028);
  }
  return result;
}

void sub_1AFB42C18()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1AFB3DDE4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for BackgroundAnimationData.Model(319);
    if (v1 <= 0x3F)
    {
      sub_1B0007480();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void VFXLoadRequest.hasSignificantlyChanged.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  int v29;
  uint64_t v30;
  double v31;
  unsigned __int8 v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;

  OUTLINED_FUNCTION_22_0();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_5_122();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_33();
  v34 = v5;
  v6 = sub_1B0005FB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3728);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)OUTLINED_FUNCTION_31_52();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_28_0();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v36 = (uint64_t)v33 - v17;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v33 - v19;
  v35 = v3;
  sub_1AFAF2558(v2 + *(int *)(v3 + 20), (uint64_t)v10, &qword_1ED1F3728);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11) != 1)
  {
    sub_1AFAF2984((uint64_t)v10, (uint64_t)v20, type metadata accessor for BackgroundAnimationData.Model);
    OUTLINED_FUNCTION_27_64(v21, v2 + *(int *)(v35 + 24) + v11[6]);
    sub_1AFAF897C(&qword_1ED1F2640, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEEB98], MEMORY[0x1E0CEEBB8]);
    v22 = sub_1B0008530();
    v23 = v34;
    v24 = v22;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
    sub_1AFAF2DFC((uint64_t)v20, v36, type metadata accessor for BackgroundAnimationData.Model);
    sub_1AFAF2DFC(v2, v23, type metadata accessor for VFXLoadRequest);
    if ((v24 & 1) != 0)
    {
      v25 = v23;
      v33[1] = v2;
      v26 = v36;
      OUTLINED_FUNCTION_22_70(v36, v15);
      OUTLINED_FUNCTION_27_64(v27, v15 + v11[6]);
      v28 = *(double *)(v15 + v11[8]);
      v38 = *(_BYTE *)(v15 + v11[9]);
      v29 = sub_1AFB41058(v1, &v38, v28);
      OUTLINED_FUNCTION_25_4(v15);
      OUTLINED_FUNCTION_22_70(v25 + *(int *)(v35 + 24), v15);
      OUTLINED_FUNCTION_27_64(v30, v15 + v11[6]);
      v31 = *(double *)(v15 + v11[8]);
      v37 = *(_BYTE *)(v15 + v11[9]);
      v32 = sub_1AFB41058(v1, &v37, v31);
      OUTLINED_FUNCTION_25_4(v15);
      sub_1AFAE2D74(v25, type metadata accessor for VFXLoadRequest);
      OUTLINED_FUNCTION_25_4(v26);
      if (v29 == v32)
      {
        VFXLoadRequest.hasLocationChanged.getter();
        sub_1AFAE2D74((uint64_t)v20, type metadata accessor for BackgroundAnimationData.Model);
        goto LABEL_8;
      }
    }
    else
    {
      sub_1AFAE2D74(v23, type metadata accessor for VFXLoadRequest);
      sub_1AFAE2D74(v36, type metadata accessor for BackgroundAnimationData.Model);
    }
    sub_1AFAE2D74((uint64_t)v20, type metadata accessor for BackgroundAnimationData.Model);
    goto LABEL_8;
  }
  sub_1AFACE0DC((uint64_t)v10, &qword_1ED1F3728);
LABEL_8:
  OUTLINED_FUNCTION_2_3();
}

void VFXLoadRequest.hasLocationChanged.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22_0();
  v3 = v1;
  v28 = sub_1B00068E0();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_5_122();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_29();
  OUTLINED_FUNCTION_41_20();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_3_68();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  sub_1AFAF2558(v3 + *(int *)(v7 + 20), (uint64_t)&v27 - v11, &qword_1ED1F3728);
  OUTLINED_FUNCTION_31_52();
  v13 = OUTLINED_FUNCTION_120((uint64_t)v12);
  sub_1AFACE0DC((uint64_t)v12, &qword_1ED1F3728);
  sub_1AFAF2DFC(v3, v0, type metadata accessor for VFXLoadRequest);
  if (v13 == 1)
  {
    OUTLINED_FUNCTION_61_6(v14, type metadata accessor for VFXLoadRequest);
  }
  else
  {
    v15 = v6;
    v16 = v28;
    sub_1AFAF2558(v0 + *(int *)(v7 + 20), v2, &qword_1ED1F3728);
    if (OUTLINED_FUNCTION_120(v2) == 1)
    {
      sub_1AFACE0DC(v2, &qword_1ED1F3728);
      v17 = 0;
      v18 = 0;
    }
    else
    {
      v19 = v4;
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v21 = v15;
      v20(v15, v2, v16);
      sub_1AFAE2D74(v2, type metadata accessor for BackgroundAnimationData.Model);
      v17 = sub_1B00068BC();
      v18 = v22;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v16);
    }
    v23 = sub_1B00068BC();
    if (v18)
    {
      if (v17 != v23 || v18 != v24)
        sub_1B0008FB0();
      OUTLINED_FUNCTION_46_0();
      v26 = OUTLINED_FUNCTION_4_15();
      OUTLINED_FUNCTION_61_6(v26, type metadata accessor for VFXLoadRequest);
      OUTLINED_FUNCTION_28_60();
    }
    else
    {
      OUTLINED_FUNCTION_61_6(v23, type metadata accessor for VFXLoadRequest);
      OUTLINED_FUNCTION_4_15();
    }
  }
  OUTLINED_FUNCTION_2_3();
}

__n128 VFXLoadRequest.init(backgroundObserver:lastModel:model:gradient:dynamicTypeSize:targetWindowSizeClass:collisionViewMetrics:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, __n128 *a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v12;
  char v13;
  unint64_t v14;
  int *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __n128 *v19;
  __n128 result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;

  v25 = a4[1];
  v26 = *a4;
  v23 = a4[3];
  v24 = a4[2];
  v21 = a4[5];
  v22 = a4[4];
  v12 = *((_QWORD *)a4 + 12);
  v13 = *a6;
  v27 = *a7;
  v14 = a7[1].n128_u64[0];
  *a8 = a1;
  v15 = (int *)OUTLINED_FUNCTION_5_122();
  sub_1AFAE8274(a2, (uint64_t)a8 + v15[5], &qword_1ED1F3728);
  sub_1AFAF2984(a3, (uint64_t)a8 + v15[6], type metadata accessor for BackgroundAnimationData.Model);
  v16 = (char *)a8 + v15[7];
  *(_OWORD *)v16 = v26;
  *((_OWORD *)v16 + 1) = v25;
  *((_OWORD *)v16 + 2) = v24;
  *((_OWORD *)v16 + 3) = v23;
  *((_OWORD *)v16 + 4) = v22;
  *((_OWORD *)v16 + 5) = v21;
  *((_QWORD *)v16 + 12) = v12;
  v17 = (char *)a8 + v15[8];
  v18 = OUTLINED_FUNCTION_44_16();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a5, v18);
  *((_BYTE *)a8 + v15[9]) = v13;
  v19 = (__n128 *)((char *)a8 + v15[10]);
  result = v27;
  *v19 = v27;
  v19[1].n128_u64[0] = v14;
  return result;
}

uint64_t sub_1AFB43350(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t TemporalString.string.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1AFB43350(a1, a2, a3);
  return a1;
}

uint64_t static TemporalString.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
        goto LABEL_8;
      return 0;
    }
    if (a6 != 2)
      return 0;
  }
  else if (a6)
  {
    return 0;
  }
LABEL_8:
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_1B0008FB0();
}

void VFXEffectType.url.getter(uint64_t a1@<X8>)
{
  char *v1;
  char v3;
  void *v4;
  id v5;

  v3 = *v1;
  v5 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  if ((v3 & 1) != 0)
    v4 = (void *)0x80000001B0066EB0;
  else
    v4 = (void *)0x80000001B0066ED0;
  sub_1AFB39184(v4, (void *)0xE300000000000000, a1);

}

uint64_t type metadata accessor for StringBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StringBuilder);
}

uint64_t sub_1AFB434B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 16);
  swift_retain();
  LOBYTE(a2) = v5(a2, a3);
  swift_release();
  return a2 & 1;
}

uint64_t sub_1AFB43514(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AFB43530(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1AFB43530(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFB434B8(*a1, a2, a3) & 1;
}

uint64_t type metadata accessor for MoonAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1AFB4356C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for MoonStringBuilder();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for MoonStringBuilder;
  *a1 = result;
  return result;
}

void sub_1AFB435B0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for MoonDataProvider();
  swift_allocObject();
  MoonDataProvider.init()();
  a1[3] = v2;
  a1[4] = &protocol witness table for MoonDataProvider;
  *a1 = v3;
}

uint64_t sub_1AFB43604()
{
  return sub_1AFAC5080();
}

void type metadata accessor for DividerShape()
{
  OUTLINED_FUNCTION_27_0();
}

unint64_t sub_1AFB43624()
{
  unint64_t result;

  result = qword_1ED1ED100;
  if (!qword_1ED1ED100)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for DividerShape, &type metadata for DividerShape);
    atomic_store(result, (unint64_t *)&qword_1ED1ED100);
  }
  return result;
}

unint64_t sub_1AFB43660()
{
  unint64_t result;

  result = qword_1ED1ED0F8;
  if (!qword_1ED1ED0F8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for DividerShape, &type metadata for DividerShape);
    atomic_store(result, (unint64_t *)&qword_1ED1ED0F8);
  }
  return result;
}

uint64_t type metadata accessor for BundleLookup()
{
  return objc_opt_self();
}

void sub_1AFB436C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AFB4A7F0();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AFB43758()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t static RuleBuilder.buildBlock<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;

  OUTLINED_FUNCTION_3_101(0, a3, a4, a4);
  sub_1AFAEDE0C(a1, a5, a7);
  OUTLINED_FUNCTION_41();
  v12 = OUTLINED_FUNCTION_13_90(a2, a6);
  OUTLINED_FUNCTION_25_1();
  return v12;
}

void static RuleBuilder.buildBlock<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_3_101(0, a2, a3, a4);
  sub_1AFAEDE0C(a1, a4, a5);
  OUTLINED_FUNCTION_0_118();
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFB43834(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonRiseSet();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFB43870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonRiseSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MoonRiseSet.init(after:events:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v30 = a3;
  v4 = OUTLINED_FUNCTION_11_0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  v32 = OUTLINED_FUNCTION_2_71();
  v9 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_9();
  v31 = v17 - v16;
  v33 = a2;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v19 = v33 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v20 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      sub_1AFB2F2CC(v19, (uint64_t)v14);
      sub_1AFB2F2CC((uint64_t)v14, (uint64_t)v11);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v11, v4);
      sub_1AFAF8704((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v21 = sub_1B000850C();
      v22 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v22(v8, v4);
      if ((v21 & 1) == 0)
        break;
      sub_1AFB43834((uint64_t)v14);
      v19 += v20;
      if (!--v18)
        goto LABEL_5;
    }
    v23 = v31;
    sub_1AFB43870((uint64_t)v14, v31);
    v24 = v32;
    OUTLINED_FUNCTION_75(v23, 0, 1);
    v22(v34, v4);
  }
  else
  {
LABEL_5:
    v23 = v31;
    v24 = v32;
    OUTLINED_FUNCTION_75(v31, 1, 1);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v34, v4);
  }
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v23, 1, v24) == 1)
  {
    sub_1AFAF6288(v23, &qword_1ED1F2EE8);
    v25 = 1;
    v26 = v30;
  }
  else
  {
    v27 = v23;
    v26 = v30;
    sub_1AFB43870(v27, v30);
    v25 = 0;
  }
  return OUTLINED_FUNCTION_75(v26, v25, 1);
}

uint64_t MoonRiseSet.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_2_71();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0_70(v4, v7);
  v5 = OUTLINED_FUNCTION_11_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, v1, v5);
}

uint64_t storeEnumTagSinglePayload for DayMoonData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for DayMoonData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFB43B70()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for DayMoonData()
{
  uint64_t result;

  result = qword_1ED1ED060;
  if (!qword_1ED1ED060)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DayMoonData.phase.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_201() + 24));
}

uint64_t DayMoonData.riseSetEvents.getter()
{
  OUTLINED_FUNCTION_0_201();
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of WindowType.bounds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for MicaLoader()
{
  return objc_opt_self();
}

uint64_t MicaLoader.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)CAMLLoader), sel_init);
  return v0;
}

void sub_1AFB43CC0()
{
  qword_1ED1F1B60 = MEMORY[0x1E0DEE9E0];
}

uint64_t sub_1AFB43CD4()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1B0006970();
  MEMORY[0x1E0C80A78](v0);
  sub_1B0006964();
  sub_1B0006988();
  swift_allocObject();
  result = sub_1B000697C();
  qword_1ED1F2DF0 = result;
  return result;
}

uint64_t sub_1AFB43D54()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    result = sub_1B0005B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WeatherVFXEffect()
{
  return objc_opt_self();
}

unint64_t sub_1AFB43E00()
{
  unint64_t result;

  result = qword_1ED1EC538[0];
  if (!qword_1ED1EC538[0])
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherVFXView, &type metadata for WeatherVFXView);
    atomic_store(result, qword_1ED1EC538);
  }
  return result;
}

unint64_t sub_1AFB43E3C()
{
  unint64_t result;

  result = qword_1ED1ED058;
  if (!qword_1ED1ED058)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherVFXView, &type metadata for WeatherVFXView);
    atomic_store(result, (unint64_t *)&qword_1ED1ED058);
  }
  return result;
}

void WeatherVFXView.init(model:foregroundEffectsEnabled:)(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *((_BYTE *)a1 + 24);
  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v6;
  *(_QWORD *)(a3 + 32) = v7;
  *(_BYTE *)(a3 + 40) = v8;
  *(_BYTE *)(a3 + 41) = a2;
  OUTLINED_FUNCTION_12_1();
}

ValueMetadata *type metadata accessor for WeatherVFXView.ViewMetrics()
{
  return &type metadata for WeatherVFXView.ViewMetrics;
}

void sub_1AFB43EE8()
{
  xmmword_1ED1FEBE0 = 0uLL;
  qword_1ED1FEBF0 = 0;
}

uint64_t sub_1AFB43EFC()
{
  sub_1AFB43E3C();
  return sub_1B0007894();
}

uint64_t sub_1AFB43F4C()
{
  sub_1AFB43E3C();
  return sub_1B00078E8();
}

uint64_t sub_1AFB43FB0()
{
  return sub_1B0007888();
}

uint64_t type metadata accessor for WeatherVFXView._VFXView()
{
  return objc_opt_self();
}

id sub_1AFB4402C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtCV9WeatherUI14WeatherVFXViewP33_101D7DA744F6F695065549099A4FF6838_VFXView_storage;
  type metadata accessor for WeatherVFXView._VFXView.Storage();
  swift_allocObject();
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_1AFC15260();

  v13.receiver = v11;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t sub_1AFB44118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFB4415C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1B00058D8();
  if (v0 <= 0x3F)
  {
    sub_1AFB41E0C(319, &qword_1ED1F3458, (void (*)(uint64_t))type metadata accessor for BackgroundMoonData);
    if (v1 <= 0x3F)
    {
      sub_1AFB41E0C(319, (unint64_t *)&qword_1ED1F2660, (void (*)(uint64_t))MEMORY[0x1E0CEEB98]);
      if (v2 <= 0x3F)
      {
        sub_1AFB41E0C(319, &qword_1ED1ECC08, (void (*)(uint64_t))MEMORY[0x1E0DC9268]);
        if (v3 <= 0x3F)
        {
          sub_1AFB41E0C(319, &qword_1ED1ECB08, (void (*)(uint64_t))MEMORY[0x1E0CEEC08]);
          if (v4 <= 0x3F)
          {
            sub_1AFB41E0C(319, (unint64_t *)&qword_1ED1F4158, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t dispatch thunk of WeatherConditionBackgroundModelFactoryType.makeModel(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1AFB442D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for WeatherForecastDescriptionStringBuilder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WeatherConditionBackgroundModelFactory()
{
  return objc_opt_self();
}

uint64_t sub_1AFB44358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return WeatherConditionBackgroundModelFactory.makeModel(from:)(a1, a2);
}

uint64_t WeatherConditionBackgroundModelFactory.init(gradientManager:)(__int128 *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_23_69(a1);
  *(_WORD *)(v1 + 56) = 0;
  return v1;
}

uint64_t sub_1AFB44394()
{
  return sub_1B0006544();
}

uint64_t sub_1AFB443A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  unsigned __int8 v5;

  v3 = *(unsigned __int8 *)(v2 + 58);
  if (v3 != 2)
    return v3 & 1;
  if (qword_1ED1ECBA8 != -1)
    swift_once();
  sub_1AFAF897C(&qword_1ED1ECED0, a2, (uint64_t (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundModelFactory, (uint64_t)&protocol conformance descriptor for WeatherConditionBackgroundModelFactory);
  sub_1B0006550();
  result = v5;
  *(_BYTE *)(v2 + 58) = v5;
  return result;
}

uint64_t sub_1AFB44448()
{
  return sub_1AFB44464() & 1;
}

uint64_t sub_1AFB44464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];

  v0 = sub_1B00058D8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B0005B18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005ADC();
  sub_1B0005BE4();
  v8 = sub_1B0005AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 & 1;
}

uint64_t sub_1AFB44568@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  char *v27;
  uint64_t v28;
  void *v29;
  void (*v30)(char *, uint64_t);
  id v31;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a1;
  v44 = a2;
  v45 = a3;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B0006424();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B0005D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B0005FB0();
  v42 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v41 = (char *)&v34 - v19;
  if ((sub_1AFB443A0(v20, v21) & 1) != 0)
  {
    v34 = v9;
    v35 = v8;
    v36 = v5;
    v37 = v4;
    v22 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
    sub_1AFAF7DD4(v43 + *(int *)(v22 + 32), (uint64_t)v14, &qword_1ED1F2658);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
    {
      sub_1AFACE0DC((uint64_t)v14, &qword_1ED1F2658);
    }
    else
    {
      v24 = v41;
      v23 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v14, v15);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v24, v15);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v17, v15);
      if (v25 == *MEMORY[0x1E0CEEB00] || v25 == *MEMORY[0x1E0CEEAF8])
      {
        sub_1B0005FBC();
        sub_1B0005CF8();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
        v27 = v39;
        sub_1B0006418();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
        v28 = v40;
        v29 = (void *)sub_1B0005050();
        v30 = *(void (**)(char *, uint64_t))(v38 + 8);
        v30(v27, v28);
        v31 = objc_msgSend((id)objc_opt_self(), sel_metersPerSecond);
        sub_1AFB39FC4();
        sub_1B000505C();
        sub_1B00050E0();

        v30(v27, v28);
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v24, v15);
      }
      v33 = *(void (**)(char *, uint64_t))(v23 + 8);
      v33(v17, v15);
      v33(v24, v15);
    }
    v5 = v36;
    v4 = v37;
    v9 = v34;
    v8 = v35;
  }
  sub_1B0005FBC();
  sub_1B0005CF8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1B0006418();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AFB44910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v85 = a4;
  v94 = a3;
  v95 = a2;
  v98 = a5;
  v86 = sub_1B0005B84();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v82 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B0008B00();
  v92 = *(_QWORD *)(v7 - 8);
  v93 = v7;
  MEMORY[0x1E0C80A78](v7);
  v91 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4220);
  MEMORY[0x1E0C80A78](v77);
  v78 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v75);
  v90 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v88 = (uint64_t)&v72 - v12;
  MEMORY[0x1E0C80A78](v13);
  v89 = (uint64_t)&v72 - v14;
  MEMORY[0x1E0C80A78](v15);
  v87 = (uint64_t)&v72 - v16;
  MEMORY[0x1E0C80A78](v17);
  v83 = (char *)&v72 - v18;
  MEMORY[0x1E0C80A78](v19);
  v81 = (uint64_t)&v72 - v20;
  MEMORY[0x1E0C80A78](v21);
  v80 = (char *)&v72 - v22;
  MEMORY[0x1E0C80A78](v23);
  v79 = (uint64_t)&v72 - v24;
  MEMORY[0x1E0C80A78](v25);
  v97 = (uint64_t)&v72 - v26;
  MEMORY[0x1E0C80A78](v27);
  v96 = (uint64_t)&v72 - v28;
  MEMORY[0x1E0C80A78](v29);
  v74 = (uint64_t)&v72 - v30;
  MEMORY[0x1E0C80A78](v31);
  v76 = (char *)&v72 - v32;
  v33 = sub_1B00058D8();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v73 = (char *)&v72 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v72 - v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v72 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1B000652C();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v72 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v72 - v47;
  sub_1AFAF7DD4(a1, (uint64_t)v41, &qword_1ED1F4080);
  v49 = sub_1B0005BFC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v49) == 1)
  {
    v72 = v42;
    sub_1AFACE0DC((uint64_t)v41, &qword_1ED1F4080);
    v50 = v95;
    v51 = *(_BYTE *)(v95 + 56);
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v52(v38, v94, v33);
    if ((v51 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
      goto LABEL_15;
    }
    if (qword_1ED1EC498 != -1)
      swift_once();
    v58 = __swift_project_value_buffer(v75, (uint64_t)qword_1ED1EC9F8);
    v59 = (uint64_t)v76;
    v52(v76, (uint64_t)v38, v33);
    __swift_storeEnumTagSinglePayload(v59, 0, 1, v33);
    v60 = v78;
    v61 = v78 + *(int *)(v77 + 48);
    sub_1AFAF7DD4(v58, v78, &qword_1ED1F4BA0);
    sub_1AFAF7DD4(v59, v61, &qword_1ED1F4BA0);
    if (__swift_getEnumTagSinglePayload(v60, 1, v33) == 1)
    {
      sub_1AFACE0DC(v59, &qword_1ED1F4BA0);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
      if (__swift_getEnumTagSinglePayload(v61, 1, v33) == 1)
      {
        sub_1AFACE0DC(v60, &qword_1ED1F4BA0);
        goto LABEL_15;
      }
    }
    else
    {
      v62 = v74;
      sub_1AFAF7DD4(v60, v74, &qword_1ED1F4BA0);
      if (__swift_getEnumTagSinglePayload(v61, 1, v33) != 1)
      {
        v64 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v73, v61, v33);
        sub_1AFAF897C(&qword_1ED1F2630, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v65 = v62;
        v66 = sub_1B0008530();
        v67 = *(void (**)(char *, uint64_t))(v34 + 8);
        v68 = v64;
        v50 = v95;
        v67(v68, v33);
        sub_1AFACE0DC(v59, &qword_1ED1F4BA0);
        v67(v38, v33);
        v67((char *)v65, v33);
        sub_1AFACE0DC(v60, &qword_1ED1F4BA0);
        if ((v66 & 1) != 0)
          goto LABEL_15;
        goto LABEL_14;
      }
      sub_1AFACE0DC(v59, &qword_1ED1F4BA0);
      v63 = *(void (**)(char *, uint64_t))(v34 + 8);
      v63(v38, v33);
      v63((char *)v62, v33);
    }
    sub_1AFACE0DC(v60, &qword_1ED1F4220);
LABEL_14:
    if (*(_BYTE *)(v50 + 57) != 1)
    {
      v55 = 1;
      v56 = v98;
      goto LABEL_16;
    }
LABEL_15:
    sub_1B00068A4();
    v69 = v82;
    sub_1B00068D4();
    v70 = v91;
    sub_1B0008B0C();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v69, v86);
    __swift_storeEnumTagSinglePayload(v96, 1, 1, v33);
    __swift_storeEnumTagSinglePayload(v97, 1, 1, v33);
    __swift_storeEnumTagSinglePayload(v79, 1, 1, v33);
    sub_1B0008AF4();
    __swift_storeEnumTagSinglePayload(v81, 1, 1, v33);
    sub_1B0008AE8();
    __swift_storeEnumTagSinglePayload(v87, 1, 1, v33);
    __swift_storeEnumTagSinglePayload(v89, 1, 1, v33);
    __swift_storeEnumTagSinglePayload(v88, 1, 1, v33);
    __swift_storeEnumTagSinglePayload(v90, 1, 1, v33);
    v56 = v98;
    sub_1B0006508();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v70, v93);
    v55 = 0;
LABEL_16:
    v57 = v72;
    return __swift_storeEnumTagSinglePayload(v56, v55, 1, v57);
  }
  sub_1B0005BD8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v41, v49);
  v53 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  v53(v48, v45, v42);
  v54 = v98;
  v53((char *)v98, v48, v42);
  v55 = 0;
  v56 = v54;
  v57 = v42;
  return __swift_storeEnumTagSinglePayload(v56, v55, 1, v57);
}

uint64_t sub_1AFB4515C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_1B0005D1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1AFB443A0(v11, v12) & 1) == 0)
    goto LABEL_4;
  v13 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  sub_1AFAF7DD4(a1 + *(int *)(v13 + 32), (uint64_t)v10, &qword_1ED1F2658);
  v14 = sub_1B0005FB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14) == 1)
  {
    sub_1AFACE0DC((uint64_t)v10, &qword_1ED1F2658);
LABEL_4:
    sub_1B0005FBC();
    sub_1B0005D10();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a2, v10, v14);
}

Swift::Void __swiftcall WeatherConditionBackgroundManagerType.executeRequests()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 40))(0);
}

uint64_t dispatch thunk of WeatherConditionBackgroundManagerType.addRemovalRequests(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of WeatherConditionBackgroundManagerType.addLoadRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for WeatherEventDescriptionStringBuilder()
{
  return objc_opt_self();
}

void WeatherEventDescriptionStringBuilder.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  type metadata accessor for SevereWeatherStringBuilder();
  OUTLINED_FUNCTION_20();
  v0[2] = SevereWeatherStringBuilder.init()();
  type metadata accessor for NextHourPrecipitationStringBuilder();
  v0[3] = OUTLINED_FUNCTION_20();
  v2 = type metadata accessor for WeatherChangeStringBuilder();
  v3 = OUTLINED_FUNCTION_20();
  v1[7] = v2;
  v1[8] = &off_1E608EB28;
  v1[4] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for WeatherConditionConfigurationManager()
{
  return objc_opt_self();
}

__n128 WeatherConditionConfigurationManager.init()()
{
  __n128 *v0;
  __n128 result;

  __asm { FMOV            V0.2D, #9.0 }
  v0[1] = result;
  return result;
}

uint64_t sub_1AFB45394(uint64_t a1)
{
  return WeatherConditionConfigurationManager.load(for:)(a1);
}

void sub_1AFB453B4(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_1AFB453EC
     + 4
     * byte_1B0033A19[*(unsigned __int8 *)(a1
                                         + *(int *)(type metadata accessor for WeatherConditionConfigurationModel() + 64))];
  __asm { BR              X10 }
}

uint64_t sub_1AFB453EC()
{
  return ((uint64_t (*)(void))static Array<A>.compact())();
}

uint64_t sub_1AFB453F8()
{
  return ((uint64_t (*)(void))static Array<A>.performance())();
}

uint64_t sub_1AFB45404()
{
  return ((uint64_t (*)(void))static Array<A>.portraitRegular())();
}

uint64_t sub_1AFB45410()
{
  return ((uint64_t (*)(void))static Array<A>.landscapeRegular())();
}

uint64_t sub_1AFB4541C()
{
  return ((uint64_t (*)(void))static Array<A>.ultrawide())();
}

uint64_t sub_1AFB45428()
{
  return ((uint64_t (*)(void))static Array<A>.watch())();
}

uint64_t sub_1AFB45434()
{
  return static Array<A>.maglev()();
}

uint64_t sub_1AFB45440@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  double v10;

  sub_1AFB453B4(a1);
  v7 = Array<A>.withSunToggled(visible:)(a2, v6);
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for WeatherConditionConfigurationModel();
  v9 = Array<A>.timeShifted(sunrise:sunset:timeZone:)(a1 + v8[10], a1 + v8[11], a1 + v8[12], v7);
  swift_bridgeObjectRelease();
  v10 = Date.exactTimeOfDay(in:)();
  static SunPositionKeyframe.interpolated(for:keyframes:)(v9, a3, v10);
  return swift_bridgeObjectRelease();
}

void sub_1AFB454EC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[9];

  v18[0] = 0;
  sub_1AFB2B798();
  sub_1AFB2817C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x3F0000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 25, 0, 3500, 100, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003D23D70ALL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFB45C8C(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)())((char *)sub_1AFB45CA8 + 4 * byte_1B0033A10[*a2]))();
}

uint64_t sub_1AFB45CCC(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1AFB45CE8 + 4 * byte_1B0033A22[a1]))();
}

uint64_t type metadata accessor for WeatherServiceConfigurationProvider()
{
  return objc_opt_self();
}

unint64_t sub_1AFB45D9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1ECEC8;
  if (!qword_1ED1ECEC8)
  {
    v1 = type metadata accessor for WeatherServiceConfigurationProvider();
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for WeatherServiceConfigurationProvider, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1ECEC8);
  }
  return result;
}

uint64_t sub_1AFB45DE0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WeatherConditionPlaybackCoordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeatherConditionPlaybackCoordinator);
}

uint64_t sub_1AFB45E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  sub_1AFACF5D0();
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 24) = a1;
  *(_BYTE *)(v1 + 32) = 1;
  return v1;
}

void sub_1AFB45E98(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  sub_1AFACF5D0();
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 24) = a1;
  *(_BYTE *)(v2 + 32) = v4;
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall WeatherConditionPlaybackCoordinator.play(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1ED1F4030 != -1)
      swift_once();
    v2 = sub_1B0006D00();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED1F4018);
    oslog = sub_1B0006CE8();
    v3 = sub_1B00089BC();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1AFABF000, oslog, v3, "VFX play request was ignored because playback is blocked", v4, 2u);
      MEMORY[0x1B5E03CC0](v4, -1, -1);
    }

  }
  else
  {
    sub_1AFAD00D4(a1, 0, 0, 1.0);
  }
}

uint64_t sub_1AFB45FC8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AFB46004(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherConditionConfigurationModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFB46040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionConfigurationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AFB46084()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1B0005FB0();
  if (v0 <= 0x3F)
  {
    sub_1AFB4C15C(319, &qword_1ED1F4218, (uint64_t (*)(uint64_t))sub_1AFB39FC4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
    if (v1 <= 0x3F)
    {
      sub_1B00058D8();
      if (v2 <= 0x3F)
      {
        sub_1AFB4C15C(319, (unint64_t *)&qword_1ED1F4158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
        {
          sub_1B0005B84();
          if (v4 <= 0x3F)
          {
            sub_1AFB4C15C(319, &qword_1ED1F3458, (uint64_t (*)(uint64_t))type metadata accessor for BackgroundMoonData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            if (v5 <= 0x3F)
            {
              sub_1B0007480();
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for WeatherConditionConfigurationModel()
{
  uint64_t result;

  result = qword_1ED1F29C8;
  if (!qword_1ED1F29C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WeatherConditionBackgroundOptions.locationViewerOrientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t WeatherConditionBackgroundOptions.canShowCollisionLayer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t WeatherConditionBackgroundOptions.applyLegibilityScrim.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

void WeatherConditionBackgroundOptions.cameraPositionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

void WeatherConditionBackgroundOptions.displayLocation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 34);
}

BOOL WeatherConditionBackgroundOptions.DisplayLocation.canDisplayForegroundEffects.getter()
{
  _BYTE *v0;
  BOOL v1;

  if (*v0)
    v1 = *v0 == 3;
  else
    v1 = 1;
  return !v1;
}

uint64_t WeatherConditionBackgroundOptions.effectViewID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1AFAF1B38(v2, v3);
}

uint64_t WeatherConditionBackgroundOptions.locationIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WeatherConditionBackgroundManager()
{
  return objc_opt_self();
}

void sub_1AFB462D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1AFAF897C(&qword_1ED1F28B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundManager, (uint64_t)&protocol conformance descriptor for WeatherConditionBackgroundManager);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t WeatherConditionBackgroundManager.vfxScene.getter()
{
  uint64_t v1;

  sub_1B0006A90();
  return v1;
}

uint64_t sub_1AFB4634C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1B0008A64();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B0008A4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1B00083C8();
  MEMORY[0x1E0C80A78](v6);
  sub_1AFAEC5C0(0, (unint64_t *)&qword_1ED1F3BF8);
  sub_1B00083BC();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1AFAF897C(&qword_1ED1F3BF0, 255, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BA8);
  sub_1AFB3A900(&qword_1ED1F3BB0, &qword_1ED1F3BA8);
  sub_1B0008C68();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1B0008A88();
  qword_1ED1F28B0 = result;
  return result;
}

uint64_t sub_1AFB4651C()
{
  swift_retain();
  sub_1B0006B20();
  return swift_release();
}

uint64_t sub_1AFB4655C()
{
  unsigned __int8 v1;

  swift_retain();
  sub_1B0006B14();
  swift_release();
  return v1;
}

BOOL WeatherConditionBackgroundManager.isVfxSceneLoaded.getter()
{
  void *v1;

  sub_1B0006A84();
  if (v1)

  return v1 != 0;
}

uint64_t sub_1AFB465DC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B0006CAC() - 8) + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), &v1[(v2 + 40) & ~v2]);
}

uint64_t sub_1AFB46620()
{
  return sub_1AFB465DC((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_1AFB4662C);
}

uint64_t sub_1AFB4662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  char *v13;
  uint64_t v14;

  v8 = sub_1B0006CAC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
    v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v13 = (char *)swift_allocObject();
    *((_QWORD *)v13 + 2) = a2;
    *((_QWORD *)v13 + 3) = a3;
    *((_QWORD *)v13 + 4) = a1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B0006B8C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFB46758()
{
  uint64_t v0;

  return sub_1AFAC36FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1AFB46770()
{
  uint64_t v0;

  return sub_1AFAD86F0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1AFB46780()
{
  uint64_t v0;

  return sub_1AFAF11AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1AFB4678C()
{
  return sub_1B0006A48();
}

uint64_t sub_1AFB46798()
{
  return sub_1B0006A00();
}

void sub_1AFB467A0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;

  if ((sub_1AFB4655C() & 1) != 0)
  {
    if (qword_1ED1F4030 != -1)
      swift_once();
    v0 = sub_1B0006D00();
    __swift_project_value_buffer(v0, (uint64_t)qword_1ED1F4018);
    v1 = sub_1B0006CE8();
    v2 = sub_1B00089D4();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1AFABF000, v1, v2, "Preparing scene is allowed; app is in the foreground", v3, 2u);
      MEMORY[0x1B5E03CC0](v3, -1, -1);
    }

    sub_1B0006988();
    swift_retain();
    sub_1B0006AA8();
    swift_release();
  }
  else
  {
    if (qword_1ED1F4030 != -1)
      swift_once();
    v4 = sub_1B0006D00();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED1F4018);
    oslog = sub_1B0006CE8();
    v5 = sub_1B00089D4();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1AFABF000, oslog, v5, "Skipping preparing scene; app is in the background", v6, 2u);
      MEMORY[0x1B5E03CC0](v6, -1, -1);
    }

  }
}

double sub_1AFB46984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double v21;
  double result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[2336];
  _OWORD v35[146];
  _QWORD v36[292];
  uint64_t v37;
  _QWORD v38[292];
  _BYTE v39[2336];
  _BYTE v40[2336];
  _QWORD v41[292];
  _OWORD v42[146];

  v2 = MEMORY[0x1E0C80A78](a1);
  v3 = v1;
  v5 = v4;
  v6 = v2;
  v8 = v7;
  v9 = type metadata accessor for BackgroundAnimationData.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v42, v5, 0x918uLL);
  v12 = type metadata accessor for VFXLoadRequest(0);
  sub_1AFAF2DFC(v6 + *(int *)(v12 + 24), (uint64_t)v11, type metadata accessor for BackgroundAnimationData.Model);
  v13 = &v11[*(int *)(v9 + 48)];
  v14 = *((_QWORD *)v13 + 3);
  v32 = v12;
  v33 = v6;
  v15 = 0x6E6F697461636F6CLL;
  v16 = 0xEE00726577656956;
  switch(v14)
  {
    case 0:
      break;
    case 1:
      v16 = 0xEF77656976657250;
      break;
    case 2:
      v16 = 0x80000001B0067030;
      v15 = 0xD000000000000015;
      break;
    case 3:
      v16 = 0xEB00000000776569;
      v15 = 0x5674736554786676;
      break;
    case 4:
      v16 = 0xE600000000000000;
      v15 = 0x726574736F70;
      break;
    default:
      v36[0] = 0x2D7473696CLL;
      v36[1] = 0xE500000000000000;
      sub_1B0008644();
      v15 = v36[0];
      v16 = v36[1];
      break;
  }
  v18 = v3[16];
  v17 = v3[17];
  __swift_project_boxed_opaque_existential_1(v3 + 13, v18);
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  v20 = sub_1AFE9DB4C(v19);

  if (!v20)
  {
    sub_1AFAE2D74((uint64_t)v11, type metadata accessor for BackgroundAnimationData.Model);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)v8 = 1;
    *(_BYTE *)(v8 + 24) = 0;
    return result;
  }
  v41[0] = v15;
  v41[1] = v16;
  swift_bridgeObjectRetain();
  sub_1B0006AE4();
  swift_bridgeObjectRelease();
  sub_1AFAE8274((uint64_t)v36, (uint64_t)v39, &qword_1ED1F28A8);
  memcpy(v40, v42, 0x918uLL);
  GEOLocationCoordinate2DMake(v40, v21);
  sub_1AFAE8274((uint64_t)v40, (uint64_t)v38, &qword_1ED1F28A8);
  sub_1AFAE8274((uint64_t)v39, (uint64_t)v41, &qword_1ED1F28A8);
  if (sub_1AFD9E434((uint64_t)v41) == 1)
  {
    memcpy(v35, v38, 0x918uLL);
    sub_1AFCCB3FC((uint64_t)v42);
    sub_1AFCCB3FC((uint64_t)v42);
    sub_1AFCCB4E4((uint64_t)v35);
    sub_1AFAE8274((uint64_t)v40, (uint64_t)v36, &qword_1ED1F28A8);
    sub_1AFAE8274((uint64_t)v39, (uint64_t)&v37, &qword_1ED1F28A8);
    sub_1AFEA4438((uint64_t)v36);
LABEL_13:
    memcpy(v36, v42, 0x918uLL);
    sub_1AFAE8274((uint64_t)v39, (uint64_t)v38, &qword_1ED1F28A8);
    v34[0] = 0;
    v34[2335] = v13[33];
    v25 = v33;
    VFXLoadRequest.hasLocationChanged.getter();
    v26 = v25 + *(int *)(v32 + 28);
    v27 = *(_QWORD *)(v26 + 96);
    v28 = *(_OWORD *)(v26 + 16);
    v35[0] = *(_OWORD *)v26;
    v35[1] = v28;
    v29 = *(_OWORD *)(v26 + 48);
    v35[2] = *(_OWORD *)(v26 + 32);
    v35[3] = v29;
    v30 = *(_OWORD *)(v26 + 80);
    v35[4] = *(_OWORD *)(v26 + 64);
    v35[5] = v30;
    *(_QWORD *)&v35[6] = v27;
    BYTE8(v35[6]) = 0;
    WeatherVFXEffect.applyUpdate(_:lastConfiguration:effectType:cameraPositionType:hasLocationChanged:gradient:)((uint64_t)v36);
    sub_1AFEA3C7C(v39, sub_1AFEA3A34);
    sub_1AFAE8274((uint64_t)v40, (uint64_t)v36, &qword_1ED1F28A8);
    v38[0] = v15;
    v38[1] = v16;
    sub_1AFCCB3FC((uint64_t)v42);
    sub_1B0006AF0();
    sub_1AFAE2D74((uint64_t)v11, type metadata accessor for BackgroundAnimationData.Model);
    goto LABEL_14;
  }
  sub_1AFAE8274((uint64_t)v39, (uint64_t)v35, &qword_1ED1F28A8);
  memcpy(v34, v35, 0x918uLL);
  sub_1AFCCB3FC((uint64_t)v42);
  sub_1AFCCB3FC((uint64_t)v42);
  static WeatherConditionBackgroundConfig.== infix(_:_:)();
  v24 = v23;
  memcpy(v36, v38, 0x918uLL);
  sub_1AFCCB4E4((uint64_t)v36);
  sub_1AFCCB4E4((uint64_t)v42);
  if ((v24 & 1) == 0)
    goto LABEL_13;
  sub_1AFAE2D74((uint64_t)v11, type metadata accessor for BackgroundAnimationData.Model);
  swift_bridgeObjectRelease();
  sub_1AFEA3C7C(v39, sub_1AFEA3A34);
LABEL_14:
  v31 = *(id *)(v20 + 16);
  swift_release();
  *(_QWORD *)v8 = v31;
  result = *(double *)&v42[1];
  *(_OWORD *)(v8 + 8) = v42[1];
  *(_BYTE *)(v8 + 24) = 1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionLightingKeyframe()
{
  return &type metadata for WeatherConditionLightingKeyframe;
}

uint64_t storeEnumTagSinglePayload for WeatherConditionBackgroundConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 2328) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 776) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 2328) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherConditionBackgroundConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 2328))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 776);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for WeatherConditionBackgroundConfig()
{
  OUTLINED_FUNCTION_27_0();
}

void sub_1AFB471E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int128 a29,uint64_t a30,int a31,uint64_t a32,uint64_t a33,__int128 a34,__int128 a35,__int128 a36,int a37,uint64_t a38,__int128 a39,__int128 a40,__int128 a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,__int128 a48,__int128 a49,int a50,int a51,uint64_t a52,int a53,int a54,uint64_t a55,__int128 a56,__int128 a57,int a58,int a59,int a60,int a61,__int128 a62,uint64_t a63)
{
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  unint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  int v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  int v94;
  int v95;
  unint64_t v96;
  __int128 v97;
  __int128 v98;
  int v99;
  int v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  unint64_t v104;
  __int128 v105;
  int v106;
  unint64_t v107;
  unint64_t v108;
  int v109;
  int v110;
  __int128 v111;
  __int128 v112;
  int v113;
  unint64_t v114;
  unint64_t v115;
  int v116;
  int v117;
  __int128 v118;
  __int128 v119;
  int v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  int v124;
  __int128 v125;
  __int128 v126;
  int v127;
  unint64_t v128;
  unint64_t v129;
  int v130;
  int v131;
  unint64_t v132;
  char v133;
  char v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;
  int v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char v152;
  int v153;
  uint64_t v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  int v158;
  unint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  unint64_t v163;
  __int128 v164;
  unint64_t v165;
  char *v166;
  __int128 v167;
  __int128 v168;
  int v169;
  int v170;
  int v171;
  __int128 v172;
  int v173;
  __int128 *v174;
  unint64_t v175;
  __int128 v176;
  __int128 v177;
  unint64_t v178;
  int v179;
  char v180;
  unint64_t v181;
  __int128 v182;
  unint64_t v183;
  __int128 v184;
  __int128 v185;
  unint64_t v186;
  int v187;
  int v188;
  unint64_t v189;
  char v190;
  int v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  int v198;
  int v199;
  __int128 v200;
  int v201;
  unint64_t v202;
  __int128 v203;
  int v204;
  char v205;
  char v206;
  unint64_t v207;
  char v208;
  char v209;
  unint64_t v210;
  char v211;
  char v212;
  __int128 v213;
  char v214;
  char v215;
  __int128 v216;
  char v217;
  char v218;
  __int128 v219;
  char v220;
  char v221;
  char v222;
  __int128 v223;
  char v224;
  char v225;
  __int128 v226;
  char v227;
  char v228;
  __int128 v229;
  char v230;
  unint64_t v231;
  char v232;
  int v233;
  char v234;
  char v235;
  unint64_t v236;
  char v237;
  char v238;
  char v239;
  char v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  __int128 v248;
  __int128 v249;
  int v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  __int128 v261;
  __int128 v262;
  unint64_t v263;
  int v264;
  __int128 v265;
  __int128 v266;
  int v267;
  int v268;
  int v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  _BYTE v276[96];

  OUTLINED_FUNCTION_62();
  v260 = v63;
  v259 = v64;
  v258 = v65;
  v257 = v66;
  v256 = v67;
  v255 = v68;
  v254 = v69;
  v253 = v70;
  v252 = v71;
  v251 = v72;
  v250 = v73;
  v249 = v74;
  v248 = v75;
  v247 = v76;
  v246 = v77;
  v79 = v78;
  v275 = *(_OWORD *)&STACK[0x10F0];
  v274 = *(_OWORD *)&STACK[0x10E0];
  v273 = *(_OWORD *)&STACK[0x10D0];
  v272 = *(_OWORD *)&STACK[0x10C0];
  v271 = *(_OWORD *)&STACK[0x10B0];
  v270 = *(_OWORD *)&STACK[0x10A0];
  v269 = STACK[0x1094];
  v268 = STACK[0x1090];
  v267 = STACK[0x1080];
  v266 = *(_OWORD *)&STACK[0x1070];
  v265 = *(_OWORD *)&STACK[0x1060];
  v264 = STACK[0x1050];
  v263 = STACK[0x1048];
  v262 = *(_OWORD *)&STACK[0x1038];
  v152 = *v80;
  v139 = *(_OWORD *)STACK[0xC00];
  v138 = *(_OWORD *)(STACK[0xC00] + 16);
  v156 = *(_QWORD *)(STACK[0xC00] + 32);
  v141 = *(_OWORD *)STACK[0xC60];
  v140 = *(_OWORD *)(STACK[0xC60] + 16);
  v154 = *(_QWORD *)(STACK[0xC60] + 32);
  v143 = *(_OWORD *)STACK[0xCC0];
  v142 = *(_OWORD *)(STACK[0xCC0] + 16);
  v151 = *(_QWORD *)(STACK[0xCC0] + 32);
  v197 = *(_OWORD *)STACK[0xD20];
  v196 = *(_OWORD *)(STACK[0xD20] + 16);
  v149 = *(_QWORD *)(STACK[0xD20] + 32);
  v194 = *(_OWORD *)STACK[0xD58];
  v193 = *(_OWORD *)(STACK[0xD58] + 16);
  v146 = *(_QWORD *)(STACK[0xD58] + 32);
  v240 = *(_BYTE *)STACK[0xEC0];
  v239 = *(_BYTE *)(STACK[0xEC0] + 1);
  v238 = *(_BYTE *)(STACK[0xEC0] + 2);
  v237 = *(_BYTE *)(STACK[0xEC0] + 3);
  v235 = *(_BYTE *)(STACK[0xEC0] + 4);
  v234 = *(_BYTE *)(STACK[0xEC0] + 5);
  v232 = *(_BYTE *)(STACK[0xEC0] + 6);
  v230 = *(_BYTE *)(STACK[0xEC0] + 7);
  v228 = *(_BYTE *)(STACK[0xEC0] + 8);
  v227 = *(_BYTE *)(STACK[0xEC0] + 9);
  v225 = *(_BYTE *)(STACK[0xEC0] + 10);
  v224 = *(_BYTE *)(STACK[0xEC0] + 11);
  v221 = *(_BYTE *)(STACK[0xEC0] + 12);
  v220 = *(_BYTE *)(STACK[0xEC0] + 13);
  v218 = *(_BYTE *)(STACK[0xEC0] + 14);
  v217 = *(_BYTE *)(STACK[0xEC0] + 15);
  v215 = *(_BYTE *)(STACK[0xEC0] + 16);
  v214 = *(_BYTE *)(STACK[0xEC0] + 17);
  v212 = *(_BYTE *)(STACK[0xEC0] + 18);
  v211 = *(_BYTE *)(STACK[0xEC0] + 19);
  v209 = *(_BYTE *)(STACK[0xEC0] + 20);
  v208 = *(_BYTE *)(STACK[0xEC0] + 21);
  v206 = *(_BYTE *)(STACK[0xEC0] + 22);
  v205 = *(_BYTE *)(STACK[0xEC0] + 23);
  v245 = STACK[0x1100];
  v244 = STACK[0x1088];
  v243 = STACK[0xFB0];
  v242 = STACK[0xF70];
  v241 = STACK[0xF60];
  v236 = STACK[0xF30];
  v231 = STACK[0xF24];
  v222 = STACK[0xF10];
  v190 = STACK[0xEBC];
  v186 = STACK[0xE70];
  v183 = STACK[0xE50];
  v181 = STACK[0xE48];
  v180 = STACK[0xDF8];
  v137 = STACK[0xDB8];
  v136 = STACK[0xDA0];
  v135 = STACK[0xD70];
  v134 = STACK[0xD60];
  v133 = STACK[0xD54];
  v132 = STACK[0xD08];
  v81 = STACK[0xD00];
  v82 = STACK[0xCA8];
  v83 = STACK[0xCA0];
  v84 = STACK[0xC48];
  v85 = STACK[0xC40];
  v86 = STACK[0xB00];
  v174 = (__int128 *)STACK[0xED0];
  v166 = (char *)STACK[0xED8];
  v233 = STACK[0x1030];
  v229 = *(_OWORD *)&STACK[0x1020];
  v226 = *(_OWORD *)&STACK[0x1010];
  v223 = *(_OWORD *)&STACK[0x1000];
  v219 = *(_OWORD *)&STACK[0xFF0];
  v216 = *(_OWORD *)&STACK[0xFE0];
  v213 = *(_OWORD *)&STACK[0xFD0];
  v210 = STACK[0xFC8];
  v207 = STACK[0xFC0];
  v204 = STACK[0xFB8];
  v203 = *(_OWORD *)&STACK[0xFA0];
  v202 = STACK[0xF98];
  v201 = STACK[0xF90];
  v200 = *(_OWORD *)&STACK[0xF80];
  v199 = STACK[0xF78];
  v198 = STACK[0xF68];
  v195 = *(_OWORD *)&STACK[0xF50];
  v191 = STACK[0xF48];
  v189 = STACK[0xF40];
  v188 = STACK[0xF38];
  v187 = STACK[0xF2C];
  v192 = *(_OWORD *)&STACK[0xF14];
  v185 = *(_OWORD *)&STACK[0xF00];
  v184 = *(_OWORD *)&STACK[0xEF0];
  v182 = *(_OWORD *)&STACK[0xEE0];
  v179 = STACK[0xEB8];
  v178 = STACK[0xEB0];
  v177 = *(_OWORD *)&STACK[0xEA0];
  v176 = *(_OWORD *)&STACK[0xE90];
  v175 = STACK[0xE80];
  v173 = STACK[0xE78];
  v172 = *(_OWORD *)&STACK[0xE60];
  v171 = STACK[0xE58];
  v170 = STACK[0xE44];
  v169 = STACK[0xE40];
  v168 = *(_OWORD *)&STACK[0xE30];
  v167 = *(_OWORD *)&STACK[0xE20];
  v165 = STACK[0xE10];
  v164 = *(_OWORD *)&STACK[0xDFC];
  v163 = STACK[0xDF0];
  v162 = *(_OWORD *)&STACK[0xDE0];
  v161 = *(_OWORD *)&STACK[0xDD0];
  v160 = *(_OWORD *)&STACK[0xDC0];
  v159 = STACK[0xDB0];
  v158 = STACK[0xDA8];
  v157 = *(_OWORD *)&STACK[0xD90];
  v155 = *(_OWORD *)&STACK[0xD80];
  v153 = STACK[0xD78];
  v150 = STACK[0xD68];
  v148 = STACK[0xD50];
  v147 = *(_OWORD *)&STACK[0xD40];
  v145 = *(_OWORD *)&STACK[0xD30];
  v144 = *(_OWORD *)&STACK[0xD10];
  v131 = STACK[0xCFC];
  v130 = STACK[0xCF8];
  v129 = STACK[0xCF0];
  v128 = STACK[0xCE8];
  v127 = STACK[0xCE0];
  v126 = *(_OWORD *)&STACK[0xCD0];
  v125 = *(_OWORD *)&STACK[0xCB0];
  v124 = STACK[0xC9C];
  v123 = STACK[0xC98];
  v122 = STACK[0xC90];
  v121 = STACK[0xC88];
  v120 = STACK[0xC80];
  v119 = *(_OWORD *)&STACK[0xC70];
  v118 = *(_OWORD *)&STACK[0xC50];
  v117 = STACK[0xC3C];
  v116 = STACK[0xC38];
  v115 = STACK[0xC30];
  v114 = STACK[0xC28];
  v113 = STACK[0xC20];
  v112 = *(_OWORD *)&STACK[0xC10];
  v111 = *(_OWORD *)&STACK[0xBF0];
  v110 = STACK[0xBEC];
  v109 = STACK[0xBE8];
  v108 = STACK[0xBE0];
  v107 = STACK[0xBD8];
  v106 = STACK[0xBD0];
  v105 = *(_OWORD *)&STACK[0xBC0];
  v104 = STACK[0xBB0];
  v103 = *(_OWORD *)&STACK[0xBA0];
  v102 = *(_OWORD *)&STACK[0xB90];
  v101 = *(_OWORD *)&STACK[0xB80];
  v100 = STACK[0xB74];
  v99 = STACK[0xB70];
  v98 = *(_OWORD *)&STACK[0xB60];
  v97 = *(_OWORD *)&STACK[0xB50];
  v96 = STACK[0xB48];
  v95 = STACK[0xB44];
  v94 = STACK[0xB40];
  v93 = *(_OWORD *)&STACK[0xB30];
  v92 = *(_OWORD *)&STACK[0xB20];
  v91 = STACK[0xB10];
  v90 = STACK[0xB08];
  v89 = *(_OWORD *)&STACK[0xAF0];
  v88 = *(_OWORD *)&STACK[0xAE0];
  OUTLINED_FUNCTION_9_64(v276, (const void *)STACK[0xEC8]);
  *(_QWORD *)v79 = v246;
  *(_QWORD *)(v79 + 16) = v247;
  *(_OWORD *)(v79 + 32) = v248;
  *(_OWORD *)(v79 + 48) = v249;
  *(_DWORD *)(v79 + 64) = v250;
  *(_DWORD *)(v79 + 68) = v251;
  *(_QWORD *)(v79 + 72) = v252;
  *(_DWORD *)(v79 + 80) = v253;
  *(_OWORD *)(v79 + 84) = a29;
  *(_DWORD *)(v79 + 108) = a31;
  *(_QWORD *)(v79 + 112) = a32;
  *(_OWORD *)(v79 + 128) = a34;
  *(_OWORD *)(v79 + 144) = a35;
  *(_OWORD *)(v79 + 160) = a36;
  *(_DWORD *)(v79 + 176) = a37;
  *(_QWORD *)(v79 + 184) = a38;
  *(_OWORD *)(v79 + 192) = a39;
  *(_OWORD *)(v79 + 208) = a40;
  *(_OWORD *)(v79 + 224) = a41;
  *(_DWORD *)(v79 + 248) = a43;
  *(_QWORD *)(v79 + 256) = a44;
  *(_DWORD *)(v79 + 272) = a46;
  *(_OWORD *)(v79 + 288) = a48;
  *(_OWORD *)(v79 + 304) = a49;
  *(_DWORD *)(v79 + 320) = a50;
  *(_DWORD *)(v79 + 324) = a51;
  *(_QWORD *)(v79 + 328) = a52;
  *(_DWORD *)(v79 + 336) = a53;
  *(_DWORD *)(v79 + 340) = a54;
  *(_OWORD *)(v79 + 352) = a56;
  *(_OWORD *)(v79 + 368) = a57;
  *(_DWORD *)(v79 + 388) = a58;
  *(_DWORD *)(v79 + 392) = a59;
  *(_DWORD *)(v79 + 416) = a60;
  *(_DWORD *)(v79 + 420) = a61;
  *(_OWORD *)(v79 + 432) = a62;
  *(_QWORD *)(v79 + 448) = a63;
  *(_OWORD *)(v79 + 464) = v88;
  *(_OWORD *)(v79 + 480) = v89;
  *(_DWORD *)(v79 + 504) = v90;
  *(_QWORD *)(v79 + 512) = v91;
  *(_OWORD *)(v79 + 528) = v92;
  *(_OWORD *)(v79 + 544) = v93;
  *(_DWORD *)(v79 + 560) = v94;
  *(_DWORD *)(v79 + 564) = v95;
  *(_QWORD *)(v79 + 568) = v96;
  *(_OWORD *)(v79 + 576) = v97;
  *(_OWORD *)(v79 + 592) = v98;
  *(_DWORD *)(v79 + 608) = v99;
  *(_DWORD *)(v79 + 612) = v100;
  *(_OWORD *)(v79 + 624) = v101;
  *(_OWORD *)(v79 + 640) = v102;
  *(_OWORD *)(v79 + 656) = v103;
  *(_QWORD *)(v79 + 672) = v104;
  *(_OWORD *)(v79 + 688) = v105;
  *(_DWORD *)(v79 + 704) = v106;
  *(_QWORD *)(v79 + 712) = v107;
  *(_QWORD *)(v79 + 720) = v108;
  *(_DWORD *)(v79 + 728) = v109;
  *(_DWORD *)(v79 + 732) = v110;
  *(_OWORD *)(v79 + 752) = v111;
  *(_OWORD *)(v79 + 768) = v139;
  *(_OWORD *)(v79 + 784) = v138;
  *(_OWORD *)(v79 + 816) = v112;
  *(_DWORD *)(v79 + 832) = v113;
  *(_QWORD *)(v79 + 840) = v114;
  *(_QWORD *)(v79 + 848) = v115;
  *(_DWORD *)(v79 + 856) = v116;
  *(_DWORD *)(v79 + 860) = v117;
  *(_OWORD *)(v79 + 880) = v118;
  *(_OWORD *)(v79 + 896) = v141;
  *(_OWORD *)(v79 + 912) = v140;
  *(_OWORD *)(v79 + 944) = v119;
  *(_DWORD *)(v79 + 960) = v120;
  *(_QWORD *)(v79 + 968) = v121;
  *(_QWORD *)(v79 + 976) = v122;
  *(_DWORD *)(v79 + 984) = v123;
  *(_DWORD *)(v79 + 988) = v124;
  *(_OWORD *)(v79 + 1008) = v125;
  *(_OWORD *)(v79 + 1024) = v143;
  *(_OWORD *)(v79 + 1040) = v142;
  *(_OWORD *)(v79 + 1072) = v126;
  *(_DWORD *)(v79 + 1088) = v127;
  *(_QWORD *)(v79 + 1096) = v128;
  *(_QWORD *)(v79 + 1104) = v129;
  *(_DWORD *)(v79 + 1112) = v130;
  *(_DWORD *)(v79 + 1116) = v131;
  *(_BYTE *)(v79 + 8) = v152;
  *(_QWORD *)(v79 + 24) = v254;
  *(_QWORD *)(v79 + 100) = a30;
  *(_QWORD *)(v79 + 240) = a42;
  *(_QWORD *)(v79 + 264) = a45;
  *(_BYTE *)(v79 + 384) = v255;
  *(_QWORD *)(v79 + 400) = v256;
  *(_QWORD *)(v79 + 408) = v257;
  *(_QWORD *)(v79 + 424) = v258;
  *(_QWORD *)(v79 + 496) = v86;
  *(_BYTE *)(v79 + 736) = v259;
  *(_QWORD *)(v79 + 744) = v260;
  *(_QWORD *)(v79 + 800) = v156;
  *(_BYTE *)(v79 + 864) = v85;
  *(_QWORD *)(v79 + 872) = v84;
  *(_QWORD *)(v79 + 928) = v154;
  *(_BYTE *)(v79 + 992) = v83;
  *(_QWORD *)(v79 + 1000) = v82;
  *(_QWORD *)(v79 + 1056) = v151;
  *(_BYTE *)(v79 + 1120) = v81;
  *(_QWORD *)(v79 + 1128) = v132;
  *(_QWORD *)(v79 + 1184) = v149;
  *(_BYTE *)(v79 + 1236) = v133;
  *(_QWORD *)(v79 + 1272) = v146;
  *(_BYTE *)(v79 + 1280) = v134;
  *(_QWORD *)(v79 + 1296) = v135;
  *(_QWORD *)(v79 + 1344) = v136;
  *(_QWORD *)(v79 + 1368) = v137;
  *(_OWORD *)(v79 + 1240) = v194;
  *(_OWORD *)(v79 + 1256) = v193;
  v87 = *v166;
  *(_OWORD *)(v79 + 1136) = v144;
  *(_OWORD *)(v79 + 1152) = v197;
  *(_OWORD *)(v79 + 1168) = v196;
  *(_OWORD *)(v79 + 1200) = v145;
  *(_OWORD *)(v79 + 1216) = v147;
  *(_DWORD *)(v79 + 1232) = v148;
  *(_QWORD *)(v79 + 1288) = v150;
  *(_DWORD *)(v79 + 1304) = v153;
  *(_OWORD *)(v79 + 1312) = v155;
  v261 = *v174;
  *(_BYTE *)(v79 + 1432) = v180;
  *(_OWORD *)(v79 + 1328) = v157;
  *(_DWORD *)(v79 + 1352) = v158;
  *(_QWORD *)(v79 + 1360) = v159;
  *(_OWORD *)(v79 + 1376) = v160;
  *(_OWORD *)(v79 + 1392) = v161;
  *(_OWORD *)(v79 + 1408) = v162;
  *(_QWORD *)(v79 + 1424) = v163;
  *(_OWORD *)(v79 + 1436) = v164;
  *(_QWORD *)(v79 + 1456) = v165;
  *(_OWORD *)(v79 + 1472) = v167;
  *(_OWORD *)(v79 + 1488) = v168;
  *(_DWORD *)(v79 + 1504) = v169;
  *(_DWORD *)(v79 + 1508) = v170;
  *(_QWORD *)(v79 + 1512) = v181;
  *(_QWORD *)(v79 + 1520) = v183;
  *(_DWORD *)(v79 + 1528) = v171;
  *(_OWORD *)(v79 + 1536) = v172;
  *(_QWORD *)(v79 + 1552) = v186;
  *(_DWORD *)(v79 + 1560) = v173;
  *(_QWORD *)(v79 + 1568) = v175;
  *(_OWORD *)(v79 + 1584) = v176;
  *(_OWORD *)(v79 + 1600) = v177;
  *(_QWORD *)(v79 + 1616) = v178;
  *(_DWORD *)(v79 + 1624) = v179;
  *(_BYTE *)(v79 + 1628) = v190;
  *(_BYTE *)(v79 + 1629) = v240;
  *(_BYTE *)(v79 + 1630) = v239;
  *(_BYTE *)(v79 + 1631) = v238;
  *(_BYTE *)(v79 + 1632) = v237;
  *(_BYTE *)(v79 + 1633) = v235;
  *(_BYTE *)(v79 + 1634) = v234;
  *(_BYTE *)(v79 + 1635) = v232;
  *(_BYTE *)(v79 + 1636) = v230;
  *(_BYTE *)(v79 + 1637) = v228;
  *(_BYTE *)(v79 + 1638) = v227;
  *(_BYTE *)(v79 + 1639) = v225;
  *(_BYTE *)(v79 + 1640) = v224;
  *(_BYTE *)(v79 + 1641) = v221;
  *(_BYTE *)(v79 + 1642) = v220;
  *(_BYTE *)(v79 + 1643) = v218;
  *(_BYTE *)(v79 + 1644) = v217;
  *(_BYTE *)(v79 + 1645) = v215;
  *(_BYTE *)(v79 + 1646) = v214;
  *(_BYTE *)(v79 + 1647) = v212;
  *(_BYTE *)(v79 + 1648) = v211;
  *(_BYTE *)(v79 + 1649) = v209;
  *(_BYTE *)(v79 + 1650) = v208;
  *(_BYTE *)(v79 + 1651) = v206;
  *(_BYTE *)(v79 + 1652) = v205;
  OUTLINED_FUNCTION_9_64((void *)(v79 + 1656), v276);
  *(_OWORD *)(v79 + 1744) = v261;
  *(_OWORD *)(v79 + 1776) = v182;
  *(_OWORD *)(v79 + 1792) = v184;
  *(_OWORD *)(v79 + 1808) = v185;
  *(_DWORD *)(v79 + 1852) = v187;
  *(_DWORD *)(v79 + 1864) = v188;
  *(_QWORD *)(v79 + 1872) = v189;
  *(_DWORD *)(v79 + 1880) = v191;
  *(_BYTE *)(v79 + 1760) = v87;
  *(_BYTE *)(v79 + 1824) = v222;
  *(_OWORD *)(v79 + 1828) = v192;
  *(_QWORD *)(v79 + 1844) = v231;
  *(_QWORD *)(v79 + 1856) = v236;
  *(_OWORD *)(v79 + 1888) = v195;
  *(_QWORD *)(v79 + 1904) = v241;
  *(_DWORD *)(v79 + 1912) = v198;
  *(_QWORD *)(v79 + 1920) = v242;
  *(_DWORD *)(v79 + 1928) = v199;
  *(_OWORD *)(v79 + 1936) = v200;
  *(_DWORD *)(v79 + 1952) = v201;
  *(_QWORD *)(v79 + 1960) = v202;
  *(_OWORD *)(v79 + 1968) = v203;
  *(_QWORD *)(v79 + 1984) = v243;
  *(_DWORD *)(v79 + 1992) = v204;
  *(_QWORD *)(v79 + 2000) = v207;
  *(_QWORD *)(v79 + 2008) = v210;
  *(_OWORD *)(v79 + 2016) = v213;
  *(_OWORD *)(v79 + 2032) = v216;
  *(_OWORD *)(v79 + 2048) = v219;
  *(_OWORD *)(v79 + 2064) = v223;
  *(_OWORD *)(v79 + 2080) = v226;
  *(_OWORD *)(v79 + 2096) = v229;
  *(_DWORD *)(v79 + 2112) = v233;
  *(_OWORD *)(v79 + 2120) = v262;
  *(_QWORD *)(v79 + 2136) = v263;
  *(_DWORD *)(v79 + 2144) = v264;
  *(_OWORD *)(v79 + 2160) = v265;
  *(_OWORD *)(v79 + 2176) = v266;
  *(_DWORD *)(v79 + 2192) = v267;
  *(_QWORD *)(v79 + 2200) = v244;
  *(_DWORD *)(v79 + 2208) = v268;
  *(_DWORD *)(v79 + 2212) = v269;
  *(_OWORD *)(v79 + 2224) = v270;
  *(_OWORD *)(v79 + 2240) = v271;
  *(_OWORD *)(v79 + 2256) = v272;
  *(_OWORD *)(v79 + 2272) = v273;
  *(_OWORD *)(v79 + 2288) = v274;
  *(_OWORD *)(v79 + 2304) = v275;
  *(_QWORD *)(v79 + 2320) = v245;
  OUTLINED_FUNCTION_49_0();
}

BOOL static WeatherConditionBackgroundConfig.CameraPositionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t type metadata accessor for WeatherConditionGradientManager()
{
  return objc_opt_self();
}

uint64_t WeatherConditionGradientManager.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

void sub_1AFB48014(uint64_t a1@<X0>, double *a2@<X8>)
{
  WeatherConditionGradientManager.load(for:)(a1, a2);
}

double sub_1AFB48034@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  double result;

  v4 = type metadata accessor for WeatherConditionGradientModel();
  if ((*(_BYTE *)(a1 + *(int *)(v4 + 28)) & 0x80) != 0)
  {
    if (!DeviceSupportsVFX())
      goto LABEL_3;
  }
  else if ((*(_BYTE *)(a1 + *(int *)(v4 + 28)) & 1) == 0)
  {
LABEL_3:
    sub_1AFE88800(a1, *(_BYTE *)(a1 + *(int *)(v4 + 24)), a2);
    return result;
  }
  return sub_1AFB48808(a1, (uint64_t)a2);
}

void WeatherConditionGradientManager.load(for:)(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  double v38[3];
  double __src[14];

  v3 = v2;
  v6 = sub_1B0007F90();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for WeatherConditionGradientManager.GradientCacheKey();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFB48034(a1, __src);
  v11 = __src[0];
  v10 = __src[1];
  v13 = __src[2];
  v12 = __src[3];
  v14 = __src[4];
  v15 = __src[5];
  v16 = __src[6];
  *(double *)&v35 = __src[7];
  *(double *)&v34 = __src[8];
  *(double *)&v36 = __src[9];
  *(double *)&v37 = __src[10];
  v17 = __src[12];
  v38[0] = __src[11];
  v18 = type metadata accessor for WeatherConditionGradientModel();
  v19 = *(unsigned __int8 *)(a1 + *(int *)(v18 + 28)) >> 6;
  if (!v19)
  {
    *a2 = v11;
    a2[1] = v10;
    a2[2] = v13;
    a2[3] = v12;
    a2[4] = v14;
    a2[5] = v15;
    v30 = v35;
    a2[6] = v16;
    *((_QWORD *)a2 + 7) = v30;
    v31 = v36;
    *((_QWORD *)a2 + 8) = v34;
    *((_QWORD *)a2 + 9) = v31;
    v32 = v38[0];
    *((_QWORD *)a2 + 10) = v37;
    a2[11] = v32;
    goto LABEL_8;
  }
  if (v19 != 1)
  {
    OUTLINED_FUNCTION_0_52();
    OUTLINED_FUNCTION_4_56();
  }
  v20 = v18;
  v21 = OUTLINED_FUNCTION_10_0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, a1, v21);
  v9[*(int *)(v7 + 20)] = *(_BYTE *)(a1 + *(int *)(v20 + 24));
  if ((DeviceSupportsVFX() & 1) != 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_1_54();
    OUTLINED_FUNCTION_4_56();
  }
  swift_beginAccess();
  v22 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v22 + 16) || (v23 = sub_1AFC434B8((uint64_t)v9), (v24 & 1) == 0))
  {
    swift_endAccess();
    goto LABEL_11;
  }
  v25 = *(_QWORD *)(v22 + 56) + 104 * v23;
  *(_OWORD *)v38 = *(_OWORD *)v25;
  v37 = *(_OWORD *)(v25 + 16);
  v36 = *(_OWORD *)(v25 + 32);
  v35 = *(_OWORD *)(v25 + 48);
  v34 = *(_OWORD *)(v25 + 64);
  v33 = *(_OWORD *)(v25 + 80);
  v17 = *(double *)(v25 + 96);
  v26 = swift_endAccess();
  OUTLINED_FUNCTION_20_33(v26, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientManager.GradientCacheKey);
  v27 = v37;
  *(_OWORD *)a2 = *(_OWORD *)v38;
  *((_OWORD *)a2 + 1) = v27;
  v28 = v35;
  *((_OWORD *)a2 + 2) = v36;
  *((_OWORD *)a2 + 3) = v28;
  v29 = v33;
  *((_OWORD *)a2 + 4) = v34;
  *((_OWORD *)a2 + 5) = v29;
LABEL_8:
  a2[12] = v17;
}

void sub_1AFB4868C(uint64_t a1)
{
  char v1;

  sub_1AFB41594(a1, &v1);
  __asm { BR              X10 }
}

void sub_1AFB486C4()
{
  _QWORD *v0;

  sub_1AFB487F0(v0);
}

void sub_1AFB486D8()
{
  _QWORD *v0;

  sub_1AFEF7BCC(v0);
}

void sub_1AFB486EC()
{
  _QWORD *v0;

  sub_1AFE0BB80(v0);
}

void sub_1AFB48700()
{
  _QWORD *v0;

  sub_1AFE6598C(v0);
}

void sub_1AFB48714()
{
  _QWORD *v0;

  sub_1AFCFB114(v0);
}

void sub_1AFB48728()
{
  _QWORD *v0;

  sub_1AFF5E7E0(v0);
}

void sub_1AFB4873C()
{
  _QWORD *v0;

  sub_1AFE4F338(v0);
}

void sub_1AFB48750()
{
  _QWORD *v0;

  sub_1AFBBB1C8(v0);
}

void sub_1AFB48764()
{
  _QWORD *v0;

  sub_1AFC212F0(v0);
}

void sub_1AFB48778()
{
  _QWORD *v0;

  sub_1AFE8BACC(v0);
}

void sub_1AFB4878C()
{
  _QWORD *v0;

  sub_1AFCAC744(v0);
}

void sub_1AFB487A0()
{
  _QWORD *v0;

  sub_1AFF65058(v0);
}

void sub_1AFB487B4()
{
  _QWORD *v0;

  sub_1AFEB8488(v0);
}

void sub_1AFB487C8()
{
  _QWORD *v0;

  sub_1AFC8BB2C(v0);
}

void sub_1AFB487DC()
{
  _QWORD *v0;

  sub_1AFFD8328(v0);
}

void sub_1AFB487F0(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E6078138;
}

double sub_1AFB48808@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int8 *v7;
  int *v8;
  uint64_t v9;
  __int8 *v10;
  double v11;
  uint64_t v12;
  int32x2_t v13;
  int64x2_t v14;
  double result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int8x16_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  double v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double v36;

  v4 = sub_1B0005FB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v21.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (int *)type metadata accessor for WeatherConditionGradientModel();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v21.i8[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFAE2DFC(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  (*(void (**)(__int8 *, __int8 *, uint64_t))(v5 + 16))(v7, v10, v4);
  v11 = *(double *)&v10[v8[8]];
  LOBYTE(v30) = v10[v8[9]];
  v12 = sub_1AFB41058((uint64_t)v7, (unsigned __int8 *)&v30, v11);
  sub_1AFB489D0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  sub_1AFB4868C(v12);
  static SkyBackgroundGradient.interpolated(forElevation:isPM:stops:)(*(_BYTE *)(a1 + v8[5] + 8), *((uint64_t *)&v30 + 1), (uint64_t)&v30, *(double *)(a1 + v8[5]));
  swift_bridgeObjectRelease();
  v23 = v30;
  v24 = v31;
  v25 = v32;
  v26 = v33;
  v27 = v34;
  v28 = v35;
  v29 = v36;
  v13 = vdup_n_s32(v12 == 17);
  v14.i64[0] = v13.u32[0];
  v14.i64[1] = v13.u32[1];
  v21 = vandq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v14, 0x3FuLL)), (int8x16_t)xmmword_1B002F6F0);
  v22 = 0;
  SkyBackgroundGradient.mutated(with:)((uint64_t)&v21, (uint64_t)&v30);
  result = v36;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v20 = v35;
  *(_OWORD *)a2 = v30;
  *(_OWORD *)(a2 + 16) = v16;
  *(_OWORD *)(a2 + 32) = v17;
  *(_OWORD *)(a2 + 48) = v18;
  *(_OWORD *)(a2 + 64) = v19;
  *(_OWORD *)(a2 + 80) = v20;
  *(double *)(a2 + 96) = result;
  return result;
}

void sub_1AFB489D0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB48A08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005FB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionGradientManager.GradientCacheKey()
{
  uint64_t result;

  result = qword_1ED1F4B18;
  if (!qword_1ED1F4B18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFB48AB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BackgroundAnimationData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double WeatherConditionBackgroundModel.gradient.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  result = *(double *)(v1 + 96);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(double *)(a1 + 96) = result;
  return result;
}

uint64_t WeatherConditionBackgroundModel.canShowAnimatedBackground.getter()
{
  uint64_t v0;
  char v1;

  if (qword_1ED1EC510 != -1)
    swift_once();
  if ((sub_1B0006580() & 1) != 0)
    v1 = (*(_BYTE *)(v0 + 104) == 2) | *(_BYTE *)(v0 + 104);
  else
    v1 = 0;
  return v1 & 1;
}

void sub_1AFB48BC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1AFB4AC3C(319, &qword_1ED1F2710, &qword_1ED1F2798);
  if (v0 <= 0x3F)
  {
    sub_1AFB4AC3C(319, &qword_1ED1F2700, &qword_1ED1F2750);
    if (v1 <= 0x3F)
    {
      sub_1AFB4ABF4();
      if (v2 <= 0x3F)
      {
        sub_1AFB4BDEC();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t WeatherVFXConditionBackground.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F2718);
  v10 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F26F8);
  v3 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_4();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2708);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2798);
  OUTLINED_FUNCTION_16_39();
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_16_39();
  OUTLINED_FUNCTION_15_44();
  v5 = v0 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground__backgroundMask;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2750);
  sub_1B00071F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v9);
  sub_1B00071F8();
  OUTLINED_FUNCTION_10_10(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32));
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground_isTransitioning) = 0;
  v6 = v0 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground_fadeOutAnimationStartDate;
  v7 = sub_1B00058D8();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  return v0;
}

uint64_t sub_1AFB48E80()
{
  return sub_1AFB48E98();
}

uint64_t sub_1AFB48E98()
{
  WeatherVFXConditionBackground.isLoaded.setter();
  WeatherVFXConditionBackground.backgroundEffectModel.setter();
  return WeatherVFXConditionBackground.collisionEffectModel.setter();
}

uint64_t WeatherVFXConditionBackground.foregroundEffectsAreAbleToRender.getter()
{
  uint64_t v0;
  char v1;

  if ((WeatherVFXConditionBackground.isLoaded.getter() & 1) != 0)
    v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground_isTransitioning) ^ 1;
  else
    v1 = 0;
  return v1 & 1;
}

uint64_t WeatherVFXConditionBackground.backgroundEffectModel.setter()
{
  return sub_1AFACE950();
}

uint64_t WeatherVFXConditionBackground.collisionEffectModel.setter()
{
  return sub_1AFACE950();
}

uint64_t WeatherVFXConditionBackground.collisionEffectModel.getter()
{
  return sub_1AFAD6304();
}

void sub_1AFB48F74()
{
  uint64_t v0;

  sub_1AFAC919C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
}

uint64_t WeatherVFXConditionBackground.publishUpdates(backgroundEffectModel:collisionEffectModel:backgroundMask:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[40];

  sub_1AFB4A73C(a3, (uint64_t)v8);
  v4 = OUTLINED_FUNCTION_22_23();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_23_35();
  *v3 = OUTLINED_FUNCTION_21_33();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E0DEF740], v4);
  v6 = sub_1B0008404();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v3, v4);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_1ED1F2788 != -1)
LABEL_5:
    swift_once();
  MEMORY[0x1E0C80A78](qword_1ED1FED88);
  return OUTLINED_FUNCTION_24_29();
}

void WeatherVFXConditionBackground.backgroundMask.setter(uint64_t a1)
{
  _BYTE v2[40];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1AFB4A73C(a1, (uint64_t)v2);
  OUTLINED_FUNCTION_14_31();
  OUTLINED_FUNCTION_17_35();
  OUTLINED_FUNCTION_12_41();
}

void WeatherVFXConditionBackground.backgroundMask.getter(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B0007228();
  OUTLINED_FUNCTION_25_1();
  swift_release();
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  OUTLINED_FUNCTION_12_41();
}

Swift::Double __swiftcall WeatherVFXConditionBackground.startLoading(hasSignificantlyChanged:)(Swift::Bool hasSignificantlyChanged)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;
  Swift::Double result;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  BOOL v28;
  uint64_t v29;
  _BOOL4 v30;

  v2 = v1;
  v30 = hasSignificantlyChanged;
  v3 = sub_1B00058D8();
  v29 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  v15 = OUTLINED_FUNCTION_22_23();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_9();
  v19 = (uint64_t *)(v18 - v17);
  OUTLINED_FUNCTION_23_35();
  *v19 = OUTLINED_FUNCTION_21_33();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15);
  v20 = sub_1B0008404();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((WeatherVFXConditionBackground.isLoaded.getter() & 1) != 0 && v30)
  {
    sub_1B00058CC();
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v3);
    v21 = v2 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground_fadeOutAnimationStartDate;
    OUTLINED_FUNCTION_4_12();
    sub_1AFC1F378((uint64_t)v14, v21);
    swift_endAccess();
    if (qword_1ED1F2788 == -1)
    {
LABEL_5:
      OUTLINED_FUNCTION_24_29();
      return 0.8;
    }
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  sub_1B00058CC();
  v23 = v2 + OBJC_IVAR____TtC9WeatherUI29WeatherVFXConditionBackground_fadeOutAnimationStartDate;
  swift_beginAccess();
  sub_1AFAF8390(v23, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v3) == 1)
  {
    sub_1B0005800();
    sub_1AFB4BDAC((uint64_t)v12);
    v24 = v29;
  }
  else
  {
    v24 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v6, v12, v3);
  }
  sub_1B0005830();
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  v27(v6, v3);
  v27(v8, v3);
  v28 = v26 >= 0.8 || v26 <= 0.0;
  result = 0.8 - v26;
  if (v28)
    return 0.0;
  return result;
}

uint64_t sub_1AFB494EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005FB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionGradientModel()
{
  uint64_t result;

  result = qword_1ED1F44E0;
  if (!qword_1ED1F44E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AFB495C0()
{
  unint64_t v0;

  sub_1AFB4C0B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for WeatherChangeStringBuilder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WeatherFormattedMonitor()
{
  return objc_opt_self();
}

uint64_t sub_1AFB49678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1B0006970();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_1_130();
  sub_1B0006964();
  sub_1B0006988();
  swift_allocObject();
  v2 = sub_1B000697C();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

uint64_t sub_1AFB496F4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WeatherFormattedMonitor();
  v0 = swift_allocObject();
  result = sub_1AFB49678();
  qword_1ED1FEDD8 = v0;
  return result;
}

uint64_t sub_1AFB4972C()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for WeatherVFXViewModel(id *a1)
{

}

uint64_t storeEnumTagSinglePayload for WeatherVFXViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t initializeWithCopy for WeatherVFXViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = v3;
  return a1;
}

id sub_1AFB497D8(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1AFB497E8(id a1)
{
  if (a1 != (id)1)

}

BOOL static WeatherVFXViewModel.== infix(_:_:)(double *a1, double *a2)
{
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_QWORD *)a1 + 2);
  v5 = *a2;
  v6 = a2[1];
  v7 = *((_QWORD *)a2 + 2);
  if (!*(_QWORD *)a1)
  {
    if (v5 != 0.0)
    {
      v9 = 0;
      goto LABEL_6;
    }
    if (v3 == v6)
      return v4 == v7;
    return 0;
  }
  v8 = sub_1B0006E98();
  if (v5 == 0.0)
    return 0;
  v9 = v8;
LABEL_6:
  v10 = sub_1B0006E98();
  if (v2 == 0.0)
    return 0;
  if (v9 != v10 || v3 != v6)
    return 0;
  return v4 == v7;
}

uint64_t type metadata accessor for WeatherFormatCache()
{
  return objc_opt_self();
}

_QWORD *sub_1AFB498B4()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for WeatherFormatCache();
  v0 = swift_allocObject();
  result = sub_1AFAC3590();
  qword_1ED1FEDE0 = v0;
  return result;
}

void sub_1AFB498EC()
{
  sub_1AFACDDEC();
}

void WeatherDescription.formatted(font:color:)()
{
  static AttributedString.makeStyledString(markdown:font:color:)();
}

ValueMetadata *type metadata accessor for WeatherDescription.Argument()
{
  return &type metadata for WeatherDescription.Argument;
}

uint64_t type metadata accessor for SevereWeatherStringBuilder()
{
  return objc_opt_self();
}

uint64_t initializeWithTake for WeakWeatherConditionPlaybackCoordinatorBox(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_1AFB4996C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1AFB49990(uint64_t a1, uint64_t a2)
{
  initializeWithTake for WeakWeatherConditionPlaybackCoordinatorBox(a2, a1);
  return a2;
}

void sub_1AFB499C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;

  if (!*a1)
  {
    v4 = OUTLINED_FUNCTION_15_1(0, a2);
    v5 = v2();
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEE998], v4, &v5), a1);
  }
  OUTLINED_FUNCTION_10_1();
}

ValueMetadata *type metadata accessor for WeakWeatherConditionPlaybackCoordinatorBox()
{
  return &type metadata for WeakWeatherConditionPlaybackCoordinatorBox;
}

unint64_t sub_1AFB49A28()
{
  unint64_t result;

  result = qword_1ED1ECE00;
  if (!qword_1ED1ECE00)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0047B18, &type metadata for WeakWeatherConditionPlaybackCoordinatorBox);
    atomic_store(result, (unint64_t *)&qword_1ED1ECE00);
  }
  return result;
}

BOOL sub_1AFB49A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = MEMORY[0x1B5E03DA4]();
  v4 = MEMORY[0x1B5E03DA4](a2);
  v5 = v4;
  if (v3)
  {
    swift_unknownObjectRelease();
    if (v5)
    {
      swift_unknownObjectRelease();
      return v3 == v5;
    }
    return 0;
  }
  if (v4)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return 1;
}

void sub_1AFB49AD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CE0680], v3), a1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB49B0C()
{
  uint64_t result;

  result = sub_1B0008308();
  qword_1ED1FED88 = result;
  return result;
}

unint64_t sub_1AFB49B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F1200;
  if (!qword_1ED1F1200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED1F1208);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDFA80], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F1200);
  }
  return result;
}

void View.setForegroundEffectContainer()()
{
  JUMPOUT(0x1B5E01E6CLL);
}

uint64_t View.enableForegroundEffects()(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  char v4;

  v3[0] = sub_1AFB3C67C;
  v3[1] = 0;
  v4 = 0;
  return MEMORY[0x1B5E01E6C](v3, a1, &type metadata for EnableForegroundEffectModifier, a2);
}

uint64_t View.statusBarPreserving(preferredColorScheme:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StatusBarPreservingModifier();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v17 - v14;
  sub_1AFB4AB10(a1, (uint64_t)v8);
  *(_QWORD *)v12 = swift_getKeyPath();
  v12[8] = 0;
  sub_1AFB4AB58((uint64_t)v8, (uint64_t)&v12[*(int *)(v9 + 20)]);
  sub_1AFB3C898((uint64_t)v12, (uint64_t)v15);
  MEMORY[0x1B5E01E6C](v15, a2, v9, a3);
  return sub_1AFB3C85C((uint64_t)v15);
}

uint64_t View.setForegroundEffect(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t KeyPath;
  char v8;
  char v9;

  v5 = *a1;
  KeyPath = swift_getKeyPath();
  v8 = 0;
  v9 = v5;
  MEMORY[0x1B5E01E6C](&KeyPath, a2, &type metadata for SetForegroundEffectModifier, a3);
  return swift_release();
}

uint64_t sub_1AFB49D84(uint64_t a1)
{
  sub_1AFB49DB8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_1AFB49DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

unint64_t sub_1AFB49DD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1ED1ECD38;
  if (!qword_1ED1ECD38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECD40);
    sub_1AFB49AD0(&qword_1ED1ECDF0, &qword_1ED1ECDF8);
    v3 = v2;
    sub_1AFB49AD0(&qword_1ED1ECDE0, &qword_1ED1ECDE8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1ED1ECD38);
  }
  return result;
}

uint64_t sub_1AFB49E5C(uint64_t a1)
{
  return sub_1AFB49F18(a1, (void (*)(void))sub_1AFB3BBE4);
}

void sub_1AFB49E70(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_6_112(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1AFB49E88()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_99();
  OUTLINED_FUNCTION_10_105(v0);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB49EA4()
{
  return sub_1AFB49FA0((void (*)(void))sub_1AFB3BBE4);
}

uint64_t sub_1AFB49EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return sub_1AFACDA54(v2, v1);
}

uint64_t sub_1AFB49EF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EnvironmentValues.foregroundEffectPlaybackController.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AFB49F18(uint64_t a1, void (*a2)(void))
{
  a2();
  return sub_1B0007714();
}

uint64_t sub_1AFB49F58(uint64_t a1)
{
  return sub_1AFB49F18(a1, (void (*)(void))sub_1AFB3C128);
}

void sub_1AFB49F6C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_7_108(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1AFB49F84()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_12_104();
  OUTLINED_FUNCTION_10_105(v0);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB49FA0(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_1B0007708();
  return v2;
}

uint64_t EnvironmentValues.foregroundEffectsAreAbleToRender.getter()
{
  return sub_1AFB49FA0((void (*)(void))sub_1AFB3C128);
}

uint64_t sub_1AFB49FF4()
{
  sub_1AFAC3470();
  return sub_1B0007714();
}

void sub_1AFB4A02C()
{
  swift_retain();
  sub_1AFB49FF4();
  OUTLINED_FUNCTION_0();
}

void sub_1AFB4A050()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFB4A06C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED1ECD10;
  if (!qword_1ED1ECD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECD18);
    v2 = sub_1AFB4A0F0();
    sub_1AFB3A890(&qword_1ED1ECDA0, &qword_1ED1ECDA8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED1ECD10);
  }
  return result;
}

unint64_t sub_1AFB4A0F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED1ECD00;
  if (!qword_1ED1ECD00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECD08);
    v2 = sub_1AFB4A174();
    sub_1AFB3A890(&qword_1ED1ECDD0, &qword_1ED1ECDD8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED1ECD00);
  }
  return result;
}

unint64_t sub_1AFB4A174()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED1ECCF0;
  if (!qword_1ED1ECCF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECCF8);
    v2 = sub_1AFB4A1F8();
    sub_1AFB3A890(&qword_1ED1ECDB0, &qword_1ED1ECDB8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED1ECCF0);
  }
  return result;
}

unint64_t sub_1AFB4A1F8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED1ECCE0;
  if (!qword_1ED1ECCE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECCE8);
    v2 = sub_1AFB4A27C();
    sub_1AFB3A890(&qword_1ED1ECDC0, &qword_1ED1ECDC8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED1ECCE0);
  }
  return result;
}

unint64_t sub_1AFB4A27C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1ECCD0;
  if (!qword_1ED1ECCD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECCD8);
    v2[0] = sub_1AFB4A2E8();
    v2[1] = sub_1AFB3C1BC();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1ECCD0);
  }
  return result;
}

unint64_t sub_1AFB4A2E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1ECCB0;
  if (!qword_1ED1ECCB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECCB8);
    v2[0] = sub_1AFB4A5D0();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1ECCB0);
  }
  return result;
}

unint64_t sub_1AFB4A354()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1F11A8;
  if (!qword_1ED1F11A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F11B0);
    v2[0] = sub_1AFB49B48();
    v2[1] = sub_1AFC7EB00();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1F11A8);
  }
  return result;
}

unint64_t sub_1AFB4A3C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED1F1198;
  if (!qword_1ED1F1198)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F11A0);
    sub_1AFAD71A0(&qword_1ED1F1178, &qword_1ED1F1180, MEMORY[0x1E0CD8668]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED1F1198);
  }
  return result;
}

unint64_t sub_1AFB4A444()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1ECCA0;
  if (!qword_1ED1ECCA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECCA8);
    v2[0] = sub_1AFB3A810(&qword_1ED1ECC38, &qword_1ED1ECC40, MEMORY[0x1E0CD8668]);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1ECCA0);
  }
  return result;
}

unint64_t sub_1AFB4A4C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1ECC90;
  if (!qword_1ED1ECC90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECC98);
    v2[0] = sub_1AFAD7304();
    v2[1] = sub_1AFC6C710();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1ECC90);
  }
  return result;
}

unint64_t sub_1AFB4A534()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1ED1ECC80;
  if (!qword_1ED1ECC80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECC88);
    sub_1AFB3A890(&qword_1ED1ECD80, &qword_1ED1ECD88);
    v3 = v2;
    sub_1AFB3A890(&qword_1ED1ECDD0, &qword_1ED1ECDD8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1ED1ECC80);
  }
  return result;
}

unint64_t sub_1AFB4A5D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED1ECC70;
  if (!qword_1ED1ECC70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECC78);
    sub_1AFB3A890(&qword_1ED1ECD68, &qword_1ED1ECD70);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED1ECC70);
  }
  return result;
}

unint64_t sub_1AFB4A654()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1ECC60;
  if (!qword_1ED1ECC60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECC68);
    v2[0] = sub_1AFB3A810(&qword_1ED1ECD58, &qword_1ED1ECD60, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1AFB3A810(&qword_1ED1EC380, &qword_1ED1EC388, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1ECC60);
  }
  return result;
}

uint64_t sub_1AFB4A6F0()
{
  return sub_1AFAEEF7C(&qword_1ED1F1188, &qword_1ED1F1190, (uint64_t (*)(void))sub_1AFAD3188, MEMORY[0x1E0CD8D70]);
}

uint64_t sub_1AFB4A714(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AFB4A73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFB4A784()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F2440)
  {
    sub_1AFB4AE50();
    v0 = sub_1B0007300();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F2440);
  }
}

uint64_t sub_1AFB4A7E0()
{
  return swift_retain();
}

uint64_t sub_1AFB4A7E8()
{
  return swift_release();
}

void sub_1AFB4A7F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F2740)
  {
    sub_1B0007480();
    v0 = sub_1B0007294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F2740);
  }
}

uint64_t sub_1AFB4A844(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

void sub_1AFB4A850()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_14_33();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_10();
  if ((v1 & 1) == 0)
  {
    swift_retain();
    sub_1B00089C8();
    v4 = OUTLINED_FUNCTION_33_20();
    if (OUTLINED_FUNCTION_15_46(v4))
    {
      OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_38_10(4.8149e-34);
      v6 = sub_1AFB4AD14(1819242306, 0xE400000000000000, v5);
      OUTLINED_FUNCTION_1_46(v6);
      OUTLINED_FUNCTION_7_41(&dword_1AFABF000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_17_37();
      OUTLINED_FUNCTION_25();
    }

    OUTLINED_FUNCTION_28_27();
    OUTLINED_FUNCTION_16_41();
    sub_1AFACCD50(v0, 0);
    OUTLINED_FUNCTION_13_46(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFB4A954()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_21_34();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9();
  v12 = v11 - v10;
  if ((v3 & 1) != 0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    sub_1B00089C8();
    v13 = sub_1B0007A8C();
    if (OUTLINED_FUNCTION_32_17(v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_4_18();
      v15 = OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_39_9(4.8149e-34);
      sub_1AFB4AD14(0xD000000000000031, 0x80000001B0052A60, &v15);
      sub_1B0008BB4();
      OUTLINED_FUNCTION_23_36(&dword_1AFABF000, v3, v0, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14);
      OUTLINED_FUNCTION_22_26();
      OUTLINED_FUNCTION_25();
    }

    sub_1B00076F0();
    swift_getAtKeyPath();
    sub_1AFB4A844(v7, v5, 0);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v8);
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFB4AAD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFB4AB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFB4AB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFB4ABA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECC48)
  {
    sub_1B0007288();
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECC48);
  }
}

void sub_1AFB4ABF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F2728)
  {
    v0 = sub_1B0007240();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F2728);
  }
}

void sub_1AFB4AC3C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1B0007240();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1AFB4AC88(uint64_t a1)
{
  return sub_1AFB4ACA0(a1, qword_1ED1F4018);
}

uint64_t sub_1AFB4ACA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1B0006D00();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1B0006CF4();
}

uint64_t sub_1AFB4AD14(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_1AFB376F8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1AFB36734((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1AFB36734((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

void sub_1AFB4ADE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_11(a1, a2, a3);
  OUTLINED_FUNCTION_5_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFB4AE10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F26A8;
  if (!qword_1ED1F26A8)
  {
    v1 = sub_1B0006994();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DB33D8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F26A8);
  }
  return result;
}

unint64_t sub_1AFB4AE50()
{
  unint64_t result;

  result = qword_1ED1F2360;
  if (!qword_1ED1F2360)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEF048], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED1F2360);
  }
  return result;
}

uint64_t sub_1AFB4AE8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005A1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Beaufort.FormatStyle()
{
  uint64_t result;

  result = qword_1ED1F4228;
  if (!qword_1ED1F4228)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AFB4AF38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECBE0)
  {
    sub_1AFAEC5C0(255, &qword_1ED1EDCE8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EDD30);
    v0 = sub_1B000664C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECBE0);
  }
}

void sub_1AFB4AFB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECBD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EDCE0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED1EDD20);
    v0 = sub_1B000664C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECBD8);
  }
}

void sub_1AFB4B01C(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a4);
    v6 = sub_1B000664C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1AFB4B084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_14();
  sub_1B00065E0();
  OUTLINED_FUNCTION_13_103();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  (*(void (**)(uint64_t, _QWORD))(v13 + 104))(v12 - v11, *MEMORY[0x1E0DB5800]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E0DB57E0], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECBC8);
  OUTLINED_FUNCTION_12_4();
  *a5 = sub_1B0006628();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFB4B168(uint64_t a1)
{
  sub_1AFB4B084(a1, 0, 0xD000000000000027, 0x80000001B0064220, &qword_1ED1ECBA0);
}

uint64_t sub_1AFB4B190(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static Settings.VFX.overrideConditionBackground.getter()
{
  return sub_1AFB4B190(&qword_1ED1ECBA8);
}

void sub_1AFB4B1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_109_0();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41_0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  objc_msgSend(v7, sel_physicalMemory);

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0DB5800], v5);
  OUTLINED_FUNCTION_141(v0, *MEMORY[0x1E0DB57E0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECBC8);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_18();
  qword_1ED1ECB98 = sub_1B0006628();
  OUTLINED_FUNCTION_8_0();
}

uint64_t static Settings.VFX.vfxCollisionEnabled.getter()
{
  return sub_1AFB4B190(&qword_1ED1EC520);
}

void sub_1AFB4B320()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_13_103();
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))(v3, *MEMORY[0x1E0DB57E8], v1);
  type metadata accessor for Settings.VFX.AnimatedBackgrounds();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_18();
  qword_1ED1ECB90 = Settings.VFX.AnimatedBackgrounds.init(key:defaultValue:access:)(0xD000000000000027, v5, 1, (uint64_t)v3);
  OUTLINED_FUNCTION_0();
}

uint64_t static Settings.VFX.animatedBackgrounds.getter()
{
  return sub_1AFB4B190(&qword_1ED1EC510);
}

uint64_t sub_1AFB4B3CC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Settings.VFX.AnimatedBackgrounds()
{
  uint64_t result;

  result = qword_1ED1ECB58;
  if (!qword_1ED1ECB58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter()
{
  return OUTLINED_FUNCTION_4_120();
}

uint64_t sub_1AFB4B45C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t _s3VFXV19AnimatedBackgroundsC13AnimationKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFB4B4B0 + 4 * byte_1B003CD25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFB4B4E4 + 4 * byte_1B003CD20[v4]))();
}

uint64_t sub_1AFB4B4E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB4B4EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFB4B4F4);
  return result;
}

uint64_t sub_1AFB4B500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFB4B508);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFB4B50C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFB4B514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s18CameraPositionTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

unint64_t sub_1AFB4B5A8()
{
  unint64_t result;

  result = qword_1ED1ECB40;
  if (!qword_1ED1ECB40)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for Settings.VFX.AnimatedBackgrounds.AnimationKind, &type metadata for Settings.VFX.AnimatedBackgrounds.AnimationKind);
    atomic_store(result, (unint64_t *)&qword_1ED1ECB40);
  }
  return result;
}

unint64_t sub_1AFB4B5E4()
{
  unint64_t result;

  result = qword_1ED1ECB38;
  if (!qword_1ED1ECB38)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for Settings.VFX.AnimatedBackgrounds.AnimationKind, &type metadata for Settings.VFX.AnimatedBackgrounds.AnimationKind);
    atomic_store(result, (unint64_t *)&qword_1ED1ECB38);
  }
  return result;
}

unint64_t sub_1AFB4B620()
{
  unint64_t result;

  result = qword_1ED1ECB30;
  if (!qword_1ED1ECB30)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for Settings.VFX.AnimatedBackgrounds.AnimationKind, &type metadata for Settings.VFX.AnimatedBackgrounds.AnimationKind);
    atomic_store(result, (unint64_t *)&qword_1ED1ECB30);
  }
  return result;
}

uint64_t sub_1AFB4B65C()
{
  sub_1AFB4B5E4();
  return sub_1B0008728();
}

void sub_1AFB4B6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_3_120();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41_0();
  sub_1B0006568();
  OUTLINED_FUNCTION_109_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F26A0);
  OUTLINED_FUNCTION_141(v1, *MEMORY[0x1E0DB54D8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v0, *MEMORY[0x1E0DB57E8], v3);
  OUTLINED_FUNCTION_18();
  qword_1ED1ECB20 = sub_1B0006604();
  OUTLINED_FUNCTION_8_0();
}

uint64_t static Settings.VFX.foregroundEffects.getter()
{
  return sub_1AFB4B190(&qword_1ED1ECB28);
}

void sub_1AFB4B794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_109_0();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_2_126();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v6 = sub_1B0006568();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F26A0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v10, *MEMORY[0x1E0DB54E0], v6);
  sub_1B00065D4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, *MEMORY[0x1E0DB57E8], v3);
  OUTLINED_FUNCTION_18();
  qword_1ED1F2688 = sub_1B0006610();
  OUTLINED_FUNCTION_8_0();
}

void MoonPhase.symbolName(for:)(uint64_t a1, char a2)
{
  sub_1B00064E4();
  __asm { BR              X10 }
}

uint64_t sub_1AFB4B8D8()
{
  int v0;
  uint64_t result;

  if (v0)
  {
    OUTLINED_FUNCTION_3_48();
    return sub_1B00064E4();
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonPhase.Hemisphere()
{
  return &type metadata for MoonPhase.Hemisphere;
}

void MoonPhase.Hemisphere.init(latitude:)(BOOL *a1@<X8>, double a2@<D0>)
{
  *a1 = a2 < 0.0;
}

void sub_1AFB4B964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F2358)
  {
    sub_1B0005BFC();
    sub_1AFB4BCB0(&qword_1ED1F2350, MEMORY[0x1E0CEE628]);
    sub_1AFB4BCB0(&qword_1ED1F2340, MEMORY[0x1E0CEE618]);
    sub_1AFB4BCB0(&qword_1ED1F2348, MEMORY[0x1E0CEE620]);
    v0 = sub_1B00064D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F2358);
  }
}

unint64_t sub_1AFB4BA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1F41C8;
  if (!qword_1ED1F41C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F41D8);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CEF530], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1F41C8);
  }
  return result;
}

Swift::Double __swiftcall AirQualityScale.fraction(for:)(Swift::Int a1)
{
  uint64_t v2;
  Swift::Double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1B000619C();
  v4 = a1 - v2;
  if (__OFSUB__(a1, v2))
  {
    __break(1u);
  }
  else
  {
    sub_1B000619C();
    v6 = v5;
    v7 = sub_1B000619C();
    if (!__OFSUB__(v6, v7))
      return (double)v4 / (double)(v6 - v7);
  }
  __break(1u);
  return result;
}

uint64_t AirQualityScale.gradientStops.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = AirQualityScale.gradientColors.getter();
  sub_1AFECE4D0(v1);
  OUTLINED_FUNCTION_1_7();
  return v0;
}

void AirQuality.displayDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v0 = OUTLINED_FUNCTION_5_46();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_9();
  v4 = v3 - v2;
  sub_1B0006028();
  v5 = sub_1B0006190();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  if ((v5 & 1) != 0)
    AirQuality.displayDescriptionWithIndex.getter();
  else
    sub_1AFD28FBC();
}

uint64_t sub_1AFB4BB90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFB4BBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFB4BC18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2638);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for WeatherAlert.Prominence()
{
  return &type metadata for WeatherAlert.Prominence;
}

uint64_t sub_1AFB4BC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFB4BCB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1B0005BFC();
    result = MEMORY[0x1B5E03BF4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AFB4BCF0(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    OUTLINED_FUNCTION_15_0();
  }
  return result;
}

uint64_t sub_1AFB4BD28()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1B0005A1C();
  MEMORY[0x1E0C80A78](v0);
  sub_1B000595C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F47B0);
  swift_allocObject();
  result = sub_1B0006B08();
  qword_1ED1F4798 = result;
  return result;
}

uint64_t sub_1AFB4BDAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFB4BDEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F4158)
  {
    sub_1B00058D8();
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F4158);
  }
}

void sub_1AFB4BE40()
{
  sub_1AFACF36C();
}

void sub_1AFB4BE5C()
{
  sub_1AFACF36C();
}

void sub_1AFB4BE78(uint64_t a1)
{
  sub_1AFAD1988(a1, (void (*)(void))sub_1AFAC5834, &qword_1ED1FEDB0, (uint64_t *)algn_1ED1FEDB8);
}

void sub_1AFB4BE90(uint64_t a1)
{
  sub_1AFAD1988(a1, (void (*)(void))sub_1AFB4BEA8, &qword_1ED1FED78, &qword_1ED1FED80);
}

id sub_1AFB4BEA8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v8;

  v2 = sub_1B0005A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B000595C();
  v6 = (void *)sub_1B0005950();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, sel_setLocale_, v6);

  return objc_msgSend(a1, sel_setTimeStyle_, 1);
}

ValueMetadata *type metadata accessor for URL.WeatherSourcePar()
{
  return &type metadata for URL.WeatherSourcePar;
}

void _s15VariableContextVMa()
{
  OUTLINED_FUNCTION_27_0();
}

unint64_t sub_1AFB4BF78()
{
  unint64_t result;

  result = qword_1ED1F2608;
  if (!qword_1ED1F2608)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037A64, &unk_1E608AFC8);
    atomic_store(result, (unint64_t *)&qword_1ED1F2608);
  }
  return result;
}

unint64_t sub_1AFB4BFB4()
{
  unint64_t result;

  result = qword_1ED1F2600;
  if (!qword_1ED1F2600)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037A94, &unk_1E608AFC8);
    atomic_store(result, (unint64_t *)&qword_1ED1F2600);
  }
  return result;
}

unint64_t sub_1AFB4BFF0()
{
  unint64_t result;

  result = qword_1ED1F25F8;
  if (!qword_1ED1F25F8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037AC4, &unk_1E608AFC8);
    atomic_store(result, (unint64_t *)&qword_1ED1F25F8);
  }
  return result;
}

unint64_t sub_1AFB4C034()
{
  unint64_t result;

  result = qword_1ED1F25E8;
  if (!qword_1ED1F25E8)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8168], MEMORY[0x1E0CD8188]);
    atomic_store(result, (unint64_t *)&qword_1ED1F25E8);
  }
  return result;
}

uint64_t sub_1AFB4C070(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFB4C0B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F2338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F44B0);
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F2338);
  }
}

void sub_1AFB4C108()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECAC0)
  {
    sub_1AFB39DB8();
    v0 = sub_1B00050F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECAC0);
  }
}

void sub_1AFB4C15C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1AFB4C1B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1AFAEC5C0(255, (unint64_t *)&qword_1ED1F44C0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1AFB4C21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECA88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFB4C264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECA90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EC340);
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECA90);
  }
}

void sub_1AFB4C2BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1ECA70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1ECA58);
    v0 = sub_1B0008B9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1ECA70);
  }
}

void sub_1AFB4C314()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F41F8)
  {
    sub_1AFAEC5C0(255, (unint64_t *)&qword_1ED1F4698);
    v0 = sub_1B00050D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F41F8);
  }
}

id WUBundle()
{
  if (WUBundle_onceToken[0] != -1)
    dispatch_once(WUBundle_onceToken, &__block_literal_global);
  return (id)WUBundle___WUBundle;
}

uint64_t DeviceSupportsMapsControlEffects()
{
  if (DeviceSupportsMapsControlEffects_onceToken != -1)
    dispatch_once(&DeviceSupportsMapsControlEffects_onceToken, &__block_literal_global_148);
  return DeviceSupportsMapsControlEffects_result;
}

void Spawn_WeatherV134DefaultBackground_graph_2A7B19A3_6233_44A1_ACFF_134C79957C7F(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  v4 = 129 * a3 + 129;
  *a4 = v4;
  a4[1] = v4;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_2A7B19A3_6233_44A1_ACFF_134C79957C7F()
{
  uint64_t result;
  uint64_t *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(uint64_t **)(result + 24);
  v2 = 129 * **(_QWORD **)(result + 16) + 129;
  *v1 = v2;
  v1[1] = v2;
  return result;
}

float32x4_t Main_WeatherV134DefaultBackground_graph_B485E447_6153_4F1E_A234_5E82577E7409(float32x4_t a1, uint64_t a2, uint64_t a3, float32x4_t *a4)
{
  float32x4_t result;

  result = vmulq_f32(vaddq_f32(a1, (float32x4_t)xmmword_1B000C950), (float32x4_t)vdupq_n_s32(0x3F266666u));
  *a4 = result;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_B485E447_6153_4F1E_A234_5E82577E7409()
{
  uint64_t arguments_buffer;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result = (__n128)vmulq_f32(vaddq_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), (float32x4_t)xmmword_1B000C950), (float32x4_t)vdupq_n_s32(0x3F266666u));
  result.n128_u32[3] = 1.0;
  *(__n128 *)*(_QWORD *)(arguments_buffer + 24) = result;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_A4F048EA_D4F1_48B5_8E2B_3AF51FC471D5(float a1, float a2, float a3, uint64_t a4, uint64_t a5, float *a6)
{
  float result;

  result = (float)(a1 + a2) + a3;
  *a6 = result;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_A4F048EA_D4F1_48B5_8E2B_3AF51FC471D5()
{
  uint64_t arguments_buffer;
  float *v1;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  result = (float)(**(float **)(arguments_buffer + 16) + **(float **)(arguments_buffer + 24))
         + **(float **)(arguments_buffer + 32);
  *v1 = result;
  v1[1] = result;
  return result;
}

float Main_WeatherV134DefaultBackground_graph_53228F15_DE98_4A87_9758_893266E73896(__n128 a1, float a2, float32x2_t a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7)
{
  float v9;
  BOOL v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float result;
  __n128 v18;
  __n128 v19;

  a1.n128_f32[0] = 750.0 * a1.n128_f32[0];
  v9 = (float)(a2 * 0.55) + 0.1;
  v10 = a2 <= 0.5;
  v11 = 0.25;
  if (v10)
    v11 = 0.0;
  v12 = v9 + v11;
  a1.n128_f32[0] = (float)(0.0 - a1.n128_f32[0]) + (float)((float)(a1.n128_f32[0] + a1.n128_f32[0]) * v12);
  v19 = a1;
  v13 = vmuls_lane_f32(750.0, a3, 1);
  v14 = v13 * 0.4;
  v15 = v13 * 0.85;
  v16 = sinf(v12 * 3.1416);
  result = v14 + (float)((float)(v15 - v14) * fminf(fmaxf(fmaxf(a4, powf(v16, 4.0) * 30.0) / 45.0, 0.0), 1.0));
  v18 = v19;
  v18.n128_f32[1] = result;
  v18.n128_u32[2] = a7->n128_u32[2];
  *a7 = v18;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_53228F15_DE98_4A87_9758_893266E73896()
{
  uint64_t arguments_buffer;
  float *v1;
  uint64_t v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float result;
  __int128 v11;
  unsigned int v12;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(_QWORD *)(arguments_buffer + 48);
  v3 = **(float **)(arguments_buffer + 40);
  v4 = 0.25;
  if (*v1 <= 0.5)
    v4 = 0.0;
  v5 = (float)((float)(*v1 * 0.55) + 0.1) + v4;
  *(float *)&v12 = (float)(0.0 - (float)(**(float **)(arguments_buffer + 16) * 750.0))
                 + (float)((float)((float)(**(float **)(arguments_buffer + 16) * 750.0)
                                 + (float)(**(float **)(arguments_buffer + 16) * 750.0))
                         * v5);
  v6 = *(float *)(*(_QWORD *)(arguments_buffer + 32) + 4) * 750.0;
  v7 = v6 * 0.4;
  v8 = v6 * 0.85;
  v9 = sinf(v5 * 3.1416);
  result = v7 + (float)((float)(v8 - v7) * fminf(fmaxf(fmaxf(v3, powf(v9, 4.0) * 30.0) / 45.0, 0.0), 1.0));
  *(_QWORD *)&v11 = __PAIR64__(LODWORD(result), v12);
  DWORD2(v11) = *(_DWORD *)(v2 + 8);
  HIDWORD(v11) = 1.0;
  *(_OWORD *)v2 = v11;
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_0F349610_D817_4E02_8247_702CAA1AE7F3(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_0F349610_D817_4E02_8247_702CAA1AE7F3()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134DefaultBackground_graph_E98E71ED_C208_4BF9_B7C6_57A575CF000F(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_E98E71ED_C208_4BF9_B7C6_57A575CF000F()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_992D1BF9_E4B6_4560_9BDE_503D47CD80A9(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_992D1BF9_E4B6_4560_9BDE_503D47CD80A9()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134DefaultBackground_graph_BE1D59D1_7F54_4E6D_90E1_183F1FCDC611(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_BE1D59D1_7F54_4E6D_90E1_183F1FCDC611()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_D6EC2D51_EB9E_40E0_8550_71D3C6975A0A(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_D6EC2D51_EB9E_40E0_8550_71D3C6975A0A()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134DefaultBackground_graph_154351DC_BD6A_43EB_99EF_38421D359A2C(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_154351DC_BD6A_43EB_99EF_38421D359A2C()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

float32_t Render_WeatherV134DefaultBackground_graph_B53B5B21_A3C9_4260_B1F6_DD10A088102E(float a1, uint64_t a2, uint64_t a3, float32x2_t *a4)
{
  double v6;
  const float *v7;
  float32_t result;
  float32x2_t v9;

  vfx_script_clock_time();
  *(float *)&v6 = v6;
  v7 = (const float *)&dword_1B000C9FC;
  result = *(float *)&v6 * a1;
  v9 = vld1_dup_f32(v7);
  v9.f32[0] = result;
  *a4 = v9;
  return result;
}

float32_t __vfx_script_WeatherV134DefaultBackground_graph_B53B5B21_A3C9_4260_B1F6_DD10A088102E()
{
  uint64_t arguments_buffer;
  float32x2_t *v1;
  float v2;
  double v3;
  const float *v4;
  float32_t result;
  float32x2_t v6;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x2_t **)(arguments_buffer + 24);
  v2 = **(float **)(arguments_buffer + 16);
  vfx_script_clock_time();
  *(float *)&v3 = v3;
  v4 = (const float *)&dword_1B000C9FC;
  result = v2 * *(float *)&v3;
  v6 = vld1_dup_f32(v4);
  v6.f32[0] = result;
  *v1 = v6;
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_15A97160_8BD7_4BD2_AED7_2C24BD80A05B(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_15A97160_8BD7_4BD2_AED7_2C24BD80A05B()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134DefaultBackground_graph_FA37660E_C3EE_4869_AC4E_FD4A89EEF818(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_FA37660E_C3EE_4869_AC4E_FD4A89EEF818()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

uint64_t Main_WeatherV134DefaultBackground_graph_FF0F03E4_A093_48A9_9389_9EECD23F6B63(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_FF0F03E4_A093_48A9_9389_9EECD23F6B63()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

float Main_WeatherV134DefaultBackground_graph_941FF1B9_4780_435E_AAC8_CA56C9D3B7D4(float a1, float a2, float a3, uint64_t a4, int a5, int32x4_t *a6, _OWORD *a7)
{
  int32x2_t v13;
  __int128 v14;
  double v15;
  float v16;
  unsigned int v17;
  unsigned int v18;
  uint32x2_t v19;
  float32x2_t v25;
  float result;

  vfx_script_clock_time();
  *(float *)&v15 = v15;
  v16 = roundf((float)(*(float *)&v15 * 0.5) + 0.5);
  v17 = fmaxf(v16, 0.0);
  v18 = 277803737
      * (((747796405 * (v17 + a5) - 2112530986) >> (((747796405 * (v17 + a5) - 2112530986) >> 28) + 4)) ^ (747796405 * (v17 + a5) - 2112530986));
  if ((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0) >= a2)
    *(float *)v13.i32 = 0.0;
  else
    *(float *)v13.i32 = a1;
  *(int32x2_t *)&v14 = vmla_s32((int32x2_t)0x545A1CDE5FC8EB1CLL, (int32x2_t)__PAIR64__(fmaxf((float)(v16 * 174.0) + 60.0, 0.0) + a5, fmaxf(v16 * 50.0, 0.0) + a5), vdup_n_s32(0x2C9277B5u));
  v19 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32(*(uint32x2_t *)&v14, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32(*(uint32x2_t *)&v14, 0x1CuLL))), *(int8x8_t *)&v14), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V1.2S, #1.0 }
  v25 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v19, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v19, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D1);
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)&v14 = vmla_f32((float32x2_t)0x41200000C1A00000, (float32x2_t)0x420C000042200000, vadd_f32(v25, _D1));
  result = a3 + -132.0;
  *a6 = vdupq_lane_s32(v13, 0);
  *((float *)&v14 + 2) = a3 + -132.0;
  *a7 = v14;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_941FF1B9_4780_435E_AAC8_CA56C9D3B7D4()
{
  uint64_t arguments_buffer;
  _OWORD *v1;
  int32x4_t *v2;
  int v3;
  float v4;
  float v5;
  float v6;
  int32x2_t v7;
  double v8;
  float v9;
  unsigned int v10;
  unsigned int v11;
  int8x8_t v12;
  uint32x2_t v13;
  float32x2_t v19;
  __int128 v21;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v2 = *(int32x4_t **)(arguments_buffer + 40);
  v1 = *(_OWORD **)(arguments_buffer + 48);
  v3 = **(_DWORD **)(arguments_buffer + 8);
  v4 = **(float **)(arguments_buffer + 16);
  v5 = **(float **)(arguments_buffer + 24);
  v6 = **(float **)(arguments_buffer + 32);
  vfx_script_clock_time();
  *(float *)&v8 = v8;
  v9 = roundf((float)(*(float *)&v8 * 0.5) + 0.5);
  v10 = fmaxf(v9, 0.0);
  v11 = 277803737
      * (((747796405 * (v10 + v3) - 2112530986) >> (((747796405 * (v10 + v3) - 2112530986) >> 28) + 4)) ^ (747796405 * (v10 + v3) - 2112530986));
  if ((float)(COERCE_FLOAT((v11 >> 31) ^ (v11 >> 9) | 0x3F800000) + -1.0) >= v5)
    *(float *)v7.i32 = 0.0;
  else
    *(float *)v7.i32 = v4;
  v12 = (int8x8_t)vmla_s32((int32x2_t)0x545A1CDE5FC8EB1CLL, (int32x2_t)__PAIR64__(fmaxf((float)(v9 * 174.0) + 60.0, 0.0) + v3, fmaxf(v9 * 50.0, 0.0) + v3), vdup_n_s32(0x2C9277B5u));
  v13 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32((uint32x2_t)v12, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32((uint32x2_t)v12, 0x1CuLL))), v12), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V1.2S, #1.0 }
  v19 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v13, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v13, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D1);
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)&v21 = vmla_f32((float32x2_t)0x41200000C1A00000, (float32x2_t)0x420C000042200000, vadd_f32(v19, _D1));
  result = v6 + -132.0;
  *v2 = vdupq_lane_s32(v7, 0);
  *((float *)&v21 + 2) = v6 + -132.0;
  HIDWORD(v21) = 1.0;
  *v1 = v21;
  return result;
}

float32x4_t Main_WeatherV134DefaultBackground_graph_CC6C8B7C_E6A6_4117_A3FC_08BEEB962B77(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8, _OWORD *a9, _DWORD *a10, float32x4_t *a11, float32x4_t *a12)
{
  __float2 v16;
  __int128 v17;
  float32x4_t v18;
  float32x4_t result;

  v16 = __sincosf_stret((float)(vmuls_lane_f32(3.1416, a1, 2) / 180.0) * 0.5);
  *(_QWORD *)&v17 = 0;
  *((__float2 *)&v17 + 1) = v16;
  v18 = vmlaq_f32(a6, (float32x4_t)0, a5);
  result = vmlaq_f32(vaddq_f32(a4, v18), (float32x4_t)0, a3);
  *a9 = v17;
  *a10 = vaddq_f32(a2, vmulq_laneq_f32(result, a2, 2)).i32[1];
  *a11 = result;
  *a12 = vaddq_f32(a3, vmlaq_f32(v18, (float32x4_t)0, a4));
  return result;
}

float32x4_t __vfx_script_WeatherV134DefaultBackground_graph_CC6C8B7C_E6A6_4117_A3FC_08BEEB962B77()
{
  _QWORD *arguments_buffer;
  float32x4_t *v1;
  _OWORD *v2;
  _DWORD *v3;
  float32x4_t *v4;
  float32x4_t *v5;
  __float2 v6;
  __int128 v7;
  float32x4_t v8;
  float32x4_t result;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float32x4_t *)arguments_buffer[4];
  v2 = (_OWORD *)arguments_buffer[5];
  v3 = (_DWORD *)arguments_buffer[6];
  v4 = (float32x4_t *)arguments_buffer[7];
  v5 = (float32x4_t *)arguments_buffer[8];
  v14 = *(float32x4_t *)arguments_buffer[3];
  v12 = v1[1];
  v13 = *v1;
  v10 = v1[3];
  v11 = v1[2];
  v6 = __sincosf_stret((float)((float)(*(float *)(arguments_buffer[2] + 8) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v7 = 0;
  *((__float2 *)&v7 + 1) = v6;
  v8 = vmlaq_f32(v10, (float32x4_t)0, v11);
  result = vmlaq_f32(vaddq_f32(v12, v8), (float32x4_t)0, v13);
  *v2 = v7;
  *v3 = vaddq_f32(v14, vmulq_laneq_f32(result, v14, 2)).i32[1];
  *v4 = result;
  *v5 = vaddq_f32(v13, vmlaq_f32(v8, (float32x4_t)0, v12));
  return result;
}

float32x4_t Main_WeatherV134DefaultBackground_graph_70671C3E_6E62_4619_8169_2E550CB87C61(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, uint64_t a5, uint64_t a6, float32x4_t *a7)
{
  float32x4_t result;

  __asm { FMOV            V4.4S, #1.0 }
  a4.i32[0] = 981668463;
  result = vmulq_f32((float32x4_t)vandq_s8((int8x16_t)vmlaq_n_f32(a1, vsubq_f32(_Q4, a1), fminf(fmaxf(fminf(fmaxf(a2.f32[0], 0.0), 10.0) / 10.0, 0.0), 1.0) + 0.0), (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgtq_f32(a4, a2)), 0)), a3);
  *a7 = result;
  return result;
}

float32x4_t __vfx_script_WeatherV134DefaultBackground_graph_70671C3E_6E62_4619_8169_2E550CB87C61()
{
  uint64_t arguments_buffer;
  float32x4_t v1;
  float32x4_t v7;
  float32x4_t result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1.i32[0] = **(_DWORD **)(arguments_buffer + 24);
  __asm { FMOV            V4.4S, #1.0 }
  v7.i32[0] = 981668463;
  result = vmulq_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 32), (float32x4_t)vandq_s8((int8x16_t)vmlaq_n_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), vsubq_f32(_Q4, *(float32x4_t *)*(_QWORD *)(arguments_buffer + 16)), fminf(fmaxf(fminf(fmaxf(v1.f32[0], 0.0), 10.0) / 10.0, 0.0), 1.0) + 0.0), (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgtq_f32(v7, v1)), 0)));
  *(float32x4_t *)*(_QWORD *)(arguments_buffer + 40) = result;
  return result;
}

float Main_WeatherV134DefaultBackground_graph_9DF72E75_E6EE_4805_B79B_5878A338CFD4(float32x4_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  float v5;
  float32x4_t v6;
  simd_float4 v7;
  float v10;
  float v11;
  __int128 v12;
  float result;
  simd_float4 x;
  simd_float4 v23;

  v5 = vmuls_lane_f32(3.1416, a1, 2);
  a1.f32[0] = a1.f32[0] + 180.0;
  *(float32x2_t *)a1.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)a1.f32, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  a1.f32[2] = v5 / 180.0;
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  v7 = (simd_float4)vmulq_f32(a1, v6);
  v7.i32[3] = 0;
  x = v7;
  v23 = _simd_cos_f4(v7);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v23;
  v10 = vmuls_lane_f32(v23.f32[1], (float32x4_t)v23, 2);
  v11 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v12 = vmlas_n_f32(-(float)(v23.f32[0] * v11), v10, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v23.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v12) = _S5;
  result = vmlas_n_f32(v11 * _Q0.f32[0], v10, v23.f32[0]);
  *((_QWORD *)&v12 + 1) = __PAIR64__(LODWORD(result), _S6);
  *a4 = v12;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_9DF72E75_E6EE_4805_B79B_5878A338CFD4()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  _OWORD *v2;
  float32x2_t v3;
  float32x4_t v4;
  float32x4_t v5;
  simd_float4 v6;
  float v9;
  float v10;
  __int128 v11;
  float result;
  simd_float4 x;
  simd_float4 v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 16);
  v2 = *(_OWORD **)(arguments_buffer + 24);
  v3.f32[0] = *(float *)v1 + 180.0;
  v3.i32[1] = *(_DWORD *)(v1 + 4);
  *(float32x2_t *)v4.f32 = vdiv_f32(vmul_f32(v3, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  v4.f32[2] = (float)(*(float *)(v1 + 8) * 3.1416) / 180.0;
  v5.i64[0] = 0x3F0000003F000000;
  v5.i64[1] = 0x3F0000003F000000;
  v6 = (simd_float4)vmulq_f32(v4, v5);
  v6.i32[3] = 0;
  x = v6;
  v22 = _simd_cos_f4(v6);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v22;
  v9 = vmuls_lane_f32(v22.f32[1], (float32x4_t)v22, 2);
  v10 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v11 = vmlas_n_f32(-(float)(v22.f32[0] * v10), v9, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v22.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v11) = _S5;
  result = vmlas_n_f32(v10 * _Q0.f32[0], v9, v22.f32[0]);
  *((_QWORD *)&v11 + 1) = __PAIR64__(LODWORD(result), _S6);
  *v2 = v11;
  return result;
}

float Main_WeatherV134DefaultBackground_graph_687C644E_376F_4EAE_98D7_689A82BB6657(float32x4_t a1, float32x4_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  float32x4_t v6;
  simd_float4 v7;
  float v10;
  float v11;
  __int128 v12;
  float result;
  simd_float4 x;
  simd_float4 v23;

  *(float32x2_t *)a2.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)a1.f32, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  a2.f32[2] = vmuls_lane_f32(3.1416, a1, 2) / 180.0;
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  v7 = (simd_float4)vmulq_f32(a2, v6);
  v7.i32[3] = 0;
  x = v7;
  v23 = _simd_cos_f4(v7);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v23;
  v10 = vmuls_lane_f32(v23.f32[1], (float32x4_t)v23, 2);
  v11 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v12 = vmlas_n_f32(-(float)(v23.f32[0] * v11), v10, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v23.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v12) = _S5;
  result = vmlas_n_f32(v11 * _Q0.f32[0], v10, v23.f32[0]);
  *((_QWORD *)&v12 + 1) = __PAIR64__(LODWORD(result), _S6);
  *a5 = v12;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_687C644E_376F_4EAE_98D7_689A82BB6657()
{
  uint64_t arguments_buffer;
  float32x2_t *v1;
  _OWORD *v2;
  float32x4_t v3;
  float32x4_t v4;
  simd_float4 v5;
  float v8;
  float v9;
  __int128 v10;
  float result;
  simd_float4 x;
  simd_float4 v21;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x2_t **)(arguments_buffer + 16);
  v2 = *(_OWORD **)(arguments_buffer + 24);
  *(float32x2_t *)v3.f32 = vdiv_f32(vmul_f32(*v1, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  v3.f32[2] = (float)(v1[1].f32[0] * 3.1416) / 180.0;
  v4.i64[0] = 0x3F0000003F000000;
  v4.i64[1] = 0x3F0000003F000000;
  v5 = (simd_float4)vmulq_f32(v3, v4);
  v5.i32[3] = 0;
  x = v5;
  v21 = _simd_cos_f4(v5);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v21;
  v8 = vmuls_lane_f32(v21.f32[1], (float32x4_t)v21, 2);
  v9 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v10 = vmlas_n_f32(-(float)(v21.f32[0] * v9), v8, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v21.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v10) = _S5;
  result = vmlas_n_f32(v9 * _Q0.f32[0], v8, v21.f32[0]);
  *((_QWORD *)&v10 + 1) = __PAIR64__(LODWORD(result), _S6);
  *v2 = v10;
  return result;
}

void Main_WeatherV134DefaultBackground_graph_44AA76D7_BEAA_49F7_985D_7CC801C0414C(float32x4_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  __float2 v5;
  __int128 v6;

  v5 = __sincosf_stret((float)(vmuls_lane_f32(3.1416, a1, 2) / 180.0) * 0.5);
  *(_QWORD *)&v6 = 0;
  *((__float2 *)&v6 + 1) = v5;
  *a4 = v6;
}

void __vfx_script_WeatherV134DefaultBackground_graph_44AA76D7_BEAA_49F7_985D_7CC801C0414C()
{
  uint64_t arguments_buffer;
  _OWORD *v1;
  __float2 v2;
  __int128 v3;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_OWORD **)(arguments_buffer + 24);
  v2 = __sincosf_stret((float)((float)(*(float *)(*(_QWORD *)(arguments_buffer + 16) + 8) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v3 = 0;
  *((__float2 *)&v3 + 1) = v2;
  *v1 = v3;
}

uint64_t Main_WeatherV134DefaultBackground_graph_40388143_9398_4EBF_A6B6_254EA87C9040(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4)
{
  uint64_t v5;
  simd_float4 v6;
  int8x16_t v7;
  int32x4_t v8;
  __n128 v9;
  uint64_t v10;
  simd_float4 v11;
  int8x16_t v12;
  int32x4_t v13;
  __n128 v14;
  uint64_t v15;
  simd_float4 v16;
  int8x16_t v17;
  int32x4_t v18;
  __n128 v19;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v28;
  int v29;
  _OWORD v30[3];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v30[0] = xmmword_1B000C960;
  v30[1] = xmmword_1B000C970;
  v30[2] = xmmword_1B000C980;
  v28 = 0x3EFB613100000000;
  v29 = 1065353216;
  v5 = MEMORY[0x1B5E03E58](a1, v30, &v28, 3, 1);
  v25 = (float32x4_t)vdupq_n_s32(0x3D6147AEu);
  v24 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
  v6 = (simd_float4)vdivq_f32(vaddq_f32(a2, v25), v24);
  v6.i32[3] = 0;
  v7 = (int8x16_t)_simd_pow_f4(v6, (simd_float4)xmmword_1B000C990);
  v23 = (float32x4_t)vdupq_n_s32(0x414EB852u);
  v22 = (float32x4_t)vdupq_n_s32(0x3D25AEE6u);
  v8 = vcgeq_f32(v22, a2);
  v8.i32[3] = 0;
  v9 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v8), (int8x16_t)vdivq_f32(a2, v23), v7);
  v9.n128_u32[3] = a2.u32[3];
  v10 = MEMORY[0x1B5E03E64](a1, v5, 0, v9);
  v11 = (simd_float4)vdivq_f32(vaddq_f32(a3, v25), v24);
  v11.i32[3] = 0;
  v12 = (int8x16_t)_simd_pow_f4(v11, (simd_float4)xmmword_1B000C990);
  v13 = vcgeq_f32(v22, a3);
  v13.i32[3] = 0;
  v14 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v13), (int8x16_t)vdivq_f32(a3, v23), v12);
  v14.n128_u32[3] = a3.u32[3];
  v15 = MEMORY[0x1B5E03E64](a1, v10, 1, v14);
  v16 = (simd_float4)vdivq_f32(vaddq_f32(a4, v25), v24);
  v16.i32[3] = 0;
  v17 = (int8x16_t)_simd_pow_f4(v16, (simd_float4)xmmword_1B000C990);
  v18 = vcgeq_f32(v22, a4);
  v18.i32[3] = 0;
  v19 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v18), (int8x16_t)vdivq_f32(a4, v23), v17);
  v19.n128_u32[3] = a4.u32[3];
  MEMORY[0x1B5E03E64](a1, v15, 2, v19);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_40388143_9398_4EBF_A6B6_254EA87C9040(uint64_t a1)
{
  _QWORD *arguments_buffer;
  uint64_t v3;
  simd_float4 v4;
  int8x16_t v5;
  int32x4_t v6;
  __n128 v7;
  uint64_t v8;
  simd_float4 v9;
  int8x16_t v10;
  int32x4_t v11;
  __n128 v12;
  uint64_t v13;
  simd_float4 v14;
  int8x16_t v15;
  int32x4_t v16;
  __n128 v17;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v26;
  int v27;
  _OWORD v28[3];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v19 = *(float32x4_t *)arguments_buffer[2];
  v24 = *(float32x4_t *)arguments_buffer[3];
  v25 = *(float32x4_t *)arguments_buffer[4];
  v28[0] = xmmword_1B000C960;
  v28[1] = xmmword_1B000C970;
  v28[2] = xmmword_1B000C980;
  v26 = 0x3EFB613100000000;
  v27 = 1065353216;
  v3 = MEMORY[0x1B5E03E58](a1, v28, &v26, 3, 1);
  v23 = (float32x4_t)vdupq_n_s32(0x3D6147AEu);
  v22 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
  v4 = (simd_float4)vdivq_f32(vaddq_f32(v19, v23), v22);
  v4.i32[3] = 0;
  v5 = (int8x16_t)_simd_pow_f4(v4, (simd_float4)xmmword_1B000C990);
  v21 = (float32x4_t)vdupq_n_s32(0x414EB852u);
  v20 = (float32x4_t)vdupq_n_s32(0x3D25AEE6u);
  v6 = vcgeq_f32(v20, v19);
  v6.i32[3] = 0;
  v7 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v6), (int8x16_t)vdivq_f32(v19, v21), v5);
  v7.n128_u32[3] = v19.u32[3];
  v8 = MEMORY[0x1B5E03E64](a1, v3, 0, v7);
  v9 = (simd_float4)vdivq_f32(vaddq_f32(v24, v23), v22);
  v9.i32[3] = 0;
  v10 = (int8x16_t)_simd_pow_f4(v9, (simd_float4)xmmword_1B000C990);
  v11 = vcgeq_f32(v20, v24);
  v11.i32[3] = 0;
  v12 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v11), (int8x16_t)vdivq_f32(v24, v21), v10);
  v12.n128_u32[3] = v24.u32[3];
  v13 = MEMORY[0x1B5E03E64](a1, v8, 1, v12);
  v14 = (simd_float4)vdivq_f32(vaddq_f32(v25, v23), v22);
  v14.i32[3] = 0;
  v15 = (int8x16_t)_simd_pow_f4(v14, (simd_float4)xmmword_1B000C990);
  v16 = vcgeq_f32(v20, v25);
  v16.i32[3] = 0;
  v17 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v16), (int8x16_t)vdivq_f32(v25, v21), v15);
  v17.n128_u32[3] = v25.u32[3];
  MEMORY[0x1B5E03E64](a1, v13, 2, v17);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

__n128 Main_WeatherV134DefaultBackground_graph_531FFCCA_EAE2_4B46_AF77_35CAB62C8ACE(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t *a9, float *a10)
{
  float32x4_t v12;
  float v13;
  float v14;
  float v15;
  float v16;
  __n128 result;
  float32x4_t v18;
  float32x4_t v19;
  __n128 v20;

  v12 = vsubq_f32(a2, a1);
  a3.n128_f32[0] = (float)(50.0 - a4) + (float)(a3.n128_f32[2] + 2.0);
  v13 = fabsf(v12.f32[2]);
  if (v13 > 0.00000011921)
    v14 = (float)(a1.f32[2] + a3.n128_f32[0]) / v13;
  else
    v14 = 0.0;
  v15 = a5 * 100.0;
  a3.n128_f32[0] = 0.0 - a3.n128_f32[0];
  v20 = a3;
  *(float32x2_t *)a1.f32 = vadd_f32(*(float32x2_t *)a1.f32, vmul_n_f32(*(float32x2_t *)v12.f32, v14));
  v19 = a1;
  vfx_script_texture_sample1d();
  *a10 = v15 * v16;
  v18 = v19;
  result = v20;
  v18.i32[2] = v20.n128_u32[0];
  *a9 = v18;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_531FFCCA_EAE2_4B46_AF77_35CAB62C8ACE()
{
  uint64_t arguments_buffer;
  float32x4_t *v1;
  float32x4_t *v2;
  float *v3;
  float32x4_t v4;
  float32x4_t v5;
  __n128 v6;
  float v7;
  float v8;
  float v9;
  float v10;
  __n128 result;
  float32x4_t v12;
  float32x4_t v13;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x4_t **)(arguments_buffer + 24);
  v2 = *(float32x4_t **)(arguments_buffer + 72);
  v3 = *(float **)(arguments_buffer + 80);
  v4 = *(float32x4_t *)*(_QWORD *)(arguments_buffer + 16);
  v5 = vsubq_f32(*v1, v4);
  v6.n128_f32[0] = (float)(*(float *)(*(_QWORD *)(arguments_buffer + 32) + 8) + 2.0)
                 + (float)(50.0 - **(float **)(arguments_buffer + 40));
  v7 = fabsf(v5.f32[2]);
  if (v7 > 0.00000011921)
    v8 = (float)(COERCE_FLOAT(*(_QWORD *)(*(_QWORD *)(arguments_buffer + 16) + 8)) + v6.n128_f32[0]) / v7;
  else
    v8 = 0.0;
  v9 = **(float **)(arguments_buffer + 48) * 100.0;
  v6.n128_f32[0] = 0.0 - v6.n128_f32[0];
  v14 = v6;
  *(float32x2_t *)v4.f32 = vadd_f32(*(float32x2_t *)v4.f32, vmul_n_f32(*(float32x2_t *)v5.f32, v8));
  v13 = v4;
  vfx_script_texture_sample1d();
  *v3 = v9 * v10;
  v12 = v13;
  result = v14;
  v12.i32[2] = v14.n128_u32[0];
  *v2 = v12;
  v1->i32[3] = 1065353216;
  v2->i32[3] = 1065353216;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_7D0F8E90_4124_41AE_9350_12B5BA66ED65(float32x4_t a1, float32x4_t a2, __n128 a3, __n128 a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t *a9, float *a10)
{
  float32x4_t v12;
  float v13;
  float v14;
  float v15;
  float v16;
  __n128 result;
  float32x4_t v18;
  float32x4_t v19;
  __n128 v20;

  v12 = vsubq_f32(a2, a1);
  a3.n128_f32[0] = (float)(0.0 - a3.n128_f32[0]) - (float)(a4.n128_f32[2] + 2.0);
  v13 = fabsf(v12.f32[2]);
  if (v13 > 0.00000011921)
    v14 = (float)(a1.f32[2] + a3.n128_f32[0]) / v13;
  else
    v14 = 0.0;
  v15 = a5 * 100.0;
  a3.n128_f32[0] = 0.0 - a3.n128_f32[0];
  v20 = a3;
  *(float32x2_t *)a1.f32 = vadd_f32(*(float32x2_t *)a1.f32, vmul_n_f32(*(float32x2_t *)v12.f32, v14));
  v19 = a1;
  vfx_script_texture_sample1d();
  *a10 = v15 * v16;
  v18 = v19;
  result = v20;
  v18.i32[2] = v20.n128_u32[0];
  *a9 = v18;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_7D0F8E90_4124_41AE_9350_12B5BA66ED65()
{
  uint64_t arguments_buffer;
  float32x4_t *v1;
  float32x4_t *v2;
  float32x4_t *v3;
  float *v4;
  float32x4_t v5;
  float32x4_t v6;
  __n128 v7;
  float v8;
  float v9;
  float v10;
  float v11;
  __n128 result;
  float32x4_t v13;
  float32x4_t v14;
  __n128 v15;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x4_t **)(arguments_buffer + 16);
  v2 = *(float32x4_t **)(arguments_buffer + 24);
  v3 = *(float32x4_t **)(arguments_buffer + 72);
  v4 = *(float **)(arguments_buffer + 80);
  v5 = *v1;
  v6 = vsubq_f32(*v2, *v1);
  v7.n128_f32[0] = (float)(0.0 - **(float **)(arguments_buffer + 32))
                 - (float)(*(float *)(*(_QWORD *)(arguments_buffer + 40) + 8) + 2.0);
  v8 = fabsf(v6.f32[2]);
  if (v8 > 0.00000011921)
    v9 = (float)(COERCE_FLOAT(v1->i64[1]) + v7.n128_f32[0]) / v8;
  else
    v9 = 0.0;
  v10 = **(float **)(arguments_buffer + 48) * 100.0;
  v7.n128_f32[0] = 0.0 - v7.n128_f32[0];
  v15 = v7;
  *(float32x2_t *)v5.f32 = vadd_f32(*(float32x2_t *)v5.f32, vmul_n_f32(*(float32x2_t *)v6.f32, v9));
  v14 = v5;
  vfx_script_texture_sample1d();
  *v4 = v10 * v11;
  v13 = v14;
  result = v15;
  v13.i32[2] = v15.n128_u32[0];
  *v3 = v13;
  v2->i32[3] = 1065353216;
  v3->i32[3] = 1065353216;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_28494FCF_1F9E_43DB_8133_B48CBE440680(float32x4_t a1, float32x4_t a2, __n128 a3, __n128 a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t *a9, float *a10)
{
  float32x4_t v12;
  float v13;
  float v14;
  float v15;
  float v16;
  __n128 result;
  float32x4_t v18;
  float32x4_t v19;
  __n128 v20;

  v12 = vsubq_f32(a2, a1);
  a3.n128_f32[0] = (float)(50.0 - a3.n128_f32[0]) - (float)(a4.n128_f32[2] + 2.0);
  v13 = fabsf(v12.f32[2]);
  if (v13 > 0.00000011921)
    v14 = (float)(a1.f32[2] + a3.n128_f32[0]) / v13;
  else
    v14 = 0.0;
  v15 = a5 * 100.0;
  a3.n128_f32[0] = 0.0 - a3.n128_f32[0];
  v20 = a3;
  *(float32x2_t *)a1.f32 = vadd_f32(*(float32x2_t *)a1.f32, vmul_n_f32(*(float32x2_t *)v12.f32, v14));
  v19 = a1;
  vfx_script_texture_sample1d();
  *a10 = v15 * v16;
  v18 = v19;
  result = v20;
  v18.i32[2] = v20.n128_u32[0];
  *a9 = v18;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_28494FCF_1F9E_43DB_8133_B48CBE440680()
{
  uint64_t arguments_buffer;
  float32x4_t *v1;
  float32x4_t *v2;
  float *v3;
  float32x4_t v4;
  float32x4_t v5;
  __n128 v6;
  float v7;
  float v8;
  float v9;
  float v10;
  __n128 result;
  float32x4_t v12;
  float32x4_t v13;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x4_t **)(arguments_buffer + 24);
  v2 = *(float32x4_t **)(arguments_buffer + 72);
  v3 = *(float **)(arguments_buffer + 80);
  v4 = *(float32x4_t *)*(_QWORD *)(arguments_buffer + 16);
  v5 = vsubq_f32(*v1, v4);
  v6.n128_f32[0] = (float)(50.0 - **(float **)(arguments_buffer + 32))
                 - (float)(*(float *)(*(_QWORD *)(arguments_buffer + 40) + 8) + 2.0);
  v7 = fabsf(v5.f32[2]);
  if (v7 > 0.00000011921)
    v8 = (float)(COERCE_FLOAT(*(_QWORD *)(*(_QWORD *)(arguments_buffer + 16) + 8)) + v6.n128_f32[0]) / v7;
  else
    v8 = 0.0;
  v9 = **(float **)(arguments_buffer + 48) * 100.0;
  v6.n128_f32[0] = 0.0 - v6.n128_f32[0];
  v14 = v6;
  *(float32x2_t *)v4.f32 = vadd_f32(*(float32x2_t *)v4.f32, vmul_n_f32(*(float32x2_t *)v5.f32, v8));
  v13 = v4;
  vfx_script_texture_sample1d();
  *v3 = v9 * v10;
  v12 = v13;
  result = v14;
  v12.i32[2] = v14.n128_u32[0];
  *v2 = v12;
  v1->i32[3] = 1065353216;
  v2->i32[3] = 1065353216;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_CCC16B44_F7AE_4C8B_A679_6ABB4EFCEEB0(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, float a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x4_t *a9, float *a10)
{
  float32x4_t v12;
  float v13;
  float v14;
  float v15;
  float v16;
  __n128 result;
  float32x4_t v18;
  float32x4_t v19;
  __n128 v20;

  v12 = vsubq_f32(a2, a1);
  a3.n128_f32[0] = (float)(0.0 - a4) + (float)(a3.n128_f32[2] + 2.0);
  v13 = fabsf(v12.f32[2]);
  if (v13 > 0.00000011921)
    v14 = (float)(a1.f32[2] - a3.n128_f32[0]) / v13;
  else
    v14 = 0.0;
  v15 = a5 * 100.0;
  a3.n128_f32[0] = 0.0 - a3.n128_f32[0];
  v20 = a3;
  *(float32x2_t *)a1.f32 = vadd_f32(*(float32x2_t *)a1.f32, vmul_n_f32(*(float32x2_t *)v12.f32, v14));
  v19 = a1;
  vfx_script_texture_sample1d();
  *a10 = v15 * v16;
  v18 = v19;
  result = v20;
  v18.i32[2] = v20.n128_u32[0];
  *a9 = v18;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_CCC16B44_F7AE_4C8B_A679_6ABB4EFCEEB0()
{
  uint64_t arguments_buffer;
  float32x4_t *v1;
  float32x4_t *v2;
  float32x4_t *v3;
  float *v4;
  float32x4_t v5;
  float32x4_t v6;
  __n128 v7;
  float v8;
  float v9;
  float v10;
  float v11;
  __n128 result;
  float32x4_t v13;
  float32x4_t v14;
  __n128 v15;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x4_t **)(arguments_buffer + 16);
  v2 = *(float32x4_t **)(arguments_buffer + 24);
  v3 = *(float32x4_t **)(arguments_buffer + 72);
  v4 = *(float **)(arguments_buffer + 80);
  v5 = *v1;
  v6 = vsubq_f32(*v2, *v1);
  v7.n128_f32[0] = (float)(*(float *)(*(_QWORD *)(arguments_buffer + 32) + 8) + 2.0)
                 + (float)(0.0 - **(float **)(arguments_buffer + 40));
  v8 = fabsf(v6.f32[2]);
  if (v8 > 0.00000011921)
    v9 = (float)(COERCE_FLOAT(v1->i64[1]) - v7.n128_f32[0]) / v8;
  else
    v9 = 0.0;
  v10 = **(float **)(arguments_buffer + 48) * 100.0;
  v7.n128_f32[0] = 0.0 - v7.n128_f32[0];
  v15 = v7;
  *(float32x2_t *)v5.f32 = vadd_f32(*(float32x2_t *)v5.f32, vmul_n_f32(*(float32x2_t *)v6.f32, v9));
  v14 = v5;
  vfx_script_texture_sample1d();
  *v4 = v10 * v11;
  v13 = v14;
  result = v15;
  v13.i32[2] = v15.n128_u32[0];
  *v3 = v13;
  v2->i32[3] = 1065353216;
  v3->i32[3] = 1065353216;
  return result;
}

void Spawn_WeatherV134DefaultBackground_graph_87A7D76A_B699_44CE_B99D_FC9F8DE20057(const void *a1, unsigned int a2, unsigned int a3, unint64_t *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_87A7D76A_B699_44CE_B99D_FC9F8DE20057()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_QWORD **)(result + 24) = **(unsigned __int8 **)(result + 16);
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_CAE1FBBE_4FAC_4AB5_BA0D_6F41D06E0881(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #5.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_CAE1FBBE_4FAC_4AB5_BA0D_6F41D06E0881()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #5.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_8FEAC260_1485_4BC9_AB73_4B5D669E6F57(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, int a8, float *a9, float *a10, float *a11, float *a12, __n128 *a13, float *a14)
{
  float v14;
  __n128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  unsigned int v21;
  float32x2_t v27;

  v14 = *a12;
  v15 = *a13;
  v16 = -a3;
  v17 = a3 * -0.5;
  v18 = fminf(v16, v17);
  v19 = fmaxf(v16, v17);
  v20 = (float)(a4 * 3.1416) / 180.0;
  if (a8)
    v21 = -1;
  else
    v21 = 0;
  __asm { FMOV            V19.2S, #1.0 }
  v27 = vmul_f32((float32x2_t)vbsl_s8((int8x8_t)vdup_n_s32(v21), (int8x8_t)0x409E66664081999ALL, _D19), *(float32x2_t *)&a2);
  *a11 = v18;
  a11[1] = v19;
  *a10 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a10[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a12 = fminf(v14, v20);
  a12[1] = fmaxf(v14, v20);
  a5.n128_u32[1] = v15.n128_u32[1];
  a5.n128_u32[2] = v15.n128_u32[2];
  *a13 = a5;
  *a14 = fminf(v27.f32[0], v27.f32[1]);
  a14[1] = fmaxf(v27.f32[0], v27.f32[1]);
  *a9 = a1;
  a9[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_8FEAC260_1485_4BC9_AB73_4B5D669E6F57()
{
  _QWORD *arguments_buffer;
  int8x8_t v1;
  int *v2;
  float32x2_t *v3;
  float *v4;
  float *v5;
  _DWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  float *v9;
  float *v10;
  float *v11;
  uint64_t v12;
  __int128 *v13;
  int v14;
  float32x2_t v15;
  __int128 v16;
  int8x8_t v17;
  float32x2_t v23;
  float v24;
  __int128 v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float32x2_t v30;
  float result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1.i32[0] = 0;
  v2 = (int *)arguments_buffer[2];
  v3 = (float32x2_t *)arguments_buffer[3];
  v4 = (float *)arguments_buffer[4];
  v5 = (float *)arguments_buffer[5];
  v6 = (_DWORD *)arguments_buffer[6];
  v7 = (_BYTE *)arguments_buffer[7];
  v8 = (_DWORD *)arguments_buffer[8];
  v9 = (float *)arguments_buffer[9];
  v10 = (float *)arguments_buffer[10];
  v11 = (float *)arguments_buffer[11];
  v13 = (__int128 *)arguments_buffer[12];
  v12 = arguments_buffer[13];
  v14 = *v2;
  v15 = *v3;
  LOBYTE(v16) = *v7;
  v17 = vdup_lane_s8(vceq_s8(*(int8x8_t *)&v16, v1), 0);
  LODWORD(v16) = *v6;
  __asm { FMOV            V7.2S, #1.0 }
  v23 = (float32x2_t)vbsl_s8(v17, _D7, (int8x8_t)0x409E66664081999ALL);
  v24 = *v11;
  v25 = *v13;
  LODWORD(v26) = HIDWORD(*(unint64_t *)v3);
  v27 = -*v4;
  v28 = *v4 * -0.5;
  v29 = (float)(*v5 * 3.1416) / 180.0;
  v30 = vmul_f32(*v3, v23);
  *v10 = fminf(v27, v28);
  v10[1] = fmaxf(v27, v28);
  *v9 = fminf(v15.f32[0], v26);
  v9[1] = fmaxf(v15.f32[0], v26);
  *v11 = fminf(v24, v29);
  v11[1] = fmaxf(v24, v29);
  DWORD1(v16) = DWORD1(v25);
  DWORD2(v16) = DWORD2(v25);
  *v13 = v16;
  v15.f32[0] = fminf(v30.f32[0], v30.f32[1]);
  result = fmaxf(v30.f32[0], v30.f32[1]);
  *(_DWORD *)v12 = v15.i32[0];
  *(float *)(v12 + 4) = result;
  *v8 = v14;
  v8[1] = v14;
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_8BE2EE52_14AA_42AE_A145_66AC9A19E88E(double a1, uint64_t a2, uint64_t a3, unsigned int a4, _QWORD *a5, float *a6, _QWORD *a7)
{
  uint64_t v7;
  float v8;
  float result;

  v7 = a4 ^ 1;
  *a5 = v7;
  a5[1] = v7;
  *a7 = a4;
  a7[1] = a4;
  v8 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v8;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_8BE2EE52_14AA_42AE_A145_66AC9A19E88E()
{
  uint64_t arguments_buffer;
  _BOOL8 *v1;
  float *v2;
  _QWORD *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  float v7;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_BOOL8 **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = *(_QWORD **)(arguments_buffer + 48);
  v4 = **(unsigned __int8 **)(arguments_buffer + 16);
  v5 = **(_BYTE **)(arguments_buffer + 16) == 0;
  v6 = **(_QWORD **)(arguments_buffer + 24);
  *v1 = v5;
  v1[1] = v5;
  *v3 = v4;
  v3[1] = v4;
  v7 = fminf(*(float *)&v6, *((float *)&v6 + 1));
  result = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  *v2 = v7;
  v2[1] = result;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_C36ED1FD_413E_468A_9CAD_C5EFFD99B227(float a1, float a2, float a3, uint64_t a4, uint64_t a5, float *a6)
{
  float result;

  result = (float)(a1 + a2) + a3;
  *a6 = result;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_C36ED1FD_413E_468A_9CAD_C5EFFD99B227()
{
  uint64_t arguments_buffer;
  float *v1;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  result = (float)(**(float **)(arguments_buffer + 16) + **(float **)(arguments_buffer + 24))
         + **(float **)(arguments_buffer + 32);
  *v1 = result;
  v1[1] = result;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_C65DAC3C_8A65_40C5_AA59_A84C5DCF68C5(double a1, float a2, uint64_t a3, uint64_t a4, float *a5, float *a6)
{
  float v6;
  float result;

  v6 = (float)(a2 * 3.1416) / 180.0;
  *a5 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  a5[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  result = fminf(-v6, v6);
  *a6 = result;
  a6[1] = fmaxf(-v6, v6);
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_C65DAC3C_8A65_40C5_AA59_A84C5DCF68C5()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  uint64_t v3;
  float v4;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = **(_QWORD **)(arguments_buffer + 16);
  v4 = (float)(**(float **)(arguments_buffer + 24) * 3.1416) / 180.0;
  *v1 = fminf(*(float *)&v3, *((float *)&v3 + 1));
  v1[1] = fmaxf(*(float *)&v3, *((float *)&v3 + 1));
  result = fminf(-v4, v4);
  *v2 = result;
  v2[1] = fmaxf(-v4, v4);
  return result;
}

uint64_t Update_WeatherV134DefaultBackground_graph_9EFC1DCE_1DC1_414E_9F59_4C7B7C39C491(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  _OWORD v8[3];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v8[0] = xmmword_1B000C9A0;
  v8[1] = xmmword_1B000C960;
  v8[2] = xmmword_1B000C9A0;
  v6 = 0x3EF42C9E00000000;
  v7 = 1065353216;
  v3 = MEMORY[0x1B5E03E58](a1, v8, &v6, 3, 1);
  MEMORY[0x1B5E03E64](a1, v3, 1, a2);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_9EFC1DCE_1DC1_414E_9F59_4C7B7C39C491(uint64_t a1)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  int v6;
  _OWORD v7[3];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = *(__n128 *)*(_QWORD *)(vfx_script_get_arguments_buffer() + 16);
  v7[0] = xmmword_1B000C9A0;
  v7[1] = xmmword_1B000C960;
  v7[2] = xmmword_1B000C9A0;
  v5 = 0x3EF42C9E00000000;
  v6 = 1065353216;
  v2 = MEMORY[0x1B5E03E58](a1, v7, &v5, 3, 1);
  MEMORY[0x1B5E03E64](a1, v2, 1, v4);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

float Init_WeatherV134DefaultBackground_graph_1556506D_1126_4A03_A278_160D614392CB(float a1, double a2, float32x2_t a3, float32x2_t a4, uint64_t a5, int a6, float *a7, float *a8, float *a9)
{
  float v15;
  BOOL v16;
  float v17;
  float v18;
  int v19;
  unsigned int v20;
  float v21;
  float32x2_t v22;
  float32x2_t v23;
  float result;

  v15 = a1 * 0.1;
  v16 = fabsf(v15) <= 0.00000011921;
  v17 = 1.0 / v15;
  if (v16)
    v18 = 0.0;
  else
    v18 = v17;
  v19 = vfx_script_clock_simulation_index();
  v20 = 277803737
      * (((747796405 * (v19 + a6) + 725739762) >> (((747796405 * (v19 + a6) + 725739762) >> 28)
                                                               + 4)) ^ (747796405 * (v19 + a6) + 725739762));
  v21 = vmlas_n_f32(*(float *)&a2, COERCE_FLOAT((v20 >> 31) ^ (v20 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a2, 1), *(float32x2_t *)&a2).f32[0]);
  v22 = vmul_n_f32(a3, v21);
  v23 = vmul_n_f32(a4, v21);
  *a8 = fminf(v22.f32[0], v22.f32[1]);
  a8[1] = fmaxf(v22.f32[0], v22.f32[1]);
  *a9 = fminf(v23.f32[0], v23.f32[1]);
  a9[1] = fmaxf(v23.f32[0], v23.f32[1]);
  result = v18 * v21;
  *a7 = v18 * v21;
  a7[1] = v18 * v21;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_1556506D_1126_4A03_A278_160D614392CB()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  int v4;
  float32x2_t v5;
  float32x2_t v6;
  float v7;
  BOOL v8;
  float v9;
  float v10;
  int v11;
  unsigned int v12;
  float v13;
  float32x2_t v14;
  float32x2_t v15;
  float result;
  float32x2_t v17;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v2 = *(float **)(arguments_buffer + 64);
  v4 = **(_DWORD **)(arguments_buffer + 8);
  v17 = **(float32x2_t **)(arguments_buffer + 24);
  v5 = **(float32x2_t **)(arguments_buffer + 32);
  v6 = **(float32x2_t **)(arguments_buffer + 40);
  v7 = **(float **)(arguments_buffer + 16) * 0.1;
  v8 = fabsf(v7) <= 0.00000011921;
  v9 = 1.0 / v7;
  if (v8)
    v10 = 0.0;
  else
    v10 = v9;
  v11 = vfx_script_clock_simulation_index();
  v12 = 277803737
      * (((747796405 * (v11 + v4) + 725739762) >> (((747796405 * (v11 + v4) + 725739762) >> 28)
                                                               + 4)) ^ (747796405 * (v11 + v4) + 725739762));
  v13 = vmlas_n_f32(v17.f32[0], COERCE_FLOAT((v12 >> 31) ^ (v12 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)v17, 1), v17).f32[0]);
  v14 = vmul_n_f32(v5, v13);
  v15 = vmul_n_f32(v6, v13);
  *v3 = fminf(v14.f32[0], v14.f32[1]);
  v3[1] = fmaxf(v14.f32[0], v14.f32[1]);
  *v2 = fminf(v15.f32[0], v15.f32[1]);
  v2[1] = fmaxf(v15.f32[0], v15.f32[1]);
  result = v10 * v13;
  *v1 = v10 * v13;
  v1[1] = v10 * v13;
  return result;
}

void Spawn_WeatherV134DefaultBackground_graph_0D7B4D92_C329_4F22_AD69_8EA1EFE1B97F(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_0D7B4D92_C329_4F22_AD69_8EA1EFE1B97F()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

uint64_t Main_WeatherV134DefaultBackground_graph_0E934706_71C4_4832_ACD8_BEAC35EAAF52(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_0E934706_71C4_4832_ACD8_BEAC35EAAF52()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_4AA4C185_DF16_4FEC_9AD4_57C5221DD760(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_4AA4C185_DF16_4FEC_9AD4_57C5221DD760()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_8F2FB80E_1129_4840_8FC5_0E665E235E4C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_8F2FB80E_1129_4840_8FC5_0E665E235E4C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_D08B04FC_1D84_4BE6_A2D1_337BEE86C5CA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_D08B04FC_1D84_4BE6_A2D1_337BEE86C5CA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_495BDE00_5C52_489A_8BB4_E76795A1C394(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_495BDE00_5C52_489A_8BB4_E76795A1C394()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_6D779CD9_65A4_4241_B1D7_980B77D69516(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_6D779CD9_65A4_4241_B1D7_980B77D69516()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_D4BCF11D_2557_4D18_8633_A912D38DB5F9(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_D4BCF11D_2557_4D18_8633_A912D38DB5F9()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_FD9E2E5B_5D71_4CAC_A303_A36D631A4AC7(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_FD9E2E5B_5D71_4CAC_A303_A36D631A4AC7()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_00A51410_D2B1_494D_9F29_52B4D396C7E8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_00A51410_D2B1_494D_9F29_52B4D396C7E8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_158D6529_921F_4BBB_8720_0AFB7FF3B70E(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_158D6529_921F_4BBB_8720_0AFB7FF3B70E()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_04693236_2D77_43A6_977D_5DF067824F4A(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_04693236_2D77_43A6_977D_5DF067824F4A()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_CC168C49_D800_49CD_9AC9_6B843D77D568(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_CC168C49_D800_49CD_9AC9_6B843D77D568()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_E01D4620_1A13_45B2_A31C_EBA3722279A3(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_E01D4620_1A13_45B2_A31C_EBA3722279A3()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_51641DD0_898B_4504_AAC0_2D2ACC7DC54C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_51641DD0_898B_4504_AAC0_2D2ACC7DC54C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_77F92450_D14D_4191_B05E_F68CD98AB475(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_77F92450_D14D_4191_B05E_F68CD98AB475()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_47353A1E_43D8_47D9_89D6_16FE5DCDB9AB(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_47353A1E_43D8_47D9_89D6_16FE5DCDB9AB()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_F6BDEA3C_7D0A_4780_8037_69CA0F8582BA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_F6BDEA3C_7D0A_4780_8037_69CA0F8582BA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_EC0574CC_6183_482F_B498_DF3DC193C7A1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_EC0574CC_6183_482F_B498_DF3DC193C7A1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_D88B36CD_282F_4198_80EA_ADB18CC1B044(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_D88B36CD_282F_4198_80EA_ADB18CC1B044()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_490BE8EB_F0B7_45E0_93F0_D7C4413C0601(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_490BE8EB_F0B7_45E0_93F0_D7C4413C0601()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_38164599_D3CB_47C4_9D78_C48028F40460(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_38164599_D3CB_47C4_9D78_C48028F40460()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_B0139558_B86A_4397_B738_EFFE6203E6A8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_B0139558_B86A_4397_B738_EFFE6203E6A8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_D10F5D93_7C09_43AD_84BD_C7EDBA820252(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_D10F5D93_7C09_43AD_84BD_C7EDBA820252()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_DB80C1B9_AD48_4244_B71C_ED947CFD1174(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_DB80C1B9_AD48_4244_B71C_ED947CFD1174()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_237BB3A9_4675_48C7_AE1B_E2019186502C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_237BB3A9_4675_48C7_AE1B_E2019186502C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_EA307E77_C728_4B56_A6DF_D73E8D57285F(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_EA307E77_C728_4B56_A6DF_D73E8D57285F()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_1ADCC471_5CA6_4CB3_A866_ACCE00F26AF5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_1ADCC471_5CA6_4CB3_A866_ACCE00F26AF5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_AA581CF7_295B_4838_8E2B_F2739B549950(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_AA581CF7_295B_4838_8E2B_F2739B549950()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_3E3EDD61_1BFF_4E10_A68A_A7931CA58E2B(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_3E3EDD61_1BFF_4E10_A68A_A7931CA58E2B()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_07B9FA67_7320_4523_A28C_7A4646C4C6BE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_07B9FA67_7320_4523_A28C_7A4646C4C6BE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_DA88E5DB_DBE7_4911_BF16_74818B5138EA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_DA88E5DB_DBE7_4911_BF16_74818B5138EA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_1DB3FB44_EBDD_4298_A446_136FB449F912(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_1DB3FB44_EBDD_4298_A446_136FB449F912()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_84D517BB_14D9_4232_8229_F315FA1F11D5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_84D517BB_14D9_4232_8229_F315FA1F11D5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_A8E3F90B_08E2_4F9C_841A_E02EF1A32907(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_A8E3F90B_08E2_4F9C_841A_E02EF1A32907()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_EE2B7DD4_201A_43FC_80D8_7801EDE59CCE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_EE2B7DD4_201A_43FC_80D8_7801EDE59CCE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_7A89B80D_A08D_4967_B879_540D98734DF8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_7A89B80D_A08D_4967_B879_540D98734DF8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_422412ED_C7A7_469C_928F_F1853945C9A4(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_422412ED_C7A7_469C_928F_F1853945C9A4()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_CE6E45A5_428C_496D_9545_8933DB5B957D(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_CE6E45A5_428C_496D_9545_8933DB5B957D()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_A52A8712_FEF2_41A7_A86F_531E7ACACDEC(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_A52A8712_FEF2_41A7_A86F_531E7ACACDEC()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_1B72969F_F7B1_4F8D_BC66_449B4D08ACE5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_1B72969F_F7B1_4F8D_BC66_449B4D08ACE5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_B5359EB0_CE3F_458E_98BA_A36AEBE94569(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_B5359EB0_CE3F_458E_98BA_A36AEBE94569()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_24AD785E_177E_46F7_B202_8BB4F8A789A1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_24AD785E_177E_46F7_B202_8BB4F8A789A1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_F3966341_6877_47A1_9944_DBE751309430(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_F3966341_6877_47A1_9944_DBE751309430()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_E6C55C1B_08D0_414E_BACA_1363CD547A80(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_E6C55C1B_08D0_414E_BACA_1363CD547A80()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_C9F8147B_A831_49BD_BCF0_EEF654E7E4F2(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_C9F8147B_A831_49BD_BCF0_EEF654E7E4F2()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_05F20F85_492E_4F48_87F0_254F588B4DC1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_05F20F85_492E_4F48_87F0_254F588B4DC1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_BC623109_4F00_41E5_967B_C001A7E3E03B(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_BC623109_4F00_41E5_967B_C001A7E3E03B()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_55C62DCE_2F63_4B8B_A8E8_FB5493A4C3B9(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_55C62DCE_2F63_4B8B_A8E8_FB5493A4C3B9()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_7ABAAD22_1C34_4501_A431_E291E04F2BC1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_7ABAAD22_1C34_4501_A431_E291E04F2BC1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134DefaultBackground_graph_A2C3073A_7A45_461C_9DE7_A0BDC31DC5FE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_A2C3073A_7A45_461C_9DE7_A0BDC31DC5FE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

__n128 Main_WeatherV134DefaultBackground_graph_44A876D1_2CE3_4546_AF0A_D67F5579C408(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #5.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_44A876D1_2CE3_4546_AF0A_D67F5579C408()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #5.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_7C519056_3151_4C7E_9ED5_5D396B48B1BE(double a1, float a2, __n128 a3, uint64_t a4, uint64_t a5, float *a6, float *a7, __n128 *a8)
{
  __n128 v8;
  float v9;
  float v10;
  float v11;
  float result;

  v8 = *a8;
  v9 = -a2;
  v10 = a2 * -0.5;
  *a7 = fminf(v9, v10);
  a7[1] = fmaxf(v9, v10);
  v11 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v11;
  a6[1] = result;
  a3.n128_u32[1] = v8.n128_u32[1];
  a3.n128_u32[2] = v8.n128_u32[2];
  *a8 = a3;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_7C519056_3151_4C7E_9ED5_5D396B48B1BE()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  float v8;
  float v9;
  float v10;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = *(float **)(arguments_buffer + 48);
  v4 = *(__int128 **)(arguments_buffer + 56);
  v5 = **(_QWORD **)(arguments_buffer + 16);
  LODWORD(v6) = **(_DWORD **)(arguments_buffer + 32);
  v7 = *v4;
  v8 = -*v1;
  v9 = *v1 * -0.5;
  *v3 = fminf(v8, v9);
  v3[1] = fmaxf(v8, v9);
  v10 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  result = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  *v2 = v10;
  v2[1] = result;
  DWORD1(v6) = DWORD1(v7);
  DWORD2(v6) = DWORD2(v7);
  *v4 = v6;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_8B0DC7D3_DD77_4B64_AF2F_F2277B5B84B2(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_8B0DC7D3_DD77_4B64_AF2F_F2277B5B84B2()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_D2AEC9CB_1D29_49E2_A532_E856572297C7(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12, float *a13)
{
  __n128 v13;
  float v14;
  float v15;
  float v16;
  float v17;

  v13 = *a12;
  v14 = -a3;
  v15 = a3 * -0.6;
  v16 = (float)(a4 * 3.1416) / 180.0;
  v17 = vmuls_lane_f32(3.75, *(float32x2_t *)&a2, 1);
  *a10 = fminf(v14, v15);
  a10[1] = fmaxf(v14, v15);
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a11 = fminf(v16, 0.0);
  a11[1] = fmaxf(v16, 0.0);
  a5.n128_u32[1] = v13.n128_u32[1];
  a5.n128_u32[2] = v13.n128_u32[2];
  *a12 = a5;
  *a13 = fminf(3.15 * *(float *)&a2, v17);
  a13[1] = fmaxf(3.15 * *(float *)&a2, v17);
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_D2AEC9CB_1D29_49E2_A532_E856572297C7()
{
  _QWORD *arguments_buffer;
  float *v1;
  float32x2_t *v2;
  float *v3;
  float *v4;
  _DWORD *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  __int128 *v10;
  float *v11;
  float result;
  float32x2_t v13;
  __int128 v14;
  __int128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float32x2_t *)arguments_buffer[3];
  v3 = (float *)arguments_buffer[4];
  v4 = (float *)arguments_buffer[5];
  v5 = (_DWORD *)arguments_buffer[6];
  v6 = (float *)arguments_buffer[7];
  v7 = (float *)arguments_buffer[8];
  v8 = (float *)arguments_buffer[9];
  v9 = (float *)arguments_buffer[10];
  v10 = (__int128 *)arguments_buffer[11];
  v11 = (float *)arguments_buffer[12];
  result = *v1;
  v13 = *v2;
  LODWORD(v14) = *v5;
  v15 = *v10;
  LODWORD(v16) = HIDWORD(*(unint64_t *)v2);
  v17 = -*v3;
  v18 = *v3 * -0.6;
  v19 = fminf(v17, v18);
  v20 = fmaxf(v17, v18);
  v21 = (float)(*v4 * 3.1416) / 180.0;
  v22 = 3.15 * COERCE_FLOAT(*v2);
  v23 = vmuls_lane_f32(3.75, *v2, 1);
  *v8 = v19;
  v8[1] = v20;
  *v7 = fminf(v13.f32[0], v16);
  v7[1] = fmaxf(v13.f32[0], v16);
  *v9 = fminf(v21, 0.0);
  v9[1] = fmaxf(v21, 0.0);
  DWORD1(v14) = DWORD1(v15);
  DWORD2(v14) = DWORD2(v15);
  *v10 = v14;
  *v11 = fminf(v22, v23);
  v11[1] = fmaxf(v22, v23);
  *v6 = result;
  v6[1] = result;
  return result;
}

double Main_WeatherV134DefaultBackground_graph_F92BE29A_EF5A_4F8A_9D65_07109633507C(float a1, uint64_t a2, uint64_t a3, _OWORD *a4, _OWORD *a5)
{
  double v8;
  __float2 v9;
  __int128 v10;
  double result;

  vfx_script_clock_time();
  *(float *)&v8 = v8;
  v9 = __sincosf_stret((float)(*(float *)&v8 * a1) * 0.5);
  *(_QWORD *)&v10 = 0;
  *((__float2 *)&v10 + 1) = v9;
  result = -7.03687442e15;
  *a4 = xmmword_1B000C9B0;
  *a5 = v10;
  return result;
}

double __vfx_script_WeatherV134DefaultBackground_graph_F92BE29A_EF5A_4F8A_9D65_07109633507C()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  _OWORD *v2;
  float v3;
  double v4;
  __float2 v5;
  __int128 v6;
  double result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 24);
  v2 = *(_OWORD **)(arguments_buffer + 32);
  v3 = **(float **)(arguments_buffer + 16);
  vfx_script_clock_time();
  *(float *)&v4 = v4;
  v5 = __sincosf_stret((float)(v3 * *(float *)&v4) * 0.5);
  *(_QWORD *)&v6 = 0;
  *((__float2 *)&v6 + 1) = v5;
  result = -7.03687442e15;
  *(_OWORD *)v1 = xmmword_1B000C9B0;
  *v2 = v6;
  *(_DWORD *)(v1 + 12) = 1065353216;
  return result;
}

void Spawn_WeatherV134DefaultBackground_graph_102F127D_BE5F_4ED6_B42C_183757F25CC2(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_102F127D_BE5F_4ED6_B42C_183757F25CC2()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_A807D5CE_7EE1_45B2_B4A1_0C21BA170186(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_A807D5CE_7EE1_45B2_B4A1_0C21BA170186()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_610A95BC_F7DB_41D2_B8A2_05B9E64029C8(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12, float *a13)
{
  __n128 v13;
  float v14;
  float v15;
  float v16;
  float v17;

  v13 = *a12;
  v14 = -a3;
  v15 = a3 * -0.7;
  v16 = (float)(a4 * 3.1416) / 180.0;
  v17 = vmuls_lane_f32(4.25, *(float32x2_t *)&a2, 1);
  *a10 = fminf(v14, v15);
  a10[1] = fmaxf(v14, v15);
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a11 = fminf(v16, 0.0);
  a11[1] = fmaxf(v16, 0.0);
  a5.n128_u32[1] = v13.n128_u32[1];
  a5.n128_u32[2] = v13.n128_u32[2];
  *a12 = a5;
  *a13 = fminf(3.75 * *(float *)&a2, v17);
  a13[1] = fmaxf(3.75 * *(float *)&a2, v17);
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_610A95BC_F7DB_41D2_B8A2_05B9E64029C8()
{
  _QWORD *arguments_buffer;
  float *v1;
  float32x2_t *v2;
  float *v3;
  float *v4;
  _DWORD *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  __int128 *v10;
  float *v11;
  float result;
  float32x2_t v13;
  __int128 v14;
  __int128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float32x2_t *)arguments_buffer[3];
  v3 = (float *)arguments_buffer[4];
  v4 = (float *)arguments_buffer[5];
  v5 = (_DWORD *)arguments_buffer[6];
  v6 = (float *)arguments_buffer[7];
  v7 = (float *)arguments_buffer[8];
  v8 = (float *)arguments_buffer[9];
  v9 = (float *)arguments_buffer[10];
  v10 = (__int128 *)arguments_buffer[11];
  v11 = (float *)arguments_buffer[12];
  result = *v1;
  v13 = *v2;
  LODWORD(v14) = *v5;
  v15 = *v10;
  LODWORD(v16) = HIDWORD(*(unint64_t *)v2);
  v17 = -*v3;
  v18 = *v3 * -0.7;
  v19 = fminf(v17, v18);
  v20 = fmaxf(v17, v18);
  v21 = (float)(*v4 * 3.1416) / 180.0;
  v22 = 3.75 * COERCE_FLOAT(*v2);
  v23 = vmuls_lane_f32(4.25, *v2, 1);
  *v8 = v19;
  v8[1] = v20;
  *v7 = fminf(v13.f32[0], v16);
  v7[1] = fmaxf(v13.f32[0], v16);
  *v9 = fminf(v21, 0.0);
  v9[1] = fmaxf(v21, 0.0);
  DWORD1(v14) = DWORD1(v15);
  DWORD2(v14) = DWORD2(v15);
  *v10 = v14;
  *v11 = fminf(v22, v23);
  v11[1] = fmaxf(v22, v23);
  *v6 = result;
  v6[1] = result;
  return result;
}

void Spawn_WeatherV134DefaultBackground_graph_B624AB63_78C3_45FA_806A_826792EEA51E(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_graph_B624AB63_78C3_45FA_806A_826792EEA51E()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_7B2FB560_DFA6_4B40_BFEF_6CFA9BEFF24F(__n128 a1, float a2, float a3, float a4, float a5, float a6, float a7, uint64_t a8, uint64_t a9, int a10, _DWORD *a11, __n128 *a12, _OWORD *a13)
{
  float v20;
  double v21;
  float v22;
  __float2 v23;
  __int128 v24;
  __n128 result;
  __n128 v26;

  v20 = (float)((float)(a3 * a4) * 0.04) + a2;
  if (a1.n128_f32[1] < v20)
    v20 = a1.n128_f32[1];
  a1.n128_f32[1] = v20;
  a1.n128_u32[2] = a12->n128_u32[2];
  v26 = a1;
  vfx_script_clock_time();
  *(float *)&v21 = v21;
  v22 = sinf(*(float *)&v21 * a5);
  v23 = __sincosf_stret((float)((float)((float)((float)(a7 + -90.0) + (float)(v22 * a6)) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v24 = 0;
  *((__float2 *)&v24 + 1) = v23;
  *a11 = a10;
  *a13 = v24;
  result = v26;
  *a12 = v26;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_7B2FB560_DFA6_4B40_BFEF_6CFA9BEFF24F()
{
  uint64_t arguments_buffer;
  __int128 *v1;
  uint64_t v2;
  _DWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  float v7;
  float v8;
  float v9;
  float v10;
  double v11;
  float v12;
  __float2 v13;
  __int128 v14;
  float result;
  __int128 v16;
  __int128 v17;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__int128 **)(arguments_buffer + 24);
  v3 = *(_DWORD **)(arguments_buffer + 80);
  v2 = *(_QWORD *)(arguments_buffer + 88);
  v4 = *(_OWORD **)(arguments_buffer + 96);
  v5 = **(_QWORD **)(arguments_buffer + 16);
  v6 = *v1;
  v7 = **(float **)(arguments_buffer + 56);
  v8 = **(float **)(arguments_buffer + 64);
  v9 = **(float **)(arguments_buffer + 72);
  v10 = **(float **)(arguments_buffer + 32)
      + (float)((float)(**(float **)(arguments_buffer + 40) * **(float **)(arguments_buffer + 48)) * 0.04);
  if (COERCE_FLOAT(HIDWORD(*(_QWORD *)v1)) < v10)
    LODWORD(v10) = HIDWORD(*(_QWORD *)v1);
  *((float *)&v6 + 1) = v10;
  DWORD2(v6) = *(_DWORD *)(v2 + 8);
  v17 = v6;
  vfx_script_clock_time();
  *(float *)&v11 = v11;
  v12 = sinf(v7 * *(float *)&v11);
  v13 = __sincosf_stret((float)((float)((float)((float)(v9 + -90.0) + (float)(v8 * v12)) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v14 = 0;
  *((__float2 *)&v14 + 1) = v13;
  *v3 = v5;
  *v4 = v14;
  result = 1.0;
  v16 = v17;
  HIDWORD(v16) = 1.0;
  *(_OWORD *)v2 = v16;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_B58AC2ED_49AB_4331_9CF3_93F5AF88535F(float a1, float a2, float a3, uint64_t a4, uint64_t a5, __n128 *a6, _OWORD *a7)
{
  double v12;
  float v13;
  __float2 v14;
  __n128 v15;
  __float2 v16;
  __int128 v17;
  __n128 result;
  __n128 v19;

  vfx_script_clock_time();
  *(float *)&v12 = v12;
  v13 = (float)((float)((float)(sinf(*(float *)&v12 * a2) * a3) + a1) * 3.1416) / 180.0;
  v14 = __sincosf_stret(v13 + -1.571);
  v15.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v14.__sinval), LODWORD(v14.__cosval)), (float32x2_t)vdup_n_s32(0xC2C80000));
  v15.n128_u32[2] = -1036779520;
  v19 = v15;
  v16 = __sincosf_stret(v13 * 0.5);
  *(_QWORD *)&v17 = 0;
  *((__float2 *)&v17 + 1) = v16;
  result = v19;
  *a6 = v19;
  *a7 = v17;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_B58AC2ED_49AB_4331_9CF3_93F5AF88535F()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  double v6;
  float v7;
  __float2 v8;
  __n128 v9;
  __float2 v10;
  __int128 v11;
  __n128 result;
  __n128 v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 40);
  v2 = *(_OWORD **)(arguments_buffer + 48);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  vfx_script_clock_time();
  *(float *)&v6 = v6;
  v7 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v6))) * 3.1416) / 180.0;
  v8 = __sincosf_stret(v7 + -1.571);
  v9.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v8.__sinval), LODWORD(v8.__cosval)), (float32x2_t)vdup_n_s32(0xC2C80000));
  v9.n128_u32[2] = -1036779520;
  v13 = v9;
  v10 = __sincosf_stret(v7 * 0.5);
  *(_QWORD *)&v11 = 0;
  *((__float2 *)&v11 + 1) = v10;
  result = v13;
  *v1 = v13;
  *v2 = v11;
  v1->n128_u32[3] = 1065353216;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_E29E5B3F_589B_468A_8EAB_0A38CB62197C(float result, double a2, float a3, double a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, float *a10)
{
  float v10;
  float v11;
  float v12;
  float v13;

  v10 = -a3;
  v11 = a3 * -0.5;
  v12 = (float)(3.1416 * *(float *)&a4) / 180.0;
  v13 = vmuls_lane_f32(3.1416, *(float32x2_t *)&a4, 1) / 180.0;
  *a9 = fminf(v10, v11);
  a9[1] = fmaxf(v10, v11);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a10 = fminf(v12, v13);
  a10[1] = fmaxf(v12, v13);
  *a7 = result;
  a7[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_E29E5B3F_589B_468A_8EAB_0A38CB62197C()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  float result;
  uint64_t v7;
  float32x2_t v8;
  float v9;
  float v10;
  float v11;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(float **)(arguments_buffer + 72);
  result = **(float **)(arguments_buffer + 16);
  v7 = **(_QWORD **)(arguments_buffer + 24);
  v8 = **(float32x2_t **)(arguments_buffer + 40);
  v9 = -*v1;
  v10 = *v1 * -0.5;
  v11 = (float)(3.1416 * v8.f32[0]) / 180.0;
  v8.f32[0] = vmuls_lane_f32(3.1416, v8, 1) / 180.0;
  *v4 = fminf(v9, v10);
  v4[1] = fmaxf(v9, v10);
  *v3 = fminf(*(float *)&v7, *((float *)&v7 + 1));
  v3[1] = fmaxf(*(float *)&v7, *((float *)&v7 + 1));
  *v5 = fminf(v11, v8.f32[0]);
  v5[1] = fmaxf(v11, v8.f32[0]);
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_DCFDD79F_DB54_47AE_A4C3_28CD067214C1(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_DCFDD79F_DB54_47AE_A4C3_28CD067214C1()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_01012C85_D688_4098_A134_D2ED8923AAEA(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12)
{
  __n128 v12;
  float v13;
  float v14;
  float v15;

  v12 = *a12;
  v13 = -a3;
  v14 = a3 * -0.5;
  v15 = (float)(a4 * 3.1416) / 180.0;
  *a10 = fminf(v13, v14);
  a10[1] = fmaxf(v13, v14);
  *a11 = fminf(v15, 0.0);
  a11[1] = fmaxf(v15, 0.0);
  a5.n128_u32[1] = v12.n128_u32[1];
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a5.n128_u32[2] = v12.n128_u32[2];
  *a12 = a5;
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_01012C85_D688_4098_A134_D2ED8923AAEA()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  __int128 *v6;
  float result;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 56);
  v3 = *(float **)(arguments_buffer + 64);
  v4 = *(float **)(arguments_buffer + 72);
  v5 = *(float **)(arguments_buffer + 80);
  v6 = *(__int128 **)(arguments_buffer + 88);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(_QWORD **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 48);
  v10 = *v6;
  v11 = -*v1;
  v12 = *v1 * -0.5;
  v13 = (float)(**(float **)(arguments_buffer + 40) * 3.1416) / 180.0;
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v5 = fminf(v13, 0.0);
  v5[1] = fmaxf(v13, 0.0);
  DWORD1(v9) = DWORD1(v10);
  *v3 = fminf(*(float *)&v8, *((float *)&v8 + 1));
  v3[1] = fmaxf(*(float *)&v8, *((float *)&v8 + 1));
  DWORD2(v9) = DWORD2(v10);
  *v6 = v9;
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_279C953B_D13A_444F_8900_D630E6645F77(float a1, uint64_t a2, uint64_t a3, __n128 *a4, _OWORD *a5)
{
  float v7;
  __float2 v8;
  __n128 v14;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  v7 = (float)(a1 * 3.1416) / 180.0;
  v8 = __sincosf_stret(v7 + -1.571);
  __asm { FMOV            V0.2S, #-30.0 }
  v14.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v8.__sinval), LODWORD(v8.__cosval)), _D0);
  v14.n128_u32[2] = 30.0;
  v18 = v14;
  v15 = __sincosf_stret(v7 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *a4 = v18;
  *a5 = v16;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_279C953B_D13A_444F_8900_D630E6645F77()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  __float2 v4;
  __n128 v10;
  __float2 v11;
  __int128 v12;
  __n128 result;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 24);
  v2 = *(_OWORD **)(arguments_buffer + 32);
  v3 = (float)(**(float **)(arguments_buffer + 16) * 3.1416) / 180.0;
  v4 = __sincosf_stret(v3 + -1.571);
  __asm { FMOV            V0.2S, #-30.0 }
  v10.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v4.__sinval), LODWORD(v4.__cosval)), _D0);
  v10.n128_u32[2] = 30.0;
  v14 = v10;
  v11 = __sincosf_stret(v3 * 0.5);
  *(_QWORD *)&v12 = 0;
  *((__float2 *)&v12 + 1) = v11;
  result = v14;
  *v1 = v14;
  *v2 = v12;
  v1->n128_u32[3] = 1065353216;
  return result;
}

float Init_WeatherV134DefaultBackground_graph_D6C069D3_28EA_41E1_BE9B_0A222EE9E25D(float result, double a2, float a3, float a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, float *a10)
{
  float v10;
  float v11;
  float v12;

  v10 = -a3;
  v11 = a3 * -0.7;
  v12 = (float)(a4 * 3.1416) / 180.0;
  *a9 = fminf(v10, v11);
  a9[1] = fmaxf(v10, v11);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a10 = fminf(v12, 0.0);
  a10[1] = fmaxf(v12, 0.0);
  *a7 = result;
  a7[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_D6C069D3_28EA_41E1_BE9B_0A222EE9E25D()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  float result;
  uint64_t v7;
  float v8;
  float v9;
  float v10;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(float **)(arguments_buffer + 72);
  result = **(float **)(arguments_buffer + 16);
  v7 = **(_QWORD **)(arguments_buffer + 24);
  v8 = -*v1;
  v9 = *v1 * -0.7;
  v10 = (float)(**(float **)(arguments_buffer + 40) * 3.1416) / 180.0;
  *v4 = fminf(v8, v9);
  v4[1] = fmaxf(v8, v9);
  *v3 = fminf(*(float *)&v7, *((float *)&v7 + 1));
  v3[1] = fmaxf(*(float *)&v7, *((float *)&v7 + 1));
  *v5 = fminf(v10, 0.0);
  v5[1] = fmaxf(v10, 0.0);
  *v2 = result;
  v2[1] = result;
  return result;
}

float Spawn_WeatherV134DefaultBackground_graph_846EF3DA_7DA1_44DB_AB4D_414B503BA77D(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, _QWORD *a5, unint64_t *a6)
{
  float result;
  unint64_t v7;

  result = (float)a3 * 0.5;
  v7 = (unint64_t)(float)((float)a4 * 0.5);
  *a6 = v7;
  a6[1] = v7;
  *a5 = (unint64_t)result;
  a5[1] = (unint64_t)result;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_graph_846EF3DA_7DA1_44DB_AB4D_414B503BA77D()
{
  uint64_t arguments_buffer;
  _QWORD *v1;
  unint64_t *v2;
  float result;
  unint64_t v4;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(arguments_buffer + 32);
  v2 = *(unint64_t **)(arguments_buffer + 40);
  result = (float)**(unint64_t **)(arguments_buffer + 16) * 0.5;
  v4 = (unint64_t)(float)((float)**(unint64_t **)(arguments_buffer + 24) * 0.5);
  *v2 = v4;
  v2[1] = v4;
  *v1 = (unint64_t)result;
  v1[1] = (unint64_t)result;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_2132B6C0_1B29_4DF3_A586_8BB2B04A960B(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_2132B6C0_1B29_4DF3_A586_8BB2B04A960B()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_7C280C95_9B4F_418D_9ABF_EEDFCEB95D15(float a1, double a2, float a3, __n128 a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, __n128 *a10, float *a11)
{
  __n128 v11;
  float v12;
  float v13;
  float v14;

  v11 = *a10;
  v12 = -a3;
  v13 = a3 * -0.6;
  v14 = vmuls_lane_f32(8.5, *(float32x2_t *)&a2, 1);
  *a9 = fminf(v12, v13);
  a9[1] = fmaxf(v12, v13);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a4.n128_u32[1] = v11.n128_u32[1];
  a4.n128_u32[2] = v11.n128_u32[2];
  *a10 = a4;
  *a11 = fminf(2.75 * *(float *)&a2, v14);
  a11[1] = fmaxf(2.75 * *(float *)&a2, v14);
  *a7 = a1;
  a7[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_7C280C95_9B4F_418D_9ABF_EEDFCEB95D15()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  __int128 *v5;
  float *v6;
  float result;
  float32x2_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(__int128 **)(arguments_buffer + 72);
  v6 = *(float **)(arguments_buffer + 80);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(float32x2_t **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 40);
  v10 = *v5;
  v11 = -*v1;
  v12 = *v1 * -0.6;
  v13 = vmuls_lane_f32(8.5, v8, 1);
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v3 = fminf(v8.f32[0], v8.f32[1]);
  v3[1] = fmaxf(v8.f32[0], v8.f32[1]);
  DWORD1(v9) = DWORD1(v10);
  DWORD2(v9) = DWORD2(v10);
  *v5 = v9;
  *v6 = fminf(2.75 * v8.f32[0], v13);
  v6[1] = fmaxf(2.75 * v8.f32[0], v13);
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134DefaultBackground_graph_5E494EA5_0D90_4972_BAC8_FB64EFE4E20A(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_graph_5E494EA5_0D90_4972_BAC8_FB64EFE4E20A()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134DefaultBackground_graph_008687FF_1719_410F_B311_4C45DF74A84F(float a1, double a2, float a3, __n128 a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, __n128 *a10, float *a11)
{
  __n128 v11;
  float v12;
  float v13;
  float v14;

  v11 = *a10;
  v12 = -a3;
  v13 = a3 * -0.7;
  v14 = vmuls_lane_f32(8.5, *(float32x2_t *)&a2, 1);
  *a9 = fminf(v12, v13);
  a9[1] = fmaxf(v12, v13);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a4.n128_u32[1] = v11.n128_u32[1];
  a4.n128_u32[2] = v11.n128_u32[2];
  *a10 = a4;
  *a11 = fminf(3.5 * *(float *)&a2, v14);
  a11[1] = fmaxf(3.5 * *(float *)&a2, v14);
  *a7 = a1;
  a7[1] = a1;
}

float __vfx_script_WeatherV134DefaultBackground_graph_008687FF_1719_410F_B311_4C45DF74A84F()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  __int128 *v5;
  float *v6;
  float result;
  float32x2_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(__int128 **)(arguments_buffer + 72);
  v6 = *(float **)(arguments_buffer + 80);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(float32x2_t **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 40);
  v10 = *v5;
  v11 = -*v1;
  v12 = *v1 * -0.7;
  v13 = vmuls_lane_f32(8.5, v8, 1);
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v3 = fminf(v8.f32[0], v8.f32[1]);
  v3[1] = fmaxf(v8.f32[0], v8.f32[1]);
  DWORD1(v9) = DWORD1(v10);
  DWORD2(v9) = DWORD2(v10);
  *v5 = v9;
  *v6 = fminf(3.5 * v8.f32[0], v13);
  v6[1] = fmaxf(3.5 * v8.f32[0], v13);
  *v2 = result;
  v2[1] = result;
  return result;
}

int32x4_t ParticleInit_WeatherV134DefaultBackground_particleInit_552(int32x2_t a1, uint64_t a2, uint64_t a3, int32x4_t *a4)
{
  int32x4_t result;

  result = vdupq_lane_s32(a1, 0);
  *a4 = result;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_particleInit_552()
{
  __n128 result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

float ParticleInit_WeatherV134DefaultBackground_particleInit_113(const void *a1, unsigned int a2, float a3, float *a4)
{
  float result;

  result = (float)(a3 * 3.1416) / 180.0;
  *a4 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_113()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_200(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) + 1859828611) >> (((747796405 * (v21 + v18) + 1859828611) >> 28)
                                                                 + 4)) ^ (747796405 * (v21 + v18) + 1859828611));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 6) + 747858069) >> (((747796405 * (v21 + v25 + 6)
                                                                                    + 747858069) >> 28)
                                                                    + 4)) ^ (747796405 * (v21 + v25 + 6) + 747858069));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_200()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_523(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) + 211320929) >> (((747796405 * (v21 + v18) + 211320929) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v18) + 211320929));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25) - 152853208) >> (((747796405 * (v21 + v25) - 152853208) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v25) - 152853208));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_523()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_444(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) - 1534427408) >> (((747796405 * (v21 + v18) - 1534427408) >> 28)
                                                                 + 4)) ^ (747796405 * (v21 + v18) - 1534427408));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 4) + 1648569346) >> (((747796405 * (v21 + v25 + 4)
                                                                                     + 1648569346) >> 28)
                                                                     + 4)) ^ (747796405 * (v21 + v25 + 4) + 1648569346));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_444()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_550(__n128 result, float a2, uint64_t a3, uint64_t a4, __n128 *a5, __int128 *a6)
{
  __int128 v6;

  v6 = *a6;
  result.n128_u32[3] = 1.0;
  *a5 = result;
  *(float *)&v6 = a2;
  *a6 = v6;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_550()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_10(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) - 497579214) >> (((747796405 * (v21 + v18) - 497579214) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v18) - 497579214));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 5) + 1937621135) >> (((747796405 * (v21 + v25 + 5)
                                                                                     + 1937621135) >> 28)
                                                                     + 4)) ^ (747796405 * (v21 + v25 + 5) + 1937621135));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_10()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

double ParticleInit_WeatherV134DefaultBackground_particleInit_38(double a1, float32x4_t a2, float32x4_t a3, uint64_t a4, int a5, int a6, int a7, float *a8, _QWORD *a9, float32x4_t *a10)
{
  int v16;
  int v17;
  unsigned int v18;
  float v19;
  float v20;
  int v21;
  unsigned int v22;
  float32x4_t v23;
  float32x4_t v24;
  double result;
  float v27;
  unsigned int v30;

  v30 = *a9;
  v16 = vfx_script_clock_simulation_index();
  v17 = a6 + a5;
  v18 = 277803737
      * (((747796405 * (v17 + v16) - 1403630843) >> (((747796405 * (v17 + v16) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v16) - 1403630843));
  v19 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v20 = *((float *)&a1 + 1);
  if (!a7)
    v20 = *(float *)&a1;
  v27 = v20;
  v21 = vfx_script_clock_simulation_index();
  v22 = 277803737
      * (((747796405 * (v17 + v21) + 1340069426) >> (((747796405 * (v17 + v21) + 1340069426) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v21) + 1340069426));
  v23 = vmlaq_n_f32(a2, vsubq_f32(a3, a2), COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0);
  v24 = vmulq_laneq_f32(v23, v23, 3);
  v24.i32[3] = v23.i32[3];
  *a8 = v19;
  *a10 = v24;
  result = COERCE_DOUBLE(__PAIR64__(LODWORD(v27), v30));
  *a9 = __PAIR64__(LODWORD(v27), v30);
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_38()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_415(double a1, uint64_t a2, int a3, int a4, __n128 *a5)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  __n128 result;
  __n128 v13;

  v13 = *a5;
  v8 = vfx_script_clock_simulation_index();
  v9 = 277803737
     * (((747796405 * (a4 + a3 + v8) + 1857158435) >> (((747796405 * (a4 + a3 + v8)
                                                                                   + 1857158435) >> 28)
                                                                   + 4)) ^ (747796405 * (a4 + a3 + v8) + 1857158435));
  result.n128_f32[0] = COERCE_FLOAT((v9 >> 31) ^ (v9 >> 9) | 0x3F800000) + -1.0;
  v10 = 277803737
      * (((747796405 * (a4 + a3) + 2048969569) >> (((747796405 * (a4 + a3) + 2048969569) >> 28)
                                                               + 4)) ^ (747796405 * (a4 + a3) + 2048969569));
  result.n128_u32[1] = vmlas_n_f32(*(float *)&a1, COERCE_FLOAT((v10 >> 31) ^ (v10 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a1, 1), *(float32x2_t *)&a1).f32[0]);
  result.n128_u64[1] = v13.n128_u64[1];
  *a5 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_415()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

int8x16_t ParticleInit_WeatherV134DefaultBackground_particleInit_4(__n128 a1, __n128 a2, float32x4_t a3, double a4, uint64_t a5, int a6, __n128 *a7, _OWORD *a8, int8x16_t *a9)
{
  int v13;
  __n128 v14;
  unsigned int v15;
  float v16;
  int v17;
  unsigned int v18;
  __int128 v19;
  float32x4_t v20;
  int8x16_t result;
  float32x4_t v24;

  *(double *)v24.i64 = a4;
  v13 = vfx_script_clock_simulation_index();
  v15 = 277803737
      * (((747796405 * (v13 + a6) - 1881823590) >> (((747796405 * (v13 + a6) - 1881823590) >> 28)
                                                                + 4)) ^ (747796405 * (v13 + a6) - 1881823590));
  v16 = COERCE_FLOAT((v15 >> 31) ^ (v15 >> 9) | 0x3F800000) + -1.0;
  if (v16 <= 0.5)
  {
    v14.n128_f32[0] = -a1.n128_f32[0];
    *(unint64_t *)((char *)v14.n128_u64 + 4) = *(unint64_t *)((char *)a1.n128_u64 + 4);
    a1 = v14;
  }
  v17 = vfx_script_clock_simulation_index();
  *(float *)&v19 = -a2.n128_f32[0];
  v20.i32[0] = 0.5;
  if (v16 > 0.5)
    *(float *)&v19 = a2.n128_f32[0];
  v18 = 277803737
      * (((747796405 * (v17 + a6) - 558593783) >> (((747796405 * (v17 + a6) - 558593783) >> 28)
                                                               + 4)) ^ (747796405 * (v17 + a6) - 558593783));
  *((float *)&v19 + 1) = (float)((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0) * 35.0) + -55.0;
  DWORD2(v19) = a2.n128_u32[2];
  *a7 = a1;
  result = vandq_s8((int8x16_t)vmulq_n_f32(a3, v24.f32[0]), (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgtq_f32(v20, v24)), 0));
  *a8 = v19;
  *a9 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_4()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

void ParticleInit_WeatherV134DefaultBackground_particleInit_43(float a1, uint64_t a2, uint64_t a3, float *a4)
{
  *a4 = a1;
}

float __vfx_script_WeatherV134DefaultBackground_particleInit_43()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_222(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, __n128 *a6)
{
  int v9;
  unsigned int v10;
  float32x4_t v11;
  __n128 result;

  v9 = vfx_script_clock_simulation_index();
  v10 = 277803737
      * (((747796405 * (a5 + a4 + v9) - 1670564325) >> (((747796405 * (a5 + a4 + v9)
                                                                                    - 1670564325) >> 28)
                                                                    + 4)) ^ (747796405 * (a5 + a4 + v9) - 1670564325));
  v11 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v10 >> 31) ^ (v10 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v11, v11, 3);
  result.n128_u32[3] = v11.u32[3];
  *a6 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_222()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_496(float a1, double a2, uint64_t a3, int a4, unsigned int a5, unint64_t a6, float *a7, __n128 *a8, uint64_t a9)
{
  __n128 v15;
  int v16;
  int v17;
  unsigned int v18;
  float v19;
  __n128 v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  float v25;
  __n128 v26;
  __int128 v27;
  __n128 result;
  float v29;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  unsigned int v34;

  v32 = *a8;
  v15 = *a8;
  v15.n128_u32[0] = *(_DWORD *)(a9 + 12);
  v33 = v15;
  v34 = HIDWORD(a2);
  v16 = vfx_script_clock_simulation_index();
  v17 = a5 + a4;
  v18 = 277803737
      * (((747796405 * (v17 + v16) - 1403630843) >> (((747796405 * (v17 + v16) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v16) - 1403630843));
  v19 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0)
                                                     * 6.0)
                                        + 1)
              / 6.0)
      + -0.083333;
  v20.n128_f32[0] = (float)(a1 + a1) / (float)a6;
  if (!a6)
    v20.n128_f32[0] = 0.0;
  v20.n128_f32[0] = (float)(v20.n128_f32[0] * (float)a5) - a1;
  v31 = v20;
  v21 = vfx_script_clock_simulation_index();
  v22 = 277803737
      * (((747796405 * (v17 + v21) + 1957069266) >> (((747796405 * (v17 + v21) + 1957069266) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v21) + 1957069266));
  v29 = (float)((float)(COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0) * 6.28) + -3.14;
  v23 = vfx_script_clock_simulation_index();
  v24 = 277803737
      * (((747796405 * (v17 + v23 + 10) + 864546855) >> (((747796405 * (v17 + v23 + 10)
                                                                                     + 864546855) >> 28)
                                                                     + 4)) ^ (747796405 * (v17 + v23 + 10) + 864546855));
  v25 = 1.0;
  if ((float)(COERCE_FLOAT((v24 >> 31) ^ (v24 >> 9) | 0x3F800000) + -1.0) <= 0.5)
    v25 = -1.0;
  *a7 = v19;
  v26 = v31;
  *(unint64_t *)((char *)v26.n128_u64 + 4) = *(unint64_t *)((char *)v32.n128_u64 + 4);
  *(_QWORD *)&v27 = __PAIR64__(v34, LODWORD(v29));
  *a8 = v26;
  *((_QWORD *)&v27 + 1) = __PAIR64__(v33.n128_u32[0], LODWORD(v25));
  result = v33;
  *(_OWORD *)a9 = v27;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_496()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_495(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) - 769853048) >> (((747796405 * (v12 + v15) - 769853048) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) - 769853048));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_495()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_117(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 572824890) >> (((747796405 * (v12 + v15) + 572824890) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 572824890));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_117()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

uint64_t ParticleInit_WeatherV134DefaultBackground_particleInit_194(float32x4_t a1, float a2, float32x4_t a3, uint64_t a4, int a5, int a6, float32x4_t *a7, float *a8, float *a9)
{
  int v15;
  unsigned int v16;
  uint64_t result;
  unsigned int v23;
  float v24;
  float32x4_t v25;
  float32x4_t v26;
  float v27;
  float32x4_t v29;

  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v15 + a5) + 1415191774) >> (((747796405 * (v15 + a5) + 1415191774) >> 28)
                                                                + 4)) ^ (747796405 * (v15 + a5) + 1415191774));
  __asm { FMOV            V1.4S, #1.0 }
  _Q1.f32[3] = COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0;
  v29 = vmulq_f32(_Q1, a1);
  result = vfx_script_clock_simulation_index();
  v23 = 277803737
      * (((747796405 * (a6 + a5 + result) - 1403630843) >> (((747796405 * (a6 + a5 + result)
                                                                                        - 1403630843) >> 28)
                                                                        + 4)) ^ (747796405 * (a6 + a5 + result)
                                                                               - 1403630843));
  v24 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v23 >> 31) ^ (v23 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v25 = vaddq_f32(a3, (float32x4_t)xmmword_1B000C9C0);
  v26 = vmulq_f32(v25, v25);
  _NF = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v26, 2), vaddq_f32(v26, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v26.f32, 1))).f32[0]) < 175.0;
  v27 = 0.0;
  *a7 = v29;
  if (!_NF)
    v27 = a2;
  *a8 = v24;
  *a9 = v27;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_194()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_235(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 1187154554) >> (((747796405 * (v12 + v15) + 1187154554) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 1187154554));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_235()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleInit_WeatherV134DefaultBackground_particleInit_365(double a1, float a2, float32x4_t a3, float a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9, __int128 *a10, float *a11, float32x2_t *a12, float32x4_t *a13)
{
  int v18;
  float v19;
  unsigned int v20;
  float v22;
  float v23;
  float v24;
  __int128 v25;
  float v27;
  __int128 v28;

  v28 = *a10;
  v18 = vfx_script_clock_simulation_index();
  v19 = (float)a7 / (float)(unint64_t)(a8 - 1);
  if (a8 == 1)
    v19 = 0.0;
  v20 = 277803737
      * (((747796405 * (a7 + a6 + v18) - 174971515) >> (((747796405 * (a7 + a6 + v18) - 174971515) >> 28) + 4)) ^ (747796405 * (a7 + a6 + v18) - 174971515));
  v27 = v19 + (float)((float)((float)(COERCE_FLOAT((v20 >> 31) ^ (v20 >> 9) | 0x3F800000) + -1.0) * 0.08) + 0.0);
  vfx_script_clock_simulation_index();
  if (a7 % 0xC == 1 && a7 > 1)
    v22 = 0.375;
  else
    v22 = (float)((float)(a7 % 0xC + 1) / 12.0) + -0.041667;
  vfx_script_clock_simulation_index();
  vfx_script_texture_sample1d();
  v24 = *(float *)&a1
      + vmuls_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a1, 1), *(float32x2_t *)&a1).f32[0], v23);
  if (!a7)
    v24 = 0.0;
  if (a7 == 1)
    v24 = *(float *)&a1;
  *a11 = v22;
  *a12 = vmul_n_f32(vmul_n_f32((float32x2_t)0x3F1C6A7F3F6ED917, v24), a2);
  *a13 = vmulq_n_f32(a3, a4);
  v25 = v28;
  *(float *)&v25 = v27;
  *a10 = v25;
  return *(float *)&v25;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_365()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_283(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 2048969569) >> (((747796405 * (v12 + v15) + 2048969569) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 2048969569));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_283()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_58(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 725739762) >> (((747796405 * (v12 + v15) + 725739762) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 725739762));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_58()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_386(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, uint64_t a5, int a6, float *a7, __n128 *a8)
{
  int v13;
  unsigned int v14;
  float32x4_t v15;
  __n128 result;

  vfx_script_clock_simulation_index();
  v13 = vfx_script_clock_simulation_index();
  v14 = 277803737
      * (((747796405 * (a6 + a4 + v13) + 1378965688) >> (((747796405 * (a6 + a4 + v13)
                                                                                     + 1378965688) >> 28)
                                                                     + 4)) ^ (747796405 * (a6 + a4 + v13) + 1378965688));
  v15 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v14 >> 31) ^ (v14 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v15, v15, 3);
  result.n128_u32[3] = v15.u32[3];
  *a7 = (float)((float)(unint64_t)(a5 + 1) * 0.125) + -0.0625;
  *a8 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_386()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleInit_WeatherV134DefaultBackground_particleInit_70(__n128 a1, float a2, float a3, float a4, float a5, float32x4_t a6, float32_t a7, uint64_t a8, int a9, uint64_t a10, int a11, __n128 *a12, uint64_t a13, __n128 *a14)
{
  unsigned int v20;
  unsigned int v21;
  int v22;
  float v23;
  unsigned int v24;
  int8x8_t v25;
  uint32x2_t v26;
  float32x2_t v32;
  __int128 v34;
  BOOL v35;
  float32x4_t result;
  unsigned int v43;
  __n128 v44;

  v43 = *(_DWORD *)(a13 + 12);
  v44 = *a14;
  v20 = vfx_script_clock_simulation_index();
  v21 = vfx_script_clock_simulation_index();
  v22 = vfx_script_clock_simulation_index();
  result = vmulq_f32(a6, a6);
  result.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)result, 2), vaddq_f32(result, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)result.f32, 1))).f32[0]);
  v23 = result.f32[0] / 300.0;
  v25 = (int8x8_t)vmla_s32((int32x2_t)0x86B85AE2390239B6, vadd_s32(vdup_n_s32(a11 + a9), (int32x2_t)__PAIR64__(v21, v20)), vdup_n_s32(0x2C9277B5u));
  v26 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32((uint32x2_t)v25, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32((uint32x2_t)v25, 0x1CuLL))), v25), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V6.2S, #1.0 }
  v32 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v26, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v26, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D6);
  __asm { FMOV            V6.2S, #-1.0 }
  *(float32x2_t *)&v34 = vmul_f32((float32x2_t)vbsl_s8((int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(a10 == 0), 0x1FuLL)), (int8x8_t)__PAIR64__(LODWORD(a4), LODWORD(a2)), (int8x8_t)__PAIR64__(LODWORD(a5), LODWORD(a3))), vmla_f32((float32x2_t)0x3F2666663F4CCCCDLL, (float32x2_t)0x3EB333343E4CCCCCLL, vadd_f32(v32, _D6)));
  v35 = result.f32[0] <= 300.0;
  result.i32[0] = 1.0;
  if (v35)
    result.f32[0] = v23;
  *a12 = a1;
  v24 = 277803737
      * (((747796405 * (a11 + a9 + v22) - 327886387) >> (((747796405 * (a11 + a9 + v22)
                                                                                     - 327886387) >> 28)
                                                                     + 4)) ^ (747796405 * (a11 + a9 + v22) - 327886387));
  *((_QWORD *)&v34 + 1) = __PAIR64__(v43, (float)((float)(COERCE_FLOAT((v24 >> 31) ^ (v24 >> 9) | 0x3F800000) + -1.0) * 6.28) + -3.14);
  *(_OWORD *)a13 = v34;
  result.f32[1] = a7;
  result.i64[1] = v44.n128_i64[1];
  *a14 = (__n128)result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_70()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_499(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 322669363) >> (((747796405 * (v12 + v15) + 322669363) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 322669363));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_499()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultBackground_particleInit_126(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  unsigned int v12;
  float v13;
  int v14;
  unsigned int v15;
  float32x4_t v16;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = 277803737
      * (((747796405 * (v11 + a4) - 1403630843) >> (((747796405 * (v11 + a4) - 1403630843) >> 28)
                                                                + 4)) ^ (747796405 * (v11 + a4) - 1403630843));
  v13 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v12 >> 31) ^ (v12 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v14 = vfx_script_clock_simulation_index();
  v15 = 277803737
      * (((747796405 * (a5 + a4 + v14) - 981112313) >> (((747796405 * (a5 + a4 + v14)
                                                                                    - 981112313) >> 28)
                                                                    + 4)) ^ (747796405 * (a5 + a4 + v14) - 981112313));
  v16 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v15 >> 31) ^ (v15 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v16, v16, 3);
  result.n128_u32[3] = v16.u32[3];
  *a6 = v13;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleInit_126()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_345(float a1, float a2, double a3, float a4, float a5, float a6, float a7, float a8, uint64_t a9, uint64_t a10, unsigned int a11, float *a12, float a13)
{
  float v17;
  float v18;
  BOOL v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float result;

  v17 = (float)(a4 + a5) + a6;
  v18 = fabsf(v17);
  v19 = v18 > 0.00000011921;
  v20 = 0.0;
  if (v18 > 0.00000011921)
    v21 = (float)(a4 + a5) / v17;
  else
    v21 = 0.0;
  if (v19)
    v20 = a4 / v17;
  v22 = a1 * a2;
  v23 = vmuls_lane_f32(a2, *(float32x2_t *)&a3, 1);
  if (*(float *)&a3 != 0.0)
    v22 = v23;
  v24 = fminf(fmaxf((float)(a7 - v21) / (float)(1.0 - v21), 0.0), 1.0);
  v25 = fminf(fmaxf((float)(a7 - v20) / (float)((float)(a4 + a8) - v20), 0.0), 1.0);
  if (*(float *)&a3 == 0.0)
    v25 = v24;
  v26 = v22 * (float)(1.0 - v25);
  if ((float)((float)(*(float *)&a3 + (float)((float)(1.0 - *(float *)&a3) * (float)((float)(a11 % 0x81) / 129.0)))
             * v20) >= a7)
    v23 = 0.0;
  if (v20 <= a7)
    v23 = v26;
  else
    v22 = v23;
  if (v21 < a7)
    v22 = v26;
  if (*(float *)&a3 != 0.0)
    v22 = v23;
  result = v22 * a13;
  *a12 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_345()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_313(double a1, float a2, float a3, uint64_t a4, uint64_t a5, float *a6, float *a7)
{
  float result;

  result = (float)((float)(*((float *)&a1 + 1)
                         + (float)((float)(*(float *)&a1 - *((float *)&a1 + 1)) * fminf(fmaxf(a2 / 30.0, 0.0), 1.0)))
                 * 0.95)
         * 0.9;
  *a6 = result;
  *a7 = (float)(a3 * 3.1416) / 180.0;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_particleUpdate_313()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_505(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, float a5, float32x4_t a6, float a7, double a8, uint64_t a9, uint64_t a10, _OWORD *a11, float32x4_t *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  float32x4_t v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a13;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5;
  v26 = vmulq_laneq_f32(a6, a6, 3);
  a6.f32[0] = a7 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a6.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  v28.f32[0] = -(float)(*(float *)&a8
                      + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a8, 1), *(float32x2_t *)&a8).f32[0]
                              * a17));
  *a12 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a17, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  v28.i32[1] = v22.i32[1];
  v28.i32[2] = v22.i32[2];
  *a13 = v28;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_505()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_144(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = vmulq_laneq_f32(a8, a8, 3);
  a8.f32[0] = a17 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a8.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_144()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_278(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = vmulq_laneq_f32(a8, a8, 3);
  a8.f32[0] = a17 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a8.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_278()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

void ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_328(float a1, float a2, __n128 a3, float32x4_t a4, float a5, float32x4_t a6, float32x4_t a7, double a8, uint64_t a9, uint64_t a10, __int128 *a11, float32x4_t *a12, float *a13, uint64_t a14, uint64_t a15, uint64_t a16, float32x4_t a17, float a18, uint64_t a19, float a20)
{
  float32x4_t v20;
  __int128 v21;
  float v22;
  float v23;
  float32x4_t v24;
  float32x4_t v25;
  float v26;
  float32x4_t v27;
  float v28;
  float v29;

  v21 = *a11;
  v22 = a3.n128_f32[2] + a5;
  v20.f32[0] = a4.f32[2] - v22;
  v23 = vaddq_f32(a4, vmulq_f32(v20, a17)).f32[0] / 15.6;
  *(float *)&a8 = *(float *)&a8 * 0.6;
  v24 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a8, 0);
  v24.i32[3] = 1.0;
  v25 = vmulq_f32(vmulq_laneq_f32(a7, a7, 3), v24);
  v26 = a3.n128_f32[1] + a2;
  v27 = vaddq_f32(a4, vmulq_n_f32(a6, a4.f32[2] - v22));
  if (v26 <= (float)(v27.f32[1] + 0.5))
    v26 = v27.f32[1] + 0.5;
  v28 = v26 + a1;
  v29 = a18 * a20;
  if (v23 > (float)(a18 * a20))
    v29 = v23;
  *a12 = v25;
  *a13 = v29;
  *((float *)&v21 + 1) = v28;
  *((float *)&v21 + 2) = v22;
  *a11 = v21;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_328()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_383(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float32_t v28;
  float v29;
  float32x4_t v30;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v27 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v26), 0.0), 1.0);
  v28 = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v29 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v28 - a1.f32[0]), 0.0), 1.0);
  if (v28 > a2.f32[0])
    v29 = 1.0;
  if (v26 >= a2.f32[0])
    v29 = v27;
  *(float *)&a6 = a17 * 0.6;
  v30 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a6, 0);
  v30.i32[3] = 1.0;
  result = vmulq_n_f32(vmulq_f32(vmulq_laneq_f32(a8, a8, 3), v30), v29);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

float __vfx_script_WeatherV134DefaultBackground_particleUpdate_383()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

int32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_99(double a1, float a2, float a3, double a4, float a5, float a6, float a7, __n128 a8, uint64_t a9, uint64_t a10, int32x4_t *a11, __n128 *a12)
{
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  BOOL v17;
  float v18;
  float v19;
  float v20;
  int32x4_t result;

  v12 = *(float *)&a1 + a2;
  v13 = v12 + a3;
  v14 = fabsf(v12 + a3);
  v15 = v12 / v13;
  v16 = *((float *)&a4 + 1);
  if (*(float *)&a4 >= a5)
    v16 = 0.0;
  v17 = v14 > 0.00000011921;
  if (v14 > 0.00000011921)
    v18 = v15;
  else
    v18 = 0.0;
  v19 = *(float *)&a1 / v13;
  if (!v17)
    v19 = 0.0;
  v20 = v16;
  if (v19 >= a6)
    v20 = (float)((float)(v16 * 0.05) * fminf(fmaxf(a6 / v19, 0.0), 1.0)) + 0.0;
  if (v18 < a6)
    v20 = v16 + (float)((float)(0.0 - v16) * fminf(fmaxf((float)(a6 - v18) / (float)(1.0 - v18), 0.0), 1.0));
  *(float *)&a1 = v20 * a7;
  result = vdupq_lane_s32(*(int32x2_t *)&a1, 0);
  *a11 = result;
  a8.n128_f32[2] = a8.n128_f32[2] + -1.0;
  *a12 = a8;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_99()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_321(float a1, __n128 a2, float a3, float a4, float a5, float a6, float a7, float a8, uint64_t a9, uint64_t a10, float *a11, __n128 *a12, int32x4_t *a13, float *a14)
{
  float v23;
  float v24;
  double v25;
  float v26;
  float v27;
  int32x2_t v28;
  float v29;
  __n128 result;
  int32x2_t v31;
  __n128 v32;

  v23 = a2.n128_f32[1];
  v24 = (float)((float)(a4 * a5) * 0.04) + a3;
  if (a2.n128_f32[1] >= v24)
    v23 = v24;
  a2.n128_f32[1] = v23;
  a2.n128_u32[2] = a12->n128_u32[2];
  v32 = a2;
  vfx_script_clock_time();
  v26 = v25;
  v27 = (float)((float)((float)(sinf(v26 * 0.15) * 20.0) + a1) * 3.1416) / 180.0;
  *(float *)v28.i32 = a6 * a7;
  v31 = v28;
  v29 = sinf(v26 * 0.2);
  *a11 = v27;
  *a13 = vdupq_lane_s32(v31, 0);
  *a14 = (float)((float)((float)(v29 + v29) + a8) * a5) * 0.6;
  result = v32;
  *a12 = v32;
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_321()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_124(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, uint64_t a5, uint64_t a6, float32x4_t *a7)
{
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  int8x16_t v10;
  float32x4_t result;

  v7 = vsubq_f32(a2, a3);
  v8 = vmulq_f32(v7, v7);
  v9 = vaddq_f32(v8, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v8.f32, 1));
  v8.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v8, 2), v9).u64[0];
  v8.f32[0] = fminf(fmaxf((float)(sqrtf(v8.f32[0]) + -70.0) / 50.0, 0.0), 1.0);
  v8.f32[0] = (float)(v8.f32[0] * v8.f32[0]) * (float)((float)(v8.f32[0] * -2.0) + 3.0);
  v9.i32[0] = 1017370378;
  v10 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_f32(a4, v9), 0);
  __asm { FMOV            V3.4S, #1.0 }
  result = vmulq_f32((float32x4_t)vbslq_s8(v10, (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v8.f32, 0), _Q3), a1);
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultBackground_particleUpdate_124()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_418(float a1, float a2, double a3, float a4, float a5, float a6, float a7, uint64_t a8, uint64_t a9, float *a10, float32x4_t *a11)
{
  float v14;
  float v15;
  float v16;
  __float2 v17;
  unint64_t v18;
  float32x4_t result;
  float v20;
  unsigned int v21;

  v21 = LODWORD(a3);
  v14 = (float)((float)(a1 * 3.1416) / 180.0) + a2;
  v15 = *((float *)&a3 + 1);
  v16 = (float)((float)(a5 * a6) * 0.04) + a4;
  if (*((float *)&a3 + 1) >= v16)
    v15 = v16;
  v20 = v15;
  v17 = __sincosf_stret((float)((float)(180.0 - a1) * 3.1416) / 180.0);
  *(float *)&v18 = v17.__sinval * a7;
  *((float *)&v18 + 1) = v17.__cosval * a7;
  result = vaddq_f32((float32x4_t)v18, (float32x4_t)__PAIR64__(LODWORD(v20), v21));
  *a10 = v14;
  *a11 = result;
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_418()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_253(float32x4_t a1, float32x4_t a2, float32x4_t a3, __n128 a4, float a5, float32x4_t a6, float a7, float a8, uint64_t a9, uint64_t a10, uint64_t a11, __n128 *a12, float32x4_t *a13, float *a14, float *a15, float a16, float a17)
{
  __int128 v18;
  float v26;
  float v27;
  float32x4_t v28;
  float v29;
  float v30;
  float32_t v31;
  float v32;
  float v33;
  double v34;
  float v35;
  __n128 result;
  __n128 v37;
  float v38;
  __int128 v39;
  float32x4_t v40;
  __n128 v41;
  __n128 v42;

  v42 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v26 = -a1.f32[0];
  else
    v26 = a2.f32[0];
  if (v26 >= (float)-a1.f32[0])
    *(float *)&v18 = v26;
  else
    *(float *)&v18 = a1.f32[0];
  v38 = a3.f32[0];
  v27 = a3.f32[1] + a4.n128_f32[0];
  a4.n128_f32[0] = -a5;
  v41 = a4;
  v28 = vmulq_laneq_f32(a6, a6, 3);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v31 = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v32 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v31 - a1.f32[0]), 0.0), 1.0);
  if (v31 > a2.f32[0])
    v32 = 1.0;
  if (v29 >= a2.f32[0])
    v32 = v30;
  v40 = vmulq_n_f32(v28, v32);
  v33 = vmuls_lane_f32((float)(a7 * 3.1416) / 180.0, a3, 2);
  *((float *)&v18 + 1) = v27;
  DWORD2(v18) = *(_DWORD *)(a11 + 8);
  v39 = v18;
  vfx_script_clock_time();
  *(float *)&v34 = v34;
  v35 = sinf(v38 + (float)(*(float *)&v34 * a8));
  *a13 = v40;
  *a14 = v33;
  *a15 = (float)(v35 * a16) + a17;
  *(_OWORD *)a11 = v39;
  v37 = v41;
  result = v42;
  *(unint64_t *)((char *)v37.n128_u64 + 4) = *(unint64_t *)((char *)v42.n128_u64 + 4);
  *a12 = v37;
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_253()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_425(float a1, float a2, float a3, __n128 a4, float a5, float a6, float a7, __n128 a8, uint64_t a9, uint64_t a10, float *a11, __n128 *a12, __n128 *a13, float *a14)
{
  float v20;
  float v21;
  float v22;
  double v23;
  __n128 result;
  __n128 v25;

  v20 = (float)(a1 * 3.1416) / 180.0;
  v21 = a4.n128_f32[1];
  v22 = (float)(a6 * a7) * 0.5;
  if (a4.n128_f32[1] >= (float)((float)(v22 * 0.08) + a5))
    v21 = (float)(v22 * 0.08) + a5;
  a4.n128_f32[1] = v21;
  a4.n128_u32[2] = a12->n128_u32[2];
  v25 = a4;
  vfx_script_clock_time();
  *(float *)&v23 = v23;
  *a11 = v20 + (float)((float)((float)(a3 * 3.1416) / 180.0) * sinf(*(float *)&v23 * a2));
  *a13 = a8;
  *a14 = v22;
  result = v25;
  *a12 = v25;
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_425()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_6(float32x4_t a1, float a2, float a3, uint64_t a4, uint64_t a5, float32x4_t *a6)
{
  float32x4_t result;

  result = vmulq_n_f32(vmulq_n_f32(a1, a2), a3);
  *a6 = result;
  return result;
}

__n128 __vfx_script_WeatherV134DefaultBackground_particleUpdate_6()
{
  __n128 result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

__n128 ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_210(float a1, float a2, float a3, float a4, float a5, uint64_t a6, uint64_t a7, __n128 *a8)
{
  double v13;
  __n128 v14;
  __n128 result;
  __n128 v16;

  v16 = *a8;
  vfx_script_clock_time();
  *(float *)&v13 = v13;
  v14.n128_f32[0] = vmlas_n_f32(0.0, (float)((float)(sinf(*(float *)&v13 * a1) * a2) + a3) * a4, a5);
  result = v16;
  *(unint64_t *)((char *)v14.n128_u64 + 4) = *(unint64_t *)((char *)v16.n128_u64 + 4);
  *a8 = v14;
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_210()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134DefaultBackground_particleUpdate_100(float32x4_t a1, __n128 a2, float a3, float32x4_t a4, float32x4_t a5, float a6, int8x8_t a7, int8x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, float32x4_t *a12, float *a13, uint64_t a14, float a15, float a16, double a17, float a18)
{
  double v27;
  int32x2_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float v31;
  float32x2_t v32;
  float v33;
  float v34;
  __float2 v35;
  float32x2_t v36;
  float32x2_t v37;
  __int128 v38;
  float v39;
  __n128 result;
  int v44;
  float32x4_t v46;

  v44 = *(_DWORD *)(a14 + 8);
  vfx_script_clock_time();
  *(float *)&v27 = v27;
  *(float *)v28.i32 = a2.n128_f32[1]
                    + vmuls_lane_f32(sinf(a2.n128_f32[2] + (float)(*(float *)&v27 * a2.n128_f32[0])), (float32x2_t)a2.n128_u64[0], 1);
  v46 = vmulq_n_f32(vaddq_f32((float32x4_t)vdupq_lane_s32(v28, 0), a1), a3);
  v29 = vsubq_f32(vaddq_f32(a4, (float32x4_t)xmmword_1B000C9B0), a5);
  v30 = vmulq_f32(v29, v29);
  v30.f32[0] = fminf(fmaxf((float)(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0])+ -12.0)/ 5.0, 0.0), 1.0);
  v31 = (float)(v30.f32[0] * v30.f32[0]) * (float)((float)(v30.f32[0] * -2.0) + 3.0);
  if (a6 <= 0.02)
    v31 = 1.0;
  v32 = (float32x2_t)vbsl_s8((int8x8_t)vceqd_s64(a11, 0), a7, a8);
  v33 = (float)(vmlas_n_f32(v32.f32[0], a16, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)v32, 1), v32).f32[0]) * a15)
      * v31;
  vfx_script_clock_delta_time();
  v35 = __sincosf_stret(v34 * a18);
  *(float32x2_t *)&v38 = vmul_n_f32((float32x2_t)vrev64_s32(*(int32x2_t *)a4.f32), v35.__sinval);
  v36 = vmul_n_f32(*(float32x2_t *)a4.f32, v35.__cosval);
  v37.i32[0] = vsub_f32(v36, *(float32x2_t *)&v38).u32[0];
  v37.i32[1] = vadd_f32(v36, *(float32x2_t *)&v38).i32[1];
  *(float32x2_t *)&v38 = vadd_f32(v37, 0);
  if (*((float *)&v38 + 1) >= 0.0)
    v39 = *(float *)&v38;
  else
    v39 = -*(float *)&v38;
  *a12 = v46;
  *a13 = v33;
  *(float *)&v38 = v39;
  DWORD2(v38) = v44;
  *(_OWORD *)a14 = v38;
  result.n128_u64[0] = v38;
  result.n128_u32[2] = DWORD2(v38);
  return result;
}

void __vfx_script_WeatherV134DefaultBackground_particleUpdate_100()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

char **__vfx_get_script_table_WeatherV134DefaultBackground()
{
  return &__vfx_get_script_table_WeatherV134DefaultBackground::scriptTable;
}

float Init_WeatherV134DefaultCollision_graph_050FEF96_9B7C_4EE8_9AB4_B30DF268A69D(double a1, double a2, double a3, uint64_t a4, uint64_t a5, float *a6, float *a7, float *a8)
{
  float v8;
  float result;

  *a7 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a7[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a8 = fminf(*(float *)&a3, *((float *)&a3 + 1));
  a8[1] = fmaxf(*(float *)&a3, *((float *)&a3 + 1));
  v8 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v8;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_050FEF96_9B7C_4EE8_9AB4_B30DF268A69D()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  float *v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 40);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = **(_QWORD **)(arguments_buffer + 16);
  v5 = **(_QWORD **)(arguments_buffer + 24);
  v6 = **(_QWORD **)(arguments_buffer + 32);
  *v2 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  v2[1] = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  *v3 = fminf(*(float *)&v6, *((float *)&v6 + 1));
  v3[1] = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  *(float *)&v5 = fminf(*(float *)&v4, *((float *)&v4 + 1));
  result = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  *(_DWORD *)v1 = v5;
  *(float *)(v1 + 4) = result;
  return result;
}

float Init_WeatherV134DefaultCollision_graph_A59BBA53_86E4_4110_911D_209E97E32427(double a1, float a2, float a3, float a4, float a5, uint64_t a6, uint64_t a7, float *a8, float *a9, _OWORD *a10, _OWORD *a11)
{
  float v19;
  float v20;
  float v21;
  float v22;
  double v23;
  float v24;
  __float2 v25;
  __int128 v26;
  __float2 v27;
  __int128 v28;
  float result;
  __int128 v30;

  v19 = -a2;
  v20 = a2 * -0.5;
  v21 = fminf(v19, v20);
  v22 = fmaxf(v19, v20);
  vfx_script_clock_time();
  *(float *)&v23 = v23;
  v24 = (float)((float)((float)(sinf(*(float *)&v23 * a4) * a5) + a3) * 3.1416) / 180.0;
  v25 = __sincosf_stret(v24 + -1.571);
  *(float32x2_t *)&v26 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v25.__sinval), LODWORD(v25.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v26) = 5.0;
  v30 = v26;
  v27 = __sincosf_stret(v24 * 0.5);
  *(_QWORD *)&v28 = 0;
  *((__float2 *)&v28 + 1) = v27;
  *a9 = v21;
  a9[1] = v22;
  *a10 = v30;
  *a11 = v28;
  result = fminf(*(float *)&a1, *((float *)&a1 + 1));
  *a8 = result;
  a8[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_A59BBA53_86E4_4110_911D_209E97E32427()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  uint64_t v3;
  float *v4;
  _OWORD *v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  double v14;
  float v15;
  __float2 v16;
  __int128 v17;
  __float2 v18;
  __int128 v19;
  float result;
  __int128 v21;
  float v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v3 = *(_QWORD *)(arguments_buffer + 72);
  v5 = *(_OWORD **)(arguments_buffer + 80);
  LODWORD(v22) = **(_QWORD **)(arguments_buffer + 16);
  v6 = **(float **)(arguments_buffer + 32);
  v7 = **(float **)(arguments_buffer + 40);
  v8 = **(float **)(arguments_buffer + 48);
  LODWORD(v9) = HIDWORD(**(_QWORD **)(arguments_buffer + 16));
  v10 = -*v1;
  v11 = *v1 * -0.5;
  v12 = fminf(v10, v11);
  v13 = fmaxf(v10, v11);
  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)(v6 + (float)(v8 * sinf(v7 * *(float *)&v14))) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  *(float32x2_t *)&v17 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v16.__sinval), LODWORD(v16.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v17) = 5.0;
  v21 = v17;
  v18 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v19 = 0;
  *((__float2 *)&v19 + 1) = v18;
  *v4 = v12;
  v4[1] = v13;
  *(_OWORD *)v3 = v21;
  *v5 = v19;
  result = fminf(v22, v9);
  *v2 = result;
  v2[1] = fmaxf(v22, v9);
  *(_DWORD *)(v3 + 12) = 1065353216;
  return result;
}

float Init_WeatherV134DefaultCollision_graph_983E2E60_AE46_46F5_A504_72609C6805AA(double a1, double a2, uint64_t a3, uint64_t a4, float *a5, float *a6)
{
  float v6;
  float result;

  *a6 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a6[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  v6 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a5 = v6;
  a5[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_983E2E60_AE46_46F5_A504_72609C6805AA()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  float *v2;
  uint64_t v3;
  uint64_t v4;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = **(_QWORD **)(arguments_buffer + 16);
  v4 = **(_QWORD **)(arguments_buffer + 24);
  *v2 = fminf(*(float *)&v4, *((float *)&v4 + 1));
  v2[1] = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  *(float *)&v4 = fminf(*(float *)&v3, *((float *)&v3 + 1));
  result = fmaxf(*(float *)&v3, *((float *)&v3 + 1));
  *(_DWORD *)v1 = v4;
  *(float *)(v1 + 4) = result;
  return result;
}

float Init_WeatherV134DefaultCollision_graph_EDA5C51C_03B0_4452_8EF5_B6DC2DAF0675(float a1, double a2, float a3, float a4, float a5, float a6, float a7, uint64_t a8, uint64_t a9, float *a10, float *a11, _DWORD *a12, float *a13, _OWORD *a14, _OWORD *a15)
{
  float v25;
  float v26;
  float v27;
  double v28;
  float v29;
  __float2 v30;
  __int128 v31;
  __float2 v32;
  __int128 v33;
  float result;
  __int128 v35;
  float v36;
  unint64_t v37;
  float v38;

  v38 = *(float *)&a2;
  v25 = *((float *)&a2 + 1);
  v37 = __PAIR64__(COERCE_UNSIGNED_INT(fminf(-a3, a3 * -0.5)), COERCE_UNSIGNED_INT(fmaxf(-a3, a3 * -0.5)));
  v26 = (float)(a4 * 3.1416) / 180.0;
  v27 = fminf(v26, 0.0);
  v36 = fmaxf(v26, 0.0);
  vfx_script_clock_time();
  *(float *)&v28 = v28;
  v29 = (float)((float)((float)(sinf(*(float *)&v28 * a6) * a7) + a5) * 3.1416) / 180.0;
  v30 = __sincosf_stret(v29 + -1.571);
  *(float32x2_t *)&v31 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v30.__sinval), LODWORD(v30.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v31) = 5.0;
  v35 = v31;
  v32 = __sincosf_stret(v29 * 0.5);
  *(_QWORD *)&v33 = 0;
  *((__float2 *)&v33 + 1) = v32;
  *a12 = HIDWORD(v37);
  a12[1] = v37;
  *a13 = v27;
  a13[1] = v36;
  *a14 = v35;
  *a15 = v33;
  result = fminf(v38, v25);
  *a11 = result;
  a11[1] = fmaxf(v38, v25);
  *a10 = a1;
  a10[1] = a1;
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_EDA5C51C_03B0_4452_8EF5_B6DC2DAF0675()
{
  uint64_t arguments_buffer;
  _DWORD *v1;
  float *v2;
  _DWORD *v3;
  uint64_t v4;
  float *v5;
  _OWORD *v6;
  int v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  double v14;
  float v15;
  __float2 v16;
  __int128 v17;
  __float2 v18;
  __int128 v19;
  float result;
  __int128 v21;
  float v22;
  unint64_t v23;
  float v24;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_DWORD **)(arguments_buffer + 72);
  v2 = *(float **)(arguments_buffer + 80);
  v3 = *(_DWORD **)(arguments_buffer + 88);
  v5 = *(float **)(arguments_buffer + 96);
  v4 = *(_QWORD *)(arguments_buffer + 104);
  v6 = *(_OWORD **)(arguments_buffer + 112);
  v7 = **(_DWORD **)(arguments_buffer + 16);
  LODWORD(v24) = **(_QWORD **)(arguments_buffer + 24);
  v8 = **(float **)(arguments_buffer + 48);
  v9 = **(float **)(arguments_buffer + 56);
  v10 = **(float **)(arguments_buffer + 64);
  LODWORD(v11) = HIDWORD(**(_QWORD **)(arguments_buffer + 24));
  v23 = __PAIR64__(COERCE_UNSIGNED_INT(fminf(-**(float **)(arguments_buffer + 32), **(float **)(arguments_buffer + 32) * -0.5)), COERCE_UNSIGNED_INT(fmaxf(-**(float **)(arguments_buffer + 32), **(float **)(arguments_buffer + 32) * -0.5)));
  v12 = (float)(**(float **)(arguments_buffer + 40) * 3.1416) / 180.0;
  v13 = fminf(v12, 0.0);
  v22 = fmaxf(v12, 0.0);
  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)(v8 + (float)(v10 * sinf(v9 * *(float *)&v14))) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  *(float32x2_t *)&v17 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v16.__sinval), LODWORD(v16.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v17) = 5.0;
  v21 = v17;
  v18 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v19 = 0;
  *((__float2 *)&v19 + 1) = v18;
  *v3 = HIDWORD(v23);
  v3[1] = v23;
  *v5 = v13;
  v5[1] = v22;
  *(_OWORD *)v4 = v21;
  *v6 = v19;
  result = fminf(v24, v11);
  *v2 = result;
  v2[1] = fmaxf(v24, v11);
  *v1 = v7;
  v1[1] = v7;
  *(_DWORD *)(v4 + 12) = 1065353216;
  return result;
}

float Init_WeatherV134DefaultCollision_graph_62654137_EF5D_491F_96E8_AF7D654AB1A8(double a1, double a2, double a3, uint64_t a4, uint64_t a5, float *a6, float *a7, float *a8)
{
  float v8;
  float result;

  *a7 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a7[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a8 = fminf(*(float *)&a3, *((float *)&a3 + 1));
  a8[1] = fmaxf(*(float *)&a3, *((float *)&a3 + 1));
  v8 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v8;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_62654137_EF5D_491F_96E8_AF7D654AB1A8()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  float *v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 40);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = **(_QWORD **)(arguments_buffer + 16);
  v5 = **(_QWORD **)(arguments_buffer + 24);
  v6 = **(_QWORD **)(arguments_buffer + 32);
  *v2 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  v2[1] = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  *v3 = fminf(*(float *)&v6, *((float *)&v6 + 1));
  v3[1] = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  *(float *)&v5 = fminf(*(float *)&v4, *((float *)&v4 + 1));
  result = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  *(_DWORD *)v1 = v5;
  *(float *)(v1 + 4) = result;
  return result;
}

float Init_WeatherV134DefaultCollision_graph_92114AF7_7053_4175_A2ED_08C2BA456A20(float a1, double a2, float a3, float a4, float a5, float a6, float a7, uint64_t a8, int a9, float *a10, float *a11, float *a12, float *a13, _OWORD *a14, _OWORD *a15, float *a16)
{
  int v27;
  unsigned int v28;
  float v29;
  int v30;
  unsigned int v31;
  float v32;
  float v33;
  double v34;
  float v35;
  __float2 v36;
  __int128 v37;
  __float2 v38;
  __int128 v39;
  int v40;
  unsigned int v41;
  float v42;
  int v43;
  unsigned int v44;
  float v45;
  float result;
  __int128 v47;
  __int128 v48;

  v27 = vfx_script_clock_simulation_index();
  v28 = 277803737
      * (((747796405 * (v27 + a9) - 1114579054) >> (((747796405 * (v27 + a9) - 1114579054) >> 28)
                                                                + 4)) ^ (747796405 * (v27 + a9) - 1114579054));
  v29 = (float)(COERCE_FLOAT((v28 >> 31) ^ (v28 >> 9) | 0x3F800000) + -1.0) * *(float *)&a2;
  v30 = vfx_script_clock_simulation_index();
  v31 = 277803737
      * (((747796405 * (v30 + a9) + 381013756) >> (((747796405 * (v30 + a9) + 381013756) >> 28)
                                                               + 4)) ^ (747796405 * (v30 + a9) + 381013756));
  v32 = vmuls_lane_f32(COERCE_FLOAT((v31 >> 31) ^ (v31 >> 9) | 0x3F800000) + -1.0, *(float32x2_t *)&a2, 1);
  v33 = (float)(a4 * 3.1416) / 180.0;
  vfx_script_clock_time();
  *(float *)&v34 = v34;
  v35 = (float)((float)((float)(sinf(*(float *)&v34 * a6) * a7) + a5) * 3.1416) / 180.0;
  v36 = __sincosf_stret(v35 + -1.571);
  *(float32x2_t *)&v37 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v36.__sinval), LODWORD(v36.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v37) = -4.5;
  v48 = v37;
  v38 = __sincosf_stret(v35 * 0.5);
  *(_QWORD *)&v39 = 0;
  *((__float2 *)&v39 + 1) = v38;
  v47 = v39;
  v40 = vfx_script_clock_simulation_index();
  v41 = 277803737
      * (((747796405 * (v40 + a9) - 1862375459) >> (((747796405 * (v40 + a9) - 1862375459) >> 28)
                                                                + 4)) ^ (747796405 * (v40 + a9) - 1862375459));
  v42 = (float)(4.0 * *(float *)&a2) * (float)(COERCE_FLOAT((v41 >> 31) ^ (v41 >> 9) | 0x3F800000) + -1.0);
  v43 = vfx_script_clock_simulation_index();
  v44 = 277803737
      * (((747796405 * (v43 + a9) - 366782649) >> (((747796405 * (v43 + a9) - 366782649) >> 28)
                                                               + 4)) ^ (747796405 * (v43 + a9) - 366782649));
  v45 = vmuls_lane_f32(4.0, *(float32x2_t *)&a2, 1)
      * (float)(COERCE_FLOAT((v44 >> 31) ^ (v44 >> 9) | 0x3F800000) + -1.0);
  *a12 = fminf(-a3, a3 * -0.7);
  a12[1] = fmaxf(-a3, a3 * -0.7);
  *a14 = v48;
  *a15 = v47;
  *a11 = fminf(v29, v32);
  a11[1] = fmaxf(v29, v32);
  *a13 = fminf(v33, 0.0);
  a13[1] = fmaxf(v33, 0.0);
  *a16 = fminf(v42, v45);
  a16[1] = fmaxf(v42, v45);
  result = a1;
  *a10 = a1;
  a10[1] = a1;
  return result;
}

float __vfx_script_WeatherV134DefaultCollision_graph_92114AF7_7053_4175_A2ED_08C2BA456A20()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  uint64_t v5;
  float *v6;
  int v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  int v13;
  unsigned int v14;
  float v15;
  int v16;
  unsigned int v17;
  float v18;
  float v19;
  double v20;
  float v21;
  __float2 v22;
  __int128 v23;
  __float2 v24;
  __int128 v25;
  int v26;
  unsigned int v27;
  float v28;
  int v29;
  unsigned int v30;
  float v31;
  float result;
  __int128 v33;
  __int128 v34;
  float v35;
  float v36;
  _OWORD *v37;
  float v38;
  float32x2_t v39;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 72);
  v2 = *(float **)(arguments_buffer + 80);
  v4 = *(float **)(arguments_buffer + 88);
  v3 = *(float **)(arguments_buffer + 96);
  v5 = *(_QWORD *)(arguments_buffer + 104);
  v37 = *(_OWORD **)(arguments_buffer + 112);
  v6 = *(float **)(arguments_buffer + 120);
  v7 = **(_DWORD **)(arguments_buffer + 8);
  v38 = **(float **)(arguments_buffer + 16);
  v39 = **(float32x2_t **)(arguments_buffer + 24);
  v8 = **(float **)(arguments_buffer + 32);
  v9 = **(float **)(arguments_buffer + 40);
  v10 = **(float **)(arguments_buffer + 48);
  v11 = **(float **)(arguments_buffer + 56);
  v12 = **(float **)(arguments_buffer + 64);
  v13 = vfx_script_clock_simulation_index();
  v14 = 277803737
      * (((747796405 * (v13 + v7) - 1114579054) >> (((747796405 * (v13 + v7) - 1114579054) >> 28)
                                                                + 4)) ^ (747796405 * (v13 + v7) - 1114579054));
  v15 = (float)(COERCE_FLOAT((v14 >> 31) ^ (v14 >> 9) | 0x3F800000) + -1.0) * v39.f32[0];
  v16 = vfx_script_clock_simulation_index();
  v17 = 277803737
      * (((747796405 * (v16 + v7) + 381013756) >> (((747796405 * (v16 + v7) + 381013756) >> 28)
                                                               + 4)) ^ (747796405 * (v16 + v7) + 381013756));
  v18 = vmuls_lane_f32(COERCE_FLOAT((v17 >> 31) ^ (v17 >> 9) | 0x3F800000) + -1.0, v39, 1);
  v35 = fmaxf(-v8, v8 * -0.7);
  v36 = fminf(-v8, v8 * -0.7);
  v19 = (float)(v9 * 3.1416) / 180.0;
  vfx_script_clock_time();
  *(float *)&v20 = v20;
  v21 = (float)((float)(v10 + (float)(v12 * sinf(v11 * *(float *)&v20))) * 3.1416) / 180.0;
  v22 = __sincosf_stret(v21 + -1.571);
  *(float32x2_t *)&v23 = vmul_f32((float32x2_t)__PAIR64__(LODWORD(v22.__sinval), LODWORD(v22.__cosval)), (float32x2_t)vdup_n_s32(0xC20C0000));
  DWORD2(v23) = -4.5;
  v34 = v23;
  v24 = __sincosf_stret(v21 * 0.5);
  *(_QWORD *)&v25 = 0;
  *((__float2 *)&v25 + 1) = v24;
  v33 = v25;
  v26 = vfx_script_clock_simulation_index();
  v27 = 277803737
      * (((747796405 * (v26 + v7) - 1862375459) >> (((747796405 * (v26 + v7) - 1862375459) >> 28)
                                                                + 4)) ^ (747796405 * (v26 + v7) - 1862375459));
  v28 = (float)(4.0 * v39.f32[0]) * (float)(COERCE_FLOAT((v27 >> 31) ^ (v27 >> 9) | 0x3F800000) + -1.0);
  v29 = vfx_script_clock_simulation_index();
  v30 = 277803737
      * (((747796405 * (v29 + v7) - 366782649) >> (((747796405 * (v29 + v7) - 366782649) >> 28)
                                                               + 4)) ^ (747796405 * (v29 + v7) - 366782649));
  v31 = vmuls_lane_f32(4.0, v39, 1) * (float)(COERCE_FLOAT((v30 >> 31) ^ (v30 >> 9) | 0x3F800000) + -1.0);
  *v4 = v36;
  v4[1] = v35;
  *(_OWORD *)v5 = v34;
  *v37 = v33;
  *v2 = fminf(v15, v18);
  v2[1] = fmaxf(v15, v18);
  *v3 = fminf(v19, 0.0);
  v3[1] = fmaxf(v19, 0.0);
  *v6 = fminf(v28, v31);
  v6[1] = fmaxf(v28, v31);
  result = v38;
  *v1 = v38;
  v1[1] = v38;
  *(_DWORD *)(v5 + 12) = 1065353216;
  return result;
}

__n128 Main_WeatherV134DefaultCollision_graph_CC3524A0_B5DA_4E14_A517_2C8C1F4BFA7C(int64x2_t a1, uint64_t a2, uint64_t a3, __n128 *a4, int64x2_t *a5)
{
  int64x2_t v5;
  __n128 result;

  v5 = vdupq_laneq_s64(a1, 1);
  a1.i32[2] = a4->n128_i32[2];
  v5.i32[2] = a5->i32[2];
  *a4 = (__n128)a1;
  *a5 = v5;
  result.n128_u64[0] = a1.i64[0];
  result.n128_u32[2] = a1.u32[2];
  return result;
}

__n128 __vfx_script_WeatherV134DefaultCollision_graph_CC3524A0_B5DA_4E14_A517_2C8C1F4BFA7C()
{
  _QWORD *arguments_buffer;
  int64x2_t *v1;
  int64x2_t *v2;
  int64x2_t v3;
  int64x2_t v4;
  __n128 result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (int64x2_t *)arguments_buffer[3];
  v2 = (int64x2_t *)arguments_buffer[4];
  v4 = *(int64x2_t *)arguments_buffer[2];
  v3 = vzip2q_s64(v4, *v2);
  v4.i32[2] = v1->i32[2];
  *v1 = v4;
  *v2 = v3;
  v1->i32[3] = 1065353216;
  result.n128_u64[0] = v4.i64[0];
  result.n128_u32[2] = v4.u32[2];
  return result;
}

__n128 Main_WeatherV134DefaultCollision_graph_50F46824_FFB5_4503_8430_B653DBD61C0F(int64x2_t a1, uint64_t a2, uint64_t a3, __n128 *a4, int64x2_t *a5)
{
  int64x2_t v5;
  __n128 result;

  v5 = vdupq_laneq_s64(a1, 1);
  a1.i32[2] = a4->n128_i32[2];
  v5.i32[2] = a5->i32[2];
  *a4 = (__n128)a1;
  *a5 = v5;
  result.n128_u64[0] = a1.i64[0];
  result.n128_u32[2] = a1.u32[2];
  return result;
}

__n128 __vfx_script_WeatherV134DefaultCollision_graph_50F46824_FFB5_4503_8430_B653DBD61C0F()
{
  _QWORD *arguments_buffer;
  int64x2_t *v1;
  int64x2_t *v2;
  int64x2_t v3;
  int64x2_t v4;
  __n128 result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (int64x2_t *)arguments_buffer[3];
  v2 = (int64x2_t *)arguments_buffer[4];
  v4 = *(int64x2_t *)arguments_buffer[2];
  v3 = vzip2q_s64(v4, *v2);
  v4.i32[2] = v1->i32[2];
  *v1 = v4;
  *v2 = v3;
  v1->i32[3] = 1065353216;
  result.n128_u64[0] = v4.i64[0];
  result.n128_u32[2] = v4.u32[2];
  return result;
}

__n128 Main_WeatherV134DefaultCollision_graph_862EEC8D_6955_4286_A816_D9821DF78167(int64x2_t a1, uint64_t a2, uint64_t a3, __n128 *a4, int64x2_t *a5)
{
  int64x2_t v5;
  __n128 result;

  v5 = vdupq_laneq_s64(a1, 1);
  a1.i32[2] = a4->n128_i32[2];
  v5.i32[2] = a5->i32[2];
  *a4 = (__n128)a1;
  *a5 = v5;
  result.n128_u64[0] = a1.i64[0];
  result.n128_u32[2] = a1.u32[2];
  return result;
}

__n128 __vfx_script_WeatherV134DefaultCollision_graph_862EEC8D_6955_4286_A816_D9821DF78167()
{
  _QWORD *arguments_buffer;
  int64x2_t *v1;
  int64x2_t *v2;
  int64x2_t v3;
  int64x2_t v4;
  __n128 result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (int64x2_t *)arguments_buffer[3];
  v2 = (int64x2_t *)arguments_buffer[4];
  v4 = *(int64x2_t *)arguments_buffer[2];
  v3 = vzip2q_s64(v4, *v2);
  v4.i32[2] = v1->i32[2];
  *v1 = v4;
  *v2 = v3;
  v1->i32[3] = 1065353216;
  result.n128_u64[0] = v4.i64[0];
  result.n128_u32[2] = v4.u32[2];
  return result;
}

__n128 Main_WeatherV134DefaultCollision_graph_013D3B5C_5752_4886_BC4A_1BF334E80845(int64x2_t a1, uint64_t a2, uint64_t a3, __n128 *a4, int64x2_t *a5)
{
  int64x2_t v5;
  __n128 result;

  v5 = vdupq_laneq_s64(a1, 1);
  a1.i32[2] = a4->n128_i32[2];
  v5.i32[2] = a5->i32[2];
  *a4 = (__n128)a1;
  *a5 = v5;
  result.n128_u64[0] = a1.i64[0];
  result.n128_u32[2] = a1.u32[2];
  return result;
}

__n128 __vfx_script_WeatherV134DefaultCollision_graph_013D3B5C_5752_4886_BC4A_1BF334E80845()
{
  _QWORD *arguments_buffer;
  int64x2_t *v1;
  int64x2_t *v2;
  int64x2_t v3;
  int64x2_t v4;
  __n128 result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (int64x2_t *)arguments_buffer[3];
  v2 = (int64x2_t *)arguments_buffer[4];
  v4 = *(int64x2_t *)arguments_buffer[2];
  v3 = vzip2q_s64(v4, *v2);
  v4.i32[2] = v1->i32[2];
  *v1 = v4;
  *v2 = v3;
  v1->i32[3] = 1065353216;
  result.n128_u64[0] = v4.i64[0];
  result.n128_u32[2] = v4.u32[2];
  return result;
}

__n128 ParticleInit_WeatherV134DefaultCollision_particleInit_4(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, __n128 *a6)
{
  int v9;
  unsigned int v10;
  float32x4_t v11;
  __n128 result;

  v9 = vfx_script_clock_simulation_index();
  v10 = 277803737
      * (((747796405 * (a5 + a4 + v9) + 1723691694) >> (((747796405 * (a5 + a4 + v9)
                                                                                    + 1723691694) >> 28)
                                                                    + 4)) ^ (747796405 * (a5 + a4 + v9) + 1723691694));
  v11 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v10 >> 31) ^ (v10 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v11, v11, 3);
  result.n128_u32[3] = v11.u32[3];
  *a6 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultCollision_particleInit_4()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultCollision_particleInit_50(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 1340069426) >> (((747796405 * (v12 + v15) + 1340069426) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 1340069426));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultCollision_particleInit_50()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleInit_WeatherV134DefaultCollision_particleInit_45(const void *a1, int a2, float *a3)
{
  int v5;
  unsigned int v6;
  float result;

  v5 = vfx_script_clock_simulation_index();
  v6 = 277803737
     * (((747796405 * (v5 + a2) - 1403630843) >> (((747796405 * (v5 + a2) - 1403630843) >> 28)
                                                              + 4)) ^ (747796405 * (v5 + a2) - 1403630843));
  result = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v6 >> 31) ^ (v6 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  *a3 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultCollision_particleInit_45()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134DefaultCollision_particleInit_67(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 228098884) >> (((747796405 * (v12 + v15) + 228098884) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 228098884));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultCollision_particleInit_67()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleInit_WeatherV134DefaultCollision_particleInit_72(const void *a1, int a2, float *a3)
{
  int v5;
  unsigned int v6;
  float result;

  v5 = vfx_script_clock_simulation_index();
  v6 = 277803737
     * (((747796405 * (v5 + a2) - 1403630843) >> (((747796405 * (v5 + a2) - 1403630843) >> 28)
                                                              + 4)) ^ (747796405 * (v5 + a2) - 1403630843));
  result = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v6 >> 31) ^ (v6 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  *a3 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134DefaultCollision_particleInit_72()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

char **__vfx_get_script_table_WeatherV134DefaultCollision()
{
  return &__vfx_get_script_table_WeatherV134DefaultCollision::scriptTable;
}

double Main_WeatherV134WatchBackground_graph_C2EB0BD8_E3CE_42DE_A888_E4C3561E0A72(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  double result;

  result = -7.03687442e15;
  *a3 = xmmword_1B000C9B0;
  return result;
}

double __vfx_script_WeatherV134WatchBackground_graph_C2EB0BD8_E3CE_42DE_A888_E4C3561E0A72()
{
  uint64_t arguments_buffer;
  double result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result = -7.03687442e15;
  *(_OWORD *)*(_QWORD *)(arguments_buffer + 16) = xmmword_1B000CAC0;
  return result;
}

void Main_WeatherV134WatchBackground_graph_45BAA8FB_52B6_46BC_947A_79FCD0AAD5C0(const void *a1, unsigned int a2, float a3, simd_quatf *a4)
{
  double v6;
  __float2 v7;
  simd_quatf v8;

  vfx_script_clock_time();
  *(float *)&v6 = v6;
  v7 = __sincosf_stret((float)(*(float *)&v6 * a3) * 0.5);
  v8.vector.i64[0] = 0;
  *(__float2 *)&v8.vector.u32[2] = v7;
  *a4 = v8;
}

void __vfx_script_WeatherV134WatchBackground_graph_45BAA8FB_52B6_46BC_947A_79FCD0AAD5C0()
{
  uint64_t arguments_buffer;
  _OWORD *v1;
  float v2;
  double v3;
  __float2 v4;
  __int128 v5;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_OWORD **)(arguments_buffer + 24);
  v2 = **(float **)(arguments_buffer + 16);
  vfx_script_clock_time();
  *(float *)&v3 = v3;
  v4 = __sincosf_stret((float)(v2 * *(float *)&v3) * 0.5);
  *(_QWORD *)&v5 = 0;
  *((__float2 *)&v5 + 1) = v4;
  *v1 = v5;
}

void Spawn_WeatherV134WatchBackground_graph_1FBFFD1F_ACDA_4805_8FBD_F737A783A955(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_1FBFFD1F_ACDA_4805_8FBD_F737A783A955()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_4319B6D0_C5CB_4ECC_87AB_33EB81319C90(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_4319B6D0_C5CB_4ECC_87AB_33EB81319C90()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-4.5 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_008687FF_1719_410F_B311_4C45DF74A84F(float a1, double a2, float a3, __n128 a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, __n128 *a10, float *a11)
{
  __n128 v11;
  float v12;
  float v13;
  float v14;

  v11 = *a10;
  v12 = -a3;
  v13 = a3 * -0.7;
  v14 = vmuls_lane_f32(8.5, *(float32x2_t *)&a2, 1);
  *a9 = fminf(v12, v13);
  a9[1] = fmaxf(v12, v13);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a4.n128_u32[1] = v11.n128_u32[1];
  a4.n128_u32[2] = v11.n128_u32[2];
  *a10 = a4;
  *a11 = fminf(3.5 * *(float *)&a2, v14);
  a11[1] = fmaxf(3.5 * *(float *)&a2, v14);
  *a7 = a1;
  a7[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_008687FF_1719_410F_B311_4C45DF74A84F()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  __int128 *v5;
  float *v6;
  float result;
  float32x2_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(__int128 **)(arguments_buffer + 72);
  v6 = *(float **)(arguments_buffer + 80);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(float32x2_t **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 40);
  v10 = *v5;
  v11 = -*v1;
  v12 = *v1 * -0.7;
  v13 = vmuls_lane_f32(8.5, v8, 1);
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v3 = fminf(v8.f32[0], v8.f32[1]);
  v3[1] = fmaxf(v8.f32[0], v8.f32[1]);
  DWORD1(v9) = DWORD1(v10);
  DWORD2(v9) = DWORD2(v10);
  *v5 = v9;
  *v6 = fminf(3.5 * v8.f32[0], v13);
  v6[1] = fmaxf(3.5 * v8.f32[0], v13);
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_EB151F5E_24AD_4080_B1D3_5C01E2E83603(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_EB151F5E_24AD_4080_B1D3_5C01E2E83603()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_7C280C95_9B4F_418D_9ABF_EEDFCEB95D15(float a1, double a2, float a3, __n128 a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, __n128 *a10, float *a11)
{
  __n128 v11;
  float v12;
  float v13;
  float v14;

  v11 = *a10;
  v12 = -a3;
  v13 = a3 * -0.6;
  v14 = vmuls_lane_f32(8.5, *(float32x2_t *)&a2, 1);
  *a9 = fminf(v12, v13);
  a9[1] = fmaxf(v12, v13);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a4.n128_u32[1] = v11.n128_u32[1];
  a4.n128_u32[2] = v11.n128_u32[2];
  *a10 = a4;
  *a11 = fminf(2.75 * *(float *)&a2, v14);
  a11[1] = fmaxf(2.75 * *(float *)&a2, v14);
  *a7 = a1;
  a7[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_7C280C95_9B4F_418D_9ABF_EEDFCEB95D15()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  __int128 *v5;
  float *v6;
  float result;
  float32x2_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(__int128 **)(arguments_buffer + 72);
  v6 = *(float **)(arguments_buffer + 80);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(float32x2_t **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 40);
  v10 = *v5;
  v11 = -*v1;
  v12 = *v1 * -0.6;
  v13 = vmuls_lane_f32(8.5, v8, 1);
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v3 = fminf(v8.f32[0], v8.f32[1]);
  v3[1] = fmaxf(v8.f32[0], v8.f32[1]);
  DWORD1(v9) = DWORD1(v10);
  DWORD2(v9) = DWORD2(v10);
  *v5 = v9;
  *v6 = fminf(2.75 * v8.f32[0], v13);
  v6[1] = fmaxf(2.75 * v8.f32[0], v13);
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_37EBC4A7_282B_4872_8239_5928DD731C09(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_37EBC4A7_282B_4872_8239_5928DD731C09()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_D2AEC9CB_1D29_49E2_A532_E856572297C7(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12, float *a13)
{
  __n128 v13;
  float v14;
  float v15;
  float v16;
  float v17;

  v13 = *a12;
  v14 = -a3;
  v15 = a3 * -0.6;
  v16 = (float)(a4 * 3.1416) / 180.0;
  v17 = vmuls_lane_f32(3.75, *(float32x2_t *)&a2, 1);
  *a10 = fminf(v14, v15);
  a10[1] = fmaxf(v14, v15);
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a11 = fminf(v16, 0.0);
  a11[1] = fmaxf(v16, 0.0);
  a5.n128_u32[1] = v13.n128_u32[1];
  a5.n128_u32[2] = v13.n128_u32[2];
  *a12 = a5;
  *a13 = fminf(3.15 * *(float *)&a2, v17);
  a13[1] = fmaxf(3.15 * *(float *)&a2, v17);
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_D2AEC9CB_1D29_49E2_A532_E856572297C7()
{
  _QWORD *arguments_buffer;
  float *v1;
  float32x2_t *v2;
  float *v3;
  float *v4;
  _DWORD *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  __int128 *v10;
  float *v11;
  float result;
  float32x2_t v13;
  __int128 v14;
  __int128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float32x2_t *)arguments_buffer[3];
  v3 = (float *)arguments_buffer[4];
  v4 = (float *)arguments_buffer[5];
  v5 = (_DWORD *)arguments_buffer[6];
  v6 = (float *)arguments_buffer[7];
  v7 = (float *)arguments_buffer[8];
  v8 = (float *)arguments_buffer[9];
  v9 = (float *)arguments_buffer[10];
  v10 = (__int128 *)arguments_buffer[11];
  v11 = (float *)arguments_buffer[12];
  result = *v1;
  v13 = *v2;
  LODWORD(v14) = *v5;
  v15 = *v10;
  LODWORD(v16) = HIDWORD(*(unint64_t *)v2);
  v17 = -*v3;
  v18 = *v3 * -0.6;
  v19 = fminf(v17, v18);
  v20 = fmaxf(v17, v18);
  v21 = (float)(*v4 * 3.1416) / 180.0;
  v22 = 3.15 * COERCE_FLOAT(*v2);
  v23 = vmuls_lane_f32(3.75, *v2, 1);
  *v8 = v19;
  v8[1] = v20;
  *v7 = fminf(v13.f32[0], v16);
  v7[1] = fmaxf(v13.f32[0], v16);
  *v9 = fminf(v21, 0.0);
  v9[1] = fmaxf(v21, 0.0);
  DWORD1(v14) = DWORD1(v15);
  DWORD2(v14) = DWORD2(v15);
  *v10 = v14;
  *v11 = fminf(v22, v23);
  v11[1] = fmaxf(v22, v23);
  *v6 = result;
  v6[1] = result;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_E145CED1_C91F_43D4_8BB5_9A3079110D37(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  __float2 v22;
  __int128 v23;
  __n128 result;
  __n128 v25;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v16.__cosval * a4;
  _Q2.n128_f32[1] = v16.__sinval * a4;
  v25 = _Q2;
  v22 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v23 = 0;
  *((__float2 *)&v23 + 1) = v22;
  result = v25;
  *a7 = v25;
  *a8 = v23;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_E145CED1_C91F_43D4_8BB5_9A3079110D37()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  __float2 v15;
  __int128 v16;
  __n128 result;
  __n128 v18;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  __asm { FMOV            V2.4S, #-30.0 }
  _Q2.n128_f32[0] = v6 * v9.__cosval;
  _Q2.n128_f32[1] = v6 * v9.__sinval;
  v18 = _Q2;
  v15 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v16 = 0;
  *((__float2 *)&v16 + 1) = v15;
  result = v18;
  *v1 = v18;
  *v2 = v16;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_01012C85_D688_4098_A134_D2ED8923AAEA(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12)
{
  __n128 v12;
  float v13;
  float v14;
  float v15;

  v12 = *a12;
  v13 = -a3;
  v14 = a3 * -0.5;
  v15 = (float)(a4 * 3.1416) / 180.0;
  *a10 = fminf(v13, v14);
  a10[1] = fmaxf(v13, v14);
  *a11 = fminf(v15, 0.0);
  a11[1] = fmaxf(v15, 0.0);
  a5.n128_u32[1] = v12.n128_u32[1];
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  a5.n128_u32[2] = v12.n128_u32[2];
  *a12 = a5;
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_01012C85_D688_4098_A134_D2ED8923AAEA()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  __int128 *v6;
  float result;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  float v11;
  float v12;
  float v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 56);
  v3 = *(float **)(arguments_buffer + 64);
  v4 = *(float **)(arguments_buffer + 72);
  v5 = *(float **)(arguments_buffer + 80);
  v6 = *(__int128 **)(arguments_buffer + 88);
  result = **(float **)(arguments_buffer + 16);
  v8 = **(_QWORD **)(arguments_buffer + 24);
  LODWORD(v9) = **(_DWORD **)(arguments_buffer + 48);
  v10 = *v6;
  v11 = -*v1;
  v12 = *v1 * -0.5;
  v13 = (float)(**(float **)(arguments_buffer + 40) * 3.1416) / 180.0;
  *v4 = fminf(v11, v12);
  v4[1] = fmaxf(v11, v12);
  *v5 = fminf(v13, 0.0);
  v5[1] = fmaxf(v13, 0.0);
  DWORD1(v9) = DWORD1(v10);
  *v3 = fminf(*(float *)&v8, *((float *)&v8 + 1));
  v3[1] = fmaxf(*(float *)&v8, *((float *)&v8 + 1));
  DWORD2(v9) = DWORD2(v10);
  *v6 = v9;
  *v2 = result;
  v2[1] = result;
  return result;
}

void Spawn_WeatherV134WatchBackground_graph_B624AB63_78C3_45FA_806A_826792EEA51E(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_B624AB63_78C3_45FA_806A_826792EEA51E()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_7B2FB560_DFA6_4B40_BFEF_6CFA9BEFF24F(__n128 a1, float a2, float a3, float a4, float a5, float a6, float a7, uint64_t a8, uint64_t a9, int a10, _DWORD *a11, __n128 *a12, _OWORD *a13)
{
  float v20;
  double v21;
  float v22;
  __float2 v23;
  __int128 v24;
  __n128 result;
  __n128 v26;

  v20 = (float)((float)(a3 * a4) * 0.04) + a2;
  if (a1.n128_f32[1] < v20)
    v20 = a1.n128_f32[1];
  a1.n128_f32[1] = v20;
  a1.n128_u32[2] = a12->n128_u32[2];
  v26 = a1;
  vfx_script_clock_time();
  *(float *)&v21 = v21;
  v22 = sinf(*(float *)&v21 * a5);
  v23 = __sincosf_stret((float)((float)((float)((float)(a7 + -90.0) + (float)(v22 * a6)) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v24 = 0;
  *((__float2 *)&v24 + 1) = v23;
  *a11 = a10;
  *a13 = v24;
  result = v26;
  *a12 = v26;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_7B2FB560_DFA6_4B40_BFEF_6CFA9BEFF24F()
{
  uint64_t arguments_buffer;
  __int128 *v1;
  uint64_t v2;
  _DWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  float v7;
  float v8;
  float v9;
  float v10;
  double v11;
  float v12;
  __float2 v13;
  __int128 v14;
  float result;
  __int128 v16;
  __int128 v17;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__int128 **)(arguments_buffer + 24);
  v3 = *(_DWORD **)(arguments_buffer + 80);
  v2 = *(_QWORD *)(arguments_buffer + 88);
  v4 = *(_OWORD **)(arguments_buffer + 96);
  v5 = **(_QWORD **)(arguments_buffer + 16);
  v6 = *v1;
  v7 = **(float **)(arguments_buffer + 56);
  v8 = **(float **)(arguments_buffer + 64);
  v9 = **(float **)(arguments_buffer + 72);
  v10 = **(float **)(arguments_buffer + 32)
      + (float)((float)(**(float **)(arguments_buffer + 40) * **(float **)(arguments_buffer + 48)) * 0.04);
  if (COERCE_FLOAT(HIDWORD(*(_QWORD *)v1)) < v10)
    LODWORD(v10) = HIDWORD(*(_QWORD *)v1);
  *((float *)&v6 + 1) = v10;
  DWORD2(v6) = *(_DWORD *)(v2 + 8);
  v17 = v6;
  vfx_script_clock_time();
  *(float *)&v11 = v11;
  v12 = sinf(v7 * *(float *)&v11);
  v13 = __sincosf_stret((float)((float)((float)((float)(v9 + -90.0) + (float)(v8 * v12)) * 3.1416) / 180.0) * 0.5);
  *(_QWORD *)&v14 = 0;
  *((__float2 *)&v14 + 1) = v13;
  *v3 = v5;
  *v4 = v14;
  result = 1.0;
  v16 = v17;
  HIDWORD(v16) = 1.0;
  *(_OWORD *)v2 = v16;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_F401466B_160B_4B3A_BC19_2717E4C18CD1(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  unint64_t v17;
  __float2 v18;
  __int128 v19;
  __n128 result;
  __n128 v21;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  *(float *)&v17 = v16.__cosval * a4;
  *((float *)&v17 + 1) = v16.__sinval * a4;
  v21 = (__n128)v17;
  v18 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v19 = 0;
  *((__float2 *)&v19 + 1) = v18;
  result = v21;
  *a7 = v21;
  *a8 = v19;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_F401466B_160B_4B3A_BC19_2717E4C18CD1()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  unint64_t v10;
  __float2 v11;
  __int128 v12;
  __n128 result;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  *(float *)&v10 = v6 * v9.__cosval;
  *((float *)&v10 + 1) = v6 * v9.__sinval;
  v14 = (__n128)v10;
  v11 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v12 = 0;
  *((__float2 *)&v12 + 1) = v11;
  result = v14;
  *v1 = v14;
  *v2 = v12;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_610A95BC_F7DB_41D2_B8A2_05B9E64029C8(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, float *a8, float *a9, float *a10, float *a11, __n128 *a12, float *a13)
{
  __n128 v13;
  float v14;
  float v15;
  float v16;
  float v17;

  v13 = *a12;
  v14 = -a3;
  v15 = a3 * -0.7;
  v16 = (float)(a4 * 3.1416) / 180.0;
  v17 = vmuls_lane_f32(4.25, *(float32x2_t *)&a2, 1);
  *a10 = fminf(v14, v15);
  a10[1] = fmaxf(v14, v15);
  *a9 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a9[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a11 = fminf(v16, 0.0);
  a11[1] = fmaxf(v16, 0.0);
  a5.n128_u32[1] = v13.n128_u32[1];
  a5.n128_u32[2] = v13.n128_u32[2];
  *a12 = a5;
  *a13 = fminf(3.75 * *(float *)&a2, v17);
  a13[1] = fmaxf(3.75 * *(float *)&a2, v17);
  *a8 = a1;
  a8[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_610A95BC_F7DB_41D2_B8A2_05B9E64029C8()
{
  _QWORD *arguments_buffer;
  float *v1;
  float32x2_t *v2;
  float *v3;
  float *v4;
  _DWORD *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  __int128 *v10;
  float *v11;
  float result;
  float32x2_t v13;
  __int128 v14;
  __int128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float32x2_t *)arguments_buffer[3];
  v3 = (float *)arguments_buffer[4];
  v4 = (float *)arguments_buffer[5];
  v5 = (_DWORD *)arguments_buffer[6];
  v6 = (float *)arguments_buffer[7];
  v7 = (float *)arguments_buffer[8];
  v8 = (float *)arguments_buffer[9];
  v9 = (float *)arguments_buffer[10];
  v10 = (__int128 *)arguments_buffer[11];
  v11 = (float *)arguments_buffer[12];
  result = *v1;
  v13 = *v2;
  LODWORD(v14) = *v5;
  v15 = *v10;
  LODWORD(v16) = HIDWORD(*(unint64_t *)v2);
  v17 = -*v3;
  v18 = *v3 * -0.7;
  v19 = fminf(v17, v18);
  v20 = fmaxf(v17, v18);
  v21 = (float)(*v4 * 3.1416) / 180.0;
  v22 = 3.75 * COERCE_FLOAT(*v2);
  v23 = vmuls_lane_f32(4.25, *v2, 1);
  *v8 = v19;
  v8[1] = v20;
  *v7 = fminf(v13.f32[0], v16);
  v7[1] = fmaxf(v13.f32[0], v16);
  *v9 = fminf(v21, 0.0);
  v9[1] = fmaxf(v21, 0.0);
  DWORD1(v14) = DWORD1(v15);
  DWORD2(v14) = DWORD2(v15);
  *v10 = v14;
  *v11 = fminf(v22, v23);
  v11[1] = fmaxf(v22, v23);
  *v6 = result;
  v6[1] = result;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_7A788056_8C3E_4A20_B453_920A88B9E678(float a1, float a2, float a3, uint64_t a4, uint64_t a5, __n128 *a6, _OWORD *a7)
{
  double v12;
  float v13;
  __float2 v14;
  __n128 v15;
  __float2 v16;
  __int128 v17;
  __n128 result;
  __n128 v19;

  vfx_script_clock_time();
  *(float *)&v12 = v12;
  v13 = (float)((float)((float)(sinf(*(float *)&v12 * a2) * a3) + a1) * 3.1416) / 180.0;
  v14 = __sincosf_stret(v13 + -1.571);
  v15.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v14.__sinval), LODWORD(v14.__cosval)), (float32x2_t)vdup_n_s32(0xC2C80000));
  v15.n128_u32[2] = -1036779520;
  v19 = v15;
  v16 = __sincosf_stret(v13 * 0.5);
  *(_QWORD *)&v17 = 0;
  *((__float2 *)&v17 + 1) = v16;
  result = v19;
  *a6 = v19;
  *a7 = v17;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_7A788056_8C3E_4A20_B453_920A88B9E678()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  double v6;
  float v7;
  __float2 v8;
  __n128 v9;
  __float2 v10;
  __int128 v11;
  __n128 result;
  __n128 v13;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 40);
  v2 = *(_OWORD **)(arguments_buffer + 48);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  vfx_script_clock_time();
  *(float *)&v6 = v6;
  v7 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v6))) * 3.1416) / 180.0;
  v8 = __sincosf_stret(v7 + -1.571);
  v9.n128_u64[0] = (unint64_t)vmul_f32((float32x2_t)__PAIR64__(LODWORD(v8.__sinval), LODWORD(v8.__cosval)), (float32x2_t)vdup_n_s32(0xC2C80000));
  v9.n128_u32[2] = -1036779520;
  v13 = v9;
  v10 = __sincosf_stret(v7 * 0.5);
  *(_QWORD *)&v11 = 0;
  *((__float2 *)&v11 + 1) = v10;
  result = v13;
  *v1 = v13;
  *v2 = v11;
  v1->n128_u32[3] = 1065353216;
  return result;
}

float Init_WeatherV134WatchBackground_graph_E29E5B3F_589B_468A_8EAB_0A38CB62197C(float result, double a2, float a3, double a4, uint64_t a5, uint64_t a6, float *a7, float *a8, float *a9, float *a10)
{
  float v10;
  float v11;
  float v12;
  float v13;

  v10 = -a3;
  v11 = a3 * -0.5;
  v12 = (float)(3.1416 * *(float *)&a4) / 180.0;
  v13 = vmuls_lane_f32(3.1416, *(float32x2_t *)&a4, 1) / 180.0;
  *a9 = fminf(v10, v11);
  a9[1] = fmaxf(v10, v11);
  *a8 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a8[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a10 = fminf(v12, v13);
  a10[1] = fmaxf(v12, v13);
  *a7 = result;
  a7[1] = result;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_E29E5B3F_589B_468A_8EAB_0A38CB62197C()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  float result;
  uint64_t v7;
  float32x2_t v8;
  float v9;
  float v10;
  float v11;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = *(float **)(arguments_buffer + 64);
  v5 = *(float **)(arguments_buffer + 72);
  result = **(float **)(arguments_buffer + 16);
  v7 = **(_QWORD **)(arguments_buffer + 24);
  v8 = **(float32x2_t **)(arguments_buffer + 40);
  v9 = -*v1;
  v10 = *v1 * -0.5;
  v11 = (float)(3.1416 * v8.f32[0]) / 180.0;
  v8.f32[0] = vmuls_lane_f32(3.1416, v8, 1) / 180.0;
  *v4 = fminf(v9, v10);
  v4[1] = fmaxf(v9, v10);
  *v3 = fminf(*(float *)&v7, *((float *)&v7 + 1));
  v3[1] = fmaxf(*(float *)&v7, *((float *)&v7 + 1));
  *v5 = fminf(v11, v8.f32[0]);
  v5[1] = fmaxf(v11, v8.f32[0]);
  *v2 = result;
  v2[1] = result;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_4A21BEFC_B863_4660_A09E_57CC55315B55(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  unint64_t v17;
  __float2 v18;
  __int128 v19;
  __n128 result;
  __n128 v21;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  *(float *)&v17 = v16.__cosval * a4;
  *((float *)&v17 + 1) = v16.__sinval * a4;
  v21 = (__n128)v17;
  v18 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v19 = 0;
  *((__float2 *)&v19 + 1) = v18;
  result = v21;
  *a7 = v21;
  *a8 = v19;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_4A21BEFC_B863_4660_A09E_57CC55315B55()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  unint64_t v10;
  __float2 v11;
  __int128 v12;
  __n128 result;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  *(float *)&v10 = v6 * v9.__cosval;
  *((float *)&v10 + 1) = v6 * v9.__sinval;
  v14 = (__n128)v10;
  v11 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v12 = 0;
  *((__float2 *)&v12 + 1) = v11;
  result = v14;
  *v1 = v14;
  *v2 = v12;
  v1->n128_u32[3] = 1065353216;
  return result;
}

float Init_WeatherV134WatchBackground_graph_7C519056_3151_4C7E_9ED5_5D396B48B1BE(double a1, float a2, __n128 a3, uint64_t a4, uint64_t a5, float *a6, float *a7, __n128 *a8)
{
  __n128 v8;
  float v9;
  float v10;
  float v11;
  float result;

  v8 = *a8;
  v9 = -a2;
  v10 = a2 * -0.5;
  *a7 = fminf(v9, v10);
  a7[1] = fmaxf(v9, v10);
  v11 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v11;
  a6[1] = result;
  a3.n128_u32[1] = v8.n128_u32[1];
  a3.n128_u32[2] = v8.n128_u32[2];
  *a8 = a3;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_7C519056_3151_4C7E_9ED5_5D396B48B1BE()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  float v8;
  float v9;
  float v10;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = *(float **)(arguments_buffer + 48);
  v4 = *(__int128 **)(arguments_buffer + 56);
  v5 = **(_QWORD **)(arguments_buffer + 16);
  LODWORD(v6) = **(_DWORD **)(arguments_buffer + 32);
  v7 = *v4;
  v8 = -*v1;
  v9 = *v1 * -0.5;
  *v3 = fminf(v8, v9);
  v3[1] = fmaxf(v8, v9);
  v10 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  result = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  *v2 = v10;
  v2[1] = result;
  DWORD1(v6) = DWORD1(v7);
  DWORD2(v6) = DWORD2(v7);
  *v4 = v6;
  return result;
}

uint64_t Main_WeatherV134WatchBackground_graph_40388143_9398_4EBF_A6B6_254EA87C9040(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4)
{
  uint64_t v5;
  simd_float4 v6;
  int8x16_t v7;
  int32x4_t v8;
  __n128 v9;
  uint64_t v10;
  simd_float4 v11;
  int8x16_t v12;
  int32x4_t v13;
  __n128 v14;
  uint64_t v15;
  simd_float4 v16;
  int8x16_t v17;
  int32x4_t v18;
  __n128 v19;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v28;
  int v29;
  _OWORD v30[3];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v30[0] = xmmword_1B000C960;
  v30[1] = xmmword_1B000C970;
  v30[2] = xmmword_1B000C980;
  v28 = 0x3EFB613100000000;
  v29 = 1065353216;
  v5 = MEMORY[0x1B5E03E58](a1, v30, &v28, 3, 1);
  v25 = (float32x4_t)vdupq_n_s32(0x3D6147AEu);
  v24 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
  v6 = (simd_float4)vdivq_f32(vaddq_f32(a2, v25), v24);
  v6.i32[3] = 0;
  v7 = (int8x16_t)_simd_pow_f4(v6, (simd_float4)xmmword_1B000C990);
  v23 = (float32x4_t)vdupq_n_s32(0x414EB852u);
  v22 = (float32x4_t)vdupq_n_s32(0x3D25AEE6u);
  v8 = vcgeq_f32(v22, a2);
  v8.i32[3] = 0;
  v9 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v8), (int8x16_t)vdivq_f32(a2, v23), v7);
  v9.n128_u32[3] = a2.u32[3];
  v10 = MEMORY[0x1B5E03E64](a1, v5, 0, v9);
  v11 = (simd_float4)vdivq_f32(vaddq_f32(a3, v25), v24);
  v11.i32[3] = 0;
  v12 = (int8x16_t)_simd_pow_f4(v11, (simd_float4)xmmword_1B000C990);
  v13 = vcgeq_f32(v22, a3);
  v13.i32[3] = 0;
  v14 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v13), (int8x16_t)vdivq_f32(a3, v23), v12);
  v14.n128_u32[3] = a3.u32[3];
  v15 = MEMORY[0x1B5E03E64](a1, v10, 1, v14);
  v16 = (simd_float4)vdivq_f32(vaddq_f32(a4, v25), v24);
  v16.i32[3] = 0;
  v17 = (int8x16_t)_simd_pow_f4(v16, (simd_float4)xmmword_1B000C990);
  v18 = vcgeq_f32(v22, a4);
  v18.i32[3] = 0;
  v19 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v18), (int8x16_t)vdivq_f32(a4, v23), v17);
  v19.n128_u32[3] = a4.u32[3];
  MEMORY[0x1B5E03E64](a1, v15, 2, v19);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_40388143_9398_4EBF_A6B6_254EA87C9040(uint64_t a1)
{
  _QWORD *arguments_buffer;
  uint64_t v3;
  simd_float4 v4;
  int8x16_t v5;
  int32x4_t v6;
  __n128 v7;
  uint64_t v8;
  simd_float4 v9;
  int8x16_t v10;
  int32x4_t v11;
  __n128 v12;
  uint64_t v13;
  simd_float4 v14;
  int8x16_t v15;
  int32x4_t v16;
  __n128 v17;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v26;
  int v27;
  _OWORD v28[3];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v19 = *(float32x4_t *)arguments_buffer[2];
  v24 = *(float32x4_t *)arguments_buffer[3];
  v25 = *(float32x4_t *)arguments_buffer[4];
  v28[0] = xmmword_1B000C960;
  v28[1] = xmmword_1B000C970;
  v28[2] = xmmword_1B000C980;
  v26 = 0x3EFB613100000000;
  v27 = 1065353216;
  v3 = MEMORY[0x1B5E03E58](a1, v28, &v26, 3, 1);
  v23 = (float32x4_t)vdupq_n_s32(0x3D6147AEu);
  v22 = (float32x4_t)vdupq_n_s32(0x3F870A3Du);
  v4 = (simd_float4)vdivq_f32(vaddq_f32(v19, v23), v22);
  v4.i32[3] = 0;
  v5 = (int8x16_t)_simd_pow_f4(v4, (simd_float4)xmmword_1B000C990);
  v21 = (float32x4_t)vdupq_n_s32(0x414EB852u);
  v20 = (float32x4_t)vdupq_n_s32(0x3D25AEE6u);
  v6 = vcgeq_f32(v20, v19);
  v6.i32[3] = 0;
  v7 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v6), (int8x16_t)vdivq_f32(v19, v21), v5);
  v7.n128_u32[3] = v19.u32[3];
  v8 = MEMORY[0x1B5E03E64](a1, v3, 0, v7);
  v9 = (simd_float4)vdivq_f32(vaddq_f32(v24, v23), v22);
  v9.i32[3] = 0;
  v10 = (int8x16_t)_simd_pow_f4(v9, (simd_float4)xmmword_1B000C990);
  v11 = vcgeq_f32(v20, v24);
  v11.i32[3] = 0;
  v12 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v11), (int8x16_t)vdivq_f32(v24, v21), v10);
  v12.n128_u32[3] = v24.u32[3];
  v13 = MEMORY[0x1B5E03E64](a1, v8, 1, v12);
  v14 = (simd_float4)vdivq_f32(vaddq_f32(v25, v23), v22);
  v14.i32[3] = 0;
  v15 = (int8x16_t)_simd_pow_f4(v14, (simd_float4)xmmword_1B000C990);
  v16 = vcgeq_f32(v20, v25);
  v16.i32[3] = 0;
  v17 = (__n128)vbslq_s8((int8x16_t)vcltzq_s32(v16), (int8x16_t)vdivq_f32(v25, v21), v15);
  v17.n128_u32[3] = v25.u32[3];
  MEMORY[0x1B5E03E64](a1, v13, 2, v17);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t Main_WeatherV134WatchBackground_graph_395EEFF5_11E0_4182_B504_E46BDD1CA4D6(uint64_t a1, __n128 a2, __n128 a3)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  __asm { FMOV            V0.4S, #1.0 }
  v15[0] = _Q0;
  v15[1] = xmmword_1B000C980;
  v14 = 0x3F80000000000000;
  v9 = MEMORY[0x1B5E03E58](a1, v15, &v14, 2, 1);
  v10 = MEMORY[0x1B5E03E64](a1, v9, 0, a2);
  MEMORY[0x1B5E03E64](a1, v10, 1, a3);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_395EEFF5_11E0_4182_B504_E46BDD1CA4D6(uint64_t a1)
{
  uint64_t arguments_buffer;
  uint64_t v8;
  uint64_t v9;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  arguments_buffer = vfx_script_get_arguments_buffer();
  v11 = *(__n128 *)*(_QWORD *)(arguments_buffer + 16);
  v12 = *(__n128 *)*(_QWORD *)(arguments_buffer + 24);
  __asm { FMOV            V0.4S, #1.0 }
  v14[0] = _Q0;
  v14[1] = xmmword_1B000C980;
  v13 = 0x3F80000000000000;
  v8 = MEMORY[0x1B5E03E58](a1, v14, &v13, 2, 1);
  v9 = MEMORY[0x1B5E03E64](a1, v8, 0, v11);
  MEMORY[0x1B5E03E64](a1, v9, 1, v12);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

float Init_WeatherV134WatchBackground_graph_5A26064F_C824_40A0_AE9B_1476BA8A40DC(double a1, double a2, double a3, uint64_t a4, uint64_t a5, float *a6, float *a7, float *a8)
{
  float result;

  *a6 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  a6[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a7 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a7[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  result = fminf(*(float *)&a3, *((float *)&a3 + 1));
  *a8 = result;
  a8[1] = fmaxf(*(float *)&a3, *((float *)&a3 + 1));
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_5A26064F_C824_40A0_AE9B_1476BA8A40DC()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = **(_QWORD **)(arguments_buffer + 16);
  v5 = **(_QWORD **)(arguments_buffer + 24);
  v6 = **(_QWORD **)(arguments_buffer + 32);
  *v1 = fminf(*(float *)&v4, *((float *)&v4 + 1));
  v1[1] = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  *v2 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  v2[1] = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  result = fminf(*(float *)&v6, *((float *)&v6 + 1));
  *v3 = result;
  v3[1] = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  return result;
}

void Update_WeatherV134WatchBackground_graph_7C89FAAA_DFBC_45D8_A8BA_B3C204AC63AD(float a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  __int128 v4;

  v4 = *a4;
  *((float *)&v4 + 1) = a1;
  DWORD2(v4) = *((_QWORD *)a4 + 1);
  *a4 = v4;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_7C89FAAA_DFBC_45D8_A8BA_B3C204AC63AD()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  __n128 result;
  __n128 v3;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 24);
  result = *v1;
  v3 = *v1;
  v3.n128_u32[1] = **(_DWORD **)(arguments_buffer + 16);
  v3.n128_u32[2] = v1->n128_u64[1];
  *v1 = v3;
  return result;
}

float Main_WeatherV134WatchBackground_graph_941FF1B9_4780_435E_AAC8_CA56C9D3B7D4(float a1, float a2, float a3, uint64_t a4, int a5, int32x4_t *a6, _OWORD *a7)
{
  int32x2_t v13;
  __int128 v14;
  double v15;
  float v16;
  unsigned int v17;
  unsigned int v18;
  uint32x2_t v19;
  float32x2_t v25;
  float result;

  vfx_script_clock_time();
  *(float *)&v15 = v15;
  v16 = roundf((float)(*(float *)&v15 * 0.5) + 0.5);
  v17 = fmaxf(v16, 0.0);
  v18 = 277803737
      * (((747796405 * (v17 + a5) - 2112530986) >> (((747796405 * (v17 + a5) - 2112530986) >> 28) + 4)) ^ (747796405 * (v17 + a5) - 2112530986));
  if ((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0) >= a2)
    *(float *)v13.i32 = 0.0;
  else
    *(float *)v13.i32 = a1;
  *(int32x2_t *)&v14 = vmla_s32((int32x2_t)0x545A1CDE5FC8EB1CLL, (int32x2_t)__PAIR64__(fmaxf((float)(v16 * 174.0) + 60.0, 0.0) + a5, fmaxf(v16 * 50.0, 0.0) + a5), vdup_n_s32(0x2C9277B5u));
  v19 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32(*(uint32x2_t *)&v14, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32(*(uint32x2_t *)&v14, 0x1CuLL))), *(int8x8_t *)&v14), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V1.2S, #1.0 }
  v25 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v19, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v19, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D1);
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)&v14 = vmla_f32((float32x2_t)0x41200000C1A00000, (float32x2_t)0x420C000042200000, vadd_f32(v25, _D1));
  result = a3 + -132.0;
  *a6 = vdupq_lane_s32(v13, 0);
  *((float *)&v14 + 2) = a3 + -132.0;
  *a7 = v14;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_941FF1B9_4780_435E_AAC8_CA56C9D3B7D4()
{
  uint64_t arguments_buffer;
  _OWORD *v1;
  int32x4_t *v2;
  int v3;
  float v4;
  float v5;
  float v6;
  int32x2_t v7;
  double v8;
  float v9;
  unsigned int v10;
  unsigned int v11;
  int8x8_t v12;
  uint32x2_t v13;
  float32x2_t v19;
  __int128 v21;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v2 = *(int32x4_t **)(arguments_buffer + 40);
  v1 = *(_OWORD **)(arguments_buffer + 48);
  v3 = **(_DWORD **)(arguments_buffer + 8);
  v4 = **(float **)(arguments_buffer + 16);
  v5 = **(float **)(arguments_buffer + 24);
  v6 = **(float **)(arguments_buffer + 32);
  vfx_script_clock_time();
  *(float *)&v8 = v8;
  v9 = roundf((float)(*(float *)&v8 * 0.5) + 0.5);
  v10 = fmaxf(v9, 0.0);
  v11 = 277803737
      * (((747796405 * (v10 + v3) - 2112530986) >> (((747796405 * (v10 + v3) - 2112530986) >> 28) + 4)) ^ (747796405 * (v10 + v3) - 2112530986));
  if ((float)(COERCE_FLOAT((v11 >> 31) ^ (v11 >> 9) | 0x3F800000) + -1.0) >= v5)
    *(float *)v7.i32 = 0.0;
  else
    *(float *)v7.i32 = v4;
  v12 = (int8x8_t)vmla_s32((int32x2_t)0x545A1CDE5FC8EB1CLL, (int32x2_t)__PAIR64__(fmaxf((float)(v9 * 174.0) + 60.0, 0.0) + v3, fmaxf(v9 * 50.0, 0.0) + v3), vdup_n_s32(0x2C9277B5u));
  v13 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32((uint32x2_t)v12, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32((uint32x2_t)v12, 0x1CuLL))), v12), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V1.2S, #1.0 }
  v19 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v13, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v13, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D1);
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)&v21 = vmla_f32((float32x2_t)0x41200000C1A00000, (float32x2_t)0x420C000042200000, vadd_f32(v19, _D1));
  result = v6 + -132.0;
  *v2 = vdupq_lane_s32(v7, 0);
  *((float *)&v21 + 2) = v6 + -132.0;
  HIDWORD(v21) = 1.0;
  *v1 = v21;
  return result;
}

void Spawn_WeatherV134WatchBackground_graph_87A7D76A_B699_44CE_B99D_FC9F8DE20057(const void *a1, unsigned int a2, unsigned int a3, unint64_t *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_87A7D76A_B699_44CE_B99D_FC9F8DE20057()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_QWORD **)(result + 24) = **(unsigned __int8 **)(result + 16);
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_0167E9BA_4838_4D5C_8B4F_40DE5B39EDEB(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, __n128 *a7, _OWORD *a8)
{
  double v14;
  float v15;
  __float2 v16;
  unint64_t v17;
  __float2 v18;
  __int128 v19;
  __n128 result;
  __n128 v21;

  vfx_script_clock_time();
  *(float *)&v14 = v14;
  v15 = (float)((float)((float)(sinf(*(float *)&v14 * a2) * a3) + a1) * 3.1416) / 180.0;
  v16 = __sincosf_stret(v15 + -1.571);
  *(float *)&v17 = v16.__cosval * a4;
  *((float *)&v17 + 1) = v16.__sinval * a4;
  v21 = (__n128)v17;
  v18 = __sincosf_stret(v15 * 0.5);
  *(_QWORD *)&v19 = 0;
  *((__float2 *)&v19 + 1) = v18;
  result = v21;
  *a7 = v21;
  *a8 = v19;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_0167E9BA_4838_4D5C_8B4F_40DE5B39EDEB()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  _OWORD *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  float v8;
  __float2 v9;
  unint64_t v10;
  __float2 v11;
  __int128 v12;
  __n128 result;
  __n128 v14;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 48);
  v2 = *(_OWORD **)(arguments_buffer + 56);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  v5 = **(float **)(arguments_buffer + 32);
  v6 = **(float **)(arguments_buffer + 40);
  vfx_script_clock_time();
  *(float *)&v7 = v7;
  v8 = (float)((float)(v3 + (float)(v5 * sinf(v4 * *(float *)&v7))) * 3.1416) / 180.0;
  v9 = __sincosf_stret(v8 + -1.571);
  *(float *)&v10 = v6 * v9.__cosval;
  *((float *)&v10 + 1) = v6 * v9.__sinval;
  v14 = (__n128)v10;
  v11 = __sincosf_stret(v8 * 0.5);
  *(_QWORD *)&v12 = 0;
  *((__float2 *)&v12 + 1) = v11;
  result = v14;
  *v1 = v14;
  *v2 = v12;
  v1->n128_u32[3] = 1065353216;
  return result;
}

void Init_WeatherV134WatchBackground_graph_8FEAC260_1485_4BC9_AB73_4B5D669E6F57(float a1, double a2, float a3, float a4, __n128 a5, uint64_t a6, uint64_t a7, int a8, float *a9, float *a10, float *a11, float *a12, __n128 *a13, float *a14)
{
  float v14;
  __n128 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  unsigned int v21;
  float32x2_t v27;

  v14 = *a12;
  v15 = *a13;
  v16 = -a3;
  v17 = a3 * -0.5;
  v18 = fminf(v16, v17);
  v19 = fmaxf(v16, v17);
  v20 = (float)(a4 * 3.1416) / 180.0;
  if (a8)
    v21 = -1;
  else
    v21 = 0;
  __asm { FMOV            V19.2S, #1.0 }
  v27 = vmul_f32((float32x2_t)vbsl_s8((int8x8_t)vdup_n_s32(v21), (int8x8_t)0x409E66664081999ALL, _D19), *(float32x2_t *)&a2);
  *a11 = v18;
  a11[1] = v19;
  *a10 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a10[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  *a12 = fminf(v14, v20);
  a12[1] = fmaxf(v14, v20);
  a5.n128_u32[1] = v15.n128_u32[1];
  a5.n128_u32[2] = v15.n128_u32[2];
  *a13 = a5;
  *a14 = fminf(v27.f32[0], v27.f32[1]);
  a14[1] = fmaxf(v27.f32[0], v27.f32[1]);
  *a9 = a1;
  a9[1] = a1;
}

float __vfx_script_WeatherV134WatchBackground_graph_8FEAC260_1485_4BC9_AB73_4B5D669E6F57()
{
  _QWORD *arguments_buffer;
  int8x8_t v1;
  int *v2;
  float32x2_t *v3;
  float *v4;
  float *v5;
  _DWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  float *v9;
  float *v10;
  float *v11;
  uint64_t v12;
  __int128 *v13;
  int v14;
  float32x2_t v15;
  __int128 v16;
  int8x8_t v17;
  float32x2_t v23;
  float v24;
  __int128 v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float32x2_t v30;
  float result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1.i32[0] = 0;
  v2 = (int *)arguments_buffer[2];
  v3 = (float32x2_t *)arguments_buffer[3];
  v4 = (float *)arguments_buffer[4];
  v5 = (float *)arguments_buffer[5];
  v6 = (_DWORD *)arguments_buffer[6];
  v7 = (_BYTE *)arguments_buffer[7];
  v8 = (_DWORD *)arguments_buffer[8];
  v9 = (float *)arguments_buffer[9];
  v10 = (float *)arguments_buffer[10];
  v11 = (float *)arguments_buffer[11];
  v13 = (__int128 *)arguments_buffer[12];
  v12 = arguments_buffer[13];
  v14 = *v2;
  v15 = *v3;
  LOBYTE(v16) = *v7;
  v17 = vdup_lane_s8(vceq_s8(*(int8x8_t *)&v16, v1), 0);
  LODWORD(v16) = *v6;
  __asm { FMOV            V7.2S, #1.0 }
  v23 = (float32x2_t)vbsl_s8(v17, _D7, (int8x8_t)0x409E66664081999ALL);
  v24 = *v11;
  v25 = *v13;
  LODWORD(v26) = HIDWORD(*(unint64_t *)v3);
  v27 = -*v4;
  v28 = *v4 * -0.5;
  v29 = (float)(*v5 * 3.1416) / 180.0;
  v30 = vmul_f32(*v3, v23);
  *v10 = fminf(v27, v28);
  v10[1] = fmaxf(v27, v28);
  *v9 = fminf(v15.f32[0], v26);
  v9[1] = fmaxf(v15.f32[0], v26);
  *v11 = fminf(v24, v29);
  v11[1] = fmaxf(v24, v29);
  DWORD1(v16) = DWORD1(v25);
  DWORD2(v16) = DWORD2(v25);
  *v13 = v16;
  v15.f32[0] = fminf(v30.f32[0], v30.f32[1]);
  result = fmaxf(v30.f32[0], v30.f32[1]);
  *(_DWORD *)v12 = v15.i32[0];
  *(float *)(v12 + 4) = result;
  *v8 = v14;
  v8[1] = v14;
  return result;
}

uint64_t Main_WeatherV134WatchBackground_graph_CB5AC812_1C9F_4734_A8CB_B24C5B43DE5F(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_CB5AC812_1C9F_4734_A8CB_B24C5B43DE5F()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

float Init_WeatherV134WatchBackground_graph_DB1959F1_8B79_4413_8B2E_F6402DC141F2(double a1, double a2, uint64_t a3, uint64_t a4, float *a5, float *a6)
{
  float result;

  *a5 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  a5[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  result = fminf(*(float *)&a2, *((float *)&a2 + 1));
  *a6 = result;
  a6[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_DB1959F1_8B79_4413_8B2E_F6402DC141F2()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  uint64_t v3;
  uint64_t v4;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = **(_QWORD **)(arguments_buffer + 16);
  v4 = **(_QWORD **)(arguments_buffer + 24);
  *v1 = fminf(*(float *)&v3, *((float *)&v3 + 1));
  v1[1] = fmaxf(*(float *)&v3, *((float *)&v3 + 1));
  result = fminf(*(float *)&v4, *((float *)&v4 + 1));
  *v2 = result;
  v2[1] = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  return result;
}

float Main_WeatherV134WatchBackground_graph_687C644E_376F_4EAE_98D7_689A82BB6657(float32x4_t a1, float32x4_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  float32x4_t v6;
  simd_float4 v7;
  float v10;
  float v11;
  __int128 v12;
  float result;
  simd_float4 x;
  simd_float4 v23;

  *(float32x2_t *)a2.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)a1.f32, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  a2.f32[2] = vmuls_lane_f32(3.1416, a1, 2) / 180.0;
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  v7 = (simd_float4)vmulq_f32(a2, v6);
  v7.i32[3] = 0;
  x = v7;
  v23 = _simd_cos_f4(v7);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v23;
  v10 = vmuls_lane_f32(v23.f32[1], (float32x4_t)v23, 2);
  v11 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v12 = vmlas_n_f32(-(float)(v23.f32[0] * v11), v10, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v23.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v12) = _S5;
  result = vmlas_n_f32(v11 * _Q0.f32[0], v10, v23.f32[0]);
  *((_QWORD *)&v12 + 1) = __PAIR64__(LODWORD(result), _S6);
  *a5 = v12;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_687C644E_376F_4EAE_98D7_689A82BB6657()
{
  uint64_t arguments_buffer;
  float32x2_t *v1;
  _OWORD *v2;
  float32x4_t v3;
  float32x4_t v4;
  simd_float4 v5;
  float v8;
  float v9;
  __int128 v10;
  float result;
  simd_float4 x;
  simd_float4 v21;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x2_t **)(arguments_buffer + 16);
  v2 = *(_OWORD **)(arguments_buffer + 24);
  *(float32x2_t *)v3.f32 = vdiv_f32(vmul_f32(*v1, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  v3.f32[2] = (float)(v1[1].f32[0] * 3.1416) / 180.0;
  v4.i64[0] = 0x3F0000003F000000;
  v4.i64[1] = 0x3F0000003F000000;
  v5 = (simd_float4)vmulq_f32(v3, v4);
  v5.i32[3] = 0;
  x = v5;
  v21 = _simd_cos_f4(v5);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v21;
  v8 = vmuls_lane_f32(v21.f32[1], (float32x4_t)v21, 2);
  v9 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v10 = vmlas_n_f32(-(float)(v21.f32[0] * v9), v8, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v21.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v10) = _S5;
  result = vmlas_n_f32(v9 * _Q0.f32[0], v8, v21.f32[0]);
  *((_QWORD *)&v10 + 1) = __PAIR64__(LODWORD(result), _S6);
  *v2 = v10;
  return result;
}

float Main_WeatherV134WatchBackground_graph_9DF72E75_E6EE_4805_B79B_5878A338CFD4(float32x4_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  float v5;
  float32x4_t v6;
  simd_float4 v7;
  float v10;
  float v11;
  __int128 v12;
  float result;
  simd_float4 x;
  simd_float4 v23;

  v5 = vmuls_lane_f32(3.1416, a1, 2);
  a1.f32[0] = a1.f32[0] + 180.0;
  *(float32x2_t *)a1.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)a1.f32, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  a1.f32[2] = v5 / 180.0;
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  v7 = (simd_float4)vmulq_f32(a1, v6);
  v7.i32[3] = 0;
  x = v7;
  v23 = _simd_cos_f4(v7);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v23;
  v10 = vmuls_lane_f32(v23.f32[1], (float32x4_t)v23, 2);
  v11 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v12 = vmlas_n_f32(-(float)(v23.f32[0] * v11), v10, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v23.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v12) = _S5;
  result = vmlas_n_f32(v11 * _Q0.f32[0], v10, v23.f32[0]);
  *((_QWORD *)&v12 + 1) = __PAIR64__(LODWORD(result), _S6);
  *a4 = v12;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_9DF72E75_E6EE_4805_B79B_5878A338CFD4()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  _OWORD *v2;
  float32x2_t v3;
  float32x4_t v4;
  float32x4_t v5;
  simd_float4 v6;
  float v9;
  float v10;
  __int128 v11;
  float result;
  simd_float4 x;
  simd_float4 v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 16);
  v2 = *(_OWORD **)(arguments_buffer + 24);
  v3.f32[0] = *(float *)v1 + 180.0;
  v3.i32[1] = *(_DWORD *)(v1 + 4);
  *(float32x2_t *)v4.f32 = vdiv_f32(vmul_f32(v3, (float32x2_t)vdup_n_s32(0x40490FDBu)), (float32x2_t)vdup_n_s32(0x43340000u));
  v4.f32[2] = (float)(*(float *)(v1 + 8) * 3.1416) / 180.0;
  v5.i64[0] = 0x3F0000003F000000;
  v5.i64[1] = 0x3F0000003F000000;
  v6 = (simd_float4)vmulq_f32(v4, v5);
  v6.i32[3] = 0;
  x = v6;
  v22 = _simd_cos_f4(v6);
  _Q0 = (float32x4_t)_simd_sin_f4(x);
  _Q7 = v22;
  v9 = vmuls_lane_f32(v22.f32[1], (float32x4_t)v22, 2);
  v10 = vmuls_lane_f32(_Q0.f32[1], _Q0, 2);
  *(float *)&v11 = vmlas_n_f32(-(float)(v22.f32[0] * v10), v9, _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v22.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  DWORD1(v11) = _S5;
  result = vmlas_n_f32(v10 * _Q0.f32[0], v9, v22.f32[0]);
  *((_QWORD *)&v11 + 1) = __PAIR64__(LODWORD(result), _S6);
  *v2 = v11;
  return result;
}

__n128 Main_WeatherV134WatchBackground_graph_621A92AA_88DA_4EE5_B1B2_088B3DBE5F01(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, uint64_t a5, uint64_t a6, __int128 *a7, float32x4_t *a8)
{
  float32x4_t v8;
  __int128 v14;
  float32x4_t v15;
  __n128 result;

  v8 = vmlaq_f32(a4, (float32x4_t)0, a3);
  __asm { FMOV            V2.4S, #-1.0 }
  v15 = vaddq_f32(a1, vmlaq_f32(v8, _Q2, a2));
  _Q2.f32[0] = vmuls_lane_f32(100.0, *(float32x2_t *)v15.f32, 1);
  v15.f32[0] = 100.0 * v15.f32[0];
  v14 = *a7;
  *((float *)&v14 + 1) = _Q2.f32[0] - (float)(_Q2.f32[0] * 0.2);
  DWORD2(v14) = *((_QWORD *)a7 + 1);
  v15.f32[1] = _Q2.f32[0] * 0.2;
  v15.i32[2] = a8->i32[2];
  *a7 = v14;
  *a8 = v15;
  result.n128_u64[0] = v15.i64[0];
  result.n128_u32[2] = v15.u32[2];
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_621A92AA_88DA_4EE5_B1B2_088B3DBE5F01()
{
  uint64_t arguments_buffer;
  __int128 *v1;
  float32x4_t *v2;
  __int128 v8;
  float32x4_t v9;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__int128 **)(arguments_buffer + 24);
  v2 = *(float32x4_t **)(arguments_buffer + 32);
  __asm { FMOV            V2.4S, #-1.0 }
  v9 = vaddq_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), vmlaq_f32(vmlaq_f32(*(float32x4_t *)(*(_QWORD *)(arguments_buffer + 16) + 48), (float32x4_t)0, *(float32x4_t *)(*(_QWORD *)(arguments_buffer + 16) + 32)), _Q2, *(float32x4_t *)(*(_QWORD *)(arguments_buffer + 16) + 16)));
  _Q2.f32[0] = vmuls_lane_f32(100.0, *(float32x2_t *)v9.f32, 1);
  v8 = *v1;
  *((float *)&v8 + 1) = _Q2.f32[0] - (float)(_Q2.f32[0] * 0.2);
  v9.f32[0] = 100.0 * v9.f32[0];
  DWORD2(v8) = *((_QWORD *)v1 + 1);
  v9.f32[1] = _Q2.f32[0] * 0.2;
  v9.i32[2] = v2->i32[2];
  *v1 = v8;
  *v2 = v9;
  *((_DWORD *)v1 + 3) = 1065353216;
  result.n128_u64[0] = v9.i64[0];
  result.n128_u32[2] = v9.u32[2];
  return result;
}

uint64_t Main_WeatherV134WatchBackground_graph_00A51410_D2B1_494D_9F29_52B4D396C7E8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_00A51410_D2B1_494D_9F29_52B4D396C7E8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_EA307E77_C728_4B56_A6DF_D73E8D57285F(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_EA307E77_C728_4B56_A6DF_D73E8D57285F()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_DB80C1B9_AD48_4244_B71C_ED947CFD1174(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_DB80C1B9_AD48_4244_B71C_ED947CFD1174()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_B0139558_B86A_4397_B738_EFFE6203E6A8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_B0139558_B86A_4397_B738_EFFE6203E6A8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_55C62DCE_2F63_4B8B_A8E8_FB5493A4C3B9(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_55C62DCE_2F63_4B8B_A8E8_FB5493A4C3B9()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_E01D4620_1A13_45B2_A31C_EBA3722279A3(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_E01D4620_1A13_45B2_A31C_EBA3722279A3()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_04693236_2D77_43A6_977D_5DF067824F4A(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_04693236_2D77_43A6_977D_5DF067824F4A()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_BC623109_4F00_41E5_967B_C001A7E3E03B(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_BC623109_4F00_41E5_967B_C001A7E3E03B()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_495BDE00_5C52_489A_8BB4_E76795A1C394(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_495BDE00_5C52_489A_8BB4_E76795A1C394()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_F6BDEA3C_7D0A_4780_8037_69CA0F8582BA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_F6BDEA3C_7D0A_4780_8037_69CA0F8582BA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_A8E3F90B_08E2_4F9C_841A_E02EF1A32907(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_A8E3F90B_08E2_4F9C_841A_E02EF1A32907()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_FD9E2E5B_5D71_4CAC_A303_A36D631A4AC7(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_FD9E2E5B_5D71_4CAC_A303_A36D631A4AC7()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_EC0574CC_6183_482F_B498_DF3DC193C7A1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_EC0574CC_6183_482F_B498_DF3DC193C7A1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_7A89B80D_A08D_4967_B879_540D98734DF8(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_7A89B80D_A08D_4967_B879_540D98734DF8()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_158D6529_921F_4BBB_8720_0AFB7FF3B70E(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_158D6529_921F_4BBB_8720_0AFB7FF3B70E()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_CC168C49_D800_49CD_9AC9_6B843D77D568(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_CC168C49_D800_49CD_9AC9_6B843D77D568()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_05F20F85_492E_4F48_87F0_254F588B4DC1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_05F20F85_492E_4F48_87F0_254F588B4DC1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_D08B04FC_1D84_4BE6_A2D1_337BEE86C5CA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_D08B04FC_1D84_4BE6_A2D1_337BEE86C5CA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_07B9FA67_7320_4523_A28C_7A4646C4C6BE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_07B9FA67_7320_4523_A28C_7A4646C4C6BE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_3E3EDD61_1BFF_4E10_A68A_A7931CA58E2B(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_3E3EDD61_1BFF_4E10_A68A_A7931CA58E2B()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_AA581CF7_295B_4838_8E2B_F2739B549950(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_AA581CF7_295B_4838_8E2B_F2739B549950()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_CE6E45A5_428C_496D_9545_8933DB5B957D(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_CE6E45A5_428C_496D_9545_8933DB5B957D()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_DA88E5DB_DBE7_4911_BF16_74818B5138EA(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_DA88E5DB_DBE7_4911_BF16_74818B5138EA()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_D4BCF11D_2557_4D18_8633_A912D38DB5F9(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_D4BCF11D_2557_4D18_8633_A912D38DB5F9()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_490BE8EB_F0B7_45E0_93F0_D7C4413C0601(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_490BE8EB_F0B7_45E0_93F0_D7C4413C0601()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_422412ED_C7A7_469C_928F_F1853945C9A4(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_422412ED_C7A7_469C_928F_F1853945C9A4()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_B5359EB0_CE3F_458E_98BA_A36AEBE94569(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_B5359EB0_CE3F_458E_98BA_A36AEBE94569()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_E6C55C1B_08D0_414E_BACA_1363CD547A80(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_E6C55C1B_08D0_414E_BACA_1363CD547A80()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_A2C3073A_7A45_461C_9DE7_A0BDC31DC5FE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_A2C3073A_7A45_461C_9DE7_A0BDC31DC5FE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_4AA4C185_DF16_4FEC_9AD4_57C5221DD760(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_4AA4C185_DF16_4FEC_9AD4_57C5221DD760()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_1ADCC471_5CA6_4CB3_A866_ACCE00F26AF5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_1ADCC471_5CA6_4CB3_A866_ACCE00F26AF5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_1DB3FB44_EBDD_4298_A446_136FB449F912(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_1DB3FB44_EBDD_4298_A446_136FB449F912()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_237BB3A9_4675_48C7_AE1B_E2019186502C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_237BB3A9_4675_48C7_AE1B_E2019186502C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_D10F5D93_7C09_43AD_84BD_C7EDBA820252(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_D10F5D93_7C09_43AD_84BD_C7EDBA820252()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_84D517BB_14D9_4232_8229_F315FA1F11D5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_84D517BB_14D9_4232_8229_F315FA1F11D5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_7ABAAD22_1C34_4501_A431_E291E04F2BC1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_7ABAAD22_1C34_4501_A431_E291E04F2BC1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_1B72969F_F7B1_4F8D_BC66_449B4D08ACE5(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_1B72969F_F7B1_4F8D_BC66_449B4D08ACE5()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_24AD785E_177E_46F7_B202_8BB4F8A789A1(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_24AD785E_177E_46F7_B202_8BB4F8A789A1()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_A52A8712_FEF2_41A7_A86F_531E7ACACDEC(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_A52A8712_FEF2_41A7_A86F_531E7ACACDEC()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_6D779CD9_65A4_4241_B1D7_980B77D69516(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_6D779CD9_65A4_4241_B1D7_980B77D69516()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_0E934706_71C4_4832_ACD8_BEAC35EAAF52(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_0E934706_71C4_4832_ACD8_BEAC35EAAF52()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_EE2B7DD4_201A_43FC_80D8_7801EDE59CCE(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_EE2B7DD4_201A_43FC_80D8_7801EDE59CCE()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_D88B36CD_282F_4198_80EA_ADB18CC1B044(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_D88B36CD_282F_4198_80EA_ADB18CC1B044()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_77F92450_D14D_4191_B05E_F68CD98AB475(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_77F92450_D14D_4191_B05E_F68CD98AB475()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_8F2FB80E_1129_4840_8FC5_0E665E235E4C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_8F2FB80E_1129_4840_8FC5_0E665E235E4C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_F3966341_6877_47A1_9944_DBE751309430(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_F3966341_6877_47A1_9944_DBE751309430()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_38164599_D3CB_47C4_9D78_C48028F40460(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_38164599_D3CB_47C4_9D78_C48028F40460()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_51641DD0_898B_4504_AAC0_2D2ACC7DC54C(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_51641DD0_898B_4504_AAC0_2D2ACC7DC54C()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_C9F8147B_A831_49BD_BCF0_EEF654E7E4F2(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_C9F8147B_A831_49BD_BCF0_EEF654E7E4F2()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

uint64_t Main_WeatherV134WatchBackground_graph_47353A1E_43D8_47D9_89D6_16FE5DCDB9AB(const void *a1, unsigned int a2, const void *a3, const void *a4)
{
  return vfx_script_string_copy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_47353A1E_43D8_47D9_89D6_16FE5DCDB9AB()
{
  vfx_script_get_arguments_buffer();
  return vfx_script_string_copy();
}

double Main_WeatherV134WatchBackground_graph_CC6C8B7C_E6A6_4117_A3FC_08BEEB962B77(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7, _DWORD *a8, float32x4_t *a9)
{
  float32x4_t v9;
  double result;

  v9 = vmlaq_f32(vaddq_f32(a3, vmlaq_f32(a5, (float32x4_t)0, a4)), (float32x4_t)0, a2);
  *(_QWORD *)&result = vaddq_f32(a1, vmulq_laneq_f32(v9, a1, 2)).u64[0];
  *a8 = HIDWORD(result);
  *a9 = v9;
  return result;
}

double __vfx_script_WeatherV134WatchBackground_graph_CC6C8B7C_E6A6_4117_A3FC_08BEEB962B77()
{
  uint64_t arguments_buffer;
  float32x4_t *v1;
  float32x4_t v2;
  double result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x4_t **)(arguments_buffer + 40);
  v2 = vmlaq_f32(vaddq_f32(*(float32x4_t *)(*(_QWORD *)(arguments_buffer + 24) + 16), vmlaq_f32(*(float32x4_t *)(*(_QWORD *)(arguments_buffer + 24) + 48), (float32x4_t)0, *(float32x4_t *)(*(_QWORD *)(arguments_buffer + 24) + 32))), (float32x4_t)0, *(float32x4_t *)*(_QWORD *)(arguments_buffer + 24));
  *(_QWORD *)&result = vaddq_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), vmulq_laneq_f32(v2, *(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), 2)).u64[0];
  **(_DWORD **)(arguments_buffer + 32) = HIDWORD(result);
  *v1 = v2;
  return result;
}

float Spawn_WeatherV134WatchBackground_graph_8BE2EE52_14AA_42AE_A145_66AC9A19E88E(double a1, uint64_t a2, uint64_t a3, unsigned int a4, _QWORD *a5, float *a6, _QWORD *a7)
{
  uint64_t v7;
  float v8;
  float result;

  v7 = a4 ^ 1;
  *a5 = v7;
  a5[1] = v7;
  *a7 = a4;
  a7[1] = a4;
  v8 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  result = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a6 = v8;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_8BE2EE52_14AA_42AE_A145_66AC9A19E88E()
{
  uint64_t arguments_buffer;
  _BOOL8 *v1;
  float *v2;
  _QWORD *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  float v7;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_BOOL8 **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = *(_QWORD **)(arguments_buffer + 48);
  v4 = **(unsigned __int8 **)(arguments_buffer + 16);
  v5 = **(_BYTE **)(arguments_buffer + 16) == 0;
  v6 = **(_QWORD **)(arguments_buffer + 24);
  *v1 = v5;
  v1[1] = v5;
  *v3 = v4;
  v3[1] = v4;
  v7 = fminf(*(float *)&v6, *((float *)&v6 + 1));
  result = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  *v2 = v7;
  v2[1] = result;
  return result;
}

float Init_WeatherV134WatchBackground_graph_C36ED1FD_413E_468A_9CAD_C5EFFD99B227(float a1, float a2, float a3, uint64_t a4, uint64_t a5, float *a6)
{
  float result;

  result = (float)(a1 + a2) + a3;
  *a6 = result;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_C36ED1FD_413E_468A_9CAD_C5EFFD99B227()
{
  uint64_t arguments_buffer;
  float *v1;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  result = (float)(**(float **)(arguments_buffer + 16) + **(float **)(arguments_buffer + 24))
         + **(float **)(arguments_buffer + 32);
  *v1 = result;
  v1[1] = result;
  return result;
}

float Init_WeatherV134WatchBackground_graph_1556506D_1126_4A03_A278_160D614392CB(float a1, double a2, float32x2_t a3, float32x2_t a4, uint64_t a5, int a6, float *a7, float *a8, float *a9)
{
  float v15;
  BOOL v16;
  float v17;
  float v18;
  int v19;
  unsigned int v20;
  float v21;
  float32x2_t v22;
  float32x2_t v23;
  float result;

  v15 = a1 * 0.1;
  v16 = fabsf(v15) <= 0.00000011921;
  v17 = 1.0 / v15;
  if (v16)
    v18 = 0.0;
  else
    v18 = v17;
  v19 = vfx_script_clock_simulation_index();
  v20 = 277803737
      * (((747796405 * (v19 + a6) + 725739762) >> (((747796405 * (v19 + a6) + 725739762) >> 28)
                                                               + 4)) ^ (747796405 * (v19 + a6) + 725739762));
  v21 = vmlas_n_f32(*(float *)&a2, COERCE_FLOAT((v20 >> 31) ^ (v20 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a2, 1), *(float32x2_t *)&a2).f32[0]);
  v22 = vmul_n_f32(a3, v21);
  v23 = vmul_n_f32(a4, v21);
  *a8 = fminf(v22.f32[0], v22.f32[1]);
  a8[1] = fmaxf(v22.f32[0], v22.f32[1]);
  *a9 = fminf(v23.f32[0], v23.f32[1]);
  a9[1] = fmaxf(v23.f32[0], v23.f32[1]);
  result = v18 * v21;
  *a7 = v18 * v21;
  a7[1] = v18 * v21;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_1556506D_1126_4A03_A278_160D614392CB()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  int v4;
  float32x2_t v5;
  float32x2_t v6;
  float v7;
  BOOL v8;
  float v9;
  float v10;
  int v11;
  unsigned int v12;
  float v13;
  float32x2_t v14;
  float32x2_t v15;
  float result;
  float32x2_t v17;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v2 = *(float **)(arguments_buffer + 64);
  v4 = **(_DWORD **)(arguments_buffer + 8);
  v17 = **(float32x2_t **)(arguments_buffer + 24);
  v5 = **(float32x2_t **)(arguments_buffer + 32);
  v6 = **(float32x2_t **)(arguments_buffer + 40);
  v7 = **(float **)(arguments_buffer + 16) * 0.1;
  v8 = fabsf(v7) <= 0.00000011921;
  v9 = 1.0 / v7;
  if (v8)
    v10 = 0.0;
  else
    v10 = v9;
  v11 = vfx_script_clock_simulation_index();
  v12 = 277803737
      * (((747796405 * (v11 + v4) + 725739762) >> (((747796405 * (v11 + v4) + 725739762) >> 28)
                                                               + 4)) ^ (747796405 * (v11 + v4) + 725739762));
  v13 = vmlas_n_f32(v17.f32[0], COERCE_FLOAT((v12 >> 31) ^ (v12 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)v17, 1), v17).f32[0]);
  v14 = vmul_n_f32(v5, v13);
  v15 = vmul_n_f32(v6, v13);
  *v3 = fminf(v14.f32[0], v14.f32[1]);
  v3[1] = fmaxf(v14.f32[0], v14.f32[1]);
  *v2 = fminf(v15.f32[0], v15.f32[1]);
  v2[1] = fmaxf(v15.f32[0], v15.f32[1]);
  result = v10 * v13;
  *v1 = v10 * v13;
  v1[1] = v10 * v13;
  return result;
}

float Init_WeatherV134WatchBackground_graph_C65DAC3C_8A65_40C5_AA59_A84C5DCF68C5(double a1, float a2, uint64_t a3, uint64_t a4, float *a5, float *a6)
{
  float v6;
  float result;

  v6 = (float)(a2 * 3.1416) / 180.0;
  *a5 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  a5[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  result = fminf(-v6, v6);
  *a6 = result;
  a6[1] = fmaxf(-v6, v6);
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_C65DAC3C_8A65_40C5_AA59_A84C5DCF68C5()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  uint64_t v3;
  float v4;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 32);
  v2 = *(float **)(arguments_buffer + 40);
  v3 = **(_QWORD **)(arguments_buffer + 16);
  v4 = (float)(**(float **)(arguments_buffer + 24) * 3.1416) / 180.0;
  *v1 = fminf(*(float *)&v3, *((float *)&v3 + 1));
  v1[1] = fmaxf(*(float *)&v3, *((float *)&v3 + 1));
  result = fminf(-v4, v4);
  *v2 = result;
  v2[1] = fmaxf(-v4, v4);
  return result;
}

uint64_t Update_WeatherV134WatchBackground_graph_9EFC1DCE_1DC1_414E_9F59_4C7B7C39C491(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  _OWORD v8[3];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v8[0] = xmmword_1B000C9A0;
  v8[1] = xmmword_1B000C960;
  v8[2] = xmmword_1B000C9A0;
  v6 = 0x3EF42C9E00000000;
  v7 = 1065353216;
  v3 = MEMORY[0x1B5E03E58](a1, v8, &v6, 3, 1);
  MEMORY[0x1B5E03E64](a1, v3, 1, a2);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_9EFC1DCE_1DC1_414E_9F59_4C7B7C39C491(uint64_t a1)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  int v6;
  _OWORD v7[3];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = *(__n128 *)*(_QWORD *)(vfx_script_get_arguments_buffer() + 16);
  v7[0] = xmmword_1B000C9A0;
  v7[1] = xmmword_1B000C960;
  v7[2] = xmmword_1B000C9A0;
  v5 = 0x3EF42C9E00000000;
  v6 = 1065353216;
  v2 = MEMORY[0x1B5E03E58](a1, v7, &v5, 3, 1);
  MEMORY[0x1B5E03E64](a1, v2, 1, v4);
  vfx_script_color_ramp_copy();
  vfx_script_color_ramp_destroy();
  return vfx_script_color_ramp_destroy();
}

float Init_WeatherV134WatchBackground_graph_9CF6DC9B_07F8_4169_9C6E_000B01BE6C36(double a1, double a2, double a3, uint64_t a4, uint64_t a5, float *a6, float *a7, float *a8)
{
  float result;

  *a6 = fminf(*(float *)&a1, *((float *)&a1 + 1));
  a6[1] = fmaxf(*(float *)&a1, *((float *)&a1 + 1));
  *a7 = fminf(*(float *)&a2, *((float *)&a2 + 1));
  a7[1] = fmaxf(*(float *)&a2, *((float *)&a2 + 1));
  result = fminf(*(float *)&a3, *((float *)&a3 + 1));
  *a8 = result;
  a8[1] = fmaxf(*(float *)&a3, *((float *)&a3 + 1));
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_9CF6DC9B_07F8_4169_9C6E_000B01BE6C36()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  v2 = *(float **)(arguments_buffer + 48);
  v3 = *(float **)(arguments_buffer + 56);
  v4 = **(_QWORD **)(arguments_buffer + 16);
  v5 = **(_QWORD **)(arguments_buffer + 24);
  v6 = **(_QWORD **)(arguments_buffer + 32);
  *v1 = fminf(*(float *)&v4, *((float *)&v4 + 1));
  v1[1] = fmaxf(*(float *)&v4, *((float *)&v4 + 1));
  *v2 = fminf(*(float *)&v5, *((float *)&v5 + 1));
  v2[1] = fmaxf(*(float *)&v5, *((float *)&v5 + 1));
  result = fminf(*(float *)&v6, *((float *)&v6 + 1));
  *v3 = result;
  v3[1] = fmaxf(*(float *)&v6, *((float *)&v6 + 1));
  return result;
}

void Update_WeatherV134WatchBackground_graph_A7DF2157_40F2_44C0_B68A_B3F21215F4A1(float a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  __int128 v4;

  v4 = *a4;
  *((float *)&v4 + 1) = a1;
  DWORD2(v4) = *((_QWORD *)a4 + 1);
  *a4 = v4;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_A7DF2157_40F2_44C0_B68A_B3F21215F4A1()
{
  uint64_t arguments_buffer;
  __n128 *v1;
  __n128 result;
  __n128 v3;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(__n128 **)(arguments_buffer + 24);
  result = *v1;
  v3 = *v1;
  v3.n128_u32[1] = **(_DWORD **)(arguments_buffer + 16);
  v3.n128_u32[2] = v1->n128_u64[1];
  *v1 = v3;
  return result;
}

void Spawn_WeatherV134WatchBackground_graph_0D7B4D92_C329_4F22_AD69_8EA1EFE1B97F(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_0D7B4D92_C329_4F22_AD69_8EA1EFE1B97F()
{
  uint64_t result;
  _QWORD *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(result + 24);
  v2 = **(_QWORD **)(result + 16);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

float32_t Render_WeatherV134WatchBackground_graph_B53B5B21_A3C9_4260_B1F6_DD10A088102E(float a1, uint64_t a2, uint64_t a3, float32x2_t *a4)
{
  double v6;
  const float *v7;
  float32_t result;
  float32x2_t v9;

  vfx_script_clock_time();
  *(float *)&v6 = v6;
  v7 = (const float *)&dword_1B000C9FC;
  result = *(float *)&v6 * a1;
  v9 = vld1_dup_f32(v7);
  v9.f32[0] = result;
  *a4 = v9;
  return result;
}

float32_t __vfx_script_WeatherV134WatchBackground_graph_B53B5B21_A3C9_4260_B1F6_DD10A088102E()
{
  uint64_t arguments_buffer;
  float32x2_t *v1;
  float v2;
  double v3;
  const float *v4;
  float32_t result;
  float32x2_t v6;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float32x2_t **)(arguments_buffer + 24);
  v2 = **(float **)(arguments_buffer + 16);
  vfx_script_clock_time();
  *(float *)&v3 = v3;
  v4 = (const float *)&dword_1B000C9FC;
  result = v2 * *(float *)&v3;
  v6 = vld1_dup_f32(v4);
  v6.f32[0] = result;
  *v1 = v6;
  return result;
}

float Spawn_WeatherV134WatchBackground_graph_15A97160_8BD7_4BD2_AED7_2C24BD80A05B(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_15A97160_8BD7_4BD2_AED7_2C24BD80A05B()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134WatchBackground_graph_FA37660E_C3EE_4869_AC4E_FD4A89EEF818(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_FA37660E_C3EE_4869_AC4E_FD4A89EEF818()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

float Spawn_WeatherV134WatchBackground_graph_992D1BF9_E4B6_4560_9BDE_503D47CD80A9(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_992D1BF9_E4B6_4560_9BDE_503D47CD80A9()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134WatchBackground_graph_BE1D59D1_7F54_4E6D_90E1_183F1FCDC611(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_BE1D59D1_7F54_4E6D_90E1_183F1FCDC611()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

float Spawn_WeatherV134WatchBackground_graph_D6EC2D51_EB9E_40E0_8550_71D3C6975A0A(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_D6EC2D51_EB9E_40E0_8550_71D3C6975A0A()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134WatchBackground_graph_154351DC_BD6A_43EB_99EF_38421D359A2C(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_154351DC_BD6A_43EB_99EF_38421D359A2C()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

void Spawn_WeatherV134WatchBackground_graph_2A7B19A3_6233_44A1_ACFF_134C79957C7F(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  v4 = 65 * a3 + 65;
  *a4 = v4;
  a4[1] = v4;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_2A7B19A3_6233_44A1_ACFF_134C79957C7F()
{
  uint64_t result;
  uint64_t *v1;
  uint64_t v2;

  result = vfx_script_get_arguments_buffer();
  v1 = *(uint64_t **)(result + 24);
  v2 = 65 * **(_QWORD **)(result + 16) + 65;
  *v1 = v2;
  v1[1] = v2;
  return result;
}

float32x4_t Main_WeatherV134WatchBackground_graph_B485E447_6153_4F1E_A234_5E82577E7409(float32x4_t a1, uint64_t a2, uint64_t a3, float32x4_t *a4)
{
  float32x4_t result;

  result = vmulq_f32(vaddq_f32(a1, (float32x4_t)xmmword_1B000C950), (float32x4_t)vdupq_n_s32(0x3F266666u));
  *a4 = result;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_graph_B485E447_6153_4F1E_A234_5E82577E7409()
{
  uint64_t arguments_buffer;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result = (__n128)vmulq_f32(vaddq_f32(*(float32x4_t *)*(_QWORD *)(arguments_buffer + 16), (float32x4_t)xmmword_1B000C950), (float32x4_t)vdupq_n_s32(0x3F266666u));
  result.n128_u32[3] = 1.0;
  *(__n128 *)*(_QWORD *)(arguments_buffer + 24) = result;
  return result;
}

float Init_WeatherV134WatchBackground_graph_A4F048EA_D4F1_48B5_8E2B_3AF51FC471D5(float a1, float a2, float a3, uint64_t a4, uint64_t a5, float *a6)
{
  float result;

  result = (float)(a1 + a2) + a3;
  *a6 = result;
  a6[1] = result;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_A4F048EA_D4F1_48B5_8E2B_3AF51FC471D5()
{
  uint64_t arguments_buffer;
  float *v1;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  result = (float)(**(float **)(arguments_buffer + 16) + **(float **)(arguments_buffer + 24))
         + **(float **)(arguments_buffer + 32);
  *v1 = result;
  v1[1] = result;
  return result;
}

float Spawn_WeatherV134WatchBackground_graph_0F349610_D817_4E02_8247_702CAA1AE7F3(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7, _QWORD *a8, unint64_t *a9)
{
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  unint64_t v25;
  float v26;
  float result;
  unint64_t v28;

  v14 = (float)a3 / 6.0;
  v15 = fmodf((float)a3, 6.0);
  v16 = floorf(v14);
  if (v15 <= 0.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v16 + v17;
  if (v15 <= 1.99)
    v19 = 0.0;
  else
    v19 = 1.0;
  v20 = v16 + v19;
  if (v15 <= 2.99)
    v21 = 0.0;
  else
    v21 = 1.0;
  v22 = v16 + v21;
  if (v15 <= 3.99)
    v23 = 0.0;
  else
    v23 = 1.0;
  v24 = v16 + v23;
  v25 = (unint64_t)v18;
  if (v15 <= 4.99)
    v26 = 0.0;
  else
    v26 = 1.0;
  result = v16 + v26;
  v28 = vcvtms_u32_f32(v14);
  *a5 = (unint64_t)v20;
  a5[1] = (unint64_t)v20;
  *a6 = (unint64_t)v22;
  a6[1] = (unint64_t)v22;
  *a7 = (unint64_t)v24;
  a7[1] = (unint64_t)v24;
  *a8 = (unint64_t)result;
  a8[1] = (unint64_t)result;
  *a9 = v28;
  a9[1] = v28;
  *a4 = v25;
  a4[1] = v25;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_graph_0F349610_D817_4E02_8247_702CAA1AE7F3()
{
  uint64_t arguments_buffer;
  unint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  unint64_t v19;
  float v20;
  float result;
  unint64_t v22;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(unint64_t **)(arguments_buffer + 24);
  v2 = *(_QWORD **)(arguments_buffer + 32);
  v3 = *(_QWORD **)(arguments_buffer + 40);
  v4 = *(_QWORD **)(arguments_buffer + 48);
  v5 = *(_QWORD **)(arguments_buffer + 56);
  v6 = *(unint64_t **)(arguments_buffer + 64);
  v7 = (float)**(unint64_t **)(arguments_buffer + 16);
  v8 = v7 / 6.0;
  v9 = fmodf(v7, 6.0);
  v10 = floorf(v8);
  if (v9 <= 0.99)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = v10 + v11;
  if (v9 <= 1.99)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = v10 + v13;
  if (v9 <= 2.99)
    v15 = 0.0;
  else
    v15 = 1.0;
  v16 = v10 + v15;
  if (v9 <= 3.99)
    v17 = 0.0;
  else
    v17 = 1.0;
  v18 = v10 + v17;
  v19 = (unint64_t)v12;
  if (v9 <= 4.99)
    v20 = 0.0;
  else
    v20 = 1.0;
  result = v10 + v20;
  v22 = vcvtms_u32_f32(v8);
  *v2 = (unint64_t)v14;
  v2[1] = (unint64_t)v14;
  *v3 = (unint64_t)v16;
  v3[1] = (unint64_t)v16;
  *v4 = (unint64_t)v18;
  v4[1] = (unint64_t)v18;
  *v5 = (unint64_t)result;
  v5[1] = (unint64_t)result;
  *v6 = v22;
  v6[1] = v22;
  *v1 = v19;
  v1[1] = v19;
  return result;
}

void Main_WeatherV134WatchBackground_graph_E98E71ED_C208_4BF9_B7C6_57A575CF000F(const void *a1, unsigned int a2, unsigned int a3, unsigned int *a4)
{
  *a4 = a3;
}

uint64_t __vfx_script_WeatherV134WatchBackground_graph_E98E71ED_C208_4BF9_B7C6_57A575CF000F()
{
  uint64_t result;

  result = vfx_script_get_arguments_buffer();
  **(_DWORD **)(result + 24) = **(_QWORD **)(result + 16);
  return result;
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_1(__n128 a1, float a2, float32x4_t a3, uint64_t a4, int a5, int a6, __n128 *a7, uint64_t a8, __n128 *a9)
{
  int v14;
  int v15;
  int v16;
  float32x4_t v17;
  unsigned int v18;
  int32x2_t v19;
  float v20;
  uint32x2_t v21;
  float32x2_t v27;
  __int128 v29;
  BOOL v30;
  float v31;
  __n128 v32;
  __n128 result;
  unsigned int v36;
  __n128 v37;

  v36 = *(_DWORD *)(a8 + 12);
  v37 = *a9;
  v14 = vfx_script_clock_simulation_index();
  v15 = vfx_script_clock_simulation_index();
  v16 = vfx_script_clock_simulation_index();
  v17 = vmulq_f32(a3, a3);
  v17.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v17, 2), vaddq_f32(v17, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 1))).f32[0]);
  v19.i32[0] = a6 + a5 + v14;
  v19.i32[1] = a6 + a5 + v15;
  v20 = v17.f32[0] / 300.0;
  *(int32x2_t *)&v29 = vmla_s32((int32x2_t)0x86B85AE2390239B6, v19, vdup_n_s32(0x2C9277B5u));
  v21 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32(*(uint32x2_t *)&v29, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32(*(uint32x2_t *)&v29, 0x1CuLL))), *(int8x8_t *)&v29), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V4.2S, #1.0 }
  v27 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v21, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v21, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D4);
  __asm { FMOV            V4.2S, #-1.0 }
  *(float32x2_t *)&v29 = vmla_f32((float32x2_t)0x3F2666663F4CCCCDLL, (float32x2_t)0x3EB333343E4CCCCCLL, vadd_f32(v27, _D4));
  v30 = v17.f32[0] <= 300.0;
  v31 = 1.0;
  if (v30)
    v31 = v20;
  *a7 = a1;
  v18 = 277803737
      * (((747796405 * (a6 + a5 + v16) - 327886387) >> (((747796405 * (a6 + a5 + v16)
                                                                                    - 327886387) >> 28)
                                                                    + 4)) ^ (747796405 * (a6 + a5 + v16) - 327886387));
  *((_QWORD *)&v29 + 1) = __PAIR64__(v36, (float)((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0) * 6.28) + -3.14);
  *(_OWORD *)a8 = v29;
  v32.n128_u64[0] = __PAIR64__(LODWORD(v31), LODWORD(a2));
  result = v37;
  v32.n128_u64[1] = v37.n128_u64[1];
  *a9 = v32;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_1()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_342(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  unsigned int v12;
  float v13;
  int v14;
  unsigned int v15;
  float32x4_t v16;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = 277803737
      * (((747796405 * (v11 + a4) - 1403630843) >> (((747796405 * (v11 + a4) - 1403630843) >> 28)
                                                                + 4)) ^ (747796405 * (v11 + a4) - 1403630843));
  v13 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v12 >> 31) ^ (v12 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v14 = vfx_script_clock_simulation_index();
  v15 = 277803737
      * (((747796405 * (a5 + a4 + v14) + 322669363) >> (((747796405 * (a5 + a4 + v14)
                                                                                    + 322669363) >> 28)
                                                                    + 4)) ^ (747796405 * (a5 + a4 + v14) + 322669363));
  v16 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v15 >> 31) ^ (v15 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v16, v16, 3);
  result.n128_u32[3] = v16.u32[3];
  *a6 = v13;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_342()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_435(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 322669363) >> (((747796405 * (v12 + v15) + 322669363) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 322669363));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_435()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_446(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 1320621295) >> (((747796405 * (v12 + v15) + 1320621295) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 1320621295));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_446()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_25(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 725739762) >> (((747796405 * (v12 + v15) + 725739762) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) + 725739762));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_25()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleInit_WeatherV134WatchBackground_particleInit_112(double a1, float a2, float32x4_t a3, float a4, uint64_t a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9, __int128 *a10, float *a11, float32x2_t *a12, float32x4_t *a13)
{
  int v18;
  float v19;
  unsigned int v20;
  float v22;
  float v23;
  float v24;
  __int128 v25;
  float v27;
  __int128 v28;

  v28 = *a10;
  v18 = vfx_script_clock_simulation_index();
  v19 = (float)a7 / (float)(unint64_t)(a8 - 1);
  if (a8 == 1)
    v19 = 0.0;
  v20 = 277803737
      * (((747796405 * (a7 + a6 + v18) - 174971515) >> (((747796405 * (a7 + a6 + v18) - 174971515) >> 28) + 4)) ^ (747796405 * (a7 + a6 + v18) - 174971515));
  v27 = v19 + (float)((float)((float)(COERCE_FLOAT((v20 >> 31) ^ (v20 >> 9) | 0x3F800000) + -1.0) * 0.08) + 0.0);
  vfx_script_clock_simulation_index();
  if (a7 % 0xC == 1 && a7 > 1)
    v22 = 0.375;
  else
    v22 = (float)((float)(a7 % 0xC + 1) / 12.0) + -0.041667;
  vfx_script_clock_simulation_index();
  vfx_script_texture_sample1d();
  v24 = *(float *)&a1
      + vmuls_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a1, 1), *(float32x2_t *)&a1).f32[0], v23);
  if (!a7)
    v24 = 0.0;
  if (a7 == 1)
    v24 = *(float *)&a1;
  *a11 = v22;
  *a12 = vmul_n_f32(vmul_n_f32((float32x2_t)0x3F1C6A7F3F6ED917, v24), a2);
  *a13 = vmulq_n_f32(a3, a4);
  v25 = v28;
  *(float *)&v25 = v27;
  *a10 = v25;
  return *(float *)&v25;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_112()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_511(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 2126762093) >> (((747796405 * (v12 + v15) + 2126762093) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 2126762093));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_511()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_81(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0, 2uLL)+ 1)* 0.25)+ -0.125;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) - 750404917) >> (((747796405 * (v12 + v15) - 750404917) >> 28)
                                                                + 4)) ^ (747796405 * (v12 + v15) - 750404917));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_81()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_135(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float *a6, __n128 *a7)
{
  int v11;
  int v12;
  unsigned int v13;
  float v14;
  int v15;
  unsigned int v16;
  float32x4_t v17;
  __n128 result;

  v11 = vfx_script_clock_simulation_index();
  v12 = a5 + a4;
  v13 = 277803737
      * (((747796405 * (v12 + v11) - 1403630843) >> (((747796405 * (v12 + v11) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v11) - 1403630843));
  v14 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v13 >> 31) ^ (v13 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v15 = vfx_script_clock_simulation_index();
  v16 = 277803737
      * (((747796405 * (v12 + v15) + 1665347301) >> (((747796405 * (v12 + v15) + 1665347301) >> 28)
                                                                 + 4)) ^ (747796405 * (v12 + v15) + 1665347301));
  v17 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v16 >> 31) ^ (v16 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v17, v17, 3);
  result.n128_u32[3] = v17.u32[3];
  *a6 = v14;
  *a7 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_135()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_190(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float32x4_t *a6, __int128 *a7, __int128 *a8, float *a9)
{
  int v15;
  int v16;
  unsigned int v17;
  float32x4_t v18;
  float32x4_t v19;
  int v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  float32x4_t v27;
  __int128 v28;
  __int128 v29;

  v28 = *a7;
  v29 = *a8;
  v15 = vfx_script_clock_simulation_index();
  v16 = a5 + a4;
  v17 = 277803737
      * (((747796405 * (v16 + v15) - 1306390188) >> (((747796405 * (v16 + v15) - 1306390188) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v15) - 1306390188));
  v18 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v17 >> 31) ^ (v17 >> 9) | 0x3F800000) + -1.0);
  v19 = vmulq_laneq_f32(v18, v18, 3);
  v19.i32[3] = v18.i32[3];
  v27 = v19;
  v20 = vfx_script_clock_simulation_index();
  v21 = 277803737
      * (((747796405 * (v16 + v20) - 1403630843) >> (((747796405 * (v16 + v20) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v20) - 1403630843));
  *a6 = v27;
  *a9 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v21 >> 31) ^ (v21 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v22 = v28;
  DWORD2(v22) = 0;
  *a7 = v22;
  v23 = v29;
  DWORD2(v23) = 0;
  *a8 = v23;
  result.n128_u64[0] = v23;
  result.n128_u32[2] = DWORD2(v23);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_190()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

double ParticleInit_WeatherV134WatchBackground_particleInit_152(double a1, float32x4_t a2, float32x4_t a3, uint64_t a4, int a5, int a6, int a7, float *a8, _QWORD *a9, float32x4_t *a10)
{
  int v16;
  int v17;
  unsigned int v18;
  float v19;
  float v20;
  int v21;
  unsigned int v22;
  float32x4_t v23;
  float32x4_t v24;
  double result;
  float v27;
  unsigned int v30;

  v30 = *a9;
  v16 = vfx_script_clock_simulation_index();
  v17 = a6 + a5;
  v18 = 277803737
      * (((747796405 * (v17 + v16) - 1403630843) >> (((747796405 * (v17 + v16) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v16) - 1403630843));
  v19 = (float)((float)(unint64_t)((int)vcvts_n_s32_f32(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0, 3uLL)+ 1)* 0.125)+ -0.0625;
  v20 = *((float *)&a1 + 1);
  if (!a7)
    v20 = *(float *)&a1;
  v27 = v20;
  v21 = vfx_script_clock_simulation_index();
  v22 = 277803737
      * (((747796405 * (v17 + v21) - 519697521) >> (((747796405 * (v17 + v21) - 519697521) >> 28)
                                                                + 4)) ^ (747796405 * (v17 + v21) - 519697521));
  v23 = vmlaq_n_f32(a2, vsubq_f32(a3, a2), COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0);
  v24 = vmulq_laneq_f32(v23, v23, 3);
  v24.i32[3] = v23.i32[3];
  *a8 = v19;
  *a10 = v24;
  result = COERCE_DOUBLE(__PAIR64__(LODWORD(v27), v30));
  *a9 = __PAIR64__(LODWORD(v27), v30);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_152()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_484(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float32x4_t *a6, __int128 *a7, _OWORD *a8, float *a9)
{
  int v15;
  int v16;
  unsigned int v17;
  float32x4_t v18;
  float32x4_t v19;
  int v20;
  unsigned int v21;
  __int128 v22;
  __n128 result;
  float32x4_t v26;
  __int128 v27;

  v27 = *a7;
  v15 = vfx_script_clock_simulation_index();
  v16 = a5 + a4;
  v17 = 277803737
      * (((747796405 * (v16 + v15) - 1306390188) >> (((747796405 * (v16 + v15) - 1306390188) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v15) - 1306390188));
  v18 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v17 >> 31) ^ (v17 >> 9) | 0x3F800000) + -1.0);
  v19 = vmulq_laneq_f32(v18, v18, 3);
  v19.i32[3] = v18.i32[3];
  v26 = v19;
  v20 = vfx_script_clock_simulation_index();
  v21 = 277803737
      * (((747796405 * (v16 + v20) - 1403630843) >> (((747796405 * (v16 + v20) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v20) - 1403630843));
  *a6 = v26;
  *a8 = 0u;
  *a9 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v21 >> 31) ^ (v21 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v22 = v27;
  DWORD2(v22) = 0;
  *a7 = v22;
  result.n128_u64[0] = v22;
  result.n128_u32[2] = DWORD2(v22);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_484()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_160(double a1, uint64_t a2, int a3, int a4, __n128 *a5)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  __n128 result;
  __n128 v13;

  v13 = *a5;
  v8 = vfx_script_clock_simulation_index();
  v9 = 277803737
     * (((747796405 * (a4 + a3 + v8) + 1857158435) >> (((747796405 * (a4 + a3 + v8)
                                                                                   + 1857158435) >> 28)
                                                                   + 4)) ^ (747796405 * (a4 + a3 + v8) + 1857158435));
  result.n128_f32[0] = COERCE_FLOAT((v9 >> 31) ^ (v9 >> 9) | 0x3F800000) + -1.0;
  v10 = 277803737
      * (((747796405 * (a4 + a3) + 2048969569) >> (((747796405 * (a4 + a3) + 2048969569) >> 28)
                                                               + 4)) ^ (747796405 * (a4 + a3) + 2048969569));
  result.n128_u32[1] = vmlas_n_f32(*(float *)&a1, COERCE_FLOAT((v10 >> 31) ^ (v10 >> 9) | 0x3F800000) + -1.0, vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a1, 1), *(float32x2_t *)&a1).f32[0]);
  result.n128_u64[1] = v13.n128_u64[1];
  *a5 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_160()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_276(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, __n128 *a6)
{
  int v9;
  unsigned int v10;
  float32x4_t v11;
  __n128 result;

  v9 = vfx_script_clock_simulation_index();
  v10 = 277803737
      * (((747796405 * (a5 + a4 + v9) - 1670564325) >> (((747796405 * (a5 + a4 + v9)
                                                                                    - 1670564325) >> 28)
                                                                    + 4)) ^ (747796405 * (a5 + a4 + v9) - 1670564325));
  v11 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v10 >> 31) ^ (v10 >> 9) | 0x3F800000) + -1.0);
  result = (__n128)vmulq_laneq_f32(v11, v11, 3);
  result.n128_u32[3] = v11.u32[3];
  *a6 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_276()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

void ParticleInit_WeatherV134WatchBackground_particleInit_315(float a1, uint64_t a2, uint64_t a3, float *a4)
{
  *a4 = a1;
}

float __vfx_script_WeatherV134WatchBackground_particleInit_315()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_350(float32x4_t a1, float32x4_t a2, uint64_t a3, int a4, int a5, float32x4_t *a6, __int128 *a7, __int128 *a8, float *a9)
{
  int v15;
  int v16;
  unsigned int v17;
  float32x4_t v18;
  float32x4_t v19;
  int v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  float32x4_t v27;
  __int128 v28;
  __int128 v29;

  v28 = *a7;
  v29 = *a8;
  v15 = vfx_script_clock_simulation_index();
  v16 = a5 + a4;
  v17 = 277803737
      * (((747796405 * (v16 + v15) - 1306390188) >> (((747796405 * (v16 + v15) - 1306390188) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v15) - 1306390188));
  v18 = vmlaq_n_f32(a1, vsubq_f32(a2, a1), COERCE_FLOAT((v17 >> 31) ^ (v17 >> 9) | 0x3F800000) + -1.0);
  v19 = vmulq_laneq_f32(v18, v18, 3);
  v19.i32[3] = v18.i32[3];
  v27 = v19;
  v20 = vfx_script_clock_simulation_index();
  v21 = 277803737
      * (((747796405 * (v16 + v20) - 1403630843) >> (((747796405 * (v16 + v20) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v16 + v20) - 1403630843));
  *a6 = v27;
  *a9 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v21 >> 31) ^ (v21 >> 9) | 0x3F800000) + -1.0)
                                                     * 9.0)
                                        + 1)
              / 9.0)
      + -0.055556;
  v22 = v28;
  DWORD2(v22) = 0;
  *a7 = v22;
  v23 = v29;
  DWORD2(v23) = 0;
  *a8 = v23;
  result.n128_u64[0] = v23;
  result.n128_u32[2] = DWORD2(v23);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_350()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_219(float a1, double a2, uint64_t a3, int a4, unsigned int a5, unint64_t a6, float *a7, __n128 *a8, uint64_t a9)
{
  __n128 v15;
  int v16;
  int v17;
  unsigned int v18;
  float v19;
  __n128 v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  float v25;
  __n128 v26;
  __int128 v27;
  __n128 result;
  float v29;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  unsigned int v34;

  v32 = *a8;
  v15 = *a8;
  v15.n128_u32[0] = *(_DWORD *)(a9 + 12);
  v33 = v15;
  v34 = HIDWORD(a2);
  v16 = vfx_script_clock_simulation_index();
  v17 = a5 + a4;
  v18 = 277803737
      * (((747796405 * (v17 + v16) - 1403630843) >> (((747796405 * (v17 + v16) - 1403630843) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v16) - 1403630843));
  v19 = (float)((float)(unint64_t)((int)(float)((float)(COERCE_FLOAT((v18 >> 31) ^ (v18 >> 9) | 0x3F800000) + -1.0)
                                                     * 6.0)
                                        + 1)
              / 6.0)
      + -0.083333;
  v20.n128_f32[0] = (float)(a1 + a1) / (float)a6;
  if (!a6)
    v20.n128_f32[0] = 0.0;
  v20.n128_f32[0] = (float)(v20.n128_f32[0] * (float)a5) - a1;
  v31 = v20;
  v21 = vfx_script_clock_simulation_index();
  v22 = 277803737
      * (((747796405 * (v17 + v21) + 1957069266) >> (((747796405 * (v17 + v21) + 1957069266) >> 28)
                                                                 + 4)) ^ (747796405 * (v17 + v21) + 1957069266));
  v29 = (float)((float)(COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0) * 6.28) + -3.14;
  v23 = vfx_script_clock_simulation_index();
  v24 = 277803737
      * (((747796405 * (v17 + v23 + 10) + 864546855) >> (((747796405 * (v17 + v23 + 10)
                                                                                     + 864546855) >> 28)
                                                                     + 4)) ^ (747796405 * (v17 + v23 + 10) + 864546855));
  v25 = 1.0;
  if ((float)(COERCE_FLOAT((v24 >> 31) ^ (v24 >> 9) | 0x3F800000) + -1.0) <= 0.5)
    v25 = -1.0;
  *a7 = v19;
  v26 = v31;
  *(unint64_t *)((char *)v26.n128_u64 + 4) = *(unint64_t *)((char *)v32.n128_u64 + 4);
  *(_QWORD *)&v27 = __PAIR64__(v34, LODWORD(v29));
  *a8 = v26;
  *((_QWORD *)&v27 + 1) = __PAIR64__(v33.n128_u32[0], LODWORD(v25));
  result = v33;
  *(_OWORD *)a9 = v27;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_219()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

int8x16_t ParticleInit_WeatherV134WatchBackground_particleInit_291(__n128 a1, __n128 a2, float32x4_t a3, double a4, uint64_t a5, int a6, __n128 *a7, _OWORD *a8, int8x16_t *a9)
{
  int v13;
  __n128 v14;
  unsigned int v15;
  float v16;
  int v17;
  unsigned int v18;
  int v19;
  __int128 v20;
  float32x4_t v21;
  int8x16_t result;
  float32x4_t v25;

  *(double *)v25.i64 = a4;
  v13 = vfx_script_clock_simulation_index();
  v15 = 277803737
      * (((747796405 * (v13 + a6) - 1881823590) >> (((747796405 * (v13 + a6) - 1881823590) >> 28)
                                                                + 4)) ^ (747796405 * (v13 + a6) - 1881823590));
  v16 = COERCE_FLOAT((v15 >> 31) ^ (v15 >> 9) | 0x3F800000) + -1.0;
  if (v16 <= 0.5)
  {
    v14.n128_f32[0] = -a1.n128_f32[0];
    *(unint64_t *)((char *)v14.n128_u64 + 4) = *(unint64_t *)((char *)a1.n128_u64 + 4);
    a1 = v14;
  }
  v17 = vfx_script_clock_simulation_index();
  v18 = 277803737
      * (((747796405 * (v17 + a6) - 558593783) >> (((747796405 * (v17 + a6) - 558593783) >> 28)
                                                               + 4)) ^ (747796405 * (v17 + a6) - 558593783));
  v19 = (v18 >> 31) ^ (v18 >> 9) | 0x3F800000;
  *(float *)&v20 = -a2.n128_f32[0];
  v21.i32[0] = 0.5;
  if (v16 > 0.5)
    *(float *)&v20 = a2.n128_f32[0];
  *((float *)&v20 + 1) = (float)((float)(*(float *)&v19 + -1.0) * 10.0) + -15.0;
  DWORD2(v20) = a2.n128_u32[2];
  *a7 = a1;
  result = vandq_s8((int8x16_t)vmulq_n_f32(a3, v25.f32[0]), (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgtq_f32(v21, v25)), 0));
  *a8 = v20;
  *a9 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_291()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_151(__n128 result, float a2, uint64_t a3, uint64_t a4, __n128 *a5, __int128 *a6)
{
  __int128 v6;

  v6 = *a6;
  result.n128_u32[3] = 1.0;
  *a5 = result;
  *(float *)&v6 = a2;
  *a6 = v6;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_151()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_271(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) - 497579214) >> (((747796405 * (v21 + v18) - 497579214) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v18) - 497579214));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 5) + 1937621135) >> (((747796405 * (v21 + v25 + 5)
                                                                                     + 1937621135) >> 28)
                                                                     + 4)) ^ (747796405 * (v21 + v25 + 5) + 1937621135));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_271()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_8(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) + 211320929) >> (((747796405 * (v21 + v18) + 211320929) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v18) + 211320929));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25) - 152853208) >> (((747796405 * (v21 + v25) - 152853208) >> 28)
                                                                + 4)) ^ (747796405 * (v21 + v25) - 152853208));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_8()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_392(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) - 1534427408) >> (((747796405 * (v21 + v18) - 1534427408) >> 28)
                                                                 + 4)) ^ (747796405 * (v21 + v18) - 1534427408));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 4) + 1648569346) >> (((747796405 * (v21 + v25 + 4)
                                                                                     + 1648569346) >> 28)
                                                                     + 4)) ^ (747796405 * (v21 + v25 + 4) + 1648569346));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_392()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

int32x4_t ParticleInit_WeatherV134WatchBackground_particleInit_101(int32x2_t a1, uint64_t a2, uint64_t a3, int32x4_t *a4)
{
  int32x4_t result;

  result = vdupq_lane_s32(a1, 0);
  *a4 = result;
  return result;
}

__n128 __vfx_script_WeatherV134WatchBackground_particleInit_101()
{
  __n128 result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

__n128 ParticleInit_WeatherV134WatchBackground_particleInit_364(__n128 a1, float a2, double a3, uint64_t a4, int a5, unsigned int a6, unint64_t a7, int32x4_t *a8, __n128 *a9, __int128 *a10, __int128 *a11)
{
  int v18;
  int32x2_t v19;
  float v20;
  int v21;
  unsigned int v22;
  float v23;
  float v24;
  int v25;
  unsigned int v26;
  __int128 v27;
  __n128 v28;
  __n128 result;
  __int128 v30;
  int32x2_t v32;
  __int128 v34;
  __int128 v35;
  __n128 v36;

  v36.n128_f64[0] = a3;
  v34 = *a10;
  v35 = *a11;
  v18 = vfx_script_clock_simulation_index();
  v20 = (float)(a2 + a2) / (float)a7;
  if (!a7)
    v20 = 0.0;
  v21 = a6 + a5;
  v22 = 277803737
      * (((747796405 * (v21 + v18) + 1859828611) >> (((747796405 * (v21 + v18) + 1859828611) >> 28)
                                                                 + 4)) ^ (747796405 * (v21 + v18) + 1859828611));
  *(float *)v19.i32 = COERCE_FLOAT((v22 >> 31) ^ (v22 >> 9) | 0x3F800000) + -1.0;
  v32 = v19;
  v23 = v20 * 0.5;
  v24 = (float)(v20 * 0.5) + (float)((float)(v20 * (float)a6) - a2);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v21 + v25 + 6) + 747858069) >> (((747796405 * (v21 + v25 + 6)
                                                                                    + 747858069) >> 28)
                                                                    + 4)) ^ (747796405 * (v21 + v25 + 6) + 747858069));
  *(float *)&v27 = v24 + (float)(v23 * (float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0));
  v28 = a1;
  *a8 = vdupq_lane_s32(v32, 0);
  v28.n128_u32[3] = 1.0;
  *a9 = v28;
  *(_QWORD *)((char *)&v27 + 4) = *(_QWORD *)((char *)&v34 + 4);
  *a10 = v27;
  v30 = v35;
  result = v36;
  LODWORD(v30) = v36.n128_u32[0];
  *a11 = v30;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleInit_364()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_375(float32x4_t a1, float a2, __n128 a3, float a4, float a5, double a6, double a7, uint64_t a8, uint64_t a9, float32x4_t *a10, float *a11)
{
  double v15;
  float v16;
  float v17;
  int32x2_t v18;
  float32x4_t result;

  vfx_script_clock_time();
  *(float *)&v15 = v15;
  v16 = sinf(a3.n128_f32[2] + (float)((float)(a2 * a3.n128_f32[0]) * *(float *)&v15));
  v17 = vmuls_lane_f32(a4, (float32x2_t)a3.n128_u64[0], 1);
  *(float *)v18.i32 = v17 + (float)(v17 * v16);
  result = vmulq_n_f32(vaddq_f32((float32x4_t)vdupq_lane_s32(v18, 0), a1), a5);
  *a10 = result;
  *a11 = vmuls_lane_f32(vmlas_n_f32(*(float *)&a6, *(float *)&a7, vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]), *(float32x2_t *)&a7, 1);
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_375()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_313(float a1, float a2, float a3, float a4, float a5, uint64_t a6, uint64_t a7, __n128 *a8)
{
  double v13;
  __n128 v14;
  __n128 result;
  __n128 v16;

  v16 = *a8;
  vfx_script_clock_time();
  *(float *)&v13 = v13;
  v14.n128_f32[0] = vmlas_n_f32(0.0, (float)((float)(sinf(*(float *)&v13 * a1) * a2) + a3) * a4, a5);
  result = v16;
  *(unint64_t *)((char *)v14.n128_u64 + 4) = *(unint64_t *)((char *)v16.n128_u64 + 4);
  *a8 = v14;
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_313()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_434(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __n128 result;

  v3 = *a3;
  DWORD2(v3) = 0;
  *a3 = v3;
  result.n128_u64[0] = v3;
  result.n128_u32[2] = DWORD2(v3);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_434()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_138(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __n128 result;

  v3 = *a3;
  DWORD2(v3) = 0;
  *a3 = v3;
  result.n128_u64[0] = v3;
  result.n128_u32[2] = DWORD2(v3);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_138()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_334(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __n128 result;

  v3 = *a3;
  DWORD2(v3) = 0;
  *a3 = v3;
  result.n128_u64[0] = v3;
  result.n128_u32[2] = DWORD2(v3);
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_334()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

int32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_329(double a1, float a2, float a3, double a4, float a5, float a6, float a7, __n128 a8, uint64_t a9, uint64_t a10, int32x4_t *a11, __n128 *a12)
{
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  BOOL v17;
  float v18;
  float v19;
  float v20;
  int32x4_t result;

  v12 = *(float *)&a1 + a2;
  v13 = v12 + a3;
  v14 = fabsf(v12 + a3);
  v15 = v12 / v13;
  v16 = *((float *)&a4 + 1);
  if (*(float *)&a4 >= a5)
    v16 = 0.0;
  v17 = v14 > 0.00000011921;
  if (v14 > 0.00000011921)
    v18 = v15;
  else
    v18 = 0.0;
  v19 = *(float *)&a1 / v13;
  if (!v17)
    v19 = 0.0;
  v20 = v16;
  if (v19 >= a6)
    v20 = (float)((float)(v16 * 0.05) * fminf(fmaxf(a6 / v19, 0.0), 1.0)) + 0.0;
  if (v18 < a6)
    v20 = v16 + (float)((float)(0.0 - v16) * fminf(fmaxf((float)(a6 - v18) / (float)(1.0 - v18), 0.0), 1.0));
  *(float *)&a1 = v20 * a7;
  result = vdupq_lane_s32(*(int32x2_t *)&a1, 0);
  *a11 = result;
  a8.n128_f32[2] = a8.n128_f32[2] + -1.0;
  *a12 = a8;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_329()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_413(float a1, float a2, float a3, __n128 a4, float a5, float a6, float a7, __n128 a8, uint64_t a9, uint64_t a10, float *a11, __n128 *a12, __n128 *a13, float *a14)
{
  float v20;
  float v21;
  float v22;
  double v23;
  __n128 result;
  __n128 v25;

  v20 = (float)(a1 * 3.1416) / 180.0;
  v21 = a4.n128_f32[1];
  v22 = (float)(a6 * a7) * 0.5;
  if (a4.n128_f32[1] >= (float)((float)(v22 * 0.08) + a5))
    v21 = (float)(v22 * 0.08) + a5;
  a4.n128_f32[1] = v21;
  a4.n128_u32[2] = a12->n128_u32[2];
  v25 = a4;
  vfx_script_clock_time();
  *(float *)&v23 = v23;
  *a11 = v20 + (float)((float)((float)(a3 * 3.1416) / 180.0) * sinf(*(float *)&v23 * a2));
  *a13 = a8;
  *a14 = v22;
  result = v25;
  *a12 = v25;
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_413()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_324(float a1, float a2, double a3, float a4, float a5, float a6, float a7, uint64_t a8, uint64_t a9, float *a10, float32x4_t *a11)
{
  float v14;
  float v15;
  float v16;
  __float2 v17;
  unint64_t v18;
  float32x4_t result;
  float v20;
  unsigned int v21;

  v21 = LODWORD(a3);
  v14 = (float)((float)(a1 * 3.1416) / 180.0) + a2;
  v15 = *((float *)&a3 + 1);
  v16 = (float)((float)(a5 * a6) * 0.04) + a4;
  if (*((float *)&a3 + 1) >= v16)
    v15 = v16;
  v20 = v15;
  v17 = __sincosf_stret((float)((float)(180.0 - a1) * 3.1416) / 180.0);
  *(float *)&v18 = v17.__sinval * a7;
  *((float *)&v18 + 1) = v17.__cosval * a7;
  result = vaddq_f32((float32x4_t)v18, (float32x4_t)__PAIR64__(LODWORD(v20), v21));
  *a10 = v14;
  *a11 = result;
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_324()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_382(float a1, __n128 a2, float a3, float a4, float a5, float a6, float a7, float a8, uint64_t a9, uint64_t a10, float *a11, __n128 *a12, int32x4_t *a13, float *a14)
{
  float v23;
  float v24;
  double v25;
  float v26;
  float v27;
  int32x2_t v28;
  float v29;
  __n128 result;
  int32x2_t v31;
  __n128 v32;

  v23 = a2.n128_f32[1];
  v24 = (float)((float)(a4 * a5) * 0.04) + a3;
  if (a2.n128_f32[1] >= v24)
    v23 = v24;
  a2.n128_f32[1] = v23;
  a2.n128_u32[2] = a12->n128_u32[2];
  v32 = a2;
  vfx_script_clock_time();
  v26 = v25;
  v27 = (float)((float)((float)(sinf(v26 * 0.15) * 20.0) + a1) * 3.1416) / 180.0;
  *(float *)v28.i32 = a6 * a7;
  v31 = v28;
  v29 = sinf(v26 * 0.2);
  *a11 = v27;
  *a13 = vdupq_lane_s32(v31, 0);
  *a14 = (float)((float)((float)(v29 + v29) + a8) * a5) * 0.6;
  result = v32;
  *a12 = v32;
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_382()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_WeatherV134WatchBackground_particleUpdate_225(float32x4_t a1, float32x4_t a2, float32x4_t a3, __n128 a4, float a5, float32x4_t a6, float a7, float a8, uint64_t a9, uint64_t a10, uint64_t a11, __n128 *a12, float32x4_t *a13, float *a14, float *a15, float a16, float a17)
{
  __int128 v18;
  float v26;
  float v27;
  float32x4_t v28;
  float v29;
  float v30;
  float32_t v31;
  float v32;
  float v33;
  double v34;
  float v35;
  __n128 result;
  __n128 v37;
  float v38;
  __int128 v39;
  float32x4_t v40;
  __n128 v41;
  __n128 v42;

  v42 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v26 = -a1.f32[0];
  else
    v26 = a2.f32[0];
  if (v26 >= (float)-a1.f32[0])
    *(float *)&v18 = v26;
  else
    *(float *)&v18 = a1.f32[0];
  v38 = a3.f32[0];
  v27 = a3.f32[1] + a4.n128_f32[0];
  a4.n128_f32[0] = -a5;
  v41 = a4;
  v28 = vmulq_laneq_f32(a6, a6, 3);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v31 = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v32 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v31 - a1.f32[0]), 0.0), 1.0);
  if (v31 > a2.f32[0])
    v32 = 1.0;
  if (v29 >= a2.f32[0])
    v32 = v30;
  v40 = vmulq_n_f32(v28, v32);
  v33 = vmuls_lane_f32((float)(a7 * 3.1416) / 180.0, a3, 2);
  *((float *)&v18 + 1) = v27;
  DWORD2(v18) = *(_DWORD *)(a11 + 8);
  v39 = v18;
  vfx_script_clock_time();
  *(float *)&v34 = v34;
  v35 = sinf(v38 + (float)(*(float *)&v34 * a8));
  *a13 = v40;
  *a14 = v33;
  *a15 = (float)(v35 * a16) + a17;
  *(_OWORD *)a11 = v39;
  v37 = v41;
  result = v42;
  *(unint64_t *)((char *)v37.n128_u64 + 4) = *(unint64_t *)((char *)v42.n128_u64 + 4);
  *a12 = v37;
  return result;
}

void __vfx_script_WeatherV134WatchBackground_particleUpdate_225()
{
  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
}

float ParticleUpdate_WeatherV134WatchBackground_particleUpdate_290(float a1, __n128 a2, __n128 a3, double a4, float32x2_t a5, float32x4_t a6, float a7, float a8, uint64_t a9, uint64_t a10, __int128 *a11, float32x4_t *a12, float *a13, float a14)
{
  __int128 v17;
  float result;
  float v19;
  float32x4_t v20;

  v17 = *a11;
  result = a2.n128_f32[1] + a1;
  a2.n128_f32[0] = a2.n128_f32[2] + *(float *)&a4;
  v19 = (float)(a3.n128_f32[1] + vmuls_lane_f32(a3.n128_f32[2] - (float)(a2.n128_f32[2] + *(float *)&a4), a5, 1)) + 0.5;
  if (result <= v19)
    result = v19;
  *(float *)&a4 = a7 * 0.6;
  v20 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a4, 0);
  v20.i32[3] = 1.0;
  *a12 = vmulq_f32(vmulq_laneq_f32(a6, a6, 3), v20);
  *a13 = a14 * a8;
  *((float *)&v17 + 1) = result;
  DWORD2(v17) = a2.n128_u32[0];
  *a11 = v17;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_particleUpdate_290()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_40(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float32_t v28;
  float v29;
  float32x4_t v30;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v27 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v26), 0.0), 1.0);
  v28 = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v29 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v28 - a1.f32[0]), 0.0), 1.0);
  if (v28 > a2.f32[0])
    v29 = 1.0;
  if (v26 >= a2.f32[0])
    v29 = v27;
  *(float *)&a6 = a17 * 0.6;
  v30 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a6, 0);
  v30.i32[3] = 1.0;
  result = vmulq_n_f32(vmulq_f32(vmulq_laneq_f32(a8, a8, 3), v30), v29);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

float __vfx_script_WeatherV134WatchBackground_particleUpdate_40()
{
  float result;

  vfx_script_get_iteration_range();
  vfx_script_get_arguments_buffer();
  return result;
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_486(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = vmulq_laneq_f32(a8, a8, 3);
  a8.f32[0] = a17 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a8.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_486()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_68(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, __n128 a5, double a6, float a7, float32x4_t a8, uint64_t a9, uint64_t a10, _OWORD *a11, __n128 *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  __n128 v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a12;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5.n128_f32[0];
  a5.n128_f32[0] = -(float)(*(float *)&a6
                          + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a6, 1), *(float32x2_t *)&a6).f32[0]
                                  * a7));
  v26 = vmulq_laneq_f32(a8, a8, 3);
  a8.f32[0] = a17 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a8.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  *a13 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a7, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  a5.n128_u32[1] = v22.n128_u32[1];
  a5.n128_u32[2] = v22.n128_u32[2];
  *a12 = a5;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_68()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleUpdate_WeatherV134WatchBackground_particleUpdate_191(float a1, float a2, double a3, float a4, float a5, float a6, float a7, float a8, uint64_t a9, uint64_t a10, unsigned int a11, float *a12, float a13)
{
  float v17;
  float v18;
  BOOL v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float result;

  v17 = (float)(a4 + a5) + a6;
  v18 = fabsf(v17);
  v19 = v18 > 0.00000011921;
  v20 = 0.0;
  if (v18 > 0.00000011921)
    v21 = (float)(a4 + a5) / v17;
  else
    v21 = 0.0;
  if (v19)
    v20 = a4 / v17;
  v22 = a1 * a2;
  v23 = vmuls_lane_f32(a2, *(float32x2_t *)&a3, 1);
  if (*(float *)&a3 != 0.0)
    v22 = v23;
  v24 = fminf(fmaxf((float)(a7 - v21) / (float)(1.0 - v21), 0.0), 1.0);
  v25 = fminf(fmaxf((float)(a7 - v20) / (float)((float)(a4 + a8) - v20), 0.0), 1.0);
  if (*(float *)&a3 == 0.0)
    v25 = v24;
  v26 = v22 * (float)(1.0 - v25);
  if ((float)((float)(*(float *)&a3 + (float)((float)(1.0 - *(float *)&a3) * (float)((float)(a11 % 0x41) / 65.0))) * v20) >= a7)
    v23 = 0.0;
  if (v20 <= a7)
    v23 = v26;
  else
    v22 = v23;
  if (v21 < a7)
    v22 = v26;
  if (*(float *)&a3 != 0.0)
    v22 = v23;
  result = v22 * a13;
  *a12 = result;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_191()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_WeatherV134WatchBackground_particleUpdate_387(float32x4_t a1, float32x4_t a2, __n128 a3, float a4, float a5, float32x4_t a6, float a7, double a8, uint64_t a9, uint64_t a10, _OWORD *a11, float32x4_t *a12, float32x4_t *a13, float *a14, uint64_t a15, uint64_t a16, float a17, uint64_t a18, float a19, uint64_t a20,float32x2_t a21)
{
  __int128 v21;
  float32x4_t v22;
  float v23;
  float v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  float v30;
  float v31;
  float32x4_t result;

  v22 = *a13;
  if ((vmovn_s32(vcgtq_f32(a2, a1)).u8[0] & 1) != 0)
    v23 = -a1.f32[0];
  else
    v23 = a2.f32[0];
  if (v23 >= (float)-a1.f32[0])
    *(float *)&v21 = v23;
  else
    *(float *)&v21 = a1.f32[0];
  v24 = a3.n128_f32[1] + a4;
  v25 = a3.n128_f32[2] + a5;
  v26 = vmulq_laneq_f32(a6, a6, 3);
  a6.f32[0] = a7 * 0.6;
  v27 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a6.f32, 0);
  v27.i32[3] = 1.0;
  v28 = vmulq_f32(v26, v27);
  v29 = (float)(0.075 * a1.f32[0]) - a1.f32[0];
  v30 = fminf(fmaxf(vaddq_f32(a1, a2).f32[0] / (float)(a1.f32[0] + v29), 0.0), 1.0);
  v27.f32[0] = a1.f32[0] - (float)(0.075 * a1.f32[0]);
  v31 = fminf(fmaxf(vsubq_f32(a2, a1).f32[0] / (float)(v27.f32[0] - a1.f32[0]), 0.0), 1.0);
  if (v27.f32[0] > a2.f32[0])
    v31 = 1.0;
  if (v29 >= a2.f32[0])
    v31 = v30;
  result = vmulq_n_f32(v28, v31);
  v28.f32[0] = -(float)(*(float *)&a8
                      + (float)(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&a8, 1), *(float32x2_t *)&a8).f32[0]
                              * a17));
  *a12 = result;
  *a14 = a19 * vmlas_n_f32(a21.f32[0], a17, vsub_f32((float32x2_t)vdup_lane_s32((int32x2_t)a21, 1), a21).f32[0]);
  *((float *)&v21 + 1) = v24;
  *((float *)&v21 + 2) = v25;
  *a11 = v21;
  v28.i32[1] = v22.i32[1];
  v28.i32[2] = v22.i32[2];
  *a13 = v28;
  return result;
}

uint64_t __vfx_script_WeatherV134WatchBackground_particleUpdate_387()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

char **__vfx_get_script_table_WeatherV134WatchBackground()
{
  return &__vfx_get_script_table_WeatherV134WatchBackground::scriptTable;
}

void sub_1AFB65064(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1AFB65370(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1AFB658CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AFB668A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AFB66B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void *__Block_byref_object_copy__28(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__29(uint64_t a1)
{

}

void sub_1AFB67644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n64 _convertToRGBfFromSRGB8_fast(__int16 a1)
{
  __n64 result;

  result.n64_u32[0] = _CLKUIDecodeSRGBTable[a1];
  result.n64_u32[1] = _CLKUIDecodeSRGBTable[HIBYTE(a1)];
  return result;
}

double _convertToRGBfFromSRGBf_fast(double a1)
{
  double v1;

  LODWORD(v1) = _CLKUIDecodeSRGBTable[(float)(255.0 * *(float *)&a1)];
  HIDWORD(v1) = _CLKUIDecodeSRGBTable[vmuls_lane_f32(255.0, *(float32x2_t *)&a1, 1)];
  return v1;
}

double CLKUIConvertToRGBfFromXRSRGBf(int8x16_t a1)
{
  int8x16_t v1;
  int8x16_t v2;
  float32x4_t v8;
  double result;
  unsigned __int128 v10;
  float32x4_t v11;

  v1.i64[0] = 0x8000000080000000;
  v1.i64[1] = 0x8000000080000000;
  v2 = vandq_s8(a1, v1);
  __asm { FMOV            V1.4S, #1.0 }
  v10 = *(_OWORD *)&a1 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL);
  v11 = (float32x4_t)vandq_s8(vorrq_s8(v2, _Q1), vorrq_s8((int8x16_t)vcltzq_f32((float32x4_t)a1), (int8x16_t)vcgtzq_f32((float32x4_t)a1)));
  v8 = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3D25AEE6u), (float32x4_t)v10), (int8x16_t)vdivq_f32((float32x4_t)v10, (float32x4_t)vdupq_n_s32(0x414EB852u)), (int8x16_t)_simd_pow_f4((simd_float4)vdivq_f32(vaddq_f32((float32x4_t)v10, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), (float32x4_t)vdupq_n_s32(0x3F870A3Du)), (simd_float4)vdupq_n_s64(0x4019999A4019999AuLL)));
  v8.i32[3] = HIDWORD(v10);
  *(_QWORD *)&result = vmulq_f32(v11, v8).u64[0];
  return result;
}

double CLKUIConvertToXRSRGBfFromRGBf(int8x16_t a1)
{
  int8x16_t v1;
  int8x16_t v2;
  float32x4_t v8;
  double result;
  unsigned __int128 v10;
  float32x4_t v11;

  v1.i64[0] = 0x8000000080000000;
  v1.i64[1] = 0x8000000080000000;
  v2 = vandq_s8(a1, v1);
  __asm { FMOV            V1.4S, #1.0 }
  v10 = *(_OWORD *)&a1 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL);
  v11 = (float32x4_t)vandq_s8(vorrq_s8(v2, _Q1), vorrq_s8((int8x16_t)vcltzq_f32((float32x4_t)a1), (int8x16_t)vcgtzq_f32((float32x4_t)a1)));
  v8 = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3B4D2C6Eu), (float32x4_t)v10), (int8x16_t)vmulq_f32((float32x4_t)v10, (float32x4_t)vdupq_n_s32(0x414EB852u)), (int8x16_t)vmlaq_f32((float32x4_t)vdupq_n_s32(0xBD6147AE), (float32x4_t)vdupq_n_s32(0x3F870A3Du), (float32x4_t)_simd_pow_f4((simd_float4)v10, (simd_float4)vdupq_n_s64(0x3ED555553ED55555uLL))));
  v8.i32[3] = HIDWORD(v10);
  *(_QWORD *)&result = vmulq_f32(v11, v8).u64[0];
  return result;
}

double CLKUIConvertToRGBfFromSRGBf_fast(float32x4_t a1)
{
  __asm { FMOV            V1.4S, #1.0 }
  return _convertToRGBfFromSRGBf_fast(*(double *)vminnmq_f32(vmaxnmq_f32(a1, (float32x4_t)0), _Q1).i64);
}

__n64 CLKUIConvertToSRGBfFromRGBf_fast(float32x4_t a1)
{
  unint64_t v6;
  __n64 result;

  __asm { FMOV            V1.4S, #1.0 }
  v6 = vmulq_f32(vminnmq_f32(vmaxnmq_f32(a1, (float32x4_t)0), _Q1), (float32x4_t)vdupq_n_s32(0x45CDF000u)).u64[0];
  result.n64_u32[0] = _CLKUIEncodeSRGBTable[*(float *)&v6];
  result.n64_u32[1] = _CLKUIEncodeSRGBTable[*((float *)&v6 + 1)];
  return result;
}

uint64_t CLKUIConvertToSRGB8FromRGBf_fast(float32x4_t a1)
{
  float32x4_t v1;
  int8x16_t v2;
  int v3;

  v1 = vmulq_f32(a1, (float32x4_t)vdupq_n_s32(0x45CDF000u));
  v1.i32[0] = _CLKUIEncodeSRGBTable[v1.f32[0]];
  v1.i32[1] = _CLKUIEncodeSRGBTable[v1.f32[1]];
  v1.i32[2] = _CLKUIEncodeSRGBTable[v1.f32[2]];
  v1.i32[3] = a1.i32[3];
  v2 = (int8x16_t)vmulq_f32(v1, (float32x4_t)vdupq_n_s32(0x437F0000u));
  v3 = (int)*(float *)v2.i32;
  v2.i32[0] = vextq_s8(v2, v2, 8uLL).i32[1];
  *(uint32x2_t *)v2.i8 = vshl_u32((uint32x2_t)vcvt_s32_f32(*(float32x2_t *)v2.i8), (uint32x2_t)0x800000018);
  return v2.i32[0] | ((int)*(float *)&v2.i32[2] << 16) | v3 | v2.i32[1];
}

__n64 CLKUIConvertToRGBfFromSRGB8_fast(__int16 a1)
{
  __n64 result;

  result.n64_u32[0] = _CLKUIDecodeSRGBTable[a1];
  result.n64_u32[1] = _CLKUIDecodeSRGBTable[HIBYTE(a1)];
  return result;
}

double CLKUIConvertToRGBfFromUIColor_fast(void *a1)
{
  float64x2_t v1;
  float64x2_t v2;
  float64_t v4;
  float64_t v5;
  float64_t v6;
  float64_t v7;

  v6 = 0.0;
  v7 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v7, &v6, &v5, &v4);
  v1.f64[0] = v7;
  v2.f64[0] = v5;
  v1.f64[1] = v6;
  v2.f64[1] = v4;
  return _convertToRGBfFromSRGBf_fast(*(double *)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v1), v2).i64);
}

uint64_t CLKUIConvertToUIColorFromRGBf_fast(float32x4_t a1)
{
  float32x4_t v1;

  v1 = vmulq_f32(a1, (float32x4_t)vdupq_n_s32(0x45CDF000u));
  return objc_msgSend(MEMORY[0x1E0DC3658], "colorWithRed:green:blue:alpha:", *(float *)&_CLKUIEncodeSRGBTable[v1.f32[0]], *(float *)&_CLKUIEncodeSRGBTable[v1.f32[1]], *(float *)&_CLKUIEncodeSRGBTable[v1.f32[2]], a1.f32[3]);
}

int8x16_t CLKUIConvertToRGBfFromUIColor(void *a1)
{
  float64x2_t v1;
  float64x2_t v2;
  int8x16_t result;
  float32x4_t v4;
  __int32 v5;
  float64_t v6;
  float64_t v7;
  float64_t v8;
  float64_t v9;

  v8 = 0.0;
  v9 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v9, &v8, &v7, &v6);
  v1.f64[0] = v9;
  v2.f64[0] = v7;
  v1.f64[1] = v8;
  v2.f64[1] = v6;
  v4 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v1), v2);
  v5 = vcvt_f32_f64(v2).i32[1];
  result = (int8x16_t)_simd_pow_f4((simd_float4)vdivq_f32(vaddq_f32(v4, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), (float32x4_t)vdupq_n_s32(0x3F870A3Du)), (simd_float4)vdupq_n_s64(0x4019999A4019999AuLL));
  result.i64[0] = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3D25AEE6u), v4), (int8x16_t)vdivq_f32(v4, (float32x4_t)vdupq_n_s32(0x414EB852u)), result).u64[0];
  result.i32[3] = v5;
  return result;
}

uint64_t CLKUIConvertToUIColorFromRGBf(float32x4_t a1)
{
  int8x16_t v1;

  v1 = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3B4D2C6Eu), a1), (int8x16_t)vmulq_f32(a1, (float32x4_t)vdupq_n_s32(0x414EB852u)), (int8x16_t)vmlaq_f32((float32x4_t)vdupq_n_s32(0xBD6147AE), (float32x4_t)vdupq_n_s32(0x3F870A3Du), (float32x4_t)_simd_pow_f4((simd_float4)a1, (simd_float4)vdupq_n_s64(0x3ED555553ED55555uLL))));
  return objc_msgSend(MEMORY[0x1E0DC3658], "colorWithRed:green:blue:alpha:", *(float *)v1.i32, *(float *)&v1.i32[1], *(float *)&v1.i32[2], a1.f32[3]);
}

int8x16_t CLKUIConvertToRGBfFromUIColor_dynamic(void *a1)
{
  BOOL v1;
  float64x2_t v2;
  float64x2_t v3;
  float32x4_t v4;
  BOOL v5;
  BOOL v6;
  int8x16_t result;
  float32x4_t v8;
  float64_t v9;
  double v10;
  double v11;
  double v12;

  v12 = 0.0;
  v10 = 0.0;
  v11 = 0.0;
  v9 = 0.0;
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v12, &v11, &v10, &v9);
  v1 = v12 >= 0.0 && v12 <= 1.0;
  v2.f64[0] = v12;
  v2.f64[1] = v11;
  v3.f64[0] = v10;
  v3.f64[1] = v9;
  v4 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v2), v3);
  if (v1 && (v11 >= 0.0 ? (v5 = v11 <= 1.0) : (v5 = 0), v5 && (v10 >= 0.0 ? (v6 = v10 <= 1.0) : (v6 = 0), v6)))
  {
    *(double *)result.i64 = _convertToRGBfFromSRGBf_fast(*(double *)v4.i64);
  }
  else
  {
    v8 = v4;
    result = (int8x16_t)_simd_pow_f4((simd_float4)vdivq_f32(vaddq_f32(v4, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), (float32x4_t)vdupq_n_s32(0x3F870A3Du)), (simd_float4)vdupq_n_s64(0x4019999A4019999AuLL));
    result.i64[0] = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3D25AEE6u), v8), (int8x16_t)vdivq_f32(v8, (float32x4_t)vdupq_n_s32(0x414EB852u)), result).u64[0];
    result.i32[3] = v8.i32[3];
  }
  return result;
}

uint64_t CLKUIConvertToUIColorFromRGBf_dynamic(float32x4_t a1)
{
  float v1;
  BOOL v2;
  BOOL v3;
  BOOL v4;
  float32x4_t v5;
  int8x16_t v6;
  float32x4_t v8;

  v1 = a1.f32[3];
  v2 = a1.f32[0] >= 0.0 && a1.f32[0] <= 1.0;
  if (v2
    && (a1.f32[1] >= 0.0 ? (v3 = a1.f32[1] <= 1.0) : (v3 = 0),
        v3 && (a1.f32[2] >= 0.0 ? (v4 = a1.f32[2] <= 1.0) : (v4 = 0), v4)))
  {
    v8 = vmulq_f32(a1, (float32x4_t)vdupq_n_s32(0x45CDF000u));
    v6.i32[0] = _CLKUIEncodeSRGBTable[v8.f32[0]];
    v6.i32[1] = _CLKUIEncodeSRGBTable[v8.f32[1]];
    v6.i32[2] = _CLKUIEncodeSRGBTable[v8.f32[2]];
  }
  else
  {
    v5 = (float32x4_t)_simd_pow_f4((simd_float4)a1, (simd_float4)vdupq_n_s64(0x3ED555553ED55555uLL));
    v1 = a1.f32[3];
    v6 = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)vdupq_n_s32(0x3B4D2C6Eu), a1), (int8x16_t)vmulq_f32(a1, (float32x4_t)vdupq_n_s32(0x414EB852u)), (int8x16_t)vmlaq_f32((float32x4_t)vdupq_n_s32(0xBD6147AE), (float32x4_t)vdupq_n_s32(0x3F870A3Du), v5));
  }
  return objc_msgSend(MEMORY[0x1E0DC3658], "colorWithRed:green:blue:alpha:", *(float *)v6.i32, *(float *)&v6.i32[1], *(float *)&v6.i32[2], v1);
}

float CLKUIConvertToRGBFromSRGB_fast(float a1)
{
  return *(float *)&_CLKUIDecodeSRGBTable[(float)(a1 * 255.0)];
}

float CLKUIConvertToSRGBFromRGB_fast(float a1)
{
  return *(float *)&_CLKUIEncodeSRGBTable[(float)(a1 * 6590.0)];
}

uint64_t _CLKUIRawImageGenerateMipmapsSRGB8(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  _DWORD *v3;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  unint64_t v12;
  int *v13;
  int *v14;
  int *v15;
  int v16;
  int v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  int v21;
  float32x4_t v22;

  if ((int)a2 >= 2)
  {
    v2 = result;
    v3 = (_DWORD *)(result + 4 * a2 * a2);
    __asm { FMOV            V4.4S, #0.25 }
    v22 = _Q4;
    do
    {
      v9 = 0;
      v10 = a2;
      v11 = v3;
      v12 = a2;
      do
      {
        v13 = (int *)(v2 + 4 * v9 * v12);
        v14 = &v13[v12];
        do
        {
          v15 = &v13[v10];
          v16 = *v13;
          v17 = v13[1];
          v13 += 2;
          v18.i32[0] = _CLKUIDecodeSRGBTable[v16];
          v18.i32[1] = _CLKUIDecodeSRGBTable[BYTE1(v16)];
          v18.i32[2] = _CLKUIDecodeSRGBTable[BYTE2(v16)];
          v18.f32[3] = (float)HIBYTE(v16) / 255.0;
          v19.i32[0] = _CLKUIDecodeSRGBTable[v17];
          v19.i32[1] = _CLKUIDecodeSRGBTable[BYTE1(v17)];
          v19.i32[2] = _CLKUIDecodeSRGBTable[BYTE2(v17)];
          v19.f32[3] = (float)HIBYTE(v17) / 255.0;
          v20 = vaddq_f32(v18, v19);
          v21 = *v15;
          LODWORD(v15) = v15[1];
          v19.i32[0] = _CLKUIDecodeSRGBTable[v21];
          v19.i32[1] = _CLKUIDecodeSRGBTable[BYTE1(v21)];
          v19.i32[2] = _CLKUIDecodeSRGBTable[BYTE2(v21)];
          v19.f32[3] = (float)HIBYTE(v21) / 255.0;
          v18.i32[0] = _CLKUIDecodeSRGBTable[v15];
          v18.i32[1] = _CLKUIDecodeSRGBTable[BYTE1(v15)];
          v18.i32[2] = _CLKUIDecodeSRGBTable[BYTE2(v15)];
          v18.f32[3] = (float)BYTE3(v15) / 255.0;
          result = CLKUIConvertToSRGB8FromRGBf_fast(vmulq_f32(vaddq_f32(vaddq_f32(v20, v19), v18), _Q4));
          _Q4 = v22;
          *v11++ = result;
        }
        while (v13 < v14);
        v9 += 2;
      }
      while (v9 < v12);
      v2 += 4 * (v12 * v12);
      a2 = v12 >> 1;
      v3 += a2 * a2;
    }
    while (v12 > 3);
  }
  return result;
}

uint64_t _CLKUIRawImageWriteToFileSRGB8(const void *a1, int a2, int a3, void *a4)
{
  id v7;
  CGDataProvider *v8;
  CGColorSpace *v9;
  CGImage *v10;
  UIImage *v11;
  void *v12;

  v7 = a4;
  v8 = CGDataProviderCreateWithData(0, a1, 4 * a2 * a3, 0);
  v9 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
  v10 = CGImageCreate(a2, a3, 8uLL, 0x20uLL, 4 * a2, v9, 0, v8, 0, 0, kCGRenderingIntentDefault);
  objc_msgSend(MEMORY[0x1E0DC3870], "imageWithCGImage:", v10);
  v11 = (UIImage *)objc_claimAutoreleasedReturnValue();
  UIImagePNGRepresentation(v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "writeToFile:atomically:", v7, 1);
  CGImageRelease(v10);
  CGDataProviderRelease(v8);
  CGColorSpaceRelease(v9);

  return 1;
}

void sub_1AFB692AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id CLKUIInterpolateBetweenColors(void *a1, void *a2, float a3)
{
  id v4;
  id v5;
  id v6;
  float32x4_t v7;
  float32x4_t v8;
  void *v9;
  int8x16_t v11;

  v4 = a1;
  v5 = a2;
  if (CLKEqualObjects())
  {
    v6 = v5;
  }
  else
  {
    v11 = CLKUIConvertToRGBfFromUIColor_dynamic(v4);
    v7 = vmlaq_n_f32((float32x4_t)v11, vsubq_f32((float32x4_t)CLKUIConvertToRGBfFromUIColor_dynamic(v5), (float32x4_t)v11), a3);
    v8 = vmulq_f32(v7, (float32x4_t)vdupq_n_s32(0x45CDF000u));
    objc_msgSend(MEMORY[0x1E0DC3658], "colorWithRed:green:blue:alpha:", *(float *)&_CLKUIEncodeSRGBTable[v8.f32[0]], *(float *)&_CLKUIEncodeSRGBTable[v8.f32[1]], *(float *)&_CLKUIEncodeSRGBTable[v8.f32[2]], v7.f32[3]);
    v6 = (id)objc_claimAutoreleasedReturnValue();
  }
  v9 = v6;

  return v9;
}

void sub_1AFB693C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double _CLKUIRGB2LAB(float32x4_t a1)
{
  float32x4_t v1;
  float v2;
  float v3;
  float v4;
  float v5;
  double v6;
  float32x4_t v8;

  v1 = vdivq_f32(vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)xmmword_1B000CB50, *(float32x2_t *)a1.f32, 1), (float32x4_t)xmmword_1B000CB60, a1.f32[0]), (float32x4_t)xmmword_1B000CB70, a1, 2), (float32x4_t)xmmword_1B000CB80);
  v8 = v1;
  if (v1.f32[0] >= 0.0088565)
  {
    v3 = powf(v1.f32[0], 0.33333);
    v1 = v8;
    v2 = v3;
  }
  else
  {
    v2 = (float)(v1.f32[0] * 7.787) + 0.13793;
  }
  if (v1.f32[1] >= 0.0088565)
  {
    v5 = powf(v1.f32[1], 0.33333);
    v1.i32[2] = v8.i32[2];
    v4 = v5;
  }
  else
  {
    v4 = (float)(v1.f32[1] * 7.787) + 0.13793;
  }
  if (v1.f32[2] >= 0.0088565)
    powf(v1.f32[2], 0.33333);
  *(float *)&v6 = (float)(v4 * 116.0) + -16.0;
  *((float *)&v6 + 1) = (float)(v2 - v4) * 500.0;
  return v6;
}

double _CLKUILAB2RGB(float32x4_t _Q0)
{
  float v9;
  float32x4_t v10;
  double result;

  _S1 = 990057071;
  __asm { FMLA            S3, S1, V0.S[1] }
  _S1 = -1146890486;
  _D3.i32[1] = vmlas_n_f32(0.13793, 0.0086207, _Q0.f32[0]);
  __asm { FMLA            S2, S1, V0.S[2] }
  *(int8x8_t *)_Q0.f32 = vbsl_s8((int8x8_t)vcge_f32(_D3, (float32x2_t)vdup_n_s32(0x3E53DCB1u)), (int8x8_t)vmul_f32(_D3, vmul_f32(_D3, _D3)), (int8x8_t)vmul_f32(vadd_f32(_D3, (float32x2_t)vdup_n_s32(0xBE0D3DCB)), (float32x2_t)vdup_n_s32(0x3E038027u)));
  v9 = _S2 * (float)(_S2 * _S2);
  if (_S2 < 0.2069)
    v9 = (float)(_S2 + -0.13793) * 0.12842;
  _Q0.f32[2] = v9;
  v10 = vmulq_f32(_Q0, (float32x4_t)xmmword_1B000CB80);
  *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)xmmword_1B000CB90, *(float32x2_t *)v10.f32, 1), (float32x4_t)xmmword_1B000CBA0, v10.f32[0]), (float32x4_t)xmmword_1B000CBB0, v10, 2).u64[0];
  return result;
}

__n128 CLKUIConvertRGBtoLAB(float32x4_t a1)
{
  __n128 result;
  unsigned __int32 v2;

  v2 = a1.u32[3];
  result.n128_f64[0] = _CLKUIRGB2LAB(a1);
  result.n128_u32[3] = v2;
  return result;
}

__n128 CLKUIConvertLABtoRGB(float32x4_t a1)
{
  __n128 result;
  unsigned __int32 v2;

  v2 = a1.u32[3];
  result.n128_f64[0] = _CLKUILAB2RGB(a1);
  result.n128_u32[3] = v2;
  return result;
}

double CLKUILightnessForColor(void *a1)
{
  float32x4_t v1;

  v1 = (float32x4_t)CLKUIConvertToRGBfFromUIColor_dynamic(a1);
  return _CLKUIRGB2LAB(v1);
}

uint64_t CLKUICompareColorsByLightness(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  float32x4_t v6;
  float32x4_t v7;
  unsigned __int8 v8;
  unsigned __int16 v9;
  int8x16_t v11;
  int8x16_t v12;
  float32x4_t v13;

  v3 = a1;
  v4 = a2;
  if ((objc_msgSend(v3, "isEqual:", v4) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    v12 = CLKUIConvertToRGBfFromUIColor_dynamic(v3);
    v11 = CLKUIConvertToRGBfFromUIColor_dynamic(v4);
    *(double *)v6.i64 = _CLKUIRGB2LAB((float32x4_t)v12);
    v13 = v6;
    *(double *)v7.i64 = _CLKUIRGB2LAB((float32x4_t)v11);
    v8 = vmovn_s32(vcgtq_f32(v13, v7)).u8[0];
    v9 = vmovn_s32(vcgtq_f32(v7, v13)).u16[0];
    if ((v8 & 1) != 0)
      v5 = 1;
    else
      v5 = (uint64_t)((unint64_t)v9 << 63) >> 63;
  }

  return v5;
}

void sub_1AFB69710(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id CLKGetBytesFromImage(void *a1, size_t a2, size_t a3, uint64_t a4, size_t a5, CGColorSpace *a6, uint32_t a7)
{
  CGImage *v13;
  size_t v14;
  void *v15;
  CGContext *v16;
  void *v17;
  CGRect v19;

  v13 = (CGImage *)objc_msgSend(objc_retainAutorelease(a1), "CGImage");
  v14 = a4 * a2;
  v15 = malloc_type_calloc(v14 * a3, 1uLL, 0x100004077774924uLL);
  v16 = CGBitmapContextCreate(v15, a2, a3, a5, v14, a6, a7);
  v19.size.width = (double)a2;
  v19.size.height = (double)a3;
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  CGContextDrawImage(v16, v19, v13);
  CGContextRelease(v16);
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", v15, v14 * a3);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  free(v15);
  return v17;
}

id CLKCreateImageFromBytes(UInt8 *bytes, size_t a2, size_t a3, uint64_t a4, size_t a5, CGColorSpace *a6, CGBitmapInfo a7)
{
  size_t v13;
  const __CFData *v14;
  CGDataProvider *v15;
  CGImage *v16;
  void *v17;

  v13 = a4 * a2;
  v14 = CFDataCreate(0, bytes, a4 * a2 * a3);
  v15 = CGDataProviderCreateWithCFData(v14);
  v16 = CGImageCreate(a2, a3, a5, a5 * a4, v13, a6, a7, v15, 0, 0, kCGRenderingIntentDefault);
  CGDataProviderRelease(v15);
  CFRelease(v14);
  objc_msgSend(MEMORY[0x1E0DC3870], "imageWithCGImage:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  CGImageRelease(v16);
  return v17;
}

void sub_1AFB698F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t _CLKTextureCoordinateToRgb(double a1)
{
  return (int)((a1 + 1.0) * 127.5);
}

double _CLKIntensityForPixel(int32x4_t a1)
{
  return vaddq_f32((float32x4_t)vdupq_laneq_s32(a1, 2), vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.i8, 1), (float32x4_t)a1)).f32[0]/ 3.0;
}

unint64_t _CLKClamp(uint64_t a1, unint64_t a2)
{
  if (a1 <= a2)
    return a1 & ~(a1 >> 63);
  else
    return a2;
}

double _CLKPixelAtPosition(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint8x8_t a6)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = a2 - 1;
  if (a2 - 1 >= (unint64_t)a4)
    v6 = a4 & ~(a4 >> 63);
  v7 = a3 - 1;
  if (a3 - 1 >= (unint64_t)a5)
    v7 = a5 & ~(a5 >> 63);
  a6.i32[0] = *(_DWORD *)&a1[4 * v6 + 4 * v7 * a2];
  *(_QWORD *)&result = vcvtq_f32_u32(vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a6))).u64[0];
  return result;
}

double _CLKIntensityForPixelAtPosition(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, float a7, float a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;

  v8 = a2 - 1;
  if (a2 - 1 >= (unint64_t)a4)
    v8 = a4 & ~(a4 >> 63);
  v9 = a3 - 1;
  if (a3 - 1 >= (unint64_t)a5)
    v9 = a5 & ~(a5 >> 63);
  v10 = &a1[4 * v8 + 4 * v9 * a2];
  LOBYTE(a6) = *v10;
  LOBYTE(a7) = v10[1];
  LOBYTE(a8) = v10[2];
  return (float)((float)((float)LODWORD(a6) + (float)LODWORD(a7)) + (float)LODWORD(a8)) / 3.0;
}

double _CLKCalculateNormal(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, float a7, float a8, float a9, float a10, float a11, float a12, float a13)
{
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  float v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  float v28;
  float v29;
  double v30;
  unint64_t v31;
  unsigned __int8 *v32;
  float v33;
  float v34;
  double v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  unsigned int v39;
  double v40;
  unsigned __int8 *v41;
  float v42;
  float v43;
  double v44;
  unsigned __int8 *v45;
  unsigned int v46;
  unsigned int v47;
  double v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned int v51;
  double v52;
  unsigned __int8 *v53;
  double v54;
  unsigned int v55;
  unsigned int v56;
  float32x4_t v57;
  int32x4_t v58;
  float32x2_t v59;
  float32x2_t v60;
  double result;

  v16 = a5 - 1;
  v17 = a2 - 1;
  if (a2 - 1 >= (unint64_t)(a4 - 1))
    v18 = (a4 - 1) & ~((a4 - 1) >> 63);
  else
    v18 = a2 - 1;
  v19 = a3 - 1;
  v20 = v16 & ~(v16 >> 63);
  if (a3 - 1 < (unint64_t)v16)
    v20 = a3 - 1;
  v21 = v20 * a2;
  v22 = &a1[4 * v21 + 4 * v18];
  LOBYTE(a6) = *v22;
  LOBYTE(a7) = v22[1];
  LOBYTE(a8) = v22[2];
  v23 = (float)LODWORD(a8);
  v24 = (float)((float)((float)LODWORD(a6) + (float)LODWORD(a7)) + v23) / 3.0;
  v25 = a5 & ~(a5 >> 63);
  if (v19 < a5)
    v25 = a3 - 1;
  v26 = v25 * a2;
  v27 = &a1[4 * v26 + 4 * v18];
  LOBYTE(v23) = *v27;
  LOBYTE(a9) = v27[1];
  v28 = (float)LODWORD(a9);
  LOBYTE(a10) = v27[2];
  v29 = (float)LODWORD(a10);
  v30 = (float)((float)((float)LODWORD(v23) + v28) + v29) / 3.0;
  if (v19 >= a5 + 1)
    v19 = (a5 + 1) & ~((a5 + 1) >> 63);
  v31 = v19 * a2;
  v32 = &a1[4 * v31 + 4 * v18];
  LOBYTE(v28) = *v32;
  LOBYTE(v29) = v32[1];
  v33 = (float)LODWORD(v29);
  LOBYTE(a11) = v32[2];
  v34 = (float)LODWORD(a11);
  v35 = (float)((float)((float)LODWORD(v28) + v33) + v34) / 3.0;
  v36 = a4 & ~(a4 >> 63);
  if (v17 < a4)
    v36 = a2 - 1;
  v37 = &a1[4 * v21 + 4 * v36];
  LOBYTE(v33) = *v37;
  LOBYTE(v34) = v37[1];
  *(float *)&v38 = (float)LODWORD(v34);
  LOBYTE(a12) = v37[2];
  *(float *)&v39 = (float)LODWORD(a12);
  v40 = (float)((float)((float)LODWORD(v33) + *(float *)&v38) + *(float *)&v39) / 3.0;
  v41 = &a1[4 * v31 + 4 * v36];
  LOBYTE(v38) = *v41;
  LOBYTE(v39) = v41[1];
  v42 = (float)v39;
  LOBYTE(a13) = v41[2];
  v43 = (float)LODWORD(a13);
  v44 = (float)((float)((float)v38 + v42) + v43) / 3.0;
  if (v17 >= a4 + 1)
    v17 = (a4 + 1) & ~((a4 + 1) >> 63);
  v45 = &a1[4 * v21 + 4 * v17];
  LOBYTE(v42) = *v45;
  LOBYTE(v43) = v45[1];
  *(float *)&v46 = (float)LODWORD(v43);
  LOBYTE(v13) = v45[2];
  *(float *)&v47 = (float)v13;
  v48 = (float)((float)((float)LODWORD(v42) + *(float *)&v46) + *(float *)&v47) / 3.0;
  v49 = &a1[4 * v26 + 4 * v17];
  LOBYTE(v46) = *v49;
  LOBYTE(v47) = v49[1];
  *(float *)&v50 = (float)v47;
  LOBYTE(v14) = v49[2];
  *(float *)&v51 = (float)v14;
  v52 = (float)((float)((float)v46 + *(float *)&v50) + *(float *)&v51) / 3.0;
  v53 = &a1[4 * v31 + 4 * v17];
  LOBYTE(v50) = *v53;
  LOBYTE(v51) = v53[1];
  LOBYTE(v15) = v53[2];
  v54 = (float)((float)((float)v50 + (float)v51) + (float)v15) / 3.0;
  *(float *)&v55 = v48 + v52 * 2.0 + v54 - (v24 + v30 * 2.0 + v35);
  *(float *)&v56 = v35 + v44 * 2.0 + v54 - (v24 + v40 * 2.0 + v48);
  v57.i64[1] = 0x3F0000003F000000;
  v57.i64[0] = __PAIR64__(v56, v55);
  v58 = (int32x4_t)vmulq_f32(v57, v57);
  v58.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v58, 2), vadd_f32(*(float32x2_t *)v58.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v58.i8, 1))).u32[0];
  v59 = vrsqrte_f32((float32x2_t)v58.u32[0]);
  v60 = vmul_f32(v59, vrsqrts_f32((float32x2_t)v58.u32[0], vmul_f32(v59, v59)));
  *(_QWORD *)&result = vmulq_n_f32(v57, vmul_f32(v60, vrsqrts_f32((float32x2_t)v58.u32[0], vmul_f32(v60, v60))).f32[0]).u64[0];
  return result;
}

char *_CLKGenerateNormalMap(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v8;
  double v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  float v21;
  char *v23;

  v23 = (char *)malloc_type_malloc(a3 * a2 * a4, 0x100004077774924uLL);
  if (a2)
  {
    v16 = 0;
    v17 = v23 + 3;
    do
    {
      if (a3)
      {
        v18 = 0;
        v19 = v17;
        do
        {
          v20 = _CLKCalculateNormal(a1, a2, a3, v16, v18, *(float *)&v8, *(float *)&v9, v10, v11, v12, v13, v14, v15);
          *(v19 - 3) = (int)((*(float *)&v20 + 1.0) * 127.5);
          v9 = (*((float *)&v20 + 1) + 1.0) * 127.5;
          v8 = (v21 + 1.0) * 127.5;
          *(v19 - 2) = (int)v9;
          *(v19 - 1) = (int)v8;
          *v19 = 1;
          ++v18;
          v19 += a4 * a2;
        }
        while (a3 != v18);
      }
      ++v16;
      v17 += a4;
    }
    while (v16 != a2);
  }
  return v23;
}

id CLKGenerateNormalMapFromImageInRGBA8(void *a1)
{
  id v1;
  CGImage *v2;
  size_t Width;
  size_t Height;
  CGColorSpace *v5;
  void *v6;
  id v7;
  char *v8;
  void *v9;

  v1 = objc_retainAutorelease(a1);
  v2 = (CGImage *)objc_msgSend(v1, "CGImage");
  Width = CGImageGetWidth(v2);
  Height = CGImageGetHeight(v2);
  v5 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
  CLKGetBytesFromImage(v1, Width, Height, 4, 8uLL, v5, 0x4001u);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  CGColorSpaceRelease(v5);
  v7 = objc_retainAutorelease(v6);
  v8 = _CLKGenerateNormalMap((unsigned __int8 *)objc_msgSend(v7, "bytes"), Width, Height, 4);
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", v8, 4 * Width * Height);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  free(v8);

  return v9;
}

void sub_1AFB69E68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id CLKUIConvertUIImageToMTLTexture(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  CGImage *v5;
  size_t Width;
  size_t Height;
  size_t BytesPerRow;
  size_t BitsPerPixel;
  void *v10;
  size_t v11;
  size_t v12;
  CGDataProvider *DataProvider;
  const __CFData *v14;
  const __CFData *v15;
  const UInt8 *BytePtr;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v25;
  id v26;
  _QWORD aBlock[4];
  id v28;
  id v29;
  size_t v30;
  size_t v31;
  size_t v32;
  _QWORD block[10];

  v3 = a1;
  +[CLKUIMetalResourceManager sharedDevice](CLKUIMetalResourceManager, "sharedDevice", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_retainAutorelease(v3);
  v5 = (CGImage *)objc_msgSend(v25, "CGImage");
  Width = CGImageGetWidth(v5);
  Height = CGImageGetHeight(v5);
  BytesPerRow = CGImageGetBytesPerRow(v5);
  BitsPerPixel = CGImageGetBitsPerPixel(v5);
  if ((BitsPerPixel & 7) != 0)
    __assert_rtn("CLKUIConvertUIImageToMTLTexture", "CLKUIImageUtilities.mm", 1302, "bitsPerPixel % 8 == 0");
  +[MetalDeviceInfo sharedInfo](MetalDeviceInfo, "sharedInfo");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = BitsPerPixel >> 3;
  v12 = (BitsPerPixel >> 3) * Width;
  v26 = (id)objc_msgSend(v4, "newBufferWithLength:options:", v12 * Height, objc_msgSend(v10, "defaultResourceOptionForDevice:", v4));

  DataProvider = CGImageGetDataProvider(v5);
  v14 = CGDataProviderCopyData(DataProvider);
  v15 = v14;
  if (v14)
  {
    BytePtr = CFDataGetBytePtr(v14);
    v17 = objc_retainAutorelease(v26);
    v18 = objc_msgSend(v17, "contents");
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __CLKUIConvertUIImageToMTLTexture_block_invoke;
    block[3] = &__block_descriptor_72_e8_v16__0Q8l;
    block[4] = BytePtr;
    block[5] = Height;
    block[6] = BytesPerRow;
    block[7] = v18;
    block[8] = v12;
    dispatch_apply(Height, 0, block);
    CFRelease(v15);
    objc_msgSend(MEMORY[0x1E0CC6BB0], "texture2DDescriptorWithPixelFormat:width:height:mipmapped:", a2, Width, Height, 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "setStorageMode:", 2);
    objc_msgSend(v19, "setUsage:", 1);
    v20 = (void *)objc_msgSend(v4, "newTextureWithDescriptor:", v19);
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __CLKUIConvertUIImageToMTLTexture_block_invoke_2;
    aBlock[3] = &unk_1E6075DC8;
    v30 = Width;
    v31 = v11;
    v32 = Height;
    v28 = v17;
    v29 = v20;
    v21 = v20;
    v22 = _Block_copy(aBlock);
    v23 = _Block_copy(v22);

  }
  else
  {
    v23 = 0;
  }

  return v23;
}

void sub_1AFB6A104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1AFB6A224(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void frameBufferReleaseCallback(void *a1, void *a2)
{
  free(a2);
}

id CLKUIConvertMTLTextureToUIImage(void *a1, uint64_t a2, double a3)
{
  id v5;
  void *v6;
  int v7;
  CFStringRef *v8;
  void *v9;
  CGColorSpace *v10;
  CGBitmapInfo v11;
  size_t v12;
  double v13;
  double v14;
  size_t v15;
  void *v16;
  size_t v17;
  CGDataProvider *v18;
  CGImage *v19;
  _QWORD v21[6];

  v5 = a1;
  v6 = v5;
  if (v5)
  {
    v7 = 1398;
    if (a2 > 552)
    {
      if (a2 == 553 || a2 == 555)
      {
        if (objc_msgSend(v5, "pixelFormat", 1398) == 555)
        {
          v10 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D960]);
          v11 = 270336;
          v12 = 10;
LABEL_15:
          v13 = (double)(unint64_t)objc_msgSend(v6, "width");
          v14 = (double)(unint64_t)objc_msgSend(v6, "height");
          v15 = (unint64_t)((double)(unint64_t)(v13 * 4.0) * v14);
          v16 = malloc_type_malloc(v15, 0x5E205D16uLL);
          v17 = vcvtd_n_u64_f64(v13, 2uLL);
          memset(v21, 0, 24);
          v21[3] = (unint64_t)v13;
          v21[4] = (unint64_t)v14;
          v21[5] = 1;
          objc_msgSend(v6, "getBytes:bytesPerRow:fromRegion:mipmapLevel:", v16, v17, v21, 0);
          v18 = CGDataProviderCreateWithData(0, v16, v15, (CGDataProviderReleaseDataCallback)frameBufferReleaseCallback);
          v19 = CGImageCreate((unint64_t)v13, (unint64_t)v14, v12, 0x20uLL, v17, v10, v11, v18, 0, 1, kCGRenderingIntentDefault);
          objc_msgSend(MEMORY[0x1E0DC3870], "imageWithCGImage:scale:orientation:", v19, 0, a3);
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          CGImageRelease(v19);
          CGColorSpaceRelease(v10);
          CGDataProviderRelease(v18);
          goto LABEL_16;
        }
        if (objc_msgSend(v6, "pixelFormat") == 71)
        {
          v8 = (CFStringRef *)MEMORY[0x1E0C9D908];
          goto LABEL_14;
        }
        v7 = 1393;
      }
    }
    else
    {
      if (a2 == 80)
      {
        v8 = (CFStringRef *)MEMORY[0x1E0C9D988];
        goto LABEL_14;
      }
      if (a2 == 81)
      {
        v8 = (CFStringRef *)MEMORY[0x1E0C9DA10];
LABEL_14:
        v10 = CGColorSpaceCreateWithName(*v8);
        v11 = 8194;
        v12 = 8;
        goto LABEL_15;
      }
    }
    __assert_rtn("CLKUIConvertMTLTextureToUIImage", "CLKUIImageUtilities.mm", v7, "NO");
  }
  v9 = 0;
LABEL_16:

  return v9;
}

void sub_1AFB6A480(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id CLKUIShadowImage(void *a1, void *a2, void *a3, double a4, double a5, double a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  CGImage *v23;
  CGColor *v24;
  CGColorSpace *DeviceRGB;
  size_t BitsPerComponent;
  CGContext *v27;
  CGImage *Image;
  CGSize v30;
  CGRect v31;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = v13;
  if (v11)
  {
    if (v13)
      objc_msgSend(v13, "CGSizeValue");
    else
      objc_msgSend(v11, "size");
    v18 = v15;
    v19 = v16;
    v17 = 0;
    if (v15 >= 1.0 && v16 >= 1.0)
    {
      objc_msgSend(v11, "scale");
      v21 = v20;
      v22 = objc_retainAutorelease(v11);
      v23 = (CGImage *)objc_msgSend(v22, "CGImage");
      v24 = (CGColor *)objc_msgSend(objc_retainAutorelease(v12), "CGColor");
      DeviceRGB = CGColorSpaceCreateDeviceRGB();
      BitsPerComponent = CGImageGetBitsPerComponent(v23);
      v27 = CGBitmapContextCreate(0, (unint64_t)((v18 + (a4 + a6) * 2.0) * v21), (unint64_t)((v19 + (a5 + a6) * 2.0) * v21), BitsPerComponent, 0, DeviceRGB, 1u);
      CGColorSpaceRelease(DeviceRGB);
      v30.width = a4 * v21;
      v30.height = a5 * v21;
      CGContextSetShadowWithColor(v27, v30, v21 * a6, v24);
      CGContextSetFillColorWithColor(v27, v24);
      CGContextSetBlendMode(v27, kCGBlendModeColor);
      v31.origin.x = (a4 + a6) * v21;
      v31.origin.y = (a5 + a6) * v21;
      v31.size.width = v18 * v21;
      v31.size.height = v19 * v21;
      CGContextDrawImage(v27, v31, v23);
      Image = CGBitmapContextCreateImage(v27);
      CGContextRelease(v27);
      objc_msgSend(MEMORY[0x1E0DC3870], "imageWithCGImage:scale:orientation:", Image, objc_msgSend(v22, "imageOrientation"), v21);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      CGImageRelease(Image);
    }
  }
  else
  {
    v17 = 0;
  }

  return v17;
}

void sub_1AFB6A6A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id CLKUIShadowImageFromView(void *a1, void *a2, void *a3, double a4, double a5, double a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  void *v29;
  double v30;
  CGColorSpace *DeviceRGB;
  double v32;
  CGContext *v33;
  CGImage *Image;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  if (v11)
  {
    v14 = objc_alloc(MEMORY[0x1E0DC3890]);
    objc_msgSend(v11, "image");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)objc_msgSend(v14, "initWithImage:", v15);

    if (v13)
    {
      objc_msgSend(v13, "CGSizeValue");
      v18 = v17;
      v20 = v19;
    }
    else
    {
      objc_msgSend(v11, "frame");
      v18 = v22;
      v20 = v23;
    }
    v21 = 0;
    if (v18 >= 1.0 && v20 >= 1.0)
    {
      objc_msgSend(v16, "image");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "scale");
      v26 = v25;

      objc_msgSend(v16, "layer");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(v28) = 1.0;
      objc_msgSend(v27, "setShadowOpacity:", v28);
      objc_msgSend(v27, "setShadowRadius:", v26 * a6);
      v29 = v12;
      if (!v12)
      {
        objc_msgSend(MEMORY[0x1E0DC3658], "blackColor");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v27, "setShadowColor:", objc_msgSend(objc_retainAutorelease(v29), "CGColor"));
      v30 = (v18 + (a4 + a6) * 2.0) * v26;
      if (!v12)

      objc_msgSend(v27, "setShadowOffset:", 0.0 - v30, 0.0);
      objc_msgSend(v16, "setFrame:", a4, a5, v18, v20);
      DeviceRGB = CGColorSpaceCreateDeviceRGB();
      v32 = (v20 + (a5 + a6) * 2.0) * v26;
      v33 = CGBitmapContextCreate(0, (unint64_t)v30, (unint64_t)v32, 8uLL, 0, DeviceRGB, 1u);
      CGColorSpaceRelease(DeviceRGB);
      CGContextTranslateCTM(v33, v30 + a6 * v26, v32 - a6 * v26);
      CGContextScaleCTM(v33, v26, -v26);
      objc_msgSend(v27, "renderInContext:", v33);
      Image = CGBitmapContextCreateImage(v33);
      CGContextRelease(v33);
      objc_msgSend(MEMORY[0x1E0DC3870], "imageWithCGImage:scale:orientation:", Image, 0, v26);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      CGImageRelease(Image);

    }
  }
  else
  {
    v21 = 0;
  }

  return v21;
}

void sub_1AFB6A954(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id filterNamesToIndicesMap()
{
  if (filterNamesToIndicesMap_onceToken != -1)
    dispatch_once(&filterNamesToIndicesMap_onceToken, &__block_literal_global_1);
  return (id)filterNamesToIndicesMap_namesToIndices;
}

void __filterNamesToIndicesMap_block_invoke()
{
  uint64_t v0;
  void *v1;
  _QWORD v2[3];
  _QWORD v3[4];

  v3[3] = *MEMORY[0x1E0C80C00];
  v2[0] = CFSTR("CLKUITritiumViewFilterTypeBrightnessName");
  v2[1] = CFSTR("CLKUITritiumViewFilterTypeSaturationName");
  v3[0] = &unk_1E60A3048;
  v3[1] = &unk_1E60A3060;
  v2[2] = CFSTR("CLKUIViewFilterTypeNameTritiumTapThrough");
  v3[2] = &unk_1E60A3078;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v3, v2, 3);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)filterNamesToIndicesMap_namesToIndices;
  filterNamesToIndicesMap_namesToIndices = v0;

}

void sub_1AFB6B5D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

float CLKUITritiumMaxAPL()
{
  void *v0;
  unint64_t v1;
  void *v2;
  void *v3;
  float v4;
  double v5;
  int v6;

  if (CLKUITritiumMaxAPL_onceToken != -1)
    dispatch_once(&CLKUITritiumMaxAPL_onceToken, &__block_literal_global_2);
  if ((CLKUITritiumMaxAPL___needsUpdate & 1) == 0)
  {
    CLKUITritiumMaxAPL___needsUpdate = 1;
    objc_msgSend(MEMORY[0x1E0C944B0], "currentDevice");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    v1 = objc_msgSend(v0, "deviceCategory");

    if (v1 <= 4)
      CLKUITritiumMaxAPL_maxAPL = dword_1B0024250[v1];
    v2 = (void *)CFPreferencesCopyAppValue(CFSTR("NTKMaxTritiumFaceAPL"), CFSTR("com.apple.NanoTimeKit"));
    v3 = v2;
    if (v2)
    {
      objc_msgSend(v2, "floatValue");
      v5 = v4 / 100.0;
      if (v5 < 0.0)
        v5 = 0.0;
      *(float *)&v6 = fmin(v5, 1.0);
      CLKUITritiumMaxAPL_maxAPL = v6;
    }

  }
  return *(float *)&CLKUITritiumMaxAPL_maxAPL;
}

float _linearizeAndComputeAPL(uint64_t a1, vDSP_Length a2)
{
  float v2;
  const float *v5;
  float *v6;
  const float *v7;
  const float *v8;
  unsigned __int8 *v9;
  vDSP_Length v10;
  float *v11;
  int v12;
  float32x4_t v13;
  double v14;
  float32_t v16;
  uint64_t __C;

  v2 = 0.0;
  if (a1)
  {
    v5 = (const float *)malloc_type_malloc(12 * a2, 0x100004052888210uLL);
    if (v5)
    {
      v6 = (float *)v5;
      v7 = &v5[a2];
      v8 = &v5[2 * a2];
      if (a2)
      {
        v9 = (unsigned __int8 *)(a1 + 2);
        v10 = a2;
        v11 = (float *)v5;
        do
        {
          *v11 = _NTKAPLGammaTable[*(v9 - 2)];
          v11[a2] = _NTKAPLGammaTable[*(v9 - 1)];
          v12 = *v9;
          v9 += 4;
          v11[2 * a2] = _NTKAPLGammaTable[v12];
          ++v11;
          --v10;
        }
        while (v10);
      }
      __C = 0;
      v16 = 0.0;
      vDSP_meanv(v5, 1, (float *)&__C + 1, a2);
      vDSP_meanv(v7, 1, (float *)&__C, a2);
      vDSP_meanv(v8, 1, &v16, a2);
      free(v6);
      v13.i64[0] = __PAIR64__(__C, HIDWORD(__C));
      v13.f32[2] = v16;
      v14 = CLKUIConvertP3ToAPL(v13);
      return *(float *)&v14;
    }
  }
  return v2;
}

CGContext *CreateDrawImageToBitmap(void *a1)
{
  id v1;
  double v2;
  double v3;
  CGContext *v4;
  double v5;
  double v6;
  CGColorSpace *v7;
  CGImage *v8;
  CGRect v10;

  v1 = a1;
  objc_msgSend(v1, "size");
  v4 = 0;
  if (v2 != 0.0)
  {
    v5 = v3;
    if (v3 != 0.0)
    {
      v6 = v2;
      v7 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D908]);
      v4 = CGBitmapContextCreate(0, (unint64_t)v6, (unint64_t)v5, 8uLL, 0, v7, 1u);
      CGContextSetInterpolationQuality(v4, kCGInterpolationNone);
      v8 = (CGImage *)objc_msgSend(objc_retainAutorelease(v1), "CGImage");
      v10.origin.x = 0.0;
      v10.origin.y = 0.0;
      v10.size.width = v6;
      v10.size.height = v5;
      CGContextDrawImage(v4, v10, v8);
      CGColorSpaceRelease(v7);
    }
  }

  return v4;
}

float CLKUIComputeDimmingRequiredToObtainAPLGivenAPL(float a1, float a2, float a3)
{
  float v5;

  v5 = CLKUITritiumMaxAPL() - a2;
  if (v5 < 0.0)
    v5 = 0.0;
  return powf((float)(v5 / a3) / a1, 0.45455);
}

float CLKUIComputeImageAPL(void *a1)
{
  id v1;
  void *v2;
  float v3;
  CGContext *DrawImageToBitmap;
  CGContext *v5;
  size_t Width;
  size_t Height;
  void *Data;

  v1 = a1;
  v2 = v1;
  v3 = 0.0;
  if (v1)
  {
    DrawImageToBitmap = CreateDrawImageToBitmap(v1);
    if (DrawImageToBitmap)
    {
      v5 = DrawImageToBitmap;
      Width = CGBitmapContextGetWidth(DrawImageToBitmap);
      Height = CGBitmapContextGetHeight(v5);
      Data = CGBitmapContextGetData(v5);
      if (Data)
        v3 = _linearizeAndComputeAPL((uint64_t)Data, (unint64_t)((double)Width * (double)Height));
      CGContextRelease(v5);
    }
  }

  return v3;
}

float CLKUIComputeDimmingRequiredToObtainImageAPLUnclamped(void *a1, float a2, float a3)
{
  float v5;
  float v6;

  v5 = CLKUIComputeImageAPL(a1);
  v6 = CLKUITritiumMaxAPL() - a2;
  if (v6 < 0.0)
    v6 = 0.0;
  return powf((float)(v6 / a3) / v5, 0.45455);
}

float CLKUIComputeDimmingRequiredToObtainImageAPL(void *a1, float a2, float a3)
{
  float v5;
  float v6;

  v5 = CLKUIComputeImageAPL(a1);
  v6 = CLKUITritiumMaxAPL() - a2;
  if (v6 < 0.0)
    v6 = 0.0;
  return fminf(powf((float)(v6 / a3) / v5, 0.45455), 1.0);
}

float CLKUIComputeDimmingRequiredToObtainImageAPLClamped(void *a1, float a2)
{
  float v2;
  float v3;
  float v4;

  v2 = 0.082 - a2;
  v3 = CLKUIComputeImageAPL(a1);
  v4 = CLKUITritiumMaxAPL() - v2;
  if (v4 < 0.0)
    v4 = 0.0;
  return fminf(powf(v4 / v3, 0.45455), 1.0);
}

float CLKUIComputeDimmingRequiredToObtainQuadAPLUnclamped(void *a1, float a2, float a3)
{
  float v5;
  float v6;
  float v7;

  objc_msgSend(a1, "computeAPL");
  v6 = v5;
  v7 = CLKUITritiumMaxAPL() - a2;
  if (v7 < 0.0)
    v7 = 0.0;
  return powf((float)(v7 / a3) / v6, 0.45455);
}

float CLKUIComputeDimmingRequiredToObtainQuadAPL(void *a1, float a2, float a3)
{
  float v5;
  float v6;
  float v7;

  objc_msgSend(a1, "computeAPL");
  v6 = v5;
  v7 = CLKUITritiumMaxAPL() - a2;
  if (v7 < 0.0)
    v7 = 0.0;
  return fminf(powf((float)(v7 / a3) / v6, 0.45455), 1.0);
}

id _CLKUIComputeTextureAPL(void *a1, void *a2, id *a3)
{
  void *v3;
  id v6;
  id v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;

  v6 = a2;
  v7 = a1;
  +[CLKUIMetalResourceManager sharedDevice](CLKUIMetalResourceManager, "sharedDevice");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "supportsFamily:", 1004);
  if (!*a3)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = 0;
    v11 = (void *)objc_msgSend(v8, "newDefaultLibraryWithBundle:error:", v10, &v30);
    v12 = v30;

    v13 = (void *)objc_msgSend(v11, "newFunctionWithName:", CFSTR("compute_apl"));
    v29 = v12;
    v3 = (void *)objc_msgSend(v8, "newComputePipelineStateWithFunction:error:", v13, &v29);
    v14 = v29;

    v15 = v3;
    *a3 = v15;

  }
  v16 = (void *)objc_msgSend(v8, "newBufferWithLength:options:", 12, 1);
  objc_msgSend(v6, "computeCommandEncoder");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v17, "setComputePipelineState:", *a3);
  objc_msgSend(v17, "setBuffer:offset:atIndex:", v16, 0, 2);
  objc_msgSend(v17, "setBuffer:offset:atIndex:", v16, 4, 3);
  objc_msgSend(v17, "setBuffer:offset:atIndex:", v16, 8, 4);
  objc_msgSend(v17, "setTexture:atIndex:", v7, 0);
  v18 = objc_msgSend(*a3, "threadExecutionWidth");
  v19 = objc_msgSend(*a3, "maxTotalThreadsPerThreadgroup") / v18;
  LODWORD(v3) = vcvtpd_u64_f64((double)(unint64_t)objc_msgSend(v7, "width") / 6.0);
  v20 = objc_msgSend(v7, "height");

  LODWORD(v21) = vcvtpd_u64_f64((double)v20 / 6.0);
  if (v9)
  {
    v26 = (unint64_t)v3;
    v27 = v21;
    v28 = 1;
    v23 = v18;
    v24 = v19;
    v25 = 1;
    objc_msgSend(v17, "dispatchThreads:threadsPerThreadgroup:", &v26, &v23);
  }
  else
  {
    v26 = ((unint64_t)v3 + v18 - 1) / v18;
    v27 = (v19 + v21 - 1) / v19;
    v28 = 1;
    v23 = v18;
    v24 = v19;
    v25 = 1;
    objc_msgSend(v17, "dispatchThreadgroups:threadsPerThreadgroup:", &v26, &v23);
  }
  objc_msgSend(v17, "endEncoding");

  return v16;
}

double CLKUIGetAPLFromSumBuffer(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64x2_t v4;
  float64x2_t v5;
  float32x4_t v6;
  uint64_t v8;

  *(double *)&v8 = (double)(unint64_t)(a3 * a2) * 255.0;
  v3 = objc_msgSend(objc_retainAutorelease(a1), "contents");
  v4.i64[0] = *(_QWORD *)v3;
  v4.i64[1] = HIDWORD(*(_QWORD *)v3);
  v5 = (float64x2_t)vdupq_lane_s64(v8, 0);
  v6 = (float32x4_t)vdivq_f64(vcvtq_f64_u64(v4), v5);
  *(float32x2_t *)v6.f32 = vcvt_f32_f64((float64x2_t)v6);
  LODWORD(v5.f64[0]) = *(_DWORD *)(v3 + 8);
  *(float *)v5.f64 = (double)*(unint64_t *)&v5.f64[0] / *(double *)&v8;
  v6.i32[2] = LODWORD(v5.f64[0]);
  return CLKUIConvertSRGBToAPL(v6);
}

id CLKUIComputeTextureAPL(void *a1, void *a2, id *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD v12[4];
  id v13;
  id v14;

  v5 = a1;
  _CLKUIComputeTextureAPL(v5, a2, a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __CLKUIComputeTextureAPL_block_invoke;
  v12[3] = &unk_1E60761A0;
  v13 = v6;
  v14 = v5;
  v7 = v5;
  v8 = v6;
  v9 = _Block_copy(v12);
  v10 = _Block_copy(v9);

  return v10;
}

float CLKUIComputeColorAPL(void *a1)
{
  const __CFString *v1;
  id v2;
  CGColorSpace *v3;
  id v4;
  CGColor *v5;
  CGColor *CopyByMatchingToColorSpace;
  float64x2_t *Components;
  float32x4_t v8;
  float32_t v9;
  double v10;
  float v11;

  v1 = (const __CFString *)*MEMORY[0x1E0C9D940];
  v2 = a1;
  v3 = CGColorSpaceCreateWithName(v1);
  v4 = objc_retainAutorelease(v2);
  v5 = (CGColor *)objc_msgSend(v4, "CGColor");

  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v3, kCGRenderingIntentDefault, v5, 0);
  Components = (float64x2_t *)CGColorGetComponents(CopyByMatchingToColorSpace);
  v8 = *(float32x4_t *)Components;
  *(float32x2_t *)v8.f32 = vcvt_f32_f64(*Components);
  v9 = Components[1].f64[0];
  v8.f32[2] = v9;
  v10 = CLKUIConvertP3ToAPL(v8);
  v11 = *(float *)&v10;
  CGColorRelease(CopyByMatchingToColorSpace);
  CGColorSpaceRelease(v3);
  return v11;
}

float CLKUIComputeDimmingRequiredToObtainColorAPLUnclamped(void *a1, float a2, float a3)
{
  float v5;
  float v6;

  v5 = CLKUIComputeColorAPL(a1);
  v6 = CLKUITritiumMaxAPL() - a2;
  if (v6 < 0.0)
    v6 = 0.0;
  return powf((float)(v6 / a3) / v5, 0.45455);
}

float CLKUIComputeDimmingRequiredToObtainColorAPL(void *a1, float a2, float a3)
{
  float v5;
  float v6;

  v5 = CLKUIComputeColorAPL(a1);
  v6 = CLKUITritiumMaxAPL() - a2;
  if (v6 < 0.0)
    v6 = 0.0;
  return fminf(powf((float)(v6 / a3) / v5, 0.45455), 1.0);
}

void CLKUIConvertTextureFromXRSRGBtoP3(void *a1, void *a2, void *a3, id *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = objc_msgSend(v7, "width");
  if (v10 == objc_msgSend(v8, "width"))
  {
    v11 = objc_msgSend(v7, "height");
    v12 = objc_msgSend(v8, "height");
    if (v8)
    {
      if (v7 && v11 == v12)
      {
        +[CLKUIMetalResourceManager sharedDevice](CLKUIMetalResourceManager, "sharedDevice");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "supportsFamily:", 1004);
        if (!*a4)
        {
          objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v35 = 0;
          v16 = (void *)objc_msgSend(v13, "newDefaultLibraryWithBundle:error:", v15, &v35);
          v27 = v14;
          v17 = v35;

          v18 = (void *)objc_msgSend(v16, "newFunctionWithName:", CFSTR("compute_convert_xrsrgb_to_p3"));
          v34 = v17;
          v19 = (void *)objc_msgSend(v13, "newComputePipelineStateWithFunction:error:", v18, &v34);
          v20 = v34;

          v21 = v19;
          *a4 = v21;
          v14 = v27;

        }
        objc_msgSend(v9, "computeCommandEncoder");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "setComputePipelineState:", *a4);
        objc_msgSend(v22, "setTexture:atIndex:", v7, 0);
        objc_msgSend(v22, "setTexture:atIndex:", v8, 1);
        v23 = objc_msgSend(*a4, "threadExecutionWidth");
        v24 = objc_msgSend(*a4, "maxTotalThreadsPerThreadgroup") / v23;
        v25 = objc_msgSend(v7, "width");
        v26 = objc_msgSend(v7, "height");
        if (v14)
        {
          v31 = v25;
          v32 = v26;
          v33 = 1;
          v28 = v23;
          v29 = v24;
          v30 = 1;
          objc_msgSend(v22, "dispatchThreads:threadsPerThreadgroup:", &v31, &v28);
        }
        else
        {
          v31 = (v23 + v25 - 1) / v23;
          v32 = (v24 + v26 - 1) / v24;
          v33 = 1;
          v28 = v23;
          v29 = v24;
          v30 = 1;
          objc_msgSend(v22, "dispatchThreadgroups:threadsPerThreadgroup:", &v31, &v28);
        }
        objc_msgSend(v22, "endEncoding");

      }
    }
  }

}

void sub_1AFB6DB2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

double NUNIAstronomyAddLocationCoordinates(double a1, double a2, double a3)
{
  return a1 + a3;
}

float NUNIAstronomyClampLatitude(float a1)
{
  float result;

  result = 80.0;
  if (a1 <= 80.0)
  {
    result = a1;
    if (a1 < -80.0)
      return -80.0;
  }
  return result;
}

double _NTKAstronomyNormalizeCoordinateForRotationAroundCoordinate(double result, double a2, double a3, double a4)
{
  double i;
  double j;

  for (; a2 > a4 + 180.0; a2 = a2 + -360.0)
    ;
  for (i = a4 + -180.0; a2 < i; a2 = a2 + 360.0)
    ;
  for (; result > a3 + 180.0; result = result + -360.0)
    ;
  for (j = a3 + -180.0; result < j; result = result + 360.0)
    ;
  return result;
}

void sub_1AFB6E424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id NUNIBundle()
{
  if (NUNIBundle_onceToken != -1)
    dispatch_once(&NUNIBundle_onceToken, &__block_literal_global_4);
  return (id)NUNIBundle___bundle;
}

void sub_1AFB6EED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AFB6EF98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1AFB6F5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

double CLKUITextureFormatGetASTCBlockSize(int a1)
{
  return s_artFormatsAstcBlockSize[a1];
}

double CLKUIComputePow2SubRect(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    objc_msgSend(v1, "size");
    objc_msgSend(v1, "scale");
    objc_msgSend(v1, "size");
    objc_msgSend(v1, "scale");

  }
  return 0.0;
}

uint64_t _CLKUIDeterminePlaneLength(int a1, int a2, int a3, int a4)
{
  unsigned int v4;
  unsigned int v6;
  unsigned int v7;

  if ((a1 - 5) > 1)
  {
    if ((a1 - 11) > 0x37)
    {
      return (a3 * a2 * a4);
    }
    else
    {
      v6 = HIDWORD(*(_QWORD *)&s_artFormatsAstcBlockSize[a1]);
      v7 = *(_QWORD *)&s_artFormatsAstcBlockSize[a1];
      return 16 * (a2 + v7 - 1) / v7 * ((a3 + v6 - 1) / v6);
    }
  }
  else
  {
    v4 = 4 * a3 * a2 + 7;
    if (v4 >= 0x100)
      return v4 >> 3;
    else
      return 0;
  }
}

void sub_1AFB729F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

id NUNILoggingObjectForDomain(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (NUNILoggingObjectForDomain_onceToken != -1)
    dispatch_once(&NUNILoggingObjectForDomain_onceToken, &__block_literal_global_7);
  v2 = (void *)NUNILoggingObjectForDomain___logObjects;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _NUNAegirCreateTexture(void *a1, int a2, int a3, int a4, uint64_t a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;

  v9 = a1;
  if (a5)
  {
    v10 = (void *)objc_opt_new();
    objc_msgSend(v10, "setTextureType:", 2);
    objc_msgSend(v10, "setWidth:", a2);
    objc_msgSend(v10, "setHeight:", a3);
    objc_msgSend(v10, "setDepth:", 1);
    objc_msgSend(v10, "setPixelFormat:", a5);
    objc_msgSend(v10, "setUsage:", 5);
    objc_msgSend(v10, "setResourceOptions:", 32);
    if (a4 >= 2)
      objc_msgSend(v10, "setMipmapLevelCount:", a4);
    v11 = (void *)objc_msgSend(v9, "newTextureWithDescriptor:", v10);
    v12 = v11;
    if (v11)
    {
      v13 = v11;
    }
    else
    {
      NUNILoggingObjectForDomain(0);
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        _NUNAegirCreateTexture_cold_1(v14);

    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_1AFB73868(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t _NUNIAegirRenderCompareObject(float *a1, float *a2)
{
  if (*a1 < *a2)
    return 1;
  else
    return 0xFFFFFFFFLL;
}

uint64_t CLKUIFetchPrimaryGamutMatrix(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;

  v1 = MEMORY[0x1E0C83FE8];
  v2 = *(_OWORD *)(MEMORY[0x1E0C83FE8] + 16);
  *a1 = *MEMORY[0x1E0C83FE8];
  a1[1] = v2;
  a1[2] = *(_OWORD *)(v1 + 32);
  return 1;
}

double CLKUIPrimaryGamutMatrix()
{
  if (CLKUIPrimaryGamutMatrix_onceToken != -1)
    dispatch_once(&CLKUIPrimaryGamutMatrix_onceToken, &__block_literal_global_9);
  return *(double *)&CLKUIPrimaryGamutMatrix_p3ToNativeMatrix;
}

__n128 CLKUINativeToAPLCoeff(void *a1)
{
  id v1;
  id WeakRetained;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v1 = a1;
  os_unfair_lock_lock((os_unfair_lock_t)&CLKUINativeToAPLCoeff___lock);
  WeakRetained = objc_loadWeakRetained(&CLKUINativeToAPLCoeff___cachedDevice);
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v4 = objc_loadWeakRetained(&CLKUINativeToAPLCoeff___cachedDevice);
    if (v4 == v1)
    {
      v5 = objc_msgSend(v1, "version");
      v6 = CLKUINativeToAPLCoeff___previousCLKDeviceVersion;

      if (v5 == v6)
        goto LABEL_11;
    }
    else
    {

    }
  }
  v7 = objc_storeWeak(&CLKUINativeToAPLCoeff___cachedDevice, v1);
  CLKUINativeToAPLCoeff___previousCLKDeviceVersion = objc_msgSend(v1, "version");

  v8 = objc_msgSend(v1, "deviceCategory");
  if (v8 == 4)
  {
    v9 = xmmword_1B0024720;
  }
  else if (v8 == 3)
  {
    v9 = xmmword_1B0024710;
  }
  else
  {
    v9 = xmmword_1B0024700;
  }
  CLKUINativeToAPLCoeff_coeff = v9;
LABEL_11:
  os_unfair_lock_unlock((os_unfair_lock_t)&CLKUINativeToAPLCoeff___lock);
  v11 = CLKUINativeToAPLCoeff_coeff;

  return (__n128)v11;
}

double CLKUIConvertP3ToNative(float32x4_t a1)
{
  float32x4_t v1;
  float32x4_t v2;
  double result;

  v1 = a1;
  if (CLKUIPrimaryGamutMatrix_onceToken != -1)
  {
    dispatch_once(&CLKUIPrimaryGamutMatrix_onceToken, &__block_literal_global_9);
    v1 = a1;
  }
  v2 = (float32x4_t)vtrn2q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, unk_1EEE78E40);
  v2.i32[2] = DWORD1(xmmword_1EEE78E50);
  *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, (int32x4_t)xmmword_1EEE78E50), unk_1EEE78E40), v1.f32[0]), v2, *(float32x2_t *)v1.f32, 1), (float32x4_t)vzip1q_s32(vzip2q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, (int32x4_t)xmmword_1EEE78E50), vdupq_laneq_s32(unk_1EEE78E40, 2)), v1, 2).u64[0];
  return result;
}

__n128 CLKUIConvertNativeToAPL(float32x4_t a1)
{
  void *v1;
  float32x4_t v2;
  float32x4_t v5;

  objc_msgSend(MEMORY[0x1E0C944B0], "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = vmulq_f32((float32x4_t)CLKUINativeToAPLCoeff(v1), a1);
  v5 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1)));

  return (__n128)v5;
}

double CLKUIConvertP3ToAPL(float32x4_t a1)
{
  float32x4_t v1;
  float32x4_t v2;
  double result;

  v1 = a1;
  if (CLKUIPrimaryGamutMatrix_onceToken != -1)
  {
    dispatch_once(&CLKUIPrimaryGamutMatrix_onceToken, &__block_literal_global_9);
    v1 = a1;
  }
  v2 = (float32x4_t)vtrn2q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, unk_1EEE78E40);
  v2.i32[2] = DWORD1(xmmword_1EEE78E50);
  *(_QWORD *)&result = CLKUIConvertNativeToAPL(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, (int32x4_t)xmmword_1EEE78E50), unk_1EEE78E40), v1.f32[0]), v2, *(float32x2_t *)v1.f32, 1), (float32x4_t)vzip1q_s32(vzip2q_s32((int32x4_t)CLKUIPrimaryGamutMatrix_p3ToNativeMatrix, (int32x4_t)xmmword_1EEE78E50), vdupq_laneq_s32(unk_1EEE78E40, 2)), v1, 2)).n128_u64[0];
  return result;
}

double sRGBtoNative()
{
  if (sRGBtoNative_onceToken != -1)
    dispatch_once(&sRGBtoNative_onceToken, &__block_literal_global_3_0);
  return *(double *)&sRGBtoNative_sRGBToNative;
}

double __sRGBtoNative_block_invoke()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  double result;
  _OWORD v5[3];
  __int128 v6;
  __int128 v7;
  __int128 v8;

  if (CLKUIPrimaryGamutMatrix_onceToken != -1)
    dispatch_once(&CLKUIPrimaryGamutMatrix_onceToken, &__block_literal_global_9);
  v0 = 0;
  v1 = CLKUIPrimaryGamutMatrix_p3ToNativeMatrix;
  v2 = unk_1EEE78E40;
  HIDWORD(v1) = 0;
  HIDWORD(v2) = 0;
  v3 = xmmword_1EEE78E50;
  HIDWORD(v3) = 0;
  v5[0] = v1;
  v5[1] = v2;
  v5[2] = v3;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  do
  {
    *(__int128 *)((char *)&v6 + v0 * 16) = (__int128)vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B0024730, COERCE_FLOAT(v5[v0])), (float32x4_t)xmmword_1B0024740, *(float32x2_t *)&v5[v0], 1), (float32x4_t)xmmword_1B0024750, (float32x4_t)v5[v0], 2);
    ++v0;
  }
  while (v0 != 3);
  result = *(double *)&v6;
  DWORD2(sRGBtoNative_sRGBToNative) = DWORD2(v6);
  *(_DWORD *)algn_1EEE78EA8 = DWORD2(v7);
  *(_QWORD *)&sRGBtoNative_sRGBToNative = v6;
  qword_1EEE78EA0 = v7;
  DWORD2(xmmword_1EEE78EB0) = DWORD2(v8);
  *(_QWORD *)&xmmword_1EEE78EB0 = v8;
  return result;
}

double CLKUIConvertSRGBToAPL(float32x4_t a1)
{
  float32x4_t v1;
  float32x4_t v2;
  double result;

  v1 = a1;
  if (sRGBtoNative_onceToken != -1)
  {
    dispatch_once(&sRGBtoNative_onceToken, &__block_literal_global_3_0);
    v1 = a1;
  }
  v2 = (float32x4_t)vtrn2q_s32((int32x4_t)sRGBtoNative_sRGBToNative, *(int32x4_t *)&qword_1EEE78EA0);
  v2.i32[2] = DWORD1(xmmword_1EEE78EB0);
  *(_QWORD *)&result = CLKUIConvertNativeToAPL(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)sRGBtoNative_sRGBToNative, (int32x4_t)xmmword_1EEE78EB0), *(int32x4_t *)&qword_1EEE78EA0), v1.f32[0]), v2, *(float32x2_t *)v1.f32, 1), (float32x4_t)vzip1q_s32(vzip2q_s32((int32x4_t)sRGBtoNative_sRGBToNative, (int32x4_t)xmmword_1EEE78EB0), vdupq_laneq_s32(*(int32x4_t *)&qword_1EEE78EA0, 2)), v1, 2)).n128_u64[0];
  return result;
}

void sub_1AFB77228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

float _NUNISphereoidComputeRadius(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v4;

  if (a2)
  {
    v2 = 0.14894;
  }
  else
  {
    if (((1 << a1) & 0xFFC000) != 0)
      v4 = a1 - 14;
    else
      v4 = a1;
    if (v4)
    {
      if (v4 == 7)
      {
        v2 = 0.051282;
      }
      else if (v4 == 6)
      {
        v2 = 0.057692;
      }
      else
      {
        v2 = 0.044872;
      }
    }
    else
    {
      v2 = 0.070513;
    }
  }
  if ((unint64_t)(a1 - 12) < 2)
  {
    v2 = v2 + v2;
    return v2 * 0.5;
  }
  if (a1 != 10)
  {
    if (a1 == 11)
      return 0.3;
    return v2 * 0.5;
  }
  return 0.5;
}

double NUNIComputeSpheroidParentPosition(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  float32x4_t v6;
  float32x2_t v7;
  unint64_t v8;
  double result;
  float32x4_t v10;
  uint64_t v11;
  int v12;
  float v13;
  uint64_t v14;

  if (!a1)
    return 0.0000305175853;
  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "parent");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  *(double *)v6.i64 = NUNIComputeSpheroidParentPosition(v5, v3);
  v10 = v6;

  v14 = 0;
  v13 = 0.0;
  v12 = 0;
  v11 = 0;
  objc_msgSend(v4, "date:toEquatorRotation:toAngle:toLight:toDistance:toRadius:", v3, (char *)&v14 + 4, &v14, &v11, &v13, &v12);

  v7 = vmul_n_f32((float32x2_t)__sincosf_stret(*(float *)&v14), v13);
  LODWORD(v8) = v7.i32[1];
  *((float *)&v8 + 1) = -v7.f32[0];
  *(_QWORD *)&result = vaddq_f32(v10, (float32x4_t)v8).u64[0];
  return result;
}

__n128 NUNIComputeCameraView(uint64_t a1, uint64_t a2, float a3)
{
  float v3;
  float v4;
  float v5;
  __float2 v6;
  __float2 v7;
  __n128 result;

  v3 = -*(float *)&a2;
  if (a1 == 4)
    v3 = 180.0 - *(float *)&a2;
  if (a1 == 3)
    v3 = -90.0 - *(float *)&a2;
  v4 = COERCE_FLOAT(HIDWORD(a2) ^ 0x80000000) * 3.14159265 / 180.0;
  v5 = v3 * 3.14159265 / 180.0 - a3 + 0.0;
  v6 = __sincosf_stret(v4);
  v7 = __sincosf_stret(v5);
  result.n128_u64[0] = (unint64_t)vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v7.__sinval), LODWORD(v7.__cosval)), v6.__cosval);
  result.n128_u32[2] = LODWORD(v6.__sinval);
  return result;
}

void sub_1AFB7B13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AFB7B1B4(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

const __CFString *CLKUIMetalAtlasPrewarmStateDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("none");
  if (a1 == 1)
    v1 = CFSTR("prewarming");
  if (a1 == 2)
    return CFSTR("prewarmed");
  else
    return v1;
}

void sub_1AFB7C5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

float UMMul(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8)
{
  return (float)((float)((float)(a4 * a8) - (float)(a1 * a5)) - (float)(a2 * a6)) - (float)(a3 * a7);
}

__n64 UMFloat4x4Make(float a1, float a2, float a3, float a4)
{
  float v4;
  __n64 result;

  v4 = (float)(a1 * (float)(a2 + a2)) + (float)(a4 * (float)(a3 + a3));
  result.n64_f32[0] = 1.0 - (float)((float)(a2 * (float)(a2 + a2)) + (float)(a3 * (float)(a3 + a3)));
  result.n64_f32[1] = v4;
  return result;
}

__n64 UMFloat4x4Make(simd_quatf a1)
{
  return UMFloat4x4Make(a1.vector.f32[0], a1.vector.f32[1], a1.vector.f32[2], a1.vector.f32[3]);
}

float UMFloat4x4MakeOrtho(float a1, float a2, float a3, float a4, float a5, float a6)
{
  float result;

  result = (float)(1.0 / (float)(a2 - a1)) + (float)(1.0 / (float)(a2 - a1));
  __asm { FMOV            V3.4S, #1.0 }
  return result;
}

float UMFloat4x4MakePerspective(float a1, float a2, float a3, float a4)
{
  __float2 v5;

  v5 = __sincosf_stret(a1 * 0.0087266);
  return (float)(v5.__cosval / v5.__sinval) / a2;
}

__n64 UMFloat4x4MakeLookAt(double a1, float a2)
{
  __n64 result;

  result.n64_f32[1] = a2;
  return result;
}

double UMTranslate(float32x4_t a1, double a2, double a3, float32x4_t a4, float a5)
{
  double result;

  *(_QWORD *)&result = vmlaq_n_f32(a1, a4, a5).u64[0];
  return result;
}

double UMFloat4x4MakeTranslate()
{
  return *(double *)&_PromotedConst_0;
}

BOOL UMFloat4x4Equal(simd_float4x4 a1, simd_float4x4 a2)
{
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  _OWORD v6[3];
  simd_float4x4 v7;

  v7 = a1;
  v6[0] = a2.columns[1];
  v6[1] = a2.columns[2];
  v6[2] = a2.columns[3];
  if ((vminvq_u32((uint32x4_t)vceqq_f32((float32x4_t)a1.columns[0], (float32x4_t)a2.columns[0])) & 0x80000000) == 0)
    return 0;
  v3 = 0;
  do
  {
    v4 = v3;
    if (v3 == 3)
      break;
    v5 = vminvq_u32((uint32x4_t)vceqq_f32((float32x4_t)v7.columns[v3 + 1], (float32x4_t)v6[v3]));
    ++v3;
  }
  while ((v5 & 0x80000000) != 0);
  return v4 > 2;
}

double UMMul(simd_float4x4 a1, simd_float4x4 a2)
{
  double result;

  *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)a1.columns[1], *(float32x2_t *)a2.columns[0].f32, 1), (float32x4_t)a1.columns[0], a2.columns[0].f32[0]), (float32x4_t)a1.columns[2], (float32x4_t)a2.columns[0], 2), (float32x4_t)a1.columns[3], (float32x4_t)a2.columns[0], 3).u64[0];
  return result;
}

double UMMul(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  double result;

  *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(a2, *(float32x2_t *)a5.f32, 1), a1, a5.f32[0]), a3, a5, 2), a4, a5, 3).u64[0];
  return result;
}

float UMQuaternionMake(float a1, float a2, float a3)
{
  __float2 v5;
  __float2 v6;
  __float2 v7;

  v5 = __sincosf_stret(a1 * 0.5);
  v6 = __sincosf_stret(a2 * 0.5);
  v7 = __sincosf_stret(a3 * 0.5);
  return (float)(v5.__sinval * (float)(v6.__cosval * v7.__cosval))
       - (float)((float)(v6.__sinval * v7.__sinval) * v5.__cosval);
}

double UMFloat4x4MakeRotateX(float a1)
{
  __sincosf_stret(a1);
  return *(double *)&_PromotedConst_1;
}

double UMFloat4x4MakeRotateZ(float a1)
{
  __float2 v1;
  double v2;

  v1 = __sincosf_stret(a1);
  *(float *)&v2 = v1.__cosval;
  *((float *)&v2 + 1) = -v1.__sinval;
  return v2;
}

float UMSlerp(float a1, float a2, float a3, float a4, float a5, float a6, float a7, float a8, float a9)
{
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v25;
  float v26;

  v18 = a9;
  if (a9 <= 0.0)
    return a1;
  v19 = a5;
  if (a9 < 1.0)
  {
    v20 = (float)((float)((float)(a2 * a6) + (float)(a1 * a5)) + (float)(a3 * a7)) + (float)(a4 * a8);
    if (v20 < 0.0)
    {
      v19 = -a5;
      v20 = -v20;
    }
    if (v20 <= 0.999)
    {
      v22 = sqrtf(1.0 - (float)(v20 * v20));
      v25 = atan2f(v22, v20);
      v26 = 1.0 / v22;
      v23 = (1.0 - a9) * v25;
      v21 = (float)(1.0 / v22) * sinf(v23);
      v18 = v26 * sinf(v25 * a9);
    }
    else
    {
      v21 = 1.0 - a9;
    }
    return (float)(v19 * v18) + (float)(v21 * a1);
  }
  return v19;
}

float UMQuaternionMake(int32x4_t a1, int32x4_t a2, float32x4_t a3)
{
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v10;
  unsigned __int32 v11;
  float v12;

  v3 = (float)((float)(*(float *)a1.i32 + *(float *)&a2.i32[1]) + a3.f32[2]) + 1.0;
  if (v3 <= 0.0001)
  {
    if (*(float *)a1.i32 <= *(float *)&a2.i32[1] || *(float *)a1.i32 <= a3.f32[2])
    {
      if (*(float *)&a2.i32[1] <= a3.f32[2])
      {
        v10 = 0.5 / sqrtf((float)((float)(a3.f32[2] + 1.0) - *(float *)a1.i32) - *(float *)&a2.i32[1]);
        v6 = v10 * vaddq_f32((float32x4_t)vdupq_laneq_s32(a1, 2), a3).f32[0];
        v7 = vmuls_lane_f32(v10, (float32x2_t)*(_OWORD *)&vaddq_f32((float32x4_t)vdupq_laneq_s32(a2, 2), a3), 1);
        v8 = 0.25 / v10;
        v11 = vsubq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.i8, 1), (float32x4_t)a2).u32[0];
      }
      else
      {
        v10 = 0.5 / sqrtf((float)((float)(*(float *)&a2.i32[1] + 1.0) - *(float *)a1.i32) - a3.f32[2]);
        v6 = v10 * vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.i8, 1), (float32x4_t)a2).f32[0];
        v7 = 0.25 / v10;
        v8 = vmuls_lane_f32(v10, (float32x2_t)*(_OWORD *)&vaddq_f32((float32x4_t)vdupq_laneq_s32(a2, 2), a3), 1);
        v11 = vsubq_f32((float32x4_t)vdupq_laneq_s32(a1, 2), a3).u32[0];
      }
      v5 = v10 * *(float *)&v11;
    }
    else
    {
      v12 = 0.5 / sqrtf((float)((float)(*(float *)a1.i32 + 1.0) - *(float *)&a2.i32[1]) - a3.f32[2]);
      v6 = 0.25 / v12;
      v7 = v12 * vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.i8, 1), (float32x4_t)a2).f32[0];
      v8 = v12 * vaddq_f32((float32x4_t)vdupq_laneq_s32(a1, 2), a3).f32[0];
      v5 = vmuls_lane_f32(v12, (float32x2_t)*(_OWORD *)&vsubq_f32((float32x4_t)vdupq_laneq_s32(a2, 2), a3), 1);
    }
  }
  else
  {
    v4 = 0.5 / sqrtf(v3);
    v5 = 0.25 / v4;
    v6 = vmuls_lane_f32(v4, (float32x2_t)*(_OWORD *)&vsubq_f32(a3, (float32x4_t)vdupq_laneq_s32(a2, 2)), 1);
    v7 = v4 * vsubq_f32((float32x4_t)vdupq_laneq_s32(a1, 2), a3).f32[0];
    v8 = v4 * vsubq_f32((float32x4_t)a2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.i8, 1)).f32[0];
  }
  return v6 / sqrtf((float)((float)((float)(v7 * v7) + (float)(v6 * v6)) + (float)(v8 * v8)) + (float)(v5 * v5));
}

uint64_t static CurrentObservationsHeaderViewStyle.== infix(_:_:)()
{
  sub_1AFB7EA60();
  if ((sub_1B0008B54() & 1) != 0
    && (sub_1B0008B54() & 1) != 0
    && (sub_1B0008B54() & 1) != 0
    && (sub_1B0008B54() & 1) != 0)
  {
    return sub_1B0008B54() & 1;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1AFB7EA60()
{
  unint64_t result;

  result = qword_1ED1F3E00;
  if (!qword_1ED1F3E00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1F3E00);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CurrentObservationsHeaderViewStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for CurrentObservationsHeaderViewStyle(id *a1)
{

}

_QWORD *initializeWithCopy for CurrentObservationsHeaderViewStyle(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return a1;
}

uint64_t assignWithCopy for CurrentObservationsHeaderViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CurrentObservationsHeaderViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentObservationsHeaderViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentObservationsHeaderViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrentObservationsHeaderViewStyle()
{
  return &type metadata for CurrentObservationsHeaderViewStyle;
}

uint64_t getEnumTagSinglePayload for CodableColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CodableColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE706C0);
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_1AFB7ED74(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AFB7ED94(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

void type metadata accessor for ForegroundEffectShaderParameters(uint64_t a1)
{
  sub_1AFB39D74(a1, (unint64_t *)&unk_1EEE706C8);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE706D8);
}

uint64_t getEnumTagSinglePayload for RoundedCornersShape(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RoundedCornersShape(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE706E0);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EDD00);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE706E8);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE706F0);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1F08D8);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1AFB39D74(a1, qword_1ED1F00B0);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EDDE8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1F3CE0);
}

void sub_1AFB7EEEC()
{
  uint64_t *v0;

  sub_1AFB7EF7C(*v0, (void (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1AFB7EF0C(uint64_t a1, id *a2)
{
  return sub_1AFB7F44C(a1, a2);
}

uint64_t sub_1AFB7EF20(uint64_t a1, id *a2)
{
  return sub_1AFB7F4B0(a1, a2) & 1;
}

void sub_1AFB7EF38(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1AFB7F41C();
  *a1 = v2;
}

void sub_1AFB7EF5C()
{
  uint64_t *v0;

  sub_1AFB7EF7C(*v0, MEMORY[0x1E0DEA950]);
}

void sub_1AFB7EF7C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1B0008584();
  a2(v3);
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB7EFAC()
{
  return sub_1AFB7F358();
}

uint64_t sub_1AFB7EFB4()
{
  OUTLINED_FUNCTION_2_0();
  sub_1B0008614();
  return swift_bridgeObjectRelease();
}

void sub_1AFB7EFEC()
{
  sub_1AFB7EFF4();
}

void sub_1AFB7EFF4()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_8_15();
  sub_1B0009040();
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_5();
}

BOOL sub_1AFB7F02C(uint64_t *a1, uint64_t *a2)
{
  return sub_1AFC0BC10(*a1, *a2);
}

uint64_t sub_1AFB7F038()
{
  return sub_1AFB7EFB4();
}

void sub_1AFB7F050()
{
  sub_1AFB7EFF4();
}

uint64_t sub_1AFB7F068()
{
  return sub_1AFB7F398();
}

void sub_1AFB7F074(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1AFB7F0A4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1AFB7F0AC()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_9_6();
  GEOLocationCoordinate2DMake(v1, v2);
  *v0 = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB7F0D0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AFB7F0F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AFB7F0FC()
{
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F3CD0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B0025254);
  sub_1AFAF86C8(&qword_1EEE70708, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B0025134);
  return sub_1B0008E48();
}

void sub_1AFB7F180()
{
  sub_1AFAF86C8(&qword_1EEE706F8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B00250F8);
}

void sub_1AFB7F1AC()
{
  sub_1AFAF86C8(&qword_1EEE70700, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B00250CC);
}

void sub_1AFB7F1D8()
{
  sub_1AFAF86C8(&qword_1ED1F3CD8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1B0025168);
}

uint64_t sub_1AFB7F204(_QWORD *a1, _QWORD *a2)
{
  return sub_1AFC0B7FC(*a1, *a2);
}

uint64_t sub_1AFB7F210()
{
  sub_1AFAF86C8(&qword_1EEE784B0, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_1B0025588);
  sub_1AFAF86C8((unint64_t *)&unk_1EEE70760, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_1B0025384);
  return sub_1B0008E48();
}

uint64_t sub_1AFB7F294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B0008554();
  result = OUTLINED_FUNCTION_4_15();
  *a1 = v2;
  return result;
}

uint64_t sub_1AFB7F2D4()
{
  sub_1AFAF86C8(&qword_1EEE70748, (uint64_t (*)(uint64_t))type metadata accessor for Origin, (uint64_t)&unk_1B00254F8);
  sub_1AFAF86C8((unint64_t *)&unk_1EEE70750, (uint64_t (*)(uint64_t))type metadata accessor for Origin, (uint64_t)&unk_1B0025498);
  return sub_1B0008E48();
}

uint64_t sub_1AFB7F358()
{
  sub_1B0008584();
  sub_1B0008614();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFB7F398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1B0008584();
  v2 = v1;
  if (v0 == sub_1B0008584() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1B0008FB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1AFB7F41C()
{
  sub_1B0008584();
  sub_1B0008554();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFB7F44C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  OUTLINED_FUNCTION_6_9(a1, a2);
  result = sub_1B000856C();
  *v2 = 0;
  return result;
}

uint64_t sub_1AFB7F4B0(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  OUTLINED_FUNCTION_6_9(a1, a2);
  v3 = sub_1B0008578();
  *v2 = 0;
  return v3 & 1;
}

void type metadata accessor for Origin(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1EEE70710);
}

void type metadata accessor for Option(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EC438);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1AFB39D74(a1, &qword_1ED1EC4F0);
}

void sub_1AFB7F55C()
{
  sub_1AFAF86C8(&qword_1EEE70718, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_1B0025348);
}

void sub_1AFB7F588()
{
  sub_1AFAF86C8(&qword_1EEE70720, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_1B002531C);
}

void sub_1AFB7F5B4()
{
  sub_1AFAF86C8(&qword_1EEE70728, (uint64_t (*)(uint64_t))type metadata accessor for Origin, (uint64_t)&unk_1B002545C);
}

void sub_1AFB7F5E0()
{
  sub_1AFAF86C8(&qword_1EEE70730, (uint64_t (*)(uint64_t))type metadata accessor for Origin, (uint64_t)&unk_1B0025430);
}

void sub_1AFB7F60C()
{
  sub_1AFAF86C8((unint64_t *)&unk_1EEE70738, (uint64_t (*)(uint64_t))type metadata accessor for Origin, (uint64_t)&unk_1B00254CC);
}

void sub_1AFB7F638()
{
  sub_1AFAF86C8(&qword_1ED1EC860, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_1B00253B8);
}

_QWORD *sub_1AFB7F690(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_1B00058D8();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 28);
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1B0005B84();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t sub_1AFB7F778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1B0005B84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1AFB7F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B00058D8();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1AFB7F8A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1AFB7F960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_1AFB7FA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1AFB7FAB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFB7FAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B00058D8();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v9 = sub_1B0005B84();
      v10 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_1AFB7FB5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFB7FB68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = sub_1B00058D8();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 24);
    }
    else
    {
      v9 = sub_1B0005B84();
      v10 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ComplicationHourlyGaugeViewModel()
{
  uint64_t result;

  result = qword_1EEE70888;
  if (!qword_1EEE70888)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFB7FC34()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B00058D8();
  if (v1 <= 0x3F)
  {
    result = sub_1B0005B84();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1AFB7FCD0()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 3;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0050E80;
  v33 = 6;
  v26 = 0xE500000000000000;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x7970736957;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFB80478();
  sub_1AFB80478();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #6.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 1086324736;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1166843904;
  *(_QWORD *)&v9 = 0x41F0000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 48, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4000000000000000,
    v9,
    0x3D23D70A3CA3D70ALL,
    1097147068,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4094035940A00000);
}

uint64_t sub_1AFB80478()
{
  uint64_t v0;
  double v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  double v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  __n128 v20;
  float v21;
  float v22;
  float v23;
  float v24;
  double v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  _OWORD *v30;
  double v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  __n128 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  double v60;
  __n128 v61;
  float v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  _OWORD *v69;
  __n128 *v70;
  uint64_t v71;
  float v72;
  double v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  uint64_t v81;
  __n128 v82;
  float v83;
  float v84;
  float v85;
  float v86;
  __n128 v87;
  __int128 v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  _OWORD *v92;
  double v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  _OWORD *v100;
  uint64_t v101;
  float v102;
  float v103;
  float v104;
  float v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  uint64_t v114;
  double v115;
  float v116;
  __n128 v117;
  __n128 v118;
  double v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  uint64_t v127;
  __n128 v128;
  float v129;
  float v130;
  float v131;
  float v132;
  float v133;
  float v134;
  __n128 v135;
  __n128 v136;
  double v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  uint64_t v145;
  float v146;
  float v147;
  float v148;
  float v149;
  uint64_t v151;
  uint64_t v152;
  int v153;
  int v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  int v241;
  int v242;
  int v243;
  int v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  int64x2_t v250;
  int64x2_t v251;
  int64x2_t v252;
  __n128 v253;
  __n128 v254;
  __n128 v255;
  __n128 v256;
  __n128 v257;
  __n128 v258;
  __n128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __n128 v264;
  __n128 v265;
  __n128 v266;
  __n128 v267;
  __n128 v268;
  __n128 v269;
  __n128 v270;
  __n128 v271;
  __n128 v272;
  __n128 v273;
  __n128 v274;
  __n128 v275;
  __n128 v276;
  __n128 v277;
  __n128 v278;
  __n128 v279;
  __n128 v280;
  __n128 v281;
  __n128 v282;
  __n128 v283;
  __n128 v284;
  __n128 v285;
  __n128 v286;
  __n128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  _OWORD v292[2];
  _OWORD v293[2];
  _OWORD v294[2];
  _OWORD v295[2];
  _OWORD v296[2];
  __int128 v297;
  __int128 v298;
  _OWORD v299[2];
  _OWORD v300[2];
  _OWORD v301[2];
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __n128 v308;
  __n128 v309;
  __n128 v310;
  __n128 v311;
  __n128 v312;
  __n128 v313;
  int64x2_t v314;
  __int128 v315;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025810;
  v314 = 0uLL;
  *(_QWORD *)&v315 = 0;
  *((_QWORD *)&v315 + 1) = 0x3FF0000000000000;
  __asm { FMOV            V2.2D, #1.0 }
  v253 = _Q2;
  OUTLINED_FUNCTION_12_17(COERCE_DOUBLE(8), v6, _Q2);
  v306 = xmmword_1B0025820;
  v307 = xmmword_1B0025830;
  v304 = xmmword_1B0025840;
  v305 = xmmword_1B0025850;
  v302 = xmmword_1B0025860;
  v303 = xmmword_1B0025870;
  OUTLINED_FUNCTION_8_16(0.25, 0.185939208, v7);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B0025880, (__n128)xmmword_1B0025890);
  OUTLINED_FUNCTION_7_19((__n128)xmmword_1B00258A0, (__n128)xmmword_1B00258B0, v8);
  v290 = xmmword_1B00258C0;
  v291 = xmmword_1B00258D0;
  OUTLINED_FUNCTION_1_11((__n128)xmmword_1B00258E0, (__n128)xmmword_1B00258F0, v9);
  v245 = v10;
  v11 = OUTLINED_FUNCTION_17_15();
  OUTLINED_FUNCTION_15_5(v12, v13, v14, v15, v16, v17, v18, v19, v11, v20, 100.0, v21, v22, v23, v24, v301, v300, 0x3F8000003F800000, 1065353216,
    v299,
    0,
    &v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    &v262,
    &v260,
    &v258,
    1112014848,
    1097859072,
    &v256,
    v245);
  v252 = vdupq_n_s64(0x3C74BCC7A0000000uLL);
  v314 = v252;
  v315 = xmmword_1B0025910;
  OUTLINED_FUNCTION_12_17(*(double *)v252.i64, 1.79868456e-17, v253);
  v306 = xmmword_1B0025820;
  v307 = xmmword_1B0025830;
  v304 = xmmword_1B0025840;
  v305 = xmmword_1B0025850;
  v302 = xmmword_1B0025860;
  v303 = xmmword_1B0025870;
  OUTLINED_FUNCTION_8_16(0.185939208, v25, v26);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B0025880, (__n128)xmmword_1B0025920);
  OUTLINED_FUNCTION_7_19((__n128)xmmword_1B00258A0, (__n128)xmmword_1B0025930, v27);
  v290 = xmmword_1B0025940;
  v291 = xmmword_1B0025950;
  OUTLINED_FUNCTION_1_11((__n128)xmmword_1B00258E0, (__n128)xmmword_1B0025960, v28);
  v246 = v29;
  OUTLINED_FUNCTION_3_10();
  v173 = v30;
  v31 = OUTLINED_FUNCTION_10_7();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v32, v33, v34, v35, v36, v37, v38, v39, v31, v40, v41, v42, v43, v44, v45, v46, v301, v300,
    0x3F8000003F800000,
    1065353216,
    v299,
    0,
    &v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    &v290,
    &v288,
    v173,
    v178,
    v183,
    v188,
    v193,
    v198,
    v203,
    v208,
    v213,
    v218,
    v223,
    v228,
    v233,
    v235,
    v237,
    1112014848,
    1097859072,
    &v256,
    v246);
  v251 = vdupq_n_s64(0x3FAF1B2C00000000uLL);
  v314 = v251;
  v315 = xmmword_1B0025970;
  OUTLINED_FUNCTION_12_17(*(double *)v251.i64, 0.06075418, v253);
  v306 = xmmword_1B0025980;
  v307 = xmmword_1B0025990;
  v304 = xmmword_1B00259A0;
  v305 = xmmword_1B00259B0;
  v302 = xmmword_1B00259C0;
  v303 = xmmword_1B00259D0;
  OUTLINED_FUNCTION_8_16(0.399075091, 0.297381788, v47);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B00259E0, (__n128)xmmword_1B00259F0);
  OUTLINED_FUNCTION_7_19((__n128)xmmword_1B0025A00, (__n128)xmmword_1B0025A10, v48);
  v290 = xmmword_1B0025A20;
  v291 = xmmword_1B0025A30;
  v288 = xmmword_1B0025A40;
  v289 = xmmword_1B0025A50;
  v286 = v49;
  v287 = v49;
  v284 = v49;
  v285 = v49;
  v282 = v49;
  v283 = v49;
  v280 = v49;
  v281 = v49;
  v278 = v49;
  v279 = v49;
  v276 = v49;
  v277 = v49;
  v274 = v49;
  v275 = v49;
  v272 = v49;
  v273 = v49;
  v270 = v49;
  v271 = v49;
  v268 = v49;
  v269 = v49;
  v266 = v49;
  v267 = v49;
  v264 = v49;
  v265 = v49;
  v262 = xmmword_1B0025A60;
  v263 = xmmword_1B0025A70;
  OUTLINED_FUNCTION_9_7((__n128)xmmword_1B0025A80, (__n128)xmmword_1B0025A90, v49);
  v247 = v50;
  OUTLINED_FUNCTION_3_10();
  v174 = v51;
  OUTLINED_FUNCTION_20_1();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, 112.15, 500.0, v62, 1.2, 1.2, 1.2, v301, v300,
    0x3F8000003F800000,
    1062746421,
    v299,
    0,
    &v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    &v290,
    &v288,
    v174,
    v179,
    v184,
    v189,
    v194,
    v199,
    v204,
    v209,
    v214,
    v219,
    v224,
    v229,
    v234,
    v236,
    v238,
    1112014848,
    1097859072,
    &v256,
    v247);
  v250 = vdupq_n_s64(0x3FCF1B2BA0000000uLL);
  v314 = v250;
  v315 = xmmword_1B0025AB0;
  v63 = OUTLINED_FUNCTION_19_19();
  v306 = xmmword_1B0025AC0;
  v307 = xmmword_1B0025AD0;
  v304 = xmmword_1B0025AE0;
  v305 = xmmword_1B0025AF0;
  v302 = xmmword_1B0025B00;
  v303 = xmmword_1B0025B10;
  OUTLINED_FUNCTION_14_6(v63);
  OUTLINED_FUNCTION_22(v64, (__n128)xmmword_1B0025B20);
  v296[0] = v65;
  OUTLINED_FUNCTION_4_16(v65, (__n128)xmmword_1B0025B30);
  v290 = xmmword_1B0025B40;
  v291 = xmmword_1B0025B50;
  v288 = xmmword_1B0025B60;
  v289 = xmmword_1B0025B70;
  OUTLINED_FUNCTION_6_10(v66);
  v262 = xmmword_1B0025B80;
  v263 = xmmword_1B0025B90;
  OUTLINED_FUNCTION_9_7((__n128)xmmword_1B0025BA0, (__n128)xmmword_1B0025BB0, v67);
  v248 = v68;
  OUTLINED_FUNCTION_18_27();
  OUTLINED_FUNCTION_0_12();
  v155 = v69;
  OUTLINED_FUNCTION_21_20();
  v249 = v70[118];
  v72 = *(float *)(v71 + 3016);
  v73 = OUTLINED_FUNCTION_16_12();
  OUTLINED_FUNCTION_15_5(v74, v75, v76, v77, v78, v79, v80, v81, v73, v82, v72, v83, v84, v85, v86, v301, v300, 0x3F8000003F800000, 1052887464,
    v299,
    0,
    &v297,
    v296,
    v155,
    v158,
    v161,
    v164,
    v167,
    v170,
    v175,
    v180,
    v185,
    v190,
    v195,
    v200,
    v205,
    v210,
    v215,
    v220,
    v225,
    v230,
    &v262,
    &v260,
    v239,
    v241,
    v243,
    &v256,
    v248);
  v314 = v250;
  v315 = xmmword_1B0025AB0;
  v87 = OUTLINED_FUNCTION_19_19();
  v306 = v88;
  v307 = xmmword_1B0025AD0;
  v304 = xmmword_1B0025AE0;
  v305 = xmmword_1B0025AF0;
  v302 = xmmword_1B0025B00;
  v303 = xmmword_1B0025B10;
  OUTLINED_FUNCTION_14_6(v87);
  v297 = (__int128)v89;
  v298 = xmmword_1B0025B20;
  v296[0] = v89;
  OUTLINED_FUNCTION_4_16(v89, (__n128)xmmword_1B0025B30);
  v290 = xmmword_1B0025B40;
  v291 = xmmword_1B0025B50;
  v288 = xmmword_1B0025B60;
  v289 = xmmword_1B0025B70;
  OUTLINED_FUNCTION_6_10(v90);
  v262 = xmmword_1B0025B80;
  v263 = xmmword_1B0025B90;
  v260 = xmmword_1B0025BA0;
  v261 = xmmword_1B0025BB0;
  v258 = v91;
  v259 = v91;
  v256 = v91;
  v257 = v91;
  v254 = v91;
  v255 = v91;
  OUTLINED_FUNCTION_0_12();
  v156 = v92;
  OUTLINED_FUNCTION_21_20();
  v93 = OUTLINED_FUNCTION_16_12();
  OUTLINED_FUNCTION_11_9(v94, v95, v96, v97, v98, v99, v100, v101, v93, v249, v72, v102, v103, v104, v105, v301, v300, 0x3F8000003F800000, 1052887464,
    v299,
    0,
    &v297,
    v296,
    v156,
    v159,
    v162,
    v165,
    v168,
    v171,
    v176,
    v181,
    v186,
    v191,
    v196,
    v201,
    v206,
    v211,
    v216,
    v221,
    v226,
    v231,
    &v262,
    &v260,
    &v258,
    1112014848,
    1097859072,
    &v256,
    (uint64_t)&v254);
  v314 = v251;
  v315 = xmmword_1B0025970;
  v312 = v253;
  v313 = v253;
  v310 = v253;
  v311 = v253;
  v308 = v253;
  v309 = v253;
  v306 = xmmword_1B0025980;
  v307 = xmmword_1B0025990;
  v304 = xmmword_1B00259A0;
  v305 = xmmword_1B00259B0;
  v302 = xmmword_1B00259C0;
  v303 = xmmword_1B00259D0;
  v301[0] = v253;
  v301[1] = v253;
  v300[0] = v253;
  v300[1] = v253;
  v299[0] = v253;
  v299[1] = v253;
  v297 = xmmword_1B00259E0;
  v298 = xmmword_1B00259F0;
  v296[0] = xmmword_1B0025A00;
  v296[1] = xmmword_1B0025A10;
  v295[0] = v253;
  v295[1] = v253;
  v294[0] = v253;
  v294[1] = v253;
  v293[0] = v253;
  v293[1] = v253;
  v292[0] = v253;
  v292[1] = v253;
  v290 = xmmword_1B0025A20;
  v291 = xmmword_1B0025A30;
  v288 = xmmword_1B0025A40;
  v289 = xmmword_1B0025A50;
  v286 = v253;
  v287 = v253;
  v284 = v253;
  v285 = v253;
  v282 = v253;
  v283 = v253;
  v280 = v253;
  v281 = v253;
  v278 = v253;
  v279 = v253;
  v276 = v253;
  v277 = v253;
  v274 = v253;
  v275 = v253;
  v272 = v253;
  v273 = v253;
  v270 = v253;
  v271 = v253;
  v268 = v253;
  v269 = v253;
  v266 = v253;
  v267 = v253;
  v264 = v253;
  v265 = v253;
  v262 = xmmword_1B0025A60;
  v263 = xmmword_1B0025A70;
  v260 = xmmword_1B0025A80;
  v261 = xmmword_1B0025A90;
  v258 = v253;
  v259 = v253;
  v256 = v253;
  v257 = v253;
  v254 = v253;
  v255 = v253;
  OUTLINED_FUNCTION_18_27();
  OUTLINED_FUNCTION_0_12();
  v157 = v106;
  OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_11_9(v107, v108, v109, v110, v111, v112, v113, v114, v115, (__n128)xmmword_1B0025AA0, 112.15, v116, 1.2, 1.2, 1.2, v301, v300, 0x3F8000003F800000, 1062746421,
    v299,
    0,
    &v297,
    v296,
    v157,
    v160,
    v163,
    v166,
    v169,
    v172,
    v177,
    v182,
    v187,
    v192,
    v197,
    v202,
    v207,
    v212,
    v217,
    v222,
    v227,
    v232,
    &v262,
    &v260,
    v240,
    v242,
    v244,
    &v256,
    (uint64_t)&v254);
  v314 = v252;
  v315 = xmmword_1B0025910;
  v117 = OUTLINED_FUNCTION_5_13();
  v298 = xmmword_1B0025920;
  v296[0] = xmmword_1B00258A0;
  OUTLINED_FUNCTION_4_16(v117, (__n128)xmmword_1B0025930);
  v290 = xmmword_1B0025940;
  v291 = xmmword_1B0025950;
  v288 = xmmword_1B00258E0;
  OUTLINED_FUNCTION_2_1(v118, (__n128)xmmword_1B0025960);
  OUTLINED_FUNCTION_13_18();
  v119 = OUTLINED_FUNCTION_10_7();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v120, v121, v122, v123, v124, v125, v126, v127, v119, v128, v129, v130, v131, v132, v133, v134, v301, v300,
    v151,
    v153,
    v299,
    0,
    &v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    &v262,
    &v260,
    &v258,
    1112014848,
    1097859072,
    &v256,
    (uint64_t)&v254);
  v314 = 0uLL;
  *(_QWORD *)&v315 = 0;
  *((_QWORD *)&v315 + 1) = 0x3FF0000000000000;
  v135 = OUTLINED_FUNCTION_5_13();
  v298 = xmmword_1B0025890;
  v296[0] = xmmword_1B00258A0;
  OUTLINED_FUNCTION_4_16(v135, (__n128)xmmword_1B00258B0);
  v290 = xmmword_1B00258C0;
  v291 = xmmword_1B00258D0;
  v288 = xmmword_1B00258E0;
  OUTLINED_FUNCTION_2_1(v136, (__n128)xmmword_1B00258F0);
  OUTLINED_FUNCTION_13_18();
  v137 = OUTLINED_FUNCTION_17_15();
  OUTLINED_FUNCTION_11_9(v138, v139, v140, v141, v142, v143, v144, v145, v137, (__n128)xmmword_1B0025900, 100.0, v146, v147, v148, v149, v301, v300, v152, v154,
    v299,
    0,
    &v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    &v290,
    &v288,
    &v286,
    &v284,
    &v282,
    &v280,
    &v278,
    &v276,
    &v274,
    &v272,
    &v270,
    &v268,
    &v266,
    &v264,
    &v262,
    &v260,
    &v258,
    1112014848,
    1097859072,
    &v256,
    (uint64_t)&v254);
  return v0;
}

void sub_1AFB81244()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0xD000000000000010;
  v32 = 0x80000001B0050EC0;
  v33 = 0xD000000000000014;
  v34 = 0x80000001B0050EE0;
  v35 = 9;
  v27 = 0x80000001B0050EC0;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0050EE0;
  v30 = 9;
  v21 = 0x617274736F746C41;
  v22 = 0xEF53202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0050E80;
  v25 = 9;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFB81A98();
  sub_1AFB84D44();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3AC49BA63F333333;
  *((_QWORD *)&v14 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v36, 30, 0, 3250, 200, 30, 1, 4, 0x414000003F800000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40C0000040800000);
}

uint64_t sub_1AFB81A98()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int64x2_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int64x2_t v78;
  __int128 v79;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  __asm { FMOV            V2.2D, #1.0 }
  v70 = _Q2;
  v71 = xmmword_1B0025E50;
  v68 = _Q2;
  v69 = _Q2;
  v66 = xmmword_1B0025E60;
  v67 = xmmword_1B0025E70;
  v64 = _Q2;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = _Q2;
  v60 = (int64x2_t)_Q2;
  v61 = xmmword_1B0025E90;
  v58 = _Q2;
  v59 = _Q2;
  v56 = _Q2;
  v57 = _Q2;
  v54 = _Q2;
  v55 = _Q2;
  v52 = _Q2;
  v53 = _Q2;
  v50 = _Q2;
  v51 = _Q2;
  v48 = _Q2;
  v49 = _Q2;
  v46 = _Q2;
  v47 = _Q2;
  v44 = _Q2;
  v45 = _Q2;
  v42 = _Q2;
  v43 = _Q2;
  v40 = _Q2;
  v41 = _Q2;
  v38 = _Q2;
  v39 = _Q2;
  v36 = _Q2;
  v37 = _Q2;
  v34 = _Q2;
  v35 = _Q2;
  v32 = _Q2;
  v33 = _Q2;
  v30 = _Q2;
  v31 = _Q2;
  v28 = _Q2;
  v29 = _Q2;
  v26 = _Q2;
  v27 = _Q2;
  v24 = _Q2;
  v25 = _Q2;
  v22 = _Q2;
  v23 = _Q2;
  v20 = _Q2;
  v21 = _Q2;
  v18 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0025EB0;
  v17 = xmmword_1B0025EC0;
  v9 = _Q2;
  v14 = _Q2;
  v15 = _Q2;
  v12 = _Q2;
  v13 = _Q2;
  v10 = _Q2;
  v11 = _Q2;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0025E60;
  v67 = xmmword_1B0025E70;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v19 = xmmword_1B0025EE0;
  v16 = xmmword_1B0025EF0;
  v17 = xmmword_1B0025F00;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B0025F20;
  v77 = xmmword_1B0025F30;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B0025F50;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0025F60;
  v67 = xmmword_1B0025F70;
  v64 = xmmword_1B0025F80;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025F90;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF992720000000uLL);
  v19 = xmmword_1B0025FB0;
  v16 = xmmword_1B0025FC0;
  v17 = xmmword_1B0025FD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025FE0;
  v79 = v9;
  v76 = xmmword_1B0025FF0;
  v77 = xmmword_1B0026000;
  v74 = xmmword_1B0026010;
  v75 = xmmword_1B0026020;
  v72 = xmmword_1B0026030;
  v73 = xmmword_1B0026040;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)xmmword_1B0026060;
  v61 = xmmword_1B0026070;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026080;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B00260A0;
  v17 = xmmword_1B0026090;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00260C0;
  v79 = xmmword_1B00260D0;
  v76 = xmmword_1B00260E0;
  v77 = xmmword_1B00260F0;
  v74 = xmmword_1B0026100;
  v75 = xmmword_1B0026110;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026150;
  v65 = xmmword_1B0026160;
  v62 = xmmword_1B0026170;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026180;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B00261A0;
  v17 = xmmword_1B0026190;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00261C0;
  v79 = xmmword_1B00261D0;
  v76 = xmmword_1B00261E0;
  v77 = xmmword_1B00261F0;
  v74 = xmmword_1B0026200;
  v75 = xmmword_1B0026210;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026240;
  v63 = xmmword_1B0026250;
  v60 = (int64x2_t)xmmword_1B0026260;
  v61 = xmmword_1B0026270;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026280;
  v19 = xmmword_1B0026290;
  v16 = xmmword_1B00262A0;
  v17 = xmmword_1B0026290;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v8 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B00262D0;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00262E0;
  v75 = xmmword_1B00262F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026300;
  v63 = xmmword_1B0026310;
  v60 = (int64x2_t)xmmword_1B0026320;
  v61 = xmmword_1B0026330;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026340;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026350;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B0026370;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026390;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00263A0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B00263C0;
  v77 = xmmword_1B00263D0;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026390;
  v19 = xmmword_1B0026400;
  v16 = xmmword_1B0026410;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B00263C0;
  v77 = xmmword_1B00263D0;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026400;
  v16 = xmmword_1B00263A0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B0026440;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026450;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B0026230;
  v62 = v9;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026410;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v79 = xmmword_1B0026470;
  v76 = xmmword_1B0026480;
  v77 = xmmword_1B0026490;
  v74 = xmmword_1B00264A0;
  v75 = xmmword_1B00264B0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = v9;
  v67 = xmmword_1B0026140;
  v64 = v9;
  v65 = xmmword_1B0026230;
  v62 = xmmword_1B00264C0;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v61 = xmmword_1B00264D0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00264E0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026500;
  v79 = xmmword_1B0026510;
  v76 = xmmword_1B0026520;
  v77 = xmmword_1B0026530;
  v74 = xmmword_1B0026540;
  v75 = xmmword_1B0026550;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = xmmword_1B0026560;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026570;
  v65 = xmmword_1B0026580;
  v62 = xmmword_1B0026590;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v61 = xmmword_1B00265A0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B00265B0;
  v19 = xmmword_1B00265C0;
  v16 = xmmword_1B00265D0;
  v17 = xmmword_1B00265E0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026600;
  v79 = xmmword_1B0026610;
  v76 = xmmword_1B0026620;
  v77 = xmmword_1B0026630;
  v74 = xmmword_1B0026640;
  v75 = xmmword_1B0026650;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = xmmword_1B0026130;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026140;
  v64 = xmmword_1B0026660;
  v65 = xmmword_1B0026670;
  v62 = xmmword_1B0026170;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v61 = xmmword_1B0026680;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026690;
  v19 = xmmword_1B00266A0;
  v16 = xmmword_1B00266B0;
  v17 = xmmword_1B00266C0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00266E0;
  v79 = xmmword_1B00266F0;
  v76 = xmmword_1B0026700;
  v77 = xmmword_1B0026710;
  v74 = xmmword_1B0026720;
  v75 = xmmword_1B0026730;
  v72 = xmmword_1B0026060;
  v73 = xmmword_1B0026040;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v61 = xmmword_1B0026740;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026750;
  v19 = xmmword_1B0026760;
  v16 = xmmword_1B0026770;
  v17 = xmmword_1B0026780;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.8, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    665496235,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026790;
  v79 = v9;
  v76 = xmmword_1B00267A0;
  v77 = xmmword_1B00267B0;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B00267C0;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B00267D0;
  v67 = xmmword_1B00267E0;
  v64 = xmmword_1B00267F0;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025F90;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026800;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026810;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0025E60;
  v67 = xmmword_1B0025E70;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  __asm { FMOV            V0.2D, #0.25 }
  v18 = _Q0;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026820;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B0025E30;
  v73 = xmmword_1B0025E40;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0025E60;
  v67 = xmmword_1B0025E70;
  v64 = v9;
  v65 = xmmword_1B0025E50;
  v62 = xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026830;
  v17 = xmmword_1B0026840;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1060320051,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  return v0;
}

uint64_t sub_1AFB84D44()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int64x2_t v82;
  __int128 v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v11 = vdupq_n_s64(0x3FD7575760000000uLL);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  __asm { FMOV            V1.2D, #1.0 }
  v74 = _Q1;
  v75 = xmmword_1B0025E50;
  v72 = _Q1;
  v73 = _Q1;
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = _Q1;
  v64 = (int64x2_t)_Q1;
  v65 = xmmword_1B0025E90;
  v62 = _Q1;
  v63 = _Q1;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v13 = _Q1;
  v10 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = _Q1;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B00268C0;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B00268D0;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v80 = xmmword_1B00268E0;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B00268F0;
  v79 = v13;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026920;
  v19 = v13;
  v16 = xmmword_1B0026930;
  v17 = xmmword_1B0026940;
  v14 = xmmword_1B0026950;
  v15 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025FE0;
  v83 = v13;
  v80 = xmmword_1B0025FF0;
  v81 = xmmword_1B0026000;
  v78 = xmmword_1B0026010;
  v79 = xmmword_1B0026020;
  v76 = xmmword_1B0026030;
  v77 = xmmword_1B0026040;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)xmmword_1B0026060;
  v65 = xmmword_1B0026070;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026080;
  v23 = xmmword_1B0026090;
  v20 = xmmword_1B00260A0;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0026980;
  v17 = xmmword_1B0026990;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1106247680,
    1101004800,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00260C0;
  v83 = xmmword_1B00260D0;
  v80 = xmmword_1B00260E0;
  v81 = xmmword_1B00260F0;
  v78 = xmmword_1B0026100;
  v79 = xmmword_1B0026110;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026150;
  v69 = xmmword_1B0026160;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026180;
  v23 = xmmword_1B0026190;
  v20 = xmmword_1B00261A0;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B00269B0;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B00269D0;
  v15 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00261C0;
  v83 = xmmword_1B00261D0;
  v80 = xmmword_1B00261E0;
  v81 = xmmword_1B00261F0;
  v78 = xmmword_1B0026200;
  v79 = xmmword_1B0026210;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026240;
  v67 = xmmword_1B0026250;
  v64 = (int64x2_t)xmmword_1B0026260;
  v65 = xmmword_1B0026270;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026280;
  v23 = xmmword_1B0026290;
  v20 = xmmword_1B00262A0;
  v21 = xmmword_1B0026290;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B00269F0;
  v17 = xmmword_1B0026A00;
  v14 = xmmword_1B0026A10;
  v15 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v12 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00262D0;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00262E0;
  v79 = xmmword_1B00262F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026300;
  v67 = xmmword_1B0026310;
  v64 = (int64x2_t)xmmword_1B0026320;
  v65 = xmmword_1B0026330;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026340;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026350;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A30;
  v17 = xmmword_1B0026A40;
  v14 = xmmword_1B0026A50;
  v15 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0026370;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A70;
  v17 = xmmword_1B0026A80;
  v14 = xmmword_1B0026A90;
  v15 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00263C0;
  v81 = xmmword_1B00263D0;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v16 = _Q0;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AC0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00263C0;
  v81 = xmmword_1B00263D0;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AE0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0026440;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026450;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = v13;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AF0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v83 = xmmword_1B0026470;
  v80 = xmmword_1B0026480;
  v81 = xmmword_1B0026490;
  v78 = xmmword_1B00264A0;
  v79 = xmmword_1B00264B0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = v13;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B00264C0;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v65 = xmmword_1B00264D0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00264E0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026B00;
  v17 = xmmword_1B0026B10;
  v14 = xmmword_1B0026B20;
  v15 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026500;
  v83 = xmmword_1B0026510;
  v80 = xmmword_1B0026520;
  v81 = xmmword_1B0026530;
  v78 = xmmword_1B0026540;
  v79 = xmmword_1B0026550;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = xmmword_1B0026560;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026570;
  v69 = xmmword_1B0026580;
  v66 = xmmword_1B0026590;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v65 = xmmword_1B00265A0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B00265B0;
  v23 = xmmword_1B00265C0;
  v20 = xmmword_1B00265D0;
  v21 = xmmword_1B00265E0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026B40;
  v17 = xmmword_1B0026B50;
  v14 = xmmword_1B0026B60;
  v15 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026600;
  v83 = xmmword_1B0026610;
  v80 = xmmword_1B0026620;
  v81 = xmmword_1B0026630;
  v78 = xmmword_1B0026640;
  v79 = xmmword_1B0026650;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = xmmword_1B0026220;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026660;
  v69 = xmmword_1B0026670;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v65 = xmmword_1B0026680;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026690;
  v23 = xmmword_1B00266A0;
  v20 = xmmword_1B00266B0;
  v21 = xmmword_1B00266C0;
  v18 = xmmword_1B0026B80;
  v19 = xmmword_1B0026B90;
  v16 = xmmword_1B0026BA0;
  v17 = xmmword_1B0026BB0;
  v14 = xmmword_1B0026BC0;
  v15 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026BD0;
  v83 = v13;
  v80 = xmmword_1B0026700;
  v81 = xmmword_1B0026710;
  v78 = xmmword_1B0026720;
  v79 = xmmword_1B0026730;
  v76 = xmmword_1B0026060;
  v77 = xmmword_1B0026040;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v65 = xmmword_1B0026740;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026750;
  v23 = xmmword_1B0026760;
  v20 = xmmword_1B0026770;
  v21 = xmmword_1B0026780;
  v18 = xmmword_1B0026BE0;
  v19 = xmmword_1B0026BF0;
  v16 = xmmword_1B0026C00;
  v17 = xmmword_1B0026A00;
  v14 = xmmword_1B0026C10;
  v15 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    665496235,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1101004800,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v79 = v13;
  v80 = xmmword_1B00268E0;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B00268F0;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026C30;
  v19 = v13;
  v16 = xmmword_1B0026C40;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026C60;
  v15 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026C80;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026C90;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  return v0;
}

void WeatherConditionConfigurationModel.init(condition:windSpeed:cloudCover:elevation:date:sunrise:sunset:timeZone:cameraPositionType:dynamicTypeSize:targetWindowSizeClass:displayLocation:collisionViewMetrics:)(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X7>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10)
{
  uint64_t v16;
  char v17;
  char v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;

  v16 = *a2;
  v17 = *((_BYTE *)a2 + 8);
  v18 = *a7;
  OUTLINED_FUNCTION_4_19();
  v19 = (int *)type metadata accessor for WeatherConditionConfigurationModel();
  v20 = a8 + v19[13];
  v21 = type metadata accessor for BackgroundMoonData();
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  OUTLINED_FUNCTION_10_0();
  v22 = OUTLINED_FUNCTION_17_16();
  v23(v22, a1);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_2_2(v24);
  *(double *)(a8 + v19[6]) = a9;
  *(_BYTE *)(a8 + v19[7]) = 0;
  v25 = a8 + v19[8];
  *(_QWORD *)v25 = v16;
  *(_BYTE *)(v25 + 8) = v17;
  v26 = a8 + v19[9];
  v27 = OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a3, v27);
  sub_1AFAEA560(a4, a8 + v19[10], &qword_1ED1F4BA0);
  sub_1AFAEA560(a5, a8 + v19[11], &qword_1ED1F4BA0);
  v28 = a8 + v19[12];
  v29 = OUTLINED_FUNCTION_12();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a6, v29);
  *(_BYTE *)(a8 + v19[14]) = v18;
  v30 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_6_11(v30, v31, v32, v33, v34, v35, v36, v37, a6, a10);
  *(_BYTE *)(a8 + v19[16]) = v41;
  *(_BYTE *)(a8 + v19[17]) = BYTE4(v41);
  OUTLINED_FUNCTION_13_19(v19[18], v39, v40, v41, v42, v43);
  OUTLINED_FUNCTION_3_11();
}

void WeatherConditionConfigurationModel.init(condition:windSpeed:cloudCover:elevation:date:sunrise:sunset:timeZone:moonData:cameraPositionType:dynamicTypeSize:targetWindowSizeClass:displayLocation:collisionViewMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;

  OUTLINED_FUNCTION_15_25();
  v14 = *v13;
  v15 = *((_BYTE *)v13 + 8);
  v16 = *a9;
  OUTLINED_FUNCTION_4_19();
  v17 = sub_1B0005FB0();
  OUTLINED_FUNCTION_5_14(v17);
  v18 = (int *)type metadata accessor for WeatherConditionConfigurationModel();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_7_20(v19);
  *(_QWORD *)(v10 + v18[6]) = v11;
  *(_BYTE *)(v10 + v18[7]) = 0;
  v20 = v10 + v18[8];
  *(_QWORD *)v20 = v14;
  *(_BYTE *)(v20 + 8) = v15;
  v21 = OUTLINED_FUNCTION_11_0();
  v22 = OUTLINED_FUNCTION_2_2(v21);
  OUTLINED_FUNCTION_14_7(v22, v10 + v18[10]);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_12();
  v23 = OUTLINED_FUNCTION_16_20();
  v24(v23, a7);
  sub_1AFAEA560(a8, v10 + v18[13], &qword_1ED1F3450);
  *(_BYTE *)(v10 + v18[14]) = v16;
  v25 = OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_6_11(v25, v26, v27, v28, v29, v30, v31, v32, a8, a10);
  *(_BYTE *)(v10 + v18[16]) = v36;
  *(_BYTE *)(v10 + v18[17]) = BYTE4(v36);
  OUTLINED_FUNCTION_13_19(v18[18], v34, v35, v36, v37, v38);
  OUTLINED_FUNCTION_3_11();
}

__n128 WeatherConditionConfigurationModel.init(condition:windSpeed:cloudCover:cloudKind:elevation:date:sunrise:sunset:timeZone:moonData:cameraPositionType:dynamicTypeSize:targetWindowSizeClass:displayLocation:collisionViewMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, char *a12, char *a13, __n128 *a14)
{
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  __n128 *v30;
  __n128 result;
  char v32;
  char v34;
  char v35;
  unint64_t v36;
  __n128 v37;

  OUTLINED_FUNCTION_15_25();
  v17 = *v16;
  v19 = *v18;
  v20 = *((_BYTE *)v18 + 8);
  v32 = *a10;
  v34 = *a12;
  v35 = *a13;
  v37 = *a14;
  v36 = a14[1].n128_u64[0];
  v21 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_5_14(v21);
  v22 = (int *)type metadata accessor for WeatherConditionConfigurationModel();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_7_20(v23);
  *(_QWORD *)(v14 + v22[6]) = v15;
  *(_BYTE *)(v14 + v22[7]) = v17;
  v24 = v14 + v22[8];
  *(_QWORD *)v24 = v19;
  *(_BYTE *)(v24 + 8) = v20;
  v25 = OUTLINED_FUNCTION_11_0();
  v26 = OUTLINED_FUNCTION_2_2(v25);
  OUTLINED_FUNCTION_14_7(v26, v14 + v22[10]);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_12();
  v27 = OUTLINED_FUNCTION_16_20();
  v28(v27, a8);
  sub_1AFAEA560(a9, v14 + v22[13], &qword_1ED1F3450);
  *(_BYTE *)(v14 + v22[14]) = v32;
  v29 = OUTLINED_FUNCTION_9_8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v17, a11, v29);
  *(_BYTE *)(v14 + v22[16]) = v34;
  *(_BYTE *)(v14 + v22[17]) = v35;
  v30 = (__n128 *)(v14 + v22[18]);
  result = v37;
  *v30 = v37;
  v30[1].n128_u64[0] = v36;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherConditionConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B0005FB0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[8];
    v14 = a3[9];
    v15 = (char *)a1 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = (char *)a1 + v14;
    v18 = (char *)a2 + v14;
    v19 = sub_1B00058D8();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v21 = a3[10];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v21, 1, v19))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v20(v22, v23, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v19);
    }
    v26 = a3[11];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v26, 1, v19))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v20(v27, v28, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v19);
    }
    v30 = a3[12];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    v34 = a3[13];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = (int *)type metadata accessor for BackgroundMoonData();
    if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v20(v35, v36, v19);
      v39 = v37[5];
      v40 = &v35[v39];
      v41 = &v36[v39];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v36[v39], 1, v19))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v20(v40, v41, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v19);
      }
      v43 = v37[6];
      v44 = &v35[v43];
      v45 = &v36[v43];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v36[v43], 1, v19))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v20(v44, v45, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v19);
      }
      *(_QWORD *)&v35[v37[7]] = *(_QWORD *)&v36[v37[7]];
      *(_QWORD *)&v35[v37[8]] = *(_QWORD *)&v36[v37[8]];
      *(_QWORD *)&v35[v37[9]] = *(_QWORD *)&v36[v37[9]];
      v47 = v37[10];
      v48 = &v35[v47];
      v49 = &v36[v47];
      v50 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v50;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
    }
    v51 = a3[15];
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    v54 = sub_1B0007480();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    v55 = a3[17];
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
    v56 = a3[18];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_DWORD *)v57 + 2) = *((_DWORD *)v58 + 2);
    *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for WeatherConditionConfigurationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  int EnumTagSinglePayload;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  int v40;
  int v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  size_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  size_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;

  v6 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1B00058D8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  v19(v15, v16, v17);
  v20 = a3[10];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v20, 1, v17);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v21, v22, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v19((uint64_t)v21, (uint64_t)v22, v17);
LABEL_7:
  v26 = a3[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = __swift_getEnumTagSinglePayload(a1 + v26, 1, v17);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v17);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v27, v28, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v27, v17);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v19((uint64_t)v27, (uint64_t)v28, v17);
LABEL_13:
  v32 = a3[12];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  v36 = a3[13];
  v37 = (char *)(a1 + v36);
  v38 = (char *)(a2 + v36);
  v39 = (int *)type metadata accessor for BackgroundMoonData();
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v39);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, (uint64_t)v39);
  if (!v40)
  {
    if (v41)
    {
      sub_1AFB891E4((uint64_t)v37);
      goto LABEL_19;
    }
    v78 = (void (*)(uint64_t, char *, uint64_t))v19;
    v19((uint64_t)v37, (uint64_t)v38, v17);
    v48 = v39[5];
    v49 = &v38[v48];
    v79 = (uint64_t)&v37[v48];
    v50 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v48], 1, v17);
    v51 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v17);
    if (v50)
    {
      if (v51)
      {
        v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
        v53 = (void *)v79;
LABEL_32:
        memcpy(v53, v49, v52);
        goto LABEL_35;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v79, v49, v17);
      __swift_storeEnumTagSinglePayload(v79, 0, 1, v17);
    }
    else
    {
      if (v51)
      {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v79, v17);
        v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
        v53 = (void *)v79;
        goto LABEL_32;
      }
      v78(v79, v49, v17);
    }
LABEL_35:
    v61 = v39[6];
    v62 = &v38[v61];
    v80 = (uint64_t)&v37[v61];
    v63 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v61], 1, v17);
    v64 = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v17);
    if (v63)
    {
      if (!v64)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v80, v62, v17);
        __swift_storeEnumTagSinglePayload(v80, 0, 1, v17);
        goto LABEL_43;
      }
      v65 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
      v66 = (void *)v80;
    }
    else
    {
      if (!v64)
      {
        v78(v80, v62, v17);
        goto LABEL_43;
      }
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v80, v17);
      v65 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
      v66 = (void *)v80;
    }
    memcpy(v66, v62, v65);
LABEL_43:
    *(_QWORD *)&v37[v39[7]] = *(_QWORD *)&v38[v39[7]];
    *(_QWORD *)&v37[v39[8]] = *(_QWORD *)&v38[v39[8]];
    *(_QWORD *)&v37[v39[9]] = *(_QWORD *)&v38[v39[9]];
    v67 = v39[10];
    v68 = &v37[v67];
    v69 = &v38[v67];
    *(_QWORD *)v68 = *(_QWORD *)v69;
    *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if (v41)
  {
LABEL_19:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_44;
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v42(v37, v38, v17);
  v43 = v39[5];
  v44 = &v37[v43];
  v45 = &v38[v43];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v43], 1, v17))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v42(v44, v45, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v17);
  }
  v54 = v39[6];
  v55 = &v37[v54];
  v56 = &v38[v54];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v54], 1, v17))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v42(v55, v56, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v17);
  }
  *(_QWORD *)&v37[v39[7]] = *(_QWORD *)&v38[v39[7]];
  *(_QWORD *)&v37[v39[8]] = *(_QWORD *)&v38[v39[8]];
  *(_QWORD *)&v37[v39[9]] = *(_QWORD *)&v38[v39[9]];
  v58 = v39[10];
  v59 = &v37[v58];
  v60 = &v38[v58];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, (uint64_t)v39);
LABEL_44:
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v70 = a3[15];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = sub_1B0007480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v71, v72, v73);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  v74 = a3[18];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_DWORD *)v75 = *(_DWORD *)v76;
  *(_DWORD *)(v75 + 4) = *(_DWORD *)(v76 + 4);
  *(_DWORD *)(v75 + 8) = *(_DWORD *)(v76 + 8);
  *(_QWORD *)(v75 + 16) = *(_QWORD *)(v76 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFB891E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BackgroundMoonData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for WeatherConditionConfigurationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[8];
  v13 = a3[9];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = a1 + v13;
  v17 = a2 + v13;
  v18 = sub_1B00058D8();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = a3[10];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (__swift_getEnumTagSinglePayload(a2 + v20, 1, v18))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v21, (uint64_t)v22, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v18);
  }
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  if (__swift_getEnumTagSinglePayload(a2 + v24, 1, v18))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v25, (uint64_t)v26, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v18);
  }
  v28 = a3[12];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  v32 = a3[13];
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  v35 = (int *)type metadata accessor for BackgroundMoonData();
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, (uint64_t)v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v33, (uint64_t)v34, v18);
    v37 = v35[5];
    v38 = &v33[v37];
    v39 = &v34[v37];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v34[v37], 1, v18))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v19((uint64_t)v38, (uint64_t)v39, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v18);
    }
    v41 = v35[6];
    v42 = &v33[v41];
    v43 = &v34[v41];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v34[v41], 1, v18))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v19((uint64_t)v42, (uint64_t)v43, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v18);
    }
    *(_QWORD *)&v33[v35[7]] = *(_QWORD *)&v34[v35[7]];
    *(_QWORD *)&v33[v35[8]] = *(_QWORD *)&v34[v35[8]];
    *(_QWORD *)&v33[v35[9]] = *(_QWORD *)&v34[v35[9]];
    *(_OWORD *)&v33[v35[10]] = *(_OWORD *)&v34[v35[10]];
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, (uint64_t)v35);
  }
  v45 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_1B0007480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  v49 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  v50 = a3[18];
  v51 = a1 + v50;
  v52 = a2 + v50;
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
  return a1;
}

uint64_t assignWithTake for WeatherConditionConfigurationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  const void *v24;
  int EnumTagSinglePayload;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  int v42;
  int v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int v52;
  int v53;
  size_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int v62;
  int v63;
  size_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;

  v6 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[8];
  v13 = a3[9];
  v14 = a1 + v12;
  v15 = (uint64_t *)(a2 + v12);
  v16 = *v15;
  *(_BYTE *)(v14 + 8) = *((_BYTE *)v15 + 8);
  *(_QWORD *)v14 = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = sub_1B00058D8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40);
  v21(v17, v18, v19);
  v22 = a3[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v22, 1, v19);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v19);
  if (EnumTagSinglePayload)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v23, v24, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v21((uint64_t)v23, (uint64_t)v24, v19);
LABEL_7:
  v28 = a3[11];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = __swift_getEnumTagSinglePayload(a1 + v28, 1, v19);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v19);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v29, v30, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v29, v19);
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  v21((uint64_t)v29, (uint64_t)v30, v19);
LABEL_13:
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  v38 = a3[13];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = (int *)type metadata accessor for BackgroundMoonData();
  v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, (uint64_t)v41);
  v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, (uint64_t)v41);
  if (!v42)
  {
    if (v43)
    {
      sub_1AFB891E4((uint64_t)v39);
      goto LABEL_19;
    }
    v80 = (void (*)(uint64_t, char *, uint64_t))v21;
    v21((uint64_t)v39, (uint64_t)v40, v19);
    v50 = v41[5];
    v51 = &v40[v50];
    v81 = (uint64_t)&v39[v50];
    v52 = __swift_getEnumTagSinglePayload((uint64_t)&v39[v50], 1, v19);
    v53 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v19);
    if (v52)
    {
      if (v53)
      {
        v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
        v55 = (void *)v81;
LABEL_32:
        memcpy(v55, v51, v54);
        goto LABEL_35;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v81, v51, v19);
      __swift_storeEnumTagSinglePayload(v81, 0, 1, v19);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v81, v19);
        v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
        v55 = (void *)v81;
        goto LABEL_32;
      }
      v80(v81, v51, v19);
    }
LABEL_35:
    v60 = v41[6];
    v61 = &v40[v60];
    v82 = (uint64_t)&v39[v60];
    v62 = __swift_getEnumTagSinglePayload((uint64_t)&v39[v60], 1, v19);
    v63 = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v19);
    if (v62)
    {
      if (!v63)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v82, v61, v19);
        __swift_storeEnumTagSinglePayload(v82, 0, 1, v19);
        goto LABEL_43;
      }
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
      v65 = (void *)v82;
    }
    else
    {
      if (!v63)
      {
        v80(v82, v61, v19);
        goto LABEL_43;
      }
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v82, v19);
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0) - 8) + 64);
      v65 = (void *)v82;
    }
    memcpy(v65, v61, v64);
LABEL_43:
    *(_QWORD *)&v39[v41[7]] = *(_QWORD *)&v40[v41[7]];
    *(_QWORD *)&v39[v41[8]] = *(_QWORD *)&v40[v41[8]];
    *(_QWORD *)&v39[v41[9]] = *(_QWORD *)&v40[v41[9]];
    v66 = v41[10];
    v67 = &v39[v66];
    v68 = &v40[v66];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = v70;
    *((_QWORD *)v67 + 1) = v69;
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if (v43)
  {
LABEL_19:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_44;
  }
  v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v44(v39, v40, v19);
  v45 = v41[5];
  v46 = &v39[v45];
  v47 = &v40[v45];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v45], 1, v19))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v44(v46, v47, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v19);
  }
  v56 = v41[6];
  v57 = &v39[v56];
  v58 = &v40[v56];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v56], 1, v19))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v44(v57, v58, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v19);
  }
  *(_QWORD *)&v39[v41[7]] = *(_QWORD *)&v40[v41[7]];
  *(_QWORD *)&v39[v41[8]] = *(_QWORD *)&v40[v41[8]];
  *(_QWORD *)&v39[v41[9]] = *(_QWORD *)&v40[v41[9]];
  *(_OWORD *)&v39[v41[10]] = *(_OWORD *)&v40[v41[10]];
  __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, (uint64_t)v41);
LABEL_44:
  v71 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v72 = a1 + v71;
  v73 = a2 + v71;
  v74 = sub_1B0007480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v75 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v75) = *(_BYTE *)(a2 + v75);
  v76 = a3[18];
  v77 = a1 + v76;
  v78 = a2 + v76;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *(_DWORD *)(v77 + 8) = *(_DWORD *)(v78 + 8);
  *(_QWORD *)(v77 + 16) = *(_QWORD *)(v78 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherConditionConfigurationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFB89C7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v23;
  int v24;

  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_0_1();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_22:
    v8 = a1 + v11;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_0_1();
  if (v12)
  {
    v7 = v13;
    v11 = a3[9];
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_0_1();
  if (v14)
  {
    v7 = v15;
    v11 = a3[10];
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0_1();
  if (v16)
  {
    v7 = v17;
    v11 = a3[12];
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
  OUTLINED_FUNCTION_0_1();
  if (v18)
  {
    v7 = v19;
    v11 = a3[13];
    goto LABEL_22;
  }
  sub_1B0007480();
  OUTLINED_FUNCTION_0_1();
  if (v20)
  {
    v7 = v21;
    v11 = a3[15];
    goto LABEL_22;
  }
  v23 = *(_QWORD *)(a1 + a3[18] + 16);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  v24 = v23 - 1;
  if (v24 < 0)
    v24 = -1;
  return (v24 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherConditionConfigurationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFB89DB4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_1_12();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    OUTLINED_FUNCTION_1_12();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      OUTLINED_FUNCTION_11_0();
      OUTLINED_FUNCTION_1_12();
      if (v13)
      {
        v8 = v14;
        v12 = a4[9];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
        OUTLINED_FUNCTION_1_12();
        if (v15)
        {
          v8 = v16;
          v12 = a4[10];
        }
        else
        {
          OUTLINED_FUNCTION_12();
          OUTLINED_FUNCTION_1_12();
          if (v17)
          {
            v8 = v18;
            v12 = a4[12];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3450);
            OUTLINED_FUNCTION_1_12();
            if (v19)
            {
              v8 = v20;
              v12 = a4[13];
            }
            else
            {
              sub_1B0007480();
              OUTLINED_FUNCTION_1_12();
              if (!v21)
              {
                *(_QWORD *)(a1 + a4[18] + 16) = a2;
                return;
              }
              v8 = v22;
              v12 = a4[15];
            }
          }
        }
      }
    }
    v9 = a1 + v12;
  }
  __swift_storeEnumTagSinglePayload(v9, a2, a2, v8);
}

void sub_1AFB89ED0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[9];

  v18[0] = 3;
  sub_1AFB8A654();
  sub_1AFB8D89C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x3F0000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 25, 0, 3500, 100, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003D23D70ALL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFB8A654()
{
  uint64_t v0;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int64x2_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int64x2_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int64x2_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v71 = _Q0;
  v72 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v69 = _Q1;
  v70 = _Q1;
  v67 = _Q1;
  v68 = _Q1;
  v65 = _Q1;
  v66 = _Q1;
  v63 = xmmword_1B0025E80;
  v64 = _Q1;
  v61 = (int64x2_t)_Q1;
  v62 = xmmword_1B0025E90;
  v59 = _Q1;
  v60 = _Q1;
  v57 = _Q1;
  v58 = _Q1;
  v55 = _Q1;
  v56 = _Q1;
  v53 = _Q1;
  v54 = _Q1;
  v51 = _Q1;
  v52 = _Q1;
  v49 = _Q1;
  v50 = _Q1;
  v47 = _Q1;
  v48 = _Q1;
  v45 = _Q1;
  v46 = _Q1;
  v43 = _Q1;
  v44 = _Q1;
  v41 = _Q1;
  v42 = _Q1;
  v39 = _Q1;
  v40 = _Q1;
  v37 = _Q1;
  v38 = _Q1;
  v35 = _Q1;
  v36 = _Q1;
  v33 = _Q1;
  v34 = _Q1;
  v31 = _Q1;
  v32 = _Q1;
  v29 = _Q1;
  v30 = _Q1;
  v27 = _Q1;
  v28 = _Q1;
  v25 = _Q1;
  v26 = _Q1;
  v23 = _Q1;
  v24 = _Q1;
  v21 = _Q1;
  v22 = _Q1;
  v19 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = xmmword_1B0025EA0;
  v16 = _Q1;
  v17 = xmmword_1B0025EB0;
  v18 = xmmword_1B0025EC0;
  v10 = _Q1;
  v11 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v20 = xmmword_1B0025EE0;
  v16 = v10;
  v17 = xmmword_1B0025EF0;
  v18 = xmmword_1B0025F00;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025FE0;
  v80 = v10;
  v77 = xmmword_1B0026E70;
  v78 = xmmword_1B0026000;
  v75 = xmmword_1B0026E80;
  v76 = xmmword_1B0026E90;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v72 = xmmword_1B0026EA0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF992720000000uLL);
  v20 = xmmword_1B0025FB0;
  v16 = v10;
  v17 = xmmword_1B0025FC0;
  v18 = xmmword_1B0025FD0;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 2464, -12.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026EB0;
  v80 = xmmword_1B0026EC0;
  v77 = xmmword_1B0026ED0;
  v78 = xmmword_1B0026EE0;
  v75 = xmmword_1B0026EF0;
  v76 = xmmword_1B0026F00;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FEB079E00000000uLL);
  v72 = xmmword_1B0026F10;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026F20;
  v66 = xmmword_1B0026F30;
  v63 = xmmword_1B0026F40;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0026F50;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026080;
  v20 = xmmword_1B0026090;
  v16 = v10;
  v17 = xmmword_1B00260A0;
  v18 = xmmword_1B0026090;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 3680, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1200.0, 0.8, 0.86667, 0.86667, 0.86667, &v65, &v63,
    0x3F5DDDDE3F5DDDDELL,
    1036831949,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026F60;
  v80 = xmmword_1B0026F70;
  v77 = xmmword_1B00260E0;
  v78 = xmmword_1B00260F0;
  v75 = xmmword_1B0026F80;
  v76 = xmmword_1B0026F90;
  v73 = xmmword_1B0026FA0;
  v74 = xmmword_1B0026FB0;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026FD0;
  v66 = xmmword_1B0026160;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026180;
  v20 = xmmword_1B0026190;
  v16 = v10;
  v17 = xmmword_1B00261A0;
  v18 = xmmword_1B0026190;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026FE0;
  v80 = xmmword_1B0026FF0;
  v77 = xmmword_1B0027000;
  v78 = xmmword_1B00261F0;
  v75 = xmmword_1B0026200;
  v76 = xmmword_1B0026210;
  v73 = xmmword_1B0027010;
  v74 = xmmword_1B0027020;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0027040;
  v66 = xmmword_1B0027050;
  v63 = xmmword_1B0026240;
  v64 = xmmword_1B0026250;
  v61 = (int64x2_t)xmmword_1B0026260;
  v62 = xmmword_1B0026270;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026280;
  v20 = xmmword_1B0026290;
  v16 = v10;
  v17 = xmmword_1B00262A0;
  v18 = xmmword_1B0026290;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0027070;
  v78 = xmmword_1B0025F70;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026300;
  v64 = xmmword_1B0026310;
  v61 = (int64x2_t)xmmword_1B0026320;
  v62 = xmmword_1B0026330;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026340;
  v20 = xmmword_1B0026130;
  v16 = v10;
  v17 = xmmword_1B0026350;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027080;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026370;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0027090;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026130;
  v16 = v10;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026400;
  v16 = v10;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026400;
  v16 = v10;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027080;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026440;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = v10;
  v64 = v10;
  v61 = (int64x2_t)xmmword_1B0026380;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v16 = v10;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00270A0;
  v80 = xmmword_1B0026470;
  v77 = xmmword_1B00270B0;
  v78 = xmmword_1B0026490;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v74 = 0u;
  v73 = 0u;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B00264C0;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v62 = xmmword_1B00264D0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v16 = v10;
  v17 = xmmword_1B00264E0;
  v18 = xmmword_1B0026140;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00270C0;
  v80 = xmmword_1B0026510;
  v77 = xmmword_1B00270D0;
  v78 = xmmword_1B00270E0;
  v75 = xmmword_1B00270F0;
  v76 = xmmword_1B0027100;
  v73 = xmmword_1B0027110;
  v74 = xmmword_1B0027120;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026560;
  v68 = xmmword_1B0027130;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026590;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v62 = xmmword_1B00265A0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B00265B0;
  v20 = xmmword_1B00265C0;
  v16 = v10;
  v17 = xmmword_1B00265D0;
  v18 = xmmword_1B00265E0;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 800.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026600;
  v80 = xmmword_1B0026610;
  v77 = xmmword_1B0027140;
  v78 = xmmword_1B0027150;
  v75 = xmmword_1B0027160;
  v76 = xmmword_1B0027170;
  v73 = xmmword_1B0027180;
  v74 = xmmword_1B0027190;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B00271A0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v62 = xmmword_1B0026680;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026690;
  v20 = xmmword_1B00266A0;
  v16 = v10;
  v17 = xmmword_1B00266B0;
  v18 = xmmword_1B00266C0;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00266E0;
  v80 = xmmword_1B00266F0;
  v77 = xmmword_1B0026700;
  v78 = xmmword_1B0026710;
  v75 = xmmword_1B0026720;
  v76 = xmmword_1B0026730;
  v74 = 0u;
  v73 = 0u;
  v71 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v72 = xmmword_1B00271B0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = xmmword_1B00271C0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = vdupq_n_s64(0x3FEF1F1F40000000uLL);
  v62 = xmmword_1B00271D0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026750;
  v20 = xmmword_1B0026760;
  v16 = v10;
  v17 = xmmword_1B0026770;
  v18 = xmmword_1B0026780;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    1036831949,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025F10;
  v80 = v10;
  v77 = xmmword_1B00271E0;
  v78 = xmmword_1B00267B0;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B00271F0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026900;
  v68 = xmmword_1B0026910;
  v65 = xmmword_1B0027200;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0027210;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026800;
  v20 = xmmword_1B0025EA0;
  v16 = v10;
  v17 = xmmword_1B0026810;
  v18 = xmmword_1B0025EA0;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 18272, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  __asm { FMOV            V0.2D, #0.25 }
  v19 = _Q0;
  v20 = xmmword_1B0025EA0;
  v16 = v10;
  v17 = xmmword_1B0026820;
  v18 = xmmword_1B0025EA0;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v74 = 0u;
  v73 = 0u;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = (int64x2_t)v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v20 = xmmword_1B0025EA0;
  v16 = v10;
  v17 = xmmword_1B0026830;
  v18 = xmmword_1B0026840;
  v14 = v10;
  v15 = v10;
  v12 = v10;
  v13 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  return v0;
}

uint64_t sub_1AFB8D89C()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int64x2_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int64x2_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  int64x2_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int64x2_t v81;
  __int128 v82;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  __asm { FMOV            V2.2D, #1.0 }
  v75 = _Q2;
  v76 = _Q2;
  __asm { FMOV            V0.2D, #0.5 }
  v11 = (__int128)_Q0;
  v73 = _Q0;
  v74 = xmmword_1B0026E60;
  v71 = _Q2;
  v72 = _Q2;
  v69 = _Q2;
  v70 = _Q2;
  v67 = _Q2;
  v68 = _Q2;
  v65 = xmmword_1B0025E80;
  v66 = _Q2;
  v63 = (int64x2_t)_Q2;
  v64 = xmmword_1B0025E90;
  v61 = _Q2;
  v62 = _Q2;
  v59 = _Q2;
  v60 = _Q2;
  v57 = _Q2;
  v58 = _Q2;
  v55 = _Q2;
  v56 = _Q2;
  v53 = _Q2;
  v54 = _Q2;
  v51 = _Q2;
  v52 = _Q2;
  v49 = _Q2;
  v50 = _Q2;
  v47 = _Q2;
  v48 = _Q2;
  v45 = _Q2;
  v46 = _Q2;
  v43 = _Q2;
  v44 = _Q2;
  v41 = _Q2;
  v42 = _Q2;
  v39 = _Q2;
  v40 = _Q2;
  v37 = _Q2;
  v38 = _Q2;
  v35 = _Q2;
  v36 = _Q2;
  v33 = _Q2;
  v34 = _Q2;
  v31 = _Q2;
  v32 = _Q2;
  v29 = _Q2;
  v30 = _Q2;
  v27 = _Q2;
  v28 = _Q2;
  v25 = _Q2;
  v26 = _Q2;
  v23 = _Q2;
  v24 = _Q2;
  v12 = _Q2;
  v21 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0025EB0;
  v20 = xmmword_1B0025EC0;
  v17 = xmmword_1B0026860;
  v18 = _Q2;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v9 = vdupq_n_s64(0x3FD7575760000000uLL);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = xmmword_1B0025EE0;
  v19 = xmmword_1B0025EF0;
  v20 = xmmword_1B0025F00;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B00268C0;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B00268D0;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v74 = xmmword_1B0026EA0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = xmmword_1B0025FB0;
  v19 = xmmword_1B0025FC0;
  v20 = xmmword_1B0025FD0;
  v17 = xmmword_1B0026920;
  v18 = v12;
  v15 = xmmword_1B0027240;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B0027250;
  v14 = xmmword_1B0027260;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.85, 0.85, 0.85, &v67, &v65,
    0x3F59999A3F59999ALL,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025FE0;
  v82 = v12;
  v79 = xmmword_1B0025FF0;
  v80 = xmmword_1B0026000;
  v77 = xmmword_1B0026010;
  v78 = xmmword_1B0026020;
  v75 = v12;
  v76 = v12;
  v73 = vdupq_n_s64(0x3FEB079E00000000uLL);
  v74 = xmmword_1B0026F10;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026F20;
  v68 = xmmword_1B0026F30;
  v65 = xmmword_1B0026F40;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0026F50;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026080;
  v22 = xmmword_1B0026090;
  v19 = xmmword_1B00260A0;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0026BC0;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B0027270;
  v14 = xmmword_1B0027280;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.86667, 0.86667, 0.86667, &v67, &v65,
    0x3F5DDDDE3F5DDDDELL,
    1036831949,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1106247680,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00260C0;
  v82 = xmmword_1B00260D0;
  v79 = xmmword_1B00260E0;
  v80 = xmmword_1B00260F0;
  v77 = xmmword_1B0026100;
  v78 = xmmword_1B0026110;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026FD0;
  v68 = xmmword_1B0026160;
  v65 = xmmword_1B0026170;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026180;
  v22 = xmmword_1B0026190;
  v19 = xmmword_1B00261A0;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0027290;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B00269D0;
  v14 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00261C0;
  v82 = xmmword_1B00261D0;
  v79 = xmmword_1B00261E0;
  v80 = xmmword_1B00261F0;
  v77 = xmmword_1B0026200;
  v78 = xmmword_1B0026210;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0027040;
  v68 = xmmword_1B0027050;
  v65 = xmmword_1B0026240;
  v66 = xmmword_1B0026250;
  v63 = (int64x2_t)xmmword_1B0026260;
  v64 = xmmword_1B0026270;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026280;
  v22 = xmmword_1B0026290;
  v19 = xmmword_1B00262A0;
  v20 = xmmword_1B0026290;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272A0;
  v16 = xmmword_1B00267B0;
  v13 = xmmword_1B0026A10;
  v14 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v10 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00262D0;
  v80 = xmmword_1B0025F70;
  v77 = xmmword_1B00262E0;
  v78 = xmmword_1B00262F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026300;
  v66 = xmmword_1B0026310;
  v63 = (int64x2_t)xmmword_1B0026320;
  v64 = xmmword_1B0026330;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026340;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B0026350;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272B0;
  v16 = xmmword_1B00272C0;
  v13 = xmmword_1B0026A50;
  v14 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026370;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026390;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B00263A0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0026A70;
  v16 = xmmword_1B0026A80;
  v13 = xmmword_1B0026A90;
  v14 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026220;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026390;
  v22 = xmmword_1B0026400;
  v19 = xmmword_1B0026410;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AC0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026220;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026400;
  v19 = xmmword_1B00263A0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AE0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026440;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = v12;
  v66 = v12;
  v63 = (int64x2_t)xmmword_1B0026380;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B0026410;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AF0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v82 = xmmword_1B0026470;
  v79 = xmmword_1B0026480;
  v80 = xmmword_1B0026490;
  v77 = xmmword_1B00264A0;
  v78 = xmmword_1B00264B0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B00264C0;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v64 = xmmword_1B00264D0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B00264E0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272D0;
  v16 = xmmword_1B00272E0;
  v13 = xmmword_1B0026B20;
  v14 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026500;
  v82 = xmmword_1B0026510;
  v79 = xmmword_1B0026520;
  v80 = xmmword_1B0026530;
  v77 = xmmword_1B0026540;
  v78 = xmmword_1B0026550;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026560;
  v70 = xmmword_1B0027130;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026590;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v64 = xmmword_1B00265A0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B00265B0;
  v22 = xmmword_1B00265C0;
  v19 = xmmword_1B00265D0;
  v20 = xmmword_1B00265E0;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272F0;
  v16 = xmmword_1B0027300;
  v13 = xmmword_1B0026B60;
  v14 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026600;
  v82 = xmmword_1B0026610;
  v79 = xmmword_1B0026620;
  v80 = xmmword_1B0026630;
  v77 = xmmword_1B0026640;
  v78 = xmmword_1B0026650;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B00271A0;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026170;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v64 = xmmword_1B0026680;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026690;
  v22 = xmmword_1B00266A0;
  v19 = xmmword_1B00266B0;
  v20 = xmmword_1B00266C0;
  v17 = xmmword_1B0026B80;
  v18 = xmmword_1B0026B90;
  v15 = xmmword_1B0027310;
  v16 = xmmword_1B0027320;
  v13 = xmmword_1B0027330;
  v14 = xmmword_1B0027340;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026BD0;
  v82 = v12;
  v79 = xmmword_1B0026700;
  v80 = xmmword_1B0026710;
  v77 = xmmword_1B0026720;
  v78 = xmmword_1B0026730;
  v75 = v12;
  v76 = v12;
  v73 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v74 = xmmword_1B00271B0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = xmmword_1B00271C0;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = vdupq_n_s64(0x3FEF1F1F40000000uLL);
  v64 = xmmword_1B00271D0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026750;
  v22 = xmmword_1B0026760;
  v19 = xmmword_1B0026770;
  v20 = xmmword_1B0026780;
  v17 = xmmword_1B0026BE0;
  v18 = xmmword_1B0026BF0;
  v15 = xmmword_1B0027350;
  v16 = xmmword_1B0027360;
  v13 = xmmword_1B0027370;
  v14 = xmmword_1B0027380;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.85, &v67, &v65,
    0x3F59999A3F59999ALL,
    1036831949,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v78 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B00271F0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B00267D0;
  v70 = xmmword_1B00267E0;
  v67 = xmmword_1B0027390;
  v68 = xmmword_1B0026140;
  v65 = xmmword_1B0025F90;
  v66 = xmmword_1B0025FA0;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026800;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026810;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026C30;
  v18 = v12;
  v15 = xmmword_1B00273A0;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B00273B0;
  v14 = xmmword_1B00273C0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  __asm { FMOV            V0.2D, #0.25 }
  v21 = _Q0;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026820;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026C80;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026C90;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = (int64x2_t)v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026830;
  v20 = xmmword_1B0026840;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  return v0;
}

void sub_1AFB90DBC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[9];

  v18[0] = 3;
  sub_1AFB9153C();
  sub_1AFB94730();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x3F0000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 25, 0, 3250, 100, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003D23D70ALL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFB9153C()
{
  uint64_t v0;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int64x2_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int64x2_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  __asm { FMOV            V2.2D, #1.0 }
  v73 = _Q2;
  v74 = _Q2;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v71 = _Q0;
  v72 = xmmword_1B0026E60;
  v69 = _Q2;
  v70 = _Q2;
  v67 = _Q2;
  v68 = _Q2;
  v65 = _Q2;
  v66 = _Q2;
  v63 = xmmword_1B0025E80;
  v64 = _Q2;
  v61 = _Q2;
  v62 = xmmword_1B0025E90;
  v59 = _Q2;
  v60 = _Q2;
  v57 = _Q2;
  v58 = _Q2;
  v55 = _Q2;
  v56 = _Q2;
  v53 = _Q2;
  v54 = _Q2;
  v51 = _Q2;
  v52 = _Q2;
  v49 = _Q2;
  v50 = _Q2;
  v47 = _Q2;
  v48 = _Q2;
  v45 = _Q2;
  v46 = _Q2;
  v43 = _Q2;
  v44 = _Q2;
  v41 = _Q2;
  v42 = _Q2;
  v39 = _Q2;
  v40 = _Q2;
  v37 = _Q2;
  v38 = _Q2;
  v35 = _Q2;
  v36 = _Q2;
  v33 = _Q2;
  v34 = _Q2;
  v31 = _Q2;
  v32 = _Q2;
  v29 = _Q2;
  v30 = _Q2;
  v27 = _Q2;
  v28 = _Q2;
  v25 = _Q2;
  v26 = _Q2;
  v23 = _Q2;
  v24 = _Q2;
  v21 = _Q2;
  v22 = _Q2;
  v19 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0025EB0;
  v18 = xmmword_1B0025EC0;
  v10 = _Q2;
  v11 = _Q2;
  v15 = _Q2;
  v16 = _Q2;
  v12 = _Q2;
  v13 = _Q2;
  v14 = _Q2;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v20 = xmmword_1B0025EE0;
  v17 = xmmword_1B0025EF0;
  v18 = xmmword_1B0025F00;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025F10;
  v80 = v10;
  v77 = xmmword_1B00273F0;
  v78 = xmmword_1B0025F30;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v9;
  v72 = xmmword_1B00271F0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026900;
  v68 = xmmword_1B0026910;
  v65 = xmmword_1B0025F80;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0025FA0;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF992720000000uLL);
  v20 = xmmword_1B0025FB0;
  v17 = xmmword_1B0025FC0;
  v18 = xmmword_1B0025FD0;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 2464, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025FE0;
  v80 = v10;
  v77 = xmmword_1B0025FF0;
  v78 = xmmword_1B0026000;
  v75 = xmmword_1B0026010;
  v76 = xmmword_1B0026020;
  v73 = v10;
  v74 = v10;
  v71 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v72 = xmmword_1B0026EA0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026080;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B00260A0;
  v18 = xmmword_1B0026090;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 3680, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    0,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026F60;
  v80 = xmmword_1B0026F70;
  v77 = xmmword_1B00260E0;
  v78 = xmmword_1B00260F0;
  v75 = xmmword_1B0026F80;
  v76 = xmmword_1B0026F90;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026FD0;
  v66 = xmmword_1B0026160;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026180;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B00261A0;
  v18 = xmmword_1B0026190;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026FE0;
  v80 = xmmword_1B0026FF0;
  v77 = xmmword_1B0027000;
  v78 = xmmword_1B00261F0;
  v75 = xmmword_1B0026200;
  v76 = xmmword_1B0026210;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0027040;
  v66 = xmmword_1B0027050;
  v63 = xmmword_1B0026240;
  v64 = xmmword_1B0026250;
  v61 = xmmword_1B0027400;
  v62 = xmmword_1B0026270;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026280;
  v20 = xmmword_1B0026290;
  v17 = xmmword_1B00262A0;
  v18 = xmmword_1B0026290;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027080;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0027410;
  v78 = xmmword_1B0025F70;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B0027420;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026300;
  v64 = xmmword_1B0026310;
  v61 = xmmword_1B0027430;
  v62 = xmmword_1B0027440;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026340;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B0026350;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 1.7764e-14, 0.65, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026370;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = xmmword_1B0027450;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = xmmword_1B0027450;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B00263C0;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = xmmword_1B0027460;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0026440;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = v10;
  v64 = v10;
  v61 = xmmword_1B0027450;
  v62 = xmmword_1B0025F70;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027470;
  v80 = xmmword_1B0026470;
  v77 = xmmword_1B00270B0;
  v78 = xmmword_1B0026490;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B0027420;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B00264C0;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0027480;
  v62 = xmmword_1B0027490;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B00264E0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00274A0;
  v80 = xmmword_1B00274B0;
  v77 = xmmword_1B00274C0;
  v78 = xmmword_1B00274D0;
  v75 = xmmword_1B00270F0;
  v76 = xmmword_1B0027100;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0027030;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026560;
  v68 = xmmword_1B0027130;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026590;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B00274E0;
  v62 = xmmword_1B00274F0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B00265B0;
  v20 = xmmword_1B00265C0;
  v17 = xmmword_1B00265D0;
  v18 = xmmword_1B00265E0;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 800.0, 0.75, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027500;
  v80 = xmmword_1B0027510;
  v77 = xmmword_1B0027520;
  v78 = xmmword_1B0027530;
  v75 = xmmword_1B0027160;
  v76 = xmmword_1B0027170;
  v73 = v10;
  v74 = v10;
  v71 = (int64x2_t)v10;
  v72 = xmmword_1B0026FC0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B00271A0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0027540;
  v62 = xmmword_1B0027550;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026690;
  v20 = xmmword_1B00266A0;
  v17 = xmmword_1B00266B0;
  v18 = xmmword_1B00266C0;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00266E0;
  v80 = xmmword_1B00266F0;
  v77 = xmmword_1B0026700;
  v78 = xmmword_1B0026710;
  v75 = xmmword_1B0026720;
  v76 = xmmword_1B0026730;
  v73 = v10;
  v74 = v10;
  v71 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v72 = xmmword_1B00271B0;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = xmmword_1B00271C0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0027560;
  v62 = xmmword_1B0027570;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026750;
  v20 = xmmword_1B0026760;
  v17 = xmmword_1B0026770;
  v18 = xmmword_1B0026780;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    0,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026790;
  v80 = v10;
  v77 = xmmword_1B0027580;
  v78 = xmmword_1B00267B0;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v9;
  v72 = xmmword_1B00271F0;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B00267D0;
  v68 = xmmword_1B00267E0;
  v65 = xmmword_1B0027390;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0025FA0;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026800;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026810;
  v18 = xmmword_1B0025EA0;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 18272, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  __asm { FMOV            V0.2D, #0.25 }
  v19 = _Q0;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026820;
  v18 = xmmword_1B0025EA0;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v9;
  v72 = xmmword_1B0026E60;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = v10;
  v62 = xmmword_1B0025E90;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026830;
  v18 = xmmword_1B0026840;
  v15 = v10;
  v16 = v10;
  v12 = v10;
  v13 = v10;
  v14 = v10;
  v11 = v10;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  return v0;
}

uint64_t sub_1AFB94730()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int64x2_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  int64x2_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int64x2_t v81;
  __int128 v82;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  __asm { FMOV            V2.2D, #1.0 }
  v75 = _Q2;
  v76 = _Q2;
  __asm { FMOV            V0.2D, #0.5 }
  v11 = (__int128)_Q0;
  v73 = _Q0;
  v74 = xmmword_1B0026E60;
  v71 = _Q2;
  v72 = _Q2;
  v69 = _Q2;
  v70 = _Q2;
  v67 = _Q2;
  v68 = _Q2;
  v65 = xmmword_1B0025E80;
  v66 = _Q2;
  v63 = _Q2;
  v64 = xmmword_1B0025E90;
  v61 = _Q2;
  v62 = _Q2;
  v59 = _Q2;
  v60 = _Q2;
  v57 = _Q2;
  v58 = _Q2;
  v55 = _Q2;
  v56 = _Q2;
  v53 = _Q2;
  v54 = _Q2;
  v51 = _Q2;
  v52 = _Q2;
  v49 = _Q2;
  v50 = _Q2;
  v47 = _Q2;
  v48 = _Q2;
  v45 = _Q2;
  v46 = _Q2;
  v43 = _Q2;
  v44 = _Q2;
  v41 = _Q2;
  v42 = _Q2;
  v39 = _Q2;
  v40 = _Q2;
  v37 = _Q2;
  v38 = _Q2;
  v35 = _Q2;
  v36 = _Q2;
  v33 = _Q2;
  v34 = _Q2;
  v31 = _Q2;
  v32 = _Q2;
  v29 = _Q2;
  v30 = _Q2;
  v27 = _Q2;
  v28 = _Q2;
  v25 = _Q2;
  v26 = _Q2;
  v23 = _Q2;
  v24 = _Q2;
  v12 = _Q2;
  v21 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0025EB0;
  v20 = xmmword_1B0025EC0;
  v17 = xmmword_1B0026860;
  v18 = _Q2;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v9 = vdupq_n_s64(0x3FD7575760000000uLL);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = xmmword_1B0025EE0;
  v19 = xmmword_1B0025EF0;
  v20 = xmmword_1B0025F00;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B00268C0;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B00268D0;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B00271F0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026900;
  v70 = xmmword_1B0026910;
  v67 = xmmword_1B0025F80;
  v68 = xmmword_1B0026140;
  v65 = xmmword_1B0025F90;
  v66 = xmmword_1B0025FA0;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = xmmword_1B0025FB0;
  v19 = xmmword_1B0025FC0;
  v20 = xmmword_1B0025FD0;
  v17 = xmmword_1B0026920;
  v18 = v12;
  v15 = xmmword_1B0027240;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B0027250;
  v14 = xmmword_1B0027260;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025FE0;
  v82 = v12;
  v79 = xmmword_1B0025FF0;
  v80 = xmmword_1B0026000;
  v77 = xmmword_1B0026010;
  v78 = xmmword_1B0026020;
  v75 = v12;
  v76 = v12;
  v73 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v74 = xmmword_1B0026EA0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026080;
  v22 = xmmword_1B0026090;
  v19 = xmmword_1B00260A0;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0026BC0;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B0027270;
  v14 = xmmword_1B0027280;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.85, 0.85, &v67, &v65,
    0x3F59999A3F59999ALL,
    0,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1106247680,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00260C0;
  v82 = xmmword_1B00260D0;
  v79 = xmmword_1B00260E0;
  v80 = xmmword_1B00260F0;
  v77 = xmmword_1B0026100;
  v78 = xmmword_1B0026110;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026FD0;
  v68 = xmmword_1B0026160;
  v65 = xmmword_1B0026170;
  v66 = xmmword_1B0025FA0;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026180;
  v22 = xmmword_1B0026190;
  v19 = xmmword_1B00261A0;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B0026970;
  v18 = v12;
  v15 = xmmword_1B0027290;
  v16 = xmmword_1B00269C0;
  v13 = xmmword_1B00269D0;
  v14 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B00261C0;
  v82 = xmmword_1B00261D0;
  v79 = xmmword_1B00261E0;
  v80 = xmmword_1B00261F0;
  v77 = xmmword_1B0026200;
  v78 = xmmword_1B0026210;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0027040;
  v68 = xmmword_1B0027050;
  v65 = xmmword_1B0026240;
  v66 = xmmword_1B0026250;
  v63 = xmmword_1B0027400;
  v64 = xmmword_1B0026270;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026280;
  v22 = xmmword_1B0026290;
  v19 = xmmword_1B00262A0;
  v20 = xmmword_1B0026290;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272A0;
  v16 = xmmword_1B00267B0;
  v13 = xmmword_1B0026A10;
  v14 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v10 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00262D0;
  v80 = xmmword_1B0025F70;
  v77 = xmmword_1B00262E0;
  v78 = xmmword_1B00262F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026300;
  v66 = xmmword_1B0026310;
  v63 = xmmword_1B0027430;
  v64 = xmmword_1B0027440;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026340;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B0026350;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272B0;
  v16 = xmmword_1B00272C0;
  v13 = xmmword_1B0026A50;
  v14 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026370;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = xmmword_1B0027450;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026390;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B00263A0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B0026A70;
  v16 = xmmword_1B0026A80;
  v13 = xmmword_1B0026A90;
  v14 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026220;
  v66 = v12;
  v63 = xmmword_1B0027450;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026390;
  v22 = xmmword_1B0026400;
  v19 = xmmword_1B0026410;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AC0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B00263C0;
  v80 = xmmword_1B00263D0;
  v77 = xmmword_1B00263E0;
  v78 = xmmword_1B00263F0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026220;
  v66 = v12;
  v63 = xmmword_1B0027460;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026400;
  v19 = xmmword_1B00263A0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AE0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = v10;
  v82 = xmmword_1B00262C0;
  v79 = xmmword_1B0026440;
  v80 = v12;
  v77 = v12;
  v78 = v12;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = v12;
  v66 = v12;
  v63 = xmmword_1B0027450;
  v64 = xmmword_1B0025F70;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B0026410;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = v11;
  v16 = xmmword_1B0026AB0;
  v13 = xmmword_1B0026AF0;
  v14 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v82 = xmmword_1B0026470;
  v79 = xmmword_1B0026480;
  v80 = xmmword_1B0026490;
  v77 = xmmword_1B00264A0;
  v78 = xmmword_1B00264B0;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B00264C0;
  v66 = xmmword_1B0025FA0;
  v63 = xmmword_1B0027480;
  v64 = xmmword_1B0027490;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026430;
  v22 = xmmword_1B0026130;
  v19 = xmmword_1B00264E0;
  v20 = xmmword_1B0026140;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272D0;
  v16 = xmmword_1B00272E0;
  v13 = xmmword_1B0026B20;
  v14 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026500;
  v82 = xmmword_1B0026510;
  v79 = xmmword_1B0026520;
  v80 = xmmword_1B0026530;
  v77 = xmmword_1B0026540;
  v78 = xmmword_1B0026550;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0027030;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026560;
  v70 = xmmword_1B0027130;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026590;
  v66 = xmmword_1B0025FA0;
  v63 = xmmword_1B00274E0;
  v64 = xmmword_1B00274F0;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B00265B0;
  v22 = xmmword_1B00265C0;
  v19 = xmmword_1B00265D0;
  v20 = xmmword_1B00265E0;
  v17 = v12;
  v18 = v12;
  v15 = xmmword_1B00272F0;
  v16 = xmmword_1B0027300;
  v13 = xmmword_1B0026B60;
  v14 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026600;
  v82 = xmmword_1B0026610;
  v79 = xmmword_1B0026620;
  v80 = xmmword_1B0026630;
  v77 = xmmword_1B0026640;
  v78 = xmmword_1B0026650;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v12;
  v74 = xmmword_1B0026FC0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B00271A0;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026170;
  v66 = xmmword_1B0025FA0;
  v63 = xmmword_1B0027540;
  v64 = xmmword_1B0027550;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026690;
  v22 = xmmword_1B00266A0;
  v19 = xmmword_1B00266B0;
  v20 = xmmword_1B00266C0;
  v17 = xmmword_1B0026B80;
  v18 = xmmword_1B0026B90;
  v15 = xmmword_1B0027310;
  v16 = xmmword_1B0027320;
  v13 = xmmword_1B0027330;
  v14 = xmmword_1B0027340;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.9, 0.9, &v67, &v65,
    0x3F6666663F666666,
    0,
    &v63,
    0,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    0,
    1097859072,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0026BD0;
  v82 = v12;
  v79 = xmmword_1B0026700;
  v80 = xmmword_1B0026710;
  v77 = xmmword_1B0026720;
  v78 = xmmword_1B0026730;
  v75 = v12;
  v76 = v12;
  v73 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v74 = xmmword_1B00271B0;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = xmmword_1B00271C0;
  v67 = v12;
  v68 = xmmword_1B0025E50;
  v65 = xmmword_1B0026050;
  v66 = xmmword_1B0025FA0;
  v63 = xmmword_1B0027560;
  v64 = xmmword_1B0027570;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026750;
  v22 = xmmword_1B0026760;
  v19 = xmmword_1B0026770;
  v20 = xmmword_1B0026780;
  v17 = xmmword_1B0026BE0;
  v18 = xmmword_1B0026BF0;
  v15 = xmmword_1B0027350;
  v16 = xmmword_1B0027360;
  v13 = xmmword_1B0027370;
  v14 = xmmword_1B0027380;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.85, &v67, &v65,
    0x3F59999A3F59999ALL,
    0,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1101004800,
    1101004800,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0025F10;
  v82 = v12;
  v78 = v12;
  v79 = xmmword_1B0025F20;
  v80 = xmmword_1B0025F30;
  v77 = xmmword_1B0025F40;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B00271F0;
  v71 = v12;
  v72 = v12;
  v69 = xmmword_1B00267D0;
  v70 = xmmword_1B00267E0;
  v67 = xmmword_1B0027390;
  v68 = xmmword_1B0026140;
  v65 = xmmword_1B0025F90;
  v66 = xmmword_1B0025FA0;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = (int64x2_t)xmmword_1B0026800;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026810;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026C30;
  v18 = v12;
  v15 = xmmword_1B00273A0;
  v16 = xmmword_1B0026C50;
  v13 = xmmword_1B00273B0;
  v14 = xmmword_1B00273C0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1119092736,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = v9;
  v82 = xmmword_1B0026850;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  __asm { FMOV            V0.2D, #0.25 }
  v21 = _Q0;
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026820;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026C80;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026C90;
  v14 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  v81 = (int64x2_t)xmmword_1B0027230;
  v82 = xmmword_1B0025DE0;
  v79 = xmmword_1B0025DF0;
  v80 = xmmword_1B0025E00;
  v77 = xmmword_1B0025E10;
  v78 = xmmword_1B0025E20;
  v75 = v12;
  v76 = v12;
  v73 = (int64x2_t)v11;
  v74 = xmmword_1B0026E60;
  v71 = v12;
  v72 = v12;
  v69 = v12;
  v70 = v12;
  v67 = v12;
  v68 = v12;
  v65 = xmmword_1B0025E80;
  v66 = v12;
  v63 = v12;
  v64 = xmmword_1B0025E90;
  v61 = v12;
  v62 = v12;
  v59 = v12;
  v60 = v12;
  v57 = v12;
  v58 = v12;
  v55 = v12;
  v56 = v12;
  v53 = v12;
  v54 = v12;
  v51 = v12;
  v52 = v12;
  v49 = v12;
  v50 = v12;
  v47 = v12;
  v48 = v12;
  v45 = v12;
  v46 = v12;
  v43 = v12;
  v44 = v12;
  v41 = v12;
  v42 = v12;
  v39 = v12;
  v40 = v12;
  v37 = v12;
  v38 = v12;
  v35 = v12;
  v36 = v12;
  v33 = v12;
  v34 = v12;
  v31 = v12;
  v32 = v12;
  v29 = v12;
  v30 = v12;
  v27 = v12;
  v28 = v12;
  v25 = v12;
  v26 = v12;
  v23 = v12;
  v24 = v12;
  v21 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v22 = xmmword_1B0025EA0;
  v19 = xmmword_1B0026830;
  v20 = xmmword_1B0026840;
  v17 = xmmword_1B0026860;
  v18 = v12;
  v15 = xmmword_1B0026870;
  v16 = xmmword_1B0026880;
  v13 = xmmword_1B0026890;
  v14 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v81, &v79, &v77, &v75, &v73, &v71, &v69, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.8, &v67, &v65,
    0x3F8000003F000000,
    1061997773,
    &v63,
    1065353216,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    1123680256,
    1092616192,
    &v15,
    (uint64_t)&v13);
  return v0;
}

void sub_1AFB97C04()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FEC08 = v0;
  unk_1ED1FEC10 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFB97CA8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_3_12();
  OUTLINED_FUNCTION_7();
  qword_1EEE91FF0 = v0;
  *(_QWORD *)algn_1EEE91FF8 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFB97D44()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_7();
  qword_1EEE92000 = v0;
  *(_QWORD *)algn_1EEE92008 = v1;
  OUTLINED_FUNCTION_6();
}

#error "1AFB97ED8: call analysis failed (funcsize=154)"

void sub_1AFB98050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22_0();
  v27 = *(_QWORD *)(type metadata accessor for WindComplicationHourlyViewModel() - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_10();
  v3 = OUTLINED_FUNCTION_19();
  sub_1AFC93090(1, *(_QWORD *)(v0 + *(int *)(v3 + 40)));
  v7 = v6 >> 1;
  v8 = (v6 >> 1) - v5;
  if (__OFSUB__(v6 >> 1, v5))
    goto LABEL_14;
  if (v8)
  {
    v9 = v4;
    v10 = v5;
    v28 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AFBA8850();
    if (v8 < 0)
    {
LABEL_15:
      __break(1u);
      return;
    }
    while (v10 < v7)
    {
      sub_1AFB98D88(v9 + *(_QWORD *)(v27 + 72) * v10, v1);
      sub_1AFB98290();
      v12 = v11;
      v14 = v13;
      sub_1AFB26AD8(v1, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
      v15 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFBA8850();
        v15 = v28;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1AFBA8850();
        v15 = v28;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      v17 = v15 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
      if (v7 == ++v10)
      {
        swift_unknownObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
LABEL_12:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD08);
  sub_1AFB98DCC();
  v18 = sub_1B0008500();
  v20 = v19;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v21 = OUTLINED_FUNCTION_13_20();
  *(_OWORD *)(v21 + 16) = xmmword_1B00275A0;
  v22 = sub_1AFB97DBC();
  v24 = v23;
  v25 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  v26 = sub_1AFAFB1D0();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  *(_QWORD *)(v21 + 96) = v25;
  *(_QWORD *)(v21 + 104) = v26;
  *(_QWORD *)(v21 + 64) = v26;
  *(_QWORD *)(v21 + 72) = v18;
  *(_QWORD *)(v21 + 80) = v20;
  sub_1B00085A8();
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFB98290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_22_0();
  v1 = v0;
  v2 = sub_1B0005770();
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_33();
  v71 = v4;
  v74 = OUTLINED_FUNCTION_24();
  v70 = *(_QWORD *)(v74 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C20);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_9();
  v25 = v24 - v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v75 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_33();
  v76 = v28;
  v29 = type metadata accessor for WindComplicationHourlyViewModel();
  if (*(_BYTE *)(v1 + *(int *)(v29 + 24)) != 16)
  {
    v30 = (int *)v29;
    sub_1AFB98E10(v1 + *(int *)(v29 + 28), v25);
    if (__swift_getEnumTagSinglePayload(v25, 1, v26) == 1)
    {
      sub_1AFB98E58(v25, &qword_1ED1F4038);
    }
    else
    {
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32);
      v69 = v26;
      v31(v76, v25, v26);
      sub_1B00063E8();
      v32 = sub_1B00085CC();
      v34 = v33;
      OUTLINED_FUNCTION_20_0();
      LOBYTE(v77) = 0;
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v74);
      static Set<>.full.getter();
      static WeatherFormatStyle<>.weather(_:usage:locale:)(v35, (uint64_t)&v77, (uint64_t)v15, v36, v37, v38, v39, v40, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76,
        v77);
      OUTLINED_FUNCTION_20_0();
      sub_1AFB98E58((uint64_t)v15, &qword_1ED1F44D8);
      NSUnitSpeed.BaseWeatherFormatStyle.accessible.getter();
      OUTLINED_FUNCTION_26_18((uint64_t)v21);
      OUTLINED_FUNCTION_25_3();
      v41 = OUTLINED_FUNCTION_28_4();
      sub_1AFC16B58((uint64_t)v18, 0, v41, v76);
      v68 = v42;
      v44 = v43;
      swift_release();
      OUTLINED_FUNCTION_26_18((uint64_t)v18);
      if (*(_BYTE *)(v1 + v30[8]) == 1)
      {
        if (qword_1ED1F46A8 != -1)
          swift_once();
        OUTLINED_FUNCTION_0_13();
        OUTLINED_FUNCTION_8();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_3_12();
        OUTLINED_FUNCTION_7();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v45 = OUTLINED_FUNCTION_13_20();
        *(_OWORD *)(v45 + 16) = xmmword_1B00275A0;
        v46 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
        v47 = sub_1AFAFB1D0();
        *(_QWORD *)(v45 + 32) = v32;
        *(_QWORD *)(v45 + 40) = v34;
        *(_QWORD *)(v45 + 96) = v46;
        *(_QWORD *)(v45 + 104) = v47;
        v48 = v68;
        *(_QWORD *)(v45 + 64) = v47;
        *(_QWORD *)(v45 + 72) = v48;
        *(_QWORD *)(v45 + 80) = v44;
        OUTLINED_FUNCTION_31_9();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v69);
      }
      else
      {
        v67 = v44;
        v49 = v32;
        if (qword_1EEE70130 != -1)
          swift_once();
        v50 = v1 + v30[9];
        v51 = v1 + v30[10];
        v52 = sub_1B0005B84();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v12, v51, v52);
        __swift_storeEnumTagSinglePayload(v12, 0, 1, v52);
        sub_1B00059A4();
        v53 = sub_1AFD370B0(v50, v8, v12);
        v55 = v54;
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v8, v74);
        sub_1AFB98E58(v12, &qword_1ED1F1C20);
        v56 = v71;
        sub_1B0004FC0();
        sub_1AFB98E84();
        v57 = v73;
        sub_1B00058C0();
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v56, v57);
        v58 = v77;
        v59 = v69;
        if (qword_1ED1F46A8 != -1)
          swift_once();
        OUTLINED_FUNCTION_0_13();
        v60 = OUTLINED_FUNCTION_8();
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_3_12();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_1B00275B0;
        v62 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v61 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v61 + 64) = v62;
        *(_QWORD *)(v61 + 32) = v58;
        v63 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v61 + 96) = MEMORY[0x1E0DEA968];
        v64 = sub_1AFAFB1D0();
        *(_QWORD *)(v61 + 72) = v49;
        *(_QWORD *)(v61 + 80) = v34;
        *(_QWORD *)(v61 + 136) = v63;
        *(_QWORD *)(v61 + 144) = v64;
        v65 = v68;
        *(_QWORD *)(v61 + 104) = v64;
        *(_QWORD *)(v61 + 112) = v65;
        *(_QWORD *)(v61 + 120) = v67;
        *(_QWORD *)(v61 + 176) = v63;
        *(_QWORD *)(v61 + 184) = v64;
        *(_QWORD *)(v61 + 152) = v53;
        *(_QWORD *)(v61 + 160) = v55;
        OUTLINED_FUNCTION_31_9();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v59);
      }
    }
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFB98858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t _8[11];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_10();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = OUTLINED_FUNCTION_11_24();
  OUTLINED_FUNCTION_29_17(v0 + *(int *)(v7 + 36), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  HIBYTE(_8[0]) = 0;
  v8 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_17_17(v8);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:locale:)(v9, (uint64_t)_8 + 7, v2, v10, v11, v12, v13, v14, v17, _8[0], _8[1], _8[2], _8[3], _8[4], _8[5], _8[6], _8[7], _8[8], _8[9],
    _8[10]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_25_3();
  v15 = OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_15_26(v15);
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_26_18(v1);
  OUTLINED_FUNCTION_30_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  return v2;
}

#error "1AFB98A80: call analysis failed (funcsize=83)"

uint64_t sub_1AFB98AC4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  v0 = OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_18();
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v1 = OUTLINED_FUNCTION_13_20();
  *(_OWORD *)(v1 + 16) = xmmword_1B00275A0;
  v2 = sub_1AFB98858();
  v4 = v3;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1AFAFB1D0();
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v4;
  OUTLINED_FUNCTION_19();
  sub_1B00063DC();
  sub_1AFAF9424();
  v7 = sub_1B0008BE4();
  v9 = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 72) = v7;
  *(_QWORD *)(v1 + 80) = v9;
  v10 = sub_1B00085A8();
  OUTLINED_FUNCTION_20_0();
  return v10;
}

void sub_1AFB98C4C()
{
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_18();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  byte_1EEE92010 = sub_1B00087E8() & 1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFB98D10()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_7();
  qword_1EEE92018 = v0;
  unk_1EEE92020 = v1;
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1AFB98D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WindComplicationHourlyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AFB98DCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1EFD10;
  if (!qword_1ED1EFD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EFD08);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1EFD10);
  }
  return result;
}

uint64_t sub_1AFB98E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFB98E58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_21(v3);
  return a1;
}

unint64_t sub_1AFB98E84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE708C8;
  if (!qword_1EEE708C8)
  {
    v1 = sub_1B0005770();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DC8A68], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE708C8);
  }
  return result;
}

void sub_1AFB98EC4()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _WORD v22[8];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _WORD v26[8];
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _WORD v30[8];
  uint64_t v31;
  char v32[9];

  v32[0] = 3;
  v28 = 0x7970736957;
  v29 = 0xE500000000000000;
  strcpy((char *)v30, "Wispy_Single");
  HIBYTE(v30[6]) = 0;
  v30[7] = -5120;
  v31 = 6;
  v25 = 0xE500000000000000;
  strcpy((char *)v26, "Wispy_Single");
  HIBYTE(v26[6]) = 0;
  v26[7] = -5120;
  v27 = 6;
  v20 = 0x7970736957;
  v21 = 0xE500000000000000;
  strcpy((char *)v22, "Wispy_Single");
  HIBYTE(v22[6]) = 0;
  v22[7] = -5120;
  v23 = 6;
  v24 = 0x7970736957;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFB996A4();
  sub_1AFB996A4();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E2E147B3E19999ALL;
  *(_QWORD *)&v11 = 0x44BB800042480000;
  LODWORD(v9) = 1084292935;
  DWORD2(v8) = 1146388480;
  *(_QWORD *)&v8 = 0x425C0000409A882FLL;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v32, 48, 1, 2000, 133, 10, 1, 4, 0xC28C000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x3FE0000000000000,
    v8,
    0x3DB851EC3D23D70ALL,
    1094713344,
    v9,
    v10,
    xmmword_1B0025D40,
    _Q0,
    v11,
    1077902748,
    v12,
    xmmword_1B0027680,
    xmmword_1B0027670,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFB996A4()
{
  uint64_t v0;
  double v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  __n128 v16;
  float v17;
  __n128 v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __n128 v22;
  _OWORD *v23;
  int v24;
  __n128 *v25;
  uint64_t v26;
  float v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  float v38;
  double v39;
  double v40;
  __n128 v41;
  __n128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  double v46;
  _OWORD *v47;
  __n128 *v48;
  uint64_t v49;
  float v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  uint64_t v58;
  double v59;
  __n128 v60;
  float v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  double v70;
  float v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  __int128 v75;
  __n128 v76;
  __n128 v77;
  __int128 v78;
  __n128 v79;
  __int128 v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  uint64_t v89;
  double v90;
  float v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  __int128 v98;
  uint64_t v99;
  double v100;
  _OWORD *v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  uint64_t v108;
  float v109;
  int v111;
  int v112;
  int v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  uint64_t v188;
  uint64_t v189;
  __n128 v190;
  __n128 v191;
  __n128 v192;
  __n128 v193;
  __n128 v194;
  __n128 v195;
  __n128 v196;
  __n128 v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  __int128 v201;
  __n128 v202;
  __int128 v203;
  __n128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __n128 v208;
  __int128 v209;
  __n128 v210;
  __int128 v211;
  __n128 v212;
  __n128 v213;
  __n128 v214;
  __n128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __n128 v220;
  __int128 v221;
  __n128 v222;
  __n128 v223;
  __n128 v224;
  __int128 v225;
  __n128 v226;
  __int128 v227;
  __n128 v228;
  __int128 v229;
  __n128 v230;
  __int128 v231;
  __n128 v232;
  __int128 v233;
  __n128 v234;
  __int128 v235;
  __n128 v236;
  __int128 v237;
  __n128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __n128 v246;
  __n128 v247;
  __n128 v248;
  __int128 v249;
  __n128 v250;
  __n128 v251;
  __n128 v252;
  __n128 v253;
  __n128 v254;
  __int128 v255;
  __n128 v256;
  __n128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027690;
  v262 = xmmword_1B00276A0;
  v263 = xmmword_1B00276B0;
  v260 = xmmword_1B00276C0;
  v261 = xmmword_1B00276D0;
  v258 = xmmword_1B00276E0;
  v259 = xmmword_1B0026110;
  __asm { FMOV            V3.2D, #1.0 }
  v256 = (__n128)_Q3;
  v257 = (__n128)_Q3;
  __asm { FMOV            V0.2D, #0.5 }
  v192 = _Q0;
  v193 = (__n128)_Q3;
  v254 = _Q0;
  v255 = xmmword_1B0026E60;
  v252 = (__n128)_Q3;
  v253 = (__n128)_Q3;
  v250 = (__n128)_Q3;
  v251 = (__n128)_Q3;
  v248 = (__n128)_Q3;
  v249 = xmmword_1B00276F0;
  v246 = (__n128)_Q3;
  v247 = (__n128)_Q3;
  v244 = _Q3;
  v245 = _Q3;
  v242 = xmmword_1B0027700;
  v243 = xmmword_1B0027710;
  v240 = xmmword_1B0027700;
  v241 = xmmword_1B0027720;
  v238 = (__n128)_Q3;
  v239 = xmmword_1B0025E90;
  v236 = (__n128)_Q3;
  v237 = xmmword_1B0027730;
  v234 = (__n128)_Q3;
  v235 = xmmword_1B0025E90;
  v232 = (__n128)_Q3;
  v233 = xmmword_1B0025E50;
  v230 = (__n128)_Q3;
  v231 = xmmword_1B0027740;
  v228 = (__n128)_Q3;
  v229 = xmmword_1B0027750;
  v226 = (__n128)_Q3;
  v227 = xmmword_1B0027760;
  v224 = (__n128)_Q3;
  v225 = xmmword_1B0027740;
  v222 = (__n128)_Q3;
  v223 = (__n128)_Q3;
  v220 = (__n128)_Q3;
  v221 = xmmword_1B0027770;
  v218 = xmmword_1B0027780;
  v219 = xmmword_1B0027760;
  v216 = xmmword_1B0027790;
  v217 = xmmword_1B00277A0;
  v214 = (__n128)_Q3;
  v215 = (__n128)_Q3;
  v212 = (__n128)_Q3;
  v213 = (__n128)_Q3;
  v210 = (__n128)_Q3;
  v211 = xmmword_1B0025E50;
  v208 = (__n128)_Q3;
  v209 = xmmword_1B0027030;
  v206 = _Q3;
  v207 = xmmword_1B00277B0;
  v204 = (__n128)_Q3;
  v205 = xmmword_1B0026130;
  v202 = (__n128)_Q3;
  v203 = xmmword_1B0025E50;
  v200 = (__n128)_Q3;
  v201 = xmmword_1B0027030;
  v198 = (__n128)_Q3;
  v199 = (__n128)_Q3;
  v196 = (__n128)_Q3;
  v197 = (__n128)_Q3;
  v194 = (__n128)_Q3;
  v195 = (__n128)_Q3;
  OUTLINED_FUNCTION_12_8();
  v7 = OUTLINED_FUNCTION_11_25();
  OUTLINED_FUNCTION_9_2(v8, v9, v10, v11, v12, v13, v14, v15, v7, v16, 100.0, v17, 0.1, &v248, &v246, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v244, 0,
    &v242,
    &v240,
    &v238,
    &v236,
    &v234,
    &v232,
    &v230,
    &v228,
    &v226,
    &v224,
    &v222,
    &v220,
    &v218,
    &v216,
    &v214,
    &v212,
    &v210,
    &v208,
    &v206,
    &v204,
    &v202,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    (uint64_t)&v194);
  OUTLINED_FUNCTION_18_22();
  v260 = xmmword_1B00277D0;
  v261 = xmmword_1B00277E0;
  v258 = xmmword_1B00277F0;
  v259 = xmmword_1B0026110;
  v256 = v193;
  v257 = v193;
  v254 = v192;
  v255 = xmmword_1B00271F0;
  OUTLINED_FUNCTION_13_21(v192.n128_f64[0], 0.5, v193);
  v249 = xmmword_1B0027740;
  v246 = v18;
  v247 = v18;
  v244 = (__int128)v18;
  v245 = (__int128)v18;
  v242 = xmmword_1B0027700;
  v243 = xmmword_1B0027710;
  v240 = xmmword_1B0027700;
  OUTLINED_FUNCTION_4_20((__n128)xmmword_1B0027800, 0.411764741, v18);
  v233 = xmmword_1B0025E50;
  v230 = v19;
  v231 = v20;
  v228 = v19;
  v229 = xmmword_1B0027810;
  v226 = v19;
  v227 = xmmword_1B0027760;
  v224 = v19;
  v225 = v20;
  v222 = v19;
  v223 = v19;
  v220 = v19;
  v221 = xmmword_1B0027770;
  v218 = xmmword_1B0027820;
  v219 = xmmword_1B0027760;
  v216 = xmmword_1B0027830;
  v217 = xmmword_1B0027840;
  OUTLINED_FUNCTION_14_8(0.699999988, 1.0, v19);
  v211 = v21;
  v208 = v22;
  v209 = xmmword_1B0027030;
  v206 = xmmword_1B0027850;
  v207 = xmmword_1B00277B0;
  v204 = v22;
  v205 = xmmword_1B0026130;
  v202 = v22;
  v203 = v21;
  v200 = v22;
  v201 = xmmword_1B0027030;
  OUTLINED_FUNCTION_8_18(1.0, 1.0, v22);
  OUTLINED_FUNCTION_15_20();
  OUTLINED_FUNCTION_1_13();
  v118 = v23;
  OUTLINED_FUNCTION_12_8();
  v111 = v24;
  v191 = v25[134];
  v27 = *(float *)(v26 + 2620);
  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_9_2(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, 200.0, v38, v27, &v248, &v246, 0x3F4CCCCD3F4CCCCDLL, v111, &v244, 0,
    &v242,
    &v240,
    v118,
    v122,
    v126,
    v130,
    v134,
    v138,
    v142,
    v146,
    v150,
    v154,
    v158,
    v162,
    v166,
    v170,
    v174,
    v178,
    v182,
    v184,
    v186,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    (uint64_t)&v194);
  *(_QWORD *)&v39 = OUTLINED_FUNCTION_2_4().n128_u64[0];
  v256 = v193;
  v257 = v193;
  v254 = v193;
  v255 = xmmword_1B0027030;
  OUTLINED_FUNCTION_13_21(v39, v40, v193);
  v249 = xmmword_1B0027740;
  v246 = v41;
  v247 = v41;
  v244 = xmmword_1B0026320;
  v245 = xmmword_1B0027440;
  v242 = xmmword_1B0027870;
  v243 = xmmword_1B0027760;
  v240 = xmmword_1B0027880;
  OUTLINED_FUNCTION_4_20((__n128)xmmword_1B00277A0, 0.97049278, v41);
  v233 = xmmword_1B0025E50;
  v230 = v42;
  v231 = xmmword_1B0025E50;
  v228 = v42;
  v229 = xmmword_1B0027890;
  v226 = v42;
  v227 = xmmword_1B00278A0;
  v224 = v42;
  v225 = xmmword_1B0026400;
  v222 = v42;
  v223 = v42;
  v220 = v42;
  v221 = xmmword_1B0027770;
  v218 = (__int128)v42;
  v219 = xmmword_1B00278B0;
  v216 = (__int128)v42;
  v217 = xmmword_1B0026400;
  OUTLINED_FUNCTION_14_8(1.0, 1.0, v42);
  v211 = v43;
  v208 = v44;
  v209 = v45;
  v206 = (__int128)v44;
  v207 = xmmword_1B00278C0;
  v204 = v44;
  v205 = xmmword_1B0026140;
  v202 = v44;
  v203 = v43;
  v200 = v44;
  v201 = v45;
  OUTLINED_FUNCTION_8_18(v46, *(double *)&v43, v44);
  OUTLINED_FUNCTION_15_20();
  OUTLINED_FUNCTION_1_13();
  v119 = v47;
  OUTLINED_FUNCTION_12_8();
  v190 = v48[141];
  v50 = *(float *)(v49 + 2616);
  OUTLINED_FUNCTION_3_13();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, 600.0, v61, v27, v50, v50, v50, &v248, &v246,
    0x3F6666663F666666,
    0,
    &v244,
    0,
    &v242,
    &v240,
    v119,
    v123,
    v127,
    v131,
    v135,
    v139,
    v143,
    v147,
    v151,
    v155,
    v159,
    v163,
    v167,
    v171,
    v175,
    v179,
    v183,
    v185,
    v187,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    (uint64_t)&v194);
  OUTLINED_FUNCTION_2_4();
  v256 = v193;
  v257 = v193;
  v254 = v193;
  v255 = xmmword_1B0027030;
  v252 = v193;
  v253 = v193;
  v250 = v193;
  v251 = v193;
  v248 = v193;
  v249 = xmmword_1B0027740;
  v246 = v193;
  v247 = v193;
  v244 = xmmword_1B0026320;
  v245 = xmmword_1B0027440;
  v242 = xmmword_1B0027870;
  v243 = xmmword_1B0027760;
  v240 = xmmword_1B0027880;
  v241 = xmmword_1B00277A0;
  v238 = v193;
  v239 = xmmword_1B0025E90;
  v236 = v193;
  v237 = xmmword_1B0027730;
  v234 = v193;
  v235 = xmmword_1B0025E90;
  v232 = v193;
  v233 = xmmword_1B0025E50;
  v230 = v193;
  v231 = xmmword_1B0025E50;
  v228 = v193;
  v229 = xmmword_1B0027890;
  v226 = v193;
  v227 = xmmword_1B00278A0;
  v224 = v193;
  v225 = xmmword_1B0026400;
  v222 = v193;
  v223 = v193;
  v220 = v193;
  v221 = xmmword_1B0027770;
  v218 = (__int128)v193;
  v219 = xmmword_1B00278B0;
  v216 = (__int128)v193;
  v217 = xmmword_1B0026400;
  v214 = v193;
  v215 = v193;
  v212 = v193;
  v213 = v193;
  v210 = v193;
  v211 = xmmword_1B0025E50;
  v208 = v193;
  v209 = xmmword_1B0027030;
  v206 = (__int128)v193;
  v207 = xmmword_1B00278C0;
  v204 = v193;
  v205 = xmmword_1B0026140;
  v202 = v193;
  v203 = xmmword_1B0025E50;
  v200 = v193;
  v201 = xmmword_1B0027030;
  v198 = v193;
  v199 = v193;
  v196 = v193;
  v197 = v193;
  v194 = v193;
  v195 = v193;
  OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_3_13();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v62, v63, v64, v65, v66, v67, v68, v69, v70, v190, 600.0, v71, v27, v50, v50, v50, &v248, &v246,
    0x3F6666663F666666,
    0,
    &v244,
    v112,
    v114,
    v116,
    v120,
    v124,
    v128,
    v132,
    v136,
    v140,
    v144,
    v148,
    v152,
    v156,
    v160,
    v164,
    v168,
    v172,
    v176,
    v180,
    &v206,
    &v204,
    &v202,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    (uint64_t)&v194);
  OUTLINED_FUNCTION_2_4();
  v72 = OUTLINED_FUNCTION_19_20();
  OUTLINED_FUNCTION_7_21(v72, (__n128)xmmword_1B00271F0);
  v249 = xmmword_1B0027740;
  OUTLINED_FUNCTION_17_18(v73);
  v242 = xmmword_1B0027700;
  v243 = xmmword_1B0027710;
  v240 = xmmword_1B0027700;
  v241 = xmmword_1B0027800;
  v238 = v74;
  v239 = xmmword_1B0025E90;
  v236 = v74;
  v237 = xmmword_1B0027730;
  v234 = v74;
  v235 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_16_13(v74);
  v231 = v75;
  v228 = v76;
  v229 = xmmword_1B0027810;
  v226 = v76;
  v227 = xmmword_1B0027760;
  v224 = v76;
  v225 = v75;
  v222 = v76;
  v223 = v76;
  v220 = v76;
  v221 = xmmword_1B0027770;
  v218 = xmmword_1B0027820;
  v219 = xmmword_1B0027760;
  v216 = xmmword_1B0027830;
  OUTLINED_FUNCTION_5_15(v76, (__n128)xmmword_1B0027840, 0.899999976, *(double *)&v75, v77);
  v209 = xmmword_1B0027030;
  v206 = v78;
  v207 = xmmword_1B00277B0;
  v204 = v79;
  v205 = xmmword_1B0026130;
  v202 = v79;
  v203 = v80;
  v200 = v79;
  v201 = xmmword_1B0027030;
  OUTLINED_FUNCTION_6_12(v79);
  v188 = v81;
  OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_10_5(v82, v83, v84, v85, v86, v87, v88, v89, v90, v191, 200.0, v91, v27, &v248, &v246, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v244, v113,
    v115,
    v117,
    v121,
    v125,
    v129,
    v133,
    v137,
    v141,
    v145,
    v149,
    v153,
    v157,
    v161,
    v165,
    v169,
    v173,
    v177,
    v181,
    &v204,
    &v204,
    &v202,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    v188);
  OUTLINED_FUNCTION_18_22();
  v260 = xmmword_1B00276C0;
  v261 = xmmword_1B00276D0;
  v258 = xmmword_1B00276E0;
  v259 = xmmword_1B0026110;
  v92 = OUTLINED_FUNCTION_19_20();
  OUTLINED_FUNCTION_7_21(v92, (__n128)xmmword_1B0026E60);
  v249 = xmmword_1B00276F0;
  OUTLINED_FUNCTION_17_18(v93);
  v242 = xmmword_1B0027700;
  v243 = xmmword_1B0027710;
  v240 = xmmword_1B0027700;
  v241 = xmmword_1B0027720;
  v238 = v94;
  v239 = xmmword_1B0025E90;
  v236 = v94;
  v237 = xmmword_1B0027730;
  v234 = v94;
  v235 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_16_13(v94);
  v231 = xmmword_1B0027740;
  v228 = v95;
  v229 = xmmword_1B0027750;
  v226 = v95;
  v227 = xmmword_1B0027760;
  v224 = v95;
  v225 = xmmword_1B0027740;
  v222 = v95;
  v223 = v95;
  v220 = v95;
  v221 = xmmword_1B0027770;
  v218 = xmmword_1B0027780;
  v219 = xmmword_1B0027760;
  v216 = xmmword_1B0027790;
  OUTLINED_FUNCTION_5_15(v95, (__n128)xmmword_1B00277A0, 1.0, 1.0, v96);
  v209 = xmmword_1B0027030;
  v206 = (__int128)v97;
  v207 = xmmword_1B00277B0;
  v204 = v97;
  v205 = xmmword_1B0026130;
  v202 = v97;
  v203 = v98;
  v200 = v97;
  v201 = xmmword_1B0027030;
  OUTLINED_FUNCTION_6_12(v97);
  v189 = v99;
  OUTLINED_FUNCTION_12_8();
  v100 = OUTLINED_FUNCTION_11_25();
  OUTLINED_FUNCTION_10_5(v101, v102, v103, v104, v105, v106, v107, v108, v100, (__n128)xmmword_1B00277C0, 100.0, v109, 0.1, &v248, &v246, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v244, 0,
    &v242,
    &v240,
    &v238,
    &v236,
    &v234,
    &v232,
    &v230,
    &v228,
    &v226,
    &v224,
    &v222,
    &v220,
    &v218,
    &v216,
    &v214,
    &v212,
    &v210,
    &v208,
    &v204,
    &v204,
    &v202,
    &v200,
    &v198,
    1112014848,
    1097859072,
    &v196,
    v189);
  return v0;
}

uint64_t SunriseSunsetNightRule.isSatisfied(for:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = sub_1B00058D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_15();
  v12 = type metadata accessor for SunriseSunsetDescriptionContext();
  sub_1AFAF8390(a2 + *(int *)(v12 + 20), (uint64_t)v9);
  if (OUTLINED_FUNCTION_5_16((uint64_t)v9) == 1)
  {
    sub_1AFB4BDAC((uint64_t)v9);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v2, v9, v10);
    sub_1AFAF8390(a2 + *(int *)(v12 + 28), (uint64_t)v6);
    v13 = OUTLINED_FUNCTION_5_16((uint64_t)v6);
    sub_1AFB4BDAC((uint64_t)v6);
    if (v13 != 1)
    {
      v14 = sub_1B0005854();
      OUTLINED_FUNCTION_2_5();
      return v14 & 1;
    }
    OUTLINED_FUNCTION_2_5();
  }
  v14 = 0;
  return v14 & 1;
}

uint64_t SunriseSunsetNightRule.description(for:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1B0005A04();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_15();
  v5 = sub_1B0005A1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v13 = v12 - v11;
  v14 = sub_1B00058D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v18 = v17 - v16;
  v19 = type metadata accessor for SunriseSunsetDescriptionContext();
  sub_1AFAF8390(a2 + *(int *)(v19 + 28), v13);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_1AFB4BDAC(v13);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    OUTLINED_FUNCTION_4_3();
    v20 = (id)qword_1ED1F4470;
    v21 = OUTLINED_FUNCTION_3_14();

  }
  else
  {
    v32 = v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v13, v14);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    OUTLINED_FUNCTION_4_3();
    v22 = (id)qword_1ED1F4470;
    OUTLINED_FUNCTION_3_14();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B00275C0;
    if (qword_1ED1F1070 != -1)
      swift_once();
    sub_1B00059A4();
    sub_1B0005A10();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    v24 = sub_1B00059EC();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v2, v34);
    v25 = sub_1AFAF93A0();
    v27 = v26;
    v28 = MEMORY[0x1E0DEA968];
    if ((v24 & 1) != 0)
    {
      sub_1AFAF9424();
      v25 = sub_1B0008C08();
      v30 = v29;
      swift_bridgeObjectRelease();
      v27 = v30;
    }
    *(_QWORD *)(v23 + 56) = v28;
    *(_QWORD *)(v23 + 64) = sub_1AFAFB1D0();
    *(_QWORD *)(v23 + 32) = v25;
    *(_QWORD *)(v23 + 40) = v27;
    v21 = sub_1B0008560();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v18, v14);
  }
  return v21;
}

uint64_t sub_1AFB9A94C(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetNightRule.isSatisfied(for:data:)(a1, a2) & 1;
}

uint64_t sub_1AFB9A964(uint64_t a1, uint64_t a2)
{
  return SunriseSunsetNightRule.description(for:data:)(a1, a2);
}

void sub_1AFB9A978()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  char v19;

  v19 = 0;
  sub_1AFB9B194();
  sub_1AFB9E500();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #13.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3AC49BA63F800000;
  *((_QWORD *)&v14 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v19, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFB9B194()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = _Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v11 = _Q1;
  v16 = _Q1;
  v17 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v21 = xmmword_1B0025EE0;
  v18 = xmmword_1B0025EF0;
  v19 = xmmword_1B0025F00;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B0025F50;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B0026030;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)xmmword_1B0026060;
  v63 = xmmword_1B0026070;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B0026160;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026240;
  v65 = xmmword_1B0026250;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026300;
  v65 = xmmword_1B0026310;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0026330;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026370;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026440;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B00264C0;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = xmmword_1B0026570;
  v67 = xmmword_1B0026580;
  v64 = xmmword_1B0026590;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = xmmword_1B0026660;
  v67 = xmmword_1B0026670;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00266E0;
  v81 = xmmword_1B00266F0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B0026060;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.8, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B00267A0;
  v79 = xmmword_1B00267B0;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B0027920;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0027200;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0027210;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0027930;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0027930;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0027940;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  __asm { FMOV            V0.2D, #0.25 }
  v20 = _Q0;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026820;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026830;
  v19 = xmmword_1B0026840;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFB9E500()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  int64x2_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  int64x2_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  int64x2_t v83;
  __int128 v84;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v83 = (int64x2_t)xmmword_1B0027230;
  v84 = xmmword_1B0025DE0;
  v81 = xmmword_1B0025DF0;
  v82 = xmmword_1B0025E00;
  v79 = xmmword_1B0025E10;
  v80 = xmmword_1B0025E20;
  v77 = xmmword_1B0025E30;
  v78 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v13 = (__int128)_Q0;
  v75 = _Q0;
  v76 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v73 = _Q1;
  v74 = _Q1;
  v71 = _Q1;
  v72 = _Q1;
  v69 = _Q1;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025E80;
  v68 = _Q1;
  v65 = (int64x2_t)_Q1;
  v66 = xmmword_1B0025E90;
  v63 = _Q1;
  v64 = _Q1;
  v61 = _Q1;
  v62 = _Q1;
  v59 = _Q1;
  v60 = _Q1;
  v57 = _Q1;
  v58 = _Q1;
  v55 = _Q1;
  v56 = _Q1;
  v53 = _Q1;
  v54 = _Q1;
  v51 = _Q1;
  v52 = _Q1;
  v49 = _Q1;
  v50 = _Q1;
  v47 = _Q1;
  v48 = _Q1;
  v45 = _Q1;
  v46 = _Q1;
  v43 = _Q1;
  v44 = _Q1;
  v41 = _Q1;
  v42 = _Q1;
  v39 = _Q1;
  v40 = _Q1;
  v37 = _Q1;
  v38 = _Q1;
  v35 = _Q1;
  v36 = _Q1;
  v33 = _Q1;
  v34 = _Q1;
  v31 = _Q1;
  v32 = _Q1;
  v29 = _Q1;
  v30 = _Q1;
  v27 = _Q1;
  v28 = _Q1;
  v25 = _Q1;
  v26 = _Q1;
  v14 = _Q1;
  v11 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v23 = (__int128)v11;
  v24 = xmmword_1B0025EA0;
  v21 = xmmword_1B0025EB0;
  v22 = xmmword_1B0025EC0;
  v19 = xmmword_1B0026860;
  v20 = _Q1;
  v17 = xmmword_1B0026870;
  v18 = xmmword_1B0026880;
  v15 = xmmword_1B0026890;
  v16 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F8000003F000000,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1123680256,
    1092616192,
    &v17,
    (uint64_t)&v15);
  v10 = vdupq_n_s64(0x3FD7575760000000uLL);
  v83 = v10;
  v84 = xmmword_1B0026850;
  v81 = xmmword_1B0025DF0;
  v82 = xmmword_1B0025E00;
  v79 = xmmword_1B0025E10;
  v80 = xmmword_1B0025E20;
  v77 = xmmword_1B0025E30;
  v78 = xmmword_1B0025E40;
  v75 = (int64x2_t)v13;
  v76 = xmmword_1B0026E60;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025E80;
  v68 = v14;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v9 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v23 = (__int128)v9;
  v24 = xmmword_1B0025EE0;
  v21 = xmmword_1B0025EF0;
  v22 = xmmword_1B0025F00;
  v19 = xmmword_1B0026860;
  v20 = v14;
  v17 = xmmword_1B00268C0;
  v18 = xmmword_1B0026880;
  v15 = xmmword_1B00268D0;
  v16 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F8000003F000000,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1123680256,
    1092616192,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0025F10;
  v84 = v14;
  v81 = xmmword_1B0025F20;
  v82 = xmmword_1B0025F30;
  v79 = xmmword_1B0025F40;
  v80 = v14;
  v77 = xmmword_1B0025F50;
  v78 = xmmword_1B0025E50;
  v75 = (int64x2_t)v13;
  v76 = xmmword_1B00271F0;
  v73 = v14;
  v74 = v14;
  v71 = xmmword_1B0026900;
  v72 = xmmword_1B0026910;
  v69 = xmmword_1B0025F80;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025F90;
  v68 = xmmword_1B0025FA0;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v23 = (__int128)v8;
  v24 = xmmword_1B0025FB0;
  v21 = xmmword_1B0025FC0;
  v22 = xmmword_1B0025FD0;
  v19 = xmmword_1B0026920;
  v20 = v14;
  v17 = xmmword_1B0027950;
  v18 = xmmword_1B0026C50;
  v15 = xmmword_1B0026950;
  v16 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1119092736,
    1092616192,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0025FE0;
  v84 = v14;
  v81 = xmmword_1B0025FF0;
  v82 = xmmword_1B0026000;
  v79 = xmmword_1B0026010;
  v80 = xmmword_1B0026020;
  v77 = xmmword_1B0026030;
  v78 = xmmword_1B0026040;
  v75 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v76 = xmmword_1B0026EA0;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0026050;
  v68 = xmmword_1B0025FA0;
  v65 = (int64x2_t)xmmword_1B0026060;
  v66 = xmmword_1B0026070;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026080;
  v24 = xmmword_1B0026090;
  v21 = xmmword_1B00260A0;
  v22 = xmmword_1B0026090;
  v19 = xmmword_1B0026970;
  v20 = v14;
  v17 = xmmword_1B0027960;
  v18 = xmmword_1B00269C0;
  v15 = xmmword_1B0026980;
  v16 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v69, &v67,
    0x3F59999A3F59999ALL,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1106247680,
    1101004800,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B00260C0;
  v84 = xmmword_1B00260D0;
  v81 = xmmword_1B00260E0;
  v82 = xmmword_1B00260F0;
  v79 = xmmword_1B0026100;
  v80 = xmmword_1B0026110;
  v77 = v14;
  v78 = xmmword_1B0026120;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0026FC0;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026150;
  v70 = xmmword_1B0026160;
  v67 = xmmword_1B0026170;
  v68 = xmmword_1B0025FA0;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026180;
  v24 = xmmword_1B0026190;
  v21 = xmmword_1B00261A0;
  v22 = xmmword_1B0026190;
  v19 = xmmword_1B0026970;
  v20 = v14;
  v17 = xmmword_1B0027970;
  v18 = xmmword_1B00269C0;
  v15 = xmmword_1B00269D0;
  v16 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1101004800,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B00261C0;
  v84 = xmmword_1B00261D0;
  v81 = xmmword_1B00261E0;
  v82 = xmmword_1B00261F0;
  v79 = xmmword_1B0026200;
  v80 = xmmword_1B0026210;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0026230;
  v67 = xmmword_1B0026240;
  v68 = xmmword_1B0026250;
  v65 = (int64x2_t)xmmword_1B0026260;
  v66 = xmmword_1B0026270;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026280;
  v24 = xmmword_1B0026290;
  v21 = xmmword_1B00262A0;
  v22 = xmmword_1B0026290;
  v19 = v14;
  v20 = v14;
  v17 = xmmword_1B0027980;
  v18 = xmmword_1B00267B0;
  v15 = xmmword_1B0026A10;
  v16 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v12 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v83 = v12;
  v84 = xmmword_1B00262C0;
  v81 = xmmword_1B00262D0;
  v82 = xmmword_1B0025F70;
  v79 = xmmword_1B00262E0;
  v80 = xmmword_1B00262F0;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0026230;
  v67 = xmmword_1B0026300;
  v68 = xmmword_1B0026310;
  v65 = (int64x2_t)xmmword_1B0026320;
  v66 = xmmword_1B0026330;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026340;
  v24 = xmmword_1B0026130;
  v21 = xmmword_1B0026350;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = xmmword_1B0026A30;
  v18 = xmmword_1B0026A40;
  v15 = xmmword_1B0026A50;
  v16 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = v12;
  v84 = xmmword_1B00262C0;
  v81 = xmmword_1B0026370;
  v82 = v14;
  v79 = v14;
  v80 = v14;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0026230;
  v67 = xmmword_1B0026220;
  v68 = v14;
  v65 = (int64x2_t)xmmword_1B0026380;
  v66 = xmmword_1B0025F70;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026390;
  v24 = xmmword_1B0026130;
  v21 = xmmword_1B00263A0;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = xmmword_1B0026A70;
  v18 = xmmword_1B0026A80;
  v15 = xmmword_1B0026A90;
  v16 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = v12;
  v84 = xmmword_1B00262C0;
  v81 = xmmword_1B00263C0;
  v82 = xmmword_1B00263D0;
  v79 = xmmword_1B00263E0;
  v80 = xmmword_1B00263F0;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0026FC0;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0026230;
  v67 = xmmword_1B0026220;
  v68 = v14;
  v65 = (int64x2_t)xmmword_1B0026380;
  v66 = xmmword_1B0025F70;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026390;
  v24 = xmmword_1B0026400;
  v21 = xmmword_1B0026410;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = v13;
  v18 = xmmword_1B0026AB0;
  v15 = xmmword_1B0026AC0;
  v16 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = v12;
  v84 = xmmword_1B00262C0;
  v81 = xmmword_1B00263C0;
  v82 = xmmword_1B00263D0;
  v79 = xmmword_1B00263E0;
  v80 = xmmword_1B00263F0;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0026FC0;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0026220;
  v68 = v14;
  v65 = (int64x2_t)xmmword_1B0026380;
  v66 = xmmword_1B0025F70;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026430;
  v24 = xmmword_1B0026400;
  v21 = xmmword_1B00263A0;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = v13;
  v18 = xmmword_1B0026AB0;
  v15 = xmmword_1B0026AE0;
  v16 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = v12;
  v84 = xmmword_1B00262C0;
  v81 = xmmword_1B0026440;
  v82 = v14;
  v79 = v14;
  v80 = v14;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = xmmword_1B0026220;
  v70 = xmmword_1B0026230;
  v67 = v14;
  v68 = v14;
  v65 = (int64x2_t)xmmword_1B0026380;
  v66 = xmmword_1B0025F70;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026430;
  v24 = xmmword_1B0026130;
  v21 = xmmword_1B0026410;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = v13;
  v18 = xmmword_1B0026AB0;
  v15 = xmmword_1B0026AF0;
  v16 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v84 = xmmword_1B0026470;
  v81 = xmmword_1B0026480;
  v82 = xmmword_1B0026490;
  v79 = xmmword_1B00264A0;
  v80 = xmmword_1B00264B0;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0026230;
  v67 = xmmword_1B00264C0;
  v68 = xmmword_1B0025FA0;
  v65 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v66 = xmmword_1B00264D0;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026430;
  v24 = xmmword_1B0026130;
  v21 = xmmword_1B00264E0;
  v22 = xmmword_1B0026140;
  v19 = v14;
  v20 = v14;
  v17 = xmmword_1B0027990;
  v18 = xmmword_1B0026C70;
  v15 = xmmword_1B0026B20;
  v16 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0026500;
  v84 = xmmword_1B0026510;
  v81 = xmmword_1B0026520;
  v82 = xmmword_1B0026530;
  v79 = xmmword_1B0026540;
  v80 = xmmword_1B0026550;
  v77 = v14;
  v78 = v14;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0027030;
  v73 = v14;
  v74 = v14;
  v71 = xmmword_1B0026560;
  v72 = v14;
  v69 = xmmword_1B0026570;
  v70 = xmmword_1B0026580;
  v67 = xmmword_1B0026590;
  v68 = xmmword_1B0025FA0;
  v65 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v66 = xmmword_1B00265A0;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B00265B0;
  v24 = xmmword_1B00265C0;
  v21 = xmmword_1B00265D0;
  v22 = xmmword_1B00265E0;
  v19 = v14;
  v20 = v14;
  v17 = xmmword_1B00279A0;
  v18 = xmmword_1B0026C20;
  v15 = xmmword_1B0026B60;
  v16 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0026600;
  v84 = xmmword_1B0026610;
  v81 = xmmword_1B0026620;
  v82 = xmmword_1B0026630;
  v79 = xmmword_1B0026640;
  v80 = xmmword_1B0026650;
  v77 = v14;
  v78 = xmmword_1B0026120;
  v75 = (int64x2_t)v14;
  v76 = xmmword_1B0026FC0;
  v73 = v14;
  v74 = v14;
  v71 = xmmword_1B0026220;
  v72 = v14;
  v69 = xmmword_1B0026660;
  v70 = xmmword_1B0026670;
  v67 = xmmword_1B0026170;
  v68 = xmmword_1B0025FA0;
  v65 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v66 = xmmword_1B0026680;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026690;
  v24 = xmmword_1B00266A0;
  v21 = xmmword_1B00266B0;
  v22 = xmmword_1B00266C0;
  v19 = xmmword_1B0026B80;
  v20 = xmmword_1B0026B90;
  v17 = xmmword_1B00279B0;
  v18 = xmmword_1B00279C0;
  v15 = xmmword_1B0026BC0;
  v16 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v69, &v67,
    0x3F6666663F666666,
    0,
    &v65,
    0,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    0,
    1097859072,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0026BD0;
  v84 = v14;
  v81 = xmmword_1B0026700;
  v82 = xmmword_1B0026710;
  v79 = xmmword_1B0026720;
  v80 = xmmword_1B0026730;
  v77 = xmmword_1B0026060;
  v78 = xmmword_1B0026040;
  v75 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v76 = xmmword_1B00271B0;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0026050;
  v68 = xmmword_1B0025FA0;
  v65 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v66 = xmmword_1B0026740;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = xmmword_1B0026750;
  v24 = xmmword_1B0026760;
  v21 = xmmword_1B0026770;
  v22 = xmmword_1B0026780;
  v19 = xmmword_1B0026BE0;
  v20 = xmmword_1B0026BF0;
  v17 = xmmword_1B00279D0;
  v18 = xmmword_1B00279E0;
  v15 = xmmword_1B0026C10;
  v16 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v69, &v67,
    0x3F59999A3F59999ALL,
    0,
    &v65,
    665496235,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1101004800,
    1101004800,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0025F10;
  v84 = v14;
  v80 = v14;
  v81 = xmmword_1B0025F20;
  v82 = xmmword_1B0025F30;
  v79 = xmmword_1B0025F40;
  v77 = xmmword_1B0025F50;
  v78 = xmmword_1B0025E50;
  v75 = (int64x2_t)v13;
  v76 = xmmword_1B00271F0;
  v73 = v14;
  v74 = v14;
  v71 = xmmword_1B0026900;
  v72 = xmmword_1B0026910;
  v69 = xmmword_1B0025F80;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025F90;
  v68 = xmmword_1B0025FA0;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = (__int128)v8;
  v24 = xmmword_1B0025FB0;
  v21 = xmmword_1B0025FC0;
  v22 = xmmword_1B0025FD0;
  v19 = xmmword_1B0026C30;
  v20 = v14;
  v17 = xmmword_1B00279F0;
  v18 = xmmword_1B0026C50;
  v15 = xmmword_1B0026C60;
  v16 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 500.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1119092736,
    1092616192,
    &v17,
    (uint64_t)&v15);
  v83 = v10;
  v84 = xmmword_1B0026850;
  v81 = xmmword_1B0025DF0;
  v82 = xmmword_1B0025E00;
  v79 = xmmword_1B0025E10;
  v80 = xmmword_1B0025E20;
  v77 = xmmword_1B0025E30;
  v78 = xmmword_1B0025E40;
  v75 = (int64x2_t)v13;
  v76 = xmmword_1B0026E60;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025E80;
  v68 = v14;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = (__int128)v9;
  v24 = xmmword_1B0025EE0;
  v21 = xmmword_1B0025EF0;
  v22 = xmmword_1B0025F00;
  v19 = xmmword_1B0026860;
  v20 = v14;
  v17 = xmmword_1B0026C80;
  v18 = xmmword_1B0026880;
  v15 = xmmword_1B0026C90;
  v16 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F8000003F000000,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1123680256,
    1092616192,
    &v17,
    (uint64_t)&v15);
  v83 = (int64x2_t)xmmword_1B0027230;
  v84 = xmmword_1B0025DE0;
  v81 = xmmword_1B0025DF0;
  v82 = xmmword_1B0025E00;
  v79 = xmmword_1B0025E10;
  v80 = xmmword_1B0025E20;
  v77 = xmmword_1B0025E30;
  v78 = xmmword_1B0025E40;
  v75 = (int64x2_t)v13;
  v76 = xmmword_1B0026E60;
  v73 = v14;
  v74 = v14;
  v71 = v14;
  v72 = v14;
  v69 = v14;
  v70 = xmmword_1B0025E50;
  v67 = xmmword_1B0025E80;
  v68 = v14;
  v65 = (int64x2_t)v14;
  v66 = xmmword_1B0025E90;
  v63 = v14;
  v64 = v14;
  v61 = v14;
  v62 = v14;
  v59 = v14;
  v60 = v14;
  v57 = v14;
  v58 = v14;
  v55 = v14;
  v56 = v14;
  v53 = v14;
  v54 = v14;
  v51 = v14;
  v52 = v14;
  v49 = v14;
  v50 = v14;
  v47 = v14;
  v48 = v14;
  v45 = v14;
  v46 = v14;
  v43 = v14;
  v44 = v14;
  v41 = v14;
  v42 = v14;
  v39 = v14;
  v40 = v14;
  v37 = v14;
  v38 = v14;
  v35 = v14;
  v36 = v14;
  v33 = v14;
  v34 = v14;
  v31 = v14;
  v32 = v14;
  v29 = v14;
  v30 = v14;
  v27 = v14;
  v28 = v14;
  v25 = v14;
  v26 = v14;
  v23 = (__int128)v11;
  v24 = xmmword_1B0025EA0;
  v21 = xmmword_1B0025EB0;
  v22 = xmmword_1B0025EC0;
  v19 = xmmword_1B0026860;
  v20 = v14;
  v17 = xmmword_1B0026870;
  v18 = xmmword_1B0026880;
  v15 = xmmword_1B0026890;
  v16 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v83, &v81, &v79, &v77, &v75, &v73, &v71, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 400.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v69, &v67,
    0x3F8000003F000000,
    1060320051,
    &v65,
    1065353216,
    &v63,
    &v61,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    1123680256,
    1092616192,
    &v17,
    (uint64_t)&v15);
  return v0;
}

void sub_1AFBA1B20()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 0;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73757461727453;
  v28 = 0xEF4C656C676E6953;
  v29 = 9;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 10;
  v25 = 0x2073757461727453;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBA237C();
  sub_1AFBA237C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1168891904;
  LODWORD(v5) = 1133903872;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 5, 0, 0x41F00000C20C0000, 0x42C8000040000000, v5, 0x3E8A3D713E800000, v6, 0x3F8000003F800000, 0x3EF77EE93F800000, 0x3F8000003F800000, 0x3E7F0B0D3F800000, 1065353216,
    0x428C000000000000,
    v7,
    0x3E75C28F3DF5C28FLL,
    0x3F8000003F800000,
    0x3EE476A03F800000,
    0x3F8000003F800000,
    0x3E838B5E3F800000,
    1075838976,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBA237C()
{
  uint64_t v0;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  double v15;
  __n128 v16;
  float v17;
  __n128 v18;
  __int128 v19;
  double v20;
  __n128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  __n128 *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;
  double v34;
  __n128 v35;
  float v36;
  __n128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  double v48;
  __n128 v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;
  double v64;
  __n128 v65;
  float v66;
  float v67;
  float v68;
  float v69;
  float v70;
  float v71;
  __int128 v72;
  __n128 v73;
  __n128 v74;
  __int128 v75;
  __int128 v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  double v85;
  __int128 v86;
  __n128 v87;
  __n128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  uint64_t v99;
  int v101;
  int v102;
  int v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  uint64_t v193;
  uint64_t v194;
  int64x2_t v195;
  __n128 v196;
  __n128 v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  __n128 v201;
  __n128 v202;
  __n128 v203;
  __n128 v204;
  __int128 v205;
  __n128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __n128 v212;
  __int128 v213;
  __n128 v214;
  __int128 v215;
  __n128 v216;
  __n128 v217;
  __n128 v218;
  __n128 v219;
  __n128 v220;
  __n128 v221;
  __n128 v222;
  __n128 v223;
  __n128 v224;
  __int128 v225;
  __n128 v226;
  __n128 v227;
  __n128 v228;
  __int128 v229;
  __n128 v230;
  __int128 v231;
  __n128 v232;
  __n128 v233;
  __n128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __n128 v258;
  __int128 v259;
  __n128 v260;
  __n128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027690;
  v266 = xmmword_1B0027AD0;
  v267 = xmmword_1B00269C0;
  v264 = xmmword_1B0027AE0;
  v265 = xmmword_1B0027AF0;
  v262 = xmmword_1B0027B00;
  v263 = xmmword_1B0027B10;
  __asm { FMOV            V2.2D, #1.0 }
  v260 = (__n128)_Q2;
  v261 = (__n128)_Q2;
  __asm { FMOV            V0.2D, #0.5 }
  v258 = _Q0;
  v259 = xmmword_1B0026E60;
  v256 = xmmword_1B0027B20;
  v257 = xmmword_1B0027B30;
  v254 = xmmword_1B0027B40;
  v255 = xmmword_1B0027B50;
  v252 = xmmword_1B0027B60;
  v253 = xmmword_1B0027740;
  v250 = xmmword_1B0027B70;
  v251 = xmmword_1B0026AD0;
  v248 = _Q2;
  v249 = _Q2;
  v246 = xmmword_1B0027B80;
  v247 = xmmword_1B0027B90;
  v244 = xmmword_1B0027BA0;
  v245 = xmmword_1B0027BB0;
  v242 = xmmword_1B0027BC0;
  v243 = xmmword_1B0027BD0;
  v240 = xmmword_1B0027BE0;
  v241 = xmmword_1B0027BF0;
  v238 = xmmword_1B0027C00;
  v239 = xmmword_1B0027C10;
  v236 = xmmword_1B0027C20;
  v237 = xmmword_1B0027C30;
  v234 = (__n128)_Q2;
  v235 = xmmword_1B0025E90;
  v232 = (__n128)_Q2;
  v233 = (__n128)_Q2;
  v230 = (__n128)_Q2;
  v231 = xmmword_1B0025E90;
  v228 = (__n128)_Q2;
  v229 = xmmword_1B0025E50;
  v226 = (__n128)_Q2;
  v227 = (__n128)_Q2;
  v224 = (__n128)_Q2;
  v225 = xmmword_1B0027770;
  v222 = (__n128)_Q2;
  v223 = (__n128)_Q2;
  v220 = (__n128)_Q2;
  v221 = (__n128)_Q2;
  v218 = (__n128)_Q2;
  v219 = (__n128)_Q2;
  v216 = (__n128)_Q2;
  v217 = (__n128)_Q2;
  v214 = (__n128)_Q2;
  v215 = xmmword_1B0025E50;
  v212 = (__n128)_Q2;
  v213 = xmmword_1B0027030;
  v210 = xmmword_1B0027C40;
  v211 = xmmword_1B0027C50;
  v208 = xmmword_1B0027C60;
  v209 = xmmword_1B0027C70;
  v197 = (__n128)_Q2;
  v206 = (__n128)_Q2;
  v207 = xmmword_1B0025E50;
  v204 = (__n128)_Q2;
  v205 = xmmword_1B0027030;
  v202 = (__n128)_Q2;
  v203 = (__n128)_Q2;
  v200 = (__n128)_Q2;
  v201 = (__n128)_Q2;
  v198 = (__n128)_Q2;
  v199 = (__n128)_Q2;
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9_3(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, &v252, &v250, 0x3F6666663F4CCCCDLL, 1065353216, &v248, 0, &v246, &v244,
    &v242,
    &v240,
    &v238,
    &v236,
    &v234,
    &v232,
    &v230,
    &v228,
    &v226,
    &v224,
    &v222,
    &v220,
    &v218,
    &v216,
    &v214,
    &v212,
    &v210,
    &v208,
    &v206,
    &v204,
    &v202,
    1112014848,
    1097859072,
    &v200,
    (uint64_t)&v198);
  v236 = xmmword_1B0027CA0;
  OUTLINED_FUNCTION_5_17();
  v260 = v197;
  v261 = v197;
  OUTLINED_FUNCTION_1_14();
  v248 = (__int128)v18;
  v249 = (__int128)v18;
  v246 = xmmword_1B0027B80;
  v247 = xmmword_1B0027B90;
  v244 = xmmword_1B0027BA0;
  v245 = xmmword_1B0027BB0;
  v242 = xmmword_1B0027BC0;
  v243 = xmmword_1B0027BD0;
  v237 = v19;
  v240 = xmmword_1B0027C90;
  v241 = xmmword_1B0027BF0;
  v238 = xmmword_1B0027C00;
  v239 = xmmword_1B0027C10;
  OUTLINED_FUNCTION_3_15(0.335743189, *(double *)&v19, v18);
  v213 = xmmword_1B0027030;
  *(_QWORD *)&v20 = OUTLINED_FUNCTION_6_13().n128_u64[0];
  v206 = v21;
  v207 = v22;
  v204 = v21;
  v205 = v23;
  OUTLINED_FUNCTION_8_8(v20, *(double *)&v22, v21);
  OUTLINED_FUNCTION_0_16();
  v116 = v24;
  OUTLINED_FUNCTION_15_10();
  v196 = v25[204];
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9_3(v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, &v252, &v250, 0x3F6666663F4CCCCDLL, 1065353216, &v248, v101, &v246, &v244,
    &v242,
    &v240,
    &v238,
    &v236,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v171,
    v176,
    v181,
    v184,
    v187,
    v190,
    1112014848,
    1097859072,
    &v200,
    v193);
  v266 = xmmword_1B0027CD0;
  v267 = (__int128)v197;
  v264 = xmmword_1B0027CE0;
  v265 = xmmword_1B0027CF0;
  v262 = xmmword_1B0027D00;
  v263 = (__int128)v197;
  v260 = v197;
  v261 = v197;
  v258 = v197;
  v259 = xmmword_1B0026FC0;
  v256 = xmmword_1B0027B20;
  v257 = xmmword_1B0027B30;
  v254 = xmmword_1B0027D10;
  v255 = xmmword_1B0027D20;
  v252 = xmmword_1B0027D30;
  v253 = xmmword_1B0027D40;
  v250 = xmmword_1B0027D50;
  v251 = xmmword_1B0027D60;
  v248 = xmmword_1B0027D70;
  v249 = xmmword_1B0027D80;
  v246 = xmmword_1B0027D90;
  v247 = xmmword_1B0027DA0;
  v244 = xmmword_1B0027DB0;
  v245 = xmmword_1B0027DC0;
  v242 = xmmword_1B0027DD0;
  v243 = xmmword_1B0027DE0;
  v240 = xmmword_1B0027DF0;
  v241 = xmmword_1B0027E00;
  v238 = xmmword_1B0027E10;
  v239 = xmmword_1B0027E20;
  v195 = vdupq_n_s64(0x3FE7F7F800000000uLL);
  v236 = (__int128)v195;
  v237 = xmmword_1B0027E30;
  OUTLINED_FUNCTION_3_15(*(double *)v195.i64, 0.749019623, v197);
  v213 = xmmword_1B0027030;
  v210 = xmmword_1B0027E40;
  v211 = xmmword_1B0027E50;
  v208 = xmmword_1B0027E60;
  v209 = xmmword_1B0027E70;
  v206 = v37;
  v207 = v38;
  v204 = v37;
  v205 = xmmword_1B0027030;
  OUTLINED_FUNCTION_8_8(1.0, *(double *)&v38, v37);
  OUTLINED_FUNCTION_0_16();
  v117 = v39;
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_13_22();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, &v252, &v250,
    0x3F6666663F666666,
    0,
    &v248,
    0,
    &v246,
    &v244,
    &v242,
    &v240,
    &v238,
    &v236,
    v117,
    v122,
    v127,
    v132,
    v137,
    v142,
    v147,
    v152,
    v157,
    v162,
    v167,
    v172,
    v177,
    v182,
    v185,
    v188,
    v191,
    1112014848,
    1097859072,
    &v200,
    v194);
  v264 = xmmword_1B0027CE0;
  v265 = xmmword_1B0027CF0;
  v262 = xmmword_1B0027D00;
  v259 = xmmword_1B0026FC0;
  v254 = xmmword_1B0027D10;
  v255 = xmmword_1B0027D20;
  v252 = xmmword_1B0027D30;
  v253 = xmmword_1B0027D40;
  v250 = xmmword_1B0027D50;
  v251 = xmmword_1B0027D60;
  v248 = xmmword_1B0027D70;
  v249 = xmmword_1B0027D80;
  v246 = xmmword_1B0027D90;
  v247 = xmmword_1B0027DA0;
  v244 = xmmword_1B0027DB0;
  v245 = xmmword_1B0027DC0;
  v242 = xmmword_1B0027DD0;
  v243 = xmmword_1B0027DE0;
  v240 = xmmword_1B0027E80;
  v241 = xmmword_1B0027E00;
  v238 = xmmword_1B0027E10;
  v239 = xmmword_1B0027E20;
  v236 = (__int128)v195;
  v237 = xmmword_1B0027E30;
  v210 = xmmword_1B0027E40;
  v211 = xmmword_1B0027E50;
  v208 = xmmword_1B0027E60;
  v209 = xmmword_1B0027E70;
  v266 = xmmword_1B0027CD0;
  v258 = v197;
  v267 = (__int128)v197;
  v263 = (__int128)v197;
  v260 = v197;
  v261 = v197;
  v256 = xmmword_1B0027B20;
  v257 = xmmword_1B0027B30;
  v234 = v197;
  v235 = xmmword_1B0025E90;
  v232 = v197;
  v233 = v197;
  v230 = v197;
  v231 = xmmword_1B0025E90;
  v228 = v197;
  v229 = xmmword_1B0025E50;
  v226 = v197;
  v227 = v197;
  v224 = v197;
  v225 = xmmword_1B0027770;
  v222 = v197;
  v223 = v197;
  v220 = v197;
  v221 = v197;
  v218 = v197;
  v219 = v197;
  v216 = v197;
  v217 = v197;
  v214 = v197;
  v215 = xmmword_1B0025E50;
  v212 = v197;
  v213 = xmmword_1B0027030;
  v206 = v197;
  v207 = xmmword_1B0025E50;
  v204 = v197;
  v205 = xmmword_1B0027030;
  v202 = v197;
  v203 = v197;
  v200 = v197;
  v201 = v197;
  v198 = v197;
  v199 = v197;
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_12_18();
  OUTLINED_FUNCTION_16_22();
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_13_22();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, &v252, &v250,
    0x3F6666663F666666,
    0,
    &v248,
    v102,
    v104,
    v106,
    v108,
    v110,
    v112,
    v114,
    v118,
    v123,
    v128,
    v133,
    v138,
    v143,
    v148,
    v153,
    v158,
    v163,
    v168,
    v173,
    v178,
    &v208,
    &v206,
    &v204,
    &v202,
    1112014848,
    1097859072,
    &v200,
    (uint64_t)&v198);
  OUTLINED_FUNCTION_5_17();
  v260 = v197;
  v261 = v197;
  OUTLINED_FUNCTION_1_14();
  v248 = v72;
  v249 = v72;
  OUTLINED_FUNCTION_4_21();
  v234 = v73;
  v235 = xmmword_1B0025E90;
  v232 = v73;
  v233 = v73;
  v230 = v73;
  v231 = xmmword_1B0025E90;
  v228 = v73;
  v229 = xmmword_1B0025E50;
  v226 = v73;
  v227 = v73;
  v224 = v73;
  v225 = xmmword_1B0027770;
  v222 = v73;
  v223 = v73;
  v220 = v73;
  v221 = v73;
  v218 = v73;
  v219 = v73;
  v216 = v73;
  v217 = v73;
  v214 = v73;
  v215 = xmmword_1B0025E50;
  v212 = v73;
  v213 = xmmword_1B0027030;
  OUTLINED_FUNCTION_6_13();
  v206 = v74;
  v207 = v75;
  v204 = v74;
  v205 = v76;
  v202 = v74;
  v203 = v74;
  v200 = v74;
  v201 = v74;
  v198 = v74;
  v199 = v74;
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_12_18();
  OUTLINED_FUNCTION_16_22();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_7_9(v77, v78, v79, v80, v81, v82, v83, v84, v85, v196, &v252, &v250, 0x3F6666663F4CCCCDLL, 1065353216, &v248, 0, v105, v107, v109,
    v111,
    v113,
    v115,
    v119,
    v124,
    v129,
    v134,
    v139,
    v144,
    v149,
    v154,
    v159,
    v164,
    v169,
    v174,
    v179,
    &v208,
    &v206,
    &v204,
    &v202,
    1112014848,
    1097859072,
    &v200,
    (uint64_t)&v198);
  OUTLINED_FUNCTION_5_17();
  v260 = v197;
  v261 = v197;
  OUTLINED_FUNCTION_1_14();
  v248 = v86;
  v249 = v86;
  OUTLINED_FUNCTION_4_21();
  v234 = v87;
  v235 = xmmword_1B0025E90;
  v232 = v87;
  v233 = v87;
  v230 = v87;
  v231 = xmmword_1B0025E90;
  v228 = v87;
  v229 = xmmword_1B0025E50;
  v226 = v87;
  v227 = v87;
  v224 = v87;
  v225 = xmmword_1B0027770;
  v222 = v87;
  v223 = v87;
  v220 = v87;
  v221 = v87;
  v218 = v87;
  v219 = v87;
  v216 = v87;
  v217 = v87;
  v214 = v87;
  v215 = xmmword_1B0025E50;
  v212 = v87;
  v213 = xmmword_1B0027030;
  OUTLINED_FUNCTION_6_13();
  v206 = v88;
  v207 = v89;
  v204 = v88;
  v205 = v90;
  v202 = v88;
  v203 = v88;
  v200 = v88;
  v201 = v88;
  v198 = v88;
  v199 = v88;
  OUTLINED_FUNCTION_0_16();
  v120 = v91;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_7_9(v92, v93, v94, v95, v96, v97, v98, v99, -90.0, (__n128)xmmword_1B0027C80, &v252, &v250, 0x3F6666663F4CCCCDLL, 1065353216, &v248, v103, &v246, &v244, &v242,
    &v240,
    &v238,
    &v236,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v175,
    v180,
    v183,
    v186,
    v189,
    v192,
    1112014848,
    1097859072,
    &v200,
    (uint64_t)&v198);
  return v0;
}

void sub_1AFBA30A0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 3;
  sub_1AFBA38EC();
  sub_1AFBA38EC();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B449BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E051EB83DA3D70ALL;
  *(_QWORD *)&v11 = 0x446D800041880000;
  LODWORD(v9) = 1084227584;
  DWORD2(v8) = 1138819072;
  *(_QWORD *)&v8 = 0x41C8000040E85A1DLL;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 3250, 200, 30, 1, 4, 0, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x40A0000000000000,
    v8,
    0x3E3851EC3DCCCCCDLL,
    1092616192,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1090519040,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003E4CCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBA38EC()
{
  uint64_t v0;
  __n128 v7;
  double v8;
  __n128 v9;
  __n128 v10;
  __int128 v11;
  double v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  float v23;
  __n128 v24;
  __n128 v25;
  double v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  double v39;
  __n128 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  __n128 v47;
  double v48;
  __n128 v49;
  __int128 v50;
  double v51;
  __n128 v52;
  double v53;
  double v54;
  _OWORD *v55;
  unsigned int v56;
  __n128 *v57;
  uint64_t v58;
  float v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  double v68;
  __n128 v69;
  float v70;
  float v71;
  float v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  uint64_t v85;
  double v86;
  __n128 v87;
  float v88;
  float v89;
  float v90;
  __n128 v91;
  __n128 v92;
  double v93;
  __int128 v94;
  __n128 v95;
  double v96;
  __n128 v97;
  __n128 *v98;
  uint64_t v99;
  float v100;
  double v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  uint64_t v109;
  __n128 v110;
  float v111;
  float v112;
  __n128 v113;
  __n128 v114;
  __int128 v115;
  __n128 v116;
  __n128 v117;
  double v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  uint64_t v126;
  float v127;
  float v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  uint64_t v136;
  double v137;
  float v138;
  float v139;
  __int128 v140;
  __n128 v141;
  __n128 v142;
  __int128 v143;
  __int128 v144;
  __n128 v145;
  double v146;
  __n128 v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  uint64_t v155;
  double v156;
  float v157;
  float v158;
  double v159;
  __n128 v160;
  __n128 v161;
  double v162;
  __n128 v163;
  __n128 v164;
  __int128 v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  uint64_t v173;
  double v174;
  __n128 v175;
  float v176;
  float v177;
  float v178;
  float v179;
  float v180;
  float v181;
  __n128 v182;
  __n128 v183;
  double v184;
  double v185;
  __n128 v186;
  __n128 v187;
  __int128 v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  uint64_t v196;
  float v197;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  int v210;
  int v211;
  int v212;
  int v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  _OWORD *v362;
  _OWORD *v363;
  uint64_t v364;
  uint64_t v365;
  __n128 v366;
  __n128 v367;
  int64x2_t v368;
  __n128 v369;
  int64x2_t v370;
  int64x2_t v371;
  __n128 v372;
  __n128 v373;
  _BYTE v374[32];
  _OWORD v375[2];
  _OWORD v376[2];
  _OWORD v377[2];
  _OWORD v378[2];
  __n128 v379;
  __int128 v380;
  __n128 v381;
  __int128 v382;
  _OWORD v383[2];
  _OWORD v384[2];
  _OWORD v385[2];
  _OWORD v386[2];
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __n128 v391;
  __n128 v392;
  __n128 v393;
  __n128 v394;
  __n128 v395;
  __int128 v396;
  __n128 v397;
  __int128 v398;
  __n128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  _OWORD v403[2];
  _OWORD v404[2];
  _OWORD v405[2];
  _OWORD v406[2];
  _OWORD v407[2];
  _OWORD v408[2];
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __n128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __n128 v417;
  __int128 v418;
  __n128 v419;
  __int128 v420;
  __n128 v421;
  __n128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  __asm { FMOV            V3.2D, #1.0 }
  v373 = _Q3;
  v427 = (__int128)_Q3;
  v428 = (__int128)_Q3;
  v425 = xmmword_1B0027F40;
  v426 = xmmword_1B0027F50;
  v423 = xmmword_1B0027F60;
  v424 = xmmword_1B0027F70;
  v421 = _Q3;
  v422 = _Q3;
  __asm { FMOV            V0.2D, #0.5 }
  v419 = _Q0;
  v372 = _Q0;
  v420 = xmmword_1B0026E60;
  v417 = _Q3;
  v418 = xmmword_1B0027F80;
  v415 = xmmword_1B0027F90;
  v416 = xmmword_1B0027FA0;
  v413 = _Q0;
  v414 = xmmword_1B0027FB0;
  v411 = xmmword_1B0027FC0;
  v412 = xmmword_1B0027FD0;
  OUTLINED_FUNCTION_8_19(1.0, 0.800000012, 1.0, _Q3);
  v401 = (__int128)v7;
  v402 = xmmword_1B0025E90;
  v399 = v7;
  v400 = xmmword_1B0026140;
  v397 = v7;
  v398 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_24_14((__n128)xmmword_1B0027740, 1.0, 1.0, v7);
  v389 = xmmword_1B0027FE0;
  v390 = xmmword_1B0027FF0;
  v387 = xmmword_1B0028000;
  v388 = xmmword_1B0028010;
  OUTLINED_FUNCTION_18_28(0.799999952, 1.0, v8, v9);
  v381 = v10;
  v382 = xmmword_1B00277B0;
  v379 = v10;
  v380 = v11;
  OUTLINED_FUNCTION_15_27(1.0, v12, *(double *)&v11, v10);
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_17_3(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 800.0, v23, 0.1, 0.8, v199, &v411, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v409,
    0,
    v408,
    v407,
    v406,
    v405,
    v404,
    v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    v386,
    v385,
    v384,
    v383,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    1112014848,
    1097859072,
    v375,
    (uint64_t)v374);
  v427 = (__int128)v373;
  v428 = (__int128)v373;
  OUTLINED_FUNCTION_30_9((__n128)xmmword_1B0028030);
  v423 = xmmword_1B0028040;
  v424 = xmmword_1B0028050;
  v421 = v24;
  v422 = v24;
  v419 = v372;
  v420 = xmmword_1B00271F0;
  v417 = v24;
  v418 = xmmword_1B0028060;
  v415 = xmmword_1B0028070;
  v416 = xmmword_1B0028080;
  v413 = v24;
  v414 = xmmword_1B0028090;
  v411 = xmmword_1B0027FC0;
  v412 = xmmword_1B00280A0;
  v409 = (__int128)v24;
  v410 = (__int128)v24;
  OUTLINED_FUNCTION_4_22(1.0, 0.800000012, v24);
  v401 = xmmword_1B00280B0;
  v402 = xmmword_1B00280C0;
  v399 = v25;
  v400 = xmmword_1B0026140;
  OUTLINED_FUNCTION_5_18((__n128)xmmword_1B00280D0, 1.0, v25);
  OUTLINED_FUNCTION_1_15(v27.n128_f64[0], v26, v27);
  v382 = xmmword_1B00277B0;
  v379 = v28;
  OUTLINED_FUNCTION_12_19(v28, v29);
  OUTLINED_FUNCTION_3_16();
  v238 = v30;
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_13_23();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, &v413, &v411,
    0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    v206,
    0,
    v408,
    v407,
    v406,
    v405,
    v238,
    v246,
    v254,
    v262,
    v270,
    v278,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    v384,
    v383,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    1112014848,
    1097859072,
    v375,
    (uint64_t)v374);
  v371 = vdupq_n_s64(0x3FEE770020000000uLL);
  v427 = (__int128)v371;
  v428 = xmmword_1B00280E0;
  v425 = xmmword_1B00280F0;
  v426 = xmmword_1B0028100;
  v423 = xmmword_1B00277F0;
  v424 = xmmword_1B0026110;
  v421 = v373;
  v422 = v373;
  v419 = v372;
  v420 = xmmword_1B00271F0;
  v417 = v373;
  v418 = xmmword_1B00277A0;
  v415 = xmmword_1B0027FC0;
  v416 = xmmword_1B0028110;
  v370 = vdupq_n_s64(0x3FE0ECE8A0000000uLL);
  v413 = (__n128)v370;
  v414 = xmmword_1B0028120;
  v411 = xmmword_1B0027FC0;
  v412 = xmmword_1B0028130;
  OUTLINED_FUNCTION_8_19(0.800000012, 1.0, 0.528919518, v373);
  v401 = (__int128)v47;
  v402 = xmmword_1B0026230;
  v399 = v47;
  v400 = xmmword_1B0027890;
  v397 = v47;
  v398 = xmmword_1B00277B0;
  OUTLINED_FUNCTION_24_14((__n128)xmmword_1B0026230, 1.0, v48, v47);
  v389 = (__int128)v49;
  v390 = v50;
  v387 = (__int128)v49;
  v388 = xmmword_1B0028140;
  OUTLINED_FUNCTION_18_28(1.0, *(double *)&v50, v51, v49);
  v381 = v52;
  v382 = xmmword_1B0028150;
  v379 = v52;
  v380 = xmmword_1B0026140;
  OUTLINED_FUNCTION_15_27(1.0, v53, v54, v52);
  OUTLINED_FUNCTION_25_5();
  OUTLINED_FUNCTION_3_16();
  v239 = v55;
  OUTLINED_FUNCTION_19_10();
  v203 = v56 | 0x3F4CCCCD00000000;
  v369 = v57[22];
  v59 = *(float *)(v58 + 2636);
  OUTLINED_FUNCTION_27_4();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v59, 0.8, 0.9, v72, &v413, &v411,
    v203,
    1061997773,
    &v409,
    0,
    v408,
    v407,
    v406,
    v405,
    v239,
    v247,
    v255,
    v263,
    v271,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v334,
    v338,
    v342,
    v344,
    v378,
    v377,
    v376,
    1112014848,
    1097859072,
    v375,
    (uint64_t)v374);
  v427 = xmmword_1B0028170;
  v428 = xmmword_1B0028180;
  v425 = xmmword_1B0028190;
  v426 = xmmword_1B00281A0;
  v423 = xmmword_1B00281B0;
  v424 = xmmword_1B00281C0;
  v421 = v373;
  v422 = v373;
  v419 = v373;
  v420 = xmmword_1B0027030;
  v417 = v373;
  v418 = xmmword_1B0028060;
  v415 = (__int128)v373;
  OUTLINED_FUNCTION_36_0((__n128)xmmword_1B00281D0, v373);
  v411 = xmmword_1B00281E0;
  v412 = xmmword_1B00281F0;
  v368 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v409 = (__int128)v368;
  v410 = xmmword_1B00264D0;
  OUTLINED_FUNCTION_11_27(*(double *)v368.i64, v73);
  v401 = (__int128)v74;
  v402 = xmmword_1B0026120;
  v399 = v74;
  v400 = (__int128)v74;
  v397 = v74;
  v398 = xmmword_1B00277B0;
  v395 = v74;
  OUTLINED_FUNCTION_23_24((__n128)xmmword_1B0027810, v74);
  v390 = xmmword_1B0027FF0;
  v387 = (__int128)v75;
  OUTLINED_FUNCTION_16_23((__n128)xmmword_1B0028010, v75);
  v381 = v76;
  OUTLINED_FUNCTION_9_9((__n128)xmmword_1B00278C0, v76);
  OUTLINED_FUNCTION_25_5();
  HIDWORD(v204) = 1063675494;
  OUTLINED_FUNCTION_34_2();
  v367 = v77[32];
  OUTLINED_FUNCTION_27_4();
  OUTLINED_FUNCTION_17_3(v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, 0.9, &v413, &v411, v204, 0, &v409,
    0,
    v408,
    v407,
    v406,
    v405,
    v404,
    v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    v386,
    v385,
    v335,
    v339,
    v343,
    v345,
    v378,
    v377,
    v376,
    1112014848,
    1097859072,
    v375,
    (uint64_t)v374);
  OUTLINED_FUNCTION_31_10();
  v425 = xmmword_1B0028190;
  v426 = xmmword_1B0028210;
  v423 = xmmword_1B0028220;
  v424 = xmmword_1B0028230;
  v421 = v91;
  v422 = v91;
  v419 = v91;
  v420 = xmmword_1B0026FC0;
  v417 = v91;
  v418 = xmmword_1B00277A0;
  v415 = (__int128)v91;
  v416 = xmmword_1B0026130;
  v413 = v91;
  v414 = xmmword_1B0027740;
  v411 = xmmword_1B0028240;
  v412 = xmmword_1B0028250;
  v409 = xmmword_1B0027D70;
  v410 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_4_22(1.0, 0.9627316, v91);
  v401 = (__int128)v92;
  v402 = xmmword_1B0028260;
  v399 = v92;
  v94 = (__int128)OUTLINED_FUNCTION_32_4((__n128)xmmword_1B0026450, v93, v92);
  v396 = xmmword_1B0027810;
  v393 = v95;
  v394 = v95;
  v391 = v95;
  v392 = v95;
  v389 = (__int128)v95;
  v390 = v94;
  v387 = (__int128)v95;
  v388 = xmmword_1B0028140;
  OUTLINED_FUNCTION_1_15(1.0, 1.0, v95);
  OUTLINED_FUNCTION_7_22((__n128)xmmword_1B00278C0, v96, v97);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_38_5();
  HIDWORD(v205) = 1063675494;
  OUTLINED_FUNCTION_34_2();
  v366 = v98[39];
  v100 = *(float *)(v99 + 640);
  v101 = OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_17_3(v102, v103, v104, v105, v106, v107, v108, v109, v101, v110, v100, v111, v112, 0.9, &v413, &v411, v205, 0, v207,
    v210,
    v214,
    v220,
    v226,
    v232,
    v240,
    v248,
    v256,
    v264,
    v272,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v340,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    v350,
    v356,
    v362,
    v364);
  v427 = (__int128)v373;
  v428 = (__int128)v373;
  v425 = xmmword_1B0028190;
  v426 = xmmword_1B0028210;
  v423 = xmmword_1B0028220;
  v424 = xmmword_1B0028230;
  v421 = v373;
  v422 = v373;
  v419 = v373;
  v420 = xmmword_1B0026FC0;
  v417 = v373;
  v418 = xmmword_1B00277A0;
  v415 = (__int128)v373;
  OUTLINED_FUNCTION_36_0((__n128)xmmword_1B0026130, v373);
  v411 = xmmword_1B0028240;
  v412 = xmmword_1B0028250;
  v409 = xmmword_1B0027D70;
  v410 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_11_27(0.9627316, v113);
  v401 = (__int128)v114;
  v402 = xmmword_1B0028260;
  v399 = v114;
  v400 = xmmword_1B0026450;
  v397 = v114;
  v398 = xmmword_1B00277B0;
  v395 = v114;
  OUTLINED_FUNCTION_23_24((__n128)xmmword_1B0027810, v114);
  v390 = v115;
  v387 = (__int128)v116;
  OUTLINED_FUNCTION_16_23((__n128)xmmword_1B0028140, v116);
  v381 = v117;
  OUTLINED_FUNCTION_9_9((__n128)xmmword_1B00278C0, v117);
  OUTLINED_FUNCTION_28_15();
  OUTLINED_FUNCTION_33_12();
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_38_5();
  v118 = OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_22_1(v119, v120, v121, v122, v123, v124, v125, v126, v118, v366, v100, v127, v128, &v413, &v411, 0x3F6666663F666666, 0, v208, 0,
    v215,
    v221,
    v227,
    v233,
    v241,
    v249,
    v257,
    v265,
    v273,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v341,
    v377,
    &v379,
    v378,
    v346,
    v348,
    v351,
    v357,
    v375,
    (uint64_t)v374);
  v427 = xmmword_1B0028170;
  v428 = xmmword_1B0028180;
  v425 = xmmword_1B0028190;
  v426 = xmmword_1B00281A0;
  v423 = xmmword_1B00281B0;
  v424 = xmmword_1B00281C0;
  v421 = v373;
  v422 = v373;
  v419 = v373;
  v420 = xmmword_1B0027030;
  v417 = v373;
  v418 = xmmword_1B0028060;
  v415 = (__int128)v373;
  v416 = xmmword_1B00281D0;
  v413 = v373;
  v414 = xmmword_1B0027740;
  v411 = xmmword_1B00281E0;
  v412 = xmmword_1B00281F0;
  v409 = (__int128)v368;
  v410 = xmmword_1B00264D0;
  v408[0] = v373;
  v408[1] = v373;
  v407[0] = v373;
  v407[1] = v373;
  v406[0] = v373;
  v406[1] = v373;
  v405[0] = v373;
  v405[1] = v373;
  v404[0] = v373;
  v404[1] = v373;
  v403[0] = v373;
  v403[1] = v373;
  v401 = (__int128)v373;
  v402 = xmmword_1B0026120;
  v399 = v373;
  v400 = (__int128)v373;
  v397 = v373;
  v398 = xmmword_1B00277B0;
  v395 = v373;
  v396 = xmmword_1B0027810;
  v393 = v373;
  v394 = v373;
  v391 = v373;
  v392 = v373;
  v389 = (__int128)v373;
  v390 = xmmword_1B0027FF0;
  v387 = (__int128)v373;
  v388 = xmmword_1B0028010;
  v386[0] = v373;
  v386[1] = v373;
  v385[0] = v373;
  v385[1] = v373;
  v384[0] = v373;
  v384[1] = v373;
  v383[0] = v373;
  v383[1] = v373;
  v381 = v373;
  v382 = xmmword_1B00278C0;
  v379 = v373;
  OUTLINED_FUNCTION_12_19(v373, (__n128)xmmword_1B0026140);
  OUTLINED_FUNCTION_28_15();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_22_1(v129, v130, v131, v132, v133, v134, v135, v136, v137, v367, 900.0, v138, v139, v200, &v411, 0x3F6666663F666666, 0, &v409, v211,
    v216,
    v222,
    v228,
    v234,
    v242,
    v250,
    v258,
    v266,
    v274,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    v384,
    v383,
    v377,
    &v379,
    v378,
    v347,
    v349,
    v352,
    v358,
    v375,
    (uint64_t)v374);
  v427 = (__int128)v371;
  v428 = xmmword_1B00280E0;
  v425 = xmmword_1B00280F0;
  v426 = xmmword_1B0028100;
  v423 = xmmword_1B00277F0;
  v424 = xmmword_1B0026110;
  OUTLINED_FUNCTION_21_21(0.403921604, 1.0, v373);
  v418 = xmmword_1B00277A0;
  v415 = xmmword_1B0027FC0;
  v416 = v140;
  v413 = (__n128)v370;
  v414 = xmmword_1B0028120;
  v411 = xmmword_1B0027FC0;
  OUTLINED_FUNCTION_6_14((__n128)xmmword_1B0028130, 0.528919518, v141);
  v402 = xmmword_1B0026230;
  v399 = v142;
  v143 = (__int128)OUTLINED_FUNCTION_32_4((__n128)xmmword_1B0027890, 1.0, v142);
  v396 = v144;
  v393 = v145;
  v394 = v145;
  v391 = v145;
  v392 = v145;
  v389 = (__int128)v145;
  v390 = v143;
  v387 = (__int128)v145;
  v388 = xmmword_1B0028140;
  OUTLINED_FUNCTION_1_15(1.0, *(double *)&v144, v145);
  OUTLINED_FUNCTION_7_22((__n128)xmmword_1B0028150, v146, v147);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_29(v148, v149, v150, v151, v152, v153, v154, v155, v156, v369, 900.0, v157, v59, 0.8, 0.9, v158, v201, &v411, 0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v409,
    v212,
    v217,
    v223,
    v229,
    v235,
    v243,
    v251,
    v259,
    v267,
    v275,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    v384,
    v383,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    v353,
    v359,
    v363,
    v365);
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_30_9((__n128)xmmword_1B0028030);
  v423 = xmmword_1B0028040;
  v424 = xmmword_1B0028050;
  OUTLINED_FUNCTION_21_21(0.689382493, v159, v160);
  v418 = xmmword_1B0028060;
  v415 = xmmword_1B0028070;
  v416 = xmmword_1B0028080;
  v413 = v161;
  v414 = xmmword_1B0028090;
  v411 = xmmword_1B0027FC0;
  v412 = xmmword_1B00280A0;
  v409 = (__int128)v161;
  v410 = (__int128)v161;
  OUTLINED_FUNCTION_4_22(1.0, v162, v161);
  v401 = xmmword_1B00280B0;
  v402 = xmmword_1B00280C0;
  v399 = v163;
  v400 = xmmword_1B0026140;
  v397 = v163;
  v398 = xmmword_1B00280D0;
  v395 = v163;
  v396 = xmmword_1B0027740;
  v393 = v163;
  v394 = v163;
  v391 = v163;
  v392 = v163;
  v389 = xmmword_1B0027FE0;
  v390 = xmmword_1B0027FF0;
  v387 = xmmword_1B0028000;
  v388 = xmmword_1B0028010;
  OUTLINED_FUNCTION_1_15(1.0, 1.0, v163);
  v382 = xmmword_1B00277B0;
  v379 = v164;
  v380 = v165;
  OUTLINED_FUNCTION_14_9(*(double *)&v165, 1.0, v164);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_29(v166, v167, v168, v169, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v202, &v411, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v409,
    v213,
    v218,
    v224,
    v230,
    v236,
    v244,
    v252,
    v260,
    v268,
    v276,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    v384,
    v383,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    v354,
    v360,
    v375,
    (uint64_t)v374);
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_30_9((__n128)xmmword_1B0027F40);
  v423 = xmmword_1B0027F60;
  v424 = xmmword_1B0027F70;
  v421 = v182;
  v422 = v182;
  v419 = v372;
  v420 = xmmword_1B0026E60;
  v417 = v182;
  v418 = xmmword_1B0027F80;
  v415 = xmmword_1B0027F90;
  v416 = xmmword_1B0027FA0;
  v413 = v372;
  v414 = xmmword_1B0027FB0;
  v411 = xmmword_1B0027FC0;
  OUTLINED_FUNCTION_6_14((__n128)xmmword_1B0027FD0, 1.0, v182);
  v402 = xmmword_1B0025E90;
  v399 = v183;
  v400 = xmmword_1B0026140;
  *(_QWORD *)&v184 = OUTLINED_FUNCTION_5_18((__n128)xmmword_1B0025E90, 1.0, v183).n128_u64[0];
  OUTLINED_FUNCTION_1_15(v184, v185, v186);
  v382 = xmmword_1B00277B0;
  v379 = v187;
  v380 = v188;
  OUTLINED_FUNCTION_14_9(1.0, *(double *)&v188, v187);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_38_5();
  OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_29(v189, v190, v191, v192, v193, v194, v195, v196, -90.0, (__n128)xmmword_1B0028020, 800.0, v197, 0.1, 0.8, 0.9, 0.8, &v413, &v411, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    v209,
    0,
    v219,
    v225,
    v231,
    v237,
    v245,
    v253,
    v261,
    v269,
    v277,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    v384,
    v383,
    &v381,
    &v379,
    v378,
    v377,
    v376,
    v355,
    v361,
    v375,
    (uint64_t)v374);
  return v0;
}

void sub_1AFBA4A7C()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34[9];

  v34[0] = 2;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0050E80;
  v33 = 6;
  v26 = 0xE500000000000000;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x7970736957;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBA5238();
  sub_1AFBA5238();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #5.5
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v34, 30, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4100000040A00000);
}

uint64_t sub_1AFBA5238()
{
  uint64_t v0;
  double v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  __int128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  double v17;
  __int128 v18;
  __n128 v19;
  __n128 v20;
  _OWORD *v21;
  double v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  __n128 v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  __n128 v38;
  __n128 v39;
  _OWORD *v40;
  double v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  _OWORD *v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __n128 v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  __n128 v57;
  __n128 v58;
  _OWORD *v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  float v67;
  float v68;
  float v69;
  float v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  uint64_t v78;
  float v79;
  float v80;
  float v81;
  float v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t v90;
  float v91;
  float v92;
  float v93;
  float v94;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  _OWORD *v100;
  _OWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int64x2_t v178;
  int64x2_t v179;
  __n128 v180;
  _OWORD v181[2];
  _OWORD v182[2];
  _OWORD v183[2];
  _OWORD v184[2];
  _OWORD v185[2];
  _OWORD v186[2];
  _OWORD v187[2];
  _OWORD v188[2];
  _OWORD v189[2];
  _OWORD v190[2];
  _OWORD v191[2];
  _OWORD v192[2];
  _OWORD v193[2];
  _OWORD v194[2];
  _OWORD v195[2];
  _OWORD v196[2];
  _OWORD v197[2];
  _OWORD v198[2];
  _OWORD v199[2];
  _OWORD v200[2];
  _OWORD v201[2];
  _OWORD v202[2];
  _OWORD v203[2];
  _OWORD v204[2];
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __n128 v209;
  __n128 v210;
  __n128 v211;
  __n128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __n128 v219;
  __n128 v220;
  __n128 v221;
  __n128 v222;
  __n128 v223;
  __n128 v224;
  int64x2_t v225;
  __int128 v226;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025810;
  v225 = 0uLL;
  *(_QWORD *)&v226 = 0;
  *((_QWORD *)&v226 + 1) = 0x3FF0000000000000;
  __asm { FMOV            V2.2D, #1.0 }
  v180 = _Q2;
  OUTLINED_FUNCTION_9_10(COERCE_DOUBLE(8), v6, _Q2);
  v217 = xmmword_1B0028320;
  v218 = xmmword_1B0028330;
  OUTLINED_FUNCTION_15_28((__n128)xmmword_1B0028340, (__n128)xmmword_1B0028350);
  OUTLINED_FUNCTION_6_15((__n128)xmmword_1B0028360, (__n128)xmmword_1B0028370, v7);
  v208 = 0u;
  v207 = 0u;
  v205 = xmmword_1B0025880;
  v206 = xmmword_1B0025890;
  OUTLINED_FUNCTION_1_16((__n128)xmmword_1B00258A0, (__n128)xmmword_1B00258B0, v8);
  OUTLINED_FUNCTION_11_17(&v225, &v223, &v221, &v219, &v217, &v215, &v213, v9, -90.0, (__n128)xmmword_1B0025900, 100.0, 0.0, 1.0, 1.0, 1.0, &v211, &v209, 0x3F8000003F800000, 0,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v202,
    v201,
    v200,
    v199,
    v198,
    v197,
    v196,
    v195,
    v194,
    v193,
    v192,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    1112014848,
    1097859072,
    v182,
    (uint64_t)v181);
  v178 = vdupq_n_s64(0x3C74BCC7A0000000uLL);
  v225 = v178;
  v226 = xmmword_1B0025910;
  OUTLINED_FUNCTION_9_10(*(double *)v178.i64, 1.79868456e-17, v180);
  v217 = xmmword_1B0028380;
  v218 = xmmword_1B0028390;
  OUTLINED_FUNCTION_15_28((__n128)xmmword_1B00283A0, (__n128)xmmword_1B00283B0);
  OUTLINED_FUNCTION_6_15((__n128)xmmword_1B00283C0, (__n128)xmmword_1B00283D0, v10);
  v207 = (__int128)v11;
  v208 = (__int128)v11;
  v205 = xmmword_1B0025880;
  v206 = xmmword_1B0025920;
  OUTLINED_FUNCTION_1_16((__n128)xmmword_1B00258A0, (__n128)xmmword_1B0025930, v11);
  OUTLINED_FUNCTION_11_17(&v225, &v223, &v221, &v219, &v217, &v215, &v213, v12, -18.0, (__n128)xmmword_1B0025900, 100.0, 0.0, 1.0, 1.0, 1.0, &v211, &v209, 0x3F8000003F800000, 0,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v202,
    v201,
    v200,
    v199,
    v198,
    v197,
    v196,
    v195,
    v194,
    v193,
    v192,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    1112014848,
    1097859072,
    v182,
    (uint64_t)v181);
  v179 = vdupq_n_s64(0x3FCF1B2BA0000000uLL);
  v225 = v179;
  v226 = xmmword_1B0025AB0;
  OUTLINED_FUNCTION_9_10(*(double *)v179.i64, 0.243016675, v180);
  v217 = v13;
  v218 = xmmword_1B00283E0;
  OUTLINED_FUNCTION_15_28((__n128)xmmword_1B00283F0, (__n128)xmmword_1B0028400);
  OUTLINED_FUNCTION_6_15((__n128)xmmword_1B0028410, (__n128)xmmword_1B0028420, v14);
  v207 = xmmword_1B0028430;
  v208 = xmmword_1B0028440;
  v205 = (__int128)v15;
  v206 = xmmword_1B0025B20;
  v204[0] = v15;
  OUTLINED_FUNCTION_2_8((__n128)xmmword_1B0025B30, 0.652150393, v15);
  OUTLINED_FUNCTION_11_17(&v225, &v223, &v221, &v219, &v217, &v215, &v213, v16, 30.0, (__n128)xmmword_1B0025760, 148.6, 0.0, 1.5, 1.5, 1.5, &v211, &v209, 0x3F8000003F800000, 0,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v202,
    v201,
    v200,
    v199,
    v198,
    v197,
    v196,
    v195,
    v194,
    v193,
    v192,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    1112014848,
    1097859072,
    v182,
    (uint64_t)v181);
  v225 = v179;
  v226 = xmmword_1B0025AB0;
  OUTLINED_FUNCTION_9_10(0.243016675, v17, v180);
  v217 = v18;
  v218 = xmmword_1B0028450;
  OUTLINED_FUNCTION_15_28((__n128)xmmword_1B0028460, (__n128)xmmword_1B0028470);
  OUTLINED_FUNCTION_6_15((__n128)xmmword_1B0028410, (__n128)xmmword_1B0028480, v19);
  v207 = xmmword_1B0028430;
  v208 = xmmword_1B0028490;
  v205 = (__int128)v20;
  v206 = xmmword_1B0025B20;
  v204[0] = v20;
  OUTLINED_FUNCTION_2_8((__n128)xmmword_1B0025B30, 0.652150452, v20);
  OUTLINED_FUNCTION_3_17();
  v116 = v21;
  OUTLINED_FUNCTION_7_13();
  v22 = OUTLINED_FUNCTION_10_30();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v23, v24, v25, v26, v27, v28, v29, v30, v22, v31, v32, v33, v34, v35, v36, v37, &v211, &v209,
    v102,
    v107,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v116,
    v120,
    v124,
    v128,
    v132,
    v136,
    v140,
    v144,
    v148,
    v152,
    v156,
    v160,
    v162,
    v164,
    v166,
    v168,
    v170,
    v172,
    v184,
    v183,
    1112014848,
    1097859072,
    v182,
    (uint64_t)v181);
  v38 = OUTLINED_FUNCTION_8_4();
  v218 = xmmword_1B0028450;
  v215 = xmmword_1B0028460;
  v216 = xmmword_1B0028470;
  v213 = xmmword_1B0028410;
  OUTLINED_FUNCTION_13_24(v38, (__n128)xmmword_1B0028480);
  v208 = xmmword_1B0028490;
  v205 = (__int128)v39;
  v206 = xmmword_1B0025B20;
  v204[0] = v39;
  OUTLINED_FUNCTION_0_18(v39, (__n128)xmmword_1B0025B30);
  OUTLINED_FUNCTION_3_17();
  v117 = v40;
  OUTLINED_FUNCTION_7_13();
  v41 = OUTLINED_FUNCTION_10_30();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v42, v43, v44, v45, v46, v47, v48, v49, v41, v50, v51, v52, v53, v54, v55, v56, &v211, &v209,
    v103,
    v108,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v117,
    v121,
    v125,
    v129,
    v133,
    v137,
    v141,
    v145,
    v149,
    v153,
    v157,
    v161,
    v163,
    v165,
    v167,
    v169,
    v171,
    v173,
    v184,
    v183,
    1112014848,
    1097859072,
    v182,
    (uint64_t)v181);
  v57 = OUTLINED_FUNCTION_8_4();
  v218 = xmmword_1B00283E0;
  v215 = xmmword_1B00283F0;
  v216 = xmmword_1B0028400;
  v213 = xmmword_1B0028410;
  OUTLINED_FUNCTION_13_24(v57, (__n128)xmmword_1B0028420);
  v208 = xmmword_1B0028440;
  v205 = (__int128)v58;
  v206 = xmmword_1B0025B20;
  v204[0] = v58;
  OUTLINED_FUNCTION_0_18(v58, (__n128)xmmword_1B0025B30);
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_12_10(v59, v60, v61, v62, v63, v64, v65, v66, 30.0, (__n128)xmmword_1B0025760, 148.6, v67, v68, v69, v70, v96, v99, v104, v109,
    &v207,
    0,
    &v205,
    v112,
    v114,
    v118,
    v122,
    v126,
    v130,
    v134,
    v138,
    v142,
    v146,
    v150,
    v154,
    v158,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    v174,
    v176,
    v182,
    (uint64_t)v181);
  v225 = v178;
  v226 = xmmword_1B0025910;
  v223 = v180;
  v224 = v180;
  v221 = v180;
  v222 = v180;
  v219 = v180;
  v220 = v180;
  v217 = xmmword_1B0028380;
  v218 = xmmword_1B0028390;
  v215 = xmmword_1B00283A0;
  v216 = xmmword_1B00283B0;
  v213 = xmmword_1B00283C0;
  v214 = xmmword_1B00283D0;
  v211 = v180;
  v212 = v180;
  v209 = v180;
  v210 = v180;
  v207 = (__int128)v180;
  v208 = (__int128)v180;
  v205 = xmmword_1B0025880;
  v206 = xmmword_1B0025920;
  v204[0] = xmmword_1B00258A0;
  OUTLINED_FUNCTION_0_18(v180, (__n128)xmmword_1B0025930);
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_12_10(v71, v72, v73, v74, v75, v76, v77, v78, -18.0, (__n128)xmmword_1B0025900, 100.0, v79, v80, v81, v82, v97, v100, v105, v110,
    &v207,
    0,
    &v205,
    v113,
    v115,
    v119,
    v123,
    v127,
    v131,
    v135,
    v139,
    v143,
    v147,
    v151,
    v155,
    v159,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    v175,
    v177,
    v181,
    (uint64_t)v181);
  v225 = 0uLL;
  *(_QWORD *)&v226 = 0;
  *((_QWORD *)&v226 + 1) = 0x3FF0000000000000;
  v223 = v180;
  v224 = v180;
  v221 = v180;
  v222 = v180;
  v219 = v180;
  v220 = v180;
  v217 = xmmword_1B0028320;
  v218 = xmmword_1B0028330;
  v215 = xmmword_1B0028340;
  v216 = xmmword_1B0028350;
  v213 = xmmword_1B0028360;
  v214 = xmmword_1B0028370;
  v211 = v180;
  v212 = v180;
  v209 = v180;
  v210 = v180;
  v208 = 0u;
  v207 = 0u;
  v205 = xmmword_1B0025880;
  v206 = xmmword_1B0025890;
  v204[0] = xmmword_1B00258A0;
  v204[1] = xmmword_1B00258B0;
  v203[0] = v180;
  v203[1] = v180;
  v202[0] = v180;
  v202[1] = v180;
  v201[0] = v180;
  v201[1] = v180;
  v200[0] = v180;
  v200[1] = v180;
  v199[0] = v180;
  v199[1] = v180;
  v198[0] = v180;
  v198[1] = v180;
  v197[0] = v180;
  v197[1] = v180;
  v196[0] = v180;
  v196[1] = v180;
  v195[0] = v180;
  v195[1] = v180;
  v194[0] = v180;
  v194[1] = v180;
  v193[0] = v180;
  v193[1] = v180;
  v192[0] = v180;
  v192[1] = v180;
  v191[0] = v180;
  v191[1] = v180;
  v190[0] = v180;
  v190[1] = v180;
  v189[0] = v180;
  v189[1] = v180;
  v188[0] = v180;
  v188[1] = v180;
  v187[0] = v180;
  v187[1] = v180;
  v186[0] = v180;
  v186[1] = v180;
  v185[0] = v180;
  v185[1] = v180;
  v184[0] = v180;
  v184[1] = v180;
  v183[0] = v180;
  v183[1] = v180;
  v182[0] = v180;
  v182[1] = v180;
  v181[0] = v180;
  v181[1] = v180;
  OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_12_10(v83, v84, v85, v86, v87, v88, v89, v90, -90.0, (__n128)xmmword_1B0025900, 100.0, v91, v92, v93, v94, v98, v101, v106, v111,
    &v207,
    0,
    &v205,
    v204,
    v203,
    v202,
    v201,
    v200,
    v199,
    v198,
    v197,
    v196,
    v195,
    v194,
    v193,
    v192,
    v191,
    v190,
    v189,
    v188,
    v187,
    v186,
    v185,
    v184,
    v183,
    1112014848,
    1097859072,
    v181,
    (uint64_t)v181);
  return v0;
}

uint64_t *initializeBufferWithCopyOfBuffer for WindComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for WindComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = v7[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v18 = v17[5];
      v19 = &v14[v18];
      v20 = &v15[v18];
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[8] = v20[8];
      v14[v17[6]] = v15[v17[6]];
      v14[v17[7]] = v15[v17[7]];
      *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
      v14[v17[9]] = v15[v17[9]];
      v21 = v7[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
      v25 = v7[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for WindComplicationDataStatus(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = (int *)type metadata accessor for WindComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[6];
    v7 = sub_1B0005FB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v2[7];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = a1 + v2[9];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *initializeWithCopy for WindComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v6 = (int *)type metadata accessor for WindComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = v6[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    a1[v6[8]] = a2[v6[8]];
    v23 = v6[9];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for WindComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;

  v6 = (int *)type metadata accessor for WindComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v31 = v6[5];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
      v35 = v6[6];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
      v39 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v40 = v39[5];
      v41 = &v36[v40];
      v42 = &v37[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v36[v39[6]] = v37[v39[6]];
      v36[v39[7]] = v37[v39[7]];
      *(_QWORD *)&v36[v39[8]] = *(_QWORD *)&v37[v39[8]];
      v36[v39[9]] = v37[v39[9]];
      v43 = v6[7];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
      a1[v6[8]] = a2[v6[8]];
      v47 = v6[9];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
      *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFBA6610((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  v21 = v20[8];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v21;
  v14[v17[6]] = v15[v17[6]];
  v14[v17[7]] = v15[v17[7]];
  *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  v22 = v6[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  a1[v6[8]] = a2[v6[8]];
  v26 = v6[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFBA6610(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WindComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for WindComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v6 = (int *)type metadata accessor for WindComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = v6[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    a1[v6[8]] = a2[v6[8]];
    v23 = v6[9];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for WindComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;

  v6 = (int *)type metadata accessor for WindComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v30 = v6[5];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
      v34 = v6[6];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
      v38 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v39 = v38[5];
      v40 = &v35[v39];
      v41 = &v36[v39];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v40[8] = v41[8];
      v35[v38[6]] = v36[v38[6]];
      v35[v38[7]] = v36[v38[7]];
      *(_QWORD *)&v35[v38[8]] = *(_QWORD *)&v36[v38[8]];
      v35[v38[9]] = v36[v38[9]];
      v42 = v6[7];
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
      a1[v6[8]] = a2[v6[8]];
      v46 = v6[9];
      v47 = &a1[v46];
      v48 = &a2[v46];
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
      *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFBA6610((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v14[v17[6]] = v15[v17[6]];
  v14[v17[7]] = v15[v17[7]];
  *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  v21 = v6[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  a1[v6[8]] = a2[v6[8]];
  v25 = v6[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WindComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBA6B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for WindComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WindComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBA6B64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for WindComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFBA6BB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WindComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFBA6BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WindComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for WindComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EF028;
  if (!qword_1ED1EF028)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFBA6C50()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WindComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t SevereWeatherStringBuilder.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_20();
  SevereWeatherStringBuilder.init()();
  return v0;
}

uint64_t SevereWeatherStringBuilder.fallback.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::String_optional __swiftcall SevereWeatherStringBuilder.buildHeadlineString(from:)(Swift::OpaquePointer_optional from)
{
  Swift::Bool v1;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String_optional v4;
  Swift::String_optional result;

  from.is_nil = 1;
  v4 = SevereWeatherStringBuilder.buildHeadlineString(from:allowLowProminenceOnlyHeadline:)(from, v1);
  object = v4.value._object;
  countAndFlagsBits = v4.value._countAndFlagsBits;
  result.value._object = object;
  result.value._countAndFlagsBits = countAndFlagsBits;
  return result;
}

Swift::String_optional __swiftcall SevereWeatherStringBuilder.buildHeadlineString(from:allowLowProminenceOnlyHeadline:)(Swift::OpaquePointer_optional from, Swift::Bool allowLowProminenceOnlyHeadline)
{
  uint64_t v2;
  Swift::Bool is_nil;
  void *rawValue;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  id v47;
  void *v48;
  Swift::String_optional result;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62[3];
  char v63;

  is_nil = from.is_nil;
  rawValue = from.value._rawValue;
  v5 = sub_1B0005D7C();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2638);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B0005E00();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_38();
  v61 = v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (unint64_t)&v50 - v17;
  if (!rawValue)
    goto LABEL_4;
  v62[0] = MEMORY[0x1E0DEE9E8];
  sub_1AFAE2F3C((uint64_t)rawValue);
  sub_1AFAC6128(v19, v62);
  v21 = v20;
  swift_bridgeObjectRelease();
  sub_1AFB3A29C(v21, (void (*)(_QWORD))MEMORY[0x1E0CEE8B0]);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_15();
    sub_1AFB4BC18((uint64_t)v9);
LABEL_4:
    v22 = 0;
    v23 = 0;
    goto LABEL_5;
  }
  v52 = v2;
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v60(v18, (uint64_t)v9, v10);
  if (!is_nil)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    v62[0] = MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRetain();
    v59 = v27;
    if (v27)
    {
      v51 = v18;
      v18 = 0;
      v55 = *MEMORY[0x1E0CEE7A0];
      v54 = *MEMORY[0x1E0CEE798];
      v53 = *MEMORY[0x1E0CEE7A8];
      while (1)
      {
        if (v18 >= *(_QWORD *)(v21 + 16))
        {
          __break(1u);
LABEL_44:
          swift_once();
LABEL_39:
          OUTLINED_FUNCTION_4_3();
          v47 = (id)qword_1ED1F4470;
          v22 = OUTLINED_FUNCTION_3_14();
          v23 = v48;

          v45 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
          v46 = v18;
LABEL_40:
          OUTLINED_FUNCTION_27(v46, v45);
          goto LABEL_5;
        }
        v28 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        v29 = *(_QWORD *)(v11 + 72);
        OUTLINED_FUNCTION_42_0((uint64_t)v15, v21 + v28 + v29 * v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
        sub_1B00065BC();
        sub_1B00065A4();
        if (qword_1EEE70440 != -1)
          swift_once();
        sub_1B0006598();
        OUTLINED_FUNCTION_41();
        if ((v63 & 1) != 0)
          break;
        sub_1B00065A4();
        if (qword_1EEE70448 != -1)
          swift_once();
        sub_1B0006598();
        OUTLINED_FUNCTION_41();
        if ((v63 & 1) == 0)
        {
          v30 = v56;
          sub_1B0005DD0();
          v31 = (*(uint64_t (**)(char *, uint64_t))(v57 + 88))(v30, v58);
          if (v31 == v55)
            break;
          if (v31 != v54 && v31 != v53)
            (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
        }
        OUTLINED_FUNCTION_27((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
LABEL_28:
        if (v59 == ++v18)
        {
          v26 = v62[0];
          v18 = v51;
          goto LABEL_30;
        }
      }
      OUTLINED_FUNCTION_42_0(v61, (uint64_t)v15, v60);
      v32 = v62[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFBA8884(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v62[0];
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1AFBA8884(v33 > 1, v34 + 1, 1);
        v32 = v62[0];
      }
      *(_QWORD *)(v32 + 16) = v34 + 1;
      OUTLINED_FUNCTION_42_0(v32 + v28 + v34 * v29, v61, v60);
      v62[0] = v32;
      goto LABEL_28;
    }
LABEL_30:
    OUTLINED_FUNCTION_15();
    v36 = *(_QWORD *)(v26 + 16);
    OUTLINED_FUNCTION_41();
    if (!v36)
    {
      OUTLINED_FUNCTION_27(v18, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_15();
      goto LABEL_4;
    }
  }
  v37 = sub_1B0005DE8();
  v23 = (void *)v38;
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = v37 & 0xFFFFFFFFFFFFLL;
  if (!v39)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15();
    if (qword_1ED1F46A8 != -1)
      goto LABEL_44;
    goto LABEL_39;
  }
  v22 = v37;
  v40 = *(_QWORD *)(v21 + 16);
  if (v40 >= 2)
  {
    OUTLINED_FUNCTION_15();
    if (qword_1ED1F46A8 != -1)
      swift_once();
    OUTLINED_FUNCTION_4_3();
    v41 = (id)qword_1ED1F4470;
    OUTLINED_FUNCTION_3_14();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v42 = OUTLINED_FUNCTION_20();
    *(_OWORD *)(v42 + 16) = xmmword_1B00275A0;
    v43 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v42 + 64) = v43;
    *(_QWORD *)(v42 + 32) = v40 - 1;
    *(_QWORD *)(v42 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v42 + 104) = sub_1AFAFB1D0();
    *(_QWORD *)(v42 + 72) = v22;
    *(_QWORD *)(v42 + 80) = v23;
    v22 = sub_1B0008560();
    v23 = v44;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15();
    v45 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    v46 = v18;
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_27(v18, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_15();
LABEL_5:
  v24 = v22;
  v25 = v23;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

uint64_t sub_1AFBA7344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1AFBA9248(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = 1;
  }
  else
  {
    sub_1AFBA91B0(result, v5, a1, a2);
    v7 = 0;
  }
  v8 = type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0);
  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v8);
}

uint64_t sub_1AFBA73C8(uint64_t a1)
{
  return sub_1AFB3A29C(a1, (void (*)(_QWORD))MEMORY[0x1E0CEF338]);
}

uint64_t sub_1AFBA73D4(uint64_t a1)
{
  return sub_1AFB3A29C(a1, (void (*)(_QWORD))MEMORY[0x1E0CEEE98]);
}

void sub_1AFBA73E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  if (a4 >> 1 == a3)
  {
    sub_1B0005C50();
    v4 = OUTLINED_FUNCTION_37_3();
LABEL_5:
    OUTLINED_FUNCTION_5_4(v4, v5, v6, v7);
    return;
  }
  if ((uint64_t)(a4 >> 1) > a3)
  {
    sub_1B0005C50();
    v8 = OUTLINED_FUNCTION_34_7();
    v9(v8);
    v4 = OUTLINED_FUNCTION_39_4();
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1AFBA7450(uint64_t a1)
{
  return sub_1AFB3A29C(a1, (void (*)(_QWORD))MEMORY[0x1E0CEE668]);
}

uint64_t sub_1AFBA745C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFBA74DC(a1, (void (*)(_QWORD))type metadata accessor for NextHourPrecipitationChartViewModel.Point, a2);
}

uint64_t sub_1AFBA7468(uint64_t a1)
{
  return sub_1AFB3A29C(a1, (void (*)(_QWORD))MEMORY[0x1E0CEECF0]);
}

uint64_t sub_1AFBA7474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  if (v4)
  {
    OUTLINED_FUNCTION_19_21();
    sub_1AFBA9168(a1 + v5, a2);
  }
  v6 = OUTLINED_FUNCTION_29_18();
  return OUTLINED_FUNCTION_5_4(v6, v7, v8, v9);
}

uint64_t sub_1AFBA74D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFBA74DC(a1, (void (*)(_QWORD))type metadata accessor for VFXLoadRequest, a2);
}

uint64_t sub_1AFBA74DC@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2(0);
  if (v6)
  {
    OUTLINED_FUNCTION_19_21();
    sub_1AFAF2DBC(a1 + v7, a3, a2);
  }
  v8 = OUTLINED_FUNCTION_29_18();
  return __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
}

uint64_t sub_1AFBA754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD v11[5];

  sub_1B00073FC();
  sub_1AFBA8DF0();
  sub_1B00088B4();
  sub_1B00088E4();
  if (v11[4] == v11[0])
  {
    sub_1B00073B4();
    v0 = OUTLINED_FUNCTION_37_3();
  }
  else
  {
    v4 = (void (*)(_QWORD *, _QWORD))sub_1B00088FC();
    v6 = v5;
    v7 = sub_1B00073B4();
    v8 = OUTLINED_FUNCTION_34_7();
    v9(v8, v6, v7);
    v4(v11, 0);
    v0 = OUTLINED_FUNCTION_39_4();
  }
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void sub_1AFBA761C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1AFB3733C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEEE98], (void (*)(uint64_t))sub_1AFBA8924);
}

void sub_1AFBA7640(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = type metadata accessor for HourlyForecastViewModel.HourModel();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_17_2(v8, v22[0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v22 - v10;
  v27 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v12 = 0;
    v22[1] = a2;
    v23 = a3;
    v22[0] = (uint64_t)a1;
    while (v12 < *(_QWORD *)(a3 + 16))
    {
      v13 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v14 = *(_QWORD *)(v26 + 72);
      sub_1AFAF2DBC(a3 + v13 + v14 * v12, (uint64_t)v11, (void (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
      v15 = a1(v11);
      if (v3)
      {
        sub_1AFBA90E8((uint64_t)v11);
        swift_release();
        OUTLINED_FUNCTION_32();
        goto LABEL_16;
      }
      if ((v15 & 1) != 0)
      {
        sub_1AFBA9124((uint64_t)v11, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v16 = OUTLINED_FUNCTION_21_22();
          sub_1AFBA8950(v16, v17, v18);
        }
        v19 = v27;
        v21 = *(_QWORD *)(v27 + 16);
        v20 = *(_QWORD *)(v27 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1AFBA8950(v20 > 1, v21 + 1, 1);
          v19 = v27;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        sub_1AFBA9124(v25, v19 + v13 + v21 * v14);
        a3 = v23;
        a1 = (uint64_t (*)(char *))v22[0];
      }
      else
      {
        sub_1AFBA90E8((uint64_t)v11);
      }
      if (v24 == ++v12)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_32();
LABEL_16:
    OUTLINED_FUNCTION_4();
  }
}

void sub_1AFBA77F8(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1AFB3733C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE668], (void (*)(uint64_t))sub_1AFBA88F8);
}

void sub_1AFBA781C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_1AFB3733C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEECF0], (void (*)(uint64_t))sub_1AFBA8A48);
}

uint64_t SevereWeatherStringBuilder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SevereWeatherStringBuilder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1AFBA7880(uint64_t a1, uint64_t a2)
{
  sub_1AFBA7E88(a1, a2);
}

void sub_1AFBA788C(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7898(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

void sub_1AFBA7924(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7930(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[120 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 120 * a2);
  }
  return __src;
}

void sub_1AFBA79BC(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA79C8(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA79D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_9(a3, result);
  }
  return result;
}

char *sub_1AFBA7A34(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void sub_1AFBA7AB8(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7AC4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_1AFBA7B4C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_9(a3, result);
  }
  return result;
}

void sub_1AFBA7BA4(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7BB0(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7BBC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_1AFBA7C40(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7C4C(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7C58(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7C64(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_9(a3, result);
  }
  return result;
}

void sub_1AFBA7CBC(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7CC8(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7CD4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[1216 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 1216 * a2);
  }
  return __src;
}

void sub_1AFBA7D5C(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7D68(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_9(a3, result);
  }
  return result;
}

void sub_1AFBA7DC0(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7DCC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

void sub_1AFBA7E58(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7E64(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7E70(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7E7C(uint64_t a1, uint64_t a2)
{
  sub_1AFBA7E88(a1, a2);
}

void sub_1AFBA7E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_13();
    if (v5 && (__swift_instantiateConcreteTypeFromMangledName(v4), OUTLINED_FUNCTION_40_2(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_6();
      }
      else
      {
        OUTLINED_FUNCTION_9_11();
        OUTLINED_FUNCTION_13_25();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v4);
      OUTLINED_FUNCTION_9_11();
      OUTLINED_FUNCTION_14_11();
    }
  }
}

char *sub_1AFBA7F10(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_17();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_9(a3, result);
  }
  return result;
}

void sub_1AFBA7F68(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

void sub_1AFBA7F74(uint64_t a1, uint64_t a2)
{
  sub_1AFB31E78(a1, a2);
}

char *sub_1AFBA7F80(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B0008E3C();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

uint64_t sub_1AFBA8008(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_11_28();
  }
  result = OUTLINED_FUNCTION_3_18();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA80A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1AFB3903C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE8B0]);
}

void *sub_1AFBA80B0(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    if (&a3[8 * a2] <= a1 || &a1[8 * a2] <= a3)
      return OUTLINED_FUNCTION_10_31(a3, a1, 8 * a2);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_11_28();
  }
  result = (void *)OUTLINED_FUNCTION_3_18();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA8144(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA8210(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1AFB3903C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
}

uint64_t sub_1AFBA821C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1AFB3903C(a1, a2, a3, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
}

void *sub_1AFBA8228(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[1216 * a2] <= __src || &__src[1216 * a2] <= __dst))
    return memcpy(__dst, __src, 1216 * a2);
  result = (void *)sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA82F4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

void *sub_1AFBA83C0(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    if (&a3[4 * a2] <= a1 || &a1[4 * a2] <= a3)
      return OUTLINED_FUNCTION_10_31(a3, a1, 4 * a2);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_11_28();
  }
  result = (void *)OUTLINED_FUNCTION_3_18();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA8454(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

void *sub_1AFBA8524(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    if (&a3[16 * a2] <= a1 || &a1[16 * a2] <= a3)
      return OUTLINED_FUNCTION_10_31(a3, a1, 16 * a2);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_11_28();
  }
  result = (void *)OUTLINED_FUNCTION_3_18();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA85B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA8688(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938) - 8) + 72) * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

uint64_t sub_1AFBA8780(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 40 * a2 <= a1 || a1 + 40 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1B0008E3C();
  __break(1u);
  return result;
}

void sub_1AFBA8850()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFAEEDD0();
  *v0 = v1;
}

void sub_1AFBA8884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, (uint64_t *)&unk_1ED1F3D20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE8B0]);
  *v3 = v4;
}

uint64_t method lookup function for SevereWeatherStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SevereWeatherStringBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1AFBA88C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFBA8C64();
  *v0 = v1;
}

void sub_1AFBA88F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1ED1F16A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE668]);
  *v3 = v4;
}

void sub_1AFBA8924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70950, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEEE98]);
  *v3 = v4;
}

void sub_1AFBA8950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70930, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
  *v3 = v4;
}

char *sub_1AFBA897C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AFBA8B7C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1AFBA8998()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFBA8C64();
  *v0 = v1;
}

void sub_1AFBA89CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFBA8C64();
  *v0 = v1;
}

char *sub_1AFBA8A00(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AFBA8D08(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1AFBA8A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1ED1F0928, type metadata accessor for WeatherProviderAttribution);
  *v3 = v4;
}

void sub_1AFBA8A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70958, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEECF0]);
  *v3 = v4;
}

void sub_1AFBA8A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70918, type metadata accessor for NextHourPrecipitationChartViewModel.ScaleLabelElement);
  *v3 = v4;
}

void sub_1AFBA8AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70920, type metadata accessor for NextHourPrecipitationChartViewModel.Point);
  *v3 = v4;
}

void sub_1AFBA8ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AFB36C00(a1, a2, a3, *v3, &qword_1EEE70928, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE6A0]);
  *v3 = v4;
}

void sub_1AFBA8AF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AFBA9040();
  *v0 = v1;
}

void sub_1AFBA8B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1EEE70960, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE608]);
}

void sub_1AFBA8B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1ED1F16A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEE668]);
}

void sub_1AFBA8B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1EEE70950, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEEE98]);
}

void sub_1AFBA8B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1EEE70930, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
}

char *sub_1AFBA8B7C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 1216);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AFBA7CD4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFBA8228(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_1AFBA8C64()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_24();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_23_9();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  OUTLINED_FUNCTION_26_19();
  if (v5)
  {
    OUTLINED_FUNCTION_30_10(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)OUTLINED_FUNCTION_20();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 32);
  }
  v16 = OUTLINED_FUNCTION_24_15();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_28_5();
}

char *sub_1AFBA8D08(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70908);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AFBA7DCC(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFBA85B8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

unint64_t sub_1AFBA8DF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1ECC58;
  if (!qword_1ED1ECC58)
  {
    v1 = sub_1B00073FC();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9390], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1ECC58);
  }
  return result;
}

void sub_1AFBA8E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1ED1F0928, type metadata accessor for WeatherProviderAttribution);
}

void sub_1AFBA8E44(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_23_9();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4160);
    v11 = (char *)OUTLINED_FUNCTION_20();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_1AFBA7B4C(v14, v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFBA80B0(v14, v9, v13);
  }
  OUTLINED_FUNCTION_18_0();
}

void sub_1AFBA8F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFB36C00(a1, a2, a3, a4, &qword_1EEE70958, (uint64_t (*)(_QWORD))MEMORY[0x1E0CEECF0]);
}

void sub_1AFBA8F1C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  unint64_t v18;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_23_9();
      if (v7)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (!v10)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70940);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_23;
  v14[2] = v9;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  OUTLINED_FUNCTION_19_21();
  v18 = a4 + v17;
  if ((a1 & 1) != 0)
  {
    sub_1AFBA7E88(v18, v9);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AFBA8688(v18, v9, (unint64_t)v14 + v17);
  }
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFBA9040()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_24();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_14();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_23_9();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_4();
    }
  }
  OUTLINED_FUNCTION_26_19();
  if (v5)
  {
    OUTLINED_FUNCTION_30_10(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)OUTLINED_FUNCTION_20();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  v16 = OUTLINED_FUNCTION_24_15();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1AFBA90E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HourlyForecastViewModel.HourModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFBA9124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HourlyForecastViewModel.HourModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFBA9168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFBA91B0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    v7 = type metadata accessor for NSUnitTemperature.WeatherFormatComponent(0);
    return sub_1AFAF2DBC(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, a4, (void (*)(_QWORD))type metadata accessor for NSUnitTemperature.WeatherFormatComponent);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1AFBA9248(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_1AFBA92C8()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 1;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004C202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4C656C676E6953;
  v24 = 10;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBA9B34();
  sub_1AFBA9B34();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x42B4000044BB8000;
  DWORD2(v15) = 1119748096;
  *(_QWORD *)&v15 = 0x4396000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E6147AE3DF5C28FLL;
  *(_QWORD *)&v11 = 0x4448000042480000;
  LODWORD(v9) = 0;
  DWORD2(v8) = 0;
  *(_QWORD *)&v8 = 0x4220000040B00000;
  LODWORD(v7) = 1148152459;
  LODWORD(v5) = 1120403456;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42A0000040400000, v5, 0x3EB851EB3E428F5CLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4234000000000000,
    v7,
    0x3E3851EC3E0F5C29,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E47AE143DD70A3ELL,
    0,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    0,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1134231552,
    0x3E6147AE3E3D70A4,
    v14,
    1065353216,
    0x3F36DB443F800000,
    xmmword_1B0026E40,
    v15,
    1041865114,
    1045220557,
    v16,
    1065353216,
    1065353216,
    0x3D88D9C93F800000,
    xmmword_1B00285F0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    0,
    xmmword_1B00285E0,
    0x4100000040A00000);
}

uint64_t sub_1AFBA9B34()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  float v24;
  __int128 v25;
  __n128 v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  __n128 v32;
  double v33;
  double v34;
  double v35;
  __n128 v36;
  double v37;
  double v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  double v42;
  double v43;
  __int128 v44;
  double v45;
  __n128 v46;
  _OWORD *v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  double v55;
  __n128 v56;
  float v57;
  __n128 v58;
  double v59;
  __n128 v60;
  double v61;
  double v62;
  __n128 v63;
  double v64;
  double v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  double v69;
  __int128 v70;
  double v71;
  double v72;
  __n128 v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  uint64_t v81;
  double v82;
  __n128 v83;
  float v84;
  float v85;
  __int128 v86;
  __int128 v87;
  _OWORD *v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  uint64_t v96;
  double v97;
  __n128 v98;
  float v99;
  float v100;
  float v101;
  float v102;
  float v103;
  float v104;
  double v105;
  __n128 v106;
  __n128 v107;
  double v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  double v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  uint64_t v120;
  __n128 v121;
  float v122;
  float v123;
  float v124;
  float v125;
  float v126;
  float v127;
  double v128;
  __n128 v129;
  __n128 v130;
  double v131;
  __n128 v132;
  double v133;
  __n128 v134;
  double v135;
  __n128 v136;
  __n128 v137;
  double v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  uint64_t v146;
  __n128 v147;
  float v148;
  float v149;
  float v150;
  float v151;
  float v152;
  float v153;
  __n128 v154;
  double v155;
  double v156;
  __n128 v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  uint64_t v165;
  double v166;
  __n128 v167;
  float v168;
  float v169;
  float v170;
  float v171;
  float v172;
  float v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  uint64_t v181;
  double v182;
  float v183;
  double v184;
  __n128 v185;
  __n128 v186;
  __n128 v187;
  double v188;
  __n128 v189;
  double v190;
  __n128 v191;
  __n128 v192;
  __n128 v193;
  uint64_t v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  uint64_t v202;
  double v203;
  __n128 v204;
  __n128 v205;
  __n128 v206;
  __n128 v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  uint64_t v215;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  int v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  int v231;
  int v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  __int128 v333;
  __n128 v334;
  __n128 v335;
  __n128 v336;
  __n128 v337;
  __n128 v338;
  __n128 v339;
  __n128 v340;
  __n128 v341;
  __n128 v342;
  __int128 v343;
  __n128 v344;
  __int128 v345;
  __n128 v346;
  __int128 v347;
  __n128 v348;
  __int128 v349;
  __n128 v350;
  __int128 v351;
  __n128 v352;
  __n128 v353;
  __int128 v354;
  __int128 v355;
  __n128 v356;
  __int128 v357;
  __n128 v358;
  __n128 v359;
  __n128 v360;
  __n128 v361;
  __n128 v362;
  __int128 v363;
  __n128 v364;
  __n128 v365;
  __n128 v366;
  __int128 v367;
  __n128 v368;
  __int128 v369;
  __n128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __n128 v382;
  __int128 v383;
  _OWORD v384[2];
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __n128 v397;
  __n128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v403 = xmmword_1B0028630;
  v404 = xmmword_1B0028640;
  v401 = xmmword_1B0028650;
  v402 = xmmword_1B0028660;
  v399 = xmmword_1B0028670;
  v400 = xmmword_1B0028680;
  __asm { FMOV            V2.2D, #1.0 }
  v397 = _Q2;
  v398 = _Q2;
  OUTLINED_FUNCTION_27_5((__n128)xmmword_1B0028690, (__n128)xmmword_1B00271F0);
  v393 = xmmword_1B00286A0;
  v394 = (__int128)v6;
  v391 = xmmword_1B00286B0;
  v392 = xmmword_1B0025F70;
  v389 = xmmword_1B00286C0;
  v390 = xmmword_1B00286D0;
  v387 = xmmword_1B00286E0;
  v388 = xmmword_1B00286F0;
  OUTLINED_FUNCTION_25_6(0.454901963, 0.698039234, v6);
  v382 = v7;
  v383 = xmmword_1B0027030;
  v380 = xmmword_1B0028700;
  v381 = xmmword_1B0028710;
  v378 = xmmword_1B0028720;
  v379 = xmmword_1B0028730;
  v376 = xmmword_1B0028740;
  v377 = xmmword_1B0028750;
  v374 = xmmword_1B0028760;
  v375 = xmmword_1B0028770;
  v334 = v7;
  v372 = v7;
  OUTLINED_FUNCTION_23_19((__n128)xmmword_1B0025E90, 0.5, v7);
  v335 = v8;
  v366 = v9;
  v367 = xmmword_1B00278C0;
  v364 = v9;
  v365 = (__n128)xmmword_1B0027740;
  v362 = v9;
  v363 = xmmword_1B0028780;
  OUTLINED_FUNCTION_28_16(1.0, v8.n128_f64[0], v9);
  v356 = v10;
  v357 = xmmword_1B0028790;
  v354 = (__int128)v10;
  v355 = xmmword_1B00287A0;
  v352 = v10;
  v353 = v11;
  v350 = v10;
  v351 = xmmword_1B00287B0;
  v348 = v10;
  v349 = xmmword_1B0026400;
  v346 = v10;
  v347 = xmmword_1B00287C0;
  v344 = v10;
  OUTLINED_FUNCTION_13_26((__n128)xmmword_1B0025E50, v11.n128_f64[0], v10, v12);
  v329 = v13;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_11_4(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, 35.0, 0.1, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v385, 0,
    v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    v329);
  v403 = xmmword_1B00276A0;
  v404 = xmmword_1B00276B0;
  v401 = xmmword_1B00287E0;
  v402 = xmmword_1B0028660;
  OUTLINED_FUNCTION_29_19((__n128)xmmword_1B00287F0, (__n128)xmmword_1B0028050);
  OUTLINED_FUNCTION_27_5((__n128)xmmword_1B0028800, (__n128)xmmword_1B0028810);
  v393 = xmmword_1B0028820;
  v394 = v25;
  v391 = xmmword_1B0028830;
  v392 = xmmword_1B0028840;
  OUTLINED_FUNCTION_19_17();
  v387 = xmmword_1B0028850;
  v388 = xmmword_1B00286F0;
  v385 = (__int128)v26;
  v386 = (__int128)v26;
  OUTLINED_FUNCTION_20_13(0.698039234, v27, v28, v26);
  v383 = xmmword_1B0027030;
  v380 = xmmword_1B0028860;
  v381 = xmmword_1B0028710;
  v378 = xmmword_1B0028870;
  v379 = xmmword_1B0028730;
  v376 = xmmword_1B0028880;
  *(_QWORD *)&v29 = OUTLINED_FUNCTION_9_12().n128_u64[0];
  *(_QWORD *)&v33 = OUTLINED_FUNCTION_16_1(v29, v30, v31, v32).n128_u64[0];
  OUTLINED_FUNCTION_30_11(v33, v34, v35, v36);
  v365 = (__n128)xmmword_1B0027740;
  OUTLINED_FUNCTION_14_12((__n128)xmmword_1B0028890, v37, v38, v39);
  v354 = xmmword_1B00288A0;
  v355 = xmmword_1B00288B0;
  v352 = v40;
  v353 = v41;
  *(_QWORD *)&v43 = OUTLINED_FUNCTION_7_23(0.725490332, 1.0, v42, v40).n128_u64[0];
  v343 = v44;
  OUTLINED_FUNCTION_15_11(v43, v45, *(double *)&v44, v46);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_11_4(v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, 35.0, 0.1, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v385, 0,
    v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    v327,
    v330);
  v403 = xmmword_1B00288D0;
  v404 = xmmword_1B00288E0;
  v401 = xmmword_1B00288F0;
  v402 = xmmword_1B0028900;
  OUTLINED_FUNCTION_29_19((__n128)xmmword_1B00276E0, (__n128)xmmword_1B0026110);
  OUTLINED_FUNCTION_27_5((__n128)xmmword_1B0028910, (__n128)xmmword_1B0028920);
  v393 = xmmword_1B0028930;
  v394 = xmmword_1B0028940;
  v391 = (__int128)v58;
  v392 = (__int128)v58;
  v389 = xmmword_1B0028950;
  v390 = xmmword_1B0028960;
  v387 = xmmword_1B0028970;
  v388 = xmmword_1B0028980;
  v385 = (__int128)v58;
  v386 = (__int128)v58;
  OUTLINED_FUNCTION_20_13(0.835294127, 1.0, v59, v58);
  v383 = xmmword_1B0027030;
  v380 = xmmword_1B0028990;
  v381 = xmmword_1B00289A0;
  v378 = xmmword_1B00289B0;
  v379 = xmmword_1B00289C0;
  v376 = xmmword_1B00289D0;
  v377 = xmmword_1B00289E0;
  v374 = xmmword_1B00289B0;
  v375 = xmmword_1B00289F0;
  *(_QWORD *)&v61 = OUTLINED_FUNCTION_16_1(0.540000021, 0.600000024, 0.550000012, v60).n128_u64[0];
  v365 = OUTLINED_FUNCTION_30_11(v61, v62, v61, v63);
  OUTLINED_FUNCTION_14_12((__n128)xmmword_1B0028A00, v64, v65, v66);
  v354 = xmmword_1B0028A10;
  v355 = xmmword_1B0028A20;
  v352 = v67;
  v353 = v68;
  *(_QWORD *)&v69 = OUTLINED_FUNCTION_7_23(0.792795718, 1.0, v68.n128_f64[0], v67).n128_u64[0];
  v343 = v70;
  OUTLINED_FUNCTION_15_11(v69, v71, v72, v73);
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_11_4(v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, 0.4, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v385, 0,
    v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    v328,
    v331);
  OUTLINED_FUNCTION_18_23();
  v401 = xmmword_1B0028A40;
  v402 = xmmword_1B0028A50;
  OUTLINED_FUNCTION_6_16();
  v397 = v334;
  v398 = v334;
  OUTLINED_FUNCTION_27_5((__n128)xmmword_1B0028A60, (__n128)xmmword_1B0028A70);
  v393 = xmmword_1B0028A80;
  v394 = v86;
  v391 = v86;
  v392 = v86;
  v389 = xmmword_1B0028A90;
  v390 = xmmword_1B0028AA0;
  v387 = xmmword_1B0028AB0;
  v388 = xmmword_1B0025F70;
  v385 = xmmword_1B0026320;
  OUTLINED_FUNCTION_31_12(0.970078886, (__n128)xmmword_1B0026330);
  v382 = (__n128)v87;
  v383 = xmmword_1B0027030;
  __asm { FMOV            V1.2D, #0.75 }
  v333 = _Q1;
  v380 = _Q1;
  v381 = xmmword_1B0028AC0;
  v378 = _Q1;
  v379 = xmmword_1B0028AD0;
  v376 = _Q1;
  v377 = xmmword_1B0028AE0;
  v374 = _Q1;
  v375 = xmmword_1B0028AF0;
  v372 = (__n128)v87;
  v373 = v335;
  v370 = (__n128)v87;
  v371 = (__n128)v87;
  v368 = (__n128)v87;
  v369 = xmmword_1B0027740;
  v366 = (__n128)v87;
  v367 = xmmword_1B0025E50;
  v364 = (__n128)v87;
  v365 = (__n128)xmmword_1B0028B00;
  v362 = (__n128)v87;
  v363 = xmmword_1B0027730;
  v360 = (__n128)v87;
  v361 = (__n128)v87;
  v358 = (__n128)v87;
  v359 = (__n128)v87;
  v356 = (__n128)v87;
  v357 = xmmword_1B0028790;
  v354 = v87;
  v355 = xmmword_1B0028B10;
  v352 = (__n128)v87;
  v353 = v335;
  v350 = (__n128)v87;
  v351 = xmmword_1B00287B0;
  v348 = (__n128)v87;
  v349 = xmmword_1B0028260;
  v346 = (__n128)v87;
  v347 = xmmword_1B00287C0;
  v344 = (__n128)v87;
  v345 = xmmword_1B0025E50;
  v342 = (__n128)v87;
  v343 = xmmword_1B0027030;
  v340 = (__n128)v87;
  v341 = (__n128)v87;
  v338 = (__n128)v87;
  v339 = (__n128)v87;
  v336 = (__n128)v87;
  v337 = (__n128)v87;
  OUTLINED_FUNCTION_3_19();
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_26_20();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, &v389, &v387,
    0x3F6666663F666666,
    0,
    &v385,
    0,
    v384,
    &v382,
    &v380,
    &v378,
    v249,
    v255,
    v261,
    v267,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v315,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  v403 = xmmword_1B00276A0;
  v404 = xmmword_1B00276B0;
  v401 = xmmword_1B0028A40;
  v402 = xmmword_1B0028A50;
  *(_QWORD *)&v105 = OUTLINED_FUNCTION_6_16().n128_u64[0];
  OUTLINED_FUNCTION_1_18(v105, v334);
  v380 = v333;
  v381 = xmmword_1B0028AC0;
  v378 = v333;
  v379 = xmmword_1B0028AD0;
  v376 = v333;
  v377 = xmmword_1B0028AE0;
  v374 = v333;
  OUTLINED_FUNCTION_12_21(0.75, v106);
  v366 = v107;
  v367 = xmmword_1B0028B20;
  OUTLINED_FUNCTION_4_24(1.0, v107, v108, v109);
  v348 = v110;
  v349 = xmmword_1B0026120;
  OUTLINED_FUNCTION_2_10(1.0, v110, v111);
  OUTLINED_FUNCTION_33_14();
  OUTLINED_FUNCTION_3_19();
  OUTLINED_FUNCTION_17_19();
  v112 = OUTLINED_FUNCTION_8_20();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v113, v114, v115, v116, v117, v118, v119, v120, v112, v121, v122, v123, v124, v125, v126, v127, v217, v219,
    v221,
    v223,
    v225,
    0,
    v384,
    &v382,
    &v380,
    &v378,
    v250,
    v256,
    v262,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v316,
    v321,
    v323,
    v325,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  v367 = xmmword_1B0028B20;
  v349 = xmmword_1B0026120;
  v366 = v334;
  v348 = v334;
  v403 = xmmword_1B00276A0;
  v404 = xmmword_1B00276B0;
  v401 = xmmword_1B0028A40;
  v402 = xmmword_1B0028A50;
  *(_QWORD *)&v128 = OUTLINED_FUNCTION_6_16().n128_u64[0];
  OUTLINED_FUNCTION_1_18(v128, v129);
  v380 = v333;
  v381 = xmmword_1B0028AC0;
  v378 = v333;
  v379 = xmmword_1B0028AD0;
  v376 = v333;
  v377 = xmmword_1B0028AE0;
  v374 = v333;
  *(_QWORD *)&v131 = OUTLINED_FUNCTION_12_21(*(double *)&v333, v130).n128_u64[0];
  *(_QWORD *)&v135 = OUTLINED_FUNCTION_4_24(v131, v132, v133, v134).n128_u64[0];
  OUTLINED_FUNCTION_2_10(v135, v136, v137);
  OUTLINED_FUNCTION_33_14();
  OUTLINED_FUNCTION_17_19();
  v138 = OUTLINED_FUNCTION_8_20();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v139, v140, v141, v142, v143, v144, v145, v146, v138, v147, v148, v149, v150, v151, v152, v153, v218, v220,
    v222,
    v224,
    v226,
    0,
    v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    v322,
    v324,
    v326,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  v401 = xmmword_1B0028A40;
  v402 = xmmword_1B0028A50;
  v395 = xmmword_1B0028A60;
  v396 = xmmword_1B0028A70;
  v393 = xmmword_1B0028A80;
  v389 = xmmword_1B0028A90;
  v390 = xmmword_1B0028AA0;
  v387 = xmmword_1B0028AB0;
  v385 = xmmword_1B0026320;
  v386 = xmmword_1B0026330;
  v381 = xmmword_1B0028AC0;
  v379 = xmmword_1B0028AD0;
  v377 = xmmword_1B0028AE0;
  v380 = v333;
  v378 = v333;
  v376 = v333;
  v374 = v333;
  v375 = xmmword_1B0028AF0;
  v365 = (__n128)xmmword_1B0028B00;
  v363 = xmmword_1B0027730;
  v355 = xmmword_1B0028B10;
  v349 = xmmword_1B0028260;
  v364 = v334;
  v362 = v334;
  v354 = (__int128)v334;
  v348 = v334;
  OUTLINED_FUNCTION_18_23();
  OUTLINED_FUNCTION_6_16();
  v397 = v154;
  v398 = v154;
  v394 = (__int128)v154;
  v391 = (__int128)v154;
  v392 = (__int128)v154;
  v388 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_20_13(0.996078432, v155, v156, v154);
  v383 = xmmword_1B0027030;
  v372 = v157;
  v373 = v335;
  v370 = v157;
  v371 = v157;
  v368 = v157;
  v369 = xmmword_1B0027740;
  v366 = v157;
  v367 = xmmword_1B0025E50;
  v360 = v157;
  v361 = v157;
  v358 = v157;
  v359 = v157;
  v356 = v157;
  v357 = xmmword_1B0028790;
  v352 = v157;
  v353 = v335;
  v350 = v157;
  v351 = xmmword_1B00287B0;
  v346 = v157;
  v347 = xmmword_1B00287C0;
  v344 = v157;
  v345 = xmmword_1B0025E50;
  v342 = v157;
  v343 = xmmword_1B0027030;
  v340 = v157;
  v341 = v157;
  v338 = v157;
  v339 = v157;
  v336 = v157;
  v337 = v157;
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_26_20();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, &v389, &v387,
    0x3F6666663F666666,
    0,
    v227,
    v231,
    v233,
    v237,
    v241,
    v245,
    v251,
    v257,
    v263,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v317,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  v403 = xmmword_1B00288D0;
  v404 = xmmword_1B00288E0;
  v401 = xmmword_1B00288F0;
  v402 = xmmword_1B0028900;
  OUTLINED_FUNCTION_6_16();
  v395 = xmmword_1B0028910;
  v396 = xmmword_1B0028920;
  v393 = xmmword_1B0028930;
  v394 = xmmword_1B0028940;
  v389 = xmmword_1B0028950;
  v390 = xmmword_1B0028960;
  v387 = xmmword_1B0028970;
  v388 = xmmword_1B0028980;
  v380 = xmmword_1B0028990;
  v381 = xmmword_1B00289A0;
  v379 = xmmword_1B00289C0;
  v376 = xmmword_1B00289D0;
  v377 = xmmword_1B00289E0;
  v378 = xmmword_1B00289B0;
  v374 = xmmword_1B00289B0;
  v375 = xmmword_1B00289F0;
  v363 = xmmword_1B0028A00;
  v354 = xmmword_1B0028A10;
  v355 = xmmword_1B0028A20;
  v362 = v334;
  v397 = v334;
  v398 = v334;
  v391 = (__int128)v334;
  v392 = (__int128)v334;
  v385 = (__int128)v334;
  v386 = (__int128)v334;
  memset(v384, 0, sizeof(v384));
  v382 = v334;
  v383 = xmmword_1B0027030;
  v372 = v334;
  v373 = v335;
  v370 = v334;
  v371 = v334;
  v368 = v334;
  v369 = (__int128)v335;
  v366 = v334;
  v367 = xmmword_1B00278C0;
  v364 = v334;
  v365 = (__n128)xmmword_1B00278C0;
  v360 = v334;
  v361 = v334;
  v358 = v334;
  v359 = v334;
  v356 = v334;
  v357 = xmmword_1B0028790;
  v352 = v334;
  v353 = v335;
  v350 = v334;
  v351 = xmmword_1B00287B0;
  v348 = v334;
  v349 = xmmword_1B0026400;
  v346 = v334;
  v347 = xmmword_1B00287C0;
  v344 = v334;
  v345 = xmmword_1B0025E50;
  v342 = v334;
  v343 = xmmword_1B0027030;
  v340 = v334;
  v341 = v334;
  v338 = v334;
  v339 = v334;
  v336 = v334;
  v337 = v334;
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_32_5();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_10_2(v174, v175, v176, v177, v178, v179, v180, v181, v182, (__n128)xmmword_1B0028A30, 400.0, v183, 0.4, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v228, 0,
    v234,
    v238,
    v242,
    v246,
    v252,
    v258,
    v264,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    v312,
    v318,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  OUTLINED_FUNCTION_18_23();
  v399 = xmmword_1B00287F0;
  v400 = xmmword_1B0028050;
  v395 = xmmword_1B0028800;
  v396 = xmmword_1B0028810;
  v393 = xmmword_1B0028820;
  v391 = xmmword_1B0028830;
  v392 = xmmword_1B0028840;
  v387 = xmmword_1B0028850;
  v380 = xmmword_1B0028860;
  v378 = xmmword_1B0028870;
  v376 = xmmword_1B0028880;
  v363 = xmmword_1B0028890;
  v354 = xmmword_1B00288A0;
  v355 = xmmword_1B00288B0;
  v401 = xmmword_1B00287E0;
  v362 = v334;
  v402 = xmmword_1B0028660;
  v397 = v334;
  v398 = v334;
  v394 = (__int128)v334;
  OUTLINED_FUNCTION_19_17();
  v388 = xmmword_1B00286F0;
  OUTLINED_FUNCTION_25_6(0.698039234, v184, v185);
  v382 = v186;
  v383 = xmmword_1B0027030;
  v381 = xmmword_1B0028710;
  v379 = xmmword_1B0028730;
  OUTLINED_FUNCTION_9_12();
  v372 = v187;
  OUTLINED_FUNCTION_23_19(v335, v188, v187);
  v366 = v189;
  v367 = xmmword_1B00278C0;
  v364 = v189;
  v365 = (__n128)xmmword_1B0027740;
  OUTLINED_FUNCTION_28_16(v190, 1.0, v189);
  v356 = v191;
  v357 = xmmword_1B0028790;
  v352 = v191;
  v353 = v192;
  v350 = v191;
  v351 = xmmword_1B00287B0;
  v348 = v191;
  v349 = xmmword_1B0026400;
  v346 = v191;
  v347 = xmmword_1B00287C0;
  v344 = v191;
  OUTLINED_FUNCTION_13_26((__n128)xmmword_1B0025E50, 1.0, v191, v193);
  v332 = v194;
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_32_5();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_10_2(v195, v196, v197, v198, v199, v200, v201, v202, v203, (__n128)xmmword_1B00288C0, 200.0, 35.0, 0.1, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v229, 0,
    v235,
    v239,
    v243,
    v247,
    v253,
    v259,
    v265,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    v313,
    v319,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    v332);
  v403 = xmmword_1B0028630;
  v404 = xmmword_1B0028640;
  v401 = xmmword_1B0028650;
  v402 = xmmword_1B0028660;
  v399 = xmmword_1B0028670;
  v400 = xmmword_1B0028680;
  v397 = v334;
  v398 = v334;
  v395 = xmmword_1B0028690;
  v396 = xmmword_1B00271F0;
  v393 = xmmword_1B00286A0;
  v394 = (__int128)v334;
  v391 = xmmword_1B00286B0;
  v392 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_19_17();
  v387 = xmmword_1B00286E0;
  v388 = xmmword_1B00286F0;
  v385 = (__int128)v204;
  OUTLINED_FUNCTION_31_12(0.698039234, v204);
  v382 = v205;
  v383 = xmmword_1B0027030;
  v380 = xmmword_1B0028700;
  v381 = xmmword_1B0028710;
  v378 = xmmword_1B0028720;
  v379 = xmmword_1B0028730;
  v376 = xmmword_1B0028740;
  OUTLINED_FUNCTION_9_12();
  v372 = v206;
  v373 = v335;
  v370 = v206;
  v371 = v206;
  v368 = v206;
  v369 = (__int128)v335;
  v366 = v206;
  v367 = xmmword_1B00278C0;
  v364 = v206;
  v365 = (__n128)xmmword_1B0027740;
  v362 = v206;
  v363 = xmmword_1B0028780;
  v360 = v206;
  v361 = v206;
  v358 = v206;
  v359 = v206;
  v356 = v206;
  v357 = xmmword_1B0028790;
  v354 = (__int128)v206;
  v355 = xmmword_1B00287A0;
  v352 = v206;
  v353 = v335;
  v350 = v206;
  v351 = xmmword_1B00287B0;
  v348 = v206;
  v349 = xmmword_1B0026400;
  OUTLINED_FUNCTION_2_10(1.0, v206, v207);
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_10_2(v208, v209, v210, v211, v212, v213, v214, v215, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v389, &v387, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v230, v232,
    v236,
    v240,
    v244,
    v248,
    v254,
    v260,
    v266,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v314,
    v320,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    1112014848,
    1097859072,
    &v338,
    (uint64_t)&v336);
  return v0;
}

void sub_1AFBAB1F0()
{
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_5_20();
  OUTLINED_FUNCTION_13_3();
}

void sub_1AFBAB240()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_11();
  sub_1B0006B2C();
  v0 = OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_16(v0);
  sub_1B0006958();
  OUTLINED_FUNCTION_7_24();
}

void sub_1AFBAB26C()
{
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_0_20();
  OUTLINED_FUNCTION_5_20();
  OUTLINED_FUNCTION_13_3();
}

void sub_1AFBAB2AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_11();
  sub_1B0006B50();
  v0 = OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_16(v0);
  sub_1B0006958();
  OUTLINED_FUNCTION_7_24();
}

uint64_t sub_1AFBAB2D4()
{
  sub_1B000694C();
  swift_retain();
  sub_1B0006B38();
  OUTLINED_FUNCTION_41();
  swift_retain();
  sub_1B0006B38();
  OUTLINED_FUNCTION_41();
  return sub_1B0006958();
}

uint64_t sub_1AFBAB33C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AFBAB368()
{
  sub_1AFBAB33C();
  return swift_deallocClassInstance();
}

void sub_1AFBAB388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_10_22(v1, v4);
  OUTLINED_FUNCTION_23_25();
  OUTLINED_FUNCTION_15_29();
  OUTLINED_FUNCTION_6_17();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_25();
  OUTLINED_FUNCTION_6_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_14();
  if (qword_1ED1F47B8 != -1)
    swift_once();
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_3_20();
  sub_1AFBAB26C();
}

void sub_1AFBAB488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_10_22(v1, v4);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_15_29();
  OUTLINED_FUNCTION_6_17();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_25();
  OUTLINED_FUNCTION_6_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_14();
  if (qword_1ED1F47B8 != -1)
    swift_once();
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_8_21();
  OUTLINED_FUNCTION_3_20();
  sub_1AFBAB1F0();
}

uint64_t sub_1AFBAB594(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1AFBAB5C8()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36[9];

  v36[0] = 6;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 6;
  v21 = 0x617274736F746C41;
  v22 = 0xEF4C202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0051480;
  v25 = 6;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBABDDC();
  sub_1AFBABDDC();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V4.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E3851EC3DCCCCCDLL;
  *(_QWORD *)&v12 = 0x42A0000041400000;
  LODWORD(v10) = 1093310349;
  DWORD2(v9) = 1109393408;
  *(_QWORD *)&v9 = 0x4100000041726E98;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 10, 0, 0x42480000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E19999A3DB851ECLL,
    1091529988,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1091005916,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBABDDC()
{
  uint64_t v0;
  _OWORD *v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  double v14;
  __n128 v15;
  float v16;
  __n128 v17;
  double v18;
  double v19;
  __n128 v20;
  double v21;
  double v22;
  __int128 v23;
  __n128 v24;
  __int128 v25;
  double v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  double v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  double v45;
  __n128 v46;
  float v47;
  __n128 v48;
  double v49;
  __n128 v50;
  double v51;
  double v52;
  __int128 v53;
  __n128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __n128 v58;
  __int128 v59;
  __int128 v60;
  double v61;
  double v62;
  __int128 v63;
  __n128 v64;
  __int128 v65;
  __int128 v66;
  double v67;
  unsigned int v68;
  __n128 *v69;
  uint64_t v70;
  float v71;
  _OWORD *v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  uint64_t v79;
  double v80;
  __n128 v81;
  float v82;
  float v83;
  double v84;
  double v85;
  double v86;
  __n128 v87;
  double v88;
  __n128 v89;
  double v90;
  double v91;
  double v92;
  __n128 v93;
  __int128 v94;
  __n128 v95;
  double v96;
  __n128 v97;
  __n128 v98;
  double v99;
  __n128 v100;
  __int128 v101;
  __n128 v102;
  __int128 v103;
  __int128 v104;
  double v105;
  __n128 *v106;
  uint64_t v107;
  float v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  double v117;
  __n128 v118;
  float v119;
  float v120;
  _OWORD *v121;
  _OWORD *v122;
  __n128 *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  uint64_t v131;
  double v132;
  __n128 v133;
  float v134;
  float v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  uint64_t v144;
  double v145;
  float v146;
  float v147;
  double v148;
  double v149;
  double v150;
  __n128 v151;
  double v152;
  double v153;
  __n128 v154;
  double v155;
  double v156;
  double v157;
  __n128 v158;
  __int128 v159;
  __n128 v160;
  double v161;
  __n128 v162;
  __n128 v163;
  double v164;
  __n128 v165;
  double v166;
  __int128 v167;
  __n128 v168;
  __int128 v169;
  __int128 v170;
  double v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  uint64_t v179;
  double v180;
  float v181;
  float v182;
  __n128 v183;
  double v184;
  double v185;
  double v186;
  __n128 v187;
  __int128 v188;
  __int128 v189;
  __n128 v190;
  __int128 v191;
  __int128 v192;
  double v193;
  double v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  uint64_t v202;
  double v203;
  float v204;
  __n128 v205;
  double v206;
  double v207;
  double v208;
  __n128 v209;
  __int128 v210;
  __int128 v211;
  __n128 v212;
  __int128 v213;
  __int128 v214;
  double v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  uint64_t v223;
  double v224;
  __n128 v225;
  float v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  uint64_t v235;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  int v241;
  _OWORD *v242;
  _OWORD *v243;
  int v244;
  int v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  _OWORD *v386;
  _OWORD *v387;
  uint64_t v388;
  uint64_t v389;
  __n128 v390;
  __n128 v391;
  __n128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __n128 v400;
  __int128 v401;
  __n128 v402;
  __int128 v403;
  __n128 v404;
  __int128 v405;
  __n128 v406;
  __int128 v407;
  __n128 v408;
  __int128 v409;
  __n128 v410;
  __int128 v411;
  __n128 v412;
  __n128 v413;
  __n128 v414;
  __n128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __n128 v420;
  __int128 v421;
  __n128 v422;
  __n128 v423;
  __n128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __n128 v428;
  __int128 v429;
  __n128 v430;
  __int128 v431;
  __n128 v432;
  __int128 v433;
  __n128 v434;
  __int128 v435;
  __n128 v436;
  __int128 v437;
  __n128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v462 = xmmword_1B00276A0;
  v463 = xmmword_1B00276B0;
  v460 = xmmword_1B0028C00;
  v461 = xmmword_1B0028C10;
  v458 = xmmword_1B00287F0;
  v459 = xmmword_1B0028050;
  __asm { FMOV            V3.2D, #1.0 }
  v456 = _Q3;
  v457 = _Q3;
  v454 = _Q3;
  v455 = xmmword_1B0025E50;
  v452 = xmmword_1B0028C20;
  v453 = xmmword_1B0028C30;
  v450 = xmmword_1B0028C40;
  v451 = xmmword_1B0028C50;
  v448 = xmmword_1B0028C60;
  v449 = xmmword_1B00277A0;
  v446 = xmmword_1B0028C70;
  v447 = xmmword_1B0028C80;
  v393 = _Q3;
  v444 = _Q3;
  v445 = _Q3;
  v443 = 0u;
  v442 = 0u;
  v440 = _Q3;
  v441 = xmmword_1B0027030;
  v438 = (__n128)_Q3;
  v439 = xmmword_1B0025E90;
  v436 = (__n128)_Q3;
  v437 = xmmword_1B0027730;
  v434 = (__n128)_Q3;
  v435 = xmmword_1B0025E90;
  v432 = (__n128)_Q3;
  v433 = xmmword_1B0025E50;
  v430 = (__n128)_Q3;
  v431 = xmmword_1B0025E90;
  v428 = (__n128)_Q3;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = xmmword_1B0025E90;
  v424 = (__n128)_Q3;
  v425 = xmmword_1B00278C0;
  v422 = (__n128)_Q3;
  v423 = (__n128)_Q3;
  v420 = (__n128)_Q3;
  v421 = xmmword_1B0027770;
  v418 = xmmword_1B0027FE0;
  v419 = xmmword_1B0025E90;
  v416 = xmmword_1B0027FE0;
  v417 = xmmword_1B0028C90;
  v414 = (__n128)_Q3;
  v415 = (__n128)_Q3;
  v412 = (__n128)_Q3;
  v413 = (__n128)_Q3;
  v410 = (__n128)_Q3;
  v411 = xmmword_1B0025E50;
  v408 = (__n128)_Q3;
  v409 = xmmword_1B0027030;
  v406 = (__n128)_Q3;
  v407 = xmmword_1B00277B0;
  v404 = (__n128)_Q3;
  v405 = xmmword_1B0026140;
  v402 = (__n128)_Q3;
  v403 = xmmword_1B0025E50;
  v400 = (__n128)_Q3;
  v401 = xmmword_1B0027030;
  v398 = _Q3;
  v399 = _Q3;
  v396 = _Q3;
  v397 = _Q3;
  v394 = _Q3;
  v395 = _Q3;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_8_9(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, 35.0, 0.1, &v448, &v446, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v444, 0,
    &v442,
    &v440,
    &v438,
    &v436,
    &v434,
    &v432,
    &v430,
    &v428,
    &v426,
    &v424,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    &v396,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_7_15();
  v458 = xmmword_1B0028CA0;
  v459 = xmmword_1B0028CB0;
  OUTLINED_FUNCTION_11_30();
  v455 = xmmword_1B0025E50;
  v452 = xmmword_1B0028CC0;
  v453 = (__int128)v17;
  v450 = xmmword_1B0028CD0;
  v451 = xmmword_1B0028CE0;
  v448 = xmmword_1B0028CF0;
  v449 = xmmword_1B00277A0;
  v446 = xmmword_1B0028D00;
  v447 = xmmword_1B0028C80;
  v444 = (__int128)v17;
  v445 = (__int128)v17;
  v19 = OUTLINED_FUNCTION_10_32(1.0, 0.995539844, v18, v17);
  v441 = xmmword_1B0027030;
  v438 = v20;
  v439 = xmmword_1B0025E90;
  *(_QWORD *)&v22 = OUTLINED_FUNCTION_35_4(v19, v21, 1.0, v20).n128_u64[0];
  v435 = v23;
  v432 = v24;
  v433 = v25;
  v430 = v24;
  v431 = v23;
  v428 = v24;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = v23;
  OUTLINED_FUNCTION_13_27(v22, *(double *)&v25, v26, v24);
  v418 = v27;
  v419 = v28;
  v416 = v27;
  v417 = xmmword_1B0028C90;
  v414 = v29;
  v415 = v29;
  v412 = v29;
  v413 = v29;
  v410 = v29;
  v411 = v30;
  v408 = v29;
  v409 = v31;
  *(_QWORD *)&v32 = OUTLINED_FUNCTION_31_13(1.0, *(double *)&v30, *(double *)&v31, v29).n128_u64[0];
  v405 = v33;
  v402 = v34;
  v403 = v35;
  v400 = v34;
  v401 = v36;
  OUTLINED_FUNCTION_14_13(v32, *(double *)&v35, *(double *)&v36, v34);
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_16_18();
  OUTLINED_FUNCTION_8_9(v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, 35.0, 0.1, &v448, &v446, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v444, 0,
    &v442,
    &v440,
    &v438,
    &v436,
    &v434,
    &v432,
    &v430,
    &v428,
    &v426,
    &v424,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    v386,
    v388);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028D10;
  v461 = xmmword_1B0028D20;
  v458 = xmmword_1B0028D30;
  v459 = xmmword_1B0028D40;
  OUTLINED_FUNCTION_11_30();
  v455 = xmmword_1B0025E50;
  v452 = (__int128)v48;
  v453 = (__int128)v48;
  v450 = (__int128)v48;
  v451 = (__int128)v48;
  v448 = (__int128)v48;
  v449 = xmmword_1B0027740;
  v446 = xmmword_1B0028D50;
  v447 = xmmword_1B0028D60;
  v444 = (__int128)v48;
  v445 = (__int128)v48;
  v49 = OUTLINED_FUNCTION_10_32(0.69862318, 0.998033106, 1.0, v48);
  v441 = xmmword_1B0027030;
  v438 = v50;
  v439 = xmmword_1B0025E90;
  *(_QWORD *)&v52 = OUTLINED_FUNCTION_35_4(v49, 1.0, v51, v50).n128_u64[0];
  v435 = v53;
  v432 = v54;
  v433 = v55;
  v430 = v54;
  v431 = v53;
  v428 = v54;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = v53;
  OUTLINED_FUNCTION_13_27(v52, *(double *)&v53, 1.0, v54);
  v418 = v56;
  v419 = v57;
  v416 = v56;
  v417 = xmmword_1B0028C90;
  v414 = v58;
  v415 = v58;
  v412 = v58;
  v413 = v58;
  v410 = v58;
  v411 = v59;
  v408 = v58;
  v409 = v60;
  *(_QWORD *)&v62 = OUTLINED_FUNCTION_31_13(1.0, *(double *)&v57, v61, v58).n128_u64[0];
  v405 = v63;
  v402 = v64;
  v403 = v65;
  v400 = v64;
  v401 = v66;
  OUTLINED_FUNCTION_14_13(v62, v67, *(double *)&v63, v64);
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_12_8();
  v237 = v68 | 0x3F4CCCCD00000000;
  v392 = v69[163];
  v71 = *(float *)(v70 + 2640);
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_8_9(v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v71, &v448, &v446, v237, 1061997773, &v444, 0,
    &v442,
    v250,
    v256,
    v264,
    v272,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v344,
    &v414,
    &v412,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    v387,
    v389);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028D70;
  v461 = xmmword_1B0028A50;
  v458 = xmmword_1B00276E0;
  v459 = xmmword_1B0026110;
  OUTLINED_FUNCTION_11_30();
  v455 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_18_30(v84, v85, v86, v87);
  v446 = xmmword_1B0028D80;
  v447 = xmmword_1B0028D90;
  v444 = xmmword_1B0026320;
  v445 = xmmword_1B0026330;
  v90 = OUTLINED_FUNCTION_10_32(0.970078886, v88, 0.97049284, v89);
  v441 = xmmword_1B0027030;
  OUTLINED_FUNCTION_12_22(v90, v91, v92, v93);
  v433 = v94;
  v430 = v95;
  OUTLINED_FUNCTION_25_7((__n128)xmmword_1B0026450, v96, v97, v95);
  v424 = v98;
  OUTLINED_FUNCTION_6_18((__n128)xmmword_1B0026230, v99, v100, v98);
  v411 = v101;
  v408 = v102;
  v409 = v103;
  v406 = v102;
  v407 = v104;
  v404 = v102;
  v405 = xmmword_1B0026140;
  v402 = v102;
  v403 = v101;
  v400 = v102;
  v401 = v103;
  OUTLINED_FUNCTION_19_3(1.0, *(double *)&v104, v105, v102);
  OUTLINED_FUNCTION_20_15();
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_30_5();
  v391 = v106[32];
  v108 = *(float *)(v107 + 2620);
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_28_6(v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, 700.0, v119, v108, v120, &v448, &v446, 0x3F6666663F666666, 0, &v444,
    0,
    &v442,
    v251,
    v257,
    v265,
    v273,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v345,
    &v414,
    &v412,
    v360,
    v365,
    v370,
    v372,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    &v396,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028DA0;
  v461 = xmmword_1B0028DB0;
  v458 = xmmword_1B0028220;
  v459 = xmmword_1B0028230;
  v456 = v393;
  v457 = v393;
  v454 = v393;
  v455 = xmmword_1B0025E50;
  v452 = v393;
  v453 = v393;
  v450 = v393;
  v451 = v393;
  v448 = v393;
  v449 = xmmword_1B0027840;
  v446 = xmmword_1B0028DC0;
  v447 = xmmword_1B0028D90;
  v444 = xmmword_1B0028DD0;
  v445 = xmmword_1B0028DE0;
  v443 = 0u;
  v442 = 0u;
  v440 = v393;
  v441 = xmmword_1B0027030;
  v438 = (__n128)v393;
  v439 = xmmword_1B0025E90;
  v436 = (__n128)v393;
  v437 = xmmword_1B0027730;
  v434 = (__n128)v393;
  v435 = xmmword_1B0025E90;
  v432 = (__n128)v393;
  v433 = xmmword_1B0025E50;
  v430 = (__n128)v393;
  v431 = v393;
  v428 = (__n128)v393;
  v429 = v393;
  v426 = v393;
  v427 = xmmword_1B0028150;
  v424 = (__n128)v393;
  v425 = xmmword_1B0026130;
  v422 = (__n128)v393;
  v423 = (__n128)v393;
  v420 = (__n128)v393;
  v421 = xmmword_1B0027770;
  v418 = v393;
  v419 = xmmword_1B0025E90;
  v416 = v393;
  v417 = xmmword_1B0028C90;
  v414 = (__n128)v393;
  v415 = (__n128)v393;
  v412 = (__n128)v393;
  v413 = (__n128)v393;
  v410 = (__n128)v393;
  v411 = xmmword_1B0025E50;
  v408 = (__n128)v393;
  v409 = xmmword_1B0027030;
  v406 = (__n128)v393;
  v407 = xmmword_1B00278C0;
  v404 = (__n128)v393;
  v405 = xmmword_1B0026140;
  v402 = (__n128)v393;
  v403 = xmmword_1B0025E50;
  v400 = (__n128)v393;
  v401 = xmmword_1B0027030;
  v398 = v393;
  v399 = v393;
  v396 = v393;
  v397 = v393;
  v394 = v393;
  v395 = v393;
  OUTLINED_FUNCTION_22_4();
  v374 = v121;
  OUTLINED_FUNCTION_20_15();
  OUTLINED_FUNCTION_3_21();
  v258 = v122;
  OUTLINED_FUNCTION_30_5();
  v390 = v123[223];
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_28_6(v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, 900.0, v134, 0.8, v135, &v448, &v446, 0x3F6666663F666666, 0, &v444,
    0,
    &v442,
    &v440,
    v258,
    v266,
    v274,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    v338,
    v346,
    &v414,
    &v412,
    v361,
    v366,
    v371,
    v373,
    &v402,
    v374,
    v376,
    v378,
    v382,
    &v396,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028DA0;
  v461 = xmmword_1B0028DB0;
  v458 = xmmword_1B0028220;
  v459 = xmmword_1B0028230;
  v456 = v393;
  v457 = v393;
  v454 = v393;
  v455 = xmmword_1B0025E50;
  v452 = v393;
  v453 = v393;
  v450 = v393;
  v451 = v393;
  v448 = v393;
  v449 = xmmword_1B0027840;
  v446 = xmmword_1B0028DC0;
  v447 = xmmword_1B0028D90;
  v444 = xmmword_1B0028DD0;
  v445 = xmmword_1B0028DE0;
  v443 = 0u;
  v442 = 0u;
  v440 = v393;
  v441 = xmmword_1B0027030;
  v438 = (__n128)v393;
  v439 = xmmword_1B0025E90;
  v436 = (__n128)v393;
  v437 = xmmword_1B0027730;
  v434 = (__n128)v393;
  v435 = xmmword_1B0025E90;
  v432 = (__n128)v393;
  v433 = xmmword_1B0025E50;
  v430 = (__n128)v393;
  v431 = v393;
  v428 = (__n128)v393;
  v429 = v393;
  v426 = v393;
  v427 = xmmword_1B0028150;
  v424 = (__n128)v393;
  v425 = xmmword_1B0026130;
  v422 = (__n128)v393;
  v423 = (__n128)v393;
  v420 = (__n128)v393;
  v421 = xmmword_1B0027770;
  v418 = v393;
  v419 = xmmword_1B0025E90;
  v416 = v393;
  v417 = xmmword_1B0028C90;
  v414 = (__n128)v393;
  v415 = (__n128)v393;
  v412 = (__n128)v393;
  v413 = (__n128)v393;
  v410 = (__n128)v393;
  v411 = xmmword_1B0025E50;
  v408 = (__n128)v393;
  v409 = xmmword_1B0027030;
  v406 = (__n128)v393;
  v407 = xmmword_1B00278C0;
  v404 = (__n128)v393;
  v405 = xmmword_1B0026140;
  v402 = (__n128)v393;
  v403 = xmmword_1B0025E50;
  v400 = (__n128)v393;
  v401 = xmmword_1B0027030;
  v398 = v393;
  v399 = v393;
  v396 = v393;
  v397 = v393;
  v394 = v393;
  v395 = v393;
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_3_21();
  v259 = v136;
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_29_2(v137, v138, v139, v140, v141, v142, v143, v144, v145, v390, 900.0, v146, 0.8, v147, &v448, &v446, v238, v240, &v444,
    0,
    &v442,
    &v440,
    v259,
    v267,
    v275,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    v339,
    v347,
    &v414,
    &v412,
    v362,
    v367,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    v379,
    v383,
    &v396,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028D70;
  v461 = xmmword_1B0028A50;
  v458 = xmmword_1B00276E0;
  v459 = xmmword_1B0026110;
  OUTLINED_FUNCTION_11_30();
  v455 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_18_30(v148, v149, v150, v151);
  v446 = xmmword_1B0028D80;
  v447 = xmmword_1B0028D90;
  v444 = xmmword_1B0026320;
  v445 = xmmword_1B0026330;
  v155 = OUTLINED_FUNCTION_10_32(0.97049284, v152, v153, v154);
  v441 = xmmword_1B0027030;
  OUTLINED_FUNCTION_12_22(v155, v156, v157, v158);
  v433 = v159;
  v430 = v160;
  OUTLINED_FUNCTION_25_7((__n128)xmmword_1B0026450, v161, v162, v160);
  v424 = v163;
  *(_QWORD *)&v166 = OUTLINED_FUNCTION_6_18((__n128)xmmword_1B0026230, v164, v165, v163).n128_u64[0];
  v411 = v167;
  v408 = v168;
  v409 = v169;
  v406 = v168;
  v407 = v170;
  v404 = v168;
  v405 = xmmword_1B0026140;
  v402 = v168;
  v403 = v167;
  v400 = v168;
  v401 = v169;
  OUTLINED_FUNCTION_19_3(v166, 1.0, v171, v168);
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_29_2(v172, v173, v174, v175, v176, v177, v178, v179, v180, v391, 700.0, v181, v108, v182, &v448, &v446, v239, v241, &v444,
    v244,
    v246,
    v252,
    v260,
    v268,
    v276,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    v340,
    v348,
    v352,
    v356,
    v363,
    v368,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    v380,
    v384,
    &v442,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_5_21();
  v460 = xmmword_1B0028D10;
  v461 = xmmword_1B0028D20;
  v458 = xmmword_1B0028D30;
  OUTLINED_FUNCTION_26_21((__n128)xmmword_1B0028D40);
  v455 = xmmword_1B0025E50;
  v452 = (__int128)v183;
  v453 = (__int128)v183;
  v450 = (__int128)v183;
  v451 = (__int128)v183;
  v448 = (__int128)v183;
  v449 = xmmword_1B0027740;
  v446 = xmmword_1B0028D50;
  OUTLINED_FUNCTION_17_21((__n128)xmmword_1B0028D60, v184, v185, v186, v183);
  v441 = xmmword_1B0027030;
  v438 = v187;
  v439 = xmmword_1B0025E90;
  v436 = v187;
  v437 = xmmword_1B0027730;
  v434 = v187;
  v435 = xmmword_1B0025E90;
  v432 = v187;
  v433 = v188;
  v430 = v187;
  v431 = xmmword_1B0025E90;
  v428 = v187;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = xmmword_1B0025E90;
  v424 = v187;
  v425 = xmmword_1B00278C0;
  v422 = v187;
  v423 = v187;
  v420 = v187;
  v421 = xmmword_1B0027770;
  v418 = xmmword_1B0027FE0;
  v419 = xmmword_1B0025E90;
  v416 = xmmword_1B0027FE0;
  v417 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_24_17(1.0, 1.0, 1.0, 0.899999976, v187);
  v411 = v189;
  v408 = v190;
  v409 = v191;
  v406 = v190;
  v407 = xmmword_1B00277B0;
  v404 = v190;
  v405 = v192;
  v402 = v190;
  v403 = v189;
  v400 = v190;
  v401 = v191;
  OUTLINED_FUNCTION_23_20(1.0, v193, *(double *)&v192, v194, v190);
  OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_9_13(v195, v196, v197, v198, v199, v200, v201, v202, v203, v392, 200.0, v204, v71, &v448, &v446, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v242, v245,
    v247,
    v253,
    v261,
    v269,
    v277,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    v341,
    v349,
    v353,
    v357,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    &v442,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_7_15();
  v458 = xmmword_1B0028CA0;
  OUTLINED_FUNCTION_26_21((__n128)xmmword_1B0028CB0);
  v455 = xmmword_1B0025E50;
  v452 = xmmword_1B0028CC0;
  v453 = (__int128)v205;
  v450 = xmmword_1B0028CD0;
  v451 = xmmword_1B0028CE0;
  v448 = xmmword_1B0028CF0;
  v449 = xmmword_1B00277A0;
  v446 = xmmword_1B0028D00;
  OUTLINED_FUNCTION_17_21((__n128)xmmword_1B0028C80, v206, v207, v208, v205);
  v441 = xmmword_1B0027030;
  v438 = v209;
  v439 = xmmword_1B0025E90;
  v436 = v209;
  v437 = xmmword_1B0027730;
  v434 = v209;
  v435 = xmmword_1B0025E90;
  v432 = v209;
  v433 = v210;
  v430 = v209;
  v431 = xmmword_1B0025E90;
  v428 = v209;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = xmmword_1B0025E90;
  v424 = v209;
  v425 = xmmword_1B00278C0;
  v422 = v209;
  v423 = v209;
  v420 = v209;
  v421 = xmmword_1B0027770;
  v418 = xmmword_1B0027FE0;
  v419 = xmmword_1B0025E90;
  v416 = xmmword_1B0027FE0;
  v417 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_24_17(1.0, 1.0, 1.0, 1.0, v209);
  v411 = v211;
  v408 = v212;
  v409 = v213;
  v406 = v212;
  v407 = xmmword_1B00277B0;
  v404 = v212;
  v405 = v214;
  v402 = v212;
  v403 = v211;
  v400 = v212;
  v401 = v213;
  OUTLINED_FUNCTION_23_20(*(double *)&v213, *(double *)&v214, 1.0, v215, v212);
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_16_18();
  OUTLINED_FUNCTION_9_13(v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, 35.0, 0.1, &v448, &v446, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v243, 0,
    v248,
    v254,
    v262,
    v270,
    v278,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    v334,
    v342,
    v350,
    v354,
    v358,
    v364,
    v369,
    &v406,
    &v404,
    &v402,
    &v400,
    &v398,
    1112014848,
    1097859072,
    &v396,
    (uint64_t)&v394);
  OUTLINED_FUNCTION_7_15();
  v458 = xmmword_1B00287F0;
  v459 = xmmword_1B0028050;
  v456 = v393;
  v457 = v393;
  v454 = v393;
  v455 = xmmword_1B0025E50;
  v452 = xmmword_1B0028C20;
  v453 = xmmword_1B0028C30;
  v450 = xmmword_1B0028C40;
  v451 = xmmword_1B0028C50;
  v448 = xmmword_1B0028C60;
  v449 = xmmword_1B00277A0;
  v446 = xmmword_1B0028C70;
  v447 = xmmword_1B0028C80;
  v444 = v393;
  v445 = v393;
  v443 = 0u;
  v442 = 0u;
  v440 = v393;
  v441 = xmmword_1B0027030;
  v438 = (__n128)v393;
  v439 = xmmword_1B0025E90;
  v436 = (__n128)v393;
  v437 = xmmword_1B0027730;
  v434 = (__n128)v393;
  v435 = xmmword_1B0025E90;
  v432 = (__n128)v393;
  v433 = xmmword_1B0025E50;
  v430 = (__n128)v393;
  v431 = xmmword_1B0025E90;
  v428 = (__n128)v393;
  v429 = xmmword_1B0026140;
  v426 = xmmword_1B0027FE0;
  v427 = xmmword_1B0025E90;
  v424 = (__n128)v393;
  v425 = xmmword_1B00278C0;
  v422 = (__n128)v393;
  v423 = (__n128)v393;
  v420 = (__n128)v393;
  v421 = xmmword_1B0027770;
  v418 = xmmword_1B0027FE0;
  v419 = xmmword_1B0025E90;
  v416 = xmmword_1B0027FE0;
  v417 = xmmword_1B0028C90;
  v414 = (__n128)v393;
  v415 = (__n128)v393;
  v412 = (__n128)v393;
  v413 = (__n128)v393;
  v410 = (__n128)v393;
  v411 = xmmword_1B0025E50;
  v408 = (__n128)v393;
  v409 = xmmword_1B0027030;
  v406 = (__n128)v393;
  v407 = xmmword_1B00277B0;
  v404 = (__n128)v393;
  v405 = xmmword_1B0026140;
  v402 = (__n128)v393;
  v403 = xmmword_1B0025E50;
  v400 = (__n128)v393;
  v401 = xmmword_1B0027030;
  v398 = v393;
  v399 = v393;
  v396 = v393;
  v397 = v393;
  v394 = v393;
  v395 = v393;
  OUTLINED_FUNCTION_22_4();
  v375 = v227;
  OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_9_13(v228, v229, v230, v231, v232, v233, v234, v235, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v448, &v446, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v444, 0,
    v249,
    v255,
    v263,
    v271,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v335,
    v343,
    v351,
    v355,
    v359,
    &v410,
    &v408,
    &v406,
    &v404,
    &v402,
    v375,
    v377,
    v381,
    v385,
    &v396,
    (uint64_t)&v394);
  return v0;
}

uint64_t CelestialEphemeris.rise.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFBAD28C((SEL *)&selRef_rise, a1);
}

uint64_t CelestialEphemeris.set.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFBAD28C((SEL *)&selRef_set, a1);
}

uint64_t sub_1AFBAD28C@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v5 = sub_1B00058D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v13 = v12 - v11;
  v14 = objc_msgSend(*(id *)(v2 + 16), *a1);
  if (v14)
  {
    v15 = v14;
    sub_1B000589C();

    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v16(v13, v9, v5);
    OUTLINED_FUNCTION_4_26(v13, 0);
    result = __swift_getEnumTagSinglePayload(v13, 1, v5);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(a2, v13, v5);
  }
  else
  {
    result = OUTLINED_FUNCTION_4_26(v13, 1);
  }
  __break(1u);
  return result;
}

id CelestialEphemeris.phaseAngle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_phaseAngle);
}

id CelestialEphemeris.elongation.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_elongation);
}

id CelestialEphemeris.parallacticAngle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_parallacticAngle);
}

id CelestialEphemeris.moonPhaseAngle.getter(uint64_t a1)
{
  return GEOCelestialEphemeris.moonPhaseAngle.getter(a1);
}

uint64_t CelestialEphemeris.moonPhase.getter()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  double v4;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_illuminatedFraction);
  v3 = v2;
  GEOCelestialEphemeris.moonPhaseAngle.getter((uint64_t)v1);
  return MoonPhase.init(illuminatedFraction:phaseAngle:)(v3, v4);
}

uint64_t CelestialEphemeris.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CelestialEphemeris.__deallocating_deinit()
{
  CelestialEphemeris.deinit();
  return swift_deallocClassInstance();
}

double CelestialEphemeris.radiusVector.getter()
{
  return sub_1AFB31D34();
}

double CelestialEphemeris.topocentricRadiusVector.getter()
{
  return sub_1AFB31D34();
}

uint64_t CelestialEphemeris.eclipticCoord.getter()
{
  return sub_1AFB32860(&qword_1EEE70970);
}

uint64_t CelestialEphemeris.equatorialCoord.getter()
{
  return sub_1AFB32860(&qword_1EEE70978);
}

void sub_1AFBAD4D0()
{
  _QWORD *v0;
  uint64_t v1;

  objc_msgSend((id)OUTLINED_FUNCTION_3_22(), sel_radiusVector);
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFBAD4F8()
{
  _QWORD *v0;
  uint64_t v1;

  objc_msgSend((id)OUTLINED_FUNCTION_3_22(), sel_topocentricRadiusVector);
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFBAD520(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1AFAD5C34(v1, (SEL *)&selRef_eclipticCoord, a1);
}

void sub_1AFBAD540(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1AFAD5C34(v1, (SEL *)&selRef_equatorialCoord, a1);
}

uint64_t method lookup function for CelestialEphemeris()
{
  return swift_lookUpClassMethod();
}

void sub_1AFBAD56C()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 2;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004C202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4C656C676E6953;
  v24 = 10;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBA9B34();
  sub_1AFBA9B34();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x42B4000044BB8000;
  DWORD2(v15) = 1119748096;
  *(_QWORD *)&v15 = 0x4396000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E23D70A3DF5C28FLL;
  *(_QWORD *)&v11 = 0x442F000042480000;
  LODWORD(v9) = 0;
  DWORD2(v8) = 0;
  *(_QWORD *)&v8 = 0x4218000040B00000;
  LODWORD(v7) = 1148152459;
  LODWORD(v5) = 1120403456;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42A0000040400000, v5, 0x3EB851EB3E428F5CLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4234000000000000,
    v7,
    0x3E3851EC3E0F5C29,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E23D70A3DA3D70ALL,
    0,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    0,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1134231552,
    0x3E3851EC3E0F5C29,
    v14,
    1065353216,
    0x3F36DB443F800000,
    xmmword_1B0026E40,
    v15,
    1041865114,
    1045220557,
    v16,
    1065353216,
    1065353216,
    0x3D88D9C93F800000,
    xmmword_1B00285F0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    0,
    xmmword_1B00285E0,
    0x4100000040A00000);
}

void sub_1AFBADDCC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 1;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004C202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4C656C676E6953;
  v24 = 10;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBAE64C();
  sub_1AFBAE64C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E23D70A3D75C28FLL;
  *(_QWORD *)&v17 = 0x42B4000044BB8000;
  DWORD2(v15) = 1119748096;
  *(_QWORD *)&v15 = 0x438C000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E6B851F3DCCCCCDLL;
  *(_QWORD *)&v11 = 0x43FA000042200000;
  LODWORD(v9) = 0;
  DWORD2(v8) = 0;
  *(_QWORD *)&v8 = 0x41C8000041100000;
  LODWORD(v7) = 1148190720;
  LODWORD(v5) = 1120403456;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42A0000040400000, v5, 0x3EB333343E3851ECLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0x40000000,
    0x4234000000000000,
    v7,
    0x3E3851EC3E051EB8,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0x40A6666640333333,
    0x411000003E4CCCCDLL,
    v8,
    0x3E99999A3DE147AELL,
    0,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1065353216,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1124925440,
    0x3E8000003DCCCCCDLL,
    v14,
    1065353216,
    0x3F36DB443F800000,
    xmmword_1B0026E40,
    v15,
    1039516303,
    1043207291,
    v16,
    1065353216,
    1065353216,
    0x3D88D9C93F800000,
    xmmword_1B00285F0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    0,
    xmmword_1B00285E0,
    0x4100000040A00000);
}

uint64_t sub_1AFBAE64C()
{
  uint64_t v0;
  __int128 v6;
  __n128 v7;
  __int128 v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  float v24;
  float v25;
  __int128 v26;
  __n128 v27;
  __n128 v28;
  __int128 v29;
  __n128 v30;
  __n128 v31;
  __int128 v32;
  __n128 v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  float v44;
  float v45;
  __int128 v46;
  __int128 v47;
  unsigned int v48;
  __n128 *v49;
  uint64_t v50;
  float v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  double v60;
  __n128 v61;
  float v62;
  float v63;
  __n128 v64;
  double v65;
  __n128 v66;
  __int128 v67;
  double v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  __int128 v72;
  __int128 v73;
  double v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  uint64_t v83;
  double v84;
  __n128 v85;
  float v86;
  float v87;
  float v88;
  float v89;
  float v90;
  float v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __n128 v96;
  __int128 v97;
  __int128 v98;
  double v99;
  _OWORD *v100;
  _OWORD *v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  uint64_t v107;
  __n128 v108;
  float v109;
  float v110;
  float v111;
  float v112;
  float v113;
  float v114;
  __int128 v115;
  __n128 v116;
  double v117;
  __n128 v118;
  __n128 v119;
  __n128 v120;
  __int128 v121;
  __n128 v122;
  _OWORD *v123;
  double v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  uint64_t v132;
  __n128 v133;
  float v134;
  float v135;
  float v136;
  float v137;
  float v138;
  float v139;
  __int128 v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  uint64_t v149;
  double v150;
  __n128 v151;
  float v152;
  float v153;
  float v154;
  float v155;
  float v156;
  float v157;
  __n128 v158;
  double v159;
  double v160;
  double v161;
  __n128 v162;
  __n128 v163;
  __n128 v164;
  double v165;
  __n128 v166;
  double v167;
  double v168;
  __n128 v169;
  __n128 v170;
  __int128 v171;
  double v172;
  double v173;
  __int128 v174;
  double v175;
  __n128 v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  uint64_t v184;
  double v185;
  float v186;
  __int128 v187;
  __n128 v188;
  double v189;
  double v190;
  __int128 v191;
  double v192;
  __n128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  uint64_t v204;
  double v205;
  __int128 v206;
  double v207;
  __n128 v208;
  double v209;
  double v210;
  __n128 v211;
  __n128 v212;
  double v213;
  double v214;
  __n128 v215;
  __int128 v216;
  __n128 v217;
  __int128 v218;
  double v219;
  __int128 v220;
  double v221;
  __n128 v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  uint64_t v230;
  float v231;
  _OWORD *v233;
  _OWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  int v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  int v320;
  int v321;
  int v322;
  int v323;
  _OWORD *v324;
  _OWORD *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  __n128 v330;
  __int128 v331;
  __n128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __n128 v339;
  __int128 v340;
  __n128 v341;
  __int128 v342;
  __n128 v343;
  __n128 v344;
  __int128 v345;
  __int128 v346;
  __n128 v347;
  __int128 v348;
  __n128 v349;
  __n128 v350;
  __n128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __n128 v377;
  __int128 v378;
  __n128 v379;
  __int128 v380;
  _OWORD v381[2];
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v400 = xmmword_1B00276A0;
  v401 = xmmword_1B00276B0;
  v398 = xmmword_1B0028650;
  v399 = xmmword_1B0028660;
  v396 = xmmword_1B0028670;
  v397 = xmmword_1B0028680;
  __asm { FMOV            V3.2D, #1.0 }
  v331 = _Q3;
  v394 = _Q3;
  v395 = _Q3;
  OUTLINED_FUNCTION_26_16((__n128)xmmword_1B0028F40, (__n128)xmmword_1B0028F50);
  v390 = xmmword_1B0028F60;
  v391 = v6;
  v388 = xmmword_1B00286B0;
  v389 = xmmword_1B0025F70;
  v386 = xmmword_1B00286C0;
  v387 = xmmword_1B00286D0;
  v384 = xmmword_1B00286E0;
  v385 = xmmword_1B0028F70;
  v382 = v6;
  v383 = v6;
  OUTLINED_FUNCTION_11_10();
  v379 = v7;
  v380 = xmmword_1B0027030;
  v377 = v7;
  v378 = xmmword_1B00287C0;
  v375 = (__int128)v7;
  v376 = xmmword_1B0028F80;
  v373 = (__int128)v7;
  v374 = xmmword_1B0027760;
  v371 = (__int128)v7;
  v372 = xmmword_1B00277B0;
  v369 = v7;
  v370 = xmmword_1B0025E90;
  v367 = v7;
  v368 = v7;
  v365 = xmmword_1B0028F90;
  v366 = xmmword_1B0025E90;
  v363 = (__int128)v7;
  v364 = xmmword_1B0028FA0;
  v361 = xmmword_1B0028FB0;
  v362 = xmmword_1B0028FC0;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0028FE0;
  OUTLINED_FUNCTION_14_14(1.0, 1.0, 0.849999964, v7);
  v353 = xmmword_1B0028FF0;
  v354 = v8;
  v351 = v9;
  v352 = xmmword_1B0029000;
  v349 = v9;
  v350 = (__n128)v8;
  v332 = (__n128)v8;
  v347 = v9;
  v348 = v10;
  v345 = xmmword_1B0029010;
  v346 = xmmword_1B0029020;
  v343 = v9;
  v344 = (__n128)v8;
  v341 = v9;
  v342 = xmmword_1B0025E50;
  v339 = v9;
  v340 = v11;
  OUTLINED_FUNCTION_3_23(1.0, 1.0, v12, v9);
  v326 = v13;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_16_14();
  OUTLINED_FUNCTION_9_2(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, 0.1, &v386, &v384, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v382, 0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    v326);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_25_8((__n128)xmmword_1B00287E0);
  v396 = xmmword_1B00287F0;
  v397 = xmmword_1B0028050;
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_26_16((__n128)xmmword_1B0028F40, (__n128)xmmword_1B0029030);
  v390 = xmmword_1B0029040;
  v391 = v26;
  v388 = xmmword_1B0028830;
  v389 = xmmword_1B0028840;
  OUTLINED_FUNCTION_13_8();
  v384 = xmmword_1B0028850;
  v385 = xmmword_1B00286F0;
  OUTLINED_FUNCTION_5_22(0.454901934, v27.n128_f64[0], v27);
  v380 = xmmword_1B0027030;
  v377 = v28;
  v378 = xmmword_1B00287C0;
  v375 = (__int128)v28;
  v376 = xmmword_1B0028150;
  v373 = (__int128)v28;
  v374 = xmmword_1B00287C0;
  v371 = (__int128)v28;
  v29 = (__int128)OUTLINED_FUNCTION_18_15((__n128)xmmword_1B0027FF0, v28);
  v365 = xmmword_1B0028F90;
  v366 = v29;
  v363 = xmmword_1B0028F90;
  v364 = xmmword_1B0026230;
  v361 = xmmword_1B0028FD0;
  v362 = xmmword_1B0028FC0;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0029050;
  OUTLINED_FUNCTION_35_1(1.0, v30);
  v353 = (__int128)v31;
  v354 = v32;
  v351 = v31;
  v352 = xmmword_1B0029000;
  v349 = v31;
  v350 = (__n128)v32;
  v347 = v31;
  v348 = xmmword_1B00277B0;
  v345 = (__int128)v31;
  v346 = xmmword_1B0029020;
  v343 = v31;
  v344 = (__n128)v32;
  v341 = v31;
  v342 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_10_33(1.0, v31, v33);
  OUTLINED_FUNCTION_16_14();
  OUTLINED_FUNCTION_9_2(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, 0.1, &v386, &v384, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v382, 0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v400 = xmmword_1B00288D0;
  v401 = xmmword_1B00288E0;
  v398 = xmmword_1B00288F0;
  v399 = xmmword_1B0028900;
  v396 = xmmword_1B00276E0;
  v397 = xmmword_1B0026110;
  v394 = v331;
  v395 = v331;
  OUTLINED_FUNCTION_26_16((__n128)xmmword_1B0028910, (__n128)xmmword_1B0028920);
  v390 = xmmword_1B0029060;
  v391 = xmmword_1B0028940;
  v388 = v46;
  v389 = v46;
  v386 = xmmword_1B0028950;
  v387 = xmmword_1B0028960;
  v384 = xmmword_1B0028970;
  v385 = xmmword_1B0028980;
  v382 = v46;
  v383 = v46;
  OUTLINED_FUNCTION_11_10();
  v379 = (__n128)v47;
  v380 = xmmword_1B0027030;
  v377 = (__n128)v47;
  v378 = xmmword_1B00287C0;
  v375 = v47;
  v376 = xmmword_1B0028150;
  v373 = v47;
  v374 = xmmword_1B00287C0;
  v371 = v47;
  v372 = xmmword_1B00277B0;
  v369 = (__n128)v47;
  v370 = (__int128)v332;
  v367 = (__n128)v47;
  v368 = (__n128)v47;
  v365 = xmmword_1B0028F90;
  v366 = (__int128)v332;
  v363 = xmmword_1B0028F90;
  v364 = xmmword_1B0029070;
  v361 = xmmword_1B0028FD0;
  v362 = xmmword_1B0029080;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0027810;
  v357 = v47;
  v358 = v47;
  v355 = v47;
  v356 = v47;
  v353 = v47;
  v354 = (__int128)v332;
  v351 = (__n128)v47;
  v352 = xmmword_1B0029090;
  v349 = (__n128)v47;
  v350 = v332;
  v347 = (__n128)v47;
  v348 = xmmword_1B0029020;
  v345 = v47;
  v346 = xmmword_1B0029000;
  v343 = (__n128)v47;
  v344 = v332;
  v341 = (__n128)v47;
  v342 = xmmword_1B0025E50;
  v339 = (__n128)v47;
  v340 = xmmword_1B0027030;
  v337 = v47;
  v338 = v47;
  v335 = v47;
  v336 = v47;
  v333 = v47;
  v334 = v47;
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_19_4();
  v235 = v48 | 0x3F4CCCCD00000000;
  v330 = v49[163];
  v51 = *(float *)(v50 + 2524);
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_9_2(v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v51, &v386, &v384, v235, 1061997773, &v382, 0,
    v381,
    &v379,
    v242,
    v244,
    v246,
    v248,
    v252,
    v256,
    v260,
    v264,
    v268,
    v272,
    v276,
    v280,
    v284,
    v288,
    v292,
    v296,
    v300,
    v304,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  OUTLINED_FUNCTION_8_5();
  v398 = xmmword_1B0028A40;
  v399 = xmmword_1B0028A50;
  v396 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_34_8((__n128)xmmword_1B0026110);
  OUTLINED_FUNCTION_26_16((__n128)xmmword_1B0028A60, (__n128)xmmword_1B0028A70);
  v390 = xmmword_1B00290A0;
  v391 = (__int128)v64;
  v388 = (__int128)v64;
  v389 = (__int128)v64;
  v386 = xmmword_1B0028A90;
  v387 = xmmword_1B0028AA0;
  v384 = xmmword_1B0028AB0;
  v385 = xmmword_1B0025F70;
  v382 = xmmword_1B0026320;
  v383 = xmmword_1B0026330;
  OUTLINED_FUNCTION_27_7(0.970078886, 0.97049284, v65, v64);
  v380 = xmmword_1B0027030;
  v377 = v66;
  v378 = xmmword_1B00277B0;
  v375 = xmmword_1B00290B0;
  v376 = xmmword_1B00290C0;
  v373 = xmmword_1B00290D0;
  v374 = xmmword_1B00287C0;
  v371 = xmmword_1B00290E0;
  v372 = xmmword_1B0026FC0;
  v369 = v66;
  v370 = (__int128)v332;
  v367 = v66;
  v368 = v66;
  v365 = xmmword_1B0028F90;
  v366 = xmmword_1B0027740;
  v363 = xmmword_1B0028F90;
  v364 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_31_5();
  v362 = v67;
  v359 = xmmword_1B00290F0;
  v360 = xmmword_1B0027730;
  OUTLINED_FUNCTION_14_14(0.899999976, v68, 1.0, v69);
  v353 = (__int128)v70;
  v354 = xmmword_1B0028790;
  v351 = v70;
  v352 = xmmword_1B0029100;
  v349 = v70;
  v350 = v71;
  v347 = v70;
  v348 = xmmword_1B0029000;
  v345 = (__int128)v70;
  v346 = xmmword_1B00277A0;
  v343 = v70;
  v344 = v71;
  v341 = v70;
  v342 = v72;
  v339 = v70;
  v340 = v73;
  OUTLINED_FUNCTION_3_23(1.0, *(double *)&v72, v74, v70);
  v327 = v75;
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_23_21();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, &v386, &v384,
    0x3F6666663F666666,
    0,
    &v382,
    0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    v308,
    v312,
    v316,
    1112014848,
    1097859072,
    &v335,
    v327);
  OUTLINED_FUNCTION_9_14();
  v396 = xmmword_1B0028220;
  v397 = xmmword_1B0028230;
  v394 = v331;
  v395 = v331;
  OUTLINED_FUNCTION_26_16((__n128)xmmword_1B0029110, (__n128)xmmword_1B0029120);
  v390 = xmmword_1B00290A0;
  v391 = v92;
  v388 = v92;
  v389 = v92;
  OUTLINED_FUNCTION_12_11();
  v384 = xmmword_1B0029130;
  v385 = xmmword_1B0025F70;
  v382 = xmmword_1B0027D70;
  v383 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_11_10();
  v379 = (__n128)v93;
  v380 = xmmword_1B0027030;
  v377 = (__n128)v93;
  v378 = xmmword_1B00277B0;
  v375 = v93;
  v376 = xmmword_1B00290C0;
  v373 = v93;
  v374 = xmmword_1B00287C0;
  v371 = xmmword_1B0029140;
  v372 = xmmword_1B0026FC0;
  v369 = (__n128)v93;
  v370 = (__int128)v332;
  v367 = (__n128)v93;
  v368 = (__n128)v93;
  v365 = xmmword_1B0028F90;
  v366 = xmmword_1B0029080;
  v363 = xmmword_1B0028F90;
  v364 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_31_5();
  v362 = v94;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0029160;
  v357 = v95;
  v358 = v95;
  v355 = v95;
  v356 = v95;
  v353 = v95;
  v354 = xmmword_1B0029170;
  v351 = (__n128)v95;
  v352 = xmmword_1B0029180;
  v349 = (__n128)v95;
  v350 = v96;
  v347 = (__n128)v95;
  v348 = xmmword_1B0029190;
  v345 = v95;
  v346 = xmmword_1B00277A0;
  v343 = (__n128)v95;
  v344 = v96;
  v341 = (__n128)v95;
  v342 = v97;
  v339 = (__n128)v95;
  v340 = v98;
  v337 = v95;
  v338 = v95;
  v335 = v95;
  v336 = v95;
  v333 = v95;
  v334 = v95;
  OUTLINED_FUNCTION_12_8();
  v99 = OUTLINED_FUNCTION_4_27();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v100, v101, v102, v103, v104, v105, v106, v107, v99, v108, v109, v110, v111, v112, v113, v114, &v386, &v384,
    0x3F6666663F666666,
    0,
    &v382,
    0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v396 = xmmword_1B0028220;
  v397 = xmmword_1B0028230;
  v392 = xmmword_1B0029110;
  v393 = xmmword_1B0029120;
  v384 = xmmword_1B0029130;
  v382 = xmmword_1B0027D70;
  v383 = xmmword_1B0027D80;
  v371 = xmmword_1B0029140;
  v362 = xmmword_1B0029150;
  v360 = xmmword_1B0029160;
  v354 = xmmword_1B0029170;
  v352 = xmmword_1B0029180;
  v348 = xmmword_1B0029190;
  OUTLINED_FUNCTION_31_5();
  v359 = xmmword_1B0028FD0;
  v353 = v331;
  v351 = (__n128)v331;
  v347 = (__n128)v331;
  OUTLINED_FUNCTION_9_14();
  v394 = v115;
  v395 = v115;
  v390 = xmmword_1B00290A0;
  v391 = v115;
  v388 = v115;
  v389 = v115;
  OUTLINED_FUNCTION_12_11();
  v385 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_11_10();
  v379 = v116;
  v380 = xmmword_1B0027030;
  v377 = v116;
  v378 = xmmword_1B00277B0;
  v375 = (__int128)v116;
  v376 = xmmword_1B00290C0;
  v373 = (__int128)v116;
  v374 = xmmword_1B00287C0;
  *(_QWORD *)&v117 = OUTLINED_FUNCTION_18_15((__n128)xmmword_1B0026FC0, v116).n128_u64[0];
  v365 = xmmword_1B0028F90;
  v366 = xmmword_1B0029080;
  v363 = xmmword_1B0028F90;
  v364 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_35_1(v117, v118);
  v349 = v119;
  v350 = v120;
  v345 = (__int128)v119;
  v346 = xmmword_1B00277A0;
  v343 = v119;
  v344 = v120;
  v341 = v119;
  v342 = v121;
  OUTLINED_FUNCTION_10_33(v120.n128_f64[0], v119, v122);
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_1();
  v233 = v123;
  v124 = OUTLINED_FUNCTION_4_27();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v125, v126, v127, v128, v129, v130, v131, v132, v124, v133, v134, v135, v136, v137, v138, v139, &v386, v233,
    v236,
    v238,
    v240,
    0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    v309,
    v313,
    v317,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v398 = xmmword_1B0028A40;
  v399 = xmmword_1B0028A50;
  v392 = xmmword_1B0028A60;
  v393 = xmmword_1B0028A70;
  v390 = xmmword_1B00290A0;
  OUTLINED_FUNCTION_12_11();
  v384 = xmmword_1B0028AB0;
  v382 = xmmword_1B0026320;
  v383 = xmmword_1B0026330;
  v375 = xmmword_1B00290B0;
  v376 = xmmword_1B00290C0;
  v373 = xmmword_1B00290D0;
  v371 = xmmword_1B00290E0;
  v372 = xmmword_1B0026FC0;
  v366 = xmmword_1B0027740;
  v362 = xmmword_1B0028260;
  v359 = xmmword_1B00290F0;
  v360 = xmmword_1B0027730;
  v354 = xmmword_1B0028790;
  v352 = xmmword_1B0029100;
  v346 = xmmword_1B00277A0;
  v365 = xmmword_1B0028F90;
  OUTLINED_FUNCTION_31_5();
  v353 = v331;
  v351 = (__n128)v331;
  v345 = v331;
  v400 = xmmword_1B00276A0;
  v401 = xmmword_1B00276B0;
  v396 = xmmword_1B00276E0;
  v397 = xmmword_1B0026110;
  v394 = v331;
  v395 = v331;
  v391 = v331;
  v388 = v331;
  v389 = v331;
  v385 = xmmword_1B0025F70;
  memset(v381, 0, sizeof(v381));
  v379 = (__n128)v331;
  v380 = xmmword_1B0027030;
  v377 = (__n128)v331;
  v378 = xmmword_1B00277B0;
  v374 = xmmword_1B00287C0;
  v369 = (__n128)v331;
  v370 = (__int128)v332;
  v367 = (__n128)v331;
  v368 = (__n128)v331;
  v363 = v140;
  v364 = xmmword_1B0025E50;
  v357 = v331;
  v358 = v331;
  v355 = v331;
  v356 = v331;
  v349 = (__n128)v331;
  v350 = v332;
  v347 = (__n128)v331;
  v348 = xmmword_1B0029000;
  v343 = (__n128)v331;
  v344 = v332;
  v341 = (__n128)v331;
  v342 = xmmword_1B0025E50;
  v339 = (__n128)v331;
  v340 = xmmword_1B0027030;
  v337 = v331;
  v338 = v331;
  v335 = v331;
  v336 = v331;
  v333 = v331;
  v334 = v331;
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_21_1();
  v234 = v141;
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_23_21();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155, v156, v157, &v386, v234,
    v237,
    v239,
    v241,
    0,
    v381,
    &v379,
    v243,
    v245,
    v247,
    v249,
    v253,
    v257,
    v261,
    v265,
    v269,
    v273,
    v277,
    v281,
    v285,
    v289,
    v293,
    v297,
    v301,
    v305,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  v400 = xmmword_1B00288D0;
  v401 = xmmword_1B00288E0;
  v398 = xmmword_1B00288F0;
  v399 = xmmword_1B0028900;
  v396 = xmmword_1B00276E0;
  v397 = xmmword_1B0026110;
  OUTLINED_FUNCTION_24_6();
  v392 = xmmword_1B0028910;
  v393 = xmmword_1B0028920;
  v390 = xmmword_1B0029060;
  v391 = xmmword_1B0028940;
  v388 = (__int128)v158;
  v389 = (__int128)v158;
  v386 = xmmword_1B0028950;
  v387 = xmmword_1B0028960;
  v384 = xmmword_1B0028970;
  v385 = xmmword_1B0028980;
  v160 = OUTLINED_FUNCTION_5_22(1.0, v159, v158);
  v380 = xmmword_1B0027030;
  v163 = OUTLINED_FUNCTION_33_1(v160, v161, v162);
  v376 = xmmword_1B0028150;
  v373 = (__int128)v164;
  *(_QWORD *)&v165 = OUTLINED_FUNCTION_22_5(v163, 1.0, v164).n128_u64[0];
  v370 = (__int128)v332;
  v367 = v166;
  v368 = v166;
  OUTLINED_FUNCTION_32_7(v165, v167, v166.n128_f64[0], v168, v332);
  v364 = xmmword_1B0029070;
  v361 = xmmword_1B0028FD0;
  v362 = xmmword_1B0029080;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0027810;
  OUTLINED_FUNCTION_29_7(1.0, 1.0, v169);
  v353 = (__int128)v170;
  v354 = v171;
  v351 = v170;
  v352 = xmmword_1B0029090;
  v349 = v170;
  v350 = (__n128)v171;
  v347 = v170;
  v348 = xmmword_1B0029020;
  v345 = (__int128)v170;
  v346 = xmmword_1B0029000;
  v343 = v170;
  v344 = (__n128)v171;
  *(_QWORD *)&v173 = OUTLINED_FUNCTION_28_12(1.0, v172, v170).n128_u64[0];
  v340 = v174;
  OUTLINED_FUNCTION_15_31(v173, v175, v176);
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_10_5(v177, v178, v179, v180, v181, v182, v183, v184, v185, v330, 400.0, v186, v51, &v386, &v384, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v382, 0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    1112014848,
    1097859072,
    &v335,
    (uint64_t)&v333);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_25_8((__n128)xmmword_1B00287E0);
  v396 = xmmword_1B00287F0;
  OUTLINED_FUNCTION_34_8((__n128)xmmword_1B0028050);
  v392 = xmmword_1B0028F40;
  v393 = xmmword_1B0029030;
  v390 = xmmword_1B0029040;
  v391 = v187;
  v388 = xmmword_1B0028830;
  v389 = xmmword_1B0028840;
  OUTLINED_FUNCTION_13_8();
  v384 = xmmword_1B0028850;
  v385 = xmmword_1B00286F0;
  v382 = (__int128)v188;
  v383 = (__int128)v188;
  OUTLINED_FUNCTION_27_7(0.698039234, v189, v190, v188);
  v380 = xmmword_1B0027030;
  v377 = (__n128)v191;
  v378 = xmmword_1B00287C0;
  v375 = v191;
  v376 = xmmword_1B0028150;
  v373 = v191;
  v374 = xmmword_1B00287C0;
  v371 = v191;
  v372 = xmmword_1B0027FF0;
  v369 = (__n128)v191;
  v370 = (__int128)v332;
  v367 = (__n128)v191;
  v368 = (__n128)v191;
  OUTLINED_FUNCTION_32_7(1.0, 1.0, 1.0, *(double *)&v191, v332);
  v364 = xmmword_1B0026230;
  v361 = xmmword_1B0028FD0;
  v362 = xmmword_1B0028FC0;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0029050;
  OUTLINED_FUNCTION_14_14(1.0, 0.849999964, v192, v193);
  v353 = xmmword_1B00291A0;
  v354 = v194;
  v351 = (__n128)v195;
  v352 = xmmword_1B0029000;
  v349 = (__n128)v195;
  v350 = (__n128)v194;
  v347 = (__n128)v195;
  v348 = xmmword_1B00277B0;
  v345 = v195;
  v346 = xmmword_1B0029020;
  v343 = (__n128)v195;
  v344 = (__n128)v194;
  v341 = (__n128)v195;
  v342 = xmmword_1B0025E50;
  v339 = (__n128)v195;
  v340 = v196;
  v337 = v195;
  v338 = v195;
  v335 = v195;
  v336 = v195;
  v333 = v195;
  v334 = v195;
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_10_5(v197, v198, v199, v200, v201, v202, v203, v204, v205, (__n128)xmmword_1B00288C0, 200.0, 35.0, 0.1, &v386, &v384, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v382, 0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    v250,
    v254,
    v258,
    v262,
    v266,
    v270,
    v274,
    v278,
    v282,
    v286,
    v290,
    v294,
    v298,
    v302,
    v306,
    v310,
    v314,
    v318,
    v320,
    v322,
    v324,
    v328);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_25_8((__n128)xmmword_1B0028650);
  v396 = xmmword_1B0028670;
  v397 = xmmword_1B0028680;
  OUTLINED_FUNCTION_24_6();
  v392 = xmmword_1B0028F40;
  v393 = xmmword_1B0028F50;
  v390 = xmmword_1B0028F60;
  v391 = v206;
  v388 = xmmword_1B00286B0;
  v389 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_13_8();
  v384 = xmmword_1B00286E0;
  v385 = xmmword_1B0028F70;
  v209 = OUTLINED_FUNCTION_5_22(0.698039234, v207, v208);
  v380 = xmmword_1B0027030;
  OUTLINED_FUNCTION_33_1(v209, v210, v211);
  v376 = xmmword_1B0028F80;
  v373 = (__int128)v212;
  *(_QWORD *)&v214 = OUTLINED_FUNCTION_22_5((__n128)xmmword_1B0027760, v213, v212).n128_u64[0];
  v370 = (__int128)v332;
  v367 = v215;
  v368 = v215;
  v365 = xmmword_1B0028F90;
  v366 = (__int128)v332;
  v363 = (__int128)v215;
  v364 = xmmword_1B0028FA0;
  v361 = xmmword_1B0028FB0;
  v362 = xmmword_1B0028FC0;
  v359 = xmmword_1B0028FD0;
  v360 = xmmword_1B0028FE0;
  OUTLINED_FUNCTION_29_7(v214, 1.0, v215);
  v353 = xmmword_1B0028FF0;
  v354 = v216;
  v351 = v217;
  v352 = xmmword_1B0029000;
  v349 = v217;
  v350 = (__n128)v216;
  v347 = v217;
  v348 = v218;
  v345 = xmmword_1B0029010;
  v346 = xmmword_1B0029020;
  v343 = v217;
  v344 = (__n128)v216;
  *(_QWORD *)&v219 = OUTLINED_FUNCTION_28_12(1.0, 1.0, v217).n128_u64[0];
  v340 = v220;
  OUTLINED_FUNCTION_15_31(v219, v221, v222);
  OUTLINED_FUNCTION_0_22();
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_10_5(v223, v224, v225, v226, v227, v228, v229, v230, -90.0, (__n128)xmmword_1B00287D0, 200.0, v231, 0.1, &v386, &v384, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v382, 0,
    v381,
    &v379,
    &v377,
    &v375,
    &v373,
    v251,
    v255,
    v259,
    v263,
    v267,
    v271,
    v275,
    v279,
    v283,
    v287,
    v291,
    v295,
    v299,
    v303,
    v307,
    v311,
    v315,
    v319,
    v321,
    v323,
    v325,
    v329);
  return v0;
}

void sub_1AFBAFF8C()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 5;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 6;
  v26 = 0xEB000000004D202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4D656C676E6953;
  v29 = 10;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 10;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBB07B4();
  sub_1AFBB07B4();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1159274496;
  LODWORD(v5) = 1120403456;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x432A00003FB33333, v5, 0x3F6147AE3F000000, v6, 0x3F8000003F800000, 0x3E4CCCCD3F800000, 0x3F8000003F800000, 0x3E428F5C3F800000, 1065353216,
    0x42DC000000000000,
    v7,
    0x3F0000003E99999ALL,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    1056964608,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFBB07B4()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __int128 v9;
  __n128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  float v23;
  __n128 v24;
  double v25;
  __n128 v26;
  double v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  double v40;
  __n128 v41;
  float v42;
  __n128 v43;
  __n128 v44;
  __int128 v45;
  uint64_t v46;
  float v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  double v56;
  __n128 v57;
  float v58;
  float v59;
  float v60;
  double v61;
  __n128 v62;
  __n128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD *v66;
  __n128 *v67;
  uint64_t v68;
  float v69;
  uint64_t v70;
  float v71;
  double v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  uint64_t v80;
  __n128 v81;
  float v82;
  float v83;
  float v84;
  double v85;
  __n128 v86;
  __n128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD *v90;
  double v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  uint64_t v99;
  __n128 v100;
  float v101;
  float v102;
  float v103;
  float v104;
  float v105;
  float v106;
  double v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  uint64_t v115;
  __n128 v116;
  float v117;
  float v118;
  float v119;
  float v120;
  float v121;
  float v122;
  double v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  uint64_t v131;
  float v132;
  float v133;
  float v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  uint64_t v142;
  double v143;
  __n128 v144;
  float v145;
  double v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  uint64_t v158;
  float v159;
  __n128 v160;
  __n128 v161;
  __n128 v162;
  _OWORD *v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  uint64_t v171;
  float v172;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  int v187;
  int v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __n128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __n128 v359;
  __int128 v360;
  __n128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __n128 v367;
  __int128 v368;
  __n128 v369;
  __int128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __n128 v374;
  __n128 v375;
  __n128 v376;
  __n128 v377;
  __n128 v378;
  __n128 v379;
  __int128 v380;
  __n128 v381;
  __n128 v382;
  __n128 v383;
  __int128 v384;
  __n128 v385;
  __int128 v386;
  __n128 v387;
  __n128 v388;
  __n128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __n128 v399;
  __int128 v400;
  _OWORD v401[2];
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  _OWORD v406[2];
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v419 = xmmword_1B00292B0;
  v420 = xmmword_1B00292C0;
  v417 = xmmword_1B00292D0;
  v418 = xmmword_1B00292E0;
  v415 = xmmword_1B0028220;
  v416 = xmmword_1B0028230;
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00292F0, (__n128)xmmword_1B0029300);
  v411 = xmmword_1B0029310;
  v412 = xmmword_1B0025EA0;
  v409 = xmmword_1B0027B20;
  v410 = xmmword_1B0027B30;
  v407 = xmmword_1B0029320;
  v408 = xmmword_1B0029330;
  v406[0] = xmmword_1B0029340;
  v406[1] = xmmword_1B0029350;
  v404 = xmmword_1B0029360;
  v405 = xmmword_1B0029370;
  __asm { FMOV            V2.2D, #1.0 }
  v402 = _Q2;
  v403 = _Q2;
  OUTLINED_FUNCTION_24_18();
  v399 = v6;
  v400 = xmmword_1B0027030;
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029380, (__n128)xmmword_1B0029390);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B00293A0, (__n128)xmmword_1B00293B0);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B00293C0, (__n128)xmmword_1B00293D0);
  v391 = xmmword_1B00293E0;
  v392 = xmmword_1B00293F0;
  v389 = v7;
  OUTLINED_FUNCTION_26_22((__n128)xmmword_1B0025E90, 0.353558868, v7);
  v383 = v8;
  v384 = xmmword_1B0025E50;
  v381 = v8;
  v382 = v8;
  v379 = v8;
  OUTLINED_FUNCTION_13_28((__n128)xmmword_1B0027770, 1.0, v8);
  v370 = v9;
  v352 = v9;
  v367 = v10;
  v351 = v11;
  v368 = v11;
  v365 = xmmword_1B0029400;
  v366 = xmmword_1B00287A0;
  v363 = xmmword_1B0029410;
  v364 = xmmword_1B0029420;
  v350 = (__int128)v10;
  v361 = v10;
  v362 = v9;
  v359 = v10;
  v360 = v11;
  OUTLINED_FUNCTION_20_16(1.0, 0.810572743, v10);
  v341 = v12;
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_17_4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 650.0, 35.0, 0.3, v23, v406, &v404, 0x3F4CCCCD3F4CCCCDLL, 0, &v402,
    1067450368,
    v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    v341);
  v419 = xmmword_1B00292B0;
  v420 = xmmword_1B00292C0;
  v417 = xmmword_1B00292D0;
  v418 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B0029430, (__n128)xmmword_1B0029440);
  v411 = xmmword_1B0029310;
  v412 = xmmword_1B0025EA0;
  OUTLINED_FUNCTION_3_24();
  v402 = v350;
  v403 = v350;
  OUTLINED_FUNCTION_24_18();
  v399 = v24;
  v400 = v351;
  v397 = xmmword_1B0029380;
  v398 = xmmword_1B0029390;
  v395 = xmmword_1B00293A0;
  v396 = xmmword_1B00293B0;
  v393 = xmmword_1B00293C0;
  v394 = xmmword_1B00293D0;
  v391 = xmmword_1B00293E0;
  v392 = xmmword_1B00293F0;
  v389 = v24;
  OUTLINED_FUNCTION_26_22((__n128)xmmword_1B0025E90, v25, v24);
  v383 = v26;
  v384 = v352;
  v381 = v26;
  v382 = v26;
  v379 = v26;
  OUTLINED_FUNCTION_13_28((__n128)xmmword_1B0027770, v27, v26);
  v370 = v28;
  v367 = v29;
  v368 = v30;
  v365 = xmmword_1B0029400;
  v366 = xmmword_1B00287A0;
  v363 = xmmword_1B0029410;
  v364 = xmmword_1B0029450;
  v361 = v29;
  v362 = v28;
  v359 = v29;
  v360 = v30;
  OUTLINED_FUNCTION_20_16(0.810572743, 1.0, v29);
  v342 = v31;
  OUTLINED_FUNCTION_2_15();
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_17_4(v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, 650.0, 35.0, 0.3, v42, v406, &v404, 0x3F4CCCCD3F4CCCCDLL, 0, &v402,
    1067450368,
    v401,
    &v399,
    &v397,
    v197,
    v203,
    v211,
    v219,
    v227,
    v235,
    v243,
    v251,
    v259,
    v267,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v315,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    v342);
  v419 = xmmword_1B0029460;
  v420 = xmmword_1B0029470;
  v417 = xmmword_1B0029480;
  v418 = xmmword_1B0029490;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00294A0, (__n128)xmmword_1B00294B0);
  v411 = xmmword_1B00294C0;
  v412 = xmmword_1B00294D0;
  OUTLINED_FUNCTION_3_24();
  v402 = v350;
  v403 = v350;
  OUTLINED_FUNCTION_24_18();
  v399 = v43;
  v400 = v351;
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B00294E0, (__n128)xmmword_1B00294F0);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029500, (__n128)xmmword_1B0029510);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029520, (__n128)xmmword_1B0029530);
  v391 = xmmword_1B0029540;
  v392 = xmmword_1B0029550;
  v389 = v44;
  v390 = xmmword_1B0025E90;
  v387 = v44;
  v388 = v44;
  v385 = v44;
  v386 = xmmword_1B0025E90;
  v383 = v44;
  v384 = v352;
  v381 = v44;
  v382 = v44;
  v379 = v44;
  v380 = xmmword_1B0027770;
  v377 = v44;
  v378 = v44;
  v375 = v44;
  v376 = v44;
  v373 = v44;
  v374 = v44;
  v371 = v44;
  v372 = v44;
  v369 = v44;
  v370 = v352;
  v367 = v44;
  v368 = v45;
  v365 = xmmword_1B0029560;
  v366 = xmmword_1B0029570;
  v363 = xmmword_1B0029580;
  v364 = xmmword_1B0029590;
  v361 = v44;
  v362 = v352;
  v359 = v44;
  v360 = v45;
  OUTLINED_FUNCTION_18_31(0.810572863, 1.0, *(double *)&v45, v44);
  OUTLINED_FUNCTION_2_15();
  OUTLINED_FUNCTION_25_0();
  v47 = *(float *)(v46 + 2524);
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_17_4(v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v47, v60, v406, &v404, 0x3F4CCCCD3F4CCCCDLL, 0, &v402,
    1067450368,
    v401,
    &v399,
    &v397,
    v198,
    v204,
    v212,
    v220,
    v228,
    v236,
    v244,
    v252,
    v260,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v316,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    v343);
  v419 = xmmword_1B00295A0;
  v420 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_19_23();
  v415 = xmmword_1B00295C0;
  v416 = xmmword_1B00295D0;
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00295E0, (__n128)xmmword_1B00295F0);
  v411 = xmmword_1B0029600;
  OUTLINED_FUNCTION_22_6();
  v407 = xmmword_1B0029610;
  v408 = xmmword_1B0029620;
  OUTLINED_FUNCTION_31_14();
  v404 = xmmword_1B0029630;
  v405 = xmmword_1B0026A00;
  OUTLINED_FUNCTION_15_32((__n128)xmmword_1B0026320, (__n128)xmmword_1B0026330);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029640, (__n128)xmmword_1B0029650);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029660, (__n128)xmmword_1B0029670);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029680, (__n128)xmmword_1B0029690);
  OUTLINED_FUNCTION_6_19((__n128)xmmword_1B00296A0, (__n128)xmmword_1B00296B0, v61, v62);
  v367 = v63;
  v368 = v64;
  v365 = xmmword_1B00296C0;
  v366 = xmmword_1B00296D0;
  v363 = xmmword_1B00296E0;
  v364 = xmmword_1B0026FC0;
  v361 = v63;
  v362 = v65;
  v359 = v63;
  v360 = v64;
  OUTLINED_FUNCTION_18_31(*(double *)&v64, 0.752212405, 1.0, v63);
  OUTLINED_FUNCTION_4_28();
  v205 = v66;
  OUTLINED_FUNCTION_25_0();
  v349 = v67[66];
  v69 = *(float *)(v68 + 2616);
  v71 = *(float *)(v70 + 3240);
  v72 = OUTLINED_FUNCTION_21_23();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v73, v74, v75, v76, v77, v78, v79, v80, v72, v81, 1400.0, v82, v83, v84, v69, v71, v406, &v404,
    0x3F6666663F666666,
    0,
    &v402,
    1065353216,
    v401,
    &v399,
    &v397,
    &v395,
    v205,
    v213,
    v221,
    v229,
    v237,
    v245,
    v253,
    v261,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    v344);
  v419 = xmmword_1B00296F0;
  v420 = xmmword_1B0029700;
  v417 = xmmword_1B0029710;
  v418 = xmmword_1B0029720;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B0029730, (__n128)xmmword_1B0029740);
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_15_32((__n128)xmmword_1B0027D70, (__n128)xmmword_1B0027D80);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029750, (__n128)xmmword_1B0029760);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029770, (__n128)xmmword_1B0029780);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029790, (__n128)xmmword_1B00297A0);
  OUTLINED_FUNCTION_6_19((__n128)xmmword_1B00297B0, (__n128)xmmword_1B00297C0, v85, v86);
  v367 = v87;
  v368 = v88;
  v365 = xmmword_1B00297D0;
  v366 = xmmword_1B00297E0;
  v363 = xmmword_1B00297F0;
  v364 = xmmword_1B0029800;
  v361 = v87;
  v362 = v89;
  v359 = v87;
  v360 = v88;
  v357 = (__int128)v87;
  v358 = (__int128)v87;
  v355 = (__int128)v87;
  v356 = (__int128)v87;
  v353 = (__int128)v87;
  v354 = (__int128)v87;
  OUTLINED_FUNCTION_4_28();
  v206 = v90;
  OUTLINED_FUNCTION_10_34();
  v91 = OUTLINED_FUNCTION_11_18();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v92, v93, v94, v95, v96, v97, v98, v99, v91, v100, v101, v102, v103, v104, v105, v106, v406, &v404,
    v174,
    v179,
    v184,
    1065353216,
    v401,
    &v399,
    &v397,
    &v395,
    v206,
    v214,
    v222,
    v230,
    v238,
    v246,
    v254,
    v262,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v419 = xmmword_1B00296F0;
  v420 = xmmword_1B0029700;
  v417 = xmmword_1B0029710;
  v418 = xmmword_1B0029720;
  v413 = xmmword_1B0029730;
  v414 = xmmword_1B0029740;
  v402 = xmmword_1B0027D70;
  v403 = xmmword_1B0027D80;
  v397 = xmmword_1B0029750;
  v398 = xmmword_1B0029760;
  v395 = xmmword_1B0029770;
  v396 = xmmword_1B0029780;
  v393 = xmmword_1B0029790;
  v394 = xmmword_1B00297A0;
  v391 = xmmword_1B00297B0;
  v392 = xmmword_1B00297C0;
  v365 = xmmword_1B00297D0;
  v366 = xmmword_1B00297E0;
  v363 = xmmword_1B00297F0;
  v364 = xmmword_1B0029800;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_10_34();
  v107 = OUTLINED_FUNCTION_11_18();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v108, v109, v110, v111, v112, v113, v114, v115, v107, v116, v117, v118, v119, v120, v121, v122, v406, &v404,
    v175,
    v180,
    v185,
    1065353216,
    v401,
    &v399,
    v193,
    v199,
    v207,
    v215,
    v223,
    v231,
    v239,
    v247,
    v255,
    v263,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    v311,
    v317,
    v321,
    v325,
    v329,
    v333,
    v337,
    v345);
  v419 = xmmword_1B00295A0;
  v420 = xmmword_1B00295B0;
  v415 = xmmword_1B00295C0;
  v416 = xmmword_1B00295D0;
  v413 = xmmword_1B00295E0;
  v414 = xmmword_1B00295F0;
  v411 = xmmword_1B0029600;
  v407 = xmmword_1B0029610;
  v408 = xmmword_1B0029620;
  v404 = xmmword_1B0029630;
  v405 = xmmword_1B0026A00;
  v402 = xmmword_1B0026320;
  v403 = xmmword_1B0026330;
  v397 = xmmword_1B0029640;
  v398 = xmmword_1B0029650;
  v395 = xmmword_1B0029660;
  v396 = xmmword_1B0029670;
  v393 = xmmword_1B0029680;
  v394 = xmmword_1B0029690;
  v391 = xmmword_1B00296A0;
  v392 = xmmword_1B00296B0;
  v365 = xmmword_1B00296C0;
  v366 = xmmword_1B00296D0;
  v363 = xmmword_1B00296E0;
  v364 = xmmword_1B0026FC0;
  OUTLINED_FUNCTION_19_23();
  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_31_14();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_10_34();
  v123 = OUTLINED_FUNCTION_21_23();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v124, v125, v126, v127, v128, v129, v130, v131, v123, v349, 1400.0, v132, v133, v134, v69, v71, v406, &v404,
    v176,
    v181,
    v186,
    1065353216,
    v401,
    &v399,
    v194,
    v200,
    v208,
    v216,
    v224,
    v232,
    v240,
    v248,
    v256,
    v264,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v312,
    v318,
    v322,
    v326,
    v330,
    v334,
    v338,
    v346);
  v419 = xmmword_1B0029460;
  v420 = xmmword_1B0029470;
  OUTLINED_FUNCTION_19_23();
  v413 = xmmword_1B00294A0;
  v414 = xmmword_1B00294B0;
  v411 = xmmword_1B00294C0;
  v412 = xmmword_1B00294D0;
  v397 = xmmword_1B00294E0;
  v398 = xmmword_1B00294F0;
  v395 = xmmword_1B0029500;
  v396 = xmmword_1B0029510;
  v393 = xmmword_1B0029520;
  v394 = xmmword_1B0029530;
  v391 = xmmword_1B0029540;
  v392 = xmmword_1B0029550;
  v365 = xmmword_1B0029560;
  v366 = xmmword_1B0029570;
  v363 = xmmword_1B0029580;
  v364 = xmmword_1B0029590;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_3_24();
  v402 = v350;
  v403 = v350;
  memset(v401, 0, sizeof(v401));
  v399 = (__n128)v350;
  v400 = v351;
  v389 = (__n128)v350;
  v390 = xmmword_1B0025E90;
  v387 = (__n128)v350;
  v388 = (__n128)v350;
  v385 = (__n128)v350;
  v386 = xmmword_1B0025E90;
  v383 = (__n128)v350;
  v384 = v352;
  v381 = (__n128)v350;
  v382 = (__n128)v350;
  v379 = (__n128)v350;
  v380 = xmmword_1B0027770;
  v377 = (__n128)v350;
  v378 = (__n128)v350;
  v375 = (__n128)v350;
  v376 = (__n128)v350;
  v373 = (__n128)v350;
  v374 = (__n128)v350;
  v371 = (__n128)v350;
  v372 = (__n128)v350;
  v369 = (__n128)v350;
  v370 = v352;
  v367 = (__n128)v350;
  v368 = v351;
  v361 = (__n128)v350;
  v362 = v352;
  v359 = (__n128)v350;
  v360 = v351;
  v357 = v350;
  v358 = v350;
  v355 = v350;
  v356 = v350;
  v353 = v350;
  v354 = v350;
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_16_0(v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, 900.0, 150.0, v47, v145, v406, &v404, v177, v182, &v402,
    1067450368,
    v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v413 = xmmword_1B0029430;
  v414 = xmmword_1B0029440;
  v364 = xmmword_1B0029450;
  v363 = xmmword_1B0029410;
  v419 = xmmword_1B00292B0;
  v420 = xmmword_1B00292C0;
  v417 = xmmword_1B00292D0;
  v418 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  *(_QWORD *)&v146 = OUTLINED_FUNCTION_1_21().n128_u64[0];
  OUTLINED_FUNCTION_7_25(v146, v147, v148, v149);
  v313 = v150;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_16_0(v151, v152, v153, v154, v155, v156, v157, v158, -18.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, v159, v406, &v404, v178, v183, &v402,
    v187,
    v189,
    v191,
    v195,
    v201,
    v209,
    v217,
    v225,
    v233,
    v241,
    v249,
    v257,
    v265,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    v313,
    v319,
    v323,
    v327,
    v331,
    v335,
    v339,
    v347);
  v419 = xmmword_1B00292B0;
  v420 = xmmword_1B00292C0;
  v417 = xmmword_1B00292D0;
  v418 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  v413 = xmmword_1B00292F0;
  v414 = xmmword_1B0029300;
  OUTLINED_FUNCTION_1_21();
  v363 = xmmword_1B0029410;
  v364 = xmmword_1B0029420;
  OUTLINED_FUNCTION_7_25(1.0, v160, v161, v162);
  v314 = v163;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_16_0(v164, v165, v166, v167, v168, v169, v170, v171, -90.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, v172, v406, &v404, 0x3F4CCCCD3F4CCCCDLL, 0, &v402,
    v188,
    v190,
    v192,
    v196,
    v202,
    v210,
    v218,
    v226,
    v234,
    v242,
    v250,
    v258,
    v266,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    v314,
    v320,
    v324,
    v328,
    v332,
    v336,
    v340,
    v348);
  return v0;
}

void WindRectangularContentView.status.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WindRectangularContentView(0);
  sub_1AFAF2DFC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for WindRectangularContentView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE70A00);
}

void WindRectangularContentView.init(status:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for WindRectangularContentView(0);
  sub_1AFAF2984(a1, (uint64_t)a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
  OUTLINED_FUNCTION_0();
}

void WindRectangularContentView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  __int128 v48;
  uint64_t v49;

  v39 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70980);
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_9();
  v4 = v3 - v2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70988);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9();
  v38 = v7 - v6;
  v8 = type metadata accessor for WindRectangularContentView.Content(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  OUTLINED_FUNCTION_19_24();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_9();
  v18 = v17 - v16;
  v19 = OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v35 - v24;
  v26 = type metadata accessor for WindRectangularContentView(0);
  OUTLINED_FUNCTION_13_29(v1 + *(int *)(v26 + 20), v18);
  if (__swift_getEnumTagSinglePayload(v18, 2, v19))
  {
    sub_1AFAE2D74(v18, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationDataStatus);
    KeyPath = swift_getKeyPath();
    v28 = swift_getKeyPath();
    if (qword_1EEE70148 != -1)
      swift_once();
    v41 = (ValueMetadata *)KeyPath;
    LOBYTE(v42) = 0;
    v43 = v28;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v48 = xmmword_1EEE72F20;
    v49 = qword_1EEE72F30;
    v29 = sub_1AFBB4D50();
    sub_1B0007E28();
    sub_1AFACCD50(KeyPath, 0);
    sub_1AFBB4D8C(v28, 0, 0, 0, 0);
    v30 = v36;
    v31 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v38, v4, v40);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB7034((uint64_t)&unk_1EEE70998);
    v41 = &type metadata for WindRectangularContentView.Placeholder;
    v42 = v29;
    OUTLINED_FUNCTION_18_2();
    sub_1B0007918();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v4, v31);
  }
  else
  {
    OUTLINED_FUNCTION_14_16(v18, (uint64_t)v25);
    OUTLINED_FUNCTION_13_29((uint64_t)v25, (uint64_t)v22);
    *(_QWORD *)v11 = swift_getKeyPath();
    v11[8] = 0;
    *((_QWORD *)v11 + 2) = swift_getKeyPath();
    *((_QWORD *)v11 + 3) = 0;
    *((_QWORD *)v11 + 4) = 0;
    *((_QWORD *)v11 + 5) = 0;
    v11[48] = 0;
    OUTLINED_FUNCTION_14_16((uint64_t)v22, (uint64_t)&v11[*(int *)(v8 + 24)]);
    v32 = &v11[*(int *)(v8 + 28)];
    if (qword_1EEE70148 != -1)
      swift_once();
    v33 = qword_1EEE72F30;
    *(_OWORD *)v32 = xmmword_1EEE72F20;
    *((_QWORD *)v32 + 2) = v33;
    OUTLINED_FUNCTION_14_16((uint64_t)v11, (uint64_t)v14);
    OUTLINED_FUNCTION_13_29((uint64_t)v14, v38);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB7034((uint64_t)&unk_1EEE70998);
    v34 = sub_1AFBB4D50();
    v41 = &type metadata for WindRectangularContentView.Placeholder;
    v42 = v34;
    OUTLINED_FUNCTION_18_2();
    sub_1B0007918();
    sub_1AFAE2D74((uint64_t)v14, type metadata accessor for WindRectangularContentView.Content);
    sub_1AFAE2D74((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
  }
}

double sub_1AFBB1F70@<D0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  _BYTE v10[8];
  __int128 v11;
  uint64_t v12;
  _BYTE v13[8];
  _BYTE v14[16];

  v11 = *a1;
  v12 = *((_QWORD *)a1 + 2);
  sub_1AFAE8274((uint64_t)&v11, (uint64_t)v14, &qword_1EEE70B90);
  sub_1AFAE8274((uint64_t)&v12, (uint64_t)v13, &qword_1EEE70B98);
  v9 = *(__int128 *)((char *)a1 + 24);
  sub_1AFAE8274((uint64_t)&v9 + 8, (uint64_t)v10, &qword_1EEE70BA0);
  sub_1AFBB71B4((uint64_t)v14);
  sub_1AFBB71DC((uint64_t)v13);
  swift_retain();
  sub_1AFBB71DC((uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B38);
  sub_1AFBB6F34();
  sub_1AFBB6FB8();
  sub_1B0007918();
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  return result;
}

double sub_1AFBB20A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48) & 1;
  swift_retain();
  sub_1AFBB755C(v3, v4, v5);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C70);
  sub_1AFBB756C((uint64_t)&unk_1EEE70C78);
  sub_1B0007918();
  result = *(double *)&v7;
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(_BYTE *)(a2 + 64) = v11;
  return result;
}

uint64_t sub_1AFBB2198()
{
  return sub_1B0007E70();
}

void sub_1AFBB21B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  ValueMetadata *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  ValueMetadata *v57;
  unint64_t v58;
  unint64_t v59;

  v52 = a1;
  v2 = sub_1B00079D8();
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  MEMORY[0x1E0C80A78](v2);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1B0007A20();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BC0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BC8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BD0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BD8);
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BE0);
  MEMORY[0x1E0C80A78](v46);
  v47 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B000781C();
  v41 = type metadata accessor for WindRectangularContentView.Content(0);
  v17 = *(_QWORD *)(v1 + *(int *)(v41 + 28) + 8);
  *(_QWORD *)v8 = v16;
  *((_QWORD *)v8 + 1) = v17;
  v8[16] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BE8);
  sub_1AFBB2690(v1, (uint64_t)&v8[*(int *)(v18 + 44)]);
  v19 = sub_1AFBB3668();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  LOBYTE(v16) = sub_1B0007AD4();
  sub_1AFAF2558((uint64_t)v8, (uint64_t)v11, &qword_1EEE70BC0);
  v26 = &v11[*(int *)(v9 + 36)];
  *v26 = v16;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_1AFACE0DC((uint64_t)v8, &qword_1EEE70BC0);
  sub_1B0007A14();
  v51 = v1;
  v53 = v1;
  sub_1B00082E4();
  v27 = sub_1AFBB720C((uint64_t)&unk_1EEE70BF0);
  v36 = sub_1AFBB6E88();
  sub_1B0007EE8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v43);
  sub_1AFACE0DC((uint64_t)v11, &qword_1EEE70BC8);
  v28 = v44;
  sub_1B00079B4();
  v56 = v9;
  v57 = &type metadata for RectangularWidgetBackground;
  v58 = v27;
  v59 = v36;
  v29 = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = v39;
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v31);
  if (qword_1ED1EEE70 != -1)
    swift_once();
  v56 = qword_1ED1FEC08;
  v57 = (ValueMetadata *)unk_1ED1FEC10;
  v54 = v31;
  v55 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  v33 = (uint64_t)v47;
  v32 = v48;
  sub_1B0007EC4();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v32);
  sub_1AFB98050();
  v56 = v34;
  v57 = v35;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFACE0DC(v33, &qword_1EEE70BE0);
}

uint64_t sub_1AFBB2690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE v25[4];
  int v26;
  _BYTE *v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C08);
  MEMORY[0x1E0C80A78](v4);
  v27 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v25[-v7];
  v9 = type metadata accessor for WindRectangularContentView.Content(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v25[-v14];
  v26 = *(unsigned __int8 *)(a1 + *(int *)(v16 + 24));
  sub_1AFAF2DFC(a1, (uint64_t)&v25[-v14], type metadata accessor for WindRectangularContentView.Content);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v15, v18 + v17, type metadata accessor for WindRectangularContentView.Content);
  sub_1AFAF2DFC(a1, (uint64_t)v12, type metadata accessor for WindRectangularContentView.Content);
  v19 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v12, v19 + v17, type metadata accessor for WindRectangularContentView.Content);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v8 = sub_1B0007744();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C10);
  sub_1AFBB2E34(a1, (uint64_t)&v8[*(int *)(v21 + 44)]);
  v22 = v27;
  sub_1AFAF2558((uint64_t)v8, (uint64_t)v27, &qword_1EEE70C08);
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 9) = v26;
  *(_BYTE *)(a2 + 10) = 0;
  *(_QWORD *)(a2 + 16) = sub_1AFBB72BC;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = sub_1AFBB73BC;
  *(_QWORD *)(a2 + 48) = v19;
  *(_BYTE *)(a2 + 56) = 1;
  *(_QWORD *)(a2 + 64) = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C18);
  sub_1AFAF2558((uint64_t)v22, a2 + *(int *)(v23 + 48), &qword_1EEE70C08);
  sub_1AFACF5C4(KeyPath, 0);
  swift_retain();
  swift_retain();
  sub_1AFACE0DC((uint64_t)v8, &qword_1EEE70C08);
  sub_1AFACE0DC((uint64_t)v22, &qword_1EEE70C08);
  sub_1AFACCD50(KeyPath, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_1AFBB2918@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7E0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WindRectangularContentView.Content(0);
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v8 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B00275C0;
  type metadata accessor for WindComplicationViewModel();
  v10 = sub_1B00063DC();
  v12 = v11;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1AFAFB1D0();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  v13 = sub_1B00085A8();
  v15 = v14;
  swift_bridgeObjectRelease();
  v31 = v13;
  v32 = v15;
  sub_1AFAF9424();
  v16 = sub_1B0008BE4();
  v18 = v17;
  swift_bridgeObjectRelease();
  v31 = v16;
  v32 = v18;
  v19 = sub_1B0007D5C();
  v21 = v20;
  v23 = v22;
  LOBYTE(v18) = v24 & 1;
  v25 = *MEMORY[0x1E0CDDC08];
  v26 = sub_1B0007CFC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v7, v25, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v26);
  KeyPath = swift_getKeyPath();
  sub_1AFAF2558((uint64_t)v7, (uint64_t)v4 + *(int *)(v2 + 28), &qword_1ED1EE7F8);
  *v4 = KeyPath;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5C0);
  sub_1AFAF2558((uint64_t)v4, a1 + *(int *)(v28 + 36), &qword_1ED1EE7E0);
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 24) = v23;
  sub_1AFBB755C(v19, v21, v18);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC((uint64_t)v4, &qword_1ED1EE7E0);
  sub_1AFACE0DC((uint64_t)v7, &qword_1ED1EE7F8);
  sub_1AFAED640(v19, v21, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFBB2C48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  _QWORD v21[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7E0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WindRectangularContentView.Content(0);
  v21[0] = sub_1AFB98858();
  v21[1] = v8;
  sub_1AFAF9424();
  v9 = sub_1B0007D5C();
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = *MEMORY[0x1E0CDDC08];
  v17 = sub_1B0007CFC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v7, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v17);
  KeyPath = swift_getKeyPath();
  sub_1AFAF2558((uint64_t)v7, (uint64_t)v4 + *(int *)(v2 + 28), &qword_1ED1EE7F8);
  *v4 = KeyPath;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5C0);
  sub_1AFAF2558((uint64_t)v4, a1 + *(int *)(v19 + 36), &qword_1ED1EE7E0);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v13;
  sub_1AFBB755C(v9, v11, v15);
  swift_bridgeObjectRetain();
  sub_1AFACE0DC((uint64_t)v4, &qword_1ED1EE7E0);
  sub_1AFACE0DC((uint64_t)v7, &qword_1ED1EE7F8);
  sub_1AFAED640(v9, v11, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFBB2E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];

  v23[0] = a2;
  v3 = type metadata accessor for WindRectangularContentView.Content(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C20);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v23 - v11;
  v13 = a1 + *(int *)(v3 + 24);
  v23[1] = *(_QWORD *)(v13 + *(int *)(type metadata accessor for WindComplicationViewModel() + 40));
  sub_1AFAF2DFC(a1, (uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WindRectangularContentView.Content);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for WindRectangularContentView.Content);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B58);
  sub_1B00058FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C28);
  sub_1AFBB756C((uint64_t)&unk_1EEE70B68);
  sub_1AFBB756C((uint64_t)&unk_1EEE70C30);
  sub_1AFBB7034((uint64_t)&unk_1EEE70B78);
  sub_1B0008284();
  if (qword_1EEE70150 != -1)
    swift_once();
  v16 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v17 = qword_1EEE92170;
  v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v18(v9, v12, v6);
  v19 = v23[0];
  v18((char *)v23[0], v9, v6);
  v20 = (uint64_t *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C38) + 48));
  *v20 = v16;
  v20[1] = v17;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain_n();
  v21(v12, v6);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v21)(v9, v6);
}

uint64_t sub_1AFBB3114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;

  v32 = a1;
  v33 = a2;
  v37 = a3;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C40);
  MEMORY[0x1E0C80A78](v35);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BB0);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WindHourlyContentView();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BA8);
  MEMORY[0x1E0C80A78](v34);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C48);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v32 - v22;
  if (qword_1EEE70150 != -1)
    swift_once();
  v24 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v25 = qword_1EEE92170;
  sub_1AFAF2DFC(v32, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
  v9[*(int *)(v7 + 20)] = 0;
  swift_retain();
  sub_1B00082E4();
  sub_1AFF06110();
  sub_1AFAE2D74((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WindHourlyContentView);
  v26 = type metadata accessor for WindRectangularContentView.Content(0);
  if ((sub_1AFBB3578(v33 + *(int *)(v26 + 24)) & 1) != 0)
  {
    sub_1B0007FD8();
    v27 = sub_1B0008014();
    swift_release();
    sub_1AFAF2558((uint64_t)v11, (uint64_t)v6, &qword_1EEE70BA8);
    v28 = &v6[*(int *)(v36 + 36)];
    *(_QWORD *)v28 = v27;
    *(_OWORD *)(v28 + 8) = xmmword_1B0029820;
    *((_QWORD *)v28 + 3) = 0x4000000000000000;
    sub_1AFAF2558((uint64_t)v6, (uint64_t)v4, &qword_1EEE70BB0);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB744C();
    sub_1AFBB74B8();
    sub_1B0007918();
    sub_1AFACE0DC((uint64_t)v6, &qword_1EEE70BB0);
  }
  else
  {
    sub_1AFAF2558((uint64_t)v11, (uint64_t)v4, &qword_1EEE70BA8);
    swift_storeEnumTagMultiPayload();
    sub_1AFBB744C();
    sub_1AFBB74B8();
    sub_1B0007918();
  }
  sub_1AFAE8274((uint64_t)v17, (uint64_t)v20, &qword_1EEE70C48);
  sub_1AFACE0DC((uint64_t)v11, &qword_1EEE70BA8);
  sub_1AFAE8274((uint64_t)v20, (uint64_t)v23, &qword_1EEE70C48);
  sub_1AFAF2558((uint64_t)v23, (uint64_t)v14, &qword_1EEE70C48);
  v29 = v37;
  *v37 = v24;
  v29[1] = v25;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C68);
  sub_1AFAF2558((uint64_t)v14, (uint64_t)v29 + *(int *)(v30 + 48), &qword_1EEE70C48);
  swift_retain();
  sub_1AFACE0DC((uint64_t)v23, &qword_1EEE70C48);
  sub_1AFACE0DC((uint64_t)v14, &qword_1EEE70C48);
  return swift_release();
}

uint64_t sub_1AFBB3578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v13;

  v3 = type metadata accessor for WindRectangularContentView.Content(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + *(int *)(type metadata accessor for WindComplicationViewModel() + 24);
  v7 = *(double *)(v6 + *(int *)(type metadata accessor for WeatherConditionGradientModel() + 20));
  sub_1AFAF2DFC(v1, (uint64_t)v5, type metadata accessor for WindRectangularContentView.Content);
  if (v7 <= 0.0)
  {
    v11 = 0;
  }
  else
  {
    v8 = *(_QWORD *)v5;
    v9 = v5[8];
    sub_1AFACF5C4(*(_QWORD *)v5, v9);
    sub_1AFB4A850();
    v11 = v10;
    sub_1AFACCD50(v8, v9);
  }
  sub_1AFAE2D74((uint64_t)v5, type metadata accessor for WindRectangularContentView.Content);
  return v11 & 1;
}

double sub_1AFBB3668()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  double v5;
  __int128 v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  char v11;
  _BYTE v12[40];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1AFACF5C4(*(_QWORD *)v0, v2);
  sub_1AFB4A850();
  v4 = v3;
  sub_1AFACCD50(v1, v2);
  if ((v4 & 1) != 0)
  {
    v5 = *(double *)(v0 + *(int *)(type metadata accessor for WindRectangularContentView.Content(0) + 28) + 16);
    v11 = *(_BYTE *)(v0 + 48);
    v6 = *(_OWORD *)(v0 + 32);
    v9 = *(_OWORD *)(v0 + 16);
    v10 = v6;
    sub_1AFAE8274((uint64_t)&v9, (uint64_t)v12, &qword_1EEE70C00);
  }
  else
  {
    v7 = *(_OWORD *)(v0 + 32);
    v9 = *(_OWORD *)(v0 + 16);
    v10 = v7;
    v11 = *(_BYTE *)(v0 + 48);
    sub_1AFAE8274((uint64_t)&v9, (uint64_t)v12, &qword_1EEE70C00);
    v5 = 0.0;
  }
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  sub_1AFBB7288((uint64_t)v12);
  sub_1AFC33F20();
  sub_1AFBB7288((uint64_t)&v9);
  return v5;
}

uint64_t sub_1AFBB37C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for WindRectangularContentView.Content(0) + 24);
  v8 = type metadata accessor for WindComplicationViewModel();
  sub_1AFAF2DFC(v7 + *(int *)(v8 + 24), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  v9 = type metadata accessor for WeatherConditionGradientModel();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v9);
  result = RectangularWidgetBackground.init(model:)((uint64_t)v6, (uint64_t)&v12);
  v11 = v13;
  *(_QWORD *)a2 = v12;
  *(_BYTE *)(a2 + 8) = v11;
  return result;
}

void sub_1AFBB3898(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = MEMORY[0x1B5E015D8]();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  OUTLINED_FUNCTION_0();
}

void sub_1AFBB38C4(uint64_t a1@<X8>)
{
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[10];
  _QWORD __dst[10];

  v51 = a1;
  v48 = sub_1B00079D8();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v44 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1B0007A20();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70AE0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70AE8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70AF0);
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70AF8);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v39 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B00);
  MEMORY[0x1E0C80A78](v50);
  v45 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, v1, sizeof(__dst));
  v15 = sub_1B000781C();
  v16 = __dst[8];
  *(_QWORD *)v7 = v15;
  *((_QWORD *)v7 + 1) = v16;
  v7[16] = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B08);
  sub_1AFBB3EAC(__dst, (uint64_t)&v7[*(int *)(v17 + 44)]);
  memcpy(v54, __dst, sizeof(v54));
  v18 = sub_1AFBB48D4();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = sub_1B0007AD4();
  sub_1AFAF2558((uint64_t)v7, (uint64_t)v10, &qword_1EEE70AE0);
  v26 = &v10[*(int *)(v8 + 36)];
  *v26 = v25;
  *((double *)v26 + 1) = v18;
  *((_QWORD *)v26 + 2) = v20;
  *((_QWORD *)v26 + 3) = v22;
  *((_QWORD *)v26 + 4) = v24;
  v26[40] = 0;
  sub_1AFACE0DC((uint64_t)v7, &qword_1EEE70AE0);
  sub_1B0007A14();
  sub_1B00082E4();
  v27 = sub_1AFBB720C((uint64_t)&unk_1EEE70B10);
  v38 = sub_1AFBB6E88();
  v28 = v39;
  sub_1B0007EE8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v43);
  sub_1AFACE0DC((uint64_t)v10, &qword_1EEE70AE8);
  v29 = v44;
  sub_1B00079B4();
  v54[0] = v8;
  v54[1] = &type metadata for RectangularWidgetBackground;
  v54[2] = v27;
  v54[3] = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = v40;
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v48);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v31);
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  if (qword_1ED1EEE70 != -1)
    swift_once();
  v32 = qword_1ED1FEC08;
  v33 = unk_1ED1FEC10;
  swift_bridgeObjectRetain();
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v54[0] = v32;
  v54[1] = v33;
  v52 = v31;
  v53 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  v34 = (uint64_t)v45;
  v35 = v49;
  sub_1B0007EC4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v35);
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  if (qword_1EEE6FF98 != -1)
    swift_once();
  v36 = qword_1EEE91FF0;
  v37 = *(_QWORD *)algn_1EEE91FF8;
  swift_bridgeObjectRetain();
  sub_1AFBB6EC4((uint64_t)__dst, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v54[0] = v36;
  v54[1] = v37;
  sub_1B00074EC();
  swift_bridgeObjectRelease();
  sub_1AFACE0DC(v34, &qword_1EEE70B00);
}

uint64_t sub_1AFBB3EAC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v4 = sub_1B0005B84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B28);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v48 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B30);
  MEMORY[0x1E0C80A78](v11);
  v58 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  if ((a1[49] & 1) != 0)
  {
    v17 = v4;
    sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v18 = (id)qword_1ED1F4470;
    v19 = sub_1B00054B8();
    v21 = v20;

    v65 = v19;
    v66 = v21;
    sub_1AFAF9424();
    v22 = sub_1B0008BE4();
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
    if (qword_1ED1EE870 != -1)
      swift_once();
    v25 = qword_1ED1FEC00;
    KeyPath = swift_getKeyPath();
    *(_QWORD *)&v61 = v22;
    *((_QWORD *)&v61 + 1) = v24;
    *(_QWORD *)&v62 = 0;
    *((_QWORD *)&v62 + 1) = KeyPath;
    v63 = v25;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1AFBB1F70(&v61, (uint64_t)&v65);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v54 = v65;
    v53 = v66;
    v52 = v67;
    v51 = v68;
    v50 = v69;
    v16 = v70;
    v4 = v17;
  }
  else
  {
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    v64 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B38);
    sub_1AFBB6F34();
    sub_1AFBB6FB8();
    sub_1B0007918();
    v54 = v65;
    v53 = v66;
    v52 = v67;
    v51 = v68;
    v50 = v69;
    v16 = v70;
  }
  sub_1B0007FD8();
  v49 = sub_1B0008014();
  swift_release();
  *(_QWORD *)v15 = sub_1B0007744();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B50) + 44);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  sub_1B0005B78();
  sub_1AFBC32C8();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACCD50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB4D8C);
  v60 = v28;
  v29 = swift_allocObject();
  memcpy((void *)(v29 + 16), a1, 0x50uLL);
  sub_1AFBB6EC4((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1AFACF5C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AFBB61A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B58);
  sub_1B00058FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B60);
  sub_1AFBB756C((uint64_t)&unk_1EEE70B68);
  sub_1AFBB756C((uint64_t)&unk_1EEE70B70);
  sub_1AFBB7034((uint64_t)&unk_1EEE70B78);
  sub_1B0008284();
  if (qword_1EEE70150 != -1)
    swift_once();
  v30 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v31 = &v15[v48];
  v32 = qword_1EEE92170;
  v33 = v55;
  v34 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v35 = v56;
  v36 = v59;
  v37 = v57;
  v34(v56, v59, v57);
  v34(v31, v35, v37);
  v38 = (uint64_t *)&v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B80) + 48)];
  *v38 = v30;
  v38[1] = v32;
  v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  swift_retain_n();
  v39(v36, v37);
  swift_release();
  v39(v35, v37);
  v40 = v58;
  sub_1AFAF2558((uint64_t)v15, v58, &qword_1EEE70B30);
  v41 = v54;
  v42 = v53;
  *(_QWORD *)a2 = v54;
  *(_QWORD *)(a2 + 8) = v42;
  v43 = v52;
  v44 = v51;
  *(_QWORD *)(a2 + 16) = v52;
  *(_QWORD *)(a2 + 24) = v44;
  v45 = v50;
  *(_QWORD *)(a2 + 32) = v50;
  *(_BYTE *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v49;
  *(_OWORD *)(a2 + 56) = xmmword_1B0029820;
  *(_QWORD *)(a2 + 72) = 0x4000000000000000;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70B88);
  sub_1AFAF2558(v40, a2 + *(int *)(v46 + 48), &qword_1EEE70B30);
  sub_1AFBB7064(v41, v42, v43, v44, v45, v16);
  swift_retain();
  sub_1AFACE0DC((uint64_t)v15, &qword_1EEE70B30);
  sub_1AFACE0DC(v40, &qword_1EEE70B30);
  sub_1AFBB70CC(v41, v42, v43, v44, v45, v16);
  return swift_release();
}

uint64_t sub_1AFBB45FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;

  v6 = type metadata accessor for WindHourlyContentView();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BA8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BB0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  if (qword_1EEE70150 != -1)
    swift_once();
  v18 = qword_1EEE92168;
  if (qword_1EEE70158 != -1)
    swift_once();
  v19 = qword_1EEE92170;
  sub_1AFAF2DFC(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
  v8[*(int *)(v6 + 20)] = *(_BYTE *)(a2 + 49);
  swift_retain();
  sub_1B00082E4();
  sub_1AFF06110();
  sub_1AFAE2D74((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WindHourlyContentView);
  sub_1B0007FD8();
  v20 = sub_1B0008014();
  swift_release();
  sub_1AFAF2558((uint64_t)v11, (uint64_t)v14, &qword_1EEE70BA8);
  v21 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v21 = v20;
  *(_OWORD *)(v21 + 8) = xmmword_1B0029820;
  *((_QWORD *)v21 + 3) = 0x4000000000000000;
  sub_1AFACE0DC((uint64_t)v11, &qword_1EEE70BA8);
  sub_1AFAE8274((uint64_t)v14, (uint64_t)v17, &qword_1EEE70BB0);
  sub_1AFAF2558((uint64_t)v17, (uint64_t)v14, &qword_1EEE70BB0);
  *a3 = v18;
  a3[1] = v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70BB8);
  sub_1AFAF2558((uint64_t)v14, (uint64_t)a3 + *(int *)(v22 + 48), &qword_1EEE70BB0);
  swift_retain();
  sub_1AFACE0DC((uint64_t)v17, &qword_1EEE70BB0);
  sub_1AFACE0DC((uint64_t)v14, &qword_1EEE70BB0);
  return swift_release();
}

double sub_1AFBB48D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double v8;
  char v9;
  char v10;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 48);
  v8 = *(double *)(v0 + 72);
  sub_1AFACF5C4(*(_QWORD *)v0, v2);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFACF5C4(v1, v2);
  sub_1AFB4A850();
  v10 = v9;
  sub_1AFACCD50(v1, v2);
  sub_1AFACCD50(v1, v2);
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  if ((v10 & 1) == 0)
    v8 = 0.0;
  sub_1AFACF5C4(v1, v2);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFC33F20();
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  sub_1AFACCD50(v1, v2);
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  sub_1AFACF5C4(v1, v2);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFC33F20();
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  sub_1AFACCD50(v1, v2);
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  sub_1AFACF5C4(v1, v2);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFBB61A0(v3, v4, v5, v6, v7);
  sub_1AFC33F20();
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  sub_1AFACCD50(v1, v2);
  sub_1AFBB4D8C(v3, v4, v5, v6, v7);
  return v8;
}

uint64_t sub_1AFBB4B58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WeatherConditionGradientModel();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  result = RectangularWidgetBackground.init(model:)((uint64_t)v4, (uint64_t)&v8);
  v7 = v9;
  *(_QWORD *)a1 = v8;
  *(_BYTE *)(a1 + 8) = v7;
  return result;
}

void sub_1AFBB4BF0()
{
  sub_1B00075F4();
  OUTLINED_FUNCTION_0();
}

void sub_1AFBB4C0C()
{
  sub_1B00075F4();
  OUTLINED_FUNCTION_0();
}

void sub_1AFBB4C28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1B0007510();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4 - v3, a1);
  sub_1B0007600();
  OUTLINED_FUNCTION_9_0();
}

uint64_t type metadata accessor for WindRectangularContentView.Content(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE70AA0);
}

uint64_t sub_1AFBB4CAC()
{
  unsigned __int8 v1;

  sub_1B0007690();
  sub_1AFBB7034((uint64_t)&unk_1EEE70C80);
  sub_1B0007708();
  return v1;
}

void sub_1AFBB4D0C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_20_17() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFBB4D2C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_20_17() & 1;
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFBB4D50()
{
  unint64_t result;

  result = qword_1EEE70990;
  if (!qword_1EEE70990)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00299FC, &type metadata for WindRectangularContentView.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1EEE70990);
  }
  return result;
}

uint64_t sub_1AFBB4D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1AFBB4D98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for WindRectangularContentView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B0007510();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for WindComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 2, (uint64_t)v12))
    {
      v13 = type metadata accessor for WindComplicationDataStatus();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      v14 = v12[5];
      v15 = &v10[v14];
      v16 = &v11[v14];
      v17 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = v12[6];
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v23 = v22[5];
      v24 = &v19[v23];
      v25 = &v20[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v19[v22[6]] = v20[v22[6]];
      v19[v22[7]] = v20[v22[7]];
      *(_QWORD *)&v19[v22[8]] = *(_QWORD *)&v20[v22[8]];
      v19[v22[9]] = v20[v22[9]];
      v26 = v12[7];
      v27 = &v10[v26];
      v28 = &v11[v26];
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      v10[v12[8]] = v11[v12[8]];
      v30 = v12[9];
      v31 = &v10[v30];
      v32 = &v11[v30];
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      *(_QWORD *)&v10[v12[10]] = *(_QWORD *)&v11[v12[10]];
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 2, (uint64_t)v12);
    }
  }
  return a1;
}

uint64_t destroy for WindRectangularContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B0007510();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = (int *)type metadata accessor for WindComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(v5, 2, (uint64_t)v6);
  if (!(_DWORD)result)
  {
    v8 = v5 + v6[5];
    v9 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v5 + v6[6];
    v11 = sub_1B0005FB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v5 + v6[7];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v5 + v6[9];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for WindRectangularContentView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B0007510();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for WindComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 2, (uint64_t)v10))
  {
    v11 = type metadata accessor for WindComplicationDataStatus();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = v10[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = v10[6];
    v17 = &v8[v16];
    v18 = &v9[v16];
    v19 = sub_1B0005FB0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v21 = v20[5];
    v22 = &v17[v21];
    v23 = &v18[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v17[v20[6]] = v18[v20[6]];
    v17[v20[7]] = v18[v20[7]];
    *(_QWORD *)&v17[v20[8]] = *(_QWORD *)&v18[v20[8]];
    v17[v20[9]] = v18[v20[9]];
    v24 = v10[7];
    v25 = &v8[v24];
    v26 = &v9[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v8[v10[8]] = v9[v10[8]];
    v28 = v10[9];
    v29 = &v8[v28];
    v30 = &v9[v28];
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    *(_QWORD *)&v8[v10[10]] = *(_QWORD *)&v9[v10[10]];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 2, (uint64_t)v10);
  }
  return a1;
}

_QWORD *assignWithCopy for WindRectangularContentView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  char v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;

  if (a1 != a2)
  {
    sub_1AFACE0DC((uint64_t)a1, &qword_1ED1F0C78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B0007510();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for WindComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 2, (uint64_t)v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 2, (uint64_t)v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      *v8 = *v9;
      v36 = v10[5];
      v37 = &v8[v36];
      v38 = &v9[v36];
      v39 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
      v40 = v10[6];
      v41 = &v8[v40];
      v42 = &v9[v40];
      v43 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
      v44 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v45 = v44[5];
      v46 = &v41[v45];
      v47 = &v42[v45];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v47[8];
      v41[v44[6]] = v42[v44[6]];
      v41[v44[7]] = v42[v44[7]];
      *(_QWORD *)&v41[v44[8]] = *(_QWORD *)&v42[v44[8]];
      v41[v44[9]] = v42[v44[9]];
      v48 = v10[7];
      v49 = &v8[v48];
      v50 = &v9[v48];
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
      v8[v10[8]] = v9[v10[8]];
      v52 = v10[9];
      v53 = &v8[v52];
      v54 = &v9[v52];
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 24))(v53, v54, v55);
      *(_QWORD *)&v8[v10[10]] = *(_QWORD *)&v9[v10[10]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFAE2D74((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
    goto LABEL_11;
  }
  if (v12)
  {
LABEL_11:
    v34 = type metadata accessor for WindComplicationDataStatus();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  *v8 = *v9;
  v13 = v10[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v10[6];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v22 = v21[5];
  v23 = &v18[v22];
  v24 = &v19[v22];
  v25 = v24[8];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v25;
  v18[v21[6]] = v19[v21[6]];
  v18[v21[7]] = v19[v21[7]];
  *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
  v18[v21[9]] = v19[v21[9]];
  v26 = v10[7];
  v27 = &v8[v26];
  v28 = &v9[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v8[v10[8]] = v9[v10[8]];
  v30 = v10[9];
  v31 = &v8[v30];
  v32 = &v9[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  *(_QWORD *)&v8[v10[10]] = *(_QWORD *)&v9[v10[10]];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 2, (uint64_t)v10);
  return a1;
}

char *initializeWithTake for WindRectangularContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B0007510();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for WindComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 2, (uint64_t)v11))
  {
    v12 = type metadata accessor for WindComplicationDataStatus();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    v13 = v11[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v22 = v21[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v18[v21[6]] = v19[v21[6]];
    v18[v21[7]] = v19[v21[7]];
    *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
    v18[v21[9]] = v19[v21[9]];
    v25 = v11[7];
    v26 = &v9[v25];
    v27 = &v10[v25];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    v9[v11[8]] = v10[v11[8]];
    v29 = v11[9];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    *(_QWORD *)&v9[v11[10]] = *(_QWORD *)&v10[v11[10]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 2, (uint64_t)v11);
  }
  return a1;
}

char *assignWithTake for WindRectangularContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  if (a1 != a2)
  {
    sub_1AFACE0DC((uint64_t)a1, &qword_1ED1F0C78);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B0007510();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for WindComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 2, (uint64_t)v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 2, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      *v9 = *v10;
      v36 = v11[5];
      v37 = &v9[v36];
      v38 = &v10[v36];
      v39 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
      v40 = v11[6];
      v41 = &v9[v40];
      v42 = &v10[v40];
      v43 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
      v44 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v45 = v44[5];
      v46 = &v41[v45];
      v47 = &v42[v45];
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v47[8];
      v41[v44[6]] = v42[v44[6]];
      v41[v44[7]] = v42[v44[7]];
      *(_QWORD *)&v41[v44[8]] = *(_QWORD *)&v42[v44[8]];
      v41[v44[9]] = v42[v44[9]];
      v48 = v11[7];
      v49 = &v9[v48];
      v50 = &v10[v48];
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
      v9[v11[8]] = v10[v11[8]];
      v52 = v11[9];
      v53 = &v9[v52];
      v54 = &v10[v52];
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
      *(_QWORD *)&v9[v11[10]] = *(_QWORD *)&v10[v11[10]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFAE2D74((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationViewModel);
    goto LABEL_10;
  }
  if (v13)
  {
LABEL_10:
    v34 = type metadata accessor for WindComplicationDataStatus();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  *v9 = *v10;
  v14 = v11[5];
  v15 = &v9[v14];
  v16 = &v10[v14];
  v17 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v11[6];
  v19 = &v9[v18];
  v20 = &v10[v18];
  v21 = sub_1B0005FB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v23 = v22[5];
  v24 = &v19[v23];
  v25 = &v20[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v19[v22[6]] = v20[v22[6]];
  v19[v22[7]] = v20[v22[7]];
  *(_QWORD *)&v19[v22[8]] = *(_QWORD *)&v20[v22[8]];
  v19[v22[9]] = v20[v22[9]];
  v26 = v11[7];
  v27 = &v9[v26];
  v28 = &v10[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v9[v11[8]] = v10[v11[8]];
  v30 = v11[9];
  v31 = &v9[v30];
  v32 = &v10[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  *(_QWORD *)&v9[v11[10]] = *(_QWORD *)&v10[v11[10]];
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 2, (uint64_t)v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WindRectangularContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBB5D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_19_24();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_6_5(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for WindRectangularContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBB5D9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_19_24();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return OUTLINED_FUNCTION_5_4(v10, a2, a2, v9);
}

void sub_1AFBB5E04()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AFBB5E88();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WindComplicationDataStatus();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1AFBB5E88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1F01C0)
  {
    sub_1B0007510();
    v0 = sub_1B0007294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1F01C0);
  }
}

unint64_t sub_1AFBB5EE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE70A38;
  if (!qword_1EEE70A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEE70A40);
    sub_1AFBB7034((uint64_t)&unk_1EEE70998);
    v3 = v2;
    v4[2] = &type metadata for WindRectangularContentView.Placeholder;
    v4[3] = sub_1AFBB4D50();
    v4[0] = v3;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE70A38);
  }
  return result;
}

unint64_t sub_1AFBB5F84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v41 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v41 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_1AFACF5C4(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_BYTE *)(a2 + 48);
    sub_1AFBB61A0(v9, v10, v11, v12, v13);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 48) = v13;
    v14 = *(int *)(a3 + 24);
    v15 = a1 + v14;
    v16 = a2 + v14;
    *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
    v17 = (int *)type metadata accessor for WindComplicationViewModel();
    v18 = v17[5];
    v19 = v15 + v18;
    v20 = v16 + v18;
    v21 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v17[6];
    v23 = v15 + v22;
    v24 = v16 + v22;
    v25 = sub_1B0005FB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v27 = v26[5];
    v28 = v23 + v27;
    v29 = v24 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
    *(_BYTE *)(v23 + v26[6]) = *(_BYTE *)(v24 + v26[6]);
    *(_BYTE *)(v23 + v26[7]) = *(_BYTE *)(v24 + v26[7]);
    *(_QWORD *)(v23 + v26[8]) = *(_QWORD *)(v24 + v26[8]);
    *(_BYTE *)(v23 + v26[9]) = *(_BYTE *)(v24 + v26[9]);
    v30 = v17[7];
    v31 = v15 + v30;
    v32 = v16 + v30;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    *(_BYTE *)(v15 + v17[8]) = *(_BYTE *)(v16 + v17[8]);
    v34 = v17[9];
    v35 = v15 + v34;
    v36 = v16 + v34;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    *(_QWORD *)(v15 + v17[10]) = *(_QWORD *)(v16 + v17[10]);
    v38 = *(int *)(a3 + 28);
    v39 = a1 + v38;
    v40 = a2 + v38;
    *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AFBB61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1AFBB61AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AFACCD50(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1AFBB4D8C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for WindComplicationViewModel();
  v6 = v4 + v5[5];
  v7 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v5[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v4 + v5[9];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFBB62A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v16 = (int *)type metadata accessor for WindComplicationViewModel();
  v17 = v16[5];
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v16[6];
  v22 = v14 + v21;
  v23 = v15 + v21;
  v24 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v26 = v25[5];
  v27 = v22 + v26;
  v28 = v23 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_BYTE *)(v22 + v25[6]) = *(_BYTE *)(v23 + v25[6]);
  *(_BYTE *)(v22 + v25[7]) = *(_BYTE *)(v23 + v25[7]);
  *(_QWORD *)(v22 + v25[8]) = *(_QWORD *)(v23 + v25[8]);
  *(_BYTE *)(v22 + v25[9]) = *(_BYTE *)(v23 + v25[9]);
  v29 = v16[7];
  v30 = v14 + v29;
  v31 = v15 + v29;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  *(_BYTE *)(v14 + v16[8]) = *(_BYTE *)(v15 + v16[8]);
  v33 = v16[9];
  v34 = v14 + v33;
  v35 = v15 + v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  *(_QWORD *)(v14 + v16[10]) = *(_QWORD *)(v15 + v16[10]);
  v37 = *(int *)(a3 + 28);
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AFBB6494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v14;
  sub_1AFBB4D8C(v15, v16, v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v23 = (int *)type metadata accessor for WindComplicationViewModel();
  v24 = v23[5];
  v25 = v21 + v24;
  v26 = v22 + v24;
  v27 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v23[6];
  v29 = v21 + v28;
  v30 = v22 + v28;
  v31 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  v32 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v33 = v32[5];
  v34 = v29 + v33;
  v35 = v30 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_BYTE *)(v29 + v32[6]) = *(_BYTE *)(v30 + v32[6]);
  *(_BYTE *)(v29 + v32[7]) = *(_BYTE *)(v30 + v32[7]);
  *(_QWORD *)(v29 + v32[8]) = *(_QWORD *)(v30 + v32[8]);
  *(_BYTE *)(v29 + v32[9]) = *(_BYTE *)(v30 + v32[9]);
  v36 = v23[7];
  v37 = v21 + v36;
  v38 = v22 + v36;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  *(_BYTE *)(v21 + v23[8]) = *(_BYTE *)(v22 + v23[8]);
  v40 = v23[9];
  v41 = v21 + v40;
  v42 = v22 + v40;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  *(_QWORD *)(v21 + v23[10]) = *(_QWORD *)(v22 + v23[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = *(int *)(a3 + 28);
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  v45[2] = v46[2];
  return a1;
}

uint64_t sub_1AFBB66B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for WindComplicationViewModel();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v20 = v19[5];
  v21 = v16 + v20;
  v22 = v17 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_BYTE *)(v16 + v19[6]) = *(_BYTE *)(v17 + v19[6]);
  *(_BYTE *)(v16 + v19[7]) = *(_BYTE *)(v17 + v19[7]);
  *(_QWORD *)(v16 + v19[8]) = *(_QWORD *)(v17 + v19[8]);
  *(_BYTE *)(v16 + v19[9]) = *(_BYTE *)(v17 + v19[9]);
  v23 = v10[7];
  v24 = v8 + v23;
  v25 = v9 + v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  v27 = v10[9];
  v28 = v8 + v27;
  v29 = v9 + v27;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  *(_QWORD *)(v8 + v10[10]) = *(_QWORD *)(v9 + v10[10]);
  v31 = *(int *)(a3 + 28);
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  return a1;
}

uint64_t sub_1AFBB6874(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *((_BYTE *)a2 + 48);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  v16 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 48) = v10;
  sub_1AFBB4D8C(v11, v12, v13, v14, v15);
  v17 = *(int *)(a3 + 24);
  v18 = a1 + v17;
  v19 = (uint64_t)a2 + v17;
  *(_BYTE *)(a1 + v17) = *((_BYTE *)a2 + v17);
  v20 = (int *)type metadata accessor for WindComplicationViewModel();
  v21 = v20[5];
  v22 = v18 + v21;
  v23 = v19 + v21;
  v24 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v20[6];
  v26 = v18 + v25;
  v27 = v19 + v25;
  v28 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v30 = v29[5];
  v31 = v26 + v30;
  v32 = v27 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_BYTE *)(v26 + v29[6]) = *(_BYTE *)(v27 + v29[6]);
  *(_BYTE *)(v26 + v29[7]) = *(_BYTE *)(v27 + v29[7]);
  *(_QWORD *)(v26 + v29[8]) = *(_QWORD *)(v27 + v29[8]);
  *(_BYTE *)(v26 + v29[9]) = *(_BYTE *)(v27 + v29[9]);
  v33 = v20[7];
  v34 = v18 + v33;
  v35 = v19 + v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  *(_BYTE *)(v18 + v20[8]) = *(_BYTE *)(v19 + v20[8]);
  v37 = v20[9];
  v38 = v18 + v37;
  v39 = v19 + v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  *(_QWORD *)(v18 + v20[10]) = *(_QWORD *)(v19 + v20[10]);
  swift_bridgeObjectRelease();
  v41 = *(int *)(a3 + 28);
  v42 = a1 + v41;
  v43 = (uint64_t)a2 + v41;
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  return a1;
}

uint64_t sub_1AFBB6A58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBB6A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = OUTLINED_FUNCTION_19();
    return OUTLINED_FUNCTION_6_5(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AFBB6AC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFBB6AD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 8) = -(char)a2;
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_5_4(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t sub_1AFBB6B24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WindComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WindRectangularContentView.Placeholder(uint64_t a1)
{
  sub_1AFACCD50(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_1AFBB4D8C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for WindRectangularContentView.Placeholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for WindRectangularContentView.Placeholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1AFACCD50(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  sub_1AFBB4D8C(v13, v14, v15, v16, v17);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for WindRectangularContentView.Placeholder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1AFACCD50(v6, v7);
  v8 = *((_BYTE *)a2 + 48);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  v14 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 48) = v8;
  sub_1AFBB4D8C(v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  *(_QWORD *)(a1 + 72) = a2[9];
  return a1;
}

uint64_t getEnumTagSinglePayload for WindRectangularContentView.Placeholder(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WindRectangularContentView.Placeholder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WindRectangularContentView.Placeholder()
{
  return &type metadata for WindRectangularContentView.Placeholder;
}

uint64_t sub_1AFBB6E68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFBB6E78()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AFBB6E88()
{
  unint64_t result;

  result = qword_1EEE70B20;
  if (!qword_1EEE70B20)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for RectangularWidgetBackground, &type metadata for RectangularWidgetBackground);
    atomic_store(result, (unint64_t *)&qword_1EEE70B20);
  }
  return result;
}

uint64_t sub_1AFBB6EC4(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(unsigned __int8 *)(a1 + 48);
  a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  a3(v5, v6, v7, v8, v9);
  return a1;
}

unint64_t sub_1AFBB6F34()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE70B40;
  if (!qword_1EEE70B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70B38);
    v2 = sub_1AFBB6FB8();
    sub_1AFBB756C((uint64_t)&unk_1ED1EE7E8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE70B40);
  }
  return result;
}

unint64_t sub_1AFBB6FB8()
{
  unint64_t result;

  result = qword_1EEE70B48;
  if (!qword_1EEE70B48)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00362D8, &unk_1E608A618);
    atomic_store(result, (unint64_t *)&qword_1EEE70B48);
  }
  return result;
}

uint64_t sub_1AFBB6FF4()
{
  uint64_t v0;

  sub_1AFACCD50(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_1AFBB4D8C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1AFBB702C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AFBB45FC(a1, v2 + 16, a2);
}

void sub_1AFBB7034(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFBB7064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_1AFBB70CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

void sub_1AFBB7128()
{
  sub_1B0007678();
  OUTLINED_FUNCTION_0();
}

void sub_1AFBB7144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE7F8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  sub_1AFAF2558(a1, v4 - v3, &qword_1ED1EE7F8);
  sub_1B0007684();
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFBB71B4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AFBB71DC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1AFBB7204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFBB37C8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1AFBB720C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = OUTLINED_FUNCTION_17_5(a1);
  if (!result)
  {
    v5 = v4;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    sub_1AFBB756C(v5);
    v8[0] = v7;
    v8[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v6, v8);
    atomic_store(result, v1);
  }
  return result;
}

void sub_1AFBB7288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);

  v2 = OUTLINED_FUNCTION_17_5(a1);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFBB72BC()
{
  return sub_1AFBB73C8((uint64_t (*)(uint64_t))sub_1AFBB2918);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WindRectangularContentView.Content(0) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  sub_1AFACCD50(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_1AFBB4D8C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
  OUTLINED_FUNCTION_19();
  v3 = sub_1B0005B84();
  OUTLINED_FUNCTION_0_24(v3);
  v4 = sub_1B0005FB0();
  OUTLINED_FUNCTION_0_24(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  OUTLINED_FUNCTION_0_24(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  OUTLINED_FUNCTION_0_24(v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AFBB73BC()
{
  return sub_1AFBB73C8((uint64_t (*)(uint64_t))sub_1AFBB2C48);
}

uint64_t sub_1AFBB73C8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for WindRectangularContentView.Content(0);
  OUTLINED_FUNCTION_16_5();
  return a1(v1 + v2);
}

uint64_t sub_1AFBB740C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  type metadata accessor for WindRectangularContentView.Content(0);
  OUTLINED_FUNCTION_16_5();
  return sub_1AFBB3114(a1, v2 + v5, a2);
}

unint64_t sub_1AFBB744C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEE70C50;
  if (!qword_1EEE70C50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70BB0);
    v2[0] = sub_1AFBB74B8();
    v2[1] = MEMORY[0x1E0CD9100];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEE70C50);
  }
  return result;
}

unint64_t sub_1AFBB74B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE70C58;
  if (!qword_1EEE70C58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70BA8);
    sub_1AFBB7034((uint64_t)&unk_1EEE70C60);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE70C58);
  }
  return result;
}

void sub_1AFBB753C()
{
  sub_1B0007678();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFBB755C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

void sub_1AFBB756C(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFBB75A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_1EEE70C88;
  if (!qword_1EEE70C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70B00);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70AF0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70AE8);
    v5[4] = sub_1AFBB720C((uint64_t)&unk_1EEE70B10);
    v5[5] = sub_1AFBB6E88();
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)&qword_1ED1F1A18);
    v5[0] = OpaqueTypeConformance2;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE70C88);
  }
  return result;
}

unint64_t sub_1AFBB76B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_1EEE70C90;
  if (!qword_1EEE70C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70BE0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70BD0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70BC8);
    v5[4] = sub_1AFBB720C((uint64_t)&unk_1EEE70BF0);
    v5[5] = sub_1AFBB6E88();
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)&qword_1ED1F1A18);
    v5[0] = OpaqueTypeConformance2;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE70C90);
  }
  return result;
}

void sub_1AFBB77C8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_7();
  qword_1EEE92028 = v0;
  unk_1EEE92030 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBB7864()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1EEE92038 = v0;
  unk_1EEE92040 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBB790C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_7();
  qword_1EEE92048 = v0;
  qword_1EEE92050 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBB799C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  long double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1B0005A1C();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_9();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4168);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  v6 = v5 - v4;
  v7 = sub_1B0008F8C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_4_3();
  v12 = (id)qword_1ED1F4470;
  OUTLINED_FUNCTION_8_23();

  v13 = *(double *)(v0 + *(int *)(type metadata accessor for HumidityComplicationViewModel() + 28));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DED4F0], v7);
  Double.nearestMultiple(of:roundingRule:)(0.01, v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  sub_1B000595C();
  sub_1AFAF0DA8();
  sub_1B00055F0();
  sub_1AFB3A810((unint64_t *)&qword_1ED1F2610, &qword_1ED1F4168, MEMORY[0x1E0CAFAC8]);
  sub_1B0008458();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B00275C0;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1AFAFB1D0();
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  sub_1B00085A8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_16();
}

void sub_1AFBB7C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  long double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1B0005A1C();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_33();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4168);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_33();
  v51 = v4;
  v5 = sub_1B0008F8C();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33();
  v48 = v7;
  v55 = (int *)type metadata accessor for HumidityComplicationDailyViewModel();
  v8 = *((_QWORD *)v55 - 1);
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_9();
  v11 = v10 - v9;
  v12 = type metadata accessor for HumidityComplicationViewModel();
  sub_1AFC9309C(1, *(_QWORD *)(v0 + *(int *)(v12 + 32)));
  v16 = (v15 >> 1) - v14;
  if (__OFSUB__(v15 >> 1, v14))
    goto LABEL_22;
  if (v16)
  {
    v17 = v13;
    v18 = v14;
    v54 = v15 >> 1;
    v58 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AFBA8850();
    if (v16 < 0)
    {
LABEL_23:
      __break(1u);
      return;
    }
    v45 = *MEMORY[0x1E0DED4F0];
    v19 = v54;
    v46 = v17;
    v47 = v8;
    while (v18 < v19)
    {
      sub_1AFBB81B8(v17 + *(_QWORD *)(v8 + 72) * v18, v11);
      v20 = v11 + v55[6];
      if ((*(_BYTE *)(v20 + 8) & 1) != 0)
      {
        v21 = 0;
        v22 = 0xE000000000000000;
      }
      else
      {
        v23 = *(double *)v20;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104))(v48, v45, v50);
        Double.nearestMultiple(of:roundingRule:)(0.01, v23);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        sub_1B000595C();
        sub_1AFAF0DA8();
        sub_1B00055F0();
        sub_1AFB3A810((unint64_t *)&qword_1ED1F2610, &qword_1ED1F4168, MEMORY[0x1E0CAFAC8]);
        sub_1B0008458();
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
        if (qword_1EEE70140 != -1)
          swift_once();
        v24 = sub_1AFD376C4(v11 + v55[7], v11 + v55[8]);
        v26 = v25;
        if (qword_1ED1F46A8 != -1)
          swift_once();
        OUTLINED_FUNCTION_4_3();
        v27 = (id)qword_1ED1F4470;
        OUTLINED_FUNCTION_8_23();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v28 = OUTLINED_FUNCTION_13_20();
        *(_OWORD *)(v28 + 16) = xmmword_1B00275A0;
        v29 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
        v30 = sub_1AFAFB1D0();
        *(_QWORD *)(v28 + 32) = v56;
        *(_QWORD *)(v28 + 40) = v57;
        *(_QWORD *)(v28 + 96) = v29;
        *(_QWORD *)(v28 + 104) = v30;
        *(_QWORD *)(v28 + 64) = v30;
        *(_QWORD *)(v28 + 72) = v24;
        *(_QWORD *)(v28 + 80) = v26;
        v21 = sub_1B00085A8();
        v22 = v31;
        swift_bridgeObjectRelease();
        v17 = v46;
        v8 = v47;
      }
      sub_1AFBB81FC(v11);
      v32 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AFBA8850();
        v32 = v58;
      }
      v33 = *(_QWORD *)(v32 + 16);
      if (v33 >= *(_QWORD *)(v32 + 24) >> 1)
      {
        sub_1AFBA8850();
        v32 = v58;
      }
      *(_QWORD *)(v32 + 16) = v33 + 1;
      v34 = v32 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v21;
      *(_QWORD *)(v34 + 40) = v22;
      ++v18;
      v19 = v54;
      if (v54 == v18)
      {
        swift_unknownObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
LABEL_20:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD08);
  sub_1AFB3A810((unint64_t *)&qword_1ED1EFD10, &qword_1ED1EFD08, MEMORY[0x1E0DEAF20]);
  v35 = sub_1B0008500();
  v37 = v36;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v38 = OUTLINED_FUNCTION_13_20();
  *(_OWORD *)(v38 + 16) = xmmword_1B00275A0;
  sub_1AFBB799C();
  v40 = v39;
  v42 = v41;
  v43 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
  v44 = sub_1AFAFB1D0();
  *(_QWORD *)(v38 + 32) = v40;
  *(_QWORD *)(v38 + 40) = v42;
  *(_QWORD *)(v38 + 96) = v43;
  *(_QWORD *)(v38 + 104) = v44;
  *(_QWORD *)(v38 + 64) = v44;
  *(_QWORD *)(v38 + 72) = v35;
  *(_QWORD *)(v38 + 80) = v37;
  sub_1B00085A8();
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1AFBB81B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HumidityComplicationDailyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFBB81FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HumidityComplicationDailyViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t NextHourPrecipitationChartPlacement.hash(into:)()
{
  return sub_1B0009010();
}

BOOL static NextHourPrecipitationChartPlacement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL sub_1AFBB8278(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1AFBB8288()
{
  return sub_1B0009010();
}

uint64_t sub_1AFBB82AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69566C6961746564 && a2 == 0xEA00000000007765)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B0008FB0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AFBB83B0()
{
  return 2;
}

uint64_t sub_1AFBB83B8()
{
  sub_1B0009004();
  sub_1B0009010();
  return sub_1B0009040();
}

uint64_t sub_1AFBB83FC()
{
  return 0;
}

uint64_t sub_1AFBB8408(char a1)
{
  if ((a1 & 1) != 0)
    return 0x69566C6961746564;
  else
    return 0x6E656E6F706D6F63;
}

BOOL sub_1AFBB8448(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFBB8278(*a1, *a2);
}

uint64_t sub_1AFBB8454()
{
  return sub_1AFBB83B8();
}

uint64_t sub_1AFBB845C()
{
  return sub_1AFBB8288();
}

uint64_t sub_1AFBB8468()
{
  char *v0;

  return sub_1AFBB8408(*v0);
}

uint64_t sub_1AFBB8470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFBB82AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFBB8494()
{
  return sub_1AFBB83FC();
}

uint64_t sub_1AFBB84B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFBB83B0();
  *a1 = result;
  return result;
}

uint64_t sub_1AFBB84D4()
{
  sub_1AFBB87D4();
  return sub_1B0009118();
}

uint64_t sub_1AFBB84FC()
{
  sub_1AFBB87D4();
  return sub_1B0009124();
}

uint64_t sub_1AFBB8524()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AFBB8540()
{
  return 0;
}

uint64_t sub_1AFBB8550@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFBB8524();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AFBB8578()
{
  return sub_1AFBB83FC();
}

uint64_t sub_1AFBB8590@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_27_9();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AFBB85B8()
{
  sub_1AFBB884C();
  return sub_1B0009118();
}

uint64_t sub_1AFBB85E0()
{
  sub_1AFBB884C();
  return sub_1B0009124();
}

uint64_t sub_1AFBB8608()
{
  sub_1AFBB8810();
  return sub_1B0009118();
}

uint64_t sub_1AFBB8630()
{
  sub_1AFBB8810();
  return sub_1B0009124();
}

void NextHourPrecipitationChartPlacement.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C98);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CA0);
  v19 = *(_QWORD *)(v8 - 8);
  v20 = v8;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CA8);
  v23 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFBB87D4();
  sub_1B0009058();
  if ((v18 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_24();
    OUTLINED_FUNCTION_3_25();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v7, v22);
  }
  else
  {
    sub_1AFBB884C();
    OUTLINED_FUNCTION_3_25();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v20);
  }
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v13);
  OUTLINED_FUNCTION_4();
}

unint64_t sub_1AFBB87D4()
{
  unint64_t result;

  result = qword_1EEE70CB0;
  if (!qword_1EEE70CB0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029E00, &type metadata for NextHourPrecipitationChartPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70CB0);
  }
  return result;
}

unint64_t sub_1AFBB8810()
{
  unint64_t result;

  result = qword_1EEE70CB8;
  if (!qword_1EEE70CB8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029DB0, &type metadata for NextHourPrecipitationChartPlacement.DetailViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70CB8);
  }
  return result;
}

unint64_t sub_1AFBB884C()
{
  unint64_t result;

  result = qword_1EEE70CC0;
  if (!qword_1EEE70CC0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029D60, &type metadata for NextHourPrecipitationChartPlacement.ComponentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70CC0);
  }
  return result;
}

void NextHourPrecipitationChartPlacement.hashValue.getter()
{
  sub_1B0009004();
  OUTLINED_FUNCTION_7_2();
  sub_1B0009040();
  OUTLINED_FUNCTION_6_2();
}

void NextHourPrecipitationChartPlacement.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CC8);
  v35 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  v34 = v5 - v4;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CD0);
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CD8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_9();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFBB87D4();
  sub_1B000904C();
  if (v36)
    goto LABEL_9;
  v29 = v9;
  v30 = a1;
  v15 = sub_1B0008EF0();
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v10;
  if (!v16)
  {
    v24 = v14;
LABEL_8:
    v25 = sub_1B0008D58();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70CE0);
    *v27 = &type metadata for NextHourPrecipitationChartPlacement;
    sub_1B0008E78();
    sub_1B0008D4C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    OUTLINED_FUNCTION_2_17();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v17);
    a1 = v30;
LABEL_9:
    v28 = (uint64_t)a1;
    goto LABEL_10;
  }
  v18 = *(_BYTE *)(v15 + 32);
  sub_1AFBB8FA8(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    v24 = v14;
    v17 = v10;
    goto LABEL_8;
  }
  if ((v18 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_24();
    sub_1B0008E6C();
    v23 = a2;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v31);
  }
  else
  {
    sub_1AFBB884C();
    sub_1B0008E6C();
    v23 = a2;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v29, v32);
  }
  OUTLINED_FUNCTION_2_17();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  *v23 = v18;
  v28 = (uint64_t)v30;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1(v28);
  OUTLINED_FUNCTION_4();
}

void sub_1AFBB8C44()
{
  sub_1B0009004();
  OUTLINED_FUNCTION_7_2();
  sub_1B0009040();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFBB8C78(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  NextHourPrecipitationChartPlacement.init(from:)(a1, a2);
}

void sub_1AFBB8C8C(_QWORD *a1)
{
  NextHourPrecipitationChartPlacement.encode(to:)(a1);
}

unint64_t sub_1AFBB8CA4()
{
  unint64_t result;

  result = qword_1EEE70CE8;
  if (!qword_1EEE70CE8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for NextHourPrecipitationChartPlacement, &type metadata for NextHourPrecipitationChartPlacement);
    atomic_store(result, (unint64_t *)&qword_1EEE70CE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationChartPlacement()
{
  return &type metadata for NextHourPrecipitationChartPlacement;
}

uint64_t _s9WeatherUI35NextHourPrecipitationChartPlacementOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFBB8D44 + 4 * byte_1B0029AC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFBB8D78 + 4 * byte_1B0029AC0[v4]))();
}

uint64_t sub_1AFBB8D78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFBB8D80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFBB8D88);
  return result;
}

uint64_t sub_1AFBB8D94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFBB8D9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFBB8DA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFBB8DA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationChartPlacement.CodingKeys()
{
  return &type metadata for NextHourPrecipitationChartPlacement.CodingKeys;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationChartPlacement.ComponentCodingKeys()
{
  return &type metadata for NextHourPrecipitationChartPlacement.ComponentCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationChartPlacement.DetailViewCodingKeys()
{
  return &type metadata for NextHourPrecipitationChartPlacement.DetailViewCodingKeys;
}

unint64_t sub_1AFBB8DE8()
{
  unint64_t result;

  result = qword_1EEE70CF0;
  if (!qword_1EEE70CF0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029D38, &type metadata for NextHourPrecipitationChartPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70CF0);
  }
  return result;
}

unint64_t sub_1AFBB8E28()
{
  unint64_t result;

  result = qword_1EEE70CF8;
  if (!qword_1EEE70CF8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029C58, &type metadata for NextHourPrecipitationChartPlacement.ComponentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70CF8);
  }
  return result;
}

unint64_t sub_1AFBB8E68()
{
  unint64_t result;

  result = qword_1EEE70D00;
  if (!qword_1EEE70D00)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029C80, &type metadata for NextHourPrecipitationChartPlacement.ComponentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70D00);
  }
  return result;
}

unint64_t sub_1AFBB8EA8()
{
  unint64_t result;

  result = qword_1EEE70D08;
  if (!qword_1EEE70D08)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029C08, &type metadata for NextHourPrecipitationChartPlacement.DetailViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70D08);
  }
  return result;
}

unint64_t sub_1AFBB8EE8()
{
  unint64_t result;

  result = qword_1EEE70D10;
  if (!qword_1EEE70D10)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029C30, &type metadata for NextHourPrecipitationChartPlacement.DetailViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70D10);
  }
  return result;
}

unint64_t sub_1AFBB8F28()
{
  unint64_t result;

  result = qword_1EEE70D18;
  if (!qword_1EEE70D18)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029CA8, &type metadata for NextHourPrecipitationChartPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70D18);
  }
  return result;
}

unint64_t sub_1AFBB8F68()
{
  unint64_t result;

  result = qword_1EEE70D20;
  if (!qword_1EEE70D20)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0029CD0, &type metadata for NextHourPrecipitationChartPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE70D20);
  }
  return result;
}

uint64_t sub_1AFBB8FA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIViewController.addViewFillingChild(_:)(UIViewController_optional *a1)
{
  void *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  id v26;
  void *v27;
  id v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  UIViewController_optional *v42;
  id v43;
  id v44;
  id v45;

  if (a1)
  {
    v42 = a1;
    v2 = objc_msgSend(v1, sel_addChildViewController_, v42);
    v10 = OUTLINED_FUNCTION_1_22(v2, v3, v4, v5, v6, v7, v8, v9, v39, v42);
    if (v10)
    {
      v11 = v10;
      v12 = OUTLINED_FUNCTION_3_26();
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v12, sel_bounds);
        v15 = v14;
        v17 = v16;

        objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, v15, v17);
        v26 = OUTLINED_FUNCTION_1_22(v18, v19, v20, v21, v22, v23, v24, v25, v40, v43);
        if (v26)
        {
          v27 = v26;
          objc_msgSend(v26, sel_setAutoresizingMask_, 18);

          v28 = OUTLINED_FUNCTION_3_26();
          if (v28)
          {
            v36 = v28;
            v37 = OUTLINED_FUNCTION_1_22((int)v28, v29, v30, v31, v32, v33, v34, v35, v41, v44);
            if (v37)
            {
              v38 = v37;
              objc_msgSend(v36, sel_addSubview_, v37);

              objc_msgSend(v45, sel_didMoveToParentViewController_, v1);
              return;
            }
            goto LABEL_13;
          }
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          return;
        }
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

Swift::Void __swiftcall UIViewController.removeFromParentAndSuperview()()
{
  void *v0;
  id v1;
  void *v2;

  objc_msgSend(v0, sel_willMoveToParentViewController_, 0);
  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_removeFromSuperview);

    objc_msgSend(v0, sel_removeFromParentViewController);
  }
  else
  {
    __break(1u);
  }
}

void sub_1AFBB9208()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 6;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 10;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB000000004D202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF4D656C676E6953;
  v25 = 15;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBB9A4C();
  sub_1AFBB9A4C();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E4CCCCD3E051EB8;
  *(_QWORD *)&v12 = 0x4396000041900000;
  LODWORD(v10) = 1091567616;
  DWORD2(v9) = 1128792064;
  *(_QWORD *)&v9 = 0x41F00000413B04ADLL;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1137180672;
  sub_1AFB471E4((uint64_t)&v36, 48, 0, 2000, 133, 10, 1, 4, 0, 0x42400000C20C0000, 0x42B4000040400000, v6, 0x3E8000003E3851EBLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB12ED63F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E8F5C293E23D70ALL,
    1091994787,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1088421888,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBB9A4C()
{
  uint64_t v0;
  __n128 v7;
  __int128 v8;
  double v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  float v23;
  __n128 v24;
  double v25;
  __n128 v26;
  __n128 v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  double v36;
  __n128 v37;
  float v38;
  __n128 v39;
  __int128 v40;
  __n128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  unsigned int v45;
  __n128 *v46;
  uint64_t v47;
  float v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  double v57;
  __n128 v58;
  float v59;
  float v60;
  __n128 v61;
  __n128 v62;
  double v63;
  __n128 v64;
  double v65;
  __n128 v66;
  __int128 v67;
  __int128 v68;
  double v69;
  __n128 v70;
  __n128 *v71;
  double v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  uint64_t v80;
  __n128 v81;
  float v82;
  float v83;
  float v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  __int128 v88;
  double v89;
  __n128 v90;
  __n128 v91;
  __int128 v92;
  double v93;
  __n128 v94;
  double v95;
  __n128 v96;
  __int128 v97;
  __int128 v98;
  __n128 v99;
  double v100;
  __n128 v101;
  double v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  uint64_t v110;
  __n128 v111;
  float v112;
  float v113;
  float v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  __int128 v118;
  __int128 v119;
  __n128 v120;
  __int128 v121;
  double v122;
  __n128 v123;
  double v124;
  __n128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __n128 v129;
  __n128 v130;
  double v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  uint64_t v139;
  float v140;
  float v141;
  float v142;
  _OWORD *v143;
  double v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  uint64_t v152;
  float v153;
  float v154;
  float v155;
  __n128 v156;
  __int128 v157;
  double v159;
  __n128 v160;
  __int128 v161;
  __int128 v162;
  double v163;
  __n128 v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  double v173;
  float v174;
  float v175;
  __n128 v176;
  __int128 v177;
  double v178;
  __n128 v179;
  double v180;
  __int128 v181;
  __n128 v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  uint64_t v192;
  double v193;
  __n128 v194;
  float v195;
  double v196;
  __n128 v197;
  __n128 v198;
  __int128 v199;
  double v200;
  double v201;
  __n128 v202;
  uint64_t v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  uint64_t v211;
  float v212;
  uint64_t v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  int v301;
  int v302;
  int v303;
  int v304;
  _OWORD *v305;
  _OWORD *v306;
  uint64_t v307;
  uint64_t v308;
  __n128 v309;
  __n128 v310;
  __n128 v311;
  __n128 v312;
  __n128 v313;
  __n128 v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  __n128 v319;
  __n128 v320;
  __n128 v321;
  __n128 v322;
  __n128 v323;
  __n128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __n128 v341;
  __n128 v342;
  __n128 v343;
  __n128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __n128 v361;
  __n128 v362;
  __n128 v363;
  __n128 v364;
  __int128 v365;
  __int128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __int128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __n128 v374;
  __n128 v375;
  __int128 v376;
  __n128 v377;
  __n128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v383 = xmmword_1B0029EC0;
  v384 = xmmword_1B0029ED0;
  v381 = xmmword_1B0027F40;
  v382 = xmmword_1B0027F50;
  v379 = xmmword_1B0027F60;
  v380 = xmmword_1B0027F70;
  __asm { FMOV            V2.2D, #1.0 }
  v377 = _Q2;
  v378 = _Q2;
  v375 = _Q2;
  OUTLINED_FUNCTION_29_21((__n128)xmmword_1B0025E50, 0.689999998, _Q2);
  __asm { FMOV            V0.2D, #0.5 }
  v312 = _Q0;
  OUTLINED_FUNCTION_13_30(_Q0, (__n128)xmmword_1B0027FB0, v7);
  v359 = xmmword_1B0029EE0;
  v360 = xmmword_1B0029EF0;
  OUTLINED_FUNCTION_31_6((__n128)xmmword_1B0029F00, (__n128)xmmword_1B0029F10);
  v355 = xmmword_1B0029F20;
  v356 = xmmword_1B0029F30;
  v353 = xmmword_1B0029F40;
  v354 = xmmword_1B0029F50;
  v351 = xmmword_1B0029F60;
  v352 = xmmword_1B0029F70;
  v349 = xmmword_1B0029F80;
  v350 = xmmword_1B0029F90;
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B0029FA0, (__n128)xmmword_1B0029FB0);
  v345 = v8;
  OUTLINED_FUNCTION_14_17((__n128)xmmword_1B0029FC0, v9, v10);
  v339 = xmmword_1B0029FD0;
  v340 = xmmword_1B0029FE0;
  v337 = xmmword_1B0029FF0;
  v338 = xmmword_1B002A000;
  v335 = xmmword_1B002A010;
  v336 = xmmword_1B0025E90;
  v333 = xmmword_1B002A020;
  v334 = xmmword_1B002A030;
  v331 = xmmword_1B002A010;
  v332 = xmmword_1B0025E90;
  v329 = xmmword_1B002A040;
  v330 = xmmword_1B002A050;
  v327 = xmmword_1B002A060;
  v328 = xmmword_1B002A070;
  v325 = xmmword_1B002A080;
  v326 = xmmword_1B002A090;
  v314 = v11;
  OUTLINED_FUNCTION_12_24(1.0, 0.902988076, v11);
  v307 = v12;
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_8_6(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 200.0, v23, 0.1, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v365,
    0,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    v307);
  v383 = xmmword_1B0029EC0;
  v384 = xmmword_1B0029ED0;
  v381 = xmmword_1B0027F40;
  v382 = xmmword_1B0027F50;
  v379 = xmmword_1B0027F60;
  v380 = xmmword_1B0027F70;
  OUTLINED_FUNCTION_2_18();
  v369 = v312;
  OUTLINED_FUNCTION_5_25((__n128)xmmword_1B0027FB0, v24);
  OUTLINED_FUNCTION_3_27();
  v349 = xmmword_1B0029F80;
  v350 = xmmword_1B0029F90;
  v347 = xmmword_1B0029FA0;
  v348 = xmmword_1B0029FB0;
  v345 = xmmword_1B0029F80;
  v346 = xmmword_1B0029FC0;
  OUTLINED_FUNCTION_11_31(0.99987489, 0.99026376, v25, v26);
  v335 = xmmword_1B002A010;
  v336 = xmmword_1B0025E90;
  v333 = xmmword_1B002A020;
  v334 = xmmword_1B002A030;
  v331 = xmmword_1B002A010;
  v332 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_10_35();
  v323 = v27;
  v324 = v27;
  v321 = v27;
  v322 = v27;
  v319 = v27;
  v320 = v27;
  v317 = v27;
  v318 = v27;
  v315 = v27;
  v316 = v27;
  OUTLINED_FUNCTION_21_24();
  OUTLINED_FUNCTION_8_6(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, 200.0, v38, 0.1, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v365,
    0,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  v383 = xmmword_1B002A0B0;
  v384 = xmmword_1B002A0C0;
  v381 = xmmword_1B002A0D0;
  v382 = xmmword_1B0028100;
  v379 = xmmword_1B00276E0;
  v380 = xmmword_1B0026110;
  v377 = v314;
  v378 = v314;
  v375 = v314;
  OUTLINED_FUNCTION_29_21((__n128)xmmword_1B0025E50, 0.403921604, v314);
  v311 = (__n128)vdupq_n_s64(0x3FE0ECE8A0000000uLL);
  OUTLINED_FUNCTION_13_30(v311, (__n128)xmmword_1B0028120, v39);
  v359 = xmmword_1B002A0E0;
  v360 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_31_6((__n128)xmmword_1B002A0F0, (__n128)xmmword_1B002A100);
  v355 = xmmword_1B002A110;
  v356 = v40;
  v353 = xmmword_1B002A120;
  v354 = xmmword_1B002A130;
  v351 = xmmword_1B0026220;
  v352 = xmmword_1B00277A0;
  v349 = xmmword_1B0026220;
  v350 = xmmword_1B0026120;
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B002A140, (__n128)xmmword_1B002A150);
  v345 = xmmword_1B0029F80;
  v346 = xmmword_1B002A160;
  v343 = v41;
  v344 = v41;
  v341 = v41;
  v342 = v41;
  v339 = xmmword_1B002A170;
  v340 = xmmword_1B002A180;
  v337 = xmmword_1B002A190;
  v338 = xmmword_1B002A1A0;
  v335 = xmmword_1B002A040;
  v336 = v42;
  v333 = xmmword_1B002A1B0;
  v334 = xmmword_1B002A1C0;
  v331 = xmmword_1B002A1D0;
  v332 = v42;
  v329 = xmmword_1B002A040;
  v330 = xmmword_1B002A050;
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A1E0, (__n128)xmmword_1B002A1F0);
  v325 = v43;
  v326 = xmmword_1B002A200;
  v323 = v44;
  v324 = v44;
  v321 = v44;
  v322 = v44;
  v319 = v44;
  v320 = v44;
  v317 = v44;
  v318 = v44;
  v315 = v44;
  v316 = v44;
  OUTLINED_FUNCTION_0_25();
  OUTLINED_FUNCTION_28_11();
  v214 = v45 | 0x3F4CCCCD00000000;
  v310 = v46[22];
  v48 = *(float *)(v47 + 2636);
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_8_6(v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, 350.0, v59, v48, v60, &v369, &v367, v214, 1061997773, &v365,
    0,
    &v363,
    &v361,
    v219,
    v224,
    v227,
    v232,
    v237,
    v242,
    v247,
    v252,
    v257,
    v262,
    v267,
    v272,
    v277,
    v282,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  v383 = xmmword_1B002A210;
  v384 = (__int128)v314;
  v381 = xmmword_1B0028190;
  v382 = xmmword_1B0028210;
  OUTLINED_FUNCTION_32_0();
  v377 = v61;
  v378 = v61;
  v375 = v61;
  v376 = xmmword_1B0025E50;
  v373 = v61;
  v374 = v61;
  v371 = v61;
  v372 = v61;
  v369 = v61;
  v370 = xmmword_1B0027740;
  v367 = v61;
  v368 = v61;
  v365 = xmmword_1B0026320;
  v366 = xmmword_1B0026330;
  v363 = v61;
  v364 = v61;
  v361 = v61;
  v362 = v61;
  OUTLINED_FUNCTION_16_25();
  v357 = xmmword_1B002A220;
  v358 = xmmword_1B002A230;
  OUTLINED_FUNCTION_25_9(0.819462717, v62);
  v353 = xmmword_1B002A240;
  v354 = xmmword_1B002A250;
  OUTLINED_FUNCTION_30_12((__n128)xmmword_1B0025E80, 0.899999976, v63, v64);
  v347 = xmmword_1B0026220;
  v348 = xmmword_1B002A260;
  v345 = xmmword_1B0026220;
  v346 = xmmword_1B0026120;
  OUTLINED_FUNCTION_19_16(1.0, v65, 1.0, v66);
  v339 = xmmword_1B002A270;
  v340 = xmmword_1B002A280;
  v337 = xmmword_1B002A290;
  v338 = xmmword_1B002A2A0;
  v335 = xmmword_1B002A2B0;
  v336 = v67;
  v333 = xmmword_1B002A2C0;
  v334 = v68;
  v331 = xmmword_1B002A040;
  v332 = v67;
  OUTLINED_FUNCTION_18_32((__n128)xmmword_1B002A040);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A2D0, (__n128)xmmword_1B002A2E0);
  v325 = xmmword_1B0029F80;
  v326 = xmmword_1B002A2F0;
  OUTLINED_FUNCTION_4_29(0.999896884, 0.99987489, v69, v70);
  OUTLINED_FUNCTION_0_25();
  OUTLINED_FUNCTION_15_12();
  v309 = v71[32];
  v72 = OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_8_6(v73, v74, v75, v76, v77, v78, v79, v80, v72, v81, 900.0, v82, v83, v84, &v369, &v367, 0x3F6666663F666666, 0, &v365,
    0,
    &v363,
    &v361,
    v220,
    v225,
    v228,
    v233,
    v238,
    v243,
    v248,
    v253,
    v258,
    v263,
    v268,
    v273,
    v278,
    v283,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  v383 = (__int128)v314;
  v384 = (__int128)v314;
  OUTLINED_FUNCTION_17_23();
  v379 = xmmword_1B0028220;
  v380 = xmmword_1B0028230;
  OUTLINED_FUNCTION_6_20(0.999904573, v85);
  v365 = xmmword_1B0027D70;
  v366 = xmmword_1B0027D80;
  v363 = v86;
  v364 = v86;
  v361 = v86;
  v362 = v86;
  OUTLINED_FUNCTION_16_25();
  v357 = xmmword_1B002A300;
  v358 = xmmword_1B0028110;
  OUTLINED_FUNCTION_25_9(0.869406462, v87);
  v353 = xmmword_1B002A310;
  v354 = v88;
  OUTLINED_FUNCTION_30_12((__n128)xmmword_1B0025E80, v89, *(double *)&v88, v90);
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B0026220, v91);
  v345 = v92;
  v346 = xmmword_1B002A320;
  OUTLINED_FUNCTION_19_16(*(double *)&v92, v93, 1.0, v94);
  OUTLINED_FUNCTION_34_9(v95, v96);
  v338 = v97;
  v335 = xmmword_1B002A2B0;
  v336 = v98;
  v333 = xmmword_1B002A040;
  v334 = xmmword_1B0027840;
  v331 = xmmword_1B002A040;
  v332 = v98;
  OUTLINED_FUNCTION_18_32((__n128)xmmword_1B002A040);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A330, v99);
  v325 = xmmword_1B002A340;
  v326 = xmmword_1B002A350;
  OUTLINED_FUNCTION_4_29(0.999901831, 0.999879897, v100, v101);
  OUTLINED_FUNCTION_0_25();
  v102 = OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_8_6(v103, v104, v105, v106, v107, v108, v109, v110, v102, v111, 1000.0, v112, v113, v114, &v369, &v367, 0x3F6666663F666666, 0, &v365,
    0,
    &v363,
    &v361,
    v221,
    v226,
    v229,
    v234,
    v239,
    v244,
    v249,
    v254,
    v259,
    v264,
    v269,
    v274,
    v279,
    v284,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  v383 = (__int128)v314;
  v384 = (__int128)v314;
  OUTLINED_FUNCTION_17_23();
  v379 = xmmword_1B0028220;
  v380 = xmmword_1B0028230;
  OUTLINED_FUNCTION_6_20(0.99988085, v115);
  v365 = xmmword_1B0027D70;
  v366 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_26_23(0.9627316, v116);
  OUTLINED_FUNCTION_16_25();
  v357 = xmmword_1B002A300;
  v358 = xmmword_1B0028110;
  OUTLINED_FUNCTION_25_9(0.869406462, v117);
  v353 = xmmword_1B002A310;
  v354 = v118;
  v351 = xmmword_1B0025E80;
  v352 = v119;
  v349 = xmmword_1B0025E80;
  v350 = v119;
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B0026220, v120);
  v345 = v121;
  OUTLINED_FUNCTION_14_17((__n128)xmmword_1B002A320, v122, v123);
  OUTLINED_FUNCTION_34_9(v124, v125);
  v338 = v126;
  v335 = xmmword_1B002A2B0;
  v336 = v127;
  v333 = xmmword_1B002A040;
  v334 = v128;
  v331 = xmmword_1B002A040;
  v332 = v127;
  OUTLINED_FUNCTION_18_32((__n128)xmmword_1B002A040);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A330, v129);
  v325 = xmmword_1B002A340;
  v326 = xmmword_1B002A350;
  v323 = v130;
  v324 = v130;
  v321 = v130;
  v322 = v130;
  v319 = v130;
  v320 = v130;
  v317 = v130;
  v318 = v130;
  v315 = v130;
  v316 = v130;
  OUTLINED_FUNCTION_15_12();
  v131 = OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_7_3(v132, v133, v134, v135, v136, v137, v138, v139, v131, (__n128)xmmword_1B0028270, 1000.0, v140, v141, v142, &v369, &v367, 0x3F6666663F666666, 0, &v365,
    0,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  OUTLINED_FUNCTION_17_23();
  v370 = xmmword_1B0027740;
  v365 = xmmword_1B0026320;
  v366 = xmmword_1B0026330;
  v357 = xmmword_1B002A220;
  v358 = xmmword_1B002A230;
  v351 = xmmword_1B0025E80;
  v349 = xmmword_1B0025E80;
  v348 = xmmword_1B002A260;
  v347 = xmmword_1B0026220;
  v345 = xmmword_1B0026220;
  v346 = xmmword_1B0026120;
  v339 = xmmword_1B002A270;
  v340 = xmmword_1B002A280;
  v337 = xmmword_1B002A290;
  v338 = xmmword_1B002A2A0;
  v335 = xmmword_1B002A2B0;
  v333 = xmmword_1B002A2C0;
  v353 = xmmword_1B002A240;
  v354 = xmmword_1B002A250;
  v334 = xmmword_1B002A250;
  v327 = xmmword_1B002A2D0;
  v328 = xmmword_1B002A2E0;
  v326 = xmmword_1B002A2F0;
  v383 = xmmword_1B002A210;
  v369 = v314;
  v325 = xmmword_1B0029F80;
  v384 = (__int128)v314;
  v379 = xmmword_1B00276E0;
  v380 = xmmword_1B0026110;
  v377 = v314;
  v378 = v314;
  v375 = v314;
  v376 = xmmword_1B0025E50;
  v373 = v314;
  v374 = v314;
  v371 = v314;
  v372 = v314;
  v367 = v314;
  v368 = v314;
  v363 = v314;
  v364 = v314;
  v361 = v314;
  v362 = v314;
  v359 = xmmword_1B002A0E0;
  v360 = xmmword_1B0025E90;
  v355 = xmmword_1B002A110;
  v356 = xmmword_1B0025E90;
  v352 = (__int128)v314;
  v350 = (__int128)v314;
  v343 = v314;
  v344 = v314;
  v341 = v314;
  v342 = v314;
  v336 = xmmword_1B0025E90;
  v331 = xmmword_1B002A040;
  v332 = xmmword_1B0025E90;
  v329 = xmmword_1B002A040;
  v330 = xmmword_1B002A050;
  v323 = v314;
  v324 = v314;
  v321 = v314;
  v322 = v314;
  v319 = v314;
  v320 = v314;
  v317 = v314;
  v318 = v314;
  v315 = v314;
  v316 = v314;
  OUTLINED_FUNCTION_1_23();
  v230 = v143;
  OUTLINED_FUNCTION_33_15();
  OUTLINED_FUNCTION_15_12();
  v144 = OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_7_3(v145, v146, v147, v148, v149, v150, v151, v152, v144, v309, 900.0, v153, v154, v155, &v369, &v367, 0x3F6666663F666666, 0, &v365,
    0,
    v215,
    v217,
    v222,
    &v357,
    v230,
    v235,
    v240,
    v245,
    v250,
    v255,
    v260,
    v265,
    v270,
    v275,
    v280,
    v285,
    v287,
    v289,
    v291,
    v293,
    v295,
    v297,
    v299,
    v301,
    v303,
    v305,
    (uint64_t)&v315);
  v383 = xmmword_1B002A0B0;
  v384 = xmmword_1B002A0C0;
  v381 = xmmword_1B002A0D0;
  v382 = xmmword_1B0028100;
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_2_18();
  v369 = v311;
  OUTLINED_FUNCTION_5_25((__n128)xmmword_1B0028120, v156);
  v359 = xmmword_1B002A0E0;
  v360 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_31_6((__n128)xmmword_1B002A360, (__n128)xmmword_1B002A370);
  v355 = xmmword_1B002A110;
  v356 = v157;
  v353 = xmmword_1B002A120;
  v354 = xmmword_1B002A130;
  v351 = xmmword_1B002A380;
  v352 = xmmword_1B002A390;
  v349 = xmmword_1B002A3A0;
  v350 = xmmword_1B002A3B0;
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B002A3C0, (__n128)xmmword_1B002A3D0);
  __asm { FMOV            V1.2D, #0.75 }
  v345 = xmmword_1B002A3E0;
  v346 = _Q1;
  OUTLINED_FUNCTION_19_16(0.662596464, *(double *)&_Q1, v159, v160);
  v339 = xmmword_1B002A170;
  v340 = xmmword_1B002A180;
  v337 = xmmword_1B002A190;
  v338 = xmmword_1B002A1A0;
  v335 = xmmword_1B002A040;
  v336 = v161;
  v333 = xmmword_1B002A1B0;
  v334 = xmmword_1B002A1C0;
  v331 = xmmword_1B002A1D0;
  v332 = v161;
  v329 = xmmword_1B002A040;
  v330 = xmmword_1B002A050;
  v313 = (__n128)vdupq_n_s64(0x3FD3333340000000uLL);
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A3F0, v313);
  v325 = v162;
  v326 = xmmword_1B002A400;
  OUTLINED_FUNCTION_4_29(0.300000012, *(double *)&v162, v163, v164);
  OUTLINED_FUNCTION_33_15();
  OUTLINED_FUNCTION_28_11();
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_7_3(v165, v166, v167, v168, v169, v170, v171, v172, v173, v310, 350.0, v174, v48, v175, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v365,
    0,
    v216,
    v218,
    v223,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    (uint64_t)&v315);
  v383 = xmmword_1B0029EC0;
  v384 = xmmword_1B0029ED0;
  v381 = xmmword_1B0027F40;
  v382 = xmmword_1B0027F50;
  v379 = xmmword_1B0027F60;
  v380 = xmmword_1B0027F70;
  OUTLINED_FUNCTION_2_18();
  v369 = v312;
  OUTLINED_FUNCTION_5_25((__n128)xmmword_1B0027FB0, v176);
  v359 = xmmword_1B002A410;
  v360 = xmmword_1B002A420;
  OUTLINED_FUNCTION_31_6((__n128)xmmword_1B002A430, (__n128)xmmword_1B002A440);
  v355 = xmmword_1B0029F20;
  v356 = xmmword_1B0029F30;
  v353 = xmmword_1B002A450;
  v354 = (__int128)v313;
  v351 = xmmword_1B002A460;
  v352 = v177;
  v349 = xmmword_1B002A470;
  v350 = xmmword_1B002A480;
  OUTLINED_FUNCTION_23_26((__n128)xmmword_1B002A490, (__n128)xmmword_1B002A4A0);
  v345 = xmmword_1B002A4B0;
  v346 = xmmword_1B002A4C0;
  *(_QWORD *)&v180 = OUTLINED_FUNCTION_11_31(0.6105057, 0.730892539, v178, v179).n128_u64[0];
  v335 = xmmword_1B002A010;
  v336 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_27_10(v180, (__n128)xmmword_1B002A010);
  v332 = v181;
  OUTLINED_FUNCTION_18_32((__n128)xmmword_1B002A040);
  __asm { FMOV            V1.2D, #0.25 }
  OUTLINED_FUNCTION_22((__n128)xmmword_1B002A4D0, _Q1);
  v325 = xmmword_1B002A4E0;
  v326 = xmmword_1B002A070;
  v323 = v183;
  v324 = v183;
  v321 = v183;
  v322 = v183;
  v319 = v183;
  v320 = v183;
  v317 = v183;
  v318 = v183;
  v315 = v183;
  v316 = v183;
  OUTLINED_FUNCTION_1_23();
  v231 = v184;
  OUTLINED_FUNCTION_21_24();
  OUTLINED_FUNCTION_7_3(v185, v186, v187, v188, v189, v190, v191, v192, v193, v194, 200.0, v195, 0.1, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v365,
    0,
    &v363,
    &v361,
    &v359,
    &v357,
    v231,
    v236,
    v241,
    v246,
    v251,
    v256,
    v261,
    v266,
    v271,
    v276,
    v281,
    v286,
    v288,
    v290,
    v292,
    v294,
    v296,
    v298,
    v300,
    v302,
    v304,
    v306,
    (uint64_t)&v315);
  v383 = xmmword_1B0029EC0;
  v384 = xmmword_1B0029ED0;
  v381 = xmmword_1B0027F40;
  v382 = xmmword_1B0027F50;
  v379 = xmmword_1B0027F60;
  v380 = xmmword_1B0027F70;
  v369 = v312;
  v370 = xmmword_1B0027FB0;
  *(_QWORD *)&v196 = OUTLINED_FUNCTION_2_18().n128_u64[0];
  v367 = v197;
  v368 = v197;
  v365 = (__int128)v197;
  v366 = (__int128)v197;
  OUTLINED_FUNCTION_26_23(v196, v197);
  OUTLINED_FUNCTION_3_27();
  v349 = xmmword_1B0029F80;
  v350 = xmmword_1B0029F90;
  v347 = xmmword_1B0029FA0;
  v348 = xmmword_1B0029FB0;
  v345 = xmmword_1B0029F80;
  OUTLINED_FUNCTION_14_17((__n128)xmmword_1B0029FC0, 0.999896884, v198);
  v339 = xmmword_1B0029FD0;
  v340 = xmmword_1B0029FE0;
  v337 = xmmword_1B0029FF0;
  v338 = xmmword_1B002A000;
  v335 = xmmword_1B002A010;
  v336 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_27_10(0.5, (__n128)xmmword_1B002A010);
  v332 = v199;
  *(_QWORD *)&v200 = OUTLINED_FUNCTION_10_35().n128_u64[0];
  OUTLINED_FUNCTION_12_24(v200, v201, v202);
  v308 = v203;
  OUTLINED_FUNCTION_9_16();
  OUTLINED_FUNCTION_7_3(v204, v205, v206, v207, v208, v209, v210, v211, -90.0, (__n128)xmmword_1B002A0A0, 200.0, v212, 0.1, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v365,
    0,
    &v363,
    &v361,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    1112014848,
    1097859072,
    &v317,
    v308);
  return v0;
}

void sub_1AFBBB1C8(_QWORD *a1@<X8>)
{
  *a1 = 0x3FFB333333333333;
  a1[1] = &unk_1E607D420;
}

void sub_1AFBBB1E0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 1;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73757461727453;
  v28 = 0xEF4C656C676E6953;
  v29 = 9;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 10;
  v25 = 0x2073757461727453;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFBA237C();
  sub_1AFBA237C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1168891904;
  LODWORD(v5) = 1133903872;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 5, 0, 0x41F00000C20C0000, 0x42C8000040000000, v5, 0x3E75C28F3E6147AELL, v6, 0x3F8000003F800000, 0x3EF77EE93F800000, 0x3F8000003F800000, 0x3E7F0B0D3F800000, 1065353216,
    0x428C000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    0x3EE476A03F800000,
    0x3F8000003F800000,
    0x3E838B5E3F800000,
    1075838976,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

BOOL TemperatureDifferenceThresholdDetector.areTemperaturesSignificantlyDifferent(_:_:threshold:thresholdUnit:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  void (*v11)(char *, uint64_t);
  double v12;
  double v13;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  sub_1B00050E0();
  sub_1B0005068();
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  sub_1B00050E0();
  sub_1B0005068();
  v13 = v12;
  v11(v5, v2);
  return vabdd_f64(v10, v13) >= a1;
}

ValueMetadata *type metadata accessor for TemperatureDifferenceThresholdDetector()
{
  return &type metadata for TemperatureDifferenceThresholdDetector;
}

uint64_t *initializeBufferWithCopyOfBuffer for MoonComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MoonComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1B0006064();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for MoonComplicationDataStatus(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for MoonComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1B0006064();
    result = __swift_getEnumTagSinglePayload(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for MoonComplicationDataStatus(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for MoonComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B0006064();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *assignWithCopy for MoonComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for MoonComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1AFBBBFD4((uint64_t)a1);
      goto LABEL_7;
    }
    v11 = sub_1B0006064();
    v12 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v11);
    v13 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11);
    if (v12)
    {
      if (!v13)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
LABEL_16:
        a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
        return a1;
      }
    }
    else
    {
      v14 = *(_QWORD *)(v11 - 8);
      if (!v13)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 24))(a1, a2, v11);
        goto LABEL_16;
      }
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(a1, v11);
    }
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1B0006064();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
  }
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1AFBBBFD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for MoonComplicationDataStatus(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for MoonComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B0006064();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_BYTE *assignWithTake for MoonComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for MoonComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1AFBBBFD4((uint64_t)a1);
      goto LABEL_7;
    }
    v11 = sub_1B0006064();
    v12 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v11);
    v13 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11);
    if (v12)
    {
      if (!v13)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
LABEL_16:
        a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
        return a1;
      }
    }
    else
    {
      v14 = *(_QWORD *)(v11 - 8);
      if (!v13)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 40))(a1, a2, v11);
        goto LABEL_16;
      }
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(a1, v11);
    }
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1B0006064();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE538);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
  }
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoonComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBBC300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for MoonComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MoonComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBBC350(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for MoonComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFBBC39C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFBBC3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for MoonComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EEF20;
  if (!qword_1ED1EEF20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFBBC43C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MoonComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFBBC490()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_6_7();
  OUTLINED_FUNCTION_7();
  qword_1ED1FEC20 = v0;
  *(_QWORD *)algn_1ED1FEC28 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBC52C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_6_7();
  OUTLINED_FUNCTION_7();
  qword_1ED1FECC0 = v0;
  *(_QWORD *)algn_1ED1FECC8 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBC5C4()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FEC30 = v0;
  *(_QWORD *)algn_1ED1FEC38 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBC658()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FECB0 = v0;
  *(_QWORD *)algn_1ED1FECB8 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBC6E4()
{
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  byte_1ED1FEC18 = sub_1B00087E8() & 1;
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1AFBBC7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  type metadata accessor for AirQualityComplicationViewModel();
  sub_1AFBBCBC0();
  v0 = sub_1B0008C38();
  v2 = v1;
  v3 = sub_1B00062EC();
  v5 = v4;
  swift_bridgeObjectRetain();
  sub_1AFD0B164(0, 1, 1, MEMORY[0x1E0DEE9D8], v6, v7);
  v13 = v12;
  v15 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  v16 = v15 + 1;
  if (v15 >= v14 >> 1)
  {
    OUTLINED_FUNCTION_15_33(v14 > 1, v15 + 1, v8, v9, v10, v11);
    v13 = v26;
  }
  *(_QWORD *)(v13 + 16) = v16;
  v17 = v13 + 16 * v15;
  *(_QWORD *)(v17 + 32) = v0;
  *(_QWORD *)(v17 + 40) = v2;
  v18 = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  if (v16 >= v18 >> 1)
  {
    OUTLINED_FUNCTION_15_33(v18 > 1, v15 + 2, v19, v20, v21, v22);
    v13 = v27;
  }
  *(_QWORD *)(v13 + 16) = v15 + 2;
  v23 = v13 + 16 * v16;
  *(_QWORD *)(v23 + 32) = v3;
  *(_QWORD *)(v23 + 40) = v5;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD08);
  sub_1AFB98DCC();
  v24 = sub_1B0008500();
  swift_bridgeObjectRelease();
  return v24;
}

void sub_1AFBBC918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE550);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_30();
  OUTLINED_FUNCTION_14_18();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_26();
  v4 = OUTLINED_FUNCTION_9_17();
  sub_1AFBDBA34(v4, v1);
  OUTLINED_FUNCTION_4_15();
  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    sub_1AFBBCBFC(v1);
  }
  else
  {
    OUTLINED_FUNCTION_7_26();
    sub_1B0006310();
    OUTLINED_FUNCTION_11_32();
  }
  OUTLINED_FUNCTION_28_5();
}

void sub_1AFBBC9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE550);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_30();
  OUTLINED_FUNCTION_14_18();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_26();
  v4 = OUTLINED_FUNCTION_9_17();
  sub_1AFBA73C8(v4);
  OUTLINED_FUNCTION_4_15();
  if (__swift_getEnumTagSinglePayload(v1, 1, v0) == 1)
  {
    sub_1AFBBCBFC(v1);
  }
  else
  {
    OUTLINED_FUNCTION_7_26();
    sub_1B0006310();
    OUTLINED_FUNCTION_11_32();
  }
  OUTLINED_FUNCTION_28_5();
}

uint64_t sub_1AFBBCA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, unint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1B0006328();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AirQualityComplicationViewModel();
  v4 = OUTLINED_FUNCTION_9_17();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1B0008DA0();
    v6 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v14 = v4;
    v7 = v4 + v6;
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    do
    {
      v9(v3, v7, v0);
      v10 = sub_1B00062F8();
      Color.init(hex:)(v10, v11);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_1B0008D88();
      sub_1B0008DAC();
      sub_1B0008DB8();
      sub_1B0008D94();
      v7 += v8;
      --v5;
    }
    while (v5);
    v12 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v12;
}

unint64_t sub_1AFBBCBC0()
{
  unint64_t result;

  result = qword_1ED1F3CC8;
  if (!qword_1ED1F3CC8)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED1F3CC8);
  }
  return result;
}

uint64_t sub_1AFBBCBFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFBBCC40()
{
  unint64_t result;

  result = qword_1EEE70D28;
  if (!qword_1EEE70D28)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB3D0], MEMORY[0x1E0CDB3F0]);
    atomic_store(result, (unint64_t *)&qword_1EEE70D28);
  }
  return result;
}

uint64_t sub_1AFBBCC7C()
{
  uint64_t v0;

  return GEOLocationCoordinate2DMake(*(_QWORD *)(v0 + 8), *(double *)v0);
}

void (*sub_1AFBBCC8C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B000724C();
  return sub_1AFBBCCE8;
}

void sub_1AFBBCCE8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_1AFBBCD1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE70D30;
  if (!qword_1EEE70D30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE70D38);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD8668], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE70D30);
  }
  return result;
}

uint64_t sub_1AFBBCD60()
{
  sub_1AFBBCE38();
  return sub_1B000814C();
}

uint64_t sub_1AFBBCDB0()
{
  sub_1AFBBCE38();
  return sub_1B000811C();
}

uint64_t sub_1AFBBCE00()
{
  sub_1AFBBCE38();
  return sub_1B0008134();
}

unint64_t sub_1AFBBCE38()
{
  unint64_t result;

  result = qword_1EEE70D40;
  if (!qword_1EEE70D40)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for RoundedCornersShape, &type metadata for RoundedCornersShape);
    atomic_store(result, (unint64_t *)&qword_1EEE70D40);
  }
  return result;
}

void sub_1AFBBCE74()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE v36[9];

  v36[0] = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 6;
  v21 = 0x617274736F746C41;
  v22 = 0xEF4C202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0051480;
  v25 = 6;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBBD67C();
  sub_1AFBBD67C();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V5.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E6147AE3DCCCCCDLL;
  *(_QWORD *)&v12 = 0x4268000041400000;
  LODWORD(v10) = 1093310165;
  DWORD2(v9) = 1105199104;
  *(_QWORD *)&v9 = 0x4120000041726E98;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 10, 0, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E6147AE3DCCCCCDLL,
    1091529988,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1091005916,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBBD67C()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __int128 v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  double v20;
  __n128 v21;
  float v22;
  __int128 v23;
  __n128 v24;
  double v25;
  __n128 v26;
  __int128 v27;
  __n128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  double v40;
  __n128 v41;
  float v42;
  __n128 v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  __n128 v49;
  double v50;
  __n128 v51;
  double v52;
  double v53;
  __n128 v54;
  double v55;
  __n128 v56;
  double v57;
  double v58;
  __n128 v59;
  double v60;
  __int128 v61;
  __int128 v62;
  double v63;
  double v64;
  __n128 v65;
  double v66;
  __int128 v67;
  __n128 v68;
  __int128 v69;
  double v70;
  __n128 v71;
  double v72;
  __int128 v73;
  __n128 v74;
  __int128 v75;
  double v76;
  double v77;
  _OWORD *v78;
  unsigned int v79;
  __n128 *v80;
  uint64_t v81;
  float v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t v90;
  double v91;
  __n128 v92;
  float v93;
  float v94;
  double v95;
  __n128 v96;
  __n128 v97;
  double v98;
  __n128 v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  __n128 v104;
  double v105;
  double v106;
  __n128 v107;
  __n128 v108;
  __n128 v109;
  __n128 *v110;
  uint64_t v111;
  float v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  uint64_t v120;
  double v121;
  __n128 v122;
  float v123;
  float v124;
  __int128 v125;
  _OWORD *v126;
  _OWORD *v127;
  __n128 *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  uint64_t v136;
  double v137;
  __n128 v138;
  float v139;
  float v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  uint64_t v149;
  double v150;
  float v151;
  float v152;
  double v153;
  double v154;
  __n128 v155;
  __n128 v156;
  double v157;
  __n128 v158;
  __n128 v159;
  __n128 v160;
  __n128 v161;
  __n128 v162;
  __n128 v163;
  double v164;
  double v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  uint64_t v176;
  double v177;
  float v178;
  float v179;
  __n128 v180;
  double v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  double v187;
  __n128 v188;
  double v189;
  __n128 v190;
  double v191;
  double v192;
  __n128 v193;
  double v194;
  __n128 v195;
  double v196;
  __n128 v197;
  double v198;
  __int128 v199;
  __int128 v200;
  double v201;
  __n128 v202;
  double v203;
  __int128 v204;
  __n128 v205;
  __int128 v206;
  double v207;
  __n128 v208;
  double v209;
  double v210;
  __int128 v211;
  __n128 v212;
  __int128 v213;
  double v214;
  double v215;
  double v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  uint64_t v224;
  double v225;
  float v226;
  __int128 v227;
  double v228;
  double v229;
  double v230;
  double v231;
  __n128 v232;
  __n128 v233;
  double v234;
  double v235;
  double v236;
  __int128 v237;
  __n128 v238;
  double v239;
  __int128 v240;
  __n128 v241;
  __int128 v242;
  __int128 v243;
  double v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  uint64_t v252;
  double v253;
  __n128 v254;
  float v255;
  double v256;
  double v257;
  double v258;
  double v259;
  __n128 v260;
  __n128 v261;
  double v262;
  double v263;
  double v264;
  double v265;
  __int128 v266;
  __n128 v267;
  __int128 v268;
  __n128 v269;
  __int128 v270;
  __int128 v271;
  double v272;
  double v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  uint64_t v282;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  int v288;
  _OWORD *v289;
  _OWORD *v290;
  int v291;
  int v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  _OWORD *v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  _OWORD *v417;
  _OWORD *v418;
  _OWORD *v419;
  _OWORD *v420;
  _OWORD *v421;
  _OWORD *v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  __n128 v431;
  __n128 v432;
  __n128 v433;
  __n128 v434;
  __int128 v435;
  __n128 v436;
  __n128 v437;
  __n128 v438;
  __n128 v439;
  __n128 v440;
  __n128 v441;
  __n128 v442;
  __int128 v443;
  __n128 v444;
  __int128 v445;
  __n128 v446;
  __int128 v447;
  __n128 v448;
  __int128 v449;
  __n128 v450;
  __int128 v451;
  __n128 v452;
  __int128 v453;
  __n128 v454;
  __n128 v455;
  __n128 v456;
  __n128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __n128 v462;
  __int128 v463;
  __n128 v464;
  __n128 v465;
  __n128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __n128 v470;
  __int128 v471;
  __n128 v472;
  __int128 v473;
  __n128 v474;
  __int128 v475;
  __n128 v476;
  __int128 v477;
  __n128 v478;
  __int128 v479;
  __n128 v480;
  __int128 v481;
  __n128 v482;
  __int128 v483;
  _OWORD v484[2];
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __n128 v495;
  __n128 v496;
  __n128 v497;
  __n128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v503 = xmmword_1B00276A0;
  v504 = xmmword_1B00276B0;
  v501 = xmmword_1B0028C00;
  v502 = xmmword_1B0028C10;
  v499 = xmmword_1B00287F0;
  v500 = xmmword_1B0028050;
  __asm { FMOV            V2.2D, #1.0 }
  v434 = _Q2;
  OUTLINED_FUNCTION_39_0(0.529156804, 0.689382493, _Q2);
  v493 = xmmword_1B0028C20;
  v494 = xmmword_1B0028C30;
  v491 = xmmword_1B0028C40;
  v492 = xmmword_1B0028C50;
  v489 = xmmword_1B0028C60;
  v490 = xmmword_1B00277A0;
  v487 = xmmword_1B0028C70;
  v488 = xmmword_1B0028C80;
  v485 = (__int128)v6;
  OUTLINED_FUNCTION_12_25(0.699999928, 1.0, v6);
  v482 = v7;
  v483 = xmmword_1B0027030;
  v480 = v7;
  v481 = xmmword_1B0025E90;
  v478 = v7;
  v479 = xmmword_1B0027730;
  v476 = v7;
  v477 = xmmword_1B0025E90;
  v474 = v7;
  v475 = xmmword_1B0025E50;
  v472 = v7;
  v473 = xmmword_1B0025E90;
  v470 = v7;
  v471 = xmmword_1B0026140;
  v468 = xmmword_1B0027FE0;
  v469 = xmmword_1B0025E90;
  v466 = v7;
  v467 = xmmword_1B00278C0;
  v464 = v7;
  v465 = v7;
  v462 = v7;
  v463 = xmmword_1B0027770;
  v460 = xmmword_1B0027FE0;
  v461 = xmmword_1B0025E90;
  v458 = xmmword_1B0027FE0;
  OUTLINED_FUNCTION_21_25((__n128)xmmword_1B0028C90, 1.0, v7);
  v435 = v8;
  v453 = v8;
  v450 = v9;
  v451 = v10;
  v448 = v9;
  v449 = xmmword_1B00277B0;
  v446 = v9;
  v447 = v11;
  v444 = v9;
  v445 = v8;
  v442 = v9;
  v443 = v10;
  OUTLINED_FUNCTION_29_22(1.0, *(double *)&v10, v9);
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_8_9(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 35.0, 0.1, &v489, &v487, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v485, 0,
    v484,
    &v482,
    &v480,
    &v478,
    &v476,
    &v474,
    &v472,
    &v470,
    &v468,
    &v466,
    &v464,
    &v462,
    &v460,
    &v458,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_7_15();
  v499 = xmmword_1B0028CA0;
  v500 = xmmword_1B0028CB0;
  OUTLINED_FUNCTION_39_0(0.534170091, 0.689324737, v434);
  v493 = xmmword_1B0028CC0;
  v494 = v23;
  v491 = xmmword_1B0028CD0;
  v492 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_36_9((__n128)xmmword_1B0028CF0);
  v487 = xmmword_1B0028D00;
  v488 = xmmword_1B0028C80;
  v485 = (__int128)v24;
  OUTLINED_FUNCTION_12_25(1.0, v25, v24);
  v482 = v26;
  v483 = xmmword_1B0027030;
  v480 = v26;
  v481 = xmmword_1B0025E90;
  v478 = v26;
  v479 = xmmword_1B0027730;
  v476 = v26;
  v477 = xmmword_1B0025E90;
  v474 = v26;
  v475 = v435;
  v472 = v26;
  v473 = xmmword_1B0025E90;
  v470 = v26;
  v471 = xmmword_1B0026140;
  v468 = xmmword_1B0027FE0;
  v469 = xmmword_1B0025E90;
  v466 = v26;
  v467 = xmmword_1B00278C0;
  v464 = v26;
  v465 = v26;
  v462 = v26;
  v463 = xmmword_1B0027770;
  v460 = xmmword_1B0027FE0;
  v461 = xmmword_1B0025E90;
  v458 = xmmword_1B0027FE0;
  OUTLINED_FUNCTION_21_25((__n128)xmmword_1B0028C90, *(double *)&v435, v26);
  v453 = v27;
  v450 = v28;
  v451 = v29;
  v448 = v28;
  v449 = xmmword_1B00277B0;
  v446 = v28;
  v447 = v30;
  v444 = v28;
  v445 = v27;
  v442 = v28;
  v443 = v29;
  OUTLINED_FUNCTION_29_22(1.0, *(double *)&v27, v28);
  OUTLINED_FUNCTION_2_19();
  v301 = v31;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_16_18();
  OUTLINED_FUNCTION_8_9(v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, 35.0, 0.1, &v489, &v487, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v485, 0,
    v484,
    &v482,
    v301,
    v309,
    v317,
    v325,
    v333,
    v341,
    v349,
    v357,
    v365,
    v373,
    v381,
    v389,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028D10;
  v502 = xmmword_1B0028D20;
  v499 = xmmword_1B0028D30;
  v500 = xmmword_1B0028D40;
  OUTLINED_FUNCTION_16_26();
  v489 = (__int128)v43;
  v490 = xmmword_1B0027740;
  v487 = xmmword_1B0028D50;
  v488 = xmmword_1B0028D60;
  v46 = OUTLINED_FUNCTION_22_8(0.69862318, 0.998033106, v44, v45, v43);
  v483 = xmmword_1B0027030;
  *(_QWORD *)&v50 = OUTLINED_FUNCTION_14_19(v46, v47, v48, 1.0, v49).n128_u64[0];
  v475 = v435;
  OUTLINED_FUNCTION_37_4(v50, v51, v52, v53, v54);
  v468 = xmmword_1B0027FE0;
  *(_QWORD *)&v60 = OUTLINED_FUNCTION_15_34(v55, v56, v57, v58, v59).n128_u64[0];
  v460 = v61;
  v461 = v62;
  v458 = v61;
  *(_QWORD *)&v66 = OUTLINED_FUNCTION_20_19(v60, *(double *)&v62, v63, v64, v65).n128_u64[0];
  v453 = v67;
  v450 = v68;
  v451 = v69;
  *(_QWORD *)&v72 = OUTLINED_FUNCTION_28_17(v66, v70, v71, *(double *)&v69, v68).n128_u64[0];
  v445 = v73;
  v442 = v74;
  v443 = v75;
  OUTLINED_FUNCTION_23_20(v72, v76, v77, *(double *)&v75, v74);
  OUTLINED_FUNCTION_2_19();
  v302 = v78;
  OUTLINED_FUNCTION_12_8();
  v284 = v79 | 0x3F4CCCCD00000000;
  v433 = v80[163];
  v82 = *(float *)(v81 + 2640);
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_8_9(v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v82, &v489, &v487, v284, 1061997773, &v485, 0,
    v484,
    &v482,
    v302,
    v310,
    v318,
    v326,
    v334,
    v342,
    v350,
    v358,
    v366,
    v374,
    v382,
    v390,
    &v448,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028D70;
  v502 = xmmword_1B0028A50;
  v499 = xmmword_1B00276E0;
  v500 = xmmword_1B0026110;
  OUTLINED_FUNCTION_9_18();
  v487 = xmmword_1B0028D80;
  v488 = xmmword_1B0028D90;
  v485 = xmmword_1B0026320;
  v486 = xmmword_1B0026330;
  OUTLINED_FUNCTION_6_21(0.970078886, v95, 0.97049284, v96);
  v472 = v97;
  OUTLINED_FUNCTION_25_7((__n128)xmmword_1B0026450, v98, v99, v97);
  v466 = v100;
  OUTLINED_FUNCTION_4_31((__n128)xmmword_1B0026230, v101, v102, v100, v103, v104);
  v447 = xmmword_1B0026140;
  OUTLINED_FUNCTION_13_31(1.0, v105, v106, v107, v108, v109);
  OUTLINED_FUNCTION_20_15();
  OUTLINED_FUNCTION_30_5();
  v432 = v110[32];
  v112 = *(float *)(v111 + 2620);
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_28_6(v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, 700.0, v123, v112, v124, &v489, &v487, 0x3F6666663F666666, 0, &v485,
    0,
    v484,
    &v482,
    &v480,
    &v478,
    &v476,
    &v474,
    &v472,
    &v470,
    &v468,
    &v466,
    &v464,
    &v462,
    &v460,
    &v458,
    &v448,
    &v454,
    v405,
    v410,
    v415,
    v417,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028DA0;
  v502 = xmmword_1B0028DB0;
  v499 = xmmword_1B0028220;
  v500 = xmmword_1B0028230;
  v497 = v434;
  v498 = v434;
  v495 = v434;
  v496 = v434;
  v493 = (__int128)v434;
  v494 = (__int128)v434;
  v491 = (__int128)v434;
  v492 = (__int128)v434;
  v489 = (__int128)v434;
  v490 = xmmword_1B0027840;
  v487 = xmmword_1B0028DC0;
  v488 = xmmword_1B0028D90;
  v485 = xmmword_1B0028DD0;
  OUTLINED_FUNCTION_12_25(1.0, v434.n128_f64[0], (__n128)xmmword_1B0028DE0);
  v482 = (__n128)v125;
  v483 = xmmword_1B0027030;
  v480 = (__n128)v125;
  v481 = xmmword_1B0025E90;
  v478 = (__n128)v125;
  v479 = xmmword_1B0027730;
  v476 = (__n128)v125;
  v477 = xmmword_1B0025E90;
  v474 = (__n128)v125;
  v475 = v435;
  v472 = (__n128)v125;
  v473 = v125;
  v470 = (__n128)v125;
  v471 = v125;
  v468 = v125;
  v469 = xmmword_1B0028150;
  v466 = (__n128)v125;
  v467 = xmmword_1B0026130;
  v464 = (__n128)v125;
  v465 = (__n128)v125;
  v462 = (__n128)v125;
  v463 = xmmword_1B0027770;
  v460 = v125;
  v461 = xmmword_1B0025E90;
  v458 = v125;
  v459 = xmmword_1B0028C90;
  v456 = (__n128)v125;
  v457 = (__n128)v125;
  v454 = (__n128)v125;
  v455 = (__n128)v125;
  v452 = (__n128)v125;
  v453 = v435;
  v450 = (__n128)v125;
  v451 = xmmword_1B0027030;
  v448 = (__n128)v125;
  v449 = xmmword_1B00278C0;
  v446 = (__n128)v125;
  v447 = xmmword_1B0026140;
  v444 = (__n128)v125;
  v445 = v435;
  v442 = (__n128)v125;
  v443 = xmmword_1B0027030;
  v440 = (__n128)v125;
  v441 = (__n128)v125;
  v438 = (__n128)v125;
  v439 = (__n128)v125;
  v436 = (__n128)v125;
  v437 = (__n128)v125;
  OUTLINED_FUNCTION_22_4();
  v419 = v126;
  OUTLINED_FUNCTION_20_15();
  OUTLINED_FUNCTION_3_21();
  v303 = v127;
  OUTLINED_FUNCTION_30_5();
  v431 = v128[223];
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_28_6(v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, 900.0, v139, 0.8, v140, &v489, &v487, 0x3F6666663F666666, 0, &v485,
    0,
    v484,
    &v482,
    v303,
    v311,
    v319,
    v327,
    v335,
    v343,
    v351,
    v359,
    v367,
    v375,
    v383,
    v391,
    &v456,
    &v454,
    v406,
    v411,
    v416,
    v418,
    &v444,
    v419,
    v421,
    v423,
    v427,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028DA0;
  v502 = xmmword_1B0028DB0;
  v499 = xmmword_1B0028220;
  v500 = xmmword_1B0028230;
  v497 = v434;
  v498 = v434;
  v495 = v434;
  v496 = v434;
  v493 = (__int128)v434;
  v494 = (__int128)v434;
  v491 = (__int128)v434;
  v492 = (__int128)v434;
  v489 = (__int128)v434;
  v490 = xmmword_1B0027840;
  v487 = xmmword_1B0028DC0;
  v488 = xmmword_1B0028D90;
  v485 = xmmword_1B0028DD0;
  v486 = xmmword_1B0028DE0;
  memset(v484, 0, sizeof(v484));
  v482 = v434;
  v483 = xmmword_1B0027030;
  v480 = v434;
  v481 = xmmword_1B0025E90;
  v478 = v434;
  v479 = xmmword_1B0027730;
  v476 = v434;
  v477 = xmmword_1B0025E90;
  v474 = v434;
  v475 = v435;
  v472 = v434;
  v473 = (__int128)v434;
  v470 = v434;
  v471 = (__int128)v434;
  v468 = (__int128)v434;
  v469 = xmmword_1B0028150;
  v466 = v434;
  v467 = xmmword_1B0026130;
  v464 = v434;
  v465 = v434;
  v462 = v434;
  v463 = xmmword_1B0027770;
  v460 = (__int128)v434;
  v461 = xmmword_1B0025E90;
  v458 = (__int128)v434;
  v459 = xmmword_1B0028C90;
  v456 = v434;
  v457 = v434;
  v454 = v434;
  v455 = v434;
  v452 = v434;
  v453 = v435;
  v450 = v434;
  v451 = xmmword_1B0027030;
  v448 = v434;
  v449 = xmmword_1B00278C0;
  v446 = v434;
  v447 = xmmword_1B0026140;
  v444 = v434;
  v445 = v435;
  v442 = v434;
  v443 = xmmword_1B0027030;
  v440 = v434;
  v441 = v434;
  v438 = v434;
  v439 = v434;
  v436 = v434;
  v437 = v434;
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_3_21();
  v304 = v141;
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_29_2(v142, v143, v144, v145, v146, v147, v148, v149, v150, v431, 900.0, v151, 0.8, v152, &v489, &v487, v285, v287, &v485,
    0,
    v484,
    &v482,
    v304,
    v312,
    v320,
    v328,
    v336,
    v344,
    v352,
    v360,
    v368,
    v376,
    v384,
    v392,
    &v456,
    &v454,
    v407,
    v412,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    v424,
    v428,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028D70;
  v502 = xmmword_1B0028A50;
  v499 = xmmword_1B00276E0;
  v500 = xmmword_1B0026110;
  OUTLINED_FUNCTION_9_18();
  v487 = xmmword_1B0028D80;
  v488 = xmmword_1B0028D90;
  v485 = xmmword_1B0026320;
  v486 = xmmword_1B0026330;
  OUTLINED_FUNCTION_6_21(0.97049284, v153, v154, v155);
  v472 = v156;
  OUTLINED_FUNCTION_25_7((__n128)xmmword_1B0026450, v157, v158, v156);
  v466 = v159;
  *(_QWORD *)&v164 = OUTLINED_FUNCTION_4_31((__n128)xmmword_1B0026230, v160, v161, v159, v162, v163).n128_u64[0];
  v447 = xmmword_1B0026140;
  OUTLINED_FUNCTION_13_31(v164, 1.0, v165, v166, v167, v168);
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_29_2(v169, v170, v171, v172, v173, v174, v175, v176, v177, v432, 700.0, v178, v112, v179, &v489, &v487, v286, v288, &v485,
    v291,
    v293,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v345,
    v353,
    v361,
    v369,
    v377,
    v385,
    v393,
    v397,
    v401,
    v408,
    v413,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    v425,
    v429,
    v484,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_5_21();
  v501 = xmmword_1B0028D10;
  v502 = xmmword_1B0028D20;
  v499 = xmmword_1B0028D30;
  v500 = xmmword_1B0028D40;
  OUTLINED_FUNCTION_16_26();
  v489 = (__int128)v180;
  v490 = xmmword_1B0027740;
  v487 = xmmword_1B0028D50;
  v488 = xmmword_1B0028D60;
  v184 = OUTLINED_FUNCTION_22_8(0.998033106, v181, v182, v183, v180);
  v483 = xmmword_1B0027030;
  *(_QWORD *)&v189 = OUTLINED_FUNCTION_14_19(v184, v185, v186, v187, v188).n128_u64[0];
  v475 = v435;
  OUTLINED_FUNCTION_37_4(v189, v190, v191, v192, v193);
  v468 = xmmword_1B0027FE0;
  *(_QWORD *)&v198 = OUTLINED_FUNCTION_15_34(v194, v195, v196, 0.899999976, v197).n128_u64[0];
  v460 = v199;
  v461 = v200;
  v458 = v199;
  *(_QWORD *)&v203 = OUTLINED_FUNCTION_20_19(v198, *(double *)&v200, v201, *(double *)&v199, v202).n128_u64[0];
  v453 = v204;
  v450 = v205;
  v451 = v206;
  *(_QWORD *)&v210 = OUTLINED_FUNCTION_28_17(v203, v207, v208, v209, v205).n128_u64[0];
  v445 = v211;
  v442 = v212;
  v443 = v213;
  OUTLINED_FUNCTION_23_20(v210, v214, v215, v216, v212);
  OUTLINED_FUNCTION_0_21();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_9_13(v217, v218, v219, v220, v221, v222, v223, v224, v225, v433, 200.0, v226, v82, &v489, &v487, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v289, v292,
    v294,
    v298,
    v306,
    v314,
    v322,
    v330,
    v338,
    v346,
    v354,
    v362,
    v370,
    v378,
    v386,
    v394,
    v398,
    v402,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    v484,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_7_15();
  v499 = xmmword_1B0028CA0;
  OUTLINED_FUNCTION_26_24((__n128)xmmword_1B0028CB0);
  v493 = xmmword_1B0028CC0;
  v494 = v227;
  v491 = xmmword_1B0028CD0;
  v492 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_36_9((__n128)xmmword_1B0028CF0);
  OUTLINED_FUNCTION_17_24((__n128)xmmword_1B0028D00, v228, v229, v230, v231, v232);
  v483 = xmmword_1B0027030;
  v480 = v233;
  v481 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_38_8(1.0, v234, v235, v236, 1.0, v233);
  v477 = v237;
  v474 = v238;
  v475 = v435;
  v472 = v238;
  v473 = v237;
  v470 = v238;
  v471 = xmmword_1B0026140;
  v468 = xmmword_1B0027FE0;
  v469 = v237;
  v466 = v238;
  v467 = xmmword_1B00278C0;
  v464 = v238;
  v465 = v238;
  v462 = v238;
  v463 = xmmword_1B0027770;
  v460 = xmmword_1B0027FE0;
  v461 = v237;
  v458 = xmmword_1B0027FE0;
  v459 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_35_5(v239, *(double *)&v435, 1.0, 1.0, 1.0, v238);
  v453 = v240;
  v450 = v241;
  v451 = v242;
  v448 = v241;
  v449 = xmmword_1B00277B0;
  v446 = v241;
  v447 = v243;
  v444 = v241;
  v445 = v240;
  v442 = v241;
  v443 = v242;
  OUTLINED_FUNCTION_27_11(*(double *)&v242, *(double *)&v240, *(double *)&v243, 1.0, v244, v241);
  OUTLINED_FUNCTION_15_30();
  OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_16_18();
  OUTLINED_FUNCTION_9_13(v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, 35.0, 0.1, &v489, &v487, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v290, 0,
    v295,
    v299,
    v307,
    v315,
    v323,
    v331,
    v339,
    v347,
    v355,
    v363,
    v371,
    v379,
    v387,
    v395,
    v399,
    v403,
    v409,
    v414,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    1112014848,
    1097859072,
    &v438,
    (uint64_t)&v436);
  OUTLINED_FUNCTION_7_15();
  v499 = xmmword_1B00287F0;
  OUTLINED_FUNCTION_26_24((__n128)xmmword_1B0028050);
  v493 = xmmword_1B0028C20;
  v494 = xmmword_1B0028C30;
  v491 = xmmword_1B0028C40;
  v492 = xmmword_1B0028C50;
  OUTLINED_FUNCTION_36_9((__n128)xmmword_1B0028C60);
  OUTLINED_FUNCTION_17_24((__n128)xmmword_1B0028C70, v256, v257, v258, v259, v260);
  v483 = xmmword_1B0027030;
  v480 = v261;
  v481 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_38_8(1.0, v262, v263, v264, v265, v261);
  v477 = v266;
  v474 = v267;
  v475 = v435;
  v472 = v267;
  v473 = v266;
  v470 = v267;
  v471 = xmmword_1B0026140;
  v468 = xmmword_1B0027FE0;
  v469 = v266;
  v466 = v267;
  v467 = xmmword_1B00278C0;
  v464 = v267;
  v465 = v267;
  v462 = v267;
  v463 = xmmword_1B0027770;
  v460 = xmmword_1B0027FE0;
  v461 = v266;
  v458 = xmmword_1B0027FE0;
  v459 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_35_5(1.0, 1.0, *(double *)&v435, 1.0, 0.899999976, v267);
  v453 = v268;
  v450 = v269;
  v451 = v270;
  v448 = v269;
  v449 = xmmword_1B00277B0;
  v446 = v269;
  v447 = v271;
  v444 = v269;
  v445 = v268;
  v442 = v269;
  v443 = v270;
  OUTLINED_FUNCTION_27_11(1.0, v272, *(double *)&v268, *(double *)&v271, v273, v269);
  OUTLINED_FUNCTION_22_4();
  v420 = v274;
  OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_4_14();
  OUTLINED_FUNCTION_9_13(v275, v276, v277, v278, v279, v280, v281, v282, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v489, &v487, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v485, 0,
    v296,
    v300,
    v308,
    v316,
    v324,
    v332,
    v340,
    v348,
    v356,
    v364,
    v372,
    v380,
    v388,
    v396,
    v400,
    v404,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    v420,
    v422,
    v426,
    v430,
    &v438,
    (uint64_t)&v436);
  return v0;
}

void sub_1AFBBE8EC()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FEC40 = v0;
  *(_QWORD *)algn_1ED1FEC48 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBE98C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FED38 = v0;
  unk_1ED1FED40 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBEA2C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();
  OUTLINED_FUNCTION_7();
  qword_1ED1FED28 = v0;
  unk_1ED1FED30 = v1;
  OUTLINED_FUNCTION_6();
}

void sub_1AFBBEAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_26_25();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_20_20();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_11_33(*(int *)(v4 + 20));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  OUTLINED_FUNCTION_23_27();
  v5 = (__n128 *)OUTLINED_FUNCTION_3_28();
  v6 = OUTLINED_FUNCTION_16_27(v5, (__n128)xmmword_1B00275C0);
  OUTLINED_FUNCTION_8_24(v6);
  v7 = OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_0_26(v7);
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_25_3();
  v8 = OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_4_32(v8);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFBBEB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_26_25();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_20_20();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_11_33(*(int *)(v4 + 24));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  OUTLINED_FUNCTION_23_27();
  v5 = (__n128 *)OUTLINED_FUNCTION_3_28();
  v6 = OUTLINED_FUNCTION_16_27(v5, (__n128)xmmword_1B00275C0);
  OUTLINED_FUNCTION_8_24(v6);
  v7 = OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_0_26(v7);
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_25_3();
  v8 = OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_4_32(v8);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFBBEC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_26_25();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_20_20();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_11_33(*(int *)(v4 + 28));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED1F4AE8);
  OUTLINED_FUNCTION_23_27();
  v5 = (__n128 *)OUTLINED_FUNCTION_3_28();
  v6 = OUTLINED_FUNCTION_16_27(v5, (__n128)xmmword_1B00275C0);
  OUTLINED_FUNCTION_8_24(v6);
  v7 = OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_0_26(v7);
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_25_3();
  v8 = OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_4_32(v8);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFBBED34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_26_25();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_10();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = OUTLINED_FUNCTION_1_24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v0 + *(int *)(v6 + 20), v4);
  static Set<>.full.getter();
  v7 = OUTLINED_FUNCTION_17_25();
  OUTLINED_FUNCTION_0_26(v7);
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_18_33();
  OUTLINED_FUNCTION_25_3();
  v8 = OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_4_32(v8);
  OUTLINED_FUNCTION_9_19();
  OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFBBEE00()
{
  uint64_t v0;
  void *v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  MEMORY[0x1E0C80A78](v0);
  v1 = (void *)sub_1AFBBEF24();
  type metadata accessor for TemperatureComplicationViewModel();
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_21_26();
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_21_26();
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_21_26();
  OUTLINED_FUNCTION_22_9();

}

uint64_t sub_1AFBBEF24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE570);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B00067C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0006700();
  sub_1B00066D0();
  sub_1B0006658();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_1AFAF6288((uint64_t)v2, &qword_1ED1EE570);
    v7 = sub_1B0006688();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v7 = sub_1B00067B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_1AFBBF05C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AFBBF098()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 3;
  sub_1AFBBF8B4();
  sub_1AFBBF8B4();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E19999A3DA3D70ALL;
  *(_QWORD *)&v11 = 0x4396000041900000;
  LODWORD(v9) = 1091567616;
  DWORD2(v8) = 1128792064;
  *(_QWORD *)&v8 = 0x41F00000413B04ADLL;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42B400003FC00000, v5, 0x3E4CCCCD3E1374BCLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB12ED63F800000, 0,
    0x4248000000000000,
    v7,
    0x3E23D70A3D83126FLL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x40C0000000000000,
    v8,
    0x3E3851EC3E051EB8,
    1091994787,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1088421888,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBBF8B4()
{
  uint64_t v0;
  int64x2_t v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  double v20;
  __n128 v21;
  float v22;
  __n128 v23;
  int64x2_t v24;
  double v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  double v37;
  __n128 v38;
  float v39;
  __int128 v40;
  __n128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  unsigned int v45;
  __n128 *v46;
  uint64_t v47;
  float v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  double v57;
  __n128 v58;
  float v59;
  __n128 v60;
  __n128 v61;
  __int128 v62;
  __int128 v63;
  __n128 v64;
  __n128 *v65;
  double v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  __n128 v75;
  float v76;
  float v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  double v86;
  __n128 v87;
  double v88;
  __n128 v89;
  __n128 v90;
  __n128 *v91;
  double v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  uint64_t v100;
  __n128 v101;
  float v102;
  float v103;
  __n128 v104;
  double v105;
  double v106;
  __n128 v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  __n128 v113;
  double v114;
  __n128 v115;
  double v116;
  __n128 v117;
  __n128 v118;
  double v119;
  __n128 v120;
  double v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  float v130;
  float v131;
  _OWORD *v132;
  double v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  uint64_t v141;
  float v142;
  float v143;
  __int128 v144;
  __int128 v145;
  double v147;
  __n128 v148;
  __int128 v149;
  __int128 v150;
  __n128 v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  double v161;
  float v162;
  __n128 v163;
  int64x2_t v164;
  double v165;
  __n128 v166;
  __int128 v167;
  __n128 v168;
  __int128 v169;
  __n128 v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  uint64_t v179;
  double v180;
  __n128 v181;
  float v182;
  int64x2_t v183;
  __n128 v184;
  __n128 v185;
  double v186;
  __int128 v187;
  double v188;
  double v189;
  __n128 v190;
  uint64_t v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  uint64_t v199;
  float v200;
  uint64_t v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  int v206;
  int v207;
  int v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  int v291;
  int v292;
  int v293;
  int v294;
  _OWORD *v295;
  _OWORD *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  __n128 v301;
  __n128 v302;
  __n128 v303;
  int64x2_t v304;
  __n128 v305;
  __n128 v306;
  __n128 v307;
  __n128 v308;
  __n128 v309;
  __n128 v310;
  __n128 v311;
  __n128 v312;
  __n128 v313;
  __n128 v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __n128 v334;
  __n128 v335;
  __n128 v336;
  __n128 v337;
  __n128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __n128 v354;
  __n128 v355;
  __n128 v356;
  __n128 v357;
  __int128 v358;
  __int128 v359;
  __n128 v360;
  __n128 v361;
  int64x2_t v362;
  __int128 v363;
  __n128 v364;
  __n128 v365;
  __n128 v366;
  __n128 v367;
  __n128 v368;
  __int128 v369;
  __n128 v370;
  __n128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v376 = xmmword_1B0029EC0;
  v377 = xmmword_1B0029ED0;
  v374 = xmmword_1B0027F40;
  v375 = xmmword_1B0027F50;
  v372 = xmmword_1B0027F60;
  v373 = xmmword_1B0027F70;
  __asm { FMOV            V1.2D, #1.0 }
  v370 = _Q1;
  v371 = _Q1;
  __asm { FMOV            V2.2D, #0.5 }
  v306 = _Q2;
  v368 = _Q2;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B0026E60, _Q1);
  v362 = v7;
  OUTLINED_FUNCTION_11_11((__n128)xmmword_1B0027FB0, v8);
  v352 = xmmword_1B0029EE0;
  v353 = xmmword_1B0029EF0;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B0029F00, (__n128)xmmword_1B0029F10);
  v348 = xmmword_1B0029F20;
  v349 = xmmword_1B0029F30;
  v346 = xmmword_1B0029F40;
  v347 = xmmword_1B0029F50;
  v344 = xmmword_1B0029F60;
  v345 = xmmword_1B0029F70;
  v342 = xmmword_1B0029F80;
  v343 = xmmword_1B0029F90;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B0029FA0, (__n128)xmmword_1B0029FB0);
  v338 = v9;
  v339 = xmmword_1B0029FC0;
  v336 = v10;
  v337 = v10;
  v334 = v10;
  v335 = v10;
  v332 = xmmword_1B0029FD0;
  v333 = xmmword_1B0029FE0;
  v330 = xmmword_1B0029FF0;
  v331 = xmmword_1B002A000;
  v328 = xmmword_1B002A010;
  v329 = xmmword_1B0025E90;
  v326 = xmmword_1B002A020;
  v327 = xmmword_1B002A030;
  v324 = xmmword_1B002A010;
  v325 = xmmword_1B0025E90;
  v322 = xmmword_1B002A040;
  v323 = xmmword_1B002A050;
  v320 = xmmword_1B002A060;
  v321 = xmmword_1B002A070;
  v318 = xmmword_1B002A080;
  v319 = xmmword_1B002A090;
  v307 = v10;
  OUTLINED_FUNCTION_10_8(1.0, 0.902988076, v10);
  v297 = v11;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_3(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, 200.0, v22, 0.1, 0.8, &v362, &v360, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v358,
    0,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    v297);
  OUTLINED_FUNCTION_3_29();
  v368 = v306;
  v369 = xmmword_1B0026E60;
  OUTLINED_FUNCTION_35_6(0.5, v306.n128_f64[0], v23);
  v362 = v24;
  OUTLINED_FUNCTION_14_20(v25, *(double *)v24.i64, v26);
  OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_2_21();
  v342 = xmmword_1B0029F80;
  v343 = xmmword_1B0029F90;
  v340 = xmmword_1B0029FA0;
  v341 = xmmword_1B0029FB0;
  v338 = (__n128)xmmword_1B0029F80;
  OUTLINED_FUNCTION_4_33(0.999896884, 0.99026376, v27);
  v328 = xmmword_1B002A010;
  v329 = xmmword_1B0025E90;
  v326 = xmmword_1B002A020;
  v327 = xmmword_1B002A030;
  v324 = xmmword_1B002A010;
  v325 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_8_25();
  v316 = v28;
  v317 = v28;
  v314 = v28;
  v315 = v28;
  v312 = v28;
  v313 = v28;
  v310 = v28;
  v311 = v28;
  v308 = v28;
  v309 = v28;
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_17_3(v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, 200.0, v39, 0.1, 0.8, &v362, &v360, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v358,
    0,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  v376 = xmmword_1B002A0B0;
  v377 = xmmword_1B002A0C0;
  v374 = xmmword_1B002A0D0;
  v375 = xmmword_1B0028100;
  v372 = xmmword_1B00276E0;
  v373 = xmmword_1B0026110;
  v370 = v307;
  v371 = v307;
  v368 = v306;
  v369 = xmmword_1B00271F0;
  v366 = v307;
  v367 = v307;
  v364 = v307;
  v365 = v307;
  v304 = vdupq_n_s64(0x3FE0ECE8A0000000uLL);
  v362 = v304;
  v363 = xmmword_1B0028120;
  v360 = v307;
  v361 = v307;
  v358 = (__int128)v307;
  v359 = (__int128)v307;
  v356 = v307;
  v357 = v307;
  v354 = v307;
  v355 = v307;
  v352 = xmmword_1B002A0E0;
  v353 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A0F0, (__n128)xmmword_1B002A100);
  v348 = xmmword_1B002A110;
  v349 = v40;
  v346 = xmmword_1B002A120;
  v347 = xmmword_1B002A130;
  v344 = xmmword_1B0026220;
  v345 = xmmword_1B00277A0;
  v342 = xmmword_1B0026220;
  v343 = xmmword_1B0026120;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A140, (__n128)xmmword_1B002A150);
  v338 = (__n128)xmmword_1B0029F80;
  v339 = xmmword_1B002A160;
  v336 = v41;
  v337 = v41;
  v334 = v41;
  v335 = v41;
  v332 = xmmword_1B002A170;
  v333 = xmmword_1B002A180;
  v330 = xmmword_1B002A190;
  v331 = xmmword_1B002A1A0;
  v328 = xmmword_1B002A040;
  v329 = v42;
  v326 = xmmword_1B002A1B0;
  v327 = xmmword_1B002A1C0;
  v324 = xmmword_1B002A1D0;
  v325 = v42;
  v322 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A1E0, (__n128)xmmword_1B002A1F0);
  v318 = v43;
  v319 = xmmword_1B002A200;
  v316 = v44;
  v317 = v44;
  v314 = v44;
  v315 = v44;
  v312 = v44;
  v313 = v44;
  v310 = v44;
  v311 = v44;
  v308 = v44;
  v309 = v44;
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v202 = v45 | 0x3F4CCCCD00000000;
  v303 = v46[22];
  v48 = *(float *)(v47 + 2636);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_3(v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, 350.0, v59, v48, 0.8, &v362, &v360, v202, 1061997773, &v358,
    0,
    &v356,
    &v354,
    v213,
    v216,
    v219,
    v222,
    v227,
    v232,
    v237,
    v242,
    v247,
    v252,
    v257,
    v262,
    v267,
    v272,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  v376 = xmmword_1B002A210;
  v377 = (__int128)v307;
  v374 = xmmword_1B0028190;
  v375 = xmmword_1B0028210;
  OUTLINED_FUNCTION_33_11();
  v370 = v60;
  v371 = v60;
  v368 = v60;
  v369 = xmmword_1B0027030;
  v366 = v60;
  v367 = v60;
  v364 = v60;
  v365 = v60;
  v362 = (int64x2_t)v60;
  v363 = xmmword_1B0027740;
  v360 = v60;
  v361 = v60;
  v358 = xmmword_1B0026320;
  v359 = xmmword_1B0026330;
  v356 = v60;
  v357 = v60;
  v354 = v60;
  v355 = v60;
  v352 = xmmword_1B002A0E0;
  v353 = xmmword_1B0025E90;
  v350 = xmmword_1B002A220;
  v351 = xmmword_1B002A230;
  OUTLINED_FUNCTION_27_12(0.819462717, (__n128)xmmword_1B0025E90);
  v346 = xmmword_1B002A240;
  v347 = xmmword_1B002A250;
  v344 = xmmword_1B0025E80;
  v345 = (__int128)v61;
  v342 = xmmword_1B0025E80;
  v343 = (__int128)v61;
  v340 = xmmword_1B0026220;
  v341 = xmmword_1B002A260;
  v338 = (__n128)xmmword_1B0026220;
  v339 = xmmword_1B0026120;
  OUTLINED_FUNCTION_31_8(1.0, 0.899999976, 1.0, v61);
  v332 = xmmword_1B002A270;
  v333 = xmmword_1B002A280;
  v330 = xmmword_1B002A290;
  v331 = xmmword_1B002A2A0;
  v328 = xmmword_1B002A2B0;
  v329 = v62;
  v326 = xmmword_1B002A2C0;
  v327 = v63;
  v324 = xmmword_1B002A040;
  v325 = v62;
  v322 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A2D0, (__n128)xmmword_1B002A2E0);
  v318 = xmmword_1B0029F80;
  v319 = xmmword_1B002A2F0;
  v316 = v64;
  v317 = v64;
  v314 = v64;
  v315 = v64;
  v312 = v64;
  v313 = v64;
  v310 = v64;
  v311 = v64;
  v308 = v64;
  v309 = v64;
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v302 = v65[32];
  v66 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_17_3(v67, v68, v69, v70, v71, v72, v73, v74, v66, v75, 900.0, v76, v77, 0.9, &v362, &v360, 0x3F6666663F666666, 0, &v358,
    0,
    &v356,
    &v354,
    v214,
    v217,
    v220,
    v223,
    v228,
    v233,
    v238,
    v243,
    v248,
    v253,
    v258,
    v263,
    v268,
    v273,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  v376 = (__int128)v307;
  v377 = (__int128)v307;
  OUTLINED_FUNCTION_20_21();
  v372 = xmmword_1B0028220;
  v373 = xmmword_1B0028230;
  v370 = v78;
  v371 = v78;
  v368 = v78;
  OUTLINED_FUNCTION_12_26((__n128)xmmword_1B0026FC0, 0.99988085, v78);
  v358 = xmmword_1B0027D70;
  v359 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_18_34(1.0, 0.9627316, v79);
  v350 = xmmword_1B002A300;
  v351 = xmmword_1B0028110;
  OUTLINED_FUNCTION_27_12(0.869406462, v80);
  v338 = OUTLINED_FUNCTION_13_33((__n128)xmmword_1B002A310, v81, v82, v83);
  v339 = xmmword_1B002A320;
  *(_QWORD *)&v86 = OUTLINED_FUNCTION_7_27(v338.n128_f64[0], v84, v85).n128_u64[0];
  OUTLINED_FUNCTION_19_26(v86, v87, v88, (__n128)xmmword_1B0027840);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A330, v89);
  v318 = xmmword_1B002A340;
  v319 = xmmword_1B002A350;
  OUTLINED_FUNCTION_15_6(0.999901831, 0.999879897, v90);
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v301 = v91[39];
  v92 = OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_17_3(v93, v94, v95, v96, v97, v98, v99, v100, v92, v101, 1000.0, v102, v103, 0.9, &v362, &v360, 0x3F6666663F666666, 0, &v358,
    0,
    &v356,
    &v354,
    v215,
    v218,
    v221,
    v224,
    v229,
    v234,
    v239,
    v244,
    v249,
    v254,
    v259,
    v264,
    v269,
    v274,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  v376 = (__int128)v307;
  v377 = (__int128)v307;
  OUTLINED_FUNCTION_20_21();
  v372 = xmmword_1B0028220;
  v373 = xmmword_1B0028230;
  v370 = v104;
  v371 = v104;
  v368 = v104;
  OUTLINED_FUNCTION_12_26((__n128)xmmword_1B0026FC0, v105, v104);
  v358 = xmmword_1B0027D70;
  v359 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_18_34(0.9627316, v106, v107);
  v350 = xmmword_1B002A300;
  v351 = xmmword_1B0028110;
  OUTLINED_FUNCTION_27_12(0.869406462, v108);
  v338 = OUTLINED_FUNCTION_13_33((__n128)xmmword_1B002A310, v109, v110, v111);
  v339 = xmmword_1B002A320;
  *(_QWORD *)&v114 = OUTLINED_FUNCTION_7_27(1.0, v112, v113).n128_u64[0];
  OUTLINED_FUNCTION_19_26(v114, v115, v116, v117);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A330, v118);
  v318 = xmmword_1B002A340;
  v319 = xmmword_1B002A350;
  OUTLINED_FUNCTION_15_6(0.999879897, v119, v120);
  OUTLINED_FUNCTION_12_8();
  v121 = OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_9_4(v122, v123, v124, v125, v126, v127, v128, v129, v121, v301, 1000.0, v130, v131, 0.9, &v362, &v360, 0x3F6666663F666666, 0, &v358,
    0,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  OUTLINED_FUNCTION_20_21();
  v369 = xmmword_1B0027030;
  v363 = xmmword_1B0027740;
  v358 = xmmword_1B0026320;
  v359 = xmmword_1B0026330;
  v350 = xmmword_1B002A220;
  v351 = xmmword_1B002A230;
  v344 = xmmword_1B0025E80;
  v342 = xmmword_1B0025E80;
  v341 = xmmword_1B002A260;
  v340 = xmmword_1B0026220;
  v338 = (__n128)xmmword_1B0026220;
  v339 = xmmword_1B0026120;
  v332 = xmmword_1B002A270;
  v333 = xmmword_1B002A280;
  v330 = xmmword_1B002A290;
  v331 = xmmword_1B002A2A0;
  v328 = xmmword_1B002A2B0;
  v326 = xmmword_1B002A2C0;
  v346 = xmmword_1B002A240;
  v347 = xmmword_1B002A250;
  v327 = xmmword_1B002A250;
  v320 = xmmword_1B002A2D0;
  v321 = xmmword_1B002A2E0;
  v319 = xmmword_1B002A2F0;
  v376 = xmmword_1B002A210;
  v368 = v307;
  v362 = (int64x2_t)v307;
  v318 = xmmword_1B0029F80;
  v377 = (__int128)v307;
  v372 = xmmword_1B00276E0;
  v373 = xmmword_1B0026110;
  v370 = v307;
  v371 = v307;
  v366 = v307;
  v367 = v307;
  v364 = v307;
  v365 = v307;
  v360 = v307;
  v361 = v307;
  v356 = v307;
  v357 = v307;
  v354 = v307;
  v355 = v307;
  v352 = xmmword_1B002A0E0;
  v353 = xmmword_1B0025E90;
  v348 = xmmword_1B002A110;
  v349 = xmmword_1B0025E90;
  v345 = (__int128)v307;
  v343 = (__int128)v307;
  v336 = v307;
  v337 = v307;
  v334 = v307;
  v335 = v307;
  v329 = xmmword_1B0025E90;
  v324 = xmmword_1B002A040;
  v325 = xmmword_1B0025E90;
  v322 = xmmword_1B002A040;
  v323 = xmmword_1B002A050;
  v316 = v307;
  v317 = v307;
  v314 = v307;
  v315 = v307;
  v312 = v307;
  v313 = v307;
  v310 = v307;
  v311 = v307;
  v308 = v307;
  v309 = v307;
  OUTLINED_FUNCTION_1_25();
  v225 = v132;
  OUTLINED_FUNCTION_17_26();
  v133 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_9_4(v134, v135, v136, v137, v138, v139, v140, v141, v133, v302, 900.0, v142, v143, 0.9, &v362, &v360, 0x3F6666663F666666, 0, v203,
    v206,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    v225,
    v230,
    v235,
    v240,
    v245,
    v250,
    v255,
    v260,
    v265,
    v270,
    v275,
    v277,
    v279,
    v281,
    v283,
    v285,
    v287,
    v289,
    v291,
    v293,
    v295,
    v298);
  v376 = xmmword_1B002A0B0;
  v377 = xmmword_1B002A0C0;
  v374 = xmmword_1B002A0D0;
  v375 = xmmword_1B0028100;
  OUTLINED_FUNCTION_33_11();
  v370 = v307;
  v371 = v307;
  v368 = v306;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B00271F0, v307);
  v362 = v304;
  v363 = xmmword_1B0028120;
  v360 = (__n128)v144;
  v361 = (__n128)v144;
  v358 = v144;
  v359 = v144;
  v356 = (__n128)v144;
  v357 = (__n128)v144;
  v354 = (__n128)v144;
  v355 = (__n128)v144;
  v352 = xmmword_1B002A0E0;
  v353 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A360, (__n128)xmmword_1B002A370);
  v348 = xmmword_1B002A110;
  v349 = v145;
  v346 = xmmword_1B002A120;
  v347 = xmmword_1B002A130;
  v344 = xmmword_1B002A380;
  v345 = xmmword_1B002A390;
  v342 = xmmword_1B002A3A0;
  v343 = xmmword_1B002A3B0;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A3C0, (__n128)xmmword_1B002A3D0);
  __asm { FMOV            V1.2D, #0.75 }
  v338 = (__n128)xmmword_1B002A3E0;
  v339 = _Q1;
  OUTLINED_FUNCTION_31_8(0.662596464, *(double *)&_Q1, v147, v148);
  v332 = xmmword_1B002A170;
  v333 = xmmword_1B002A180;
  v330 = xmmword_1B002A190;
  v331 = xmmword_1B002A1A0;
  v328 = xmmword_1B002A040;
  v329 = v149;
  v326 = xmmword_1B002A1B0;
  v327 = xmmword_1B002A1C0;
  v324 = xmmword_1B002A1D0;
  v325 = v149;
  v322 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  v305 = (__n128)vdupq_n_s64(0x3FD3333340000000uLL);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A3F0, v305);
  v318 = v150;
  v319 = xmmword_1B002A400;
  v316 = v151;
  v317 = v151;
  v314 = v151;
  v315 = v151;
  v312 = v151;
  v313 = v151;
  v310 = v151;
  v311 = v151;
  v308 = v151;
  v309 = v151;
  OUTLINED_FUNCTION_1_25();
  v226 = v152;
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_9_4(v153, v154, v155, v156, v157, v158, v159, v160, v161, v303, 350.0, v162, v48, 0.8, &v362, &v360, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v204,
    v207,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    v226,
    v231,
    v236,
    v241,
    v246,
    v251,
    v256,
    v261,
    v266,
    v271,
    v276,
    v278,
    v280,
    v282,
    v284,
    v286,
    v288,
    v290,
    v292,
    v294,
    v296,
    v299);
  OUTLINED_FUNCTION_3_29();
  v368 = v306;
  v369 = xmmword_1B0026E60;
  OUTLINED_FUNCTION_35_6(v306.n128_f64[0], 0.5, v163);
  v362 = v164;
  OUTLINED_FUNCTION_14_20(*(double *)v164.i64, v165, v166);
  v352 = xmmword_1B002A410;
  v353 = xmmword_1B002A420;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A430, (__n128)xmmword_1B002A440);
  v348 = xmmword_1B0029F20;
  v349 = xmmword_1B0029F30;
  v346 = xmmword_1B002A450;
  v347 = (__int128)v305;
  v344 = xmmword_1B002A460;
  v345 = v167;
  v342 = xmmword_1B002A470;
  v343 = xmmword_1B002A480;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A490, (__n128)xmmword_1B002A4A0);
  v338 = (__n128)xmmword_1B002A4B0;
  v339 = xmmword_1B002A4C0;
  v336 = v168;
  v337 = v168;
  v334 = v168;
  v335 = v168;
  v332 = xmmword_1B0029FD0;
  v333 = xmmword_1B0029FE0;
  v330 = xmmword_1B0029FF0;
  v331 = xmmword_1B002A000;
  v328 = xmmword_1B002A010;
  v329 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_29_23(0.5, (__n128)xmmword_1B002A010);
  v325 = v169;
  v322 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  __asm { FMOV            V1.2D, #0.25 }
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A4D0, _Q1);
  v318 = xmmword_1B002A4E0;
  v319 = xmmword_1B002A070;
  v316 = v171;
  v317 = v171;
  v314 = v171;
  v315 = v171;
  v312 = v171;
  v313 = v171;
  v310 = v171;
  v311 = v171;
  v308 = v171;
  v309 = v171;
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_9_4(v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, 200.0, v182, 0.1, 0.8, &v362, &v360, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v205,
    v208,
    v209,
    v211,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    (uint64_t)&v308);
  v376 = xmmword_1B0029EC0;
  v377 = xmmword_1B0029ED0;
  v374 = xmmword_1B0027F40;
  v375 = xmmword_1B0027F50;
  v372 = xmmword_1B0027F60;
  v373 = xmmword_1B0027F70;
  OUTLINED_FUNCTION_32_8();
  v370 = v307;
  v371 = v307;
  v368 = v306;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B0026E60, v307);
  v362 = v183;
  OUTLINED_FUNCTION_11_11((__n128)xmmword_1B0027FB0, v184);
  OUTLINED_FUNCTION_2_21();
  v342 = xmmword_1B0029F80;
  v343 = xmmword_1B0029F90;
  v340 = xmmword_1B0029FA0;
  v341 = xmmword_1B0029FB0;
  v338 = (__n128)xmmword_1B0029F80;
  *(_QWORD *)&v186 = OUTLINED_FUNCTION_4_33(0.99026376, 0.999896884, v185).n128_u64[0];
  v328 = xmmword_1B002A010;
  v329 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_29_23(v186, (__n128)xmmword_1B002A010);
  v325 = v187;
  *(_QWORD *)&v188 = OUTLINED_FUNCTION_8_25().n128_u64[0];
  OUTLINED_FUNCTION_10_8(v188, v189, v190);
  v300 = v191;
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_6_22();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v192, v193, v194, v195, v196, v197, v198, v199, -90.0, (__n128)xmmword_1B002A0A0, 200.0, v200, 0.1, 0.8, 0.9, 0.8, &v362, &v360,
    0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v358,
    0,
    v210,
    v212,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    &v318,
    &v316,
    &v314,
    &v312,
    1112014848,
    1097859072,
    &v310,
    v300);
  return v0;
}

void sub_1AFBC1068()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[9];

  v18[0] = 5;
  sub_1AFBC1880();
  sub_1AFBC1880();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 30, 0, 812, 50, 15, 1, 7, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFBC1880()
{
  uint64_t v0;
  double v7;
  __n128 v8;
  int64x2_t v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  double v18;
  __n128 v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  double v28;
  __n128 v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  int64x2_t v36;
  _OWORD *v37;
  unsigned int v38;
  __n128 *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  double v48;
  __n128 v49;
  float v50;
  float v51;
  float v52;
  __n128 v53;
  double v54;
  double v55;
  __n128 v56;
  _OWORD *v57;
  uint64_t v58;
  float v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  double v68;
  __n128 v69;
  float v70;
  float v71;
  float v72;
  float v73;
  double v74;
  __n128 v75;
  __n128 *v76;
  uint64_t v77;
  float v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  double v87;
  __n128 v88;
  float v89;
  float v90;
  __n128 v91;
  double v92;
  __n128 v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  _OWORD *v100;
  uint64_t v101;
  double v102;
  __n128 v103;
  float v104;
  float v105;
  float v106;
  float v107;
  float v108;
  float v109;
  double v110;
  __n128 v111;
  __int128 v112;
  __n128 v113;
  uint64_t v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  uint64_t v122;
  double v123;
  __n128 v124;
  float v125;
  float v126;
  float v127;
  float v128;
  __n128 v129;
  __n128 v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  uint64_t v138;
  double v139;
  __n128 v140;
  float v141;
  float v142;
  float v143;
  float v144;
  __n128 v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  uint64_t v154;
  double v155;
  __n128 v156;
  float v157;
  float v158;
  float v159;
  float v160;
  float v161;
  float v162;
  double v163;
  __int128 v164;
  double v165;
  __n128 v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  uint64_t v174;
  double v175;
  __n128 v176;
  float v177;
  float v178;
  float v179;
  float v180;
  float v181;
  float v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  uint64_t v190;
  double v191;
  __n128 v192;
  float v193;
  float v194;
  float v195;
  float v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  uint64_t v204;
  double v205;
  __n128 v206;
  float v207;
  float v208;
  __n128 v209;
  double v210;
  __n128 v211;
  double v212;
  __n128 v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  uint64_t v221;
  double v222;
  __n128 v223;
  float v224;
  float v225;
  float v226;
  float v227;
  float v228;
  float v229;
  double v230;
  __n128 v231;
  __int128 v232;
  __n128 v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  uint64_t v241;
  double v242;
  __n128 v243;
  float v244;
  float v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  uint64_t v253;
  double v254;
  float v255;
  float v256;
  float v257;
  __n128 v258;
  double v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  uint64_t v267;
  double v268;
  float v269;
  __int128 v270;
  int v271;
  uint64_t v272;
  _OWORD *v273;
  _OWORD *v274;
  uint64_t v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  uint64_t v283;
  double v284;
  __n128 v285;
  float v286;
  float v287;
  float v288;
  float v289;
  float v290;
  float v291;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  _OWORD *v300;
  _OWORD *v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  _OWORD *v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  _OWORD *v416;
  _OWORD *v417;
  _OWORD *v418;
  _OWORD *v419;
  _OWORD *v420;
  _OWORD *v421;
  _OWORD *v422;
  _OWORD *v423;
  _OWORD *v424;
  _OWORD *v425;
  _OWORD *v426;
  _OWORD *v427;
  _OWORD *v428;
  _OWORD *v429;
  _OWORD *v430;
  _OWORD *v431;
  _OWORD *v432;
  _OWORD *v433;
  _OWORD *v434;
  _OWORD *v435;
  _OWORD *v436;
  _OWORD *v437;
  _OWORD *v438;
  _OWORD *v439;
  _OWORD *v440;
  _OWORD *v441;
  _OWORD *v442;
  _OWORD *v443;
  _OWORD *v444;
  _OWORD *v445;
  _OWORD *v446;
  _OWORD *v447;
  _OWORD *v448;
  _OWORD *v449;
  _OWORD *v450;
  _OWORD *v451;
  _OWORD *v452;
  _OWORD *v453;
  _OWORD *v454;
  _OWORD *v455;
  _OWORD *v456;
  _OWORD *v457;
  _OWORD *v458;
  _OWORD *v459;
  _OWORD *v460;
  _OWORD *v461;
  _OWORD *v462;
  _OWORD *v463;
  _OWORD *v464;
  _OWORD *v465;
  _OWORD *v466;
  _OWORD *v467;
  _OWORD *v468;
  _OWORD *v469;
  _OWORD *v470;
  _OWORD *v471;
  _OWORD *v472;
  _OWORD *v473;
  _OWORD *v474;
  _OWORD *v475;
  _OWORD *v476;
  _OWORD *v477;
  _OWORD *v478;
  _OWORD *v479;
  _OWORD *v480;
  _OWORD *v481;
  _OWORD *v482;
  _OWORD *v483;
  _OWORD *v484;
  _OWORD *v485;
  _OWORD *v486;
  _OWORD *v487;
  _OWORD *v488;
  _OWORD *v489;
  _OWORD *v490;
  _OWORD *v491;
  _OWORD *v492;
  _OWORD *v493;
  _OWORD *v494;
  _OWORD *v495;
  _OWORD *v496;
  _OWORD *v497;
  _OWORD *v498;
  _OWORD *v499;
  _OWORD *v500;
  _OWORD *v501;
  _OWORD *v502;
  _OWORD *v503;
  _OWORD *v504;
  _OWORD *v505;
  _OWORD *v506;
  _OWORD *v507;
  _OWORD *v508;
  _OWORD *v509;
  _OWORD *v510;
  _OWORD *v511;
  _OWORD *v512;
  _OWORD *v513;
  _OWORD *v514;
  _OWORD *v515;
  _OWORD *v516;
  _OWORD *v517;
  _OWORD *v518;
  _OWORD *v519;
  _OWORD *v520;
  _OWORD *v521;
  _OWORD *v522;
  _OWORD *v523;
  _OWORD *v524;
  _OWORD *v525;
  _OWORD *v526;
  _OWORD *v527;
  _OWORD *v528;
  _OWORD *v529;
  _OWORD *v530;
  _OWORD *v531;
  _OWORD *v532;
  _OWORD *v533;
  _OWORD *v534;
  _OWORD *v535;
  _OWORD *v536;
  _OWORD *v537;
  _OWORD *v538;
  _OWORD *v539;
  _OWORD *v540;
  _OWORD *v541;
  _OWORD *v542;
  _OWORD *v543;
  _OWORD *v544;
  _OWORD *v545;
  _OWORD *v546;
  _OWORD *v547;
  _OWORD *v548;
  _OWORD *v549;
  _OWORD *v550;
  _OWORD *v551;
  _OWORD *v552;
  _OWORD *v553;
  _OWORD *v554;
  _OWORD *v555;
  _OWORD *v556;
  _OWORD *v557;
  _OWORD *v558;
  _OWORD *v559;
  _OWORD *v560;
  _OWORD *v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  _OWORD *v582;
  _OWORD *v583;
  _OWORD *v584;
  _OWORD *v585;
  _OWORD *v586;
  _OWORD *v587;
  _OWORD *v588;
  _OWORD *v589;
  _OWORD *v590;
  _OWORD *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  float v602;
  __n128 v603;
  __n128 v604;
  __n128 v605;
  __n128 v606;
  __n128 v607;
  __n128 v608;
  __n128 v609;
  __n128 v610;
  __n128 v611;
  __n128 v612;
  __n128 v613;
  __n128 v614;
  __n128 v615;
  __n128 v616;
  __n128 v617;
  __n128 v618;
  __n128 v619;
  __n128 v620;
  __n128 v621;
  __n128 v622;
  __n128 v623;
  __n128 v624;
  __n128 v625;
  __n128 v626;
  __n128 v627;
  __n128 v628;
  __n128 v629;
  __n128 v630;
  __n128 v631;
  __n128 v632;
  __n128 v633;
  __n128 v634;
  __n128 v635;
  __n128 v636;
  __n128 v637;
  __n128 v638;
  __n128 v639;
  __n128 v640;
  __n128 v641;
  __n128 v642;
  __n128 v643;
  __n128 v644;
  __n128 v645;
  __n128 v646;
  __n128 v647;
  __n128 v648;
  __n128 v649;
  __n128 v650;
  __n128 v651;
  __n128 v652;
  __n128 v653;
  __n128 v654;
  __n128 v655;
  __n128 v656;
  int64x2_t v657;
  __int128 v658;
  __int128 v659;
  __int128 v660;
  __int128 v661;
  __int128 v662;
  __int128 v663;
  __int128 v664;
  __n128 v665;
  __n128 v666;
  int64x2_t v667;
  __int128 v668;
  __int128 v669;
  __int128 v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  __int128 v674;
  __int128 v675;
  __int128 v676;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v675 = xmmword_1B0025DD0;
  v676 = xmmword_1B0025DE0;
  v673 = xmmword_1B0025DF0;
  v674 = xmmword_1B0025E00;
  v671 = xmmword_1B0025E10;
  v672 = xmmword_1B0025E20;
  v669 = xmmword_1B002A790;
  v670 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v605 = _Q0;
  v667 = (int64x2_t)_Q0;
  v668 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v606 = _Q1;
  OUTLINED_FUNCTION_19_27(_Q0.n128_f64[0], _Q1);
  OUTLINED_FUNCTION_28_18((__n128)xmmword_1B0027740, v7, (__n128)xmmword_1B002A7B0);
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B0025E80, v8);
  v657 = v9;
  v658 = xmmword_1B0025E90;
  v655 = (__n128)v9;
  v656 = (__n128)v9;
  v653 = (__n128)v9;
  v654 = (__n128)v9;
  v651 = (__n128)v9;
  v652 = (__n128)v9;
  v649 = (__n128)v9;
  v650 = (__n128)v9;
  v647 = (__n128)v9;
  v648 = (__n128)v9;
  v645 = (__n128)v9;
  v646 = (__n128)v9;
  v643 = (__n128)v9;
  v644 = (__n128)v9;
  v641 = (__n128)v9;
  v642 = (__n128)v9;
  v639 = (__n128)v9;
  v640 = (__n128)v9;
  v637 = (__n128)v9;
  v638 = (__n128)v9;
  v635 = (__n128)v9;
  v636 = (__n128)v9;
  v633 = (__n128)v9;
  v634 = (__n128)v9;
  v631 = (__n128)v9;
  v632 = (__n128)v9;
  v629 = (__n128)v9;
  v630 = (__n128)v9;
  v627 = (__n128)v9;
  v628 = (__n128)v9;
  v625 = (__n128)v9;
  v626 = (__n128)v9;
  v623 = (__n128)v9;
  v624 = (__n128)v9;
  v621 = (__n128)v9;
  v622 = (__n128)v9;
  v619 = (__n128)v9;
  v620 = (__n128)v9;
  v617 = (__n128)v9;
  v618 = (__n128)v9;
  v615 = (__n128)v9;
  v616 = (__n128)v9;
  v613 = (__n128)v9;
  v614 = (__n128)v9;
  v611 = (__n128)v9;
  v612 = (__n128)v9;
  v609 = (__n128)v9;
  v610 = (__n128)v9;
  v607 = (__n128)v9;
  v608 = (__n128)v9;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_15_2(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v661, &v659, 0x3F8000003F000000,
    1045220557,
    &v657,
    1065353216,
    &v655,
    &v653,
    &v651,
    &v649,
    &v647,
    &v645,
    &v643,
    &v641,
    &v639,
    &v637,
    &v635,
    &v633,
    &v631,
    &v629,
    &v627,
    &v625,
    &v623,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  OUTLINED_FUNCTION_4_34();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_23_28();
  OUTLINED_FUNCTION_15_2(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, &v661, &v659, 0x3F8000003F000000,
    1045220557,
    &v657,
    1065353216,
    &v655,
    &v653,
    &v651,
    &v649,
    &v647,
    &v645,
    &v643,
    &v641,
    &v639,
    &v637,
    &v635,
    &v633,
    &v631,
    &v629,
    &v627,
    &v625,
    &v623,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    v554,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  v675 = xmmword_1B0025F10;
  v676 = (__int128)v606;
  v673 = xmmword_1B002A7C0;
  v674 = xmmword_1B0025F30;
  v671 = xmmword_1B0025F40;
  v672 = (__int128)v606;
  v669 = xmmword_1B002A790;
  v670 = xmmword_1B002A7D0;
  OUTLINED_FUNCTION_29_24(v605, (__n128)xmmword_1B00271F0, v606);
  v663 = xmmword_1B0026900;
  v664 = xmmword_1B0026910;
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B0025F80, (__n128)xmmword_1B0027840);
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B002A7E0, (__n128)xmmword_1B0025FA0);
  v657 = v36;
  v658 = xmmword_1B0025E90;
  v655 = (__n128)v36;
  v656 = (__n128)v36;
  v653 = (__n128)v36;
  v654 = (__n128)v36;
  v651 = (__n128)v36;
  v652 = (__n128)v36;
  v649 = (__n128)v36;
  v650 = (__n128)v36;
  v647 = (__n128)v36;
  v648 = (__n128)v36;
  v645 = (__n128)v36;
  v646 = (__n128)v36;
  v643 = (__n128)v36;
  v644 = (__n128)v36;
  v641 = (__n128)v36;
  v642 = (__n128)v36;
  v639 = (__n128)v36;
  v640 = (__n128)v36;
  v637 = (__n128)v36;
  v638 = (__n128)v36;
  v635 = (__n128)v36;
  v636 = (__n128)v36;
  v633 = (__n128)v36;
  v634 = (__n128)v36;
  v631 = (__n128)v36;
  v632 = (__n128)v36;
  v629 = (__n128)v36;
  v630 = (__n128)v36;
  v627 = (__n128)v36;
  v628 = (__n128)v36;
  v625 = (__n128)v36;
  v626 = (__n128)v36;
  v623 = (__n128)v36;
  v624 = (__n128)v36;
  v621 = (__n128)v36;
  v622 = (__n128)v36;
  v619 = (__n128)v36;
  v620 = (__n128)v36;
  v617 = (__n128)v36;
  v618 = (__n128)v36;
  v615 = (__n128)v36;
  v616 = (__n128)v36;
  v613 = (__n128)v36;
  v614 = (__n128)v36;
  v611 = (__n128)v36;
  v612 = (__n128)v36;
  v609 = (__n128)v36;
  v610 = (__n128)v36;
  v607 = (__n128)v36;
  v608 = (__n128)v36;
  OUTLINED_FUNCTION_2_22();
  v327 = v37;
  OUTLINED_FUNCTION_12_8();
  v293 = v38 | 0x3F4CCCCD00000000;
  v604 = v39[206];
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_15_2(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, 0.8, 0.8, 0.7, &v661, &v659, v293,
    1045220557,
    &v657,
    1065353216,
    &v655,
    &v653,
    v327,
    v340,
    v353,
    v366,
    v379,
    v392,
    v405,
    v418,
    v431,
    v444,
    v457,
    v470,
    v483,
    v496,
    v509,
    v522,
    v530,
    v537,
    &v615,
    &v613,
    &v611,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  v675 = xmmword_1B0025FE0;
  v676 = (__int128)v606;
  v673 = xmmword_1B0025FF0;
  v674 = xmmword_1B0026000;
  v671 = xmmword_1B002A7F0;
  v672 = xmmword_1B0028210;
  v669 = xmmword_1B002A800;
  v670 = xmmword_1B002A810;
  OUTLINED_FUNCTION_29_24((__n128)vdupq_n_s64(0x3FE88B6D00000000uLL), (__n128)xmmword_1B0026EA0, v606);
  v663 = (__int128)v53;
  v664 = (__int128)v53;
  OUTLINED_FUNCTION_28_18((__n128)xmmword_1B00277B0, v54, v53);
  OUTLINED_FUNCTION_3_30((__n128)xmmword_1B0026050, v55, v56);
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_2_22();
  v328 = v57;
  OUTLINED_FUNCTION_12_8();
  v59 = *(float *)(v58 + 2528);
  OUTLINED_FUNCTION_25_11();
  OUTLINED_FUNCTION_15_2(v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, 0.8, v59, v72, v73, &v661, &v659, 0x3F59999A3F59999ALL,
    0,
    &v657,
    0,
    &v655,
    &v653,
    v328,
    v341,
    v354,
    v367,
    v380,
    v393,
    v406,
    v419,
    v432,
    v445,
    v458,
    v471,
    v484,
    v497,
    v510,
    v523,
    v531,
    v538,
    &v661,
    &v613,
    v555,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B002A820, (__n128)xmmword_1B00260D0);
  v673 = xmmword_1B00260E0;
  v674 = xmmword_1B00260F0;
  v671 = xmmword_1B0026100;
  v672 = xmmword_1B0026110;
  v669 = xmmword_1B002A830;
  v670 = xmmword_1B0025E50;
  v667 = (int64x2_t)v606;
  OUTLINED_FUNCTION_16_28((__n128)xmmword_1B0026FC0, 1.0, v606);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B0026150, (__n128)xmmword_1B002A840);
  OUTLINED_FUNCTION_3_30((__n128)vdupq_n_s64(0x3FEF9F9F80000000uLL), v74, v75);
  OUTLINED_FUNCTION_30_14();
  OUTLINED_FUNCTION_1_26();
  HIDWORD(v294) = 1063675494;
  OUTLINED_FUNCTION_17_11();
  v603 = v76[27];
  v78 = *(float *)(v77 + 2616);
  OUTLINED_FUNCTION_25_11();
  OUTLINED_FUNCTION_15_2(v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, 0.8, v78, v78, 0.7, &v661, &v659, v294,
    0,
    &v657,
    0,
    v307,
    v317,
    v329,
    v342,
    v355,
    v368,
    v381,
    v394,
    v407,
    v420,
    v433,
    v446,
    v459,
    v472,
    v485,
    v498,
    v511,
    &v621,
    &v619,
    v539,
    v544,
    &v613,
    &v611,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B002A850, (__n128)xmmword_1B00261D0);
  v673 = xmmword_1B002A860;
  v674 = xmmword_1B00261F0;
  OUTLINED_FUNCTION_31_15((__n128)xmmword_1B0026200, (__n128)xmmword_1B0026210);
  v667 = (int64x2_t)v91;
  OUTLINED_FUNCTION_16_28((__n128)xmmword_1B0027030, v92, v91);
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B0027040, (__n128)xmmword_1B002A870);
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B002A880, (__n128)xmmword_1B002A890);
  v657 = (int64x2_t)xmmword_1B0026260;
  v658 = xmmword_1B0026270;
  OUTLINED_FUNCTION_0_28(0.985039473, 0.98524636, v93);
  OUTLINED_FUNCTION_30_14();
  OUTLINED_FUNCTION_8_26();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_27();
  OUTLINED_FUNCTION_15_2(v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, &v661, &v659, 0x3F6666663F666666,
    0,
    v300,
    v302,
    v308,
    v318,
    v330,
    v343,
    v356,
    v369,
    v382,
    v395,
    v408,
    v421,
    v434,
    v447,
    v460,
    v473,
    v486,
    v499,
    v512,
    v524,
    v532,
    v540,
    v545,
    &v613,
    &v611,
    v562,
    v572,
    v582,
    v592);
  OUTLINED_FUNCTION_22_11((__n128)vdupq_n_s64(0x3FECBCBCC0000000uLL), (__n128)xmmword_1B00262C0);
  v673 = xmmword_1B002A8A0;
  v674 = xmmword_1B0025F70;
  v671 = xmmword_1B00262E0;
  v672 = xmmword_1B0027420;
  OUTLINED_FUNCTION_32_9((__n128)xmmword_1B0026120);
  OUTLINED_FUNCTION_16_28((__n128)xmmword_1B0027030, v110, v111);
  v661 = v112;
  v662 = xmmword_1B00277B0;
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B002A8B0, (__n128)xmmword_1B002A8C0);
  v657 = (int64x2_t)xmmword_1B0026320;
  v658 = xmmword_1B0027440;
  OUTLINED_FUNCTION_0_28(0.970078886, 0.97049278, v113);
  OUTLINED_FUNCTION_12_8();
  v602 = *(float *)(v114 + 3264);
  OUTLINED_FUNCTION_24_19();
  OUTLINED_FUNCTION_15_2(v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v78, v128, v78, &v661, &v659, 0x3F6666663F666666,
    0,
    &v657,
    0,
    &v655,
    &v653,
    &v651,
    &v649,
    &v647,
    &v645,
    &v643,
    &v641,
    &v639,
    &v637,
    &v635,
    &v633,
    &v631,
    &v629,
    &v627,
    &v625,
    &v623,
    &v621,
    &v659,
    &v617,
    &v661,
    &v613,
    &v611,
    v563,
    v573,
    v583,
    v593);
  OUTLINED_FUNCTION_11_34();
  v673 = xmmword_1B0026370;
  v674 = (__int128)v606;
  v671 = (__int128)v606;
  v672 = (__int128)v606;
  OUTLINED_FUNCTION_13_34(0.449999928, v606);
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B0025E80, v129);
  v657 = (int64x2_t)xmmword_1B0026380;
  v658 = xmmword_1B0025F70;
  v655 = v130;
  v656 = v130;
  v653 = v130;
  v654 = v130;
  v651 = v130;
  v652 = v130;
  v649 = v130;
  v650 = v130;
  v647 = v130;
  v648 = v130;
  v645 = v130;
  v646 = v130;
  v643 = v130;
  v644 = v130;
  v641 = v130;
  v642 = v130;
  v639 = v130;
  v640 = v130;
  v637 = v130;
  v638 = v130;
  v635 = v130;
  v636 = v130;
  v633 = v130;
  v634 = v130;
  v631 = v130;
  v632 = v130;
  v629 = v130;
  v630 = v130;
  v627 = v130;
  v628 = v130;
  v625 = v130;
  v626 = v130;
  v623 = v130;
  v624 = v130;
  v621 = v130;
  v622 = v130;
  v619 = v130;
  v620 = v130;
  v617 = v130;
  v618 = v130;
  v615 = v130;
  v616 = v130;
  v613 = v130;
  v614 = v130;
  v611 = v130;
  v612 = v130;
  v609 = v130;
  v610 = v130;
  v607 = v130;
  v608 = v130;
  HIDWORD(v295) = 1063675494;
  OUTLINED_FUNCTION_17_11();
  OUTLINED_FUNCTION_20_22();
  OUTLINED_FUNCTION_15_2(v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v78, v78, &v661, &v659, v295,
    0,
    &v657,
    0,
    &v655,
    &v653,
    &v651,
    &v649,
    &v647,
    &v645,
    &v643,
    &v641,
    &v639,
    &v637,
    &v635,
    &v633,
    &v631,
    &v629,
    &v627,
    &v625,
    &v623,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  OUTLINED_FUNCTION_11_34();
  v673 = xmmword_1B00263C0;
  v674 = xmmword_1B00263D0;
  v671 = xmmword_1B00263E0;
  v672 = xmmword_1B00263F0;
  OUTLINED_FUNCTION_13_34(0.962097347, v606);
  v659 = xmmword_1B0026220;
  OUTLINED_FUNCTION_7_28(0.999995947, v145);
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_2_22();
  v331 = v146;
  HIDWORD(v296) = 1063675494;
  OUTLINED_FUNCTION_17_11();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_15_2(v147, v148, v149, v150, v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, &v661, &v659, v296,
    0,
    &v657,
    0,
    &v655,
    &v653,
    v331,
    v344,
    v357,
    v370,
    v383,
    v396,
    v409,
    v422,
    v435,
    v448,
    v461,
    v474,
    v487,
    v500,
    v513,
    v525,
    v533,
    v541,
    &v615,
    &v613,
    v556,
    v564,
    v574,
    v584,
    v594);
  OUTLINED_FUNCTION_11_34();
  v673 = xmmword_1B00263C0;
  v674 = xmmword_1B00263D0;
  v671 = xmmword_1B00263E0;
  v672 = xmmword_1B00263F0;
  v669 = (__int128)v606;
  v670 = (__int128)v606;
  v667 = (int64x2_t)v606;
  v668 = xmmword_1B0026FC0;
  OUTLINED_FUNCTION_19_27(1.0, v606);
  OUTLINED_FUNCTION_28_18((__n128)xmmword_1B002A8D0, v163, (__n128)xmmword_1B0026220);
  v659 = v164;
  OUTLINED_FUNCTION_7_28(v165, v166);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_29(v167, v168, v169, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, &v661, &v659, 0x3F6666663F666666,
    0,
    &v657,
    0,
    v309,
    v319,
    v332,
    v345,
    v358,
    v371,
    v384,
    v397,
    v410,
    v423,
    v436,
    v449,
    v462,
    v475,
    v488,
    v501,
    v514,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    v565,
    v575,
    v585,
    v595);
  OUTLINED_FUNCTION_11_34();
  v673 = xmmword_1B0026440;
  v674 = (__int128)v606;
  v671 = (__int128)v606;
  v672 = (__int128)v606;
  v669 = (__int128)v606;
  v670 = (__int128)v606;
  v667 = (int64x2_t)v606;
  v668 = xmmword_1B0026FC0;
  v665 = v606;
  v666 = v606;
  v663 = (__int128)v606;
  v664 = (__int128)v606;
  v661 = (__int128)v606;
  v662 = xmmword_1B00277B0;
  v659 = (__int128)v606;
  v660 = (__int128)v606;
  v657 = (int64x2_t)xmmword_1B0026380;
  v658 = xmmword_1B0025F70;
  v655 = v606;
  v656 = v606;
  v653 = v606;
  v654 = v606;
  v651 = v606;
  v652 = v606;
  v649 = v606;
  v650 = v606;
  v647 = v606;
  v648 = v606;
  v645 = v606;
  v646 = v606;
  v643 = v606;
  v644 = v606;
  v641 = v606;
  v642 = v606;
  v639 = v606;
  v640 = v606;
  v637 = v606;
  v638 = v606;
  v635 = v606;
  v636 = v606;
  v633 = v606;
  v634 = v606;
  v631 = v606;
  v632 = v606;
  v629 = v606;
  v630 = v606;
  v627 = v606;
  v628 = v606;
  v625 = v606;
  v626 = v606;
  v623 = v606;
  v624 = v606;
  v621 = v606;
  v622 = v606;
  v619 = v606;
  v620 = v606;
  v617 = v606;
  v618 = v606;
  v615 = v606;
  v616 = v606;
  v613 = v606;
  v614 = v606;
  v611 = v606;
  v612 = v606;
  v609 = v606;
  v610 = v606;
  v607 = v606;
  v608 = v606;
  OUTLINED_FUNCTION_12_27();
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_20_22();
  OUTLINED_FUNCTION_29(v183, v184, v185, v186, v187, v188, v189, v190, v191, v192, v193, v194, v195, v196, v59, v78, &v661, &v659, 0x3F6666663F666666,
    0,
    &v657,
    v303,
    v310,
    v320,
    v333,
    v346,
    v359,
    v372,
    v385,
    v398,
    v411,
    v424,
    v437,
    v450,
    v463,
    v476,
    v489,
    v502,
    v515,
    v526,
    v534,
    v542,
    v546,
    v550,
    v557,
    v566,
    v576,
    v586,
    v596);
  OUTLINED_FUNCTION_22_11((__n128)vdupq_n_s64(0x3FEC9C9CC0000000uLL), (__n128)xmmword_1B002A8E0);
  v673 = xmmword_1B002A8F0;
  v674 = xmmword_1B0025FA0;
  v671 = xmmword_1B002A900;
  v672 = xmmword_1B002A910;
  v669 = (__int128)v606;
  v670 = xmmword_1B0026120;
  v667 = (int64x2_t)v606;
  v668 = xmmword_1B0027030;
  v665 = v606;
  v666 = v606;
  v663 = (__int128)v606;
  v664 = (__int128)v606;
  v661 = (__int128)v606;
  v662 = xmmword_1B00277B0;
  v659 = xmmword_1B002A920;
  v660 = xmmword_1B0025FA0;
  v657 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v658 = xmmword_1B00264D0;
  v655 = v606;
  v656 = v606;
  v653 = v606;
  v654 = v606;
  v651 = v606;
  v652 = v606;
  v649 = v606;
  v650 = v606;
  v647 = v606;
  v648 = v606;
  v645 = v606;
  v646 = v606;
  v643 = v606;
  v644 = v606;
  v641 = v606;
  v642 = v606;
  v639 = v606;
  v640 = v606;
  v637 = v606;
  v638 = v606;
  v635 = v606;
  v636 = v606;
  v633 = v606;
  v634 = v606;
  v631 = v606;
  v632 = v606;
  v629 = v606;
  v630 = v606;
  v627 = v606;
  v628 = v606;
  v625 = v606;
  v626 = v606;
  v623 = v606;
  v624 = v606;
  v621 = v606;
  v622 = v606;
  v619 = v606;
  v620 = v606;
  v617 = v606;
  v618 = v606;
  v615 = v606;
  v616 = v606;
  v613 = v606;
  v614 = v606;
  v611 = v606;
  v612 = v606;
  v609 = v606;
  v610 = v606;
  v607 = v606;
  v608 = v606;
  OUTLINED_FUNCTION_12_27();
  OUTLINED_FUNCTION_5_27();
  HIDWORD(v297) = 1063675494;
  OUTLINED_FUNCTION_17_11();
  OUTLINED_FUNCTION_24_19();
  OUTLINED_FUNCTION_29(v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, v207, v208, 0.7, v78, v78, v59, &v661, &v659, v297,
    0,
    &v657,
    v304,
    v311,
    v321,
    v334,
    v347,
    v360,
    v373,
    v386,
    v399,
    v412,
    v425,
    v438,
    v451,
    v464,
    v477,
    v490,
    v503,
    v516,
    v527,
    v535,
    v543,
    v547,
    v551,
    v558,
    v567,
    v577,
    v587,
    v597);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B002A940, (__n128)xmmword_1B0027B30);
  v673 = xmmword_1B002A950;
  v674 = xmmword_1B002A960;
  OUTLINED_FUNCTION_31_15((__n128)xmmword_1B002A970, (__n128)xmmword_1B002A980);
  v667 = (int64x2_t)v209;
  OUTLINED_FUNCTION_26_27((__n128)xmmword_1B0027030, v210, v209);
  v663 = xmmword_1B0026560;
  v664 = (__int128)v211;
  OUTLINED_FUNCTION_28_18((__n128)xmmword_1B0027FF0, v212, v211);
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B002A990, (__n128)xmmword_1B002A9A0);
  OUTLINED_FUNCTION_6_23((__n128)vdupq_n_s64(0x3FEDEF5480000000uLL), (__n128)xmmword_1B00265A0, v213);
  OUTLINED_FUNCTION_8_26();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_27();
  OUTLINED_FUNCTION_29(v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, &v661, &v659, 0x3F6666663F666666,
    0,
    v301,
    v305,
    v312,
    v322,
    v335,
    v348,
    v361,
    v374,
    v387,
    v400,
    v413,
    v426,
    v439,
    v452,
    v465,
    v478,
    v491,
    v504,
    v517,
    v528,
    v536,
    &v617,
    v548,
    v552,
    v559,
    v568,
    v578,
    v588,
    v598);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B0026600, (__n128)xmmword_1B0026610);
  v673 = xmmword_1B0027140;
  v674 = xmmword_1B0027150;
  v671 = xmmword_1B0026640;
  v672 = xmmword_1B0026650;
  OUTLINED_FUNCTION_32_9((__n128)xmmword_1B0026130);
  OUTLINED_FUNCTION_26_27((__n128)xmmword_1B0026FC0, v230, v231);
  v663 = xmmword_1B0026220;
  v664 = v232;
  v661 = v232;
  v662 = xmmword_1B00277B0;
  OUTLINED_FUNCTION_18_35((__n128)xmmword_1B002A9C0, (__n128)xmmword_1B002A9D0);
  OUTLINED_FUNCTION_6_23((__n128)vdupq_n_s64(0x3FEE6AC340000000uLL), (__n128)xmmword_1B0026680, v233);
  OUTLINED_FUNCTION_5_27();
  HIDWORD(v298) = 1063675494;
  OUTLINED_FUNCTION_17_11();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_29(v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, 600.0, v244, 0.8, v78, v59, v245, &v661, &v659, v298,
    0,
    &v657,
    v306,
    v313,
    v323,
    v336,
    v349,
    v362,
    v375,
    v388,
    v401,
    v414,
    v427,
    v440,
    v453,
    v466,
    v479,
    v492,
    v505,
    v518,
    v529,
    &v661,
    &v617,
    v549,
    v553,
    v560,
    v569,
    v579,
    v589,
    v599);
  OUTLINED_FUNCTION_22_11((__n128)xmmword_1B00266E0, (__n128)xmmword_1B00266F0);
  v673 = xmmword_1B0026700;
  v674 = xmmword_1B0026710;
  v671 = xmmword_1B0026720;
  v672 = xmmword_1B0026730;
  v669 = xmmword_1B002A830;
  v670 = xmmword_1B0025E50;
  v667 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v668 = xmmword_1B00271B0;
  v665 = v606;
  v666 = v606;
  v663 = (__int128)v606;
  v664 = (__int128)v606;
  v661 = (__int128)v606;
  v662 = xmmword_1B0027FF0;
  v659 = xmmword_1B0026050;
  v660 = xmmword_1B0025FA0;
  v657 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v658 = xmmword_1B0026740;
  OUTLINED_FUNCTION_0_28(*(double *)v657.i64, 0.96295315, v606);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_29(v246, v247, v248, v249, v250, v251, v252, v253, v254, v603, v255, v256, v257, v59, v59, v602, &v661, &v659, 0x3F59999A3F59999ALL,
    0,
    &v657,
    665496235,
    v314,
    v324,
    v337,
    v350,
    v363,
    v376,
    v389,
    v402,
    v415,
    v428,
    v441,
    v454,
    v467,
    v480,
    v493,
    v506,
    v519,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    v570,
    v580,
    v590,
    v600);
  v675 = xmmword_1B0026790;
  v676 = (__int128)v606;
  v673 = xmmword_1B002A9E0;
  v674 = xmmword_1B00267B0;
  v671 = xmmword_1B0025F40;
  v672 = (__int128)v606;
  v669 = xmmword_1B002A9F0;
  v670 = xmmword_1B002A7D0;
  v667 = (int64x2_t)v605;
  OUTLINED_FUNCTION_26_27((__n128)xmmword_1B00271F0, 0.649999976, v606);
  v663 = xmmword_1B00267D0;
  v664 = xmmword_1B00267E0;
  OUTLINED_FUNCTION_33_2((__n128)xmmword_1B00267F0, (__n128)xmmword_1B00278C0);
  v659 = xmmword_1B002AA00;
  v660 = xmmword_1B0025FA0;
  v657 = (int64x2_t)v258;
  v658 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_0_28(1.0, v259, v258);
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_29(v260, v261, v262, v263, v264, v265, v266, v267, v268, v604, 100.0, 300.0, v269, 0.8, 0.8, 0.7, &v661, &v659, 0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v657,
    1065353216,
    v315,
    v325,
    v338,
    v351,
    v364,
    v377,
    v390,
    v403,
    v416,
    v429,
    v442,
    v455,
    v468,
    v481,
    v494,
    v507,
    v520,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    v571,
    v581,
    v591,
    v601);
  v675 = xmmword_1B0025DD0;
  v676 = xmmword_1B0025DE0;
  v673 = xmmword_1B0025DF0;
  v674 = xmmword_1B0025E00;
  v671 = xmmword_1B0025E10;
  v672 = xmmword_1B0025E20;
  v669 = xmmword_1B002A9F0;
  v670 = xmmword_1B002A7A0;
  v667 = (int64x2_t)v605;
  v668 = xmmword_1B0026E60;
  OUTLINED_FUNCTION_19_27(0.5, v606);
  v661 = xmmword_1B002AA10;
  v662 = xmmword_1B0027740;
  v659 = xmmword_1B0025E80;
  v660 = v270;
  v657 = (int64x2_t)v270;
  v658 = xmmword_1B0025E90;
  v655 = (__n128)v270;
  v656 = (__n128)v270;
  v653 = (__n128)v270;
  v654 = (__n128)v270;
  v651 = (__n128)v270;
  v652 = (__n128)v270;
  v649 = (__n128)v270;
  v650 = (__n128)v270;
  v647 = (__n128)v270;
  v648 = (__n128)v270;
  v645 = (__n128)v270;
  v646 = (__n128)v270;
  v643 = (__n128)v270;
  v644 = (__n128)v270;
  v641 = (__n128)v270;
  v642 = (__n128)v270;
  v639 = (__n128)v270;
  v640 = (__n128)v270;
  v637 = (__n128)v270;
  v638 = (__n128)v270;
  v635 = (__n128)v270;
  v636 = (__n128)v270;
  v633 = (__n128)v270;
  v634 = (__n128)v270;
  v631 = (__n128)v270;
  v632 = (__n128)v270;
  v629 = (__n128)v270;
  v630 = (__n128)v270;
  v627 = (__n128)v270;
  v628 = (__n128)v270;
  v625 = (__n128)v270;
  v626 = (__n128)v270;
  v623 = (__n128)v270;
  v624 = (__n128)v270;
  v621 = (__n128)v270;
  v622 = (__n128)v270;
  v619 = (__n128)v270;
  v620 = (__n128)v270;
  v617 = (__n128)v270;
  v618 = (__n128)v270;
  v615 = (__n128)v270;
  v616 = (__n128)v270;
  v613 = (__n128)v270;
  v614 = (__n128)v270;
  v611 = (__n128)v270;
  v612 = (__n128)v270;
  v609 = (__n128)v270;
  v610 = (__n128)v270;
  v607 = (__n128)v270;
  v608 = (__n128)v270;
  OUTLINED_FUNCTION_1_26();
  OUTLINED_FUNCTION_12_8();
  HIDWORD(v299) = v271;
  LODWORD(v299) = 1056964608;
  OUTLINED_FUNCTION_29(v273, v274, &v671, &v669, &v667, &v665, &v663, v275, *(double *)(v272 + 3208), (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v661, &v659, v299,
    1045220557,
    &v657,
    1065353216,
    v316,
    v326,
    v339,
    v352,
    v365,
    v378,
    v391,
    v404,
    v417,
    v430,
    v443,
    v456,
    v469,
    v482,
    v495,
    v508,
    v521,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    &v611,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  OUTLINED_FUNCTION_4_34();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_9_20();
  OUTLINED_FUNCTION_23_28();
  OUTLINED_FUNCTION_29(v276, v277, v278, v279, v280, v281, v282, v283, v284, v285, v286, v287, v288, v289, v290, v291, &v661, &v659, 0x3F8000003F000000,
    1045220557,
    &v657,
    1065353216,
    &v655,
    &v653,
    &v651,
    &v649,
    &v647,
    &v645,
    &v643,
    &v641,
    &v639,
    &v637,
    &v635,
    &v633,
    &v631,
    &v629,
    &v627,
    &v625,
    &v623,
    &v621,
    &v619,
    &v617,
    &v615,
    &v613,
    v561,
    1112014848,
    1097859072,
    &v609,
    (uint64_t)&v607);
  return v0;
}

void sub_1AFBC32C8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_22_0();
  v30 = v5;
  type metadata accessor for WindComplicationHourlyViewModel();
  OUTLINED_FUNCTION_29_25();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_5_28();
  v9 = OUTLINED_FUNCTION_24_20(v8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_17_2(v10, v25);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_39_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD50);
  v12 = (__n128 *)OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_10_36(v12, (__n128)xmmword_1B00275C0);
  v13 = v4 + v1[5];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F25E0);
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v29);
  v14 = v4 + v1[7];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v28);
  OUTLINED_FUNCTION_8_27(v4 + v1[9]);
  v15 = v4 + v1[10];
  v27 = OUTLINED_FUNCTION_12();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v15, v30);
  OUTLINED_FUNCTION_47();
  *(_BYTE *)(v4 + v1[6]) = 16;
  *(_BYTE *)(v4 + v1[8]) = 1;
  OUTLINED_FUNCTION_18_36();
  OUTLINED_FUNCTION_32_10();
  sub_1AFF6EC38(v0, 1, 4);
  OUTLINED_FUNCTION_16_29();
  if (*(_QWORD *)(v30 + 16))
  {
    OUTLINED_FUNCTION_12_28();
    while (1)
    {
      OUTLINED_FUNCTION_8_27(v3);
      OUTLINED_FUNCTION_2_23();
      if (v16)
        break;
      OUTLINED_FUNCTION_4_35();
      OUTLINED_FUNCTION_14_21();
      OUTLINED_FUNCTION_17_27(v1[9]);
      OUTLINED_FUNCTION_26_28(v1[10]);
      OUTLINED_FUNCTION_43_1();
      *(_BYTE *)(v2 + v1[6]) = 16;
      OUTLINED_FUNCTION_22_12(v1[8]);
      if (v22)
      {
        v17 = sub_1AFD0B148(v21 > 1, v4, 1, v20);
        v20 = v17;
      }
      v23 = OUTLINED_FUNCTION_15_36(v17, v18, v19, v20);
      sub_1AFBC4C50(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for WindComplicationHourlyViewModel);
      OUTLINED_FUNCTION_28_19();
      OUTLINED_FUNCTION_31_16();
      v3 = v26;
      if (v16)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_19_28();
  }
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFBC34E4()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_22_0();
  type metadata accessor for ConditionsComplicationHourlyViewModel();
  OUTLINED_FUNCTION_29_25();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_5_28();
  v8 = OUTLINED_FUNCTION_24_20(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_17_2(v9, v24);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_39_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70DF8);
  v11 = (__n128 *)OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_10_36(v11, (__n128)xmmword_1B00275C0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_27_14(v12);
  v13 = v4 + v0[6];
  v26 = OUTLINED_FUNCTION_10_0();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v26);
  OUTLINED_FUNCTION_8_27(v4 + v0[9]);
  v14 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_20_23(v14);
  OUTLINED_FUNCTION_47();
  *(_BYTE *)(v4 + v0[7]) = v3;
  *(_BYTE *)(v4 + v0[8]) = v3;
  OUTLINED_FUNCTION_18_36();
  OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_16_29();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_12_28();
    while (1)
    {
      OUTLINED_FUNCTION_8_27(v2);
      OUTLINED_FUNCTION_2_23();
      if (v15)
        break;
      OUTLINED_FUNCTION_4_35();
      __swift_storeEnumTagSinglePayload(v1 + v0[5], 1, 1, v27);
      __swift_storeEnumTagSinglePayload(v1 + v0[6], 1, 1, v26);
      OUTLINED_FUNCTION_17_27(v0[9]);
      OUTLINED_FUNCTION_26_28(v0[10]);
      OUTLINED_FUNCTION_43_1();
      *(_BYTE *)(v1 + v0[7]) = 1;
      OUTLINED_FUNCTION_22_12(v0[8]);
      if (v21)
      {
        v16 = sub_1AFD0B24C(v20 > 1, v4, 1, v19);
        v19 = v16;
      }
      v22 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19);
      sub_1AFBC4C50(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationHourlyViewModel);
      OUTLINED_FUNCTION_28_19();
      OUTLINED_FUNCTION_31_16();
      v2 = v25;
      if (v15)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_19_28();
  }
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFBC36DC()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22_0();
  type metadata accessor for PrecipitationComplicationHourlyViewModel();
  OUTLINED_FUNCTION_29_25();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_5_28();
  v8 = OUTLINED_FUNCTION_24_20(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_17_2(v9, v26);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_39_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD60);
  v11 = (__n128 *)OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_10_36(v11, (__n128)xmmword_1B00275C0);
  v12 = sub_1B00060E8();
  OUTLINED_FUNCTION_27_14(v12);
  v13 = v4 + v0[7];
  v28 = OUTLINED_FUNCTION_10_0();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v28);
  OUTLINED_FUNCTION_8_27(v4 + v0[10]);
  v14 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_20_23(v14);
  OUTLINED_FUNCTION_47();
  v15 = v4 + v0[6];
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = v3;
  *(_BYTE *)(v4 + v0[8]) = v3;
  *(_BYTE *)(v4 + v0[9]) = v3;
  OUTLINED_FUNCTION_18_36();
  OUTLINED_FUNCTION_32_10();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_16_29();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_12_28();
    while (1)
    {
      OUTLINED_FUNCTION_8_27(v2);
      OUTLINED_FUNCTION_2_23();
      if (v16)
        break;
      OUTLINED_FUNCTION_4_35();
      OUTLINED_FUNCTION_14_21();
      OUTLINED_FUNCTION_17_27(v0[10]);
      OUTLINED_FUNCTION_26_28(v0[11]);
      OUTLINED_FUNCTION_43_1();
      v17 = v1 + v0[6];
      *(_QWORD *)v17 = 0;
      *(_BYTE *)(v17 + 8) = 1;
      *(_BYTE *)(v1 + v0[8]) = 1;
      OUTLINED_FUNCTION_22_12(v0[9]);
      if (v23)
      {
        v18 = sub_1AFD0B520(v22 > 1, v4, 1, v21);
        v21 = v18;
      }
      v24 = OUTLINED_FUNCTION_15_36(v18, v19, v20, v21);
      sub_1AFBC4C50(v24, v25, (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationComplicationHourlyViewModel);
      OUTLINED_FUNCTION_28_19();
      OUTLINED_FUNCTION_31_16();
      v2 = v27;
      if (v16)
        goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_19_28();
  }
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_2_3();
}

uint64_t ConditionsComplicationViewModel.localWeather.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ConditionsComplicationViewModel.locationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConditionsComplicationViewModel.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_35();
  OUTLINED_FUNCTION_12();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for ConditionsComplicationViewModel()
{
  uint64_t result;

  result = qword_1EEE70DA0;
  if (!qword_1EEE70DA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ConditionsComplicationViewModel.isDaytime.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_13_35() + 28));
}

uint64_t ConditionsComplicationViewModel.gradientModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_11_35() + 32);
  return sub_1AFBC399C(v2, v0);
}

uint64_t sub_1AFBC399C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ConditionsComplicationViewModel.condition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_35();
  OUTLINED_FUNCTION_10_0();
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t ConditionsComplicationViewModel.temperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t ConditionsComplicationViewModel.maxTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t ConditionsComplicationViewModel.minTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v0 = OUTLINED_FUNCTION_1_1();
  return OUTLINED_FUNCTION_0_0(v0, v1, v2, v3);
}

uint64_t ConditionsComplicationViewModel.hourly.getter()
{
  OUTLINED_FUNCTION_13_35();
  return swift_bridgeObjectRetain();
}

void ConditionsComplicationViewModel.init(localWeather:timeZone:isDaytime:gradientModel:condition:temperature:maxTemperature:minTemperature:hourly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  int EnumTagSinglePayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  OUTLINED_FUNCTION_22_0();
  v67 = v23;
  v68 = v22;
  v63 = v24;
  v70 = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v66 = a21;
  v36 = OUTLINED_FUNCTION_12();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_34_11(v38, v61);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v61 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_37();
  *(_BYTE *)v35 = v33;
  *(_QWORD *)(v35 + 8) = 0;
  *(_QWORD *)(v35 + 16) = 0xE000000000000000;
  v44 = (int *)OUTLINED_FUNCTION_13_35();
  v45 = v35 + v44[6];
  v62 = v37;
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  v69 = v36;
  v46(v45, v31, v36);
  *(_BYTE *)(v35 + v44[7]) = v29;
  v64 = v27;
  sub_1AFBC3D54(v27, (uint64_t)v41);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42);
  v65 = v31;
  if (EnumTagSinglePayload == 1)
  {
    if (qword_1ED1EE920 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED1EE900);
    sub_1AFBC399C(v48, v21);
    sub_1AFBC4044((uint64_t)v41);
  }
  else
  {
    sub_1AFBC4C50((uint64_t)v41, v21, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  }
  sub_1AFBC4C50(v21, v35 + v44[8], (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  v49 = v35 + v44[9];
  v50 = OUTLINED_FUNCTION_10_0();
  v51 = *(_QWORD *)(v50 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v49, v70, v50);
  v52 = v35 + v44[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v53 = v52;
  v54 = v63;
  OUTLINED_FUNCTION_42_2(v53, v63);
  OUTLINED_FUNCTION_42_2(v35 + v44[11], v68);
  OUTLINED_FUNCTION_42_2(v35 + v44[12], v67);
  v55 = v61;
  v56 = v65;
  v46(v61, v65, v69);
  v57 = v66;
  if (!v66)
  {
    sub_1AFBC34E4();
    v57 = v58;
  }
  OUTLINED_FUNCTION_46_1(v67);
  OUTLINED_FUNCTION_46_1(v68);
  OUTLINED_FUNCTION_46_1(v54);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v70, v50);
  sub_1AFBC4044(v64);
  v59 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v60 = v69;
  v59(v56, v69);
  v59(v55, v60);
  *(_QWORD *)(v35 + v44[13]) = v57;
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFBC3D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void ConditionsComplicationViewModel.init(localWeather:locationName:timeZone:isDaytime:gradientModel:condition:temperature:maxTemperature:minTemperature:hourly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  int EnumTagSinglePayload;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  OUTLINED_FUNCTION_22_0();
  v69 = v25;
  v70 = v24;
  v27 = v26;
  LODWORD(v63) = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v64 = a23;
  v66 = a22;
  v67 = a21;
  v68 = v37;
  v38 = OUTLINED_FUNCTION_12();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_34_11(v40, v62[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_37();
  *(_BYTE *)v36 = v34;
  v46 = v68;
  *(_QWORD *)(v36 + 8) = v32;
  *(_QWORD *)(v36 + 16) = v46;
  v47 = (int *)OUTLINED_FUNCTION_13_35();
  v48 = v36 + v47[6];
  v62[1] = v39;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  v68 = v38;
  v50 = v38;
  v51 = v49;
  v49(v48, v30, v50);
  *(_BYTE *)(v36 + v47[7]) = v63;
  v63 = v27;
  sub_1AFBC3D54(v27, (uint64_t)v43);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44);
  v65 = v30;
  if (EnumTagSinglePayload == 1)
  {
    if (qword_1ED1EE920 != -1)
      swift_once();
    v53 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED1EE900);
    sub_1AFBC399C(v53, v23);
    sub_1AFBC4044((uint64_t)v43);
  }
  else
  {
    sub_1AFBC4C50((uint64_t)v43, v23, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  }
  sub_1AFBC4C50(v23, v36 + v47[8], (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  v54 = v36 + v47[9];
  v55 = OUTLINED_FUNCTION_10_0();
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v54, v70, v55);
  v57 = v36 + v47[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_44_2(v57, v69);
  OUTLINED_FUNCTION_44_2(v36 + v47[11], v67);
  OUTLINED_FUNCTION_44_2(v36 + v47[12], v66);
  v58 = v62[0];
  v59 = v65;
  v51(v62[0], v65, v68);
  v60 = v64;
  if (!v64)
  {
    sub_1AFBC34E4();
    v60 = v61;
  }
  OUTLINED_FUNCTION_36(v66);
  OUTLINED_FUNCTION_36(v67);
  OUTLINED_FUNCTION_36(v69);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v70, v55);
  sub_1AFBC4044(v63);
  OUTLINED_FUNCTION_36(v59);
  OUTLINED_FUNCTION_36(v58);
  *(_QWORD *)(v36 + v47[13]) = v60;
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFBC4044(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for ConditionsComplicationViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B0005B84();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1B0005FB0();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v18 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v19 = v18[5];
    v20 = &v14[v19];
    v21 = &v15[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v14[v18[6]] = v15[v18[6]];
    v14[v18[7]] = v15[v18[7]];
    *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
    v14[v18[9]] = v15[v18[9]];
    v17((char *)v4 + a3[9], (char *)a2 + a3[9], v16);
    v22 = a3[10];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v26((char *)v4 + a3[11], (char *)a2 + a3[11], v25);
    v26((char *)v4 + a3[12], (char *)a2 + a3[12], v25);
    *(_QWORD *)((char *)v4 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ConditionsComplicationViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  v7 = sub_1B0005FB0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[9], v7);
  v9 = a1 + a2[10];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + a2[11], v10);
  v11(a1 + a2[12], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConditionsComplicationViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B0005B84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1B0005FB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = v13 + v18;
  v20 = v14 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_BYTE *)(v13 + v17[6]) = *(_BYTE *)(v14 + v17[6]);
  *(_BYTE *)(v13 + v17[7]) = *(_BYTE *)(v14 + v17[7]);
  *(_QWORD *)(v13 + v17[8]) = *(_QWORD *)(v14 + v17[8]);
  *(_BYTE *)(v13 + v17[9]) = *(_BYTE *)(v14 + v17[9]);
  v16(a1 + a3[9], a2 + a3[9], v15);
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v22, v23, v24);
  v25(a1 + a3[11], a2 + a3[11], v24);
  v25(a1 + a3[12], a2 + a3[12], v24);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConditionsComplicationViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B0005FB0();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v16 = v15[5];
  v17 = v11 + v16;
  v18 = v12 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_BYTE *)(v11 + v15[6]) = *(_BYTE *)(v12 + v15[6]);
  *(_BYTE *)(v11 + v15[7]) = *(_BYTE *)(v12 + v15[7]);
  *(_QWORD *)(v11 + v15[8]) = *(_QWORD *)(v12 + v15[8]);
  *(_BYTE *)(v11 + v15[9]) = *(_BYTE *)(v12 + v15[9]);
  v14(a1 + a3[9], a2 + a3[9], v13);
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23(a1 + a3[11], a2 + a3[11], v22);
  v23(a1 + a3[12], a2 + a3[12], v22);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ConditionsComplicationViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B0005FB0();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v16 = v15[5];
  v17 = v11 + v16;
  v18 = v12 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_BYTE *)(v11 + v15[6]) = *(_BYTE *)(v12 + v15[6]);
  *(_BYTE *)(v11 + v15[7]) = *(_BYTE *)(v12 + v15[7]);
  *(_QWORD *)(v11 + v15[8]) = *(_QWORD *)(v12 + v15[8]);
  *(_BYTE *)(v11 + v15[9]) = *(_BYTE *)(v12 + v15[9]);
  v14(a1 + a3[9], a2 + a3[9], v13);
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  v23(a1 + a3[11], a2 + a3[11], v22);
  v23(a1 + a3[12], a2 + a3[12], v22);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for ConditionsComplicationViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1B0005FB0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v16 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v17 = v16[5];
  v18 = v12 + v17;
  v19 = v13 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_BYTE *)(v12 + v16[6]) = *(_BYTE *)(v13 + v16[6]);
  *(_BYTE *)(v12 + v16[7]) = *(_BYTE *)(v13 + v16[7]);
  *(_QWORD *)(v12 + v16[8]) = *(_QWORD *)(v13 + v16[8]);
  *(_BYTE *)(v12 + v16[9]) = *(_BYTE *)(v13 + v16[9]);
  v15(a1 + a3[9], a2 + a3[9], v14);
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(a1 + a3[11], a2 + a3[11], v23);
  v24(a1 + a3[12], a2 + a3[12], v23);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionsComplicationViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBC4994(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_0_1();
    if (v11)
    {
      v9 = v8;
      v10 = a3[6];
    }
    else
    {
      OUTLINED_FUNCTION_38_2();
      OUTLINED_FUNCTION_0_1();
      if (v11)
      {
        v9 = v12;
        v10 = a3[8];
      }
      else
      {
        OUTLINED_FUNCTION_10_0();
        OUTLINED_FUNCTION_0_1();
        if (v13)
        {
          v9 = v14;
          v10 = a3[9];
        }
        else
        {
          v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
          v10 = a3[10];
        }
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ConditionsComplicationViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFBC4A60(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_1_12();
    if (v10)
    {
      v8 = v7;
      v9 = a4[6];
    }
    else
    {
      OUTLINED_FUNCTION_38_2();
      OUTLINED_FUNCTION_1_12();
      if (v10)
      {
        v8 = v11;
        v9 = a4[8];
      }
      else
      {
        OUTLINED_FUNCTION_10_0();
        OUTLINED_FUNCTION_1_12();
        if (v12)
        {
          v8 = v13;
          v9 = a4[9];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
          v9 = a4[10];
        }
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v9, a2, a2, v8);
  }
  return result;
}

void sub_1AFBC4B1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1B0005B84();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherConditionGradientModel();
    if (v1 <= 0x3F)
    {
      sub_1B0005FB0();
      if (v2 <= 0x3F)
      {
        sub_1AFBC4BFC();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1AFBC4BFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1EE530)
  {
    sub_1AFB33BE4();
    v0 = sub_1B00050F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1EE530);
  }
}

uint64_t sub_1AFBC4C50(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AFBC4C94()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B0007234();
}

void sub_1AFBC4D00(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_2();
  *(_BYTE *)(v1 + 28) = a1;
  sub_1AFB3CF4C();
  OUTLINED_FUNCTION_5_6();
}

void sub_1AFBC4D34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_2();
  *(_BYTE *)(v0 + 29) = (*(_BYTE *)(v0 + 28) & 1) == 0;
  *(_BYTE *)(v0 + 28) = 1;
  sub_1AFB3CF4C();
  OUTLINED_FUNCTION_5_6();
}

uint64_t sub_1AFBC4D74(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  double *v22;
  CGRect v23;

  v7 = v5;
  v13 = sub_1B00083EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_13_1(v15, (unint64_t *)&qword_1ED1F3BF8);
  *v6 = sub_1B0008A70();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v6, *MEMORY[0x1E0DEF740], v13);
  v16 = sub_1B0008404();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v6, v13);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  result = OUTLINED_FUNCTION_1_2();
  if (*(_BYTE *)(v7 + 28) != 1 || (result = sub_1AFB3D230(), (result & 1) == 0))
  {
    v22 = (double *)(a1 + OBJC_IVAR____TtC9WeatherUI24ForegroundEffectRenderer_frameInContainer);
    *v22 = a2;
    v22[1] = a3;
    v22[2] = a4;
    v22[3] = a5;
    v6 = (uint64_t *)(v22 + 4);
    goto LABEL_12;
  }
  v14 = a1 + OBJC_IVAR____TtC9WeatherUI24ForegroundEffectRenderer_frameInContainer;
  v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC9WeatherUI24ForegroundEffectRenderer_frameInContainer + 32);
  if ((*(_BYTE *)v6 & 1) != 0
    || (v23.origin.x = a2,
        v23.origin.y = a3,
        v23.size.width = a4,
        v23.size.height = a5,
        result = CGRectEqualToRect(v23, *(CGRect *)v14),
        (result & 1) == 0))
  {
    if (qword_1ED1EC4C8 == -1)
    {
LABEL_7:
      v18 = sub_1B0006D00();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED1EC4A8);
      v19 = sub_1B0006CE8();
      v20 = sub_1B00089D4();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)OUTLINED_FUNCTION_26();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1AFABF000, v19, v20, "Disabling all rendering due to frameInContainer change while frozen", v21, 2u);
        OUTLINED_FUNCTION_25();
      }

      result = sub_1AFBC4C94();
      goto LABEL_10;
    }
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
LABEL_10:
  *(CGFloat *)v14 = a2;
  *(CGFloat *)(v14 + 8) = a3;
  *(CGFloat *)(v14 + 16) = a4;
  *(CGFloat *)(v14 + 24) = a5;
LABEL_12:
  *(_BYTE *)v6 = 0;
  return result;
}

void sub_1AFBC4F8C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  BOOL v4;

  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 28) & 1) == 0)
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink);
    if (v1)
    {
      swift_beginAccess();
      v2 = v1;
      v3 = swift_bridgeObjectRetain();
      v4 = sub_1AFB3A7D8(v3);
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setPaused_, v4);

    }
  }
}

id sub_1AFBC5030@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_newCommandQueue);
  *a2 = result;
  return result;
}

id sub_1AFBC5060(uint64_t a1, float a2)
{
  id v4;
  double v5;
  id v6;

  v4 = objc_allocWithZone(MEMORY[0x1E0CC6E48]);
  *(float *)&v5 = a2;
  v6 = objc_msgSend(v4, sel_initWithDevice_sigma_, a1, v5);
  objc_msgSend(v6, sel_setEdgeMode_, 1);
  return v6;
}

id sub_1AFBC50C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1AFBC5060(*(_QWORD *)a1, *(float *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1AFBC50F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink);
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1EFD90);
  OUTLINED_FUNCTION_21(v3);
  OUTLINED_FUNCTION_18_6(OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_backgroundTextureDescriptor);
  OUTLINED_FUNCTION_18_6(OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_backgroundBlurTextureDescriptor);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_context + 16);

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_37();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDA0);
  OUTLINED_FUNCTION_21(v5);

  OUTLINED_FUNCTION_18_6(OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_renderQueue);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F2718);
  OUTLINED_FUNCTION_21(v6);
  return v0;
}

uint64_t sub_1AFBC5214()
{
  sub_1AFBC50F0();
  return swift_deallocClassInstance();
}

uint64_t sub_1AFBC5238()
{
  return type metadata accessor for ForegroundEffectCoordinator();
}

void sub_1AFBC5240()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_0_9();
  swift_retain();
  sub_1AFBC67B8(&v1, v0);
  OUTLINED_FUNCTION_15_37();
  OUTLINED_FUNCTION_41();
  sub_1AFBC4F8C();
  sub_1B0006958();
  OUTLINED_FUNCTION_6();
}

void sub_1AFBC529C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_0_9();
  sub_1AFBC8D30(v0);
  swift_endAccess();
  OUTLINED_FUNCTION_41();
  sub_1AFBC4F8C();
  sub_1B0006958();
  OUTLINED_FUNCTION_6();
}

id sub_1AFBC52F0(void *a1)
{
  id *v1;
  id *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if (v4)
  {
    v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_width);
    v6 = v2[2];
    if (v5 == objc_msgSend(v6, sel_width))
    {
      v7 = objc_msgSend(v4, sel_height);
      if (v7 == objc_msgSend(v6, sel_height))
        return v4;
    }
    swift_unknownObjectRelease();
  }
  v8 = v2[2];
  objc_msgSend(v8, sel_width);
  objc_msgSend(v8, sel_height);
  objc_msgSend(v8, sel_pixelFormat);
  if (qword_1ED1EC4C8 != -1)
    swift_once();
  v9 = sub_1B0006D00();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED1EC4A8);
  v10 = sub_1B0006CE8();
  v11 = sub_1B00089D4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 134218498;
    sub_1B0008BB4();
    *(_WORD *)(v12 + 12) = 2048;
    sub_1B0008BB4();
    *(_WORD *)(v12 + 22) = 2080;
    type metadata accessor for MTLPixelFormat(0);
    v14 = sub_1B00085C0();
    sub_1AFB4AD14(v14, v15, &v17);
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFABF000, v10, v11, "Making a new scratch pad texture: width=%ld height=%ld pixelFormat=%s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B5E03CC0](v13, -1, -1);
    MEMORY[0x1B5E03CC0](v12, -1, -1);
  }

  v4 = objc_msgSend(a1, sel_newTextureWithDescriptor_, v2[2]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *v2 = v4;
  return v4;
}

uint64_t sub_1AFBC5588(double a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v6 = sub_1B00083A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B00083C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    swift_retain();
    sub_1B000694C();
    swift_release();
    v16 = v15 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_context;
    swift_beginAccess();
    *(int8x16_t *)v16 = vextq_s8(*(int8x16_t *)v16, *(int8x16_t *)v16, 8uLL);
    *(int8x16_t *)(v16 + 24) = vextq_s8(*(int8x16_t *)(v16 + 24), *(int8x16_t *)(v16 + 24), 8uLL);
    *(double *)(v16 + 48) = a1;
    *(double *)(v16 + 56) = a2;
    *(double *)(v16 + 64) = a3;
    *(_BYTE *)(v16 + 72) = 0;
    sub_1AFAEC5C0(0, (unint64_t *)&qword_1ED1F3BF8);
    v17 = sub_1B0008A70();
    v23 = v7;
    v18 = (void *)v17;
    v19 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1AFBC9260;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1AFB3B8C8;
    aBlock[3] = &block_descriptor_24;
    v20 = _Block_copy(aBlock);
    v22 = v10;
    v21 = v20;
    swift_release();
    sub_1B00083B0();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1AFAF8704(&qword_1ED1F2790, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3B98);
    sub_1AFB3A850((unint64_t *)&qword_1ED1F3BA0, &qword_1ED1F3B98);
    sub_1B0008C68();
    MEMORY[0x1B5E029A0](0, v13, v9, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
    sub_1B0006958();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFBC5848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1B00083EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AFAEC5C0(0, (unint64_t *)&qword_1ED1F3BF8);
  *v5 = sub_1B0008A70();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1B0008404();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    sub_1B000694C();
    v9 = 0;
    if (*(_QWORD *)(v1 + 48))
    {
      v8 = v1 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_context;
      swift_beginAccess();
      if (*(_QWORD *)(v8 + 8))
      {
        if (*(_QWORD *)(v8 + 32)
          && (*(_BYTE *)(v1 + 80) & 1) == 0
          && *(_QWORD *)(v1 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink))
        {
          v9 = 1;
        }
      }
    }
    sub_1B0006958();
    result = sub_1AFB3D230();
    if (((v9 ^ result) & 1) != 0)
      return sub_1AFBC4C94();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1AFBC599C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = sub_1B00083A4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B00083C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1ED740 != -1)
    swift_once();
  if (byte_1ED1ED730 == 1)
  {
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_renderQueue);
    v9 = swift_allocObject();
    v13 = v2;
    v10 = v9;
    swift_weakInit();
    aBlock[4] = sub_1AFBC678C;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1AFB3B8A0;
    aBlock[3] = &block_descriptor_13;
    v11 = _Block_copy(aBlock);
    swift_retain();
    sub_1B00083B0();
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1AFAF8704(&qword_1ED1F2790, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3B98);
    sub_1AFB3A850((unint64_t *)&qword_1ED1F3BA0, &qword_1ED1F3B98);
    sub_1B0008C68();
    MEMORY[0x1B5E029A0](0, v8, v4, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    swift_release();
  }
}

void sub_1AFBC5BD8(uint64_t a1, void (*a2)(void))
{
  OUTLINED_FUNCTION_1_2();
  if (swift_weakLoadStrong())
  {
    a2();
    OUTLINED_FUNCTION_41();
  }
  OUTLINED_FUNCTION_5_6();
}

void sub_1AFBC5C20()
{
  uint64_t v0;
  id v1;
  unint64_t *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  int64_t v35;
  _QWORD *v36;
  id v37;
  id v38[13];

  v1 = (id)v0;
  if (qword_1ED1ED740 != -1)
    swift_once();
  if (byte_1ED1ED730 == 1)
  {
    sub_1B000694C();
    v2 = (unint64_t *)(v0 + 32);
    swift_beginAccess();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1AFB3A7D8(v3);
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_26;
    v5 = *(char *)(v0 + 16);
    if (v5 == 4)
      goto LABEL_26;
    if (!*(_QWORD *)(v0 + 48))
      goto LABEL_26;
    if ((*(_BYTE *)(v0 + 80) & 1) != 0)
      goto LABEL_26;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_displayLink);
    if (!v6)
      goto LABEL_26;
    v7 = v0 + OBJC_IVAR____TtC9WeatherUI27ForegroundEffectCoordinator_context;
    swift_beginAccess();
    if (*(_QWORD *)(v7 + 8) && *(_QWORD *)(v7 + 32))
    {
      swift_beginAccess();
      swift_unknownObjectRetain();
      v8 = v6;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1EFD90);
      sub_1B0006640();
      swift_endAccess();
      if (v38[0])
      {
        v37 = objc_msgSend(v38[0], sel_commandBuffer);
        if (v37)
        {
          v34 = v8;
          v9 = *v2;
          if ((*v2 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1B0008C8C();
            type metadata accessor for ForegroundEffectRenderer();
            sub_1AFAF8704(&qword_1EEE70E68, (uint64_t (*)(uint64_t))type metadata accessor for ForegroundEffectRenderer, (uint64_t)&unk_1B0048330);
            sub_1B000889C();
            v9 = (unint64_t)v38[7];
            v36 = v38[8];
            v10 = v38[9];
            v11 = v38[10];
            v12 = (unint64_t)v38[11];
          }
          else
          {
            v22 = -1 << *(_BYTE *)(v9 + 32);
            v36 = (_QWORD *)(v9 + 56);
            v23 = ~v22;
            v24 = -v22;
            if (v24 < 64)
              v25 = ~(-1 << v24);
            else
              v25 = -1;
            v12 = v25 & *(_QWORD *)(v9 + 56);
            swift_bridgeObjectRetain();
            v10 = (id)v23;
            v11 = 0;
          }
          v35 = ((unint64_t)v10 + 64) >> 6;
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_35;
LABEL_33:
          if (v12)
          {
            v26 = (v12 - 1) & v12;
            v27 = __clz(__rbit64(v12)) | ((_QWORD)v11 << 6);
            v28 = (char *)v11;
            goto LABEL_51;
          }
          v30 = (uint64_t)v11 + 1;
          if (!__OFADD__(v11, 1))
          {
            if (v30 < v35)
            {
              v31 = v36[v30];
              v28 = (char *)v11 + 1;
              if (v31)
                goto LABEL_50;
              v28 = (char *)v11 + 2;
              if ((uint64_t)v11 + 2 >= v35)
                goto LABEL_55;
              v31 = v36[(_QWORD)v28];
              if (v31)
                goto LABEL_50;
              v28 = (char *)v11 + 3;
              if ((uint64_t)v11 + 3 >= v35)
                goto LABEL_55;
              v31 = v36[(_QWORD)v28];
              if (v31)
              {
LABEL_50:
                v26 = (v31 - 1) & v31;
                v27 = __clz(__rbit64(v31)) + ((_QWORD)v28 << 6);
LABEL_51:
                v29 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v27);
                swift_retain();
                while (v29)
                {
                  LOBYTE(v38[0]) = v5;
                  sub_1AFFA2A3C(v38, v37);
                  swift_release();
                  v11 = v28;
                  v12 = v26;
                  if ((v9 & 0x8000000000000000) == 0)
                    goto LABEL_33;
LABEL_35:
                  if (!sub_1B0008CB0())
                    goto LABEL_55;
                  type metadata accessor for ForegroundEffectRenderer();
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  v29 = v38[0];
                  swift_unknownObjectRelease();
                  v28 = (char *)v11;
                  v26 = v12;
                }
                goto LABEL_55;
              }
              v28 = (char *)v11 + 4;
              if ((uint64_t)v11 + 4 < v35)
              {
                v31 = v36[(_QWORD)v28];
                if (!v31)
                {
                  v32 = (uint64_t)v11 + 5;
                  while (v32 < v35)
                  {
                    v31 = v36[v32++];
                    if (v31)
                    {
                      v28 = (char *)(v32 - 1);
                      goto LABEL_50;
                    }
                  }
                  goto LABEL_55;
                }
                goto LABEL_50;
              }
            }
LABEL_55:
            sub_1AFBC67AC();
            objc_msgSend(v37, sel_commit);
            v33 = objc_msgSend(v34, sel_actualFramesPerSecond);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_1AFBC6288((uint64_t)v33, flt_1B002AAE0[v5]);
            goto LABEL_26;
          }
          __break(1u);
          goto LABEL_57;
        }
        swift_unknownObjectRelease();
      }
      if (qword_1ED1EC4C8 != -1)
        swift_once();
      v18 = sub_1B0006D00();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED1EC4A8);
      v19 = sub_1B0006CE8();
      v20 = sub_1B00089BC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1AFABF000, v19, v20, "Coordinator short circuiting render due to nil command queue/buffer.", v21, 2u);
        MEMORY[0x1B5E03CC0](v21, -1, -1);
      }

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_25;
    }
    v13 = qword_1ED1EC4C8;
    swift_unknownObjectRetain();
    v1 = v6;
    if (v13 == -1)
    {
LABEL_16:
      v14 = sub_1B0006D00();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED1EC4A8);
      v15 = sub_1B0006CE8();
      v16 = sub_1B00089BC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_1AFABF000, v15, v16, "Coordinator short circuiting render due to nil texture.", v17, 2u);
        MEMORY[0x1B5E03CC0](v17, -1, -1);
      }

LABEL_25:
      swift_unknownObjectRelease();
LABEL_26:
      sub_1B0006958();
      return;
    }
LABEL_57:
    swift_once();
    goto LABEL_16;
  }
}

uint64_t sub_1AFBC6288(uint64_t result, float a2)
{
  uint64_t v2;
  float v4;

  if (result >= 1)
  {
    v4 = 1.0 / (float)result;
    result = swift_beginAccess();
    *(float *)(v2 + 20) = *(float *)(v2 + 20) + (float)((float)(v4 * *(float *)(v2 + 24)) * a2);
  }
  return result;
}

uint64_t sub_1AFBC62E8()
{
  uint64_t result;

  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1AFBC599C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AFBC634C()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

void destroy for ForegroundEffectCoordinator.Context(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

uint64_t initializeWithCopy for ForegroundEffectCoordinator.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7 = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for ForegroundEffectCoordinator.Context(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 48) = v10;
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ForegroundEffectCoordinator.Context(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease();

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  *(_OWORD *)(a1 + 48) = a2[3];
  *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForegroundEffectCoordinator.Context(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForegroundEffectCoordinator.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1AFBC6610(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1AFBC664C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void (*sub_1AFBC6690(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AFBC66D0;
}

void sub_1AFBC66D0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1AFB3CF4C();
  OUTLINED_FUNCTION_0();
}

void sub_1AFBC66FC(_BYTE *a1@<X8>)
{
  *a1 = sub_1AFB3D230() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFBC6724()
{
  sub_1AFBC4C94();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFBC6744()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AFBC6768()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AFBC678C()
{
  uint64_t v0;

  sub_1AFBC5BD8(v0, sub_1AFBC5C20);
}

uint64_t sub_1AFBC67AC()
{
  return swift_release();
}

uint64_t sub_1AFBC67B8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_1B0008CA4();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for ForegroundEffectRenderer();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1B0008C98();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v17 = sub_1AFBC6E0C(v7, result + 1);
    v21 = v17;
    if (*(_QWORD *)(v17 + 24) <= *(_QWORD *)(v17 + 16))
    {
      swift_retain();
      sub_1AFBC7000();
      v18 = v21;
    }
    else
    {
      v18 = v17;
      swift_retain();
    }
    sub_1AFBC7938(a2, v18);
    *v3 = v18;
  }
  else
  {
    sub_1B0009004();
    sub_1B0009010();
    v9 = sub_1B0009040();
    v10 = -1 << *(_BYTE *)(v6 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v12 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(v12 + 8 * v11) == a2)
      {
LABEL_12:
        swift_release();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v11);
        swift_retain();
        return 0;
      }
      v13 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v13;
        if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * v11) == a2)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v2;
    *v2 = 0x8000000000000000;
    v16 = swift_retain();
    sub_1AFBC79D8(v16, v11, isUniquelyReferenced_nonNull_native);
    *v2 = v20;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1AFBC69F8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;

  v5 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v24 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v25 = (uint64_t *)((char *)&v23 - v10);
  v26 = v2;
  v11 = *v2;
  sub_1B0009004();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  v12 = (char *)a2 + *(int *)(v5 + 20);
  sub_1B0005710();
  sub_1AFAF8704(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  OUTLINED_FUNCTION_21_28();
  v27 = (char *)a2 + *(int *)(v5 + 24);
  OUTLINED_FUNCTION_21_28();
  v13 = sub_1B0009040();
  v14 = -1 << *(_BYTE *)(v11 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v23 = a1;
    v16 = ~v14;
    v17 = *(_QWORD *)(v24 + 72);
    while (1)
    {
      sub_1AFBC9168(*(_QWORD *)(v11 + 48) + v17 * v15, (uint64_t)v8);
      v18 = *v8 == *a2 && v8[1] == a2[1];
      if ((v18 || (sub_1B0008FB0() & 1) != 0)
        && (MEMORY[0x1B5DFF610]((char *)v8 + *(int *)(v5 + 20), v12) & 1) != 0
        && (MEMORY[0x1B5DFF610]((char *)v8 + *(int *)(v5 + 24), v27) & 1) != 0)
      {
        break;
      }
      sub_1AFBC91AC((uint64_t)v8);
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        OUTLINED_FUNCTION_20_10();
        a1 = v23;
        goto LABEL_13;
      }
    }
    sub_1AFBC91AC((uint64_t)v8);
    OUTLINED_FUNCTION_20_10();
    sub_1AFBC91AC((uint64_t)a2);
    sub_1AFBC9168(*(_QWORD *)(*v26 + 48) + v17 * v15, v23);
    return 0;
  }
  else
  {
    OUTLINED_FUNCTION_20_10();
LABEL_13:
    v19 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = v25;
    sub_1AFBC9168((uint64_t)a2, (uint64_t)v25);
    v28 = *v19;
    *v19 = 0x8000000000000000;
    sub_1AFBC7B24(v21, v15, isUniquelyReferenced_nonNull_native);
    *v19 = v28;
    swift_bridgeObjectRelease();
    sub_1AFBC91E8((uint64_t)a2, a1);
    return 1;
  }
}

uint64_t sub_1AFBC6C90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  sub_1B0009004();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  v8 = sub_1B0009040();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_19_29();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (OUTLINED_FUNCTION_12_29() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      OUTLINED_FUNCTION_19_29();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (OUTLINED_FUNCTION_12_29() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1AFBC7D9C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1AFBC6E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E70);
  v2 = sub_1B0008CEC();
  v14 = v2;
  sub_1B0008C8C();
  if (!sub_1B0008CB0())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  type metadata accessor for ForegroundEffectRenderer();
  while (1)
  {
    swift_dynamicCast();
    v2 = v14;
    if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
    {
      sub_1AFBC7000();
      v2 = v14;
    }
    sub_1B0009004();
    sub_1B0009010();
    result = sub_1B0009040();
    v4 = v2 + 56;
    v5 = -1 << *(_BYTE *)(v2 + 32);
    v6 = result & ~v5;
    v7 = v6 >> 6;
    if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) == 0)
      break;
    v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
    ++*(_QWORD *)(v2 + 16);
    if (!sub_1B0008CB0())
      goto LABEL_16;
  }
  v9 = 0;
  v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    v11 = v7 == v10;
    if (v7 == v10)
      v7 = 0;
    v9 |= v11;
    v12 = *(_QWORD *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFBC7000()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E70);
  result = sub_1B0008CE0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_1B0009004();
      sub_1B0009010();
      result = sub_1B0009040();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v6[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v6[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1AFB38D9C(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v6[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AFBC72A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E80);
  v6 = sub_1B0008CE0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v33 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v31 = v0;
    v32 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    v34 = v5;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      v20 = *(_QWORD *)(v35 + 72);
      sub_1AFBC91E8(*(_QWORD *)(v5 + 48) + v20 * i, (uint64_t)v4);
      sub_1B0009004();
      swift_bridgeObjectRetain();
      sub_1B0008614();
      swift_bridgeObjectRelease();
      sub_1B0005710();
      sub_1AFAF8704(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      sub_1B00084D0();
      sub_1B00084D0();
      result = sub_1B0009040();
      v21 = -1 << *(_BYTE *)(v7 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      result = sub_1AFBC91E8((uint64_t)v4, *(_QWORD *)(v7 + 48) + v24 * v20);
      ++*(_QWORD *)(v7 + 16);
      v5 = v34;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_38;
      if (v17 >= v32)
        goto LABEL_32;
      v18 = v33[v17];
      ++v14;
      if (!v18)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v32)
          goto LABEL_32;
        v18 = v33[v14];
        if (!v18)
        {
          v14 = v17 + 2;
          if (v17 + 2 >= v32)
            goto LABEL_32;
          v18 = v33[v14];
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v32)
            {
LABEL_32:
              swift_release();
              v1 = v31;
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 > 63)
                sub_1AFB38D9C(0, (unint64_t)(v29 + 63) >> 6, v33);
              else
                *v33 = -1 << v29;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v33[v19];
            if (!v18)
            {
              while (1)
              {
                v14 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_39;
                if (v14 >= v32)
                  goto LABEL_32;
                v18 = v33[v14];
                ++v19;
                if (v18)
                  goto LABEL_20;
              }
            }
            v14 = v19;
          }
        }
      }
LABEL_20:
      v11 = (v18 - 1) & v18;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1AFBC7660()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3D18);
  v3 = sub_1B0008CE0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1B0009004();
      sub_1B0008614();
      result = sub_1B0009040();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1AFB38D9C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1AFBC7938(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1B0009004();
  sub_1B0009010();
  sub_1B0009040();
  result = sub_1B0008C80();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1AFBC79D8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_1AFBC7000();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1AFBC7F34();
      goto LABEL_13;
    }
    sub_1AFBC8488();
  }
  v8 = *v3;
  sub_1B0009004();
  sub_1B0009010();
  result = sub_1B0009040();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = type metadata accessor for ForegroundEffectRenderer();
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_12:
      result = sub_1B0008FEC();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v9;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_12;
      }
    }
  }
LABEL_13:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v11 + 16) = v14;
  return result;
}

uint64_t sub_1AFBC7B24(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v7 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_1AFBC72A4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1AFBC80DC();
      goto LABEL_18;
    }
    sub_1AFBC8704();
  }
  v12 = *v3;
  sub_1B0009004();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  v13 = (char *)a1 + *(int *)(v7 + 20);
  sub_1B0005710();
  sub_1AFAF8704(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B00084D0();
  v14 = (char *)a1 + *(int *)(v7 + 24);
  sub_1B00084D0();
  v15 = sub_1B0009040();
  v16 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v27 + 72);
    do
    {
      sub_1AFBC9168(*(_QWORD *)(v12 + 48) + v18 * a2, (uint64_t)v9);
      v19 = *v9 == *a1 && v9[1] == a1[1];
      if ((v19 || (sub_1B0008FB0() & 1) != 0)
        && (MEMORY[0x1B5DFF610]((char *)v9 + *(int *)(v7 + 20), v13) & 1) != 0
        && (MEMORY[0x1B5DFF610]((char *)v9 + *(int *)(v7 + 24), v14) & 1) != 0)
      {
        goto LABEL_21;
      }
      sub_1AFBC91AC((uint64_t)v9);
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  v20 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1AFBC91E8((uint64_t)a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v27 + 72) * a2);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_21:
  sub_1AFBC91AC((uint64_t)v9);
  result = sub_1B0008FEC();
  __break(1u);
  return result;
}

uint64_t sub_1AFBC7D9C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1AFBC7660();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1AFBC82D8();
      goto LABEL_22;
    }
    sub_1AFBC8A88();
  }
  v11 = *v4;
  sub_1B0009004();
  sub_1B0008614();
  result = sub_1B0009040();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1B0008FB0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1B0008FEC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1B0008FB0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1AFBC7F34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E70);
  v2 = *v0;
  v3 = sub_1B0008CD4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = (void *)swift_retain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFBC80DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E80);
  v6 = *v0;
  v7 = sub_1B0008CD4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v8;
    return result;
  }
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = *(_QWORD *)(v6 + 56);
  v16 = -1;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  v17 = v16 & v15;
  v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v24 = *(_QWORD *)(v3 + 72) * i;
    sub_1AFBC9168(*(_QWORD *)(v6 + 48) + v24, (uint64_t)v5);
    result = (void *)sub_1AFBC91E8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v24);
    if (v17)
      goto LABEL_11;
LABEL_12:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v18)
    goto LABEL_28;
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AFBC82D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3D18);
  v2 = *v0;
  v3 = sub_1B0008CD4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AFBC8488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E70);
  result = sub_1B0008CE0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1B0009004();
    sub_1B0009010();
    result = sub_1B0009040();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AFBC8704()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE70E80);
  v6 = sub_1B0008CE0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v31 = v0;
  v32 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  v34 = v5;
  if (!v11)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = *(_QWORD *)(v5 + 48);
    v21 = *(_QWORD *)(v35 + 72);
    sub_1AFBC9168(v20 + v21 * i, (uint64_t)v4);
    sub_1B0009004();
    swift_bridgeObjectRetain();
    sub_1B0008614();
    swift_bridgeObjectRelease();
    sub_1B0005710();
    sub_1AFAF8704(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1B00084D0();
    sub_1B00084D0();
    result = sub_1B0009040();
    v22 = -1 << *(_BYTE *)(v7 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = sub_1AFBC91E8((uint64_t)v4, *(_QWORD *)(v7 + 48) + v25 * v21);
    ++*(_QWORD *)(v7 + 16);
    v5 = v34;
    if (v11)
      goto LABEL_6;
LABEL_7:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_36;
    if (v17 >= v33)
      goto LABEL_32;
    v18 = *(_QWORD *)(v32 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_32;
      v18 = *(_QWORD *)(v32 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v33)
          goto LABEL_32;
        v18 = *(_QWORD *)(v32 + 8 * v14);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v11 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v33)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v32 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v33)
      goto LABEL_32;
    v18 = *(_QWORD *)(v32 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AFBC8A88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3D18);
  v3 = sub_1B0008CE0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1B0009004();
    swift_bridgeObjectRetain();
    sub_1B0008614();
    result = sub_1B0009040();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1AFBC8D30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    sub_1B0009004();
    sub_1B0009010();
    v7 = sub_1B0009040();
    v8 = -1 << *(_BYTE *)(v3 + 32);
    v9 = v7 & ~v8;
    if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v10 = *(_QWORD *)(v3 + 48);
      if (*(_QWORD *)(v10 + 8 * v9) == a1)
      {
LABEL_12:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v13 = *v1;
        v15 = *v1;
        *v1 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1AFBC7F34();
          v13 = v15;
        }
        v6 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v9);
        sub_1AFBC8FAC(v9);
        *v1 = v15;
        goto LABEL_15;
      }
      v11 = ~v8;
      while (1)
      {
        v9 = (v9 + 1) & v11;
        if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * v9) == a1)
          goto LABEL_12;
      }
    }
    return 0;
  }
  if (v3 < 0)
    v4 = *v1;
  else
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v5 = sub_1B0008CBC();
  swift_release();
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = sub_1AFBC8EAC(v4, a1);
LABEL_15:
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1AFBC8EAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = sub_1B0008C98();
  v5 = swift_unknownObjectRetain();
  v6 = sub_1AFBC6E0C(v5, v4);
  sub_1B0009004();
  sub_1B0009010();
  v7 = sub_1B0009040();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  result = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v10 = *(_QWORD *)(v6 + 48);
    if (*(_QWORD *)(v10 + 8 * result) == a2)
    {
LABEL_6:
      sub_1AFBC8FAC(result);
      *v2 = v6;
      return a2;
    }
    v11 = ~v8;
    while (1)
    {
      result = (result + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        break;
      if (*(_QWORD *)(v10 + 8 * result) == a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1AFBC8FAC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1B0008C74();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1B0009004();
        sub_1B0009010();
        v10 = sub_1B0009040() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_QWORD *)(v13 + 8 * v2);
            v15 = (_QWORD *)(v13 + 8 * v6);
            v16 = v2 != v6 || v14 >= v15 + 1;
            v2 = v6;
            if (v16)
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1AFBC9148()
{
  return OUTLINED_FUNCTION_27_9();
}

uint64_t sub_1AFBC915C()
{
  return j__OUTLINED_FUNCTION_27_9();
}

uint64_t sub_1AFBC9168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFBC91AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AFBC91E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFBC922C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AFBC9250()
{
  double *v0;

  return sub_1AFBC5588(v0[3], v0[4], v0[5]);
}

void sub_1AFBC9260()
{
  uint64_t v0;

  sub_1AFBC5BD8(v0, (void (*)(void))sub_1AFBC5848);
}

void destroy for ForegroundEffectCoordinator.DoubleBuffer(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

_QWORD *_s9WeatherUI27ForegroundEffectCoordinatorC12DoubleBufferVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for ForegroundEffectCoordinator.DoubleBuffer(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ForegroundEffectCoordinator.DoubleBuffer(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for ForegroundEffectCoordinator.DoubleBuffer()
{
  return &type metadata for ForegroundEffectCoordinator.DoubleBuffer;
}

void sub_1AFBC93E8()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36[9];

  v36[0] = 6;
  v31 = 0xD000000000000010;
  v32 = 0x80000001B0051400;
  v33 = 0xD000000000000014;
  v34 = 0x80000001B0051420;
  v35 = 10;
  v27 = 0x80000001B0051DD0;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051DF0;
  v30 = 10;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB000000004D202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF4D656C676E6953;
  v25 = 15;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBC9C34();
  sub_1AFBC9C34();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1161527296;
  LODWORD(v6) = 1134559232;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 4, 0, 0x42400000C20C0000, 0x42F0000040200000, v6, 0x3E99999A3E6B851FLL, v7, 0x3F8000003F800000, 0x3E9B1DF63F800000, 0x3F8000003F800000, 0x3E7F0B0D3F800000, 1067450368,
    0x4270000000000000,
    v8,
    0x3E3851EB3E051EB8,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E9EFB2A3F800000,
    0x40000000,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFBC9C34()
{
  uint64_t v0;
  double v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  double v10;
  __n128 v11;
  double v12;
  __n128 v13;
  double v14;
  __int128 v15;
  __n128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  double v26;
  __n128 v27;
  float v28;
  double v29;
  double v30;
  __n128 v31;
  double v32;
  double v33;
  __n128 v34;
  double v35;
  __int128 v36;
  double v37;
  __n128 v38;
  __int128 v39;
  __n128 v40;
  __int128 v41;
  double v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  double v56;
  __n128 v57;
  float v58;
  float v59;
  float v60;
  float v61;
  double v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  double v67;
  __n128 v68;
  double v69;
  __n128 v70;
  double v71;
  __n128 v72;
  __int128 v73;
  __int128 v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  uint64_t v83;
  double v84;
  __n128 v85;
  float v86;
  float v87;
  float v88;
  __n128 v89;
  double v90;
  double v91;
  double v92;
  __n128 v93;
  __n128 v94;
  __int128 v95;
  __n128 v96;
  __int128 v97;
  _OWORD *v98;
  __n128 *v99;
  uint64_t v100;
  float v101;
  double v102;
  _OWORD *v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  uint64_t v110;
  __n128 v111;
  float v112;
  float v113;
  __int128 v114;
  __n128 v115;
  __int128 v116;
  __n128 *v117;
  uint64_t v118;
  float v119;
  uint64_t v120;
  float v121;
  double v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  uint64_t v130;
  __n128 v131;
  float v132;
  float v133;
  _OWORD *v134;
  double v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  uint64_t v143;
  float v144;
  float v145;
  _OWORD *v146;
  double v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  uint64_t v155;
  float v156;
  float v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  uint64_t v165;
  double v166;
  float v167;
  float v168;
  __n128 v169;
  double v170;
  double v171;
  double v172;
  double v173;
  __n128 v174;
  __n128 v175;
  __int128 v176;
  __n128 v177;
  __int128 v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  uint64_t v187;
  float v188;
  double v189;
  double v190;
  __n128 v191;
  double v192;
  double v193;
  __n128 v194;
  double v195;
  __int128 v196;
  double v197;
  __n128 v198;
  __int128 v199;
  __n128 v200;
  __int128 v201;
  double v202;
  __int128 v203;
  __n128 v204;
  __int128 v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  uint64_t v214;
  double v215;
  __n128 v216;
  float v217;
  float v218;
  float v219;
  float v220;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  int v331;
  int v332;
  int v333;
  int v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  __n128 v347;
  __n128 v348;
  __int128 v349;
  __n128 v350;
  __int128 v351;
  __int128 v352;
  __n128 v353;
  __n128 v354;
  __n128 v355;
  __n128 v356;
  __n128 v357;
  __n128 v358;
  __n128 v359;
  __int128 v360;
  __n128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __n128 v367;
  __int128 v368;
  __n128 v369;
  __int128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __n128 v374;
  __n128 v375;
  __n128 v376;
  __n128 v377;
  __n128 v378;
  __n128 v379;
  __int128 v380;
  __n128 v381;
  __n128 v382;
  __n128 v383;
  __int128 v384;
  __n128 v385;
  __int128 v386;
  __n128 v387;
  __n128 v388;
  __n128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __n128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __n128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v421 = xmmword_1B00276A0;
  v422 = xmmword_1B00276B0;
  v419 = xmmword_1B00287E0;
  v420 = xmmword_1B0028660;
  v417 = xmmword_1B00287F0;
  v418 = xmmword_1B0028050;
  v415 = xmmword_1B002AD20;
  v416 = xmmword_1B002AD30;
  __asm { FMOV            V4.2D, #1.0 }
  v413 = _Q4;
  v414 = xmmword_1B0025E50;
  v411 = xmmword_1B0028820;
  v412 = (__int128)_Q4;
  v409 = xmmword_1B0028830;
  v410 = xmmword_1B0028840;
  v407 = xmmword_1B00286C0;
  v408 = xmmword_1B00286D0;
  OUTLINED_FUNCTION_18_37((__n128)xmmword_1B0028850, (__n128)xmmword_1B00286F0, 1.0, v6, _Q4);
  v399 = v7;
  v400 = xmmword_1B0027030;
  v397 = xmmword_1B002AD40;
  v398 = xmmword_1B002AD50;
  OUTLINED_FUNCTION_27_15((__n128)xmmword_1B002AD60, (__n128)xmmword_1B002AD70);
  v393 = xmmword_1B002AD80;
  v394 = xmmword_1B002AD90;
  v391 = xmmword_1B00289B0;
  v392 = xmmword_1B002ADA0;
  v389 = v8;
  OUTLINED_FUNCTION_11_36((__n128)xmmword_1B0025E90, 0.540000021, v9, v10, v8);
  v379 = v11;
  OUTLINED_FUNCTION_10_38((__n128)xmmword_1B0027770, v12, v13, v14, v11);
  v351 = v15;
  v367 = v16;
  v352 = v17;
  v368 = v17;
  v365 = xmmword_1B002ADB0;
  v366 = xmmword_1B002ADC0;
  v363 = xmmword_1B002ADD0;
  v364 = xmmword_1B0029000;
  v350 = v16;
  v361 = v16;
  v362 = v15;
  v359 = v16;
  v360 = v17;
  v357 = v16;
  v358 = v16;
  v355 = v16;
  v356 = v16;
  v353 = v16;
  v354 = v16;
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_17_4(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, 200.0, v28, 0.1, 0.4, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v403,
    0,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v421 = xmmword_1B00276A0;
  v422 = xmmword_1B00276B0;
  *(_QWORD *)&v29 = OUTLINED_FUNCTION_9_21().n128_u64[0];
  v414 = v351;
  v32 = OUTLINED_FUNCTION_7_29(v29, *(double *)&v351, v30, v31);
  v400 = v352;
  *(_QWORD *)&v35 = OUTLINED_FUNCTION_5_29(v32, v33, *(double *)&v352, v34).n128_u64[0];
  v384 = v36;
  OUTLINED_FUNCTION_3_32(v35, *(double *)&v36, v37, v38);
  v370 = v39;
  v367 = v40;
  v368 = v41;
  v365 = xmmword_1B002ADE0;
  v366 = xmmword_1B002ADC0;
  *(_QWORD *)&v42 = OUTLINED_FUNCTION_29_26((__n128)xmmword_1B002ADF0, *(double *)&v39, *(double *)&v41, v40).n128_u64[0];
  v362 = v43;
  v359 = v44;
  v360 = v45;
  OUTLINED_FUNCTION_12_30(v42, *(double *)&v43, *(double *)&v45, v44);
  v335 = v46;
  OUTLINED_FUNCTION_0_29();
  v235 = v47;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_28_20();
  OUTLINED_FUNCTION_17_4(v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v403,
    v230,
    &v401,
    &v399,
    &v397,
    &v395,
    v235,
    v239,
    v243,
    v247,
    v251,
    v257,
    v263,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v315,
    v319,
    v323,
    v327,
    1112014848,
    1097859072,
    v335,
    v341);
  v421 = xmmword_1B00288D0;
  v422 = xmmword_1B00288E0;
  v419 = xmmword_1B00288F0;
  v420 = xmmword_1B0028900;
  v417 = xmmword_1B00276E0;
  v418 = xmmword_1B0026110;
  __asm { FMOV            V1.2D, #0.5 }
  v349 = _Q1;
  v415 = xmmword_1B002AE00;
  v416 = _Q1;
  v413 = v350;
  v414 = v351;
  v411 = xmmword_1B0029060;
  v412 = xmmword_1B0028940;
  v409 = (__int128)v350;
  v410 = (__int128)v350;
  v407 = xmmword_1B0028950;
  v408 = xmmword_1B0028960;
  OUTLINED_FUNCTION_18_37((__n128)xmmword_1B0028970, (__n128)xmmword_1B0028980, *(double *)&v351, v63, v350);
  v399 = v64;
  v400 = v352;
  v397 = xmmword_1B002AE10;
  v398 = xmmword_1B002AE20;
  OUTLINED_FUNCTION_27_15((__n128)xmmword_1B002AE30, (__n128)xmmword_1B002AE40);
  v393 = xmmword_1B002AE50;
  v394 = xmmword_1B002AE60;
  v391 = xmmword_1B00289B0;
  v392 = xmmword_1B002AE70;
  v389 = v65;
  OUTLINED_FUNCTION_11_36((__n128)xmmword_1B0025E90, 0.540000021, v66, v67, v65);
  v379 = v68;
  OUTLINED_FUNCTION_10_38((__n128)xmmword_1B0027770, v69, v70, v71, v68);
  v367 = v72;
  v368 = v73;
  v365 = xmmword_1B002AE80;
  v366 = xmmword_1B002ADC0;
  v363 = xmmword_1B002AE80;
  v364 = xmmword_1B0026FC0;
  v361 = v72;
  v362 = v74;
  v359 = v72;
  v360 = v73;
  OUTLINED_FUNCTION_8_29(0.800000072, 1.0, *(double *)&v74, *(double *)&v73, v72);
  OUTLINED_FUNCTION_2_24();
  v233 = v75;
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_17_4(v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, 0.4, v88, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v403,
    0,
    &v401,
    &v399,
    &v397,
    v233,
    v236,
    v240,
    v244,
    v248,
    v252,
    v258,
    v264,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    v336,
    v342);
  OUTLINED_FUNCTION_8_5();
  v419 = xmmword_1B0028A40;
  v420 = xmmword_1B0028A50;
  OUTLINED_FUNCTION_17_28();
  OUTLINED_FUNCTION_19_30((__n128)xmmword_1B002AE90, (__n128)xmmword_1B0026A00);
  v411 = xmmword_1B002AEA0;
  v412 = (__int128)v89;
  v409 = (__int128)v89;
  v410 = (__int128)v89;
  v407 = xmmword_1B0028A90;
  v408 = xmmword_1B0028AA0;
  v405 = xmmword_1B0028AB0;
  v406 = xmmword_1B0025F70;
  v403 = xmmword_1B0026320;
  v404 = xmmword_1B0026330;
  OUTLINED_FUNCTION_20_24(0.970078886, 0.97049284, v90, v91, v89);
  v397 = xmmword_1B002AEB0;
  v398 = xmmword_1B002AEC0;
  OUTLINED_FUNCTION_27_15((__n128)xmmword_1B002AED0, (__n128)xmmword_1B002AEE0);
  v393 = xmmword_1B002AEF0;
  v394 = xmmword_1B002AF00;
  v391 = xmmword_1B002AF10;
  v392 = xmmword_1B002AF20;
  OUTLINED_FUNCTION_4_36(0.920000017, 1.0, v92, v93, v94);
  v368 = v95;
  v365 = xmmword_1B002AF30;
  v366 = xmmword_1B002AF40;
  v363 = xmmword_1B002AF50;
  v364 = xmmword_1B002AF60;
  v361 = v96;
  v362 = v97;
  v359 = v96;
  v360 = v95;
  OUTLINED_FUNCTION_8_29(*(double *)&v95, 0.834304035, 1.0, *(double *)&v97, v96);
  OUTLINED_FUNCTION_2_24();
  v234 = v98;
  OUTLINED_FUNCTION_16_6();
  v348 = v99[32];
  v101 = *(float *)(v100 + 2620);
  v102 = OUTLINED_FUNCTION_21_12();
  OUTLINED_FUNCTION_28_6(v103, v104, v105, v106, v107, v108, v109, v110, v102, v111, 800.0, v112, v101, v113, &v407, &v405, 0x3F6666663F666666, 0, &v403,
    0,
    &v401,
    &v399,
    &v397,
    v234,
    v237,
    v241,
    v245,
    v249,
    v253,
    v259,
    v265,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    &v407,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    v337,
    v343);
  v421 = xmmword_1B002AF70;
  v422 = (__int128)v350;
  v419 = xmmword_1B002AF80;
  v420 = xmmword_1B002AF90;
  v417 = xmmword_1B0028220;
  v418 = xmmword_1B0028230;
  v415 = xmmword_1B002AFA0;
  v416 = xmmword_1B0026990;
  v413 = v350;
  v414 = v351;
  v411 = xmmword_1B002AFB0;
  v412 = xmmword_1B002AFC0;
  v409 = (__int128)v350;
  v410 = (__int128)v350;
  v407 = xmmword_1B002AFD0;
  v408 = xmmword_1B002AFE0;
  v405 = xmmword_1B0029130;
  v406 = xmmword_1B0025F70;
  v403 = xmmword_1B0027D70;
  v404 = xmmword_1B0027D80;
  v402 = 0u;
  v401 = 0u;
  v399 = v350;
  v400 = v352;
  v397 = xmmword_1B002AFF0;
  v398 = xmmword_1B002B000;
  v395 = xmmword_1B002B010;
  v396 = xmmword_1B002B020;
  v393 = xmmword_1B002B030;
  v394 = xmmword_1B002B040;
  v391 = xmmword_1B002B050;
  v392 = xmmword_1B002B060;
  v389 = v350;
  v390 = xmmword_1B0025E90;
  v387 = v350;
  v388 = v350;
  v385 = v350;
  v386 = xmmword_1B0025E90;
  v383 = v350;
  v384 = v351;
  OUTLINED_FUNCTION_3_32(1.0, *(double *)&v351, *(double *)&v352, v350);
  v370 = v114;
  v367 = v115;
  v368 = v116;
  v365 = xmmword_1B002B070;
  v366 = xmmword_1B002B080;
  v363 = xmmword_1B002B090;
  v364 = xmmword_1B002AF60;
  v361 = v115;
  v362 = v114;
  v359 = v115;
  v360 = v116;
  v357 = v115;
  v358 = v115;
  v355 = v115;
  v356 = v115;
  v353 = v115;
  v354 = v115;
  OUTLINED_FUNCTION_16_6();
  v347 = v117[66];
  v119 = *(float *)(v118 + 640);
  v121 = *(float *)(v120 + 2528);
  v122 = OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_28_6(v123, v124, v125, v126, v127, v128, v129, v130, v122, v131, v119, v132, v121, v133, &v407, &v405, 0x3F6666663F666666, 0, &v403,
    0,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v407,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v419 = xmmword_1B002AF80;
  v420 = xmmword_1B002AF90;
  v417 = xmmword_1B0028220;
  v418 = xmmword_1B0028230;
  v415 = xmmword_1B002AFA0;
  v416 = xmmword_1B0026990;
  v411 = xmmword_1B002AFB0;
  v412 = xmmword_1B002AFC0;
  v407 = xmmword_1B002AFD0;
  v408 = xmmword_1B002AFE0;
  v405 = xmmword_1B0029130;
  v403 = xmmword_1B0027D70;
  v404 = xmmword_1B0027D80;
  v397 = xmmword_1B002AFF0;
  v398 = xmmword_1B002B000;
  v395 = xmmword_1B002B010;
  v396 = xmmword_1B002B020;
  v393 = xmmword_1B002B030;
  v394 = xmmword_1B002B040;
  v391 = xmmword_1B002B050;
  v392 = xmmword_1B002B060;
  v365 = xmmword_1B002B070;
  v366 = xmmword_1B002B080;
  v363 = xmmword_1B002B090;
  v421 = xmmword_1B002AF70;
  v422 = (__int128)v350;
  v413 = v350;
  v414 = v351;
  v409 = (__int128)v350;
  v410 = (__int128)v350;
  v406 = xmmword_1B0025F70;
  v402 = 0u;
  v401 = 0u;
  v399 = v350;
  v400 = v352;
  v389 = v350;
  v390 = xmmword_1B0025E90;
  v387 = v350;
  v388 = v350;
  v385 = v350;
  v386 = xmmword_1B0025E90;
  v383 = v350;
  v384 = v351;
  v381 = v350;
  v382 = v350;
  v379 = v350;
  v380 = xmmword_1B0027770;
  v377 = v350;
  v378 = v350;
  v375 = v350;
  v376 = v350;
  v373 = v350;
  v374 = v350;
  v371 = v350;
  v372 = v350;
  v369 = v350;
  v370 = v351;
  v367 = v350;
  v368 = v352;
  v364 = xmmword_1B002AF60;
  v361 = v350;
  v362 = v351;
  v359 = v350;
  v360 = v352;
  v357 = v350;
  v358 = v350;
  v355 = v350;
  v356 = v350;
  v353 = v350;
  v354 = v350;
  OUTLINED_FUNCTION_1_27();
  v254 = v134;
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_26_29();
  v135 = OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_29_2(v136, v137, v138, v139, v140, v141, v142, v143, v135, v347, v119, v144, v121, v145, v222, v224, v226, v228, &v403,
    0,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    v254,
    v260,
    v266,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v312,
    v316,
    v320,
    v324,
    v328,
    v331,
    v333,
    v338,
    v344);
  v419 = xmmword_1B0028A40;
  v420 = xmmword_1B0028A50;
  v415 = xmmword_1B002AE90;
  v416 = xmmword_1B0026A00;
  v411 = xmmword_1B002AEA0;
  v407 = xmmword_1B0028A90;
  v408 = xmmword_1B0028AA0;
  v405 = xmmword_1B0028AB0;
  v406 = xmmword_1B0025F70;
  v403 = xmmword_1B0026320;
  v404 = xmmword_1B0026330;
  v397 = xmmword_1B002AEB0;
  v398 = xmmword_1B002AEC0;
  v395 = xmmword_1B002AED0;
  v396 = xmmword_1B002AEE0;
  v393 = xmmword_1B002AEF0;
  v394 = xmmword_1B002AF00;
  v391 = xmmword_1B002AF10;
  v392 = xmmword_1B002AF20;
  v365 = xmmword_1B002AF30;
  v366 = xmmword_1B002AF40;
  v363 = xmmword_1B002AF50;
  v364 = xmmword_1B002AF60;
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_17_28();
  v413 = v350;
  v414 = v351;
  v412 = (__int128)v350;
  v409 = (__int128)v350;
  v410 = (__int128)v350;
  v402 = 0u;
  v401 = 0u;
  v399 = v350;
  v400 = v352;
  v389 = v350;
  v390 = xmmword_1B0025E90;
  v387 = v350;
  v388 = v350;
  v385 = v350;
  v386 = xmmword_1B0025E90;
  v383 = v350;
  v384 = v351;
  v381 = v350;
  v382 = v350;
  v379 = v350;
  v380 = xmmword_1B0027770;
  v377 = v350;
  v378 = v350;
  v375 = v350;
  v376 = v350;
  v373 = v350;
  v374 = v350;
  v371 = v350;
  v372 = v350;
  v369 = v350;
  v370 = v351;
  v367 = v350;
  v368 = v352;
  v361 = v350;
  v362 = v351;
  v359 = v350;
  v360 = v352;
  v357 = v350;
  v358 = v350;
  v355 = v350;
  v356 = v350;
  v353 = v350;
  v354 = v350;
  OUTLINED_FUNCTION_0_29();
  v238 = v146;
  OUTLINED_FUNCTION_16_6();
  OUTLINED_FUNCTION_26_29();
  v147 = OUTLINED_FUNCTION_21_12();
  OUTLINED_FUNCTION_29_2(v148, v149, v150, v151, v152, v153, v154, v155, v147, v348, 800.0, v156, v101, v157, v223, v225, v227, v229, &v399,
    0,
    &v401,
    &v399,
    &v397,
    &v395,
    v238,
    v242,
    v246,
    v250,
    v255,
    v261,
    v267,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v313,
    v317,
    v321,
    v325,
    v329,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v421 = xmmword_1B00288D0;
  v422 = xmmword_1B00288E0;
  v419 = xmmword_1B00288F0;
  v420 = xmmword_1B0028900;
  OUTLINED_FUNCTION_17_28();
  v415 = xmmword_1B002AE00;
  v416 = v349;
  v413 = v350;
  v414 = v351;
  v411 = xmmword_1B0029060;
  v412 = xmmword_1B0028940;
  v409 = (__int128)v350;
  v410 = (__int128)v350;
  v407 = xmmword_1B0028950;
  v408 = xmmword_1B0028960;
  v405 = xmmword_1B0028970;
  v406 = xmmword_1B0028980;
  v403 = (__int128)v350;
  v404 = (__int128)v350;
  v402 = 0u;
  v401 = 0u;
  v399 = v350;
  v400 = v352;
  v397 = xmmword_1B002AE10;
  v398 = xmmword_1B0026E60;
  v395 = xmmword_1B00289B0;
  v396 = xmmword_1B002B0A0;
  v393 = xmmword_1B002AE50;
  v394 = xmmword_1B002AE60;
  v391 = xmmword_1B00289B0;
  v392 = xmmword_1B002B0B0;
  v389 = v350;
  v390 = xmmword_1B0025E90;
  v387 = v350;
  v388 = v350;
  v385 = v350;
  v386 = xmmword_1B0025E90;
  v383 = v350;
  v384 = v351;
  v381 = v350;
  v382 = v350;
  v379 = v350;
  v380 = xmmword_1B0027770;
  v377 = v350;
  v378 = v350;
  v375 = v350;
  v376 = v350;
  v373 = v350;
  v374 = v350;
  v371 = v350;
  v372 = v350;
  v369 = v350;
  v370 = v351;
  v367 = v350;
  v368 = v352;
  v365 = xmmword_1B002B0C0;
  v366 = xmmword_1B002B0D0;
  v363 = xmmword_1B002B0E0;
  v364 = xmmword_1B002B0A0;
  v361 = v350;
  v362 = v351;
  v359 = v350;
  v360 = v352;
  v357 = v350;
  v358 = v350;
  v355 = v350;
  v356 = v350;
  v353 = v350;
  v354 = v350;
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_16_0(v158, v159, v160, v161, v162, v163, v164, v165, v166, (__n128)xmmword_1B0028A30, 400.0, v167, 0.4, v168, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v399,
    0,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    &v355,
    (uint64_t)&v353);
  v421 = xmmword_1B00276A0;
  v422 = xmmword_1B00276B0;
  v419 = xmmword_1B00287E0;
  v420 = xmmword_1B0028660;
  v417 = xmmword_1B00287F0;
  v418 = xmmword_1B0028050;
  OUTLINED_FUNCTION_19_30((__n128)xmmword_1B002B0F0, (__n128)xmmword_1B002B100);
  v411 = xmmword_1B0028820;
  v412 = (__int128)v169;
  v409 = xmmword_1B0028830;
  v410 = xmmword_1B0028840;
  v407 = xmmword_1B00286C0;
  v408 = xmmword_1B00286D0;
  v405 = xmmword_1B0028850;
  v406 = xmmword_1B00286F0;
  v403 = (__int128)v169;
  v404 = (__int128)v169;
  OUTLINED_FUNCTION_20_24(0.698039234, v170, v171, v172, v169);
  v397 = xmmword_1B002B110;
  v398 = xmmword_1B002B120;
  OUTLINED_FUNCTION_27_15((__n128)xmmword_1B002B130, (__n128)xmmword_1B00271F0);
  v393 = xmmword_1B002AD80;
  v394 = xmmword_1B002B140;
  v391 = xmmword_1B00289B0;
  v392 = xmmword_1B002A030;
  OUTLINED_FUNCTION_4_36(0.600000024, 0.540000021, v173, v174, v175);
  v368 = v176;
  v365 = xmmword_1B002B150;
  v366 = xmmword_1B002B160;
  v363 = xmmword_1B002B170;
  v364 = xmmword_1B002B180;
  v361 = v177;
  v362 = v178;
  v359 = v177;
  v360 = v176;
  v357 = v177;
  v358 = v177;
  v355 = v177;
  v356 = v177;
  v353 = v177;
  v354 = v177;
  OUTLINED_FUNCTION_1_27();
  v256 = v179;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_16_0(v180, v181, v182, v183, v184, v185, v186, v187, -18.0, (__n128)xmmword_1B00288C0, 200.0, v188, 0.1, 0.4, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v403,
    v231,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    v256,
    v262,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v314,
    v318,
    v322,
    v326,
    v330,
    v332,
    v334,
    v339,
    v345);
  OUTLINED_FUNCTION_8_5();
  *(_QWORD *)&v189 = OUTLINED_FUNCTION_9_21().n128_u64[0];
  v414 = v351;
  v192 = OUTLINED_FUNCTION_7_29(v189, v190, *(double *)&v351, v191);
  v400 = v352;
  *(_QWORD *)&v195 = OUTLINED_FUNCTION_5_29(v192, *(double *)&v352, v193, v194).n128_u64[0];
  v384 = v196;
  OUTLINED_FUNCTION_3_32(v195, v197, *(double *)&v196, v198);
  v370 = v199;
  v367 = v200;
  v368 = v201;
  v365 = xmmword_1B002ADB0;
  v366 = xmmword_1B002ADC0;
  *(_QWORD *)&v202 = OUTLINED_FUNCTION_29_26((__n128)xmmword_1B002ADD0, *(double *)&v201, *(double *)&v199, v200).n128_u64[0];
  v362 = v203;
  v359 = v204;
  v360 = v205;
  OUTLINED_FUNCTION_12_30(v202, *(double *)&v205, *(double *)&v203, v204);
  v340 = v206;
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_6_25();
  OUTLINED_FUNCTION_28_20();
  OUTLINED_FUNCTION_16_0(v207, v208, v209, v210, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, &v407, &v405, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v403,
    v232,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    &v357,
    1112014848,
    1097859072,
    v340,
    v346);
  return v0;
}

void sub_1AFBCB2F0()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23[16];
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 6;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0050EC0;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0050EE0;
  v29 = 9;
  v21 = 0x2D20737572726943;
  v22 = 0xEA00000000004C20;
  strcpy(v23, "Cirrus_SingleL");
  v23[15] = -18;
  v24 = 10;
  v25 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFBCBB18();
  sub_1AFBCEE84();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3B03126F3F800000;
  *((_QWORD *)&v14 + 1) = 0x417000003F333333;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)v35, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x42400000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

