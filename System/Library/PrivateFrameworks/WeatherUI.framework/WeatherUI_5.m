char *initializeWithTake for PrecipitationRectangularContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B0007510();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 2, (uint64_t)v11))
  {
    v12 = type metadata accessor for PrecipitationComplicationDataStatus();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    v13 = v11[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v22 = v21[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v18[v21[6]] = v19[v21[6]];
    v18[v21[7]] = v19[v21[7]];
    *(_QWORD *)&v18[v21[8]] = *(_QWORD *)&v19[v21[8]];
    v18[v21[9]] = v19[v21[9]];
    v25 = v11[7];
    v26 = &v9[v25];
    v27 = &v10[v25];
    v28 = sub_1B00060E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    *(_QWORD *)&v9[v11[9]] = *(_QWORD *)&v10[v11[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 2, (uint64_t)v11);
  }
  return a1;
}

char *assignWithTake for PrecipitationRectangularContentView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  if (a1 != a2)
  {
    sub_1AFACE0DC((uint64_t)a1, &qword_1ED1F0C78);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B0007510();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 2, (uint64_t)v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 2, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      *v9 = *v10;
      v32 = v11[5];
      v33 = &v9[v32];
      v34 = &v10[v32];
      v35 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
      v36 = v11[6];
      v37 = &v9[v36];
      v38 = &v10[v36];
      v39 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
      v40 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v41 = v40[5];
      v42 = &v37[v41];
      v43 = &v38[v41];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v42[8] = v43[8];
      v37[v40[6]] = v38[v40[6]];
      v37[v40[7]] = v38[v40[7]];
      *(_QWORD *)&v37[v40[8]] = *(_QWORD *)&v38[v40[8]];
      v37[v40[9]] = v38[v40[9]];
      v44 = v11[7];
      v45 = &v9[v44];
      v46 = &v10[v44];
      v47 = sub_1B00060E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      *(_QWORD *)&v9[v11[9]] = *(_QWORD *)&v10[v11[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFAE2D74((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationComplicationViewModel);
    goto LABEL_10;
  }
  if (v13)
  {
LABEL_10:
    v30 = type metadata accessor for PrecipitationComplicationDataStatus();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v9 = *v10;
  v14 = v11[5];
  v15 = &v9[v14];
  v16 = &v10[v14];
  v17 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v11[6];
  v19 = &v9[v18];
  v20 = &v10[v18];
  v21 = sub_1B0005FB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v23 = v22[5];
  v24 = &v19[v23];
  v25 = &v20[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v19[v22[6]] = v20[v22[6]];
  v19[v22[7]] = v20[v22[7]];
  *(_QWORD *)&v19[v22[8]] = *(_QWORD *)&v20[v22[8]];
  v19[v22[9]] = v20[v22[9]];
  v26 = v11[7];
  v27 = &v9[v26];
  v28 = &v10[v26];
  v29 = sub_1B00060E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
  *(_QWORD *)&v9[v11[9]] = *(_QWORD *)&v10[v11[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 2, (uint64_t)v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationRectangularContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD737F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_15_4();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_6_5(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for PrecipitationRectangularContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD73860(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_15_4();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return OUTLINED_FUNCTION_5_4(v10, a2, a2, v9);
}

void sub_1AFD738C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AFBB5E88();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PrecipitationComplicationDataStatus();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_1AFD73950()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE737E0;
  if (!qword_1EEE737E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEE737E8);
    sub_1AFBB7034((uint64_t)&unk_1EEE73748);
    v3 = v2;
    v4[2] = &type metadata for PrecipitationRectangularContentView.Placeholder;
    v4[3] = sub_1AFD729B8();
    v4[0] = v3;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE737E0);
  }
  return result;
}

unint64_t sub_1AFD739F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v37 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_1AFACF5C4(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_BYTE *)(a2 + 48);
    sub_1AFBB61A0(v9, v10, v11, v12, v13);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 48) = v13;
    v14 = *(int *)(a3 + 24);
    v15 = a1 + v14;
    v16 = a2 + v14;
    *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
    v17 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
    v18 = v17[5];
    v19 = v15 + v18;
    v20 = v16 + v18;
    v21 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v17[6];
    v23 = v15 + v22;
    v24 = v16 + v22;
    v25 = sub_1B0005FB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v27 = v26[5];
    v28 = v23 + v27;
    v29 = v24 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
    *(_BYTE *)(v23 + v26[6]) = *(_BYTE *)(v24 + v26[6]);
    *(_BYTE *)(v23 + v26[7]) = *(_BYTE *)(v24 + v26[7]);
    *(_QWORD *)(v23 + v26[8]) = *(_QWORD *)(v24 + v26[8]);
    *(_BYTE *)(v23 + v26[9]) = *(_BYTE *)(v24 + v26[9]);
    v30 = v17[7];
    v31 = v15 + v30;
    v32 = v16 + v30;
    v33 = sub_1B00060E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    *(_QWORD *)(v15 + v17[8]) = *(_QWORD *)(v16 + v17[8]);
    *(_QWORD *)(v15 + v17[9]) = *(_QWORD *)(v16 + v17[9]);
    v34 = *(int *)(a3 + 28);
    v35 = a1 + v34;
    v36 = a2 + v34;
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AFD73BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AFACCD50(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1AFBB4D8C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  v6 = v4 + v5[5];
  v7 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v5[7];
  v11 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD73CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v16 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  v17 = v16[5];
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v16[6];
  v22 = v14 + v21;
  v23 = v15 + v21;
  v24 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v26 = v25[5];
  v27 = v22 + v26;
  v28 = v23 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_BYTE *)(v22 + v25[6]) = *(_BYTE *)(v23 + v25[6]);
  *(_BYTE *)(v22 + v25[7]) = *(_BYTE *)(v23 + v25[7]);
  *(_QWORD *)(v22 + v25[8]) = *(_QWORD *)(v23 + v25[8]);
  *(_BYTE *)(v22 + v25[9]) = *(_BYTE *)(v23 + v25[9]);
  v29 = v16[7];
  v30 = v14 + v29;
  v31 = v15 + v29;
  v32 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  *(_QWORD *)(v14 + v16[8]) = *(_QWORD *)(v15 + v16[8]);
  *(_QWORD *)(v14 + v16[9]) = *(_QWORD *)(v15 + v16[9]);
  v33 = *(int *)(a3 + 28);
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AFD73E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_BYTE *)(a2 + 48);
  sub_1AFBB61A0(v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v14;
  sub_1AFBB4D8C(v15, v16, v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v23 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  v24 = v23[5];
  v25 = v21 + v24;
  v26 = v22 + v24;
  v27 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = v23[6];
  v29 = v21 + v28;
  v30 = v22 + v28;
  v31 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  v32 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v33 = v32[5];
  v34 = v29 + v33;
  v35 = v30 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_BYTE *)(v29 + v32[6]) = *(_BYTE *)(v30 + v32[6]);
  *(_BYTE *)(v29 + v32[7]) = *(_BYTE *)(v30 + v32[7]);
  *(_QWORD *)(v29 + v32[8]) = *(_QWORD *)(v30 + v32[8]);
  *(_BYTE *)(v29 + v32[9]) = *(_BYTE *)(v30 + v32[9]);
  v36 = v23[7];
  v37 = v21 + v36;
  v38 = v22 + v36;
  v39 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  *(_QWORD *)(v21 + v23[8]) = *(_QWORD *)(v22 + v23[8]);
  *(_QWORD *)(v21 + v23[9]) = *(_QWORD *)(v22 + v23[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(int *)(a3 + 28);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  return a1;
}

uint64_t sub_1AFD74050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  v11 = v10[5];
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v20 = v19[5];
  v21 = v16 + v20;
  v22 = v17 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_BYTE *)(v16 + v19[6]) = *(_BYTE *)(v17 + v19[6]);
  *(_BYTE *)(v16 + v19[7]) = *(_BYTE *)(v17 + v19[7]);
  *(_QWORD *)(v16 + v19[8]) = *(_QWORD *)(v17 + v19[8]);
  *(_BYTE *)(v16 + v19[9]) = *(_BYTE *)(v17 + v19[9]);
  v23 = v10[7];
  v24 = v8 + v23;
  v25 = v9 + v23;
  v26 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  *(_QWORD *)(v8 + v10[8]) = *(_QWORD *)(v9 + v10[8]);
  *(_QWORD *)(v8 + v10[9]) = *(_QWORD *)(v9 + v10[9]);
  v27 = *(int *)(a3 + 28);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  return a1;
}

uint64_t sub_1AFD741DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *((_BYTE *)a2 + 48);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  v16 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 48) = v10;
  sub_1AFBB4D8C(v11, v12, v13, v14, v15);
  v17 = *(int *)(a3 + 24);
  v18 = a1 + v17;
  v19 = (uint64_t)a2 + v17;
  *(_BYTE *)(a1 + v17) = *((_BYTE *)a2 + v17);
  v20 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  v21 = v20[5];
  v22 = v18 + v21;
  v23 = v19 + v21;
  v24 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v20[6];
  v26 = v18 + v25;
  v27 = v19 + v25;
  v28 = sub_1B0005FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v30 = v29[5];
  v31 = v26 + v30;
  v32 = v27 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_BYTE *)(v26 + v29[6]) = *(_BYTE *)(v27 + v29[6]);
  *(_BYTE *)(v26 + v29[7]) = *(_BYTE *)(v27 + v29[7]);
  *(_QWORD *)(v26 + v29[8]) = *(_QWORD *)(v27 + v29[8]);
  *(_BYTE *)(v26 + v29[9]) = *(_BYTE *)(v27 + v29[9]);
  v33 = v20[7];
  v34 = v18 + v33;
  v35 = v19 + v33;
  v36 = sub_1B00060E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  *(_QWORD *)(v18 + v20[8]) = *(_QWORD *)(v19 + v20[8]);
  *(_QWORD *)(v18 + v20[9]) = *(_QWORD *)(v19 + v20[9]);
  swift_bridgeObjectRelease();
  v37 = *(int *)(a3 + 28);
  v38 = a1 + v37;
  v39 = (uint64_t)a2 + v37;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  return a1;
}

uint64_t sub_1AFD7438C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD74398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = OUTLINED_FUNCTION_12_2();
    return OUTLINED_FUNCTION_6_5(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AFD743F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD74404(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_12_2();
    return OUTLINED_FUNCTION_5_4(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AFD74460()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PrecipitationComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationRectangularContentView.Placeholder()
{
  return &type metadata for PrecipitationRectangularContentView.Placeholder;
}

uint64_t sub_1AFD744F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD74504()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD74514()
{
  uint64_t v0;

  sub_1AFACCD50(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_1AFBB4D8C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1AFD7454C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AFD724E0(a1, v2 + 16, a2);
}

uint64_t sub_1AFD74554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFD718BC(*(_QWORD *)(v1 + 16), a1);
}

double sub_1AFD74560()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_7_82();
  return sub_1AFD708C8(v0, v1);
}

uint64_t objectdestroy_11Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PrecipitationRectangularContentView.Content(0) - 8)
                          + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  sub_1AFACCD50(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_1AFBB4D8C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
  OUTLINED_FUNCTION_12_2();
  v3 = sub_1B0005B84();
  OUTLINED_FUNCTION_0_24(v3);
  v4 = sub_1B0005FB0();
  OUTLINED_FUNCTION_0_24(v4);
  v5 = sub_1B00060E8();
  OUTLINED_FUNCTION_0_24(v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1AFD74654()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_7_82();
  return sub_1AFD709B0(v0);
}

uint64_t sub_1AFD74674@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PrecipitationRectangularContentView.Content(0) - 8)
                          + 80);
  return sub_1AFD71018(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1AFD746C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEE739B8;
  if (!qword_1EEE739B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73920);
    v2[0] = sub_1AFD7472C();
    v2[1] = MEMORY[0x1E0CD9100];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEE739B8);
  }
  return result;
}

unint64_t sub_1AFD7472C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE739C0;
  if (!qword_1EEE739C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73918);
    sub_1AFBB7034((uint64_t)&unk_1EEE739C8);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE739C0);
  }
  return result;
}

void sub_1AFD747B0(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = sub_1B00076C0();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1AFD747E0()
{
  sub_1B00076CC();
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFD74818()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_1EEE739D8;
  if (!qword_1EEE739D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE738A8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73898);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73890);
    v5[4] = sub_1AFBB720C((uint64_t)&unk_1EEE738B8);
    v5[5] = sub_1AFBB6E88();
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v5[0] = OpaqueTypeConformance2;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE739D8);
  }
  return result;
}

unint64_t sub_1AFD7492C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD v5[6];

  result = qword_1EEE739E0;
  if (!qword_1EEE739E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73950);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73940);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73938);
    v5[4] = sub_1AFBB720C((uint64_t)&unk_1EEE73960);
    v5[5] = sub_1AFBB6E88();
    v5[2] = v2;
    v5[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v5[0] = OpaqueTypeConformance2;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE739E0);
  }
  return result;
}

void sub_1AFD74A3C()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 2;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 6;
  v26 = 0xEB000000004D202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4D656C676E6953;
  v29 = 10;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 10;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFD75248();
  sub_1AFD75248();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1167663104;
  LODWORD(v5) = 1128792064;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42DC00003F800000, v5, 0x3E6147AE3E2E147BLL, v6, 0x3F8000003F800000, 0x3E4CCCCD3F800000, 0x3F8000003F800000, 0x3E428F5C3F800000, 1065353216,
    0x428C000000000000,
    v7,
    0x3E23D70A3DCCCCCDLL,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    1056964608,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFD75248()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __int128 v9;
  __n128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  float v23;
  double v24;
  double v25;
  __n128 v26;
  double v27;
  __n128 v28;
  double v29;
  __int128 v30;
  __n128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  float v44;
  __n128 v45;
  __int128 v46;
  uint64_t v47;
  float v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  double v57;
  __n128 v58;
  float v59;
  float v60;
  float v61;
  double v62;
  __n128 v63;
  __n128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD *v67;
  __n128 *v68;
  uint64_t v69;
  float v70;
  uint64_t v71;
  float v72;
  double v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  uint64_t v81;
  __n128 v82;
  float v83;
  float v84;
  float v85;
  double v86;
  __n128 v87;
  __n128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD *v91;
  double v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  uint64_t v100;
  __n128 v101;
  float v102;
  float v103;
  float v104;
  float v105;
  float v106;
  float v107;
  double v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  __n128 v117;
  float v118;
  float v119;
  float v120;
  float v121;
  float v122;
  float v123;
  double v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  uint64_t v132;
  float v133;
  float v134;
  float v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  uint64_t v143;
  double v144;
  __n128 v145;
  float v146;
  double v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  uint64_t v159;
  float v160;
  __n128 v161;
  __n128 v162;
  __n128 v163;
  _OWORD *v164;
  _OWORD *v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  float v173;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  int v188;
  int v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  __n128 v350;
  __n128 v351;
  __int128 v352;
  __int128 v353;
  __n128 v354;
  __n128 v355;
  __n128 v356;
  __n128 v357;
  __n128 v358;
  __n128 v359;
  __n128 v360;
  __int128 v361;
  __n128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __n128 v368;
  __int128 v369;
  __n128 v370;
  __int128 v371;
  __n128 v372;
  __n128 v373;
  __n128 v374;
  __n128 v375;
  __n128 v376;
  __n128 v377;
  __n128 v378;
  __n128 v379;
  __n128 v380;
  __int128 v381;
  __n128 v382;
  __n128 v383;
  __n128 v384;
  __int128 v385;
  __n128 v386;
  __int128 v387;
  __n128 v388;
  __n128 v389;
  __n128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __n128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  _OWORD v408[2];
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v421 = xmmword_1B00292B0;
  v422 = xmmword_1B00292C0;
  v419 = xmmword_1B00292D0;
  v420 = xmmword_1B00292E0;
  v417 = xmmword_1B0028220;
  v418 = xmmword_1B0028230;
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00292F0, (__n128)xmmword_1B0029300);
  v413 = xmmword_1B0029310;
  v414 = xmmword_1B0025EA0;
  v411 = xmmword_1B0027B20;
  v412 = xmmword_1B0027B30;
  v409 = xmmword_1B0029320;
  v410 = xmmword_1B0029330;
  v408[0] = xmmword_1B0029340;
  v408[1] = xmmword_1B0029350;
  v406 = xmmword_1B0029360;
  v407 = xmmword_1B0029370;
  __asm { FMOV            V2.2D, #1.0 }
  OUTLINED_FUNCTION_23_57(0.380392194, 0.509803951, _Q2);
  v400 = v6;
  v401 = xmmword_1B0027030;
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029380, (__n128)xmmword_1B0029390);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B00293A0, (__n128)xmmword_1B00293B0);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B00293C0, (__n128)xmmword_1B00293D0);
  v392 = xmmword_1B00293E0;
  v393 = xmmword_1B00293F0;
  v390 = v7;
  OUTLINED_FUNCTION_26_22((__n128)xmmword_1B0025E90, 0.353558868, v7);
  v384 = v8;
  v385 = xmmword_1B0025E50;
  v382 = v8;
  v383 = v8;
  v380 = v8;
  OUTLINED_FUNCTION_13_28((__n128)xmmword_1B0027770, 1.0, v8);
  v371 = v9;
  v353 = v9;
  v368 = v10;
  v352 = v11;
  v369 = v11;
  v366 = xmmword_1B0029400;
  v367 = xmmword_1B00287A0;
  v364 = xmmword_1B0029410;
  v365 = xmmword_1B0029420;
  v351 = v10;
  v362 = v10;
  v363 = v9;
  v360 = v10;
  v361 = v11;
  OUTLINED_FUNCTION_20_16(1.0, 0.810572743, v10);
  v342 = v12;
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_17_4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 650.0, 35.0, 0.3, v23, v408, &v406, 0x3F4CCCCD3F4CCCCDLL, 0, &v404,
    1067450368,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    v342);
  v421 = xmmword_1B00292B0;
  v422 = xmmword_1B00292C0;
  v419 = xmmword_1B00292D0;
  v420 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B0029430, (__n128)xmmword_1B0029440);
  v413 = xmmword_1B0029310;
  v414 = xmmword_1B0025EA0;
  *(_QWORD *)&v24 = OUTLINED_FUNCTION_3_24().n128_u64[0];
  OUTLINED_FUNCTION_23_57(v24, v25, v351);
  v400 = v26;
  v401 = v352;
  v398 = xmmword_1B0029380;
  v399 = xmmword_1B0029390;
  v396 = xmmword_1B00293A0;
  v397 = xmmword_1B00293B0;
  v394 = xmmword_1B00293C0;
  v395 = xmmword_1B00293D0;
  v392 = xmmword_1B00293E0;
  v393 = xmmword_1B00293F0;
  v390 = v26;
  OUTLINED_FUNCTION_26_22((__n128)xmmword_1B0025E90, v27, v26);
  v384 = v28;
  v385 = v353;
  v382 = v28;
  v383 = v28;
  v380 = v28;
  OUTLINED_FUNCTION_13_28((__n128)xmmword_1B0027770, v29, v28);
  v371 = v30;
  v368 = v31;
  v369 = v32;
  v366 = xmmword_1B0029400;
  v367 = xmmword_1B00287A0;
  v364 = xmmword_1B0029410;
  v365 = xmmword_1B0029450;
  v362 = v31;
  v363 = v30;
  v360 = v31;
  v361 = v32;
  OUTLINED_FUNCTION_20_16(0.810572743, 1.0, v31);
  v343 = v33;
  OUTLINED_FUNCTION_2_15();
  OUTLINED_FUNCTION_25_0();
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_17_4(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, 650.0, 35.0, 0.3, v44, v408, &v406, 0x3F4CCCCD3F4CCCCDLL, 0, &v404,
    1067450368,
    &v402,
    &v400,
    &v398,
    v198,
    v204,
    v212,
    v220,
    v228,
    v236,
    v244,
    v252,
    v260,
    v268,
    v274,
    v280,
    v286,
    v292,
    v298,
    v304,
    v310,
    v316,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    v343);
  v421 = xmmword_1B0029460;
  v422 = xmmword_1B0029470;
  v419 = xmmword_1B0029480;
  v420 = xmmword_1B0029490;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00294A0, (__n128)xmmword_1B00294B0);
  v413 = xmmword_1B00294C0;
  v414 = xmmword_1B00294D0;
  OUTLINED_FUNCTION_3_24();
  v404 = (__int128)v351;
  v405 = (__int128)v351;
  v403 = 0u;
  v402 = 0u;
  v400 = v351;
  v401 = v352;
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B00294E0, (__n128)xmmword_1B00294F0);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029500, (__n128)xmmword_1B0029510);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029520, (__n128)xmmword_1B0029530);
  v392 = xmmword_1B0029540;
  v393 = xmmword_1B0029550;
  v390 = v45;
  v391 = xmmword_1B0025E90;
  v388 = v45;
  v389 = v45;
  v386 = v45;
  v387 = xmmword_1B0025E90;
  v384 = v45;
  v385 = v353;
  v382 = v45;
  v383 = v45;
  v380 = v45;
  v381 = xmmword_1B0027770;
  v378 = v45;
  v379 = v45;
  v376 = v45;
  v377 = v45;
  v374 = v45;
  v375 = v45;
  v372 = v45;
  v373 = v45;
  v370 = v45;
  v371 = v353;
  v368 = v45;
  v369 = v46;
  v366 = xmmword_1B0029560;
  v367 = xmmword_1B0029570;
  v364 = xmmword_1B0029580;
  v365 = xmmword_1B0029590;
  v362 = v45;
  v363 = v353;
  v360 = v45;
  v361 = v46;
  OUTLINED_FUNCTION_18_31(0.810572863, 1.0, *(double *)&v46, v45);
  OUTLINED_FUNCTION_2_15();
  OUTLINED_FUNCTION_25_0();
  v48 = *(float *)(v47 + 2524);
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_17_4(v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v48, v61, v408, &v406, 0x3F4CCCCD3F4CCCCDLL, 0, &v404,
    1067450368,
    &v402,
    &v400,
    &v398,
    v199,
    v205,
    v213,
    v221,
    v229,
    v237,
    v245,
    v253,
    v261,
    v269,
    v275,
    v281,
    v287,
    v293,
    v299,
    v305,
    v311,
    v317,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    v344);
  v421 = xmmword_1B00295A0;
  v422 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_19_23();
  v417 = xmmword_1B00295C0;
  v418 = xmmword_1B00295D0;
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B00295E0, (__n128)xmmword_1B00295F0);
  v413 = xmmword_1B0029600;
  OUTLINED_FUNCTION_22_6();
  v409 = xmmword_1B0029610;
  v410 = xmmword_1B0029620;
  OUTLINED_FUNCTION_31_14();
  v406 = xmmword_1B0029630;
  v407 = xmmword_1B0026A00;
  OUTLINED_FUNCTION_15_32((__n128)xmmword_1B0026320, (__n128)xmmword_1B0026330);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029640, (__n128)xmmword_1B0029650);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029660, (__n128)xmmword_1B0029670);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029680, (__n128)xmmword_1B0029690);
  OUTLINED_FUNCTION_6_19((__n128)xmmword_1B00296A0, (__n128)xmmword_1B00296B0, v62, v63);
  v368 = v64;
  v369 = v65;
  v366 = xmmword_1B00296C0;
  v367 = xmmword_1B00296D0;
  v364 = xmmword_1B00296E0;
  v365 = xmmword_1B0026FC0;
  v362 = v64;
  v363 = v66;
  v360 = v64;
  v361 = v65;
  OUTLINED_FUNCTION_18_31(*(double *)&v65, 0.752212405, 1.0, v64);
  OUTLINED_FUNCTION_4_28();
  v206 = v67;
  OUTLINED_FUNCTION_25_0();
  v350 = v68[66];
  v70 = *(float *)(v69 + 2616);
  v72 = *(float *)(v71 + 3240);
  v73 = OUTLINED_FUNCTION_21_23();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v74, v75, v76, v77, v78, v79, v80, v81, v73, v82, 1400.0, v83, v84, v85, v70, v72, v408, &v406,
    0x3F6666663F666666,
    0,
    &v404,
    1065353216,
    &v402,
    &v400,
    &v398,
    &v396,
    v206,
    v214,
    v222,
    v230,
    v238,
    v246,
    v254,
    v262,
    v270,
    v276,
    v282,
    v288,
    v294,
    v300,
    v306,
    &v364,
    &v362,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    v345);
  v421 = xmmword_1B00296F0;
  v422 = xmmword_1B0029700;
  v419 = xmmword_1B0029710;
  v420 = xmmword_1B0029720;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_23_22((__n128)xmmword_1B0029730, (__n128)xmmword_1B0029740);
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_15_32((__n128)xmmword_1B0027D70, (__n128)xmmword_1B0027D80);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0029750, (__n128)xmmword_1B0029760);
  OUTLINED_FUNCTION_29_20((__n128)xmmword_1B0029770, (__n128)xmmword_1B0029780);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029790, (__n128)xmmword_1B00297A0);
  OUTLINED_FUNCTION_6_19((__n128)xmmword_1B00297B0, (__n128)xmmword_1B00297C0, v86, v87);
  v368 = v88;
  v369 = v89;
  v366 = xmmword_1B00297D0;
  v367 = xmmword_1B00297E0;
  v364 = xmmword_1B00297F0;
  v365 = xmmword_1B0029800;
  v362 = v88;
  v363 = v90;
  v360 = v88;
  v361 = v89;
  v358 = v88;
  v359 = v88;
  v356 = v88;
  v357 = v88;
  v354 = v88;
  v355 = v88;
  OUTLINED_FUNCTION_4_28();
  v207 = v91;
  OUTLINED_FUNCTION_10_34();
  v92 = OUTLINED_FUNCTION_11_18();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v93, v94, v95, v96, v97, v98, v99, v100, v92, v101, v102, v103, v104, v105, v106, v107, v408, &v406,
    v175,
    v180,
    v185,
    1065353216,
    &v402,
    &v400,
    &v398,
    &v396,
    v207,
    v215,
    v223,
    v231,
    v239,
    v247,
    v255,
    v263,
    v271,
    v277,
    v283,
    v289,
    v295,
    v301,
    v307,
    &v364,
    &v362,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    (uint64_t)&v354);
  v421 = xmmword_1B00296F0;
  v422 = xmmword_1B0029700;
  v419 = xmmword_1B0029710;
  v420 = xmmword_1B0029720;
  v415 = xmmword_1B0029730;
  v416 = xmmword_1B0029740;
  v404 = xmmword_1B0027D70;
  v405 = xmmword_1B0027D80;
  v398 = xmmword_1B0029750;
  v399 = xmmword_1B0029760;
  v396 = xmmword_1B0029770;
  v397 = xmmword_1B0029780;
  v394 = xmmword_1B0029790;
  v395 = xmmword_1B00297A0;
  v392 = xmmword_1B00297B0;
  v393 = xmmword_1B00297C0;
  v366 = xmmword_1B00297D0;
  v367 = xmmword_1B00297E0;
  v364 = xmmword_1B00297F0;
  v365 = xmmword_1B0029800;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_10_34();
  v108 = OUTLINED_FUNCTION_11_18();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v109, v110, v111, v112, v113, v114, v115, v116, v108, v117, v118, v119, v120, v121, v122, v123, v408, &v406,
    v176,
    v181,
    v186,
    1065353216,
    &v402,
    &v400,
    v194,
    v200,
    v208,
    v216,
    v224,
    v232,
    v240,
    v248,
    v256,
    v264,
    v272,
    v278,
    v284,
    v290,
    v296,
    v302,
    v308,
    v312,
    v318,
    v322,
    v326,
    v330,
    v334,
    v338,
    v346);
  v421 = xmmword_1B00295A0;
  v422 = xmmword_1B00295B0;
  v417 = xmmword_1B00295C0;
  v418 = xmmword_1B00295D0;
  v415 = xmmword_1B00295E0;
  v416 = xmmword_1B00295F0;
  v413 = xmmword_1B0029600;
  v409 = xmmword_1B0029610;
  v410 = xmmword_1B0029620;
  v406 = xmmword_1B0029630;
  v407 = xmmword_1B0026A00;
  v404 = xmmword_1B0026320;
  v405 = xmmword_1B0026330;
  v398 = xmmword_1B0029640;
  v399 = xmmword_1B0029650;
  v396 = xmmword_1B0029660;
  v397 = xmmword_1B0029670;
  v394 = xmmword_1B0029680;
  v395 = xmmword_1B0029690;
  v392 = xmmword_1B00296A0;
  v393 = xmmword_1B00296B0;
  v366 = xmmword_1B00296C0;
  v367 = xmmword_1B00296D0;
  v364 = xmmword_1B00296E0;
  v365 = xmmword_1B0026FC0;
  OUTLINED_FUNCTION_19_23();
  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_31_14();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_10_34();
  v124 = OUTLINED_FUNCTION_21_23();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v125, v126, v127, v128, v129, v130, v131, v132, v124, v350, 1400.0, v133, v134, v135, v70, v72, v408, &v406,
    v177,
    v182,
    v187,
    1065353216,
    &v402,
    &v400,
    v195,
    v201,
    v209,
    v217,
    v225,
    v233,
    v241,
    v249,
    v257,
    v265,
    v273,
    v279,
    v285,
    v291,
    v297,
    v303,
    v309,
    v313,
    v319,
    v323,
    v327,
    v331,
    v335,
    v339,
    v347);
  v421 = xmmword_1B0029460;
  v422 = xmmword_1B0029470;
  OUTLINED_FUNCTION_19_23();
  v415 = xmmword_1B00294A0;
  v416 = xmmword_1B00294B0;
  v413 = xmmword_1B00294C0;
  v414 = xmmword_1B00294D0;
  v398 = xmmword_1B00294E0;
  v399 = xmmword_1B00294F0;
  v396 = xmmword_1B0029500;
  v397 = xmmword_1B0029510;
  v394 = xmmword_1B0029520;
  v395 = xmmword_1B0029530;
  v392 = xmmword_1B0029540;
  v393 = xmmword_1B0029550;
  v366 = xmmword_1B0029560;
  v367 = xmmword_1B0029570;
  v364 = xmmword_1B0029580;
  v365 = xmmword_1B0029590;
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_3_24();
  v404 = (__int128)v351;
  v405 = (__int128)v351;
  v403 = 0u;
  v402 = 0u;
  v400 = v351;
  v401 = v352;
  v390 = v351;
  v391 = xmmword_1B0025E90;
  v388 = v351;
  v389 = v351;
  v386 = v351;
  v387 = xmmword_1B0025E90;
  v384 = v351;
  v385 = v353;
  v382 = v351;
  v383 = v351;
  v380 = v351;
  v381 = xmmword_1B0027770;
  v378 = v351;
  v379 = v351;
  v376 = v351;
  v377 = v351;
  v374 = v351;
  v375 = v351;
  v372 = v351;
  v373 = v351;
  v370 = v351;
  v371 = v353;
  v368 = v351;
  v369 = v352;
  v362 = v351;
  v363 = v353;
  v360 = v351;
  v361 = v352;
  v358 = v351;
  v359 = v351;
  v356 = v351;
  v357 = v351;
  v354 = v351;
  v355 = v351;
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_12_23();
  OUTLINED_FUNCTION_16_0(v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, 900.0, 150.0, v48, v146, v408, &v406, v178, v183, &v404,
    1067450368,
    &v402,
    &v400,
    &v398,
    &v396,
    &v394,
    &v392,
    &v390,
    &v388,
    &v386,
    &v384,
    &v382,
    &v380,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    &v364,
    &v362,
    &v360,
    &v358,
    1112014848,
    1097859072,
    &v356,
    (uint64_t)&v354);
  v415 = xmmword_1B0029430;
  v416 = xmmword_1B0029440;
  v365 = xmmword_1B0029450;
  v364 = xmmword_1B0029410;
  v421 = xmmword_1B00292B0;
  v422 = xmmword_1B00292C0;
  v419 = xmmword_1B00292D0;
  v420 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  *(_QWORD *)&v147 = OUTLINED_FUNCTION_1_21().n128_u64[0];
  OUTLINED_FUNCTION_7_25(v147, v148, v149, v150);
  v314 = v151;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_16_0(v152, v153, v154, v155, v156, v157, v158, v159, -18.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, v160, v408, &v406, v179, v184, &v404,
    v188,
    v190,
    v192,
    v196,
    v202,
    v210,
    v218,
    v226,
    v234,
    v242,
    v250,
    v258,
    v266,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    v314,
    v320,
    v324,
    v328,
    v332,
    v336,
    v340,
    v348);
  v421 = xmmword_1B00292B0;
  v422 = xmmword_1B00292C0;
  v419 = xmmword_1B00292D0;
  v420 = xmmword_1B00292E0;
  OUTLINED_FUNCTION_9_15();
  v415 = xmmword_1B00292F0;
  v416 = xmmword_1B0029300;
  OUTLINED_FUNCTION_1_21();
  v364 = xmmword_1B0029410;
  v365 = xmmword_1B0029420;
  OUTLINED_FUNCTION_7_25(1.0, v161, v162, v163);
  v315 = v164;
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_16_0(v165, v166, v167, v168, v169, v170, v171, v172, -90.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, v173, v408, &v406, 0x3F4CCCCD3F4CCCCDLL, 0, &v404,
    v189,
    v191,
    v193,
    v197,
    v203,
    v211,
    v219,
    v227,
    v235,
    v243,
    v251,
    v259,
    v267,
    &v378,
    &v376,
    &v374,
    &v372,
    &v370,
    &v368,
    &v366,
    v315,
    v321,
    v325,
    v329,
    v333,
    v337,
    v341,
    v349);
  return v0;
}

uint64_t sub_1AFD76514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v28 = a2;
  v4 = sub_1B0005470();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1680);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v21 = (uint64_t)v20 - v13;
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
    return MEMORY[0x1E0DEE9D8];
  v20[1] = v2;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  do
  {
    v16 = a1;
    v27 = *(_OWORD *)(a1 + 16 * v14 + 32);
    v23(v7, v28, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BD0);
    sub_1AFB23DC0(&qword_1ED1EDA40, &qword_1ED1F3BD0);
    sub_1AFADA43C(&qword_1ED1ECAD0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
    sub_1B000892C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v26) == 1)
    {
      sub_1AFACB308((uint64_t)v10, &qword_1ED1F1680);
    }
    else
    {
      v17 = v21;
      sub_1AFAE8274((uint64_t)v10, v21, &qword_1ED1F4128);
      sub_1AFAE8274(v17, v25, &qword_1ED1F4128);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1AFD0AFA8();
      v18 = *(_QWORD *)(v15 + 16);
      if (v18 >= *(_QWORD *)(v15 + 24) >> 1)
        v15 = sub_1AFD0AFA8();
      *(_QWORD *)(v15 + 16) = v18 + 1;
      sub_1AFAE8274(v25, v15+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v18, &qword_1ED1F4128);
    }
    ++v14;
    a1 = v16;
  }
  while (v24 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1AFD7680C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(_BYTE *, uint64_t);
  void (*v32)(_BYTE *, _QWORD);
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, _QWORD);
  _BYTE v49[16];
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, uint64_t, __n128);
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE v72[72];
  uint64_t v73;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2780);
  MEMORY[0x1E0C80A78](v3);
  v52 = &v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  MEMORY[0x1E0C80A78](v51);
  v50 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2618);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v64 = sub_1B00053F8();
  v70 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v71 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = sub_1B0005404();
  v8 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v68 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v67 = &v49[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  MEMORY[0x1E0C80A78](v12);
  v65 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1B0005410();
  v15 = (void (*)(uint64_t))MEMORY[0x1E0CAF160];
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = &v49[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = v16;
  v58 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v16 + 16);
  v58(v18, a1, v14, v20);
  sub_1AFADA43C(&qword_1ED1EC780, v15);
  v59 = v18;
  v62 = v14;
  sub_1B00086F8();
  v23 = *(int *)(v19 + 36);
  v66 = v22;
  v24 = &v22[v23];
  v69 = v8;
  v61 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
  v54 = 0x80000001B00501F0;
  while (1)
  {
    v25 = v67;
    v26 = v63;
    v61(v67, v24, v63);
    sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
    v27 = v68;
    v28 = (uint64_t)v66;
    v29 = v62;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v30 = sub_1B0008530();
    v31 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
    v31(v27, v26);
    v31(v25, v26);
    if ((v30 & 1) != 0)
      break;
    v32 = (void (*)(_BYTE *, _QWORD))sub_1B00088FC();
    v33 = v70;
    v34 = v65;
    v35 = v29;
    v36 = v64;
    (*(void (**)(_BYTE *))(v70 + 16))(v65);
    v32(v72, 0);
    v37 = v59;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v58)(v59, v28, v35);
    sub_1B00088F0();
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v37, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v36) == 1)
      goto LABEL_11;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 32))(v71, v34, v36);
    swift_getKeyPath();
    sub_1AFB4BFF0();
    v38 = v55;
    sub_1B00053E0();
    swift_release();
    swift_getKeyPath();
    sub_1AFB3D614();
    v39 = v57;
    sub_1B0005608();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v38, v39);
    v40 = v73;
    if (v73)
    {
      if (*(_QWORD *)(v73 + 16))
      {
        sub_1B0009004();
        sub_1B0008614();
        v41 = sub_1B0009040() & ~(-1 << *(_BYTE *)(v40 + 32));
        v42 = *(_QWORD *)(v40 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
        swift_bridgeObjectRelease();
        if (((v42 >> v41) & 1) != 0)
        {
          v43 = (uint64_t)v50;
          sub_1B00053EC();
          KeyPath = swift_getKeyPath();
          MEMORY[0x1E0C80A78](KeyPath);
          *(_QWORD *)&v49[-16] = v45;
          swift_getKeyPath();
          v46 = (uint64_t)v52;
          sub_1B0007D20();
          v47 = sub_1B0007D2C();
          __swift_storeEnumTagSinglePayload(v46, 0, 1, v47);
          sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
          v48 = (void (*)(_BYTE *, _QWORD))sub_1B00054A0();
          sub_1AFD2CB04();
          sub_1B0005524();
          v48(v72, 0);
          sub_1AFACB308(v43, &qword_1ED1F4128);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v71, v36);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v65, 1, 1, v64);
LABEL_11:
  sub_1AFACB308(v28, &qword_1ED1F4198);
}

void sub_1AFD76EDC(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char v48[32];
  uint64_t v49;

  v35 = a1;
  v36 = a2;
  v42 = sub_1B00053F8();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v34 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B0005404();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v34 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B0005410();
  v12 = (void (*)(uint64_t))MEMORY[0x1E0CAF160];
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v13;
  v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v37(v15, v2, v11, v17);
  sub_1AFADA43C(&qword_1ED1EC780, v12);
  v38 = v15;
  sub_1B00086F8();
  v20 = *(int *)(v16 + 36);
  v46 = v5;
  v47 = v19;
  v21 = &v19[v20];
  v43 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  while (1)
  {
    v22 = v44;
    v43(v44, v21, v4);
    sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
    v23 = v45;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v24 = sub_1B0008530();
    v25 = *(void (**)(char *, uint64_t))(v46 + 8);
    v25(v23, v4);
    v25(v22, v4);
    if ((v24 & 1) != 0)
    {
      __swift_storeEnumTagSinglePayload(v41, 1, 1, v42);
LABEL_7:
      sub_1AFACB308((uint64_t)v19, &qword_1ED1F4198);
      return;
    }
    v26 = (void (*)(char *, _QWORD))sub_1B00088FC();
    v28 = v40;
    v27 = v41;
    v29 = v42;
    (*(void (**)(uint64_t))(v40 + 16))(v41);
    v26(v48, 0);
    v30 = v38;
    ((void (*)(char *, char *, uint64_t))v37)(v38, v19, v11);
    v31 = v27;
    sub_1B00088F0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v11);
    __swift_storeEnumTagSinglePayload(v27, 0, 1, v29);
    if (__swift_getEnumTagSinglePayload(v27, 1, v29) == 1)
      goto LABEL_7;
    v32 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v34, v31, v29);
    v33 = v49;
    v35(v32);
    if (v33)
      break;
    v49 = 0;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v29);
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v29);
  sub_1AFACB308((uint64_t)v47, &qword_1ED1F4198);
}

uint64_t sub_1AFD772BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v33 = a2;
  v7 = sub_1B0005470();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v30 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECAD8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v36 = a4;
  v34 = v18;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v18)(a4, a1, v7, v15);
  v19 = *(_QWORD *)(a3 + 16);
  v30[1] = a3;
  if (v19)
  {
    v20 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v31 = *(_QWORD *)(v8 + 72);
    v32 = v8;
    swift_bridgeObjectRetain();
    v21 = v36;
    while (1)
    {
      v35 = v19;
      v34(v17, v20, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v7);
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v7) == 1)
        break;
      v22 = v17;
      v23 = v32;
      v24 = *(void (**)(char *))(v32 + 32);
      v25 = v22;
      v24(v13);
      v26 = v37;
      v33(v21, v13);
      v37 = v26;
      if (v26)
      {
        v29 = *(void (**)(char *, uint64_t))(v23 + 8);
        v29(v13, v7);
        swift_bridgeObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v29)(v21, v7);
      }
      v27 = *(void (**)(char *, uint64_t))(v23 + 8);
      v27(v13, v7);
      v27(v36, v7);
      v21 = v36;
      ((void (*)(char *, char *, uint64_t))v24)(v36, v10, v7);
      v20 += v31;
      v19 = v35 - 1;
      v17 = v25;
      if (v35 == 1)
        goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_8:
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v7);
  }
  return swift_bridgeObjectRelease();
}

void sub_1AFD77508()
{
  sub_1AFD775E4();
}

void sub_1AFD77514()
{
  sub_1AFD7767C();
}

void sub_1AFD77520()
{
  OUTLINED_FUNCTION_23_7();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD77548()
{
  sub_1AFD77704();
}

void sub_1AFD77554()
{
  sub_1AFD775E4();
}

void sub_1AFD77560(uint64_t a1)
{
  OUTLINED_FUNCTION_90_2(a1, a1, (void (*)(uint64_t))BoundEntity.rawValue.getter);
}

void sub_1AFD77580(uint64_t a1)
{
  OUTLINED_FUNCTION_90_2(a1, a1, (void (*)(uint64_t))BoundPropertyName.rawValue.getter);
}

void sub_1AFD775A0()
{
  sub_1AFD77780();
}

void sub_1AFD775AC(uint64_t a1)
{
  OUTLINED_FUNCTION_90_2(a1, a1, (void (*)(uint64_t))SkyGradientTableType.rawValue.getter);
}

void sub_1AFD775CC()
{
  sub_1AFD775E4();
}

void sub_1AFD775D8()
{
  sub_1AFD775E4();
}

void sub_1AFD775E4()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_23_7();
  OUTLINED_FUNCTION_81_2(v0);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD77610()
{
  sub_1AFD77880();
}

void sub_1AFD7761C()
{
  sub_1AFD778D4();
}

uint64_t sub_1AFD77628()
{
  sub_1B0009004();
  sub_1B0008614();
  return sub_1B0009040();
}

void sub_1AFD7767C()
{
  OUTLINED_FUNCTION_15_81();
  OUTLINED_FUNCTION_25_49();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD776DC()
{
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD77704()
{
  OUTLINED_FUNCTION_15_81();
  OUTLINED_FUNCTION_25_49();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD77750()
{
  sub_1AFD77854();
}

void sub_1AFD7775C()
{
  sub_1AFD77854();
}

void sub_1AFD77768(uint64_t a1, uint64_t a2)
{
  sub_1AFD777EC(a1, a2, (void (*)(uint64_t))BoundEntity.rawValue.getter);
}

void sub_1AFD77774(uint64_t a1, uint64_t a2)
{
  sub_1AFD777EC(a1, a2, (void (*)(uint64_t))BoundPropertyName.rawValue.getter);
}

void sub_1AFD77780()
{
  OUTLINED_FUNCTION_15_81();
  OUTLINED_FUNCTION_25_49();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD777E0(uint64_t a1, uint64_t a2)
{
  sub_1AFD777EC(a1, a2, (void (*)(uint64_t))SkyGradientTableType.rawValue.getter);
}

void sub_1AFD777EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_44_1();
  a3(v4);
  sub_1B0008614();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD7783C()
{
  sub_1AFD77854();
}

void sub_1AFD77848()
{
  sub_1AFD77854();
}

void sub_1AFD77854()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_81_2(v0);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD77880()
{
  OUTLINED_FUNCTION_15_81();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD778D4()
{
  OUTLINED_FUNCTION_15_81();
  OUTLINED_FUNCTION_25_49();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void sub_1AFD7792C()
{
  OUTLINED_FUNCTION_44_1();
  sub_1B0008614();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void AttributedString.init(localized:bundle:linkA:linkB:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  void (*v28)(_QWORD);
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t KeyPath;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[2];
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t *, _QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(_QWORD);
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[3];
  uint64_t v139;

  OUTLINED_FUNCTION_22_0();
  a19 = v23;
  a20 = v24;
  v126 = v25;
  v106[0] = v26;
  v131 = v27;
  v129 = v28;
  v30 = v29;
  v32 = v31;
  v113 = v33;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_33();
  v123 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_24_13();
  v122 = v38;
  v125 = OUTLINED_FUNCTION_89();
  v114 = *(_QWORD *)(v125 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_33();
  v121 = v40;
  v41 = sub_1B00053F8();
  v137 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_33();
  v127 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_33();
  v130 = v45;
  v46 = sub_1B0005404();
  v136 = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_38();
  v132 = v48;
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_24_13();
  v135 = v50;
  v51 = OUTLINED_FUNCTION_56_1();
  v128 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_34_32(v53, v106[0]);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_24_13();
  v134 = v56;
  v124 = sub_1B0005380();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_30_43(v58, v106[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_26_2();
  v107 = v22;
  v60 = sub_1B0008548();
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v61);
  v62 = OUTLINED_FUNCTION_21_51();
  OUTLINED_FUNCTION_12_0(v62, (uint64_t)&a17);
  v119 = v63;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)v106 - v66;
  v110 = v21;
  v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v112 = v32;
  v111 = v60;
  OUTLINED_FUNCTION_156(v20, v32, v68);
  v69 = sub_1B0005A1C();
  OUTLINED_FUNCTION_108(v22, v70, v71, v69);
  v106[1] = swift_getKeyPath();
  v138[0] = MEMORY[0x1E0DEE9D8];
  sub_1AFADA43C(&qword_1ED1F1C88, (void (*)(uint64_t))MEMORY[0x1E0CAEF88]);
  v109 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E28);
  sub_1AFB23DC0(&qword_1ED1F1E30, &qword_1ED1F1E28);
  v72 = v126;
  sub_1B0008C68();
  sub_1AFD782F0();
  v124 = (uint64_t)v67;
  sub_1B0005458();
  sub_1AFD7832C();
  v73 = sub_1B0008488();
  swift_isUniquelyReferenced_nonNull_native();
  v138[0] = v73;
  sub_1AFD7C00C((uint64_t)v129, (uint64_t)v131, 0);
  v74 = v138[0];
  swift_bridgeObjectRelease();
  if (v72)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v138[0] = v74;
    sub_1AFD7C00C(v106[0], v72, 1);
    v126 = v138[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    v126 = v74;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v108, v124, v120);
  v75 = v133;
  sub_1B0005428();
  v76 = OUTLINED_FUNCTION_151();
  v77(v76);
  v78 = v128;
  v79 = (uint64_t)v117;
  v129 = *(void (**)(_QWORD))(v128 + 16);
  ((void (*)(void (*)(uint64_t *, _QWORD), uint64_t, uint64_t))v129)(v117, v75, v51);
  sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
  v80 = v135;
  sub_1B00088B4();
  v128 = *(_QWORD *)(v78 + 8);
  ((void (*)(uint64_t, uint64_t))v128)(v75, v51);
  v81 = v118;
  v82 = v136;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v79 + *(int *)(v118 + 36), v80, v46);
  v83 = v134;
  sub_1AFAE8274(v79, v134, &qword_1ED1F4198);
  v84 = v83 + *(int *)(v81 + 36);
  v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  while (1)
  {
    v85 = v135;
    v131(v135, v84, v46);
    v86 = v132;
    v87 = v134;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v88 = sub_1B0008530();
    v89 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
    v89(v86, v46);
    v89(v85, v46);
    if ((v88 & 1) != 0)
      break;
    sub_1B00088FC();
    v90 = v137;
    v91 = v130;
    (*(void (**)(uint64_t))(v137 + 16))(v130);
    OUTLINED_FUNCTION_66_4();
    v92 = v133;
    v93 = OUTLINED_FUNCTION_151();
    v129(v93);
    sub_1B00088F0();
    ((void (*)(uint64_t, uint64_t))v128)(v92, v51);
    OUTLINED_FUNCTION_71_4(v91, 0);
    if (__swift_getEnumTagSinglePayload(v91, 1, v41) == 1)
      goto LABEL_17;
    v94 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v127, v91, v41);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    OUTLINED_FUNCTION_35_18();
    swift_getKeyPath();
    sub_1AFD7C188();
    sub_1B00053D4();
    swift_release();
    if (LOBYTE(v138[0]) == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v94, v41);
    }
    else
    {
      v96 = v94;
      if (*(_QWORD *)(v126 + 16) && (sub_1AFC43550(v138[0] & 1), (v97 & 1) != 0))
      {
        OUTLINED_FUNCTION_28_36();
        v98 = v122;
        sub_1B0005704();
        OUTLINED_FUNCTION_31_1();
        if (__swift_getEnumTagSinglePayload(v98, 1, v125) != 1)
        {
          v99 = v114;
          v100 = v121;
          v101 = OUTLINED_FUNCTION_76_2();
          v102(v101);
          sub_1B00053EC();
          v103 = swift_getKeyPath();
          MEMORY[0x1E0C80A78](v103);
          OUTLINED_FUNCTION_35_18();
          v118 = swift_getKeyPath();
          v104 = v115;
          OUTLINED_FUNCTION_156(v115, v100, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 16));
          OUTLINED_FUNCTION_91_1(v104, 0, 1);
          sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
          v105 = v123;
          v117 = (void (*)(uint64_t *, _QWORD))sub_1B00054A0();
          sub_1AFD7C1E0();
          sub_1B0005524();
          v117(v138, 0);
          sub_1AFACB308(v105, &qword_1ED1F4128);
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v121, v125);
          goto LABEL_14;
        }
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v96, v41);
        sub_1AFACB308(v98, &qword_1ED1F4190);
      }
      else
      {
LABEL_14:
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v96, v41);
      }
    }
  }
  OUTLINED_FUNCTION_71_4(v130, 1);
LABEL_17:
  OUTLINED_FUNCTION_31_39((uint64_t)&v139);
  OUTLINED_FUNCTION_9_52(v112, *(uint64_t (**)(uint64_t, _QWORD))(v110 + 8));
  sub_1AFACB308(v87, &qword_1ED1F4198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32))(v113, v124, v120);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_3();
}

void sub_1AFD782C8(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  GEOLocationCoordinate2DMake(a1, a3);
  *a2 = &_s24LinkReplacableAttributesVN;
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFD782F0()
{
  unint64_t result;

  result = qword_1ED1F1C70;
  if (!qword_1ED1F1C70)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037B94, &_s24LinkReplacableAttributesVN);
    atomic_store(result, (unint64_t *)&qword_1ED1F1C70);
  }
  return result;
}

unint64_t sub_1AFD7832C()
{
  unint64_t result;

  result = qword_1ED1F1C98;
  if (!qword_1ED1F1C98)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037B54, &type metadata for LinkReplacableAttribute.Value);
    atomic_store(result, (unint64_t *)&qword_1ED1F1C98);
  }
  return result;
}

void sub_1AFD78368()
{
  sub_1AFD7C188();
  sub_1B0005590();
  __break(1u);
}

uint64_t sub_1AFD7838C()
{
  return sub_1B0005590();
}

void sub_1AFD783B0()
{
  sub_1AFD7C1E0();
  sub_1B000556C();
  __break(1u);
}

uint64_t sub_1AFD783D4()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1B0008E60();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1AFD78424(char a1)
{
  if ((a1 & 1) != 0)
    return 0x426B6E696CLL;
  else
    return 0x416B6E696CLL;
}

void sub_1AFD7844C(char *a1, char *a2)
{
  sub_1AFC0B8E0(*a1, *a2);
}

uint64_t sub_1AFD78458@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFD783D4();
  *a1 = result;
  return result;
}

void sub_1AFD78484(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1AFD78424(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFD784A8()
{
  sub_1AFD7C734();
  return sub_1B0008764();
}

uint64_t sub_1AFD78504()
{
  sub_1AFD7C734();
  return sub_1B0008758();
}

void sub_1AFD78550()
{
  sub_1AFD77610();
}

uint64_t sub_1AFD78558()
{
  return sub_1AFDF0350();
}

void sub_1AFD78560()
{
  sub_1AFD77880();
}

char *sub_1AFD78568()
{
  return aLink;
}

uint64_t sub_1AFD78574()
{
  sub_1AFD7C680();
  return sub_1B000562C();
}

uint64_t sub_1AFD785D0()
{
  sub_1AFD7C6BC();
  return sub_1B0005638();
}

uint64_t sub_1AFD7862C()
{
  sub_1AFD7C6F8();
  return sub_1B00056B0();
}

uint64_t sub_1AFD78688()
{
  uint64_t v0;

  v0 = *(_QWORD *)sub_1AFD78568();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1AFD786CC()
{
  sub_1AFD782F0();
  JUMPOUT(0x1B5DFF118);
}

void sub_1AFD78704()
{
  sub_1AFD782F0();
  JUMPOUT(0x1B5DFF124);
}

uint64_t static AttributedString.makeLowercaseSmallCapsStyledString(localized:bundle:_:)()
{
  sub_1AFAC44B0();
  OUTLINED_FUNCTION_76_2();
  sub_1AFD787A8();
  return swift_bridgeObjectRelease();
}

void sub_1AFD787A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, _QWORD);
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  id v118;
  void *v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int8 *v137;
  uint64_t v138;
  char v139;
  char v140;
  unint64_t v141;
  unint64_t v142;
  unsigned __int8 v143;
  char v144;
  char v145;
  unsigned __int8 v146;
  uint64_t v147;
  unint64_t v148;
  unsigned __int8 v150;
  uint64_t v151;
  unsigned __int8 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  void (*v161)(__int128 *, _QWORD);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(uint64_t, uint64_t);
  uint64_t v166;
  void (*v167)(_QWORD, _QWORD, _QWORD);
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(__int128 *, _QWORD);
  void (*v174)(unint64_t *, _QWORD);
  uint64_t v175;
  void (*v176)(uint64_t);
  uint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int64_t v205;
  void (*v206)(_QWORD, _QWORD, _QWORD);
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD v215[3];
  void (*KeyPath)(uint64_t);
  void (*v217)(unint64_t, char *, uint64_t);
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  id v222;
  _QWORD v223[2];
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238[4];
  uint64_t v239;
  __int128 v240;
  uint64_t v241;
  uint64_t v242;

  OUTLINED_FUNCTION_22_0();
  v204 = v2;
  v200 = v3;
  LODWORD(v234) = v4;
  v225 = (char *)v5;
  v223[0] = v6;
  v222 = v7;
  v9 = v8;
  v202 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1680);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v12);
  v13 = sub_1B0005A1C();
  v198 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v15);
  v16 = sub_1B0008B84();
  OUTLINED_FUNCTION_12_0(v16, (uint64_t)v223);
  v196 = v17;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v19);
  sub_1B00054E8();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v21);
  v22 = sub_1B0005140();
  OUTLINED_FUNCTION_12_0(v22, (uint64_t)&v219);
  v193 = v23;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_24_13();
  OUTLINED_FUNCTION_3_64(v26);
  v215[0] = sub_1B0005338();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v28);
  v29 = sub_1B0005548();
  OUTLINED_FUNCTION_12_0(v29, (uint64_t)&v239);
  v214 = v30;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_33();
  v213 = v32;
  v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_24_13();
  v232 = v35;
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2618);
  v215[2] = *(_QWORD *)(v235 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_30_43(v37, v186);
  v38 = sub_1B00053F8();
  OUTLINED_FUNCTION_12_0(v38, (uint64_t)&v229);
  v220 = v39;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_33();
  v219 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_3_64(v43);
  v44 = sub_1B0005404();
  v230 = *(_QWORD *)(v44 - 8);
  v231 = v44;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_24_13();
  v229 = v47;
  v228 = OUTLINED_FUNCTION_56_1();
  v218 = *(char **)(v228 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v186 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_24_13();
  OUTLINED_FUNCTION_3_64(v53);
  sub_1B0005380();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_33();
  v221 = v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_4_4();
  v217 = (void (*)(unint64_t, char *, uint64_t))v1;
  v57 = sub_1B0008548();
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v237 = OUTLINED_FUNCTION_21_51();
  v227 = *(_QWORD *)(v237 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_38();
  v236 = v60;
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)&v186 - v63;
  v66 = MEMORY[0x1E0C80A78](v65);
  v68 = (char *)&v186 - v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v58 + 16))(v0, v9, v57, v66);
  v199 = v13;
  OUTLINED_FUNCTION_91_1(v1, 1, 1);
  KeyPath = (void (*)(uint64_t))swift_getKeyPath();
  *(_QWORD *)&v240 = MEMORY[0x1E0DEE9D8];
  sub_1AFADA43C(&qword_1ED1F1C88, (void (*)(uint64_t))MEMORY[0x1E0CAEF88]);
  v69 = v222;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E28);
  sub_1AFB23DC0(&qword_1ED1F1E30, &qword_1ED1F1E28);
  v70 = v226;
  sub_1B0008C68();
  v234 = sub_1AFB4BFF0();
  sub_1B0005458();
  v221 = v64;
  sub_1B0005464();
  v225 = v68;
  sub_1B0005428();
  v71 = v218;
  v72 = v208;
  v73 = v228;
  v217 = (void (*)(unint64_t, char *, uint64_t))*((_QWORD *)v218 + 2);
  v217(v208, v50, v228);
  sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
  v74 = v229;
  v223[0] = v75;
  sub_1B00088B4();
  v76 = (void (*)(uint64_t))*((_QWORD *)v71 + 1);
  v77 = v203;
  v218 = v50;
  KeyPath = v76;
  ((void (*)(char *, uint64_t))v76)(v50, v73);
  v78 = v211;
  v79 = v230;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 32))(v72 + *(int *)(v211 + 36), v74, v231);
  sub_1AFAE8274(v72, v70, &qword_1ED1F4198);
  v205 = 0;
  v201 = 0;
  v80 = v70 + *(int *)(v78 + 36);
  v189 = (char *)&v240 + 2;
  v222 = *(id *)(v79 + 16);
  v190 = (char *)&v240 + 3;
  v194 = v204 + 32;
  while (1)
  {
    v81 = v229;
    v82 = v231;
    ((void (*)(uint64_t, uint64_t, uint64_t))v222)(v229, v80, v231);
    v83 = v80;
    v84 = v223[1];
    v85 = v228;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v86 = sub_1B0008530();
    v87 = *(void (**)(uint64_t, uint64_t))(v230 + 8);
    v87(v84, v82);
    v87(v81, v82);
    if ((v86 & 1) != 0)
    {
      OUTLINED_FUNCTION_72(v224, 1);
LABEL_95:
      sub_1AFACB308(v70, &qword_1ED1F4198);
      v180 = v227;
      v181 = v237;
      OUTLINED_FUNCTION_27((uint64_t)v225, *(uint64_t (**)(uint64_t, uint64_t))(v227 + 8));
      (*(void (**)(uint64_t, char *, uint64_t))(v180 + 32))(v202, v221, v181);
      goto LABEL_96;
    }
    sub_1B00088FC();
    v88 = v220;
    v89 = v224;
    (*(void (**)(uint64_t))(v220 + 16))(v224);
    OUTLINED_FUNCTION_66_4();
    v217((unint64_t)v218, (char *)v70, v85);
    OUTLINED_FUNCTION_35_20();
    sub_1B00088F0();
    v90 = OUTLINED_FUNCTION_151();
    KeyPath(v90);
    OUTLINED_FUNCTION_72(v89, 0);
    if (__swift_getEnumTagSinglePayload(v89, 1, v77) == 1)
      goto LABEL_95;
    v80 = v83;
    v91 = v219;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v219, v89, v77);
    swift_getKeyPath();
    v92 = v88;
    v93 = v215[1];
    sub_1B00053E0();
    OUTLINED_FUNCTION_10_3();
    swift_getKeyPath();
    v94 = sub_1AFB3D614();
    v95 = v235;
    sub_1B0005608();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_36_4();
    v96(v93, v95);
    if (!(_QWORD)v240)
    {
      v97 = v232;
      sub_1B00053EC();
      sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
      v98 = v213;
      OUTLINED_FUNCTION_79_4();
      sub_1AFACB308(v97, &qword_1ED1F4128);
      sub_1B0005518();
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_9_52(v98, v99);
      sub_1B00054DC();
      sub_1AFADA43C(&qword_1ED1F1130, (void (*)(uint64_t))MEMORY[0x1E0CAEF10]);
      v100 = v236;
      sub_1B0005494();
      sub_1AFADA43C(&qword_1ED1ECAD0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
      OUTLINED_FUNCTION_59_1();
      OUTLINED_FUNCTION_36_4();
      OUTLINED_FUNCTION_92(v100, v101);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v77);
      goto LABEL_6;
    }
    if (v205 >= *(_QWORD *)(v204 + 16))
    {
      OUTLINED_FUNCTION_40();
      OUTLINED_FUNCTION_12_85();
      goto LABEL_100;
    }
    v211 = *(_QWORD *)(v204 + 16);
    v208 = v94;
    v102 = v232;
    sub_1B00053EC();
    sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
    v103 = v213;
    v104 = v233;
    v207 = v105;
    OUTLINED_FUNCTION_79_4();
    sub_1AFACB308(v102, &qword_1ED1F4128);
    sub_1B0005518();
    OUTLINED_FUNCTION_9_52(v103, *(uint64_t (**)(uint64_t, _QWORD))(v214 + 8));
    sub_1AFADA43C(&qword_1ED1F1130, (void (*)(uint64_t))MEMORY[0x1E0CAEF10]);
    v106 = sub_1B00086D4();
    objc_allocWithZone(MEMORY[0x1E0CB38E8]);
    v107 = v201;
    v108 = sub_1AFD2D498(0x5C2B5D392D305B25, 0xEA00000000004024, 0);
    v109 = v227;
    if (v107)
      goto LABEL_106;
    v110 = v108;
    v111 = (void *)sub_1B0008554();
    v206 = (void (*)(_QWORD, _QWORD, _QWORD))v106;
    v112 = sub_1B0008620();
    v188 = v110;
    v113 = objc_msgSend(v110, sel_matchesInString_options_range_, v111, 0, 0, v112);

    sub_1AFAEC5C0(0, &qword_1ED1EFFA0);
    v114 = sub_1B0008788();

    v115 = v114;
    v116 = v212;
    if ((unint64_t)v114 >> 62)
    {
      if (v114 >= 0)
        v114 &= 0xFFFFFFFFFFFFFF8uLL;
      OUTLINED_FUNCTION_94_0();
      v201 = v114;
      v154 = sub_1B0008E0C();
      OUTLINED_FUNCTION_15();
      if (v154 > 1)
      {
LABEL_98:
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_32();
        OUTLINED_FUNCTION_40();
        OUTLINED_FUNCTION_12_85();
        OUTLINED_FUNCTION_31_39((uint64_t)v215);
        v182 = OUTLINED_FUNCTION_18_62();
        OUTLINED_FUNCTION_80_3(v182, &qword_1ED1F4198);
        v183 = *(void (**)(char *, uint64_t))(v109 + 8);
        goto LABEL_101;
      }
      OUTLINED_FUNCTION_94_0();
      v155 = sub_1B0008E0C();
      OUTLINED_FUNCTION_15();
      if (!v155)
      {
LABEL_77:
        OUTLINED_FUNCTION_32();
        OUTLINED_FUNCTION_15();
        v148 = v205;
        v136 = v211;
        goto LABEL_78;
      }
    }
    else
    {
      v117 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v117 >= 2)
        goto LABEL_98;
      if (!v117)
        goto LABEL_77;
    }
    sub_1AFAECC78(0, (v115 & 0xC000000000000001) == 0, v115);
    if ((v115 & 0xC000000000000001) != 0)
      v118 = (id)MEMORY[0x1B5E02C64](0, v115);
    else
      v118 = *(id *)(v115 + 32);
    v119 = v118;
    OUTLINED_FUNCTION_15();
    v201 = (uint64_t)v119;
    objc_msgSend(v119, sel_range);
    sub_1B0008938();
    if ((v120 & 1) != 0)
      goto LABEL_105;
    v121 = sub_1B00086EC();
    v123 = v122;
    v125 = v124;
    v127 = v126;
    OUTLINED_FUNCTION_32();
    *(_QWORD *)&v240 = v121;
    *((_QWORD *)&v240 + 1) = v123;
    v241 = v125;
    v242 = v127;
    v128 = v191;
    sub_1B0005128();
    v129 = v192;
    sub_1B0005134();
    OUTLINED_FUNCTION_53(v128);
    sub_1AFAED6F0();
    v130 = sub_1B0008BF0();
    v132 = v131;
    OUTLINED_FUNCTION_53(v129);
    swift_bridgeObjectRelease();
    v133 = HIBYTE(v132) & 0xF;
    v134 = v130 & 0xFFFFFFFFFFFFLL;
    if ((v132 & 0x2000000000000000) != 0)
      v135 = HIBYTE(v132) & 0xF;
    else
      v135 = v130 & 0xFFFFFFFFFFFFLL;
    v80 = v83;
    v136 = v211;
    if (!v135)
    {
LABEL_99:
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_40();
      OUTLINED_FUNCTION_12_85();
      OUTLINED_FUNCTION_31_39((uint64_t)v215);
      OUTLINED_FUNCTION_31_39((uint64_t)&v227);
LABEL_100:
      v184 = OUTLINED_FUNCTION_18_62();
      OUTLINED_FUNCTION_80_3(v184, &qword_1ED1F4198);
      v183 = *(void (**)(char *, uint64_t))(v227 + 8);
LABEL_101:
      v185 = v237;
      v183(v221, v237);
      v183(v225, v185);
LABEL_96:
      OUTLINED_FUNCTION_2_3();
      return;
    }
    if ((v132 & 0x1000000000000000) != 0)
    {
      OUTLINED_FUNCTION_28_36();
      v138 = (uint64_t)sub_1AFD7C928(v130, v132, 10);
      v179 = v178;
      OUTLINED_FUNCTION_31_1();
      v140 = v179;
    }
    else
    {
      if ((v132 & 0x2000000000000000) == 0)
      {
        if ((v130 & 0x1000000000000000) != 0)
          v137 = (unsigned __int8 *)((v132 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v137 = (unsigned __int8 *)sub_1B0008D64();
        v138 = (uint64_t)sub_1AFD7CA04(v137, v134, 10);
        v140 = v139 & 1;
        goto LABEL_49;
      }
      *(_QWORD *)&v240 = v130;
      *((_QWORD *)&v240 + 1) = v132 & 0xFFFFFFFFFFFFFFLL;
      v141 = v130 >> 8;
      v142 = v130 >> 16;
      if (v130 == 43)
      {
        if (!v133)
          goto LABEL_104;
        if (v133 == 1 || (BYTE1(v130) - 48) > 9u)
          goto LABEL_46;
        v138 = (BYTE1(v130) - 48);
        if (v133 != 2)
        {
          v143 = v142 - 48;
          if (v143 > 9u)
            goto LABEL_46;
          v138 = 10 * v138 + v143;
          if (v133 != 3)
          {
            while (1)
            {
              OUTLINED_FUNCTION_54_3();
              if (!v145 & v144)
                goto LABEL_46;
              OUTLINED_FUNCTION_20_63();
              if (!v145)
                goto LABEL_46;
              v138 = v147 + v146;
              if (__OFADD__(v147, v146))
                goto LABEL_46;
              OUTLINED_FUNCTION_41_11();
              if (v145)
                goto LABEL_49;
            }
          }
        }
      }
      else if (v130 == 45)
      {
        if (!v133)
          goto LABEL_103;
        if (v133 == 1 || (BYTE1(v130) - 48) > 9u)
          goto LABEL_46;
        if (v133 == 2)
        {
          v140 = 0;
          v138 = -(uint64_t)(BYTE1(v130) - 48);
          goto LABEL_49;
        }
        if ((BYTE2(v130) - 48) > 9u)
          goto LABEL_46;
        v138 = -10 * (BYTE1(v130) - 48) - (BYTE2(v130) - 48);
        if (v133 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_54_3();
            if (!v145 & v144)
              break;
            OUTLINED_FUNCTION_20_63();
            if (!v145)
              break;
            v138 = v153 - v152;
            if (__OFSUB__(v153, v152))
              break;
            OUTLINED_FUNCTION_41_11();
            if (v145)
              goto LABEL_49;
          }
LABEL_46:
          v138 = 0;
          v140 = 1;
          goto LABEL_49;
        }
      }
      else
      {
        if (!v133 || (v130 - 48) > 9u)
          goto LABEL_46;
        v138 = (v130 - 48);
        if (v133 != 1)
        {
          if ((v141 - 48) > 9u)
            goto LABEL_46;
          v138 = 10 * v138 + (v141 - 48);
          if (v133 != 2)
          {
            while (1)
            {
              OUTLINED_FUNCTION_54_3();
              if (!v145 & v144)
                goto LABEL_46;
              OUTLINED_FUNCTION_20_63();
              if (!v145)
                goto LABEL_46;
              v138 = v151 + v150;
              if (__OFADD__(v151, v150))
                goto LABEL_46;
              OUTLINED_FUNCTION_41_11();
              if (v145)
                goto LABEL_49;
            }
          }
        }
      }
      v140 = 0;
    }
LABEL_49:
    if ((v140 & 1) != 0)
      goto LABEL_99;
    v148 = v138 - 1;
    if (v138 < 1 || v136 < v138)
      goto LABEL_99;
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_31_39((uint64_t)&v227);
    v116 = v212;
LABEL_78:
    if (v148 >= v136)
      break;
    v156 = (uint64_t *)(v194 + 16 * v148);
    v157 = *v156;
    v158 = v156[1];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_46_0();
    v159 = sub_1AFD7D140();
    v160 = sub_1AFC7A8D0(v159);
    v201 = 0;
    if ((v160 & 1) != 0)
    {
      *(_QWORD *)&v240 = v157;
      *((_QWORD *)&v240 + 1) = v158;
      sub_1AFAF9424();
      sub_1B0008BE4();
    }
    else
    {
      OUTLINED_FUNCTION_46_0();
    }
    sub_1B00054DC();
    sub_1B000547C();
    swift_getKeyPath();
    swift_getKeyPath();
    v238[0] = v159;
    v161 = (void (*)(__int128 *, _QWORD))sub_1B0005350();
    OUTLINED_FUNCTION_48_5();
    v161(&v240, 0);
    OUTLINED_FUNCTION_10_3();
    *(_QWORD *)&v240 = v157;
    *((_QWORD *)&v240 + 1) = v158;
    v162 = v197;
    sub_1B00059A4();
    v163 = v195;
    sub_1B0006C64();
    OUTLINED_FUNCTION_9_52(v162, *(uint64_t (**)(uint64_t, _QWORD))(v198 + 8));
    sub_1AFD2CB84();
    sub_1AFADA43C(&qword_1ED1F3C08, (void (*)(uint64_t))MEMORY[0x1E0CB21F8]);
    v164 = sub_1B00084F4();
    OUTLINED_FUNCTION_36_4();
    OUTLINED_FUNCTION_27(v163, v165);
    OUTLINED_FUNCTION_40();
    v211 = *(_QWORD *)(v164 + 16);
    if (v211)
    {
      v187 = v80;
      v166 = 0;
      v167 = *(void (**)(_QWORD, _QWORD, _QWORD))(v227 + 16);
      v168 = v210;
      v206 = v167;
      do
      {
        v240 = *(_OWORD *)(v164 + 16 * v166 + 32);
        v167(v236, v212, v237);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3BD0);
        sub_1AFB23DC0(&qword_1ED1EDA40, &qword_1ED1F3BD0);
        sub_1AFADA43C(&qword_1ED1ECAD0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
        sub_1B000892C();
        if (__swift_getEnumTagSinglePayload(v168, 1, v104) == 1)
        {
          v169 = v168;
          v170 = &qword_1ED1F1680;
        }
        else
        {
          v171 = v209;
          sub_1AFAE8274(v168, v209, &qword_1ED1F4128);
          v172 = v232;
          sub_1AFAF2558(v171, v232, &qword_1ED1F4128);
          swift_getKeyPath();
          swift_getKeyPath();
          v239 = 0;
          v173 = (void (*)(__int128 *, _QWORD))sub_1B00054A0();
          v174 = (void (*)(unint64_t *, _QWORD))sub_1B0005530();
          OUTLINED_FUNCTION_48_5();
          v174(v238, 0);
          v168 = v210;
          swift_release();
          v173(&v240, 0);
          v104 = v233;
          sub_1AFACB308(v172, &qword_1ED1F4128);
          v169 = v171;
          v170 = &qword_1ED1F4128;
          v167 = v206;
        }
        sub_1AFACB308(v169, v170);
        ++v166;
      }
      while (v211 != v166);
      swift_bridgeObjectRelease();
      v116 = v212;
      v80 = v187;
      v175 = v227;
    }
    else
    {
      swift_bridgeObjectRelease();
      v175 = v227;
      v167 = *(void (**)(_QWORD, _QWORD, _QWORD))(v227 + 16);
    }
    v167(v236, v116, v237);
    sub_1AFADA43C(&qword_1ED1ECAD0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
    OUTLINED_FUNCTION_35_20();
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_31_39((uint64_t)v215);
    v176 = *(void (**)(uint64_t))(v175 + 8);
    v177 = OUTLINED_FUNCTION_35_20();
    v176(v177);
    OUTLINED_FUNCTION_53(v116);
    v77 = v203;
    (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v219, v203);
    ++v205;
LABEL_6:
    v70 = v226;
  }
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  swift_unexpectedError();
  __break(1u);
}

uint64_t static AttributedString.makeLowercaseSmallCapsStyledString(localized:bundle:comment:_:)()
{
  sub_1AFAC44B0();
  sub_1AFD787A8();
  return swift_bridgeObjectRelease();
}

void static AttributedString.makeStyledString(localized:bundle:comment:ignoreStyles:_:)()
{
  OUTLINED_FUNCTION_40_14();
}

void _s10Foundation16AttributedStringV9WeatherUIE010makeStyledC09localized6bundle12ignoreStyles_ACSSAAE17LocalizationValueV_So8NSBundleCSgSayAD0G17VariableAttributeO5StyleOGSSdtFZ_0()
{
  OUTLINED_FUNCTION_40_14();
}

void AttributedString.with(font:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  _QWORD v10[4];

  v4 = OUTLINED_FUNCTION_56_1();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28_47();
  v8 = OUTLINED_FUNCTION_151();
  v9(v8);
  v10[0] = swift_getKeyPath();
  swift_getKeyPath();
  v10[3] = a1;
  sub_1AFB4C034();
  swift_retain();
  sub_1B0005344();
  sub_1B0005428();
  sub_1AFD7680C((uint64_t)v7, a2);
  OUTLINED_FUNCTION_27((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_8_0();
}

void sub_1AFD79E98(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECAE0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v15 - v12;
  sub_1AFAF2558(a1, (uint64_t)&v15 - v12, &qword_1ED1ECAE0);
  v14 = sub_1B00054E8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    sub_1AFACB308((uint64_t)v13, &qword_1ED1ECAE0);
    sub_1AFD79FFC(a2, a3);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, a4, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v14);
    swift_beginAccess();
    sub_1AFB4ADE4((uint64_t)v10, a1, &qword_1ED1ECAE0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, v13, v14);
  }
}

uint64_t sub_1AFD79FFC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  _QWORD v10[5];
  void *v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2780);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B00054DC();
  v10[4] = swift_getKeyPath();
  swift_getKeyPath();
  v11 = a1;
  sub_1AFB4C034();
  swift_retain();
  sub_1B00054D0();
  v10[2] = swift_getKeyPath();
  swift_getKeyPath();
  v11 = a2;
  sub_1AFD2D418();
  v7 = a2;
  sub_1B00054D0();
  v10[0] = swift_getKeyPath();
  swift_getKeyPath();
  sub_1B0007D20();
  v8 = sub_1B0007D2C();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  sub_1AFD2CB04();
  return sub_1B00054D0();
}

void sub_1AFD7A160(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC30);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - v8;
  sub_1AFAF2558(a1, (uint64_t)&v11 - v8, &qword_1ED1ECC30);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC28);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1AFACB308((uint64_t)v9, &qword_1ED1ECC30);
    sub_1AFB23DC0(&qword_1ED1EFDD8, &qword_1ED1ECC28);
    sub_1B0006C7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a2, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
    swift_beginAccess();
    sub_1AFB4ADE4((uint64_t)v6, a1, &qword_1ED1ECC30);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a2, v9, v10);
  }
}

uint64_t sub_1AFD7A2E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC28);
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1B0006C4C();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDD0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDC8);
  v24 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v23 - v17;
  v19 = sub_1B0006C70();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v19);
  sub_1B0006910();
  sub_1AFD7A570((uint64_t)v3);
  sub_1AFB23DC0(&qword_1ED1EFDD8, &qword_1ED1ECC28);
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1B0006C40();
  sub_1AFACB308((uint64_t)v12, &qword_1ED1EFDD0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  MEMORY[0x1B5E00858](v6, v20);
  sub_1AFB23DC0(&qword_1ED1EFDC0, &qword_1ED1EFDC8);
  sub_1B00068EC();
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v15, v13);
  sub_1B00068F8();
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v13);
}

uint64_t sub_1AFD7A570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v55 = a1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDC8);
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v50 = (char *)v43 - v3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC28);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B0006C4C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDD0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B0009064();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B0006928();
  v45 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDB0);
  v46 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v56 = (char *)v43 - v23;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v15, *MEMORY[0x1E0DEE3C0], v12, v22);
  sub_1B000691C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v44 = sub_1B0006C70();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v44);
  sub_1B0006910();
  sub_1AFADA43C(&qword_1ED1EFDB8, (void (*)(uint64_t))MEMORY[0x1E0DEFE40]);
  v43[1] = v24;
  v25 = MEMORY[0x1E0DEBAF0];
  v43[0] = v5;
  sub_1B0006C28();
  sub_1AFACB308((uint64_t)v11, &qword_1ED1EFDD0);
  v26 = *(void (**)(char *, uint64_t))(v45 + 8);
  v26(v18, v16);
  v27 = v48;
  v28 = *(void (**)(char *, uint64_t))(v47 + 8);
  v28(v8, v48);
  MEMORY[0x1B5E00828](v5, v25);
  sub_1AFB23DC0(&qword_1ED1EFDA8, &qword_1ED1EFDB0);
  v47 = v29;
  v30 = v57;
  sub_1B00068EC();
  v31 = *(void (**)(char *, uint64_t))(v46 + 8);
  v31(v20, v30);
  sub_1B0006C58();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v44);
  sub_1B0006910();
  v32 = v43[0];
  v33 = MEMORY[0x1E0DEBAF0];
  sub_1B0006C40();
  sub_1AFACB308((uint64_t)v11, &qword_1ED1EFDD0);
  v26(v18, v16);
  v28(v8, v27);
  v34 = v49;
  v35 = v32;
  MEMORY[0x1B5E00858](v32, v33);
  sub_1AFB23DC0(&qword_1ED1EFDC0, &qword_1ED1EFDC8);
  v36 = (uint64_t)v50;
  v37 = v34;
  v38 = v52;
  sub_1B00068EC();
  v39 = *(void (**)(char *, uint64_t))(v54 + 8);
  v39(v37, v38);
  v40 = v56;
  v41 = v57;
  sub_1B00068F8();
  sub_1AFD7AA04(v36, v55);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v53);
  v39((char *)v36, v38);
  return ((uint64_t (*)(char *, uint64_t))v31)(v40, v41);
}

uint64_t sub_1AFD7AA04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  _QWORD v15[2];

  v15[0] = a1;
  v15[1] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1ECC28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - v7;
  v9 = sub_1B0006C4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0006910();
  sub_1AFB23DC0(&qword_1ED1EFDD8, &qword_1ED1ECC28);
  sub_1B0006C34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFDC8);
  sub_1AFB23DC0(&qword_1ED1EFDC0, &qword_1ED1EFDC8);
  sub_1B0006C34();
  sub_1B0006C1C();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  v13(v8, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t StyledVariableAttribute.Style.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B0008E60();
  result = OUTLINED_FUNCTION_20_0();
  *a1 = v2 != 0;
  return result;
}

unint64_t StyledVariableAttribute.Style.rawValue.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1AFD7AC18@<X0>(BOOL *a1@<X8>)
{
  return StyledVariableAttribute.Style.init(rawValue:)(a1);
}

void sub_1AFD7AC24(_QWORD *a1@<X8>)
{
  uint64_t v2;

  StyledVariableAttribute.Style.rawValue.getter();
  *a1 = 0xD000000000000012;
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFD7AC4C()
{
  sub_1AFD7C88C();
  return sub_1B0008764();
}

uint64_t sub_1AFD7ACA8()
{
  sub_1AFD7C88C();
  return sub_1B0008758();
}

uint64_t static StyledVariableAttribute.name.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_13_82();
  OUTLINED_FUNCTION_1_2();
  *(_QWORD *)aStyles_0 = v1;
  qword_1EEE73A00 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*static StyledVariableAttribute.name.modify())()
{
  OUTLINED_FUNCTION_1_2();
  return j__swift_endAccess;
}

uint64_t sub_1AFD7AD8C()
{
  sub_1AFD7C7E8(&qword_1ED1EFE50, (uint64_t (*)(void))sub_1AFD7C850, MEMORY[0x1E0DEB3D8]);
  return sub_1B000562C();
}

uint64_t sub_1AFD7AE00()
{
  sub_1AFD7C7E8(&qword_1EEE73A10, (uint64_t (*)(void))sub_1AFD7C7AC, MEMORY[0x1E0DEB3B8]);
  return sub_1B0005638();
}

uint64_t sub_1AFD7AE74()
{
  sub_1AFD7C770();
  return sub_1B00056B0();
}

void sub_1AFD7AED0()
{
  sub_1AFB4BFF0();
  JUMPOUT(0x1B5DFF118);
}

void sub_1AFD7AF08()
{
  sub_1AFB4BFF0();
  JUMPOUT(0x1B5DFF124);
}

void AttributedString.init(markdown:fallback:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];
  uint64_t v24;

  OUTLINED_FUNCTION_22_0();
  v23[4] = v2;
  v23[5] = v3;
  v23[2] = v5;
  v23[3] = v4;
  v24 = v6;
  OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v23[1] = v8;
  v9 = OUTLINED_FUNCTION_60_2();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_26_2();
  v11 = sub_1B0005398();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = OUTLINED_FUNCTION_28_47();
  v17 = *(_QWORD *)(v23[0] - 8);
  MEMORY[0x1E0C80A78](v23[0]);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_108((uint64_t)v16, v21, v22, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v1, *MEMORY[0x1E0CAF048], v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v0, *MEMORY[0x1E0CAF020], v9);
  OUTLINED_FUNCTION_61_2();
  sub_1B0005440();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, _QWORD))(v17 + 32))(v24, v19, v23[0]);
  OUTLINED_FUNCTION_2_3();
}

NSAttributedString __swiftcall AttributedString.nsAttributedStringWithMatchingTextScales(font:)(UIFont font)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[24];
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_22_0();
  v26 = v2;
  v27 = v3;
  v4 = v1;
  v6 = v5;
  v24 = OUTLINED_FUNCTION_56_1();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005338();
  v10 = (void (*)(uint64_t))MEMORY[0x1E0CAEF10];
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_26_2();
  sub_1B000532C();
  sub_1AFADA43C(&qword_1ED1F1130, v10);
  v12 = sub_1B00086D4();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFFB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B00275C0;
  v16 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1AFAEC5C0(0, (unint64_t *)&qword_1ED1F3CE8);
  *(_QWORD *)(inited + 40) = v6;
  type metadata accessor for Key(0);
  sub_1AFADA43C(&qword_1ED1F3CD0, type metadata accessor for Key);
  v17 = v16;
  v18 = v6;
  v19 = sub_1B0008488();
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v21 = sub_1AFD7BC24(v12, v14, v19);
  sub_1B0005428();
  v25[2] = v21;
  v25[3] = v4;
  sub_1AFD76EDC((void (*)(char *))sub_1AFD7C288, (uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  return (NSAttributedString)v21;
}

void sub_1AFD7B474(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;

  v37 = a3;
  v41 = a2;
  v40 = sub_1B0005470();
  v34 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  MEMORY[0x1E0C80A78](v38);
  v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B0007D2C();
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A30);
  MEMORY[0x1E0C80A78](v44);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2780);
  MEMORY[0x1E0C80A78](v10);
  v42 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  v18 = sub_1B00054E8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a1;
  sub_1B00053C8();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_1AFD2CB04();
  sub_1B00054C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_1B0007D20();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
  v22 = (uint64_t)&v9[*(int *)(v44 + 48)];
  sub_1AFAF2558((uint64_t)v17, (uint64_t)v9, &qword_1ED1F2780);
  sub_1AFAF2558((uint64_t)v14, v22, &qword_1ED1F2780);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6) != 1)
  {
    v23 = v42;
    sub_1AFAF2558((uint64_t)v9, v42, &qword_1ED1F2780);
    if (__swift_getEnumTagSinglePayload(v22, 1, v6) != 1)
    {
      v24 = v43;
      v25 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v33, v22, v6);
      sub_1AFADA43C(&qword_1EEE73A38, (void (*)(uint64_t))MEMORY[0x1E0CDDC68]);
      v26 = sub_1B0008530();
      v27 = *(void (**)(char *, uint64_t))(v24 + 8);
      v27(v25, v6);
      sub_1AFACB308((uint64_t)v14, &qword_1ED1F2780);
      sub_1AFACB308((uint64_t)v17, &qword_1ED1F2780);
      v27((char *)v23, v6);
      sub_1AFACB308((uint64_t)v9, &qword_1ED1F2780);
      if ((v26 & 1) == 0)
        return;
      goto LABEL_8;
    }
    sub_1AFACB308((uint64_t)v14, &qword_1ED1F2780);
    sub_1AFACB308((uint64_t)v17, &qword_1ED1F2780);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v23, v6);
LABEL_6:
    sub_1AFACB308((uint64_t)v9, &qword_1EEE73A30);
    return;
  }
  sub_1AFACB308((uint64_t)v14, &qword_1ED1F2780);
  sub_1AFACB308((uint64_t)v17, &qword_1ED1F2780);
  if (__swift_getEnumTagSinglePayload(v22, 1, v6) != 1)
    goto LABEL_6;
  sub_1AFACB308((uint64_t)v9, &qword_1ED1F2780);
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFFB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B00275C0;
  v29 = sub_1B0008554();
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = v29;
  *(_QWORD *)(inited + 40) = 0xD000000000000014;
  *(_QWORD *)(inited + 48) = 0x80000001B00571D0;
  type metadata accessor for Key(0);
  sub_1AFADA43C(&qword_1ED1F3CD0, type metadata accessor for Key);
  v30 = sub_1B0008488();
  sub_1B00053EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v39, v37, v40);
  sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
  sub_1AFADA43C(&qword_1ED1ECAD0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
  v31 = sub_1B0008B6C();
  sub_1AFD7D658(v30, v31, v32, v41);
}

uint64_t Array<A>.joined(separator:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_13_82();
  v3 = v2;
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_88_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_4();
  sub_1B0005464();
  OUTLINED_FUNCTION_70_1(v0, (void (*)(char *, char *))sub_1AFD7C2A0, v3);
  return OUTLINED_FUNCTION_92(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

uint64_t sub_1AFD7BA7C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_1B0005470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  if (*a2 == 1)
    *a2 = 0;
  else
    sub_1B00053BC();
  return sub_1B00053BC();
}

void Array<A>.joined(separator:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v11[5];
  char v12;

  OUTLINED_FUNCTION_22_0();
  v1 = v0;
  OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_28_47();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v11 - v8;
  OUTLINED_FUNCTION_94_0();
  sub_1B00054DC();
  sub_1B000547C();
  v12 = 1;
  sub_1B0005464();
  v11[2] = &v12;
  v11[3] = v9;
  OUTLINED_FUNCTION_70_1((uint64_t)v6, (void (*)(char *, char *))sub_1AFD7D774, v1);
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  v10(v9, v3);
  OUTLINED_FUNCTION_2_3();
}

id sub_1AFD7BC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)sub_1B0008554();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_1AFADA43C(&qword_1ED1F3CD0, type metadata accessor for Key);
    v6 = (void *)sub_1B0008464();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(v3, sel_initWithString_attributes_, v5, v6);

  return v7;
}

void sub_1AFD7BCE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_1B0008698();
    OUTLINED_FUNCTION_42_12(v4);
  }
  else
  {
    v3 = MEMORY[0x1B5E02598](15, a1 >> 16);
    OUTLINED_FUNCTION_42_12(v3);
  }
  OUTLINED_FUNCTION_0();
}

void sub_1AFD7BD34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22_0();
  v3 = v2;
  v5 = v4;
  type metadata accessor for WeatherConditionGradientManager.GradientCacheKey();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_4();
  sub_1AFC434B8(v3);
  OUTLINED_FUNCTION_9_85();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFE58);
  if ((OUTLINED_FUNCTION_68_2() & 1) == 0)
    goto LABEL_5;
  v12 = sub_1AFC434B8(v3);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    sub_1B0008FF8();
    __break(1u);
    return;
  }
  v10 = v12;
LABEL_5:
  v14 = *v0;
  if ((v11 & 1) != 0)
  {
    memcpy((void *)(*(_QWORD *)(v14 + 56) + 104 * v10), v5, 0x68uLL);
  }
  else
  {
    sub_1AFD7D720(v3, v1);
    sub_1AFE9E3C8(v10, v1, v5, v14);
    OUTLINED_FUNCTION_2_3();
  }
}

void sub_1AFD7BE48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_27_50(a1, a2);
  sub_1AFAF46BC();
  OUTLINED_FUNCTION_9_85();
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = v4;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A20);
  if ((OUTLINED_FUNCTION_36_24() & 1) == 0)
    goto LABEL_5;
  OUTLINED_FUNCTION_35_20();
  v9 = sub_1AFAF46BC();
  if ((v8 & 1) != (v10 & 1))
  {
LABEL_9:
    sub_1B0008FF8();
    __break(1u);
    return;
  }
  v7 = v9;
LABEL_5:
  if ((v8 & 1) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)v3 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 8 * v7) = v2;
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_85_3();
    sub_1AFE9E440(v12, v13, v14, v15, v16);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1AFD7BF04(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t *v4;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  float *v17;

  sub_1AFAF46BC();
  OUTLINED_FUNCTION_9_85();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A28);
  result = OUTLINED_FUNCTION_68_2();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1AFAF46BC();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    result = sub_1B0008FF8();
    __break(1u);
    return result;
  }
  v12 = result;
LABEL_5:
  v16 = *v4;
  if ((v13 & 1) != 0)
  {
    v17 = (float *)(*(_QWORD *)(v16 + 56) + 8 * v12);
    *v17 = a3;
    v17[1] = a4;
  }
  else
  {
    sub_1AFE9E46C(v12, a1, a2, v16);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1AFD7C00C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  unint64_t result;

  v4 = (_QWORD **)v3;
  v7 = a3 & 1;
  v8 = (_QWORD *)*v3;
  v9 = sub_1AFC43550(a3 & 1);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFEB0);
  if ((sub_1B0008DC4() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1AFC43550(v7);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1B0008FF8();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) == 0)
    return sub_1AFE9E4A8(v11, v7, a1, a2, v15);
  v16 = (uint64_t *)(v15[7] + 16 * v11);
  result = swift_bridgeObjectRelease();
  *v16 = a1;
  v16[1] = a2;
  return result;
}

void sub_1AFD7C114()
{
  sub_1AFD78368();
}

uint64_t sub_1AFD7C12C()
{
  return swift_release();
}

uint64_t sub_1AFD7C134(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1AFD7C140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD2C994(a1, a2, a3, &qword_1EEE73A50) & 1;
}

uint64_t sub_1AFD7C160(uint64_t a1, uint64_t a2)
{
  return sub_1AFD2C9F4(a1, a2, &qword_1EEE73A50);
}

_QWORD *sub_1AFD7C17C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1AFD7C188()
{
  unint64_t result;

  result = qword_1ED1F1CA8;
  if (!qword_1ED1F1CA8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037B04, &type metadata for LinkReplacableAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED1F1CA8);
  }
  return result;
}

void sub_1AFD7C1C4()
{
  sub_1B00052E4();
  __break(1u);
}

unint64_t sub_1AFD7C1E0()
{
  unint64_t result;

  result = qword_1ED1EFE68;
  if (!qword_1ED1EFE68)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CAED98], MEMORY[0x1E0CAEDA8]);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE68);
  }
  return result;
}

uint64_t sub_1AFD7C224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD2C994(a1, a2, a3, &qword_1EEE73A48) & 1;
}

uint64_t sub_1AFD7C244(uint64_t a1, uint64_t a2)
{
  return sub_1AFD2C9F4(a1, a2, &qword_1EEE73A48);
}

void sub_1AFD7C260(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E608AFC8;
}

void sub_1AFD7C288(uint64_t a1)
{
  uint64_t v1;

  sub_1AFD7B474(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1AFD7C2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AFD7BA7C(a1, *(_BYTE **)(v2 + 16), a2);
}

void sub_1AFD7C2B8()
{
  sub_1AFB23DC0(&qword_1ED1EFE48, &qword_1ED1EFE40);
}

uint64_t storeEnumTagSinglePayload for StyledVariableAttribute.Style(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AFD7C324 + 4 * byte_1B00374C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AFD7C344 + 4 * byte_1B00374C5[v4]))();
}

_BYTE *sub_1AFD7C324(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AFD7C344(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AFD7C34C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AFD7C354(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AFD7C35C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AFD7C364(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LinkReplacableAttribute()
{
  return &type metadata for LinkReplacableAttribute;
}

uint64_t storeEnumTagSinglePayload for LinkReplacableAttribute.Value(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AFD7C3CC + 4 * byte_1B00374CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AFD7C400 + 4 * byte_1B00374CA[v4]))();
}

uint64_t sub_1AFD7C400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD7C408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFD7C410);
  return result;
}

uint64_t sub_1AFD7C41C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFD7C424);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AFD7C428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD7C430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinkReplacableAttribute.Value()
{
  return &type metadata for LinkReplacableAttribute.Value;
}

ValueMetadata *_s24LinkReplacableAttributesVMa()
{
  return &_s24LinkReplacableAttributesVN;
}

unint64_t sub_1AFD7C468()
{
  unint64_t result;

  result = qword_1ED1F1CA0;
  if (!qword_1ED1F1CA0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00379A4, &type metadata for LinkReplacableAttribute.Value);
    atomic_store(result, (unint64_t *)&qword_1ED1F1CA0);
  }
  return result;
}

unint64_t sub_1AFD7C4A8()
{
  unint64_t result;

  result = qword_1ED1F1C78;
  if (!qword_1ED1F1C78)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00378EC, &_s24LinkReplacableAttributesVN);
    atomic_store(result, (unint64_t *)&qword_1ED1F1C78);
  }
  return result;
}

unint64_t sub_1AFD7C4E8()
{
  unint64_t result;

  result = qword_1ED1F1C80;
  if (!qword_1ED1F1C80)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00378BC, &_s24LinkReplacableAttributesVN);
    atomic_store(result, (unint64_t *)&qword_1ED1F1C80);
  }
  return result;
}

void sub_1AFD7C524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AFD7C540(a1, a2, a3, a4, &qword_1ED1F0900, (void (*)(_QWORD))type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry, sub_1AFE9E4F4);
}

void sub_1AFD7C540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  _QWORD *v7;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;

  sub_1AFAF46BC();
  OUTLINED_FUNCTION_9_85();
  if (v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v13;
  v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  if ((sub_1B0008DC4() & 1) == 0)
    goto LABEL_5;
  v18 = sub_1AFAF46BC();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    sub_1B0008FF8();
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  if ((v17 & 1) != 0)
  {
    a6(0);
    sub_1AFD7C8C8();
  }
  else
  {
    a7(v16, a2, a3, a1, *v7);
    swift_bridgeObjectRetain();
  }
}

unint64_t sub_1AFD7C680()
{
  unint64_t result;

  result = qword_1ED1EFE90;
  if (!qword_1ED1EFE90)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037944, &type metadata for LinkReplacableAttribute.Value);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE90);
  }
  return result;
}

unint64_t sub_1AFD7C6BC()
{
  unint64_t result;

  result = qword_1EEE73A08;
  if (!qword_1EEE73A08)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003791C, &type metadata for LinkReplacableAttribute.Value);
    atomic_store(result, (unint64_t *)&qword_1EEE73A08);
  }
  return result;
}

unint64_t sub_1AFD7C6F8()
{
  unint64_t result;

  result = qword_1ED1EFE98;
  if (!qword_1ED1EFE98)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0037A34, &type metadata for LinkReplacableAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE98);
  }
  return result;
}

unint64_t sub_1AFD7C734()
{
  unint64_t result;

  result = qword_1ED1EFE88;
  if (!qword_1ED1EFE88)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003796C, &type metadata for LinkReplacableAttribute.Value);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE88);
  }
  return result;
}

unint64_t sub_1AFD7C770()
{
  unint64_t result;

  result = qword_1ED1EFE38;
  if (!qword_1ED1EFE38)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute, &type metadata for StyledVariableAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE38);
  }
  return result;
}

unint64_t sub_1AFD7C7AC()
{
  unint64_t result;

  result = qword_1EEE73A18;
  if (!qword_1EEE73A18)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute.Style, &type metadata for StyledVariableAttribute.Style);
    atomic_store(result, (unint64_t *)&qword_1EEE73A18);
  }
  return result;
}

uint64_t sub_1AFD7C7E8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EFE40);
    v8 = a2();
    result = MEMORY[0x1B5E03BF4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD7C850()
{
  unint64_t result;

  result = qword_1ED1EFE30;
  if (!qword_1ED1EFE30)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute.Style, &type metadata for StyledVariableAttribute.Style);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE30);
  }
  return result;
}

unint64_t sub_1AFD7C88C()
{
  unint64_t result;

  result = qword_1ED1EFE28;
  if (!qword_1ED1EFE28)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for StyledVariableAttribute.Style, &type metadata for StyledVariableAttribute.Style);
    atomic_store(result, (unint64_t *)&qword_1ED1EFE28);
  }
  return result;
}

void sub_1AFD7C8C8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  OUTLINED_FUNCTION_13_82();
  v1 = v0(0);
  OUTLINED_FUNCTION_5_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

unsigned __int8 *sub_1AFD7C914(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD7CA04(a1, a2, a3);
}

unsigned __int8 *sub_1AFD7C928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B00086E0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_76_2();
  v5 = sub_1AFD7CC80();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    OUTLINED_FUNCTION_76_2();
    v7 = (unsigned __int8 *)sub_1B0008D64();
  }
LABEL_7:
  v11 = sub_1AFD7CA04(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1AFD7CA04(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFD7CC80()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1AFD7CCDC();
  v4 = sub_1AFD7CD10(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AFD7CCDC()
{
  return sub_1B00086EC();
}

uint64_t sub_1AFD7CD10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_1AFD7CE54(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_1AFB36D10(v9, 0);
      v12 = v11;
      sub_1AFD7CF40(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v15 = MEMORY[0x1B5E0252C](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1B5E0252CLL);
LABEL_9:
      sub_1B0008D64();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1B5E0252C]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_1AFD7CE54(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_1AFD7BCE0(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_1AFD7BCE0(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_1B0008680();
    return;
  }
  __break(1u);
}

void sub_1AFD7CF40(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_1AFD7BCE0(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_1B000868C();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_1B0008D64();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_1AFD7BCE0(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_1B0008668();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_1AFD7D140()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t isStackAllocationSafe;
  uint64_t v6;

  OUTLINED_FUNCTION_13_82();
  v2 = *(_BYTE *)(v1 + 32);
  v3 = v2 & 0x3F;
  v4 = (unint64_t)((1 << v2) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v3 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    OUTLINED_FUNCTION_57_5();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_33_33();
    OUTLINED_FUNCTION_47_6();
    if (v0)
      swift_willThrow();
    OUTLINED_FUNCTION_38_19();
  }
  else
  {
    v6 = swift_slowAlloc();
    OUTLINED_FUNCTION_57_5();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_33_33();
    OUTLINED_FUNCTION_47_6();
    MEMORY[0x1B5E03CC0](v6, -1, -1);
    OUTLINED_FUNCTION_38_19();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t *sub_1AFD7D290(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v20;

  v6 = result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = *(_QWORD *)(a3 + 56) & v11;
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_20;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_24;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_24;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_19:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_20:
    if (!*(_QWORD *)(a4 + 16))
    {
      *(uint64_t *)((char *)result + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        v20 = sub_1AFD7D414(v6, a2, v7, a3);
        swift_bridgeObjectRelease();
        return (uint64_t *)v20;
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_24;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1AFD7D414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_33:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A40);
  result = sub_1B0008CF8();
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (!v10)
    {
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_37;
      if (v13 >= a2)
        goto LABEL_33;
      v10 = a1[v13];
      ++v11;
      if (!v10)
      {
        v11 = v13 + 1;
        if (v13 + 1 >= a2)
          goto LABEL_33;
        v10 = a1[v11];
        if (!v10)
        {
          v11 = v13 + 2;
          if (v13 + 2 >= a2)
            goto LABEL_33;
          v10 = a1[v11];
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    sub_1B0009004();
    sub_1B0008614();
    result = sub_1B0009040();
    v15 = -1 << *(_BYTE *)(v9 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) == 0)
    {
      v19 = 0;
      v20 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v20 || (v19 & 1) == 0)
      {
        v21 = v17 == v20;
        if (v17 == v20)
          v17 = 0;
        v19 |= v21;
        v22 = *(_QWORD *)(v12 + 8 * v17);
        if (v22 != -1)
        {
          v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_36;
    v10 &= v10 - 1;
    if (!v5)
      goto LABEL_33;
  }
  v14 = v13 + 3;
  if (v14 >= a2)
    goto LABEL_33;
  v10 = a1[v14];
  if (v10)
  {
    v11 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v11 >= a2)
      goto LABEL_33;
    v10 = a1[v11];
    ++v14;
    if (v10)
      goto LABEL_22;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1AFD7D658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;

  type metadata accessor for Key(0);
  sub_1AFADA43C(&qword_1ED1F3CD0, type metadata accessor for Key);
  v7 = (id)sub_1B0008464();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_setAttributes_range_, v7, a2, a3);

}

uint64_t sub_1AFD7D720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherConditionGradientManager.GradientCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD7D774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AFD7C2A0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_66_4()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 128, 0);
}

uint64_t *initializeBufferWithCopyOfBuffer for LocationComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for LocationComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(v7 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1B0005FB0();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      v15 = *(int *)(v7 + 24);
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

_QWORD *initializeWithCopy for LocationComplicationDataStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for LocationComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B0005FB0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v6 + 24);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *assignWithCopy for LocationComplicationDataStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = type metadata accessor for LocationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18 = *(int *)(v6 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
      v22 = *(int *)(v6 + 24);
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      *v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFD3DB48((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  v9 = *(int *)(v6 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1B0005FB0();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = *(int *)(v6 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

_OWORD *initializeWithTake for LocationComplicationDataStatus(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = type metadata accessor for LocationComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B0005FB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *assignWithTake for LocationComplicationDataStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for LocationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      swift_bridgeObjectRelease();
      v15 = *(int *)(v6 + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
      v19 = *(int *)(v6 + 24);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      v23 = *v21;
      v22 = v21[1];
      *v20 = v23;
      v20[1] = v22;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFD3DB48((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(int *)(v6 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1B0005FB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD7DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for LocationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LocationComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD7DD98(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for LocationComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFD7DDE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFD7DE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for LocationComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EF280;
  if (!qword_1ED1EF280)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFD7DE84()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LocationComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1AFD7DED8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1AFBA8A00(0, v1, 0);
    v2 = v12;
    v4 = *(_QWORD *)(v12 + 16);
    v5 = 24 * v4 + 32;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = *(_QWORD *)(v12 + 24);
      swift_retain();
      if (v4 >= v9 >> 1)
        sub_1AFBA8A00((char *)(v9 > 1), v4 + 1, 1);
      v6 += 4;
      *(_QWORD *)(v12 + 16) = v4 + 1;
      v10 = (_QWORD *)(v12 + v5);
      *v10 = 0x3FF0000000000000;
      v10[1] = v7;
      v10[2] = v8;
      v5 += 24;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1AFD7DFCC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];
  uint64_t v37;

  v27 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A58);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A60);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(v1 + 16);
  v36[0] = *(_OWORD *)v1;
  v36[1] = v8;
  v37 = *(_QWORD *)(v1 + 32);
  *v4 = sub_1B00082E4();
  v4[1] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A68);
  sub_1AFD7E184(v36, (char *)v4 + *(int *)(v10 + 44));
  v11 = sub_1B0007FFC();
  sub_1AFAC4890((uint64_t)v4, (uint64_t)v7, &qword_1EEE73A58);
  *(_QWORD *)&v7[*(int *)(v5 + 36)] = v11;
  sub_1AFACB308((uint64_t)v4, &qword_1EEE73A58);
  v12 = sub_1B00082D8();
  v25 = v13;
  v26 = v12;
  sub_1AFD7E3F0((uint64_t)v36, (uint64_t)v28);
  v14 = v28[0];
  v15 = v28[1];
  v16 = v29;
  v17 = v30;
  v18 = v31;
  v24 = v32;
  v20 = v33;
  v19 = v34;
  LOBYTE(v11) = v35;
  v21 = v27;
  sub_1AFAC4890((uint64_t)v7, v27, &qword_1EEE73A60);
  v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A70) + 36);
  *(_QWORD *)v22 = v14;
  *(_QWORD *)(v22 + 8) = v15;
  *(_BYTE *)(v22 + 16) = v16;
  *(_QWORD *)(v22 + 24) = v17;
  *(_BYTE *)(v22 + 32) = v18;
  *(_OWORD *)(v22 + 40) = v24;
  *(_QWORD *)(v22 + 56) = v20;
  *(_QWORD *)(v22 + 64) = v19;
  *(_BYTE *)(v22 + 72) = v11;
  v23 = v25;
  *(_QWORD *)(v22 + 80) = v26;
  *(_QWORD *)(v22 + 88) = v23;
  sub_1AFACB308((uint64_t)v7, &qword_1EEE73A60);
}

uint64_t sub_1AFD7E184@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[3];
  __int128 v34;
  uint64_t v35;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A78);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - v14;
  v16 = a1[2];
  v26 = a1[3];
  v17 = a1[4];
  v18 = swift_bridgeObjectRetain();
  sub_1AFE80200(v18, v16, (uint64_t)v33, 5.0);
  v28 = v33[0];
  v29 = v33[1];
  v30 = v33[2];
  v31 = v34;
  v32 = v35;
  sub_1AFD7E7C0();
  v19 = 1;
  sub_1B0007DD4();
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRetain();
    v33[0] = sub_1B0008098();
    sub_1B0007DD4();
    swift_release();
    v19 = 0;
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A90);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, v19, 1, v20);
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v21(v12, v15, v9);
  sub_1AFAC4890((uint64_t)v8, (uint64_t)v5, &qword_1EEE73A78);
  v22 = v27;
  v21(v27, v12, v9);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73A98);
  sub_1AFAC4890((uint64_t)v5, (uint64_t)&v22[*(int *)(v23 + 48)], &qword_1EEE73A78);
  sub_1AFACB308((uint64_t)v8, &qword_1EEE73A78);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, v9);
  sub_1AFACB308((uint64_t)v5, &qword_1EEE73A78);
  return ((uint64_t (*)(char *, uint64_t))v24)(v12, v9);
}

uint64_t sub_1AFD7E3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  sub_1B00077BC();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v3 = (id)qword_1ED1F4470;
  v4 = sub_1B0007D44();
  v6 = v5;
  v8 = v7 & 1;
  sub_1B0007C48();
  v9 = sub_1B0007D08();
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_1AFAED640(v4, v6, v8);
  swift_bridgeObjectRelease();
  sub_1B0007BD0();
  v14 = sub_1B0007CA8();
  v16 = v15;
  v18 = v17 & 1;
  sub_1AFAED640(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a1 + 8);
  swift_retain();
  v19 = sub_1B0007CD8();
  v21 = v20;
  LOBYTE(v9) = v22;
  v24 = v23;
  sub_1AFAED640(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_1AFD7E798((uint64_t)&v31);
  LOBYTE(v14) = sub_1B0007AEC();
  result = sub_1B0007264();
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v21;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v24;
  *(_BYTE *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v26;
  *(_QWORD *)(a2 + 48) = v27;
  *(_QWORD *)(a2 + 56) = v28;
  *(_QWORD *)(a2 + 64) = v29;
  *(_BYTE *)(a2 + 72) = 0;
  return result;
}

uint64_t destroy for NonNumericalGauge()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NonNumericalGauge(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NonNumericalGauge(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NonNumericalGauge(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NonNumericalGauge()
{
  return &type metadata for NonNumericalGauge;
}

uint64_t sub_1AFD7E788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD7E798(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_1AFD7E7C0()
{
  unint64_t result;

  result = qword_1EEE73A88;
  if (!qword_1EEE73A88)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for NonNumericalGaugeChart, &type metadata for NonNumericalGaugeChart);
    atomic_store(result, (unint64_t *)&qword_1EEE73A88);
  }
  return result;
}

unint64_t sub_1AFD7E800()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE73AA0;
  if (!qword_1EEE73AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73A70);
    v2 = sub_1AFD7E884();
    sub_1AFAD71A0(&qword_1EEE73AC8, &qword_1EEE73AD0, MEMORY[0x1E0CDA280]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE73AA0);
  }
  return result;
}

unint64_t sub_1AFD7E884()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE73AA8;
  if (!qword_1EEE73AA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73A60);
    sub_1AFAD71A0(&qword_1EEE73AB0, &qword_1EEE73A58, MEMORY[0x1E0CDFCF8]);
    v3 = v2;
    sub_1AFAD71A0(&qword_1EEE73AB8, &qword_1EEE73AC0, MEMORY[0x1E0CDD1F0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE73AA8);
  }
  return result;
}

void SunriseSunsetViewModelFactory.__allocating_init(stringBuilder:sunriseSunsetEventCalculator:)(uint64_t a1)
{
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFD7E94C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for SunriseSunsetEvent();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFAE2DFC(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_1ED1F46A8 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  swift_beginAccess();
  v6 = (id)qword_1ED1F4470;
  v7 = sub_1B00054B8();

  v8 = sub_1B00058D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  return v7;
}

uint64_t sub_1AFD7EB34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for SunriseSunsetEvent();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AFAE2DFC(a1, (uint64_t)v4, v5);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  v6 = sub_1B00058D8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  if ((_DWORD)a1 == 1)
    return 0x662E7465736E7573;
  else
    return 0x2E657369726E7573;
}

uint64_t sub_1AFD7EC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t (*v42)();
  char *v43;
  char *v44;
  uint64_t v45;
  int EnumTagSinglePayload;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[4];
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _WORD v95[8];

  v69[3] = a3;
  v74 = type metadata accessor for SunriseSunsetDescriptionContext();
  MEMORY[0x1E0C80A78](v74);
  v75 = (uint64_t)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B00058D8();
  v80 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v79 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v81 = (char *)v69 - v9;
  v10 = type metadata accessor for SunriseSunsetModel();
  MEMORY[0x1E0C80A78](v10);
  v92 = (uint64_t)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v12);
  v89 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B000652C();
  v87 = *(_QWORD *)(v14 - 8);
  v88 = v14;
  MEMORY[0x1E0C80A78](v14);
  v86 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1B0005BFC();
  v82 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v85 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v91 = (char *)v69 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  MEMORY[0x1E0C80A78](v19);
  v78 = (uint64_t)v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B0005B84();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1B0005B18();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v26 = (char *)v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69[2] = a1;
  sub_1B00068D4();
  v77 = v26;
  sub_1B0005A34();
  v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  v72 = v24;
  v27(v24, v21);
  v28 = *(int *)(v10 + 20);
  v90 = a2;
  v70 = a2 + v28;
  v29 = sub_1AFB3B344(a2 + v28);
  sub_1AFB3A290(7, v29);
  v84 = v33;
  if (v31 != v32 >> 1)
  {
    v36 = v31;
    v69[0] = v30;
    v37 = v32 >> 1;
    v38 = type metadata accessor for SunriseSunsetModel;
    v39 = v82;
    v40 = v76;
    v83 = v32 >> 1;
    while (v36 < v37)
    {
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
      v42 = v38;
      v43 = v91;
      v41(v91, v84 + *(_QWORD *)(v39 + 72) * v36, v40);
      v44 = v86;
      sub_1B0005BD8();
      v45 = (uint64_t)v89;
      sub_1B0006520();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v44, v88);
      v34 = v6;
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v45, 1, v6);
      sub_1AFACE0DC(v45, &qword_1ED1F4BA0);
      v47 = v85;
      v48 = v43;
      v38 = v42;
      v41(v85, (uint64_t)v48, v40);
      sub_1AFAE2DFC(v90, v92, (uint64_t (*)(_QWORD))v42);
      if (EnumTagSinglePayload == 1)
      {
        sub_1AFAE2D74(v92, (uint64_t (*)(_QWORD))v42);
        v49 = *(void (**)(char *, uint64_t))(v39 + 8);
        v49(v47, v40);
      }
      else
      {
        v50 = v81;
        sub_1B0005BE4();
        v51 = v92;
        v52 = v79;
        sub_1B0005CEC();
        LODWORD(v82) = sub_1B0005854();
        v53 = *(void (**)(char *, uint64_t))(v80 + 8);
        v53(v52, v34);
        v54 = v50;
        v38 = v42;
        v6 = v34;
        v53(v54, v34);
        sub_1AFAE2D74(v51, (uint64_t (*)(_QWORD))v42);
        v49 = *(void (**)(char *, uint64_t))(v39 + 8);
        v49(v47, v40);
        if ((v82 & 1) != 0)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v78, v91, v40);
          v35 = 0;
          goto LABEL_11;
        }
      }
      ++v36;
      v49(v91, v40);
      v37 = v83;
      if (v83 == v36)
      {
        v34 = v6;
        v35 = 1;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  v34 = v6;
  v35 = 1;
LABEL_11:
  v55 = v78;
  __swift_storeEnumTagSinglePayload(v78, v35, 1, v76);
  swift_unknownObjectRelease();
  v56 = v90;
  v92 = sub_1AFD7F474(v55, (uint64_t)v77, v90);
  v57 = (uint64_t)v81;
  sub_1B0005CEC();
  v58 = v75;
  __swift_storeEnumTagSinglePayload(v75, 1, 1, v34);
  v59 = (int *)v74;
  __swift_storeEnumTagSinglePayload(v58 + *(int *)(v74 + 20), 1, 1, v34);
  __swift_storeEnumTagSinglePayload(v58 + v59[6], 1, 1, v34);
  __swift_storeEnumTagSinglePayload(v58 + v59[7], 1, 1, v34);
  sub_1B00068D4();
  v60 = v58 + v59[9];
  v61 = sub_1B0005D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v60, v56, v61);
  v62 = v58 + v59[10];
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v62, v70, v63);
  *(_BYTE *)(v58 + v59[11]) = 0;
  sub_1AFAC2F30(v57, v58, 0);
  sub_1AFAE2D74(v58, (uint64_t (*)(_QWORD))type metadata accessor for SunriseSunsetDescriptionContext);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v57, v34);
  sub_1B0005CEC();
  sub_1B00068D4();
  if (qword_1ED1F1698 != -1)
LABEL_16:
    swift_once();
  NSDateFormatter.periodSymbols.getter();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v64 = (id)qword_1ED1F4470;
  v65 = sub_1B00054B8();
  v67 = v66;

  v93 = v65;
  v94 = v67;
  strcpy((char *)v95, "sunrise.fill");
  HIBYTE(v95[6]) = 0;
  v95[7] = -5120;
  sub_1AFF743C4();
  sub_1AFACE0DC(v78, &qword_1ED1F4080);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v73);
  type metadata accessor for SunriseSunsetViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AFD7F474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v64[2];
  void (*v65)(uint64_t, _QWORD, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v79 = a3;
  v4 = sub_1B00058D8();
  v77 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v64 - v8;
  v10 = sub_1B00052A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v64 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4080);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1B0005BFC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  v25 = v24;
  sub_1AFB4BC68(v23, (uint64_t)v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v25) == 1)
  {
    sub_1AFACE0DC((uint64_t)v18, &qword_1ED1F4080);
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v26 = (id)qword_1ED1F4470;
    sub_1B00054B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v27 = swift_allocObject();
    v28 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v27 + 16) = xmmword_1B00275C0;
    v29 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v27 + 56) = v28;
    *(_QWORD *)(v27 + 64) = v29;
    *(_QWORD *)(v27 + 32) = 7;
    v30 = sub_1B0008560();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30;
  }
  v74 = v20;
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v72 = v25;
  v31(v22, v18, v25);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
  v33 = sub_1B0005B00();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = *(unsigned __int8 *)(v34 + 80);
  v71 = v11;
  v37 = (v36 + 32) & ~v36;
  v69 = v32;
  v66 = v36 | 7;
  v67 = v37 + v35;
  v38 = swift_allocObject();
  v75 = xmmword_1B00275C0;
  *(_OWORD *)(v38 + 16) = xmmword_1B00275C0;
  v68 = v37;
  v39 = *MEMORY[0x1E0CB1140];
  v40 = *(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104);
  v70 = v33;
  v65 = v40;
  v40(v38 + v37, v39, v33);
  sub_1AFAFAA98();
  sub_1B0005CEC();
  v73 = v22;
  sub_1B0005BE4();
  sub_1B0005A58();
  swift_bridgeObjectRelease();
  v41 = *(void (**)(char *, uint64_t))(v77 + 8);
  v41(v6, v4);
  v41(v9, v4);
  v42 = sub_1B0005230();
  LOBYTE(v34) = v43;
  v44 = *(void (**)(char *, uint64_t))(v71 + 8);
  v44(v15, v10);
  v45 = 0;
  if ((v34 & 1) == 0)
  {
    if (v42 > 48)
    {
      v71 = v4;
      v77 = v10;
      if (qword_1ED1F46A8 != -1)
        swift_once();
      swift_beginAccess();
      v46 = (id)qword_1ED1F4470;
      v47 = sub_1B00054B8();
      v64[0] = v48;
      v64[1] = v47;

      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v75;
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v75;
      v65(v50 + v68, *MEMORY[0x1E0CB1130], v70);
      sub_1AFAFAA98();
      sub_1B0005CEC();
      v51 = v73;
      sub_1B0005BE4();
      v52 = v76;
      sub_1B0005A58();
      swift_bridgeObjectRelease();
      v53 = v71;
      v41(v6, v71);
      v41(v9, v53);
      v54 = sub_1B0005218();
      v56 = v55;
      v44(v52, v77);
      v57 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v49 + 64) = v57;
      if ((v56 & 1) != 0)
        v58 = 0;
      else
        v58 = v54;
      *(_QWORD *)(v49 + 32) = v58;
      v30 = sub_1B0008560();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v72);
      return v30;
    }
    v45 = v42;
  }
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v59 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v60 = swift_allocObject();
  v61 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v60 + 16) = v75;
  v62 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v60 + 56) = v61;
  *(_QWORD *)(v60 + 64) = v62;
  *(_QWORD *)(v60 + 32) = v45;
  v30 = sub_1B0008560();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v72);
  return v30;
}

uint64_t SunriseSunsetViewModelFactory.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t SunriseSunsetViewModelFactory.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AFD7FBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SunriseSunsetViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for SunriseSunsetViewModelFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SunriseSunsetViewModelFactory.__allocating_init(stringBuilder:sunriseSunsetEventCalculator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1AFD7FC20(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  unint64_t v40;
  unint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  unint64_t v47;
  int64_t v49;
  uint64_t v51;
  unint64_t v52;
  void (*v53)();
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t, unint64_t, uint64_t);
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v64 = OUTLINED_FUNCTION_11_0();
  v8 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_38();
  v63 = v9;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_24_13();
  v62 = v11;
  v69 = sub_1B0005BFC();
  MEMORY[0x1E0C80A78](v69);
  OUTLINED_FUNCTION_38();
  v61 = v12;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_36_25(v14, v15, v16, v17, v18, v19, v20, v21, v51);
  v65 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v24 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_75;
  v26 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_76;
  v67 = a3;
  v28 = v24 / v23;
  v29 = v26 / v23;
  v59 = *(_QWORD *)(v22 + 72);
  if (v24 / v23 >= v26 / v23)
  {
    sub_1AFBA788C(a2, v26 / v23);
    v30 = a4 + v29 * v23;
    if (v29 * v23 < 1 || a1 >= a2)
      goto LABEL_69;
    v54 = -v23;
    v52 = a4;
    v53 = *(void (**)())(v65 + 16);
    v40 = v67;
    v58 = v8;
    v66 = a1;
    while (1)
    {
      v57 = v40;
      v68 = v40 + v54;
      v53();
      ((void (*)(uint64_t))v53)(v61);
      sub_1B0005BE4();
      v41 = a2;
      OUTLINED_FUNCTION_34_33();
      v42 = sub_1B0005860();
      v43 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v43(v63, v64);
      v43(v62, v64);
      v44 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v44(v61, v69);
      v44(v60, v69);
      if ((v42 & 1) != 0)
        break;
      v40 = v68;
      if (v57 < v30 || v68 >= v30)
      {
        v30 += v54;
LABEL_58:
        OUTLINED_FUNCTION_22_54();
        a4 = v52;
        v8 = v58;
        v23 = v59;
        v47 = v66;
        goto LABEL_65;
      }
      a4 = v52;
      v8 = v58;
      v23 = v59;
      v47 = v66;
      if (v57 == v30)
      {
        v30 += v54;
      }
      else
      {
        v30 += v54;
        OUTLINED_FUNCTION_13_16();
      }
LABEL_65:
      if (v30 <= a4 || a2 <= v47)
        goto LABEL_69;
    }
    v40 = v68;
    if (v57 >= a2 && v68 < a2)
    {
      v8 = v58;
      v23 = v59;
      v47 = v66;
      a2 += v54;
      if (v57 != v41)
        OUTLINED_FUNCTION_13_16();
      a4 = v52;
      goto LABEL_65;
    }
    a2 += v54;
    goto LABEL_58;
  }
  sub_1AFBA788C(a1, v24 / v23);
  v30 = a4 + v28 * v23;
  if (v28 * v23 >= 1 && a2 < v67)
  {
    v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v65 + 16);
    v55 = a4 + v28 * v23;
    do
    {
      v56(v60, a2, v69);
      v56(v61, a4, v69);
      v32 = a2;
      OUTLINED_FUNCTION_34_33();
      sub_1B0005BE4();
      v33 = sub_1B0005860();
      v34 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v34(v63, v64);
      v34(v62, v64);
      v35 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v35(v61, v69);
      v35(v60, v69);
      if ((v33 & 1) != 0)
      {
        v23 = v59;
        a2 += v59;
        if (a1 < v32 || a1 >= a2)
        {
          OUTLINED_FUNCTION_22_54();
        }
        else if (a1 != v32)
        {
          OUTLINED_FUNCTION_13_16();
        }
      }
      else
      {
        v23 = v59;
        if (a1 < a4 || a1 >= a4 + v59)
        {
          OUTLINED_FUNCTION_22_54();
        }
        else if (a1 != a4)
        {
          OUTLINED_FUNCTION_13_16();
        }
        a4 += v59;
      }
      v30 = v55;
      a1 += v23;
    }
    while (a4 < v55 && a2 < v67);
  }
LABEL_69:
  v49 = v30 - a4;
  if (v23 != -1 || v49 != 0x8000000000000000)
  {
    sub_1AFBA788C(a4, v49 / v23);
    return;
  }
LABEL_77:
  __break(1u);
}

id WeatherVFXEffect.vfxEffect.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t WeatherVFXEffect.__allocating_init(vfxEffect:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WeatherVFXEffect.init(vfxEffect:)(a1);
  return v2;
}

uint64_t WeatherVFXEffect.init(vfxEffect:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = a1;
  v3 = a1;
  *(_QWORD *)(v2 + 24) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 32) = v4 & 1;
  *(_QWORD *)(v2 + 40) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 48) = v5 & 1;
  *(_QWORD *)(v2 + 56) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 64) = v6 & 1;
  *(_QWORD *)(v2 + 72) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 80) = v7 & 1;
  OUTLINED_FUNCTION_0_111();
  *(_QWORD *)(v2 + 88) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 96) = v8 & 1;
  OUTLINED_FUNCTION_0_111();
  *(_QWORD *)(v2 + 104) = OUTLINED_FUNCTION_1_100();
  *(_BYTE *)(v2 + 112) = v9 & 1;
  *(_QWORD *)(v2 + 120) = OUTLINED_FUNCTION_1_100();
  *(_BYTE *)(v2 + 128) = v10 & 1;
  *(_QWORD *)(v2 + 136) = sub_1B0006E8C();
  *(_BYTE *)(v2 + 144) = v11 & 1;
  OUTLINED_FUNCTION_0_111();
  v12 = sub_1B0006E8C();
  v14 = v13;

  *(_QWORD *)(v2 + 152) = v12;
  *(_BYTE *)(v2 + 160) = v14 & 1;
  return v2;
}

uint64_t WeatherVFXEffect.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t WeatherVFXEffect.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t method lookup function for WeatherVFXEffect()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherVFXEffect.__allocating_init(vfxEffect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1AFD802B8()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 6;
  v21 = 0x617274736F746C41;
  v22 = 0xEF4C202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0051480;
  v25 = 6;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFD80AC8();
  sub_1AFD80AC8();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V4.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1165623296;
  LODWORD(v6) = 1134559232;
  sub_1AFB471E4((uint64_t)&v36, 48, 0, 2000, 133, 10, 1, 10, 0, 0x41F00000C20C0000, 0x42F0000040200000, v6, 0x3EA3D70A3E428F5CLL, v7, 0x3F8000003F800000, 0x3E99999A3F800000, 0x3F8000003F800000, 0x3F3333333F800000, 1067450368,
    0x4270000000000000,
    v8,
    0x3E3851EC3E051EB8,
    0x3F8000003F800000,
    0x3F152CEC3F800000,
    0x3F8000003F800000,
    0x3F5B1FF13F800000,
    0x40000000,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFD80AC8()
{
  uint64_t v0;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  double v15;
  __n128 v16;
  float v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __n128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  double v32;
  __n128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __n128 v37;
  __int128 v38;
  double v39;
  __int128 v40;
  __n128 v41;
  __int128 v42;
  __int128 v43;
  unsigned int v44;
  __n128 *v45;
  uint64_t v46;
  float v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  double v56;
  __n128 v57;
  float v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  double v63;
  double v64;
  double v65;
  double v66;
  __int128 v67;
  __n128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __n128 *v72;
  uint64_t v73;
  float v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  uint64_t v82;
  double v83;
  __n128 v84;
  float v85;
  float v86;
  float v87;
  __n128 v88;
  double v89;
  __n128 v90;
  double v91;
  __n128 v92;
  __n128 v93;
  __int128 v94;
  double v95;
  __int128 v96;
  __n128 v97;
  double v98;
  double v99;
  __n128 v100;
  __int128 v101;
  __n128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __n128 *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  uint64_t v114;
  double v115;
  __n128 v116;
  float v117;
  float v118;
  __n128 v119;
  double v120;
  __n128 v121;
  double v122;
  __n128 v123;
  double v124;
  __n128 v125;
  __int128 v126;
  double v127;
  __int128 v128;
  __n128 v129;
  double v130;
  double v131;
  __n128 v132;
  double v133;
  __int128 v134;
  __n128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  uint64_t v147;
  double v148;
  float v149;
  float v150;
  _OWORD *v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  uint64_t v158;
  double v159;
  float v160;
  float v161;
  __n128 v162;
  double v163;
  __n128 v164;
  __n128 v165;
  __n128 v166;
  double v167;
  double v168;
  __int128 v169;
  __n128 v170;
  __int128 v171;
  __int128 v172;
  __n128 v173;
  __int128 v174;
  __int128 v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  uint64_t v183;
  double v184;
  float v185;
  __int128 v186;
  __n128 v187;
  _OWORD *v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  uint64_t v195;
  double v196;
  __n128 v197;
  __int128 v198;
  __n128 v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  uint64_t v207;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  int v213;
  _OWORD *v214;
  _OWORD *v215;
  int v216;
  int v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  _OWORD *v345;
  _OWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  __n128 v351;
  __n128 v352;
  __n128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __n128 v361;
  __int128 v362;
  __n128 v363;
  __int128 v364;
  __n128 v365;
  __int128 v366;
  __n128 v367;
  __int128 v368;
  __n128 v369;
  __int128 v370;
  __n128 v371;
  __int128 v372;
  __n128 v373;
  __n128 v374;
  __n128 v375;
  __n128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __n128 v381;
  __int128 v382;
  __n128 v383;
  __n128 v384;
  __n128 v385;
  __int128 v386;
  __n128 v387;
  __int128 v388;
  __n128 v389;
  __n128 v390;
  __n128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v423 = xmmword_1B00276A0;
  v424 = xmmword_1B00276B0;
  v421 = xmmword_1B002C560;
  v422 = xmmword_1B002C570;
  v419 = xmmword_1B002B2D0;
  v420 = xmmword_1B002B2E0;
  __asm { FMOV            V3.2D, #1.0 }
  v417 = _Q3;
  v418 = _Q3;
  v415 = _Q3;
  v416 = _Q3;
  v413 = xmmword_1B002B2F0;
  v414 = xmmword_1B002B300;
  v411 = xmmword_1B0028CD0;
  v412 = xmmword_1B0028CE0;
  v409 = xmmword_1B002C580;
  v410 = xmmword_1B00277A0;
  v407 = xmmword_1B0028D00;
  v408 = xmmword_1B0028C80;
  v405 = _Q3;
  v406 = _Q3;
  OUTLINED_FUNCTION_14_40();
  v401 = v6;
  v402 = xmmword_1B0027030;
  v399 = xmmword_1B002EDB0;
  v400 = xmmword_1B00287C0;
  v397 = xmmword_1B002EDC0;
  v398 = xmmword_1B0026FC0;
  v395 = xmmword_1B002EDB0;
  v396 = xmmword_1B0025E90;
  v393 = xmmword_1B002EDD0;
  v394 = xmmword_1B0028150;
  v354 = v6;
  v391 = (__n128)v6;
  v392 = xmmword_1B0025E90;
  v389 = (__n128)v6;
  v390 = (__n128)v6;
  v387 = (__n128)v6;
  v388 = xmmword_1B0025E90;
  v385 = (__n128)v6;
  v386 = xmmword_1B0025E50;
  v383 = (__n128)v6;
  v384 = (__n128)v6;
  v381 = (__n128)v6;
  v382 = xmmword_1B0027770;
  v379 = xmmword_1B002EDB0;
  v380 = xmmword_1B0025E90;
  v377 = xmmword_1B002EDD0;
  v378 = xmmword_1B0028150;
  v375 = (__n128)v6;
  v376 = (__n128)v6;
  v373 = (__n128)v6;
  v374 = (__n128)v6;
  v371 = (__n128)v6;
  v372 = xmmword_1B0025E50;
  v369 = (__n128)v6;
  v370 = xmmword_1B0027030;
  v367 = (__n128)v6;
  v368 = xmmword_1B0029020;
  v365 = (__n128)v6;
  v366 = xmmword_1B0025E90;
  v363 = (__n128)v6;
  v364 = xmmword_1B0025E50;
  v361 = (__n128)v6;
  v362 = xmmword_1B0027030;
  v359 = v6;
  v360 = v6;
  v357 = v6;
  v358 = v6;
  v355 = v6;
  v356 = v6;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_8_9(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, 35.0, 0.1, &v409, &v407, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v405, 0,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    1112014848,
    1097859072,
    &v357,
    (uint64_t)&v355);
  OUTLINED_FUNCTION_4_58();
  v417 = v354;
  v418 = v354;
  v415 = v354;
  v416 = v354;
  OUTLINED_FUNCTION_3_57();
  v405 = v18;
  v406 = v18;
  OUTLINED_FUNCTION_14_40();
  v401 = v19;
  v402 = xmmword_1B0027030;
  v399 = xmmword_1B002EDB0;
  v400 = xmmword_1B00287C0;
  OUTLINED_FUNCTION_23_10((__n128)xmmword_1B002EDC0);
  v395 = v20;
  v396 = xmmword_1B0025E90;
  v393 = v21;
  v394 = xmmword_1B0028150;
  v391 = v22;
  v392 = xmmword_1B0025E90;
  v389 = v22;
  v390 = v22;
  v387 = v22;
  v388 = xmmword_1B0025E90;
  v385 = v22;
  v386 = xmmword_1B0025E50;
  v383 = v22;
  v384 = v22;
  v381 = v22;
  v382 = xmmword_1B0027770;
  v379 = v20;
  v380 = xmmword_1B0025E90;
  v377 = v21;
  v378 = xmmword_1B0028150;
  v375 = v22;
  v376 = v22;
  v373 = v22;
  v374 = v22;
  v371 = v22;
  v372 = xmmword_1B0025E50;
  v369 = v22;
  v370 = v23;
  v367 = v22;
  v368 = xmmword_1B0029020;
  v365 = v22;
  v366 = xmmword_1B0025E90;
  v363 = v22;
  v364 = xmmword_1B0025E50;
  v361 = v22;
  v362 = v23;
  v359 = (__int128)v22;
  v360 = (__int128)v22;
  v357 = (__int128)v22;
  v358 = (__int128)v22;
  v355 = (__int128)v22;
  v356 = (__int128)v22;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_21_16();
  OUTLINED_FUNCTION_8_9(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, 200.0, 35.0, 0.1, &v409, &v407, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v405, 0,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    1112014848,
    1097859072,
    &v357,
    (uint64_t)&v355);
  v423 = xmmword_1B002C5C0;
  v424 = xmmword_1B002B3B0;
  v421 = xmmword_1B002C5D0;
  v422 = xmmword_1B002B3D0;
  v419 = xmmword_1B00277F0;
  v420 = xmmword_1B0026110;
  OUTLINED_FUNCTION_6_85();
  v409 = v34;
  v410 = xmmword_1B002C5E0;
  v407 = xmmword_1B002C5F0;
  v408 = xmmword_1B0028D90;
  v405 = v34;
  v406 = v34;
  v404 = 0u;
  v403 = 0u;
  v401 = v34;
  v402 = xmmword_1B0027030;
  v399 = xmmword_1B002EDE0;
  v400 = xmmword_1B00287C0;
  OUTLINED_FUNCTION_23_10((__n128)xmmword_1B002EDF0);
  v395 = xmmword_1B002EE00;
  v396 = xmmword_1B0025E90;
  v393 = xmmword_1B002EE10;
  v394 = xmmword_1B0028150;
  v391 = v35;
  v392 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_16_46(1.0, 1.0, v35);
  v388 = v36;
  v385 = v37;
  v386 = xmmword_1B0025E50;
  v383 = v37;
  v384 = v37;
  v381 = v37;
  v382 = xmmword_1B0027770;
  v379 = (__int128)v37;
  v380 = v36;
  v377 = (__int128)v37;
  v378 = xmmword_1B002C6A0;
  v375 = v37;
  v376 = v37;
  v373 = v37;
  v374 = v37;
  v371 = v37;
  v372 = xmmword_1B0025E50;
  v369 = v37;
  v370 = v38;
  *(_QWORD *)&v39 = OUTLINED_FUNCTION_33_35(1.0, *(double *)&v36, v37).n128_u64[0];
  v366 = v40;
  v363 = v41;
  v364 = v42;
  v361 = v41;
  v362 = v43;
  OUTLINED_FUNCTION_13_12(v39, *(double *)&v40, v41);
  OUTLINED_FUNCTION_12_8();
  v209 = v44 | 0x3F4CCCCD00000000;
  v353 = v45[163];
  v47 = *(float *)(v46 + 2228);
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_8_9(v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, 250.0, v58, v47, &v409, &v407, v209, 1061997773, &v405, 0,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    1112014848,
    1097859072,
    v345,
    v347);
  OUTLINED_FUNCTION_10_50();
  v421 = xmmword_1B0028D70;
  v422 = xmmword_1B0028A50;
  v419 = xmmword_1B00277F0;
  v420 = xmmword_1B0026110;
  OUTLINED_FUNCTION_6_85();
  v409 = (__int128)v59;
  v410 = xmmword_1B0027840;
  v407 = (__int128)v59;
  v408 = xmmword_1B0028D90;
  v405 = xmmword_1B0026320;
  v406 = xmmword_1B0027440;
  OUTLINED_FUNCTION_18_63(0.970078886, 0.97049278, v59);
  v399 = (__int128)v60;
  v400 = xmmword_1B00277B0;
  v397 = (__int128)v60;
  v398 = xmmword_1B0026230;
  v395 = (__int128)v60;
  v396 = xmmword_1B0028150;
  v393 = (__int128)v60;
  v394 = xmmword_1B00277A0;
  v391 = v60;
  v392 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_16_46(1.0, 1.0, v60);
  v388 = (__int128)v61;
  v385 = v62;
  v386 = xmmword_1B0025E50;
  *(_QWORD *)&v66 = OUTLINED_FUNCTION_7_83(v63, v64, v62, v65, v61).n128_u64[0];
  v372 = v67;
  v369 = v68;
  v370 = v69;
  v367 = v68;
  v368 = v70;
  v365 = v68;
  v366 = v71;
  v363 = v68;
  v364 = v67;
  v361 = v68;
  v362 = v69;
  OUTLINED_FUNCTION_13_12(v66, *(double *)&v70, v68);
  OUTLINED_FUNCTION_0_54();
  OUTLINED_FUNCTION_30_5();
  v352 = v72[32];
  v74 = *(float *)(v73 + 2620);
  OUTLINED_FUNCTION_20_35();
  OUTLINED_FUNCTION_26_14(v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v74, v87, &v409, &v407, 0x3F6666663F800000, 0, &v405,
    0,
    &v403,
    v222,
    v229,
    v236,
    v243,
    v250,
    v257,
    v264,
    v271,
    v278,
    v285,
    v292,
    v299,
    v306,
    v313,
    v320,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    1112014848,
    1097859072,
    v346,
    v348);
  OUTLINED_FUNCTION_10_50();
  v421 = xmmword_1B0028DA0;
  v422 = xmmword_1B0028DB0;
  v419 = xmmword_1B0028220;
  v420 = xmmword_1B0028230;
  OUTLINED_FUNCTION_8_87();
  v405 = xmmword_1B0028DD0;
  v406 = xmmword_1B0028DE0;
  v89 = OUTLINED_FUNCTION_27_51(1.0, v88);
  v402 = xmmword_1B0027030;
  *(_QWORD *)&v91 = OUTLINED_FUNCTION_32_33(v89, v90).n128_u64[0];
  v398 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_29_54(v91, v92);
  v394 = xmmword_1B00277A0;
  v391 = v93;
  v392 = xmmword_1B0025E90;
  v389 = v93;
  v390 = v93;
  v387 = v93;
  v388 = xmmword_1B0025E90;
  v385 = v93;
  v386 = v94;
  *(_QWORD *)&v95 = OUTLINED_FUNCTION_21_53(1.0, v93).n128_u64[0];
  v380 = v96;
  OUTLINED_FUNCTION_13_85(v95, v97, *(double *)&v96, v98, v99, v100);
  v370 = v101;
  v367 = v102;
  v368 = xmmword_1B00278C0;
  v365 = v102;
  v366 = v103;
  v363 = v102;
  v364 = v104;
  v361 = v102;
  v362 = v101;
  OUTLINED_FUNCTION_17_78(1.0, v102);
  v349 = v105;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_54();
  OUTLINED_FUNCTION_30_5();
  v351 = v106[223];
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_26_14(v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, 900.0, v117, 0.8, v118, &v409, &v407, 0x3F6666663F800000, 0, &v405,
    0,
    &v403,
    v223,
    v230,
    v237,
    v244,
    v251,
    v258,
    v265,
    v272,
    v279,
    v286,
    v293,
    v300,
    v307,
    v314,
    v321,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    v333,
    v339,
    &v357,
    v349);
  OUTLINED_FUNCTION_10_50();
  v421 = xmmword_1B0028DA0;
  v422 = xmmword_1B0028DB0;
  v419 = xmmword_1B0028220;
  v420 = xmmword_1B0028230;
  OUTLINED_FUNCTION_8_87();
  v405 = xmmword_1B0028DD0;
  v406 = xmmword_1B0028DE0;
  v120 = OUTLINED_FUNCTION_27_51(0.962731481, v119);
  v402 = xmmword_1B0027030;
  *(_QWORD *)&v122 = OUTLINED_FUNCTION_32_33(v120, v121).n128_u64[0];
  v398 = xmmword_1B0025E50;
  *(_QWORD *)&v124 = OUTLINED_FUNCTION_29_54(v122, v123).n128_u64[0];
  v394 = xmmword_1B00277A0;
  v391 = v125;
  v392 = xmmword_1B0025E90;
  v389 = v125;
  v390 = v125;
  v387 = v125;
  v388 = xmmword_1B0025E90;
  v385 = v125;
  v386 = v126;
  *(_QWORD *)&v127 = OUTLINED_FUNCTION_21_53(v124, v125).n128_u64[0];
  v380 = v128;
  *(_QWORD *)&v133 = OUTLINED_FUNCTION_13_85(v127, v129, v130, v131, *(double *)&v128, v132).n128_u64[0];
  v370 = v134;
  v367 = v135;
  v368 = v136;
  v365 = v135;
  v366 = v137;
  v363 = v135;
  v364 = v138;
  v361 = v135;
  v362 = v134;
  OUTLINED_FUNCTION_17_78(v133, v135);
  v350 = v139;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_18_26();
  OUTLINED_FUNCTION_0_54();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_25_27(v140, v141, v142, v143, v144, v145, v146, v147, v148, v351, 900.0, v149, 0.8, v150, &v409, &v407, v210, v212, &v405,
    0,
    &v403,
    v224,
    v231,
    v238,
    v245,
    v252,
    v259,
    v266,
    v273,
    v280,
    v287,
    v294,
    v301,
    v308,
    v315,
    v322,
    &v371,
    v327,
    v329,
    v331,
    &v363,
    &v361,
    &v359,
    v334,
    v340,
    &v357,
    v350);
  OUTLINED_FUNCTION_10_50();
  v421 = xmmword_1B0028D70;
  v422 = xmmword_1B0028A50;
  v419 = xmmword_1B00277F0;
  v420 = xmmword_1B0026110;
  v417 = v354;
  v418 = v354;
  v415 = v354;
  v416 = v354;
  v413 = v354;
  v414 = v354;
  v411 = v354;
  v412 = v354;
  v409 = v354;
  v410 = xmmword_1B0027840;
  v407 = v354;
  v408 = xmmword_1B0028D90;
  v405 = xmmword_1B0026320;
  v406 = xmmword_1B0027440;
  v404 = 0u;
  v403 = 0u;
  v401 = v354;
  v402 = xmmword_1B0027030;
  v399 = v354;
  v400 = xmmword_1B00277B0;
  v397 = v354;
  v398 = xmmword_1B0026230;
  v395 = v354;
  v396 = xmmword_1B0028150;
  v393 = v354;
  v394 = xmmword_1B00277A0;
  v391 = (__n128)v354;
  v392 = xmmword_1B0025E90;
  v389 = (__n128)v354;
  v390 = (__n128)v354;
  v387 = (__n128)v354;
  v388 = xmmword_1B0025E90;
  v385 = (__n128)v354;
  v386 = xmmword_1B0025E50;
  v383 = (__n128)v354;
  v384 = (__n128)v354;
  v381 = (__n128)v354;
  v382 = xmmword_1B0027770;
  v379 = v354;
  v380 = xmmword_1B0025E90;
  v377 = v354;
  v378 = xmmword_1B002C6A0;
  v375 = (__n128)v354;
  v376 = (__n128)v354;
  v373 = (__n128)v354;
  v374 = (__n128)v354;
  v371 = (__n128)v354;
  v372 = xmmword_1B0025E50;
  v369 = (__n128)v354;
  v370 = xmmword_1B0027030;
  v367 = (__n128)v354;
  v368 = xmmword_1B00277A0;
  v365 = (__n128)v354;
  v366 = xmmword_1B0025E90;
  v363 = (__n128)v354;
  v364 = xmmword_1B0025E50;
  v361 = (__n128)v354;
  v362 = xmmword_1B0027030;
  v359 = v354;
  v360 = v354;
  v357 = v354;
  v358 = v354;
  v355 = v354;
  v356 = v354;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_18_26();
  OUTLINED_FUNCTION_1_56();
  OUTLINED_FUNCTION_22_32();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_25_27(v151, v152, v153, v154, v155, v156, v157, v158, v159, v352, 600.0, v160, v74, v161, &v409, &v407, v211, v213, &v405,
    v216,
    v218,
    v225,
    v232,
    v239,
    v246,
    v253,
    v260,
    v267,
    v274,
    v281,
    v288,
    v295,
    v302,
    v309,
    v316,
    v323,
    &v371,
    v328,
    v330,
    v332,
    &v363,
    &v361,
    &v359,
    v335,
    v341,
    &v357,
    (uint64_t)&v355);
  v423 = xmmword_1B002C5C0;
  v424 = xmmword_1B002B3B0;
  v421 = xmmword_1B002C5D0;
  v422 = xmmword_1B002B3D0;
  v419 = xmmword_1B00277F0;
  v420 = xmmword_1B0026110;
  OUTLINED_FUNCTION_6_85();
  v409 = (__int128)v162;
  v410 = xmmword_1B002C5E0;
  v407 = xmmword_1B002C5F0;
  v408 = xmmword_1B0028D90;
  v405 = (__int128)v162;
  v406 = (__int128)v162;
  OUTLINED_FUNCTION_18_63(1.0, v163, v162);
  v399 = xmmword_1B002EDE0;
  v400 = xmmword_1B00287C0;
  OUTLINED_FUNCTION_23_10((__n128)xmmword_1B002EDF0);
  v395 = xmmword_1B002EE00;
  v396 = xmmword_1B0025E90;
  v393 = xmmword_1B002EE10;
  v394 = xmmword_1B0028150;
  v391 = v164;
  v392 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_16_46(1.0, 1.0, v164);
  v388 = (__int128)v165;
  v385 = v166;
  v386 = xmmword_1B0025E50;
  *(_QWORD *)&v168 = OUTLINED_FUNCTION_7_83(v165.n128_f64[0], 1.0, v166, v167, v165).n128_u64[0];
  v372 = v169;
  v369 = v170;
  v370 = v171;
  OUTLINED_FUNCTION_33_35(v168, *(double *)&v169, v170);
  v366 = v172;
  v363 = v173;
  v364 = v174;
  v361 = v173;
  v362 = v175;
  v359 = (__int128)v173;
  v360 = (__int128)v173;
  v357 = (__int128)v173;
  v358 = (__int128)v173;
  v355 = (__int128)v173;
  v356 = (__int128)v173;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_1_56();
  OUTLINED_FUNCTION_29_13();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_9_13(v176, v177, v178, v179, v180, v181, v182, v183, v184, v353, 250.0, v185, v47, &v409, &v407, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v214, v217,
    v219,
    v226,
    v233,
    v240,
    v247,
    v254,
    v261,
    v268,
    v275,
    v282,
    v289,
    v296,
    v303,
    v310,
    v317,
    v324,
    &v403,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    v336,
    v342,
    &v357,
    (uint64_t)&v355);
  OUTLINED_FUNCTION_4_58();
  v417 = v354;
  v418 = v354;
  v415 = v354;
  v416 = v354;
  OUTLINED_FUNCTION_3_57();
  v405 = v186;
  v406 = v186;
  OUTLINED_FUNCTION_14_40();
  v401 = (__int128)v187;
  v402 = xmmword_1B0027030;
  v399 = xmmword_1B002EDB0;
  v400 = xmmword_1B00287C0;
  v397 = xmmword_1B002EDC0;
  v398 = xmmword_1B0026FC0;
  v395 = xmmword_1B002EDB0;
  v396 = xmmword_1B0025E90;
  v393 = xmmword_1B002EDD0;
  v394 = xmmword_1B0028150;
  v391 = v187;
  v392 = xmmword_1B0025E90;
  v389 = v187;
  v390 = v187;
  v387 = v187;
  v388 = xmmword_1B0025E90;
  v385 = v187;
  v386 = xmmword_1B0025E50;
  v383 = v187;
  v384 = v187;
  v381 = v187;
  v382 = xmmword_1B0027770;
  v379 = xmmword_1B002EDB0;
  v380 = xmmword_1B0025E90;
  v377 = xmmword_1B002EDD0;
  v378 = xmmword_1B0028150;
  v375 = v187;
  v376 = v187;
  v373 = v187;
  v374 = v187;
  v371 = v187;
  v372 = xmmword_1B0025E50;
  v369 = v187;
  v370 = xmmword_1B0027030;
  v367 = v187;
  v368 = xmmword_1B0029020;
  v365 = v187;
  v366 = xmmword_1B0025E90;
  v363 = v187;
  v364 = xmmword_1B0025E50;
  v361 = v187;
  v362 = xmmword_1B0027030;
  v359 = (__int128)v187;
  v360 = (__int128)v187;
  v357 = (__int128)v187;
  v358 = (__int128)v187;
  v355 = (__int128)v187;
  v356 = (__int128)v187;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_29_13();
  OUTLINED_FUNCTION_21_16();
  OUTLINED_FUNCTION_9_13(v188, v189, v190, v191, v192, v193, v194, v195, v196, v197, 200.0, 35.0, 0.1, &v409, &v407, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v215, 0,
    v220,
    v227,
    v234,
    v241,
    v248,
    v255,
    v262,
    v269,
    v276,
    v283,
    v290,
    v297,
    v304,
    v311,
    v318,
    v325,
    &v403,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    v337,
    v343,
    &v357,
    (uint64_t)&v355);
  OUTLINED_FUNCTION_4_58();
  v417 = v354;
  v418 = v354;
  v415 = v354;
  v416 = v354;
  OUTLINED_FUNCTION_3_57();
  v405 = v198;
  v406 = v198;
  OUTLINED_FUNCTION_14_40();
  v401 = (__int128)v199;
  v402 = xmmword_1B0027030;
  v399 = xmmword_1B002EDB0;
  v400 = xmmword_1B00287C0;
  v397 = xmmword_1B002EDC0;
  v398 = xmmword_1B0026FC0;
  v395 = xmmword_1B002EDB0;
  v396 = xmmword_1B0025E90;
  v393 = xmmword_1B002EDD0;
  v394 = xmmword_1B0028150;
  v391 = v199;
  v392 = xmmword_1B0025E90;
  v389 = v199;
  v390 = v199;
  v387 = v199;
  v388 = xmmword_1B0025E90;
  v385 = v199;
  v386 = xmmword_1B0025E50;
  v383 = v199;
  v384 = v199;
  v381 = v199;
  v382 = xmmword_1B0027770;
  v379 = xmmword_1B002EDB0;
  v380 = xmmword_1B0025E90;
  v377 = xmmword_1B002EDD0;
  v378 = xmmword_1B0028150;
  v375 = v199;
  v376 = v199;
  v373 = v199;
  v374 = v199;
  v371 = v199;
  v372 = xmmword_1B0025E50;
  v369 = v199;
  v370 = xmmword_1B0027030;
  v367 = v199;
  v368 = xmmword_1B0029020;
  v365 = v199;
  v366 = xmmword_1B0025E90;
  v363 = v199;
  v364 = xmmword_1B0025E50;
  v361 = v199;
  v362 = xmmword_1B0027030;
  v359 = (__int128)v199;
  v360 = (__int128)v199;
  v357 = (__int128)v199;
  v358 = (__int128)v199;
  v355 = (__int128)v199;
  v356 = (__int128)v199;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_9_13(v200, v201, v202, v203, v204, v205, v206, v207, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v409, &v407, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v405, 0,
    v221,
    v228,
    v235,
    v242,
    v249,
    v256,
    v263,
    v270,
    v277,
    v284,
    v291,
    v298,
    v305,
    v312,
    v319,
    v326,
    &v371,
    &v369,
    &v367,
    &v365,
    &v363,
    &v361,
    &v359,
    v338,
    v344,
    &v357,
    (uint64_t)&v355);
  return v0;
}

uint64_t sub_1AFD81ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_1AFAF46BC(), (v3 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_1AFD81F10@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1AFD81F1C(a1, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry, a2);
}

uint64_t sub_1AFD81F1C@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(a1 + 16) && (v6 = OUTLINED_FUNCTION_8_88(), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v3 + 56);
    v10 = a2(0);
    sub_1AFBDC3BC(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, a3, a2);
    v11 = a3;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = a2(0);
    v11 = a3;
    v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

uint64_t sub_1AFD81FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = OUTLINED_FUNCTION_8_88(), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

uint64_t sub_1AFD81FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = OUTLINED_FUNCTION_8_88(), (v5 & 1) != 0))
    return *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v4);
  else
    return 2;
}

uint64_t sub_1AFD8202C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = OUTLINED_FUNCTION_8_88();
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  OUTLINED_FUNCTION_86_1();
  return v6;
}

void WeatherCondition.isWind.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v4;

  OUTLINED_FUNCTION_5_92();
  OUTLINED_FUNCTION_4_100();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0_112(v1, v4);
  v2 = OUTLINED_FUNCTION_3_97();
  if (v2 != *MEMORY[0x1E0CEEB00] && v2 != *MEMORY[0x1E0CEEAF8])
    OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_9_0();
}

void WeatherCondition.iconHasRain.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v12;

  OUTLINED_FUNCTION_5_92();
  OUTLINED_FUNCTION_4_100();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0_112(v1, v12);
  v2 = OUTLINED_FUNCTION_3_97();
  if (v2 != *MEMORY[0x1E0CEEB18]
    && v2 != *MEMORY[0x1E0CEEA70]
    && v2 != *MEMORY[0x1E0CEEA30]
    && v2 != *MEMORY[0x1E0CEEB70]
    && v2 != *MEMORY[0x1E0CEEAC8]
    && v2 != *MEMORY[0x1E0CEEAE8]
    && v2 != *MEMORY[0x1E0CEEA48]
    && v2 != *MEMORY[0x1E0CEE9F8]
    && v2 != *MEMORY[0x1E0CEEA60]
    && v2 != *MEMORY[0x1E0CEEB90])
  {
    OUTLINED_FUNCTION_2_104();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFD821C8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B0037E80;
  *(_QWORD *)(inited + 32) = 0x6F622E64756F6C63;
  *(_QWORD *)(inited + 40) = 0xEF6C6C69662E746CLL;
  if (qword_1ED1F1CD8 != -1)
    swift_once();
  *(_QWORD *)(inited + 48) = qword_1ED1F1CC8;
  *(_QWORD *)(inited + 56) = 0xD000000000000014;
  *(_QWORD *)(inited + 64) = 0x80000001B0053A10;
  v1 = qword_1ED1F1DA8;
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  v2 = qword_1ED1F1DA0;
  *(_QWORD *)(inited + 72) = qword_1ED1F1DA0;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x80000001B0053A50;
  *(_QWORD *)(inited + 96) = v2;
  *(_QWORD *)(inited + 104) = 0x69662E64756F6C63;
  *(_QWORD *)(inited + 112) = 0xEA00000000006C6CLL;
  v3 = qword_1ED1F1CE8;
  swift_bridgeObjectRetain_n();
  if (v3 != -1)
    swift_once();
  v4 = qword_1ED1F1CE0;
  *(_QWORD *)(inited + 120) = qword_1ED1F1CE0;
  strcpy((char *)(inited + 128), "cloud.fog.fill");
  *(_BYTE *)(inited + 143) = -18;
  *(_QWORD *)(inited + 144) = v4;
  *(_QWORD *)(inited + 152) = 0x61682E64756F6C63;
  *(_QWORD *)(inited + 160) = 0xEF6C6C69662E6C69;
  v5 = qword_1ED1F1DF0;
  swift_bridgeObjectRetain_n();
  if (v5 != -1)
    swift_once();
  v6 = qword_1ED1F1DE0;
  *(_QWORD *)(inited + 168) = qword_1ED1F1DE0;
  *(_QWORD *)(inited + 176) = 0xD000000000000014;
  v7 = qword_1ED1F1DA0;
  *(_QWORD *)(inited + 184) = 0x80000001B0053B10;
  *(_QWORD *)(inited + 192) = v7;
  *(_QWORD *)(inited + 200) = 0xD000000000000014;
  *(_QWORD *)(inited + 208) = 0x80000001B0053AF0;
  v8 = qword_1ED1F1D00;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != -1)
  {
    swift_once();
    v7 = qword_1ED1F1DA0;
    v6 = qword_1ED1F1DE0;
  }
  v9 = qword_1ED1F1CF0;
  *(_QWORD *)(inited + 216) = qword_1ED1F1CF0;
  *(_QWORD *)(inited + 224) = 0x6F6D2E64756F6C63;
  *(_QWORD *)(inited + 232) = 0xEF6C6C69662E6E6FLL;
  *(_QWORD *)(inited + 240) = v9;
  *(_QWORD *)(inited + 248) = 0xD000000000000014;
  *(_QWORD *)(inited + 256) = 0x80000001B0053A70;
  *(_QWORD *)(inited + 264) = v9;
  *(_QWORD *)(inited + 272) = 0x61722E64756F6C63;
  *(_QWORD *)(inited + 280) = 0xEF6C6C69662E6E69;
  *(_QWORD *)(inited + 288) = v7;
  *(_QWORD *)(inited + 296) = 0xD000000000000010;
  *(_QWORD *)(inited + 304) = 0x80000001B0053A30;
  *(_QWORD *)(inited + 312) = v6;
  *(_QWORD *)(inited + 320) = 0x6E732E64756F6C63;
  *(_QWORD *)(inited + 328) = 0xEF6C6C69662E776FLL;
  *(_QWORD *)(inited + 336) = v6;
  strcpy((char *)(inited + 344), "cloud.sun.fill");
  *(_BYTE *)(inited + 359) = -18;
  *(_QWORD *)(inited + 360) = qword_1ED1F1CC8;
  *(_QWORD *)(inited + 368) = 0x6E61636972727568;
  *(_QWORD *)(inited + 376) = 0xE900000000000065;
  v10 = qword_1ED1F1CC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
  {
    swift_once();
    v9 = qword_1ED1F1CF0;
  }
  *(_QWORD *)(inited + 384) = qword_1ED1F1CB0;
  *(_QWORD *)(inited + 392) = 0x6174732E6E6F6F6DLL;
  v11 = qword_1ED1F1CE0;
  *(_QWORD *)(inited + 400) = 0xEF6C6C69662E7372;
  *(_QWORD *)(inited + 408) = v11;
  strcpy((char *)(inited + 416), "moon.haze.fill");
  *(_BYTE *)(inited + 431) = -18;
  *(_QWORD *)(inited + 432) = v9;
  *(_QWORD *)(inited + 440) = 0x6B616C66776F6E73;
  *(_QWORD *)(inited + 448) = 0xE900000000000065;
  v12 = qword_1ED1F1D98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  *(_QWORD *)(inited + 456) = qword_1ED1F1D90;
  strcpy((char *)(inited + 464), "sun.dust.fill");
  v13 = qword_1ED1F1CC8;
  *(_WORD *)(inited + 478) = -4864;
  *(_QWORD *)(inited + 480) = v13;
  strcpy((char *)(inited + 488), "sun.haze.fill");
  *(_WORD *)(inited + 502) = -4864;
  *(_QWORD *)(inited + 504) = v13;
  strcpy((char *)(inited + 512), "sun.max.fill");
  *(_BYTE *)(inited + 525) = 0;
  *(_WORD *)(inited + 526) = -5120;
  v14 = qword_1ED1F1DC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  *(_QWORD *)(inited + 528) = qword_1ED1F1DB0;
  *(_QWORD *)(inited + 536) = 0xD000000000000014;
  *(_QWORD *)(inited + 544) = 0x80000001B0053AD0;
  v15 = qword_1ED1F1D70;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(inited + 552) = qword_1ED1F1D60;
  *(_QWORD *)(inited + 560) = 0xD000000000000015;
  *(_QWORD *)(inited + 568) = 0x80000001B0053AB0;
  v16 = qword_1ED1F1D88;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  *(_QWORD *)(inited + 576) = qword_1ED1F1D78;
  *(_QWORD *)(inited + 584) = 0x6F64616E726F74;
  *(_QWORD *)(inited + 592) = 0xE700000000000000;
  v17 = qword_1ED1F1CB0;
  *(_QWORD *)(inited + 600) = qword_1ED1F1CB0;
  strcpy((char *)(inited + 608), "tropicalstorm");
  *(_WORD *)(inited + 622) = -4864;
  *(_QWORD *)(inited + 624) = v17;
  *(_QWORD *)(inited + 632) = 0x6F6E732E646E6977;
  *(_QWORD *)(inited + 640) = 0xE900000000000077;
  v18 = qword_1ED1F1E20;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(inited + 648) = qword_1ED1F1E10;
  *(_QWORD *)(inited + 656) = 1684957559;
  *(_QWORD *)(inited + 664) = 0xE400000000000000;
  v19 = qword_1ED1F1DD8;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  *(_QWORD *)(inited + 672) = qword_1ED1F1DC8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E38);
  result = sub_1B0008488();
  qword_1ED1F1C90 = result;
  return result;
}

uint64_t WeatherConditionIcon.palette.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1AFD8288C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_86_1();
  return a1;
}

_QWORD *assignWithCopy for WeatherConditionIcon(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WeatherConditionIcon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNumericalGaugeChart.Data(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNumericalGaugeChart.Data(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

id sub_1AFD829EC(uint64_t a1)
{
  return sub_1AFD82A34(a1, &qword_1ED1F1D40, (void **)&qword_1ED1F1D30, &qword_1ED1F1CE0);
}

id sub_1AFD82A10(uint64_t a1)
{
  return sub_1AFD82A34(a1, &qword_1ED1F1D10, (void **)&qword_1ED1F1D08, &qword_1ED1F1CB0);
}

id sub_1AFD82A34(uint64_t a1, _QWORD *a2, void **a3, uint64_t *a4)
{
  uint64_t v7;
  void *v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v7 = OUTLINED_FUNCTION_20();
  *(_OWORD *)(v7 + 16) = xmmword_1B0037E90;
  if (*a2 != -1)
    swift_once();
  v9 = *a3;
  *(_QWORD *)(v7 + 32) = *a3;
  OUTLINED_FUNCTION_9_87();
  *a4 = v7;
  return v9;
}

uint64_t sub_1AFD82ACC(uint64_t a1)
{
  return sub_1AFD82C04(a1, (SEL *)&selRef_systemCyanColor, &qword_1ED1F1DA0);
}

uint64_t sub_1AFD82AE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0037EA0;
  if (qword_1ED1F1D40 != -1)
    swift_once();
  v1 = (void *)qword_1ED1F1D30;
  *(_QWORD *)(v0 + 32) = qword_1ED1F1D30;
  v2 = (void *)objc_opt_self();
  v3 = v1;
  *(_QWORD *)(v0 + 40) = objc_msgSend(v2, sel_systemBlueColor);
  *(_QWORD *)(v0 + 48) = objc_msgSend(v2, sel_systemCyanColor);
  result = sub_1B00087A0();
  qword_1ED1F1DE0 = v0;
  return result;
}

uint64_t sub_1AFD82BC8(uint64_t a1)
{
  return sub_1AFD82FC0(a1, (SEL *)&selRef_systemBlueColor, &qword_1ED1F1D90);
}

uint64_t sub_1AFD82BDC(uint64_t a1)
{
  return sub_1AFD82FC0(a1, (SEL *)&selRef_systemYellowColor, &qword_1ED1F1DB0);
}

uint64_t sub_1AFD82BF0(uint64_t a1)
{
  return sub_1AFD82C04(a1, (SEL *)&selRef_systemYellowColor, &qword_1ED1F1CC8);
}

uint64_t sub_1AFD82C04(uint64_t a1, SEL *a2, uint64_t *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v5 = OUTLINED_FUNCTION_20();
  *(_OWORD *)(v5 + 16) = xmmword_1B0037EB0;
  if (qword_1ED1F1D40 != -1)
    swift_once();
  v6 = (void *)qword_1ED1F1D30;
  *(_QWORD *)(v5 + 32) = qword_1ED1F1D30;
  v7 = (void *)objc_opt_self();
  v8 = v6;
  *(_QWORD *)(v5 + 40) = objc_msgSend(v7, *a2);
  result = OUTLINED_FUNCTION_9_87();
  *a3 = v5;
  return result;
}

uint64_t sub_1AFD82CD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0037EA0;
  if (qword_1ED1F1D28 != -1)
    swift_once();
  v1 = (void *)qword_1ED1F1D18;
  *(_QWORD *)(v0 + 32) = qword_1ED1F1D18;
  v2 = qword_1ED1F1D40;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_1ED1F1D30;
  *(_QWORD *)(v0 + 40) = qword_1ED1F1D30;
  v5 = (void *)objc_opt_self();
  v6 = v4;
  *(_QWORD *)(v0 + 48) = objc_msgSend(v5, sel_systemCyanColor);
  result = sub_1B00087A0();
  qword_1ED1F1CF0 = v0;
  return result;
}

id sub_1AFD82DD4()
{
  uint64_t v0;
  void *v1;
  void *v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0037EA0;
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = objc_msgSend(v1, sel_systemCyanColor);
  *(_QWORD *)(v0 + 40) = objc_msgSend(v1, sel_systemBlueColor);
  if (qword_1ED1F1D58 != -1)
    swift_once();
  v3 = (void *)qword_1ED1F1D48;
  *(_QWORD *)(v0 + 48) = qword_1ED1F1D48;
  sub_1B00087A0();
  qword_1ED1F1D78 = v0;
  return v3;
}

id sub_1AFD82EAC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0037EA0;
  if (qword_1ED1F1E08 != -1)
    swift_once();
  v1 = (void *)qword_1ED1F1DF8;
  *(_QWORD *)(v0 + 32) = qword_1ED1F1DF8;
  v2 = (void *)objc_opt_self();
  v3 = v1;
  *(_QWORD *)(v0 + 40) = objc_msgSend(v2, sel_systemYellowColor);
  if (qword_1ED1F1D58 != -1)
    swift_once();
  v5 = (void *)qword_1ED1F1D48;
  *(_QWORD *)(v0 + 48) = qword_1ED1F1D48;
  sub_1B00087A0();
  qword_1ED1F1D60 = v0;
  return v5;
}

uint64_t sub_1AFD82FAC(uint64_t a1)
{
  return sub_1AFD82FC0(a1, (SEL *)&selRef_systemCyanColor, &qword_1ED1F1DC8);
}

uint64_t sub_1AFD82FC0(uint64_t a1, SEL *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v5 = OUTLINED_FUNCTION_20();
  *(_OWORD *)(v5 + 16) = xmmword_1B0037E90;
  *(_QWORD *)(v5 + 32) = objc_msgSend((id)objc_opt_self(), *a2);
  result = OUTLINED_FUNCTION_9_87();
  *a3 = v5;
  return result;
}

uint64_t sub_1AFD83044()
{
  uint64_t v0;
  void *v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1F4BD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0037EB0;
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 32) = objc_msgSend(v1, sel_systemBlueColor);
  *(_QWORD *)(v0 + 40) = objc_msgSend(v1, sel_systemCyanColor);
  result = sub_1B00087A0();
  qword_1ED1F1E10 = v0;
  return result;
}

id sub_1AFD830E8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.866666667, 0.0901960784, 0.0745098039, 1.0);
  qword_1ED1F1DF8 = (uint64_t)result;
  return result;
}

id sub_1AFD83134()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  qword_1ED1F1D08 = (uint64_t)result;
  return result;
}

id sub_1AFD8317C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.682352941, 0.682352941, 0.698039216, 1.0);
  qword_1ED1F1D18 = (uint64_t)result;
  return result;
}

id sub_1AFD831C4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.819607843, 0.819607843, 0.839215686, 1.0);
  qword_1ED1F1D30 = (uint64_t)result;
  return result;
}

id sub_1AFD8320C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.898039216, 0.898039216, 0.917647059, 1.0);
  qword_1ED1F1D48 = (uint64_t)result;
  return result;
}

void Date.formattedTime(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_21_8();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9_88();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41_0();
  if (qword_1ED1F1070 != -1)
    swift_once();
  OUTLINED_FUNCTION_17_79();
  sub_1B0005A10();
  OUTLINED_FUNCTION_70_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5 = OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AFAF93A0();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_87();
    OUTLINED_FUNCTION_5_93();
    OUTLINED_FUNCTION_27_52();
  }
  OUTLINED_FUNCTION_2_3();
}

void Date.formattedHoursForText(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  id v8;
  char v9;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_21_8();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_9_88();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41_0();
  static Date.uses24HourTime()();
  if ((v6 & 1) != 0)
  {
    if (qword_1ED1F1070 != -1)
      swift_once();
    v7 = &qword_1ED1FED78;
  }
  else
  {
    if (qword_1ED1F4068 != -1)
      swift_once();
    v7 = &qword_1ED1FEDB0;
  }
  v8 = (id)*v7;
  swift_retain();
  OUTLINED_FUNCTION_17_79();
  sub_1B0005A10();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v4);
  v9 = OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AFAF93A0();
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_87();
    OUTLINED_FUNCTION_5_93();
    OUTLINED_FUNCTION_27_52();
  }
  swift_release();

  OUTLINED_FUNCTION_2_3();
}

void static Date.uses24HourTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_109_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41_0();
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1B0008554();
  OUTLINED_FUNCTION_17_79();
  v6 = (void *)sub_1B0005950();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  v7 = objc_msgSend(v4, sel_dateFormatFromTemplate_options_locale_, v5, 0, v6);

  if (v7)
  {
    sub_1B0008584();

    sub_1AFAF9424();
    sub_1B0008C2C();
    OUTLINED_FUNCTION_15();
  }
  OUTLINED_FUNCTION_8_0();
}

void Date.ampmSymbol(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_22_0();
  v76 = v0;
  v77 = v5;
  v73 = sub_1B000598C();
  v65 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33();
  v63 = v7;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4148);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  v72 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41B0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_38();
  v64 = v11;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v12);
  v70 = (char *)&v63 - v13;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v14);
  v71 = (char *)&v63 - v15;
  v16 = sub_1B000592C();
  v74 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_26_15(v18, v63);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41A8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41B8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_38();
  v75 = v21;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v63 - v26;
  v28 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_1_96();
  v30 = sub_1B0005A1C();
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_38();
  v67 = v32;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v63 - v34;
  OUTLINED_FUNCTION_17_79();
  sub_1B0005A10();
  v36 = *(void (**)(char *, uint64_t))(v2 + 8);
  v68 = v30;
  v36(v35, v30);
  sub_1B00059F8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v28);
  sub_1B0005920();
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v16);
  v37 = v1 + *(int *)(v78 + 48);
  sub_1AFD85128((uint64_t)v27, v1, &qword_1ED1F41B8);
  sub_1AFD85128((uint64_t)v24, v37, &qword_1ED1F41B8);
  OUTLINED_FUNCTION_4_0(v1, 1, v16);
  if (v39)
  {
    OUTLINED_FUNCTION_41_13((uint64_t)v24);
    OUTLINED_FUNCTION_41_13((uint64_t)v27);
    OUTLINED_FUNCTION_4_0(v37, 1, v16);
    if (v39)
    {
      sub_1AFACB308(v1, &qword_1ED1F41B8);
      goto LABEL_11;
    }
LABEL_9:
    sub_1AFACB308(v1, &qword_1ED1F41A8);
    goto LABEL_24;
  }
  v38 = v75;
  sub_1AFD85128(v1, v75, &qword_1ED1F41B8);
  OUTLINED_FUNCTION_4_0(v37, 1, v16);
  if (v39)
  {
    OUTLINED_FUNCTION_25_2((uint64_t)v24);
    OUTLINED_FUNCTION_25_2((uint64_t)v27);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v38, v16);
    goto LABEL_9;
  }
  v40 = v36;
  v41 = v74;
  v42 = v66;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v66, v37, v16);
  sub_1AFADA43C(&qword_1ED1F41A0, (void (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
  v43 = sub_1B0008530();
  v44 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v44(v42, v16);
  OUTLINED_FUNCTION_41_13((uint64_t)v24);
  OUTLINED_FUNCTION_41_13((uint64_t)v27);
  v44(v38, v16);
  v36 = v40;
  OUTLINED_FUNCTION_41_13(v1);
  if ((v43 & 1) == 0)
    goto LABEL_24;
LABEL_11:
  v45 = v67;
  OUTLINED_FUNCTION_17_79();
  v46 = (uint64_t)v71;
  sub_1B0005998();
  v36(v45, v68);
  v47 = (uint64_t)v70;
  sub_1B0005980();
  v48 = v73;
  __swift_storeEnumTagSinglePayload(v47, 0, 1, v73);
  v49 = v72;
  v50 = v72 + *(int *)(v69 + 48);
  sub_1AFD85128(v46, v72, &qword_1ED1F41B0);
  sub_1AFD85128(v47, v50, &qword_1ED1F41B0);
  OUTLINED_FUNCTION_4_0(v49, 1, v48);
  if (v39)
  {
    OUTLINED_FUNCTION_25_2(v47);
    OUTLINED_FUNCTION_25_2(v46);
    v51 = OUTLINED_FUNCTION_4_0(v50, 1, v48);
    if (v39)
    {
      OUTLINED_FUNCTION_66_0(v51, &qword_1ED1F41B0);
LABEL_21:
      if (qword_1EEE704B8 != -1)
        swift_once();
      v58 = &qword_1EEE78D18;
      goto LABEL_27;
    }
    goto LABEL_19;
  }
  v52 = v64;
  sub_1AFD85128(v49, v64, &qword_1ED1F41B0);
  OUTLINED_FUNCTION_4_0(v50, 1, v48);
  if (v53)
  {
    sub_1AFACB308(v47, &qword_1ED1F41B0);
    sub_1AFACB308(v46, &qword_1ED1F41B0);
    v51 = OUTLINED_FUNCTION_35_0(v52, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
LABEL_19:
    OUTLINED_FUNCTION_66_0(v51, &qword_1ED1F4148);
    goto LABEL_24;
  }
  v54 = v65;
  v55 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v63, v50, v48);
  sub_1AFADA43C(qword_1EEE72BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  v56 = sub_1B0008530();
  v57 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v57(v55, v48);
  OUTLINED_FUNCTION_25_2(v47);
  OUTLINED_FUNCTION_25_2(v46);
  v57(v52, v48);
  OUTLINED_FUNCTION_25_2(v49);
  if ((v56 & 1) != 0)
    goto LABEL_21;
LABEL_24:
  if (qword_1ED1EFD20 != -1)
    swift_once();
  v58 = &qword_1ED1EC840;
LABEL_27:
  v59 = (id)*v58;
  v60 = (void *)sub_1B0005B48();
  OUTLINED_FUNCTION_68_3((uint64_t)v60, sel_setTimeZone_);

  v61 = (void *)sub_1B0005848();
  v62 = objc_msgSend(v59, sel_stringFromDate_, v61);

  sub_1B0008584();
  OUTLINED_FUNCTION_2_3();
}

uint64_t Date.formattedShortMonth(timeZone:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.Weekday.init(rawValue:)(unint64_t a1)
{
  if (a1 >= 8)
    return 7;
  else
    return (0x605040302010007uLL >> (8 * a1));
}

uint64_t Date.Weekday.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

void sub_1AFD83CC0()
{
  sub_1AFD77520();
}

void sub_1AFD83CC8()
{
  sub_1AFDF073C();
}

void sub_1AFD83CD0()
{
  sub_1AFD776DC();
}

uint64_t sub_1AFD83CD8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Date.Weekday.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AFD83D00@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = Date.Weekday.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void sub_1AFD83D28()
{
  sub_1AFACF36C();
}

void sub_1AFD83D48()
{
  sub_1AFACF36C();
}

void sub_1AFD83D74()
{
  sub_1AFACF36C();
}

void sub_1AFD83D94()
{
  sub_1AFACF36C();
}

void sub_1AFD83DB0()
{
  sub_1AFACF36C();
}

void sub_1AFD83DD0()
{
  sub_1AFACF36C();
}

void sub_1AFD83DE8()
{
  sub_1AFACF36C();
}

void sub_1AFD83E08()
{
  sub_1AFACF36C();
}

void sub_1AFD83E34(uint64_t a1)
{
  sub_1AFAD1988(a1, (void (*)(void))sub_1AFD83E4C, qword_1ED1FEC90, &qword_1ED1FEC90[1]);
}

id sub_1AFD83E4C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v8;

  v2 = sub_1B0005A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B000595C();
  v6 = (void *)sub_1B0005950();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, sel_setLocale_, v6);

  objc_msgSend(a1, sel_setTimeStyle_, 1);
  return objc_msgSend(a1, sel_setDateStyle_, 0);
}

uint64_t Date.accessibilityFormattedTime(timeZone:)()
{
  return sub_1AFD843FC();
}

void Date.formattedHourRange(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_22_0();
  v54 = v0;
  v55 = v4;
  v49 = sub_1B0005140();
  v47 = *(_QWORD *)(v49 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_38();
  v48 = v6;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v42 - v8;
  v53 = OUTLINED_FUNCTION_34_34();
  v45 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_33();
  v52 = v10;
  v51 = OUTLINED_FUNCTION_24();
  v44 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_26_15(v12, v42);
  v13 = OUTLINED_FUNCTION_35_21();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_96();
  v15 = sub_1B0005B18();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_10_74();
  v18 = sub_1B00058D8();
  OUTLINED_FUNCTION_21_8();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005A34();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v2, *MEMORY[0x1E0CB1140], v13);
  sub_1B0005AC4();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  OUTLINED_FUNCTION_70_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v50 = v18;
  OUTLINED_FUNCTION_4_0(v1, 1, v18);
  if (v22)
  {
    sub_1AFACB308(v1, &qword_1ED1F4BA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v21, v1, v50);
    if (qword_1ED1F4068 != -1)
      swift_once();
    v23 = OUTLINED_FUNCTION_75_4();
    v25 = v24;
    OUTLINED_FUNCTION_17_79();
    OUTLINED_FUNCTION_59_2();
    OUTLINED_FUNCTION_64_1();
    v26 = OUTLINED_FUNCTION_71_5();
    OUTLINED_FUNCTION_67_2();
    v27 = MEMORY[0x1E0DEA968];
    v43 = v3;
    if ((v26 & 1) != 0)
    {
      v56 = v23;
      v57 = v25;
      OUTLINED_FUNCTION_26_48();
      OUTLINED_FUNCTION_40_16();
      v42 = v27;
      v43 = v28;
      v54 = sub_1B0008C08();
      v30 = v29;
      OUTLINED_FUNCTION_15();
      v25 = v30;
    }
    else
    {
      v54 = v23;
    }
    v31 = v21;
    v32 = OUTLINED_FUNCTION_75_4();
    v34 = v33;
    OUTLINED_FUNCTION_17_79();
    OUTLINED_FUNCTION_59_2();
    OUTLINED_FUNCTION_64_1();
    v35 = OUTLINED_FUNCTION_71_5();
    OUTLINED_FUNCTION_67_2();
    if ((v35 & 1) != 0)
    {
      v56 = v32;
      v57 = v34;
      OUTLINED_FUNCTION_26_48();
      OUTLINED_FUNCTION_40_16();
      v43 = v36;
      v42 = MEMORY[0x1E0DEA968];
      OUTLINED_FUNCTION_6_86();
      swift_bridgeObjectRelease();
    }
    v56 = v54;
    v57 = v25;
    v37 = (uint64_t)v46;
    sub_1B0005110();
    v38 = v48;
    sub_1B0005134();
    OUTLINED_FUNCTION_48_6(v37);
    sub_1AFAF9424();
    v39 = sub_1B0008BF0();
    v41 = v40;
    OUTLINED_FUNCTION_48_6(v38);
    OUTLINED_FUNCTION_15();
    v56 = v39;
    v57 = v41;
    sub_1B0008644();
    sub_1B0008644();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v50);
  }
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_2_3();
}

uint64_t Date.fullMonth(timeZone:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.fullMonthAndYear(in:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.dayOfMonth(in:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.standaloneNarrowDayOfWeek(in:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.fullDayOfTheWeekFullMonthAndDayOfTheMonth(in:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.shortTime(in:)()
{
  return sub_1AFD843FC();
}

uint64_t sub_1AFD843FC()
{
  char v0;

  OUTLINED_FUNCTION_37_27();
  if (!v0)
    OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_56_2();
  return OUTLINED_FUNCTION_14_83();
}

void Date.weekday(in:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_21_8();
  MEMORY[0x1E0C80A78](v2);
  sub_1B0005A34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
  v3 = OUTLINED_FUNCTION_35_21();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B00275C0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104))(v6 + v5, *MEMORY[0x1E0CB1198], v3);
  sub_1AFAFAA98();
  sub_1B0005A64();
  swift_bridgeObjectRelease();
  v7 = sub_1B0005284();
  if ((v8 & 1) != 0 || Date.Weekday.init(rawValue:)(v7) == 7)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    OUTLINED_FUNCTION_2_3();
  }
}

void Date.onHourExact(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_35_21();
  OUTLINED_FUNCTION_109_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_34();
  sub_1B0005A34();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, *MEMORY[0x1E0CB1178], v3);
  sub_1B0005B0C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v3);
  OUTLINED_FUNCTION_35_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_8_0();
}

void Date.formattedMonthDayTime(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_0();
  v17[1] = v2;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_10_47();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41_0();
  if (qword_1ED1EC370 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F46B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B00275A0;
  *(_QWORD *)(v8 + 32) = OUTLINED_FUNCTION_29_55();
  *(_QWORD *)(v8 + 40) = v9;
  if (qword_1ED1F1070 != -1)
    swift_once();
  OUTLINED_FUNCTION_17_79();
  OUTLINED_FUNCTION_59_2();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v6);
  v10 = OUTLINED_FUNCTION_71_5();
  OUTLINED_FUNCTION_35_0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v11 = OUTLINED_FUNCTION_29_55();
  v13 = v11;
  v14 = v12;
  if ((v10 & 1) != 0)
  {
    v18 = v11;
    v19 = v12;
    OUTLINED_FUNCTION_10_87();
    v13 = OUTLINED_FUNCTION_5_93();
    v16 = v15;
    OUTLINED_FUNCTION_15();
    v14 = v16;
  }
  *(_QWORD *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v14;
  v18 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFD08);
  sub_1AFB23DC0(&qword_1ED1EFD10, &qword_1ED1EFD08);
  sub_1B0008500();
  OUTLINED_FUNCTION_27_52();
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_2_3();
}

uint64_t Date.formattedMonthDayYear(timeZone:)()
{
  return sub_1AFD843FC();
}

void Date.formattedYear(timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_22_0();
  v34 = v3;
  v4 = sub_1B00057A0();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33();
  v35 = v6;
  sub_1B00056A4();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v33[2] = v8;
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_33();
  v33[1] = v10;
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_10_74();
  v12 = sub_1B0005B84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_27_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1158);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1160);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1B00057AC();
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v33 - v23;
  v25 = sub_1B0005764();
  OUTLINED_FUNCTION_108((uint64_t)v17, v26, v27, v25);
  v28 = sub_1B0005758();
  OUTLINED_FUNCTION_108(v0, v29, v30, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v2, v34, v12);
  sub_1B000595C();
  sub_1B0005AA0();
  sub_1B0005698();
  sub_1B000577C();
  v31 = v35;
  sub_1B0005794();
  sub_1B0005788();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v31, v37);
  v32 = *(void (**)(char *, uint64_t))(v1 + 8);
  v32(v21, v18);
  sub_1AFADA43C(&qword_1EEE73AD8, (void (*)(uint64_t))MEMORY[0x1E0CB0568]);
  sub_1B00058C0();
  v32(v24, v18);
  OUTLINED_FUNCTION_2_3();
}

uint64_t Date.formattedMonthAndDay(timeZone:)()
{
  return sub_1AFD843FC();
}

uint64_t Date.formattedShortMonthAndDay(timeZone:)()
{
  return sub_1AFD843FC();
}

void static Date.formattedShortMonthAndDayRange(date1:date2:timeZone:)()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3590]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 1);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  sub_1AFD85164(1682787661, 0xE400000000000000, v0);
  v1 = (void *)sub_1B0005B48();
  OUTLINED_FUNCTION_68_3((uint64_t)v1, sel_setTimeZone_);

  v2 = (void *)sub_1B0005848();
  v3 = (void *)sub_1B0005848();
  v4 = objc_msgSend(v0, sel_stringFromDate_toDate_, v2, v3);

  sub_1B0008584();
  OUTLINED_FUNCTION_9_0();
}

void Date.isSameMonth(as:timeZone:)()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_22_0();
  v45 = v2;
  v46 = v0;
  v48 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1C20);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_96();
  v38 = sub_1B00052A8();
  v36 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_38();
  v47 = v6;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  v37 = OUTLINED_FUNCTION_55();
  v35 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27_1();
  sub_1B0005A34();
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
  v11 = *(_QWORD *)(OUTLINED_FUNCTION_35_21() - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v43 = v13 + 2 * v12;
  v41 = v12;
  v14 = swift_allocObject();
  v42 = xmmword_1B00275A0;
  *(_OWORD *)(v14 + 16) = xmmword_1B00275A0;
  v15 = v14 + v13;
  v40 = *MEMORY[0x1E0CB1158];
  OUTLINED_FUNCTION_50_4(v14 + v13, v40);
  v39 = *MEMORY[0x1E0CB1160];
  OUTLINED_FUNCTION_50_4(v15 + v12, v39);
  sub_1AFAFAA98();
  sub_1B0005A64();
  swift_bridgeObjectRelease();
  v16 = sub_1B0005B84();
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17 = v45;
  v46(v1, v45, v16);
  v18 = OUTLINED_FUNCTION_65_2();
  __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
  sub_1B000529C();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v42;
  v23 = v22 + v13;
  OUTLINED_FUNCTION_50_4(v22 + v13, v40);
  OUTLINED_FUNCTION_50_4(v23 + v41, v39);
  sub_1AFAFAA98();
  v24 = v47;
  sub_1B0005A64();
  OUTLINED_FUNCTION_20_0();
  v46(v1, v17, v16);
  v25 = OUTLINED_FUNCTION_65_2();
  v26 = v24;
  __swift_storeEnumTagSinglePayload(v25, v27, v28, v29);
  sub_1B000529C();
  v30 = sub_1B0005248();
  LOBYTE(v24) = v31;
  v32 = sub_1B0005248();
  if ((v24 & 1) != 0 || v30 == v32)
  {
    sub_1B0005254();
    sub_1B0005254();
    OUTLINED_FUNCTION_48_6(v26);
    OUTLINED_FUNCTION_48_6((uint64_t)v9);
    OUTLINED_FUNCTION_42_14();
  }
  else
  {
    v33 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v34 = v38;
    v33(v26, v38);
    v33((uint64_t)v9, v34);
    OUTLINED_FUNCTION_42_14();
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t Date.isSameDay(as:timeZone:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_22_55();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_18_64();
  OUTLINED_FUNCTION_151();
  v2 = sub_1B0005AD0();
  OUTLINED_FUNCTION_13_32(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  return v2 & 1;
}

BOOL Date.hourAndMinuteIsLater(than:calendar:)()
{
  uint64_t v0;

  v0 = Date.secondsSinceMidnight(calendar:)();
  return Date.secondsSinceMidnight(calendar:)() < v0;
}

uint64_t Date.secondsSinceMidnight(calendar:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_23_13();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_35_21() - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B002B5A0;
  v5 = v4 + v3;
  OUTLINED_FUNCTION_58_3(v5, *MEMORY[0x1E0CB1140]);
  OUTLINED_FUNCTION_58_3(v5 + v2, *MEMORY[0x1E0CB1178]);
  OUTLINED_FUNCTION_58_3(v5 + 2 * v2, *MEMORY[0x1E0CB1188]);
  sub_1AFAFAA98();
  sub_1B0005A64();
  swift_bridgeObjectRelease();
  result = sub_1B0005230();
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = result;
  if ((unsigned __int128)(v8 * (__int128)60) >> 64 != (60 * v8) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  v9 = 3600 * v8;
  if ((unsigned __int128)(60 * v8 * (__int128)60) >> 64 != (3600 * v8) >> 63)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = sub_1B0005260();
  if ((v10 & 1) != 0)
    v11 = 0;
  else
    v11 = result;
  v12 = 60 * v11;
  if ((unsigned __int128)(v11 * (__int128)60) >> 64 != (60 * v11) >> 63)
    goto LABEL_18;
  v13 = sub_1B0005278();
  v15 = v14;
  result = OUTLINED_FUNCTION_52_0();
  v16 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  if ((v15 & 1) != 0)
    v17 = 0;
  else
    v17 = v13;
  result = v16 + v17;
  if (__OFADD__(v16, v17))
    goto LABEL_20;
  return result;
}

void sub_1AFD85128(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  v3 = OUTLINED_FUNCTION_118();
  v4(v3);
  OUTLINED_FUNCTION_0();
}

void sub_1AFD85164(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B0008554();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateTemplate_, v4);

}

unint64_t sub_1AFD851B8()
{
  unint64_t result;

  result = qword_1EEE73AE0;
  if (!qword_1EEE73AE0)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for Date.Weekday, &type metadata for Date.Weekday);
    atomic_store(result, (unint64_t *)&qword_1EEE73AE0);
  }
  return result;
}

uint64_t _s7WeekdayOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7WeekdayOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AFD852C8 + 4 * byte_1B0037F4D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AFD852FC + 4 * asc_1B0037F48[v4]))();
}

uint64_t sub_1AFD852FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD85304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFD8530CLL);
  return result;
}

uint64_t sub_1AFD85318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFD85320);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AFD85324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD8532C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Date.Weekday()
{
  return &type metadata for Date.Weekday;
}

void sub_1AFD85348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0760);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for WeatherProviderAttribution(0);
  v48 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v49 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v55 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v54 = (uint64_t)&v46 - v15;
  v16 = *(_QWORD *)(a1 + 56);
  v51 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v57 = a2;
  v58 = a1;
  v52 = (unint64_t)(v17 + 63) >> 6;
  v53 = (_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  v20 = 0;
  v50 = MEMORY[0x1E0DEE9D8];
  v56 = v11;
  while (v19)
  {
    v21 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v59 = v20;
    v22 = v21 | (v20 << 6);
LABEL_22:
    v27 = v54;
    sub_1AFAF2DFC(*(_QWORD *)(v58 + 48) + *(_QWORD *)(v55 + 72) * v22, v54, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    sub_1AFAF2984(v27, (uint64_t)v13, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v28 = (char *)v13 + *(int *)(v11 + 20);
    v30 = *(_QWORD *)(v57 + 56);
    v29 = *(_QWORD *)(v57 + 64);
    __swift_project_boxed_opaque_existential_1(v53, v30);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v30, v29);
    if (v31)
    {
      v32 = v31;
      v34 = *v13;
      v33 = v13[1];
      v35 = (char *)v13 + *(int *)(v11 + 24);
      v36 = v7;
      v37 = (char *)v6 + *(int *)(v7 + 24);
      v38 = sub_1B0005710();
      v39 = v37;
      v7 = v36;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v39, v35, v38);
      *v6 = v34;
      v6[1] = v33;
      v6[2] = v32;
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v36);
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
    }
    sub_1AFAE2D74((uint64_t)v13, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {
      sub_1AFACE0DC((uint64_t)v6, &qword_1ED1F0760);
      v11 = v56;
      v20 = v59;
    }
    else
    {
      v40 = v47;
      sub_1AFAF2984((uint64_t)v6, v47, type metadata accessor for WeatherProviderAttribution);
      sub_1AFAF2984(v40, v49, type metadata accessor for WeatherProviderAttribution);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v11 = v56;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v50 = sub_1AFD0B53C(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
      v43 = *(_QWORD *)(v50 + 16);
      v42 = *(_QWORD *)(v50 + 24);
      if (v43 >= v42 >> 1)
        v50 = sub_1AFD0B53C(v42 > 1, v43 + 1, 1, v50);
      v44 = v49;
      v45 = v50;
      *(_QWORD *)(v50 + 16) = v43 + 1;
      sub_1AFAF2984(v44, v45+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v43, type metadata accessor for WeatherProviderAttribution);
      v20 = v59;
    }
  }
  v23 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v23 >= v52)
    goto LABEL_32;
  v24 = *(_QWORD *)(v51 + 8 * v23);
  v25 = v20 + 1;
  if (v24)
    goto LABEL_21;
  v25 = v20 + 2;
  if (v20 + 2 >= v52)
    goto LABEL_32;
  v24 = *(_QWORD *)(v51 + 8 * v25);
  if (v24)
    goto LABEL_21;
  v25 = v20 + 3;
  if (v20 + 3 >= v52)
    goto LABEL_32;
  v24 = *(_QWORD *)(v51 + 8 * v25);
  if (v24)
    goto LABEL_21;
  v25 = v20 + 4;
  if (v20 + 4 >= v52)
    goto LABEL_32;
  v24 = *(_QWORD *)(v51 + 8 * v25);
  if (v24)
  {
LABEL_21:
    v19 = (v24 - 1) & v24;
    v59 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
    goto LABEL_22;
  }
  v26 = v20 + 5;
  if (v20 + 5 >= v52)
  {
LABEL_32:
    swift_release();
    swift_release();
    return;
  }
  v24 = *(_QWORD *)(v51 + 8 * v26);
  if (v24)
  {
    v25 = v20 + 5;
    goto LABEL_21;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v52)
      goto LABEL_32;
    v24 = *(_QWORD *)(v51 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
}

void sub_1AFD857FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  v10 = *(_QWORD *)(a1 + 56);
  v23 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v24 = (unint64_t)(v11 + 63) >> 6;
  v25 = a2 + 4;
  v28 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    sub_1AFAF2DFC(*(_QWORD *)(v28 + 48) + *(_QWORD *)(v26 + 72) * i, (uint64_t)v9, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    sub_1AFAF2984((uint64_t)v9, (uint64_t)v6, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v20 = a2[7];
    v21 = a2[8];
    __swift_project_boxed_opaque_existential_1(v25, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(&v6[*(int *)(v27 + 20)], v20, v21);
    sub_1AFAE2D74((uint64_t)v6, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v24)
      goto LABEL_23;
    v18 = *(_QWORD *)(v23 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v24)
        goto LABEL_23;
      v18 = *(_QWORD *)(v23 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v24)
          goto LABEL_23;
        v18 = *(_QWORD *)(v23 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v24)
            goto LABEL_23;
          v18 = *(_QWORD *)(v23 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 >= v24)
  {
LABEL_23:
    swift_release();
    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v24)
      goto LABEL_23;
    v18 = *(_QWORD *)(v23 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1AFD85A70(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  _QWORD v21[5];

  v4 = v3;
  sub_1AFD8DA7C(a1, v21);
  v6 = v21[0];
  v7 = v21[1];
  v8 = v21[3];
  v9 = v21[4];
  v10 = (unint64_t)(v21[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_3;
LABEL_2:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v13 = v12 | (v8 << 6);
  while (1)
  {
    v17 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_1AFD8B95C(a3, v18, v19);
    if (v4)
    {

      v4 = 0;
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_2;
LABEL_3:
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v14 >= v10)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    if (!v15)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v10)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_12;
      v16 = v8 + 3;
      if (v8 + 3 >= v10)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
        goto LABEL_12;
      v16 = v8 + 4;
      if (v8 + 4 >= v10)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v16);
      if (v15)
      {
LABEL_12:
        v14 = v16;
      }
      else
      {
        v14 = v8 + 5;
        if (v8 + 5 >= v10)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v14);
        if (!v15)
        {
          v20 = v8 + 6;
          while (v20 < v10)
          {
            v15 = *(_QWORD *)(v7 + 8 * v20++);
            if (v15)
            {
              v14 = v20 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          return swift_release();
        }
      }
    }
LABEL_13:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v8 = v14;
  }
  __break(1u);
  return result;
}

uint64_t WeatherProviderAttribution.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id WeatherProviderAttribution.logo.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t WeatherProviderAttribution.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WeatherProviderAttribution(0) + 24);
  v4 = OUTLINED_FUNCTION_89();
  return OUTLINED_FUNCTION_0_0(a1, v3, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 16));
}

uint64_t type metadata accessor for WeatherProviderAttribution(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F0750);
}

uint64_t WeatherProviderAttribution.init(name:logo:source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (uint64_t)a5 + *(int *)(type metadata accessor for WeatherProviderAttribution(0) + 24);
  v7 = OUTLINED_FUNCTION_89();
  return OUTLINED_FUNCTION_0_0(v6, a4, v7, *(uint64_t (**)(void))(*(_QWORD *)(v7 - 8) + 32));
}

uint64_t WeatherProviderAttribution.identifier.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1B0008644();
  type metadata accessor for WeatherProviderAttribution(0);
  sub_1B00056D4();
  sub_1AFAF9424();
  sub_1B0008C08();
  OUTLINED_FUNCTION_20_0();
  sub_1B0008644();
  OUTLINED_FUNCTION_40();
  return v2;
}

void static WeatherProviderAttribution.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    sub_1AFB7EA60();
    if ((sub_1B0008B54() & 1) != 0)
    {
      type metadata accessor for WeatherProviderAttribution(0);
      OUTLINED_FUNCTION_67_3();
    }
  }
  OUTLINED_FUNCTION_9_0();
}

void WeatherProviderAttribution.hash(into:)()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_86_4();
  OUTLINED_FUNCTION_40();
  v1 = *(id *)(v0 + 16);
  sub_1B0008B60();

  type metadata accessor for WeatherProviderAttribution(0);
  OUTLINED_FUNCTION_89();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B00084D0();
  OUTLINED_FUNCTION_9_0();
}

uint64_t WeatherProviderAttribution.hashValue.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_23_7();
  OUTLINED_FUNCTION_94_0();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_1B0008B60();

  type metadata accessor for WeatherProviderAttribution(0);
  OUTLINED_FUNCTION_89();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B00084D0();
  return OUTLINED_FUNCTION_17_1();
}

void sub_1AFD85F68(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1B0008FB0() & 1) != 0)
  {
    v5 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
    if ((MEMORY[0x1B5DFF610]((char *)a1 + *(int *)(v5 + 20), (char *)a2 + *(int *)(v5 + 20)) & 1) != 0)
      OUTLINED_FUNCTION_67_3();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFD85FE4()
{
  OUTLINED_FUNCTION_73_4();
  OUTLINED_FUNCTION_86_4();
  OUTLINED_FUNCTION_40();
  type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  OUTLINED_FUNCTION_89();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  OUTLINED_FUNCTION_96_2();
  return OUTLINED_FUNCTION_96_2();
}

uint64_t sub_1AFD86068(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4C52556F676F6CLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x5255656372756F73 && a2 == 0xE90000000000004CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1B0008FB0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AFD861B0(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0x4C52556F676F6CLL;
  return 0x5255656372756F73;
}

uint64_t sub_1AFD86204(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0918);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8E814();
  sub_1B0009058();
  v11 = 0;
  sub_1B0008F2C();
  if (!v1)
  {
    type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
    v10 = 1;
    sub_1B0005710();
    sub_1AFAF86C8(&qword_1ED1F06C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1B0008F68();
    v9 = 2;
    sub_1B0008F68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AFD86398()
{
  sub_1B0009004();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  sub_1B0005710();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B00084D0();
  sub_1B00084D0();
  return sub_1B0009040();
}

void sub_1AFD86470(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v27 = a2;
  v3 = sub_1B0005710();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0908);
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8E814();
  v32 = v10;
  v14 = v33;
  sub_1B000904C();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v15 = v7;
    v33 = v11;
    v26 = v13;
    v16 = v29;
    v17 = v30;
    v36 = 0;
    v18 = sub_1B0008EA8();
    v19 = v26;
    *v26 = v18;
    v19[1] = v20;
    v35 = 1;
    sub_1AFAF86C8(&qword_1ED1F06D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1B0008EE4();
    v21 = (char *)v26 + *(int *)(v33 + 20);
    v25 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v25(v21, v15, v17);
    v34 = 2;
    v22 = v28;
    sub_1B0008EE4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v31);
    v23 = (uint64_t)v26;
    v25((char *)v26 + *(int *)(v33 + 24), v22, v17);
    sub_1AFAF2DFC(v23, v27, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1AFAE2D74(v23, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
  }
}

uint64_t sub_1AFD867B0()
{
  uint64_t v0;
  id v1;

  sub_1B0009004();
  swift_bridgeObjectRetain();
  sub_1B0008614();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_1B0008B60();

  sub_1B0005710();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B00084D0();
  return sub_1B0009040();
}

uint64_t sub_1AFD86874()
{
  char *v0;

  return sub_1AFD861B0(*v0);
}

uint64_t sub_1AFD8687C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFD86068(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD868A0()
{
  sub_1AFD8E814();
  return sub_1B0009118();
}

uint64_t sub_1AFD868C8()
{
  sub_1AFD8E814();
  return sub_1B0009124();
}

void sub_1AFD868F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD86470(a1, a2);
}

uint64_t sub_1AFD86904(_QWORD *a1)
{
  return sub_1AFD86204(a1);
}

uint64_t sub_1AFD86924()
{
  sub_1B0009004();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_86_4();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_89();
  sub_1AFAF86C8(&qword_1ED1F00E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  OUTLINED_FUNCTION_109_3();
  OUTLINED_FUNCTION_109_3();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1AFD869C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x72656469766F7270 && a2 == 0xE900000000000073;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B0057770 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1B0008FB0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AFD86B24(char a1)
{
  if (!a1)
    return 0x72656469766F7270;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x6974617269707865;
}

uint64_t sub_1AFD86B88(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0920);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFD8DE40();
  sub_1B0009058();
  v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F08B8);
  sub_1AFD8DE7C(&qword_1ED1F08C0, &qword_1ED1F0780, (uint64_t)&unk_1B0038348, MEMORY[0x1E0DEB3B8]);
  sub_1B0008F68();
  if (!v2)
  {
    v10[6] = 1;
    sub_1B0008F2C();
    type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
    v10[5] = 2;
    sub_1B00058D8();
    sub_1AFAF86C8(&qword_1ED1F3CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1B0008F68();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1AFD86D48(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;

  v20 = a2;
  v21 = sub_1B00058D8();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0910);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1AFD8DE40();
  v22 = v8;
  v13 = v25;
  sub_1B000904C();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    v19 = v9;
    v25 = v5;
    v14 = v11;
    v15 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F08B8);
    v28 = 0;
    sub_1AFD8DE7C(&qword_1ED1F08C8, &qword_1ED1F0790, (uint64_t)&unk_1B0038370, MEMORY[0x1E0DEB3D8]);
    v16 = v23;
    v17 = v22;
    sub_1B0008EE4();
    *(_QWORD *)v14 = v29;
    v27 = 1;
    *((_QWORD *)v14 + 1) = sub_1B0008EA8();
    *((_QWORD *)v14 + 2) = v18;
    v26 = 2;
    sub_1AFAF86C8(&qword_1ED1F3CB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1B0008EE4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v16);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v14[*(int *)(v19 + 24)], v25, v15);
    sub_1AFAF2DFC((uint64_t)v14, v20, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    sub_1AFAE2D74((uint64_t)v14, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  }
}

void sub_1AFD87030()
{
  sub_1B0009004();
  sub_1B0009010();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

uint64_t sub_1AFD87064()
{
  char *v0;

  return sub_1AFD86B24(*v0);
}

uint64_t sub_1AFD8706C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFD869C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFD87090()
{
  sub_1AFD8DE40();
  return sub_1B0009118();
}

uint64_t sub_1AFD870B8()
{
  sub_1AFD8DE40();
  return sub_1B0009124();
}

void sub_1AFD870E0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AFD86D48(a1, a2);
}

uint64_t sub_1AFD870F4(_QWORD *a1)
{
  return sub_1AFD86B88(a1);
}

uint64_t sub_1AFD87108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1B0005ECC();
  v0 = sub_1B0005E90();
  type metadata accessor for WeatherProviderAttributionImageCache();
  swift_allocObject();
  v1 = sub_1AFDDB000();
  type metadata accessor for WeatherProviderAttributionCacheManager();
  v2 = swift_allocObject();
  swift_retain();
  v3 = sub_1AFD8DB7C(v0, v1, v2);
  result = swift_release();
  qword_1EEE73AE8 = v3;
  return result;
}

uint64_t static WeatherProviderAttributionCacheManager.shared.getter()
{
  if (qword_1EEE701E8 != -1)
    swift_once();
  return swift_retain();
}

void sub_1AFD871DC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD v11[2];
  _QWORD v12[4];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_1B0008554();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1B0008C44();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1AFAE8274((uint64_t)v11, (uint64_t)v12, &qword_1ED1EC3E0);
  if (v12[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1B0004FFC();
      swift_allocObject();
      sub_1B0004FF0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0898);
      sub_1AFD8DD78();
      sub_1B0004FE4();
      swift_release();
      v5 = v12[0];
      v6 = *(os_unfair_lock_s **)(v1 + 16);
      v7 = v6 + 4;
      v8 = v6 + 6;
      os_unfair_lock_lock(v6 + 6);
      sub_1AFD8A544(v7, v5);
      os_unfair_lock_unlock(v8);
      sub_1AFD8DDFC(v9, v10);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1AFACE0DC((uint64_t)v12, &qword_1ED1EC3E0);
  }
}

void sub_1AFD8754C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1AFD8BD2C(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t WeatherProviderAttributionCacheManager.attributions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  OUTLINED_FUNCTION_17_0();
  return swift_task_switch();
}

uint64_t sub_1AFD875B8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  if (sub_1AFD87ECC())
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[9] = (uint64_t)v1;
    *v1 = v0;
    v1[1] = sub_1AFD876B0;
    v2 = OUTLINED_FUNCTION_38_21(v0[6]);
    return sub_1AFD87720(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[8] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = sub_1AFD87640;
    v5 = OUTLINED_FUNCTION_38_21(v0[6]);
    return sub_1AFD87F2C(v5);
  }
}

uint64_t sub_1AFD87640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_37_28();
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD87678()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AFD87CC8(*(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_110_2();
  return OUTLINED_FUNCTION_53_4(v0, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1AFD876B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_37_28();
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD876E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AFD87CC8(*(_QWORD *)(v1 + 40));
  OUTLINED_FUNCTION_110_2();
  return OUTLINED_FUNCTION_53_4(v0, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1AFD87720(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E8);
  v2[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06F8);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0700);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2680);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06D8);
  v2[9] = swift_task_alloc();
  v3 = sub_1B0005D70();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD87834()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1AFD87890;
  return sub_1B0005EA8();
}

uint64_t sub_1AFD87890()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_93_2();
  *(_QWORD *)(v1 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD878DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_81_3();
  v1 = v0[9];
  v3 = v0[6];
  v2 = v0[7];
  sub_1B0005D28();
  v4 = sub_1B0005D1C();
  OUTLINED_FUNCTION_88_3(v1, 0, v5, v4);
  sub_1B0005D64();
  sub_1B0005D58();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E68);
  OUTLINED_FUNCTION_88_3(v2, 0, v7, v6);
  sub_1B0005D40();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  OUTLINED_FUNCTION_88_3(v3, 0, v9, v8);
  sub_1B0005D34();
  v10 = sub_1B0005D4C();
  v0[15] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_1AFD879D4;
  v12 = OUTLINED_FUNCTION_38_21(v0[3]);
  return WeatherProviderAttributionCacheManager.updateAttributions(for:with:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherAlerts:)(v12, v13, v14, v15, v16, v17, v10);
}

uint64_t sub_1AFD879D4()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v10;

  v1 = *v0;
  v10 = v1;
  v3 = v1[8];
  v2 = v1[9];
  v5 = v1[6];
  v4 = v1[7];
  v6 = v1[5];
  OUTLINED_FUNCTION_112_3(&v10);
  swift_bridgeObjectRelease();
  sub_1AFACE0DC(v6, &qword_1ED1F06E8);
  sub_1AFACE0DC(v5, &qword_1ED1F06F8);
  sub_1AFACE0DC(v4, &qword_1ED1F0700);
  sub_1AFACE0DC(v3, &qword_1ED1F2680);
  sub_1AFACE0DC(v2, &qword_1ED1F06D8);
  v7 = (_QWORD *)swift_task_alloc();
  v1[17] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_1AFD87AAC;
  v8 = OUTLINED_FUNCTION_38_21(v1[3]);
  return sub_1AFD87F2C(v8);
}

uint64_t sub_1AFD87AAC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_92_3();
  *(_QWORD *)(v1 + 144) = v0;
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD87AE8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_31_40(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  return OUTLINED_FUNCTION_53_4(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD87B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v13 = *(NSObject **)(v12 + 112);
  v14 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v14, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v15 = OUTLINED_FUNCTION_61();
  v16 = os_log_type_enabled(v13, v15);
  v17 = *(void **)(v12 + 112);
  if (v16)
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_18_65();
    v19 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    *(_DWORD *)v18 = 138412290;
    v20 = v17;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v12 + 16) = v21;
    OUTLINED_FUNCTION_21_54();
    *v19 = v21;
    OUTLINED_FUNCTION_104_2();
    OUTLINED_FUNCTION_104_2();
    _os_log_impl(&dword_1AFABF000, v13, v15, "error while updating fetch weather data: %@", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_104_2();
  OUTLINED_FUNCTION_104_2();

  swift_task_dealloc();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_23_59();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12);
}

uint64_t sub_1AFD87CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for WeatherProviderAttribution(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v18 - v7);
  v9 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    v11 = *(unsigned __int8 *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v18[1] = a1;
    v19 = (v11 + 32) & ~v11;
    v13 = a1 + v19;
    do
    {
      sub_1AFAF2DFC(v13, (uint64_t)v8, type metadata accessor for WeatherProviderAttribution);
      v14 = *v8 == 0x655720656C707041 && v8[1] == 0xED00007265687461;
      if (v14 || (sub_1B0008FB0() & 1) != 0)
      {
        sub_1AFAE2D74((uint64_t)v8, type metadata accessor for WeatherProviderAttribution);
      }
      else
      {
        sub_1AFAF2984((uint64_t)v8, (uint64_t)v5, type metadata accessor for WeatherProviderAttribution);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1AFBA8A1C(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v20;
        v16 = *(_QWORD *)(v20 + 16);
        v15 = *(_QWORD *)(v20 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1AFBA8A1C(v15 > 1, v16 + 1, 1);
          v9 = v20;
        }
        *(_QWORD *)(v9 + 16) = v16 + 1;
        sub_1AFAF2984((uint64_t)v5, v9 + v19 + v16 * v12, type metadata accessor for WeatherProviderAttribution);
      }
      v13 += v12;
      --v10;
    }
    while (v10);
    v9 = v20;
  }
  swift_bridgeObjectRelease();
  return v9;
}

BOOL sub_1AFD87ECC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  BOOL v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1AFD8A408(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1AFD87F2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E0);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD87FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 32) + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  v4 = (uint64_t *)&v3[4];
  v3 += 6;
  os_unfair_lock_lock(v3);
  sub_1AFD8A588(v4, v1);
  os_unfair_lock_unlock(v3);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_24_3();
  sub_1AFAF2558(v5, v6, &qword_1ED1F07E0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v7);
  v9 = *(_QWORD *)(v0 + 56);
  if (EnumTagSinglePayload == 1)
  {
    v10 = *(_QWORD *)(v0 + 64);
    sub_1AFACE0DC(v9, &qword_1ED1F07E0);
    sub_1AFACE0DC(v10, &qword_1ED1F07E0);
    swift_task_dealloc();
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_40_1();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    sub_1AFAF2984(v9, v12, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0760);
    v14 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v14;
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73B80);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v15;
    *v15 = v0;
    v15[1] = sub_1AFD8818C;
    return sub_1B0008D7C();
  }
}

uint64_t sub_1AFD8818C()
{
  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD881C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1AFACE0DC(*(_QWORD *)(v0 + 64), &qword_1ED1F07E0);
  sub_1AFAE2D74(v1, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

void WeatherProviderAttributionCacheManager.cachedAttributions(for:)()
{
  uint64_t v0;

  v0 = sub_1AFD88260();
  sub_1AFD87CC8(v0);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFD88260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v1 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - v8;
  v10 = *(os_unfair_lock_s **)(v0 + 16);
  v11 = (uint64_t *)&v10[4];
  v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_1AFD8A588(v11, (uint64_t)v9);
  os_unfair_lock_unlock(v12);
  sub_1AFAF2558((uint64_t)v9, (uint64_t)v6, &qword_1ED1F07E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v1) == 1)
  {
    sub_1AFACE0DC((uint64_t)v6, &qword_1ED1F07E0);
    v13 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1AFAF2984((uint64_t)v6, (uint64_t)v3, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    swift_retain();
    v14 = swift_bridgeObjectRetain();
    sub_1AFD85348(v14, v0);
    v16 = v15;
    swift_bridgeObjectRelease();
    v18[0] = v16;
    swift_bridgeObjectRetain();
    sub_1AFD8BF10(v18);
    swift_bridgeObjectRelease();
    v13 = v18[0];
    sub_1AFAE2D74((uint64_t)v3, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  }
  sub_1AFACE0DC((uint64_t)v9, &qword_1ED1F07E0);
  return v13;
}

uint64_t WeatherProviderAttributionCacheManager.updateAttributions(for:with:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherAlerts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v11;

  v8[13] = a7;
  v8[14] = v7;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[8] = a1;
  v11 = (_QWORD *)swift_task_alloc();
  v8[15] = v11;
  *v11 = v8;
  v11[1] = sub_1AFD884A4;
  return sub_1AFD88E78(a2, a1);
}

uint64_t sub_1AFD884A4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_80_4(v2);
  v0[16] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_0();
    return OUTLINED_FUNCTION_0_113();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[17] = (uint64_t)v4;
    OUTLINED_FUNCTION_116_2(v4, (uint64_t)sub_1AFD88518);
    v5 = OUTLINED_FUNCTION_38_21(v0[9]);
    return sub_1AFD89320(v5, v6);
  }
}

uint64_t sub_1AFD88518()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_80_4(v2);
  v0[18] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_0();
    return OUTLINED_FUNCTION_0_113();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[19] = (uint64_t)v4;
    OUTLINED_FUNCTION_116_2(v4, (uint64_t)sub_1AFD88590);
    v5 = OUTLINED_FUNCTION_38_21(v0[10]);
    return sub_1AFD8962C(v5, v6);
  }
}

uint64_t sub_1AFD88590()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_80_4(v2);
  v0[20] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_0();
    return OUTLINED_FUNCTION_0_113();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[21] = (uint64_t)v4;
    OUTLINED_FUNCTION_116_2(v4, (uint64_t)sub_1AFD88608);
    v5 = OUTLINED_FUNCTION_38_21(v0[11]);
    return sub_1AFD898F8(v5, v6);
  }
}

uint64_t sub_1AFD88608()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_80_4(v2);
  v0[22] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_0();
    return OUTLINED_FUNCTION_0_113();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[23] = (uint64_t)v4;
    OUTLINED_FUNCTION_116_2(v4, (uint64_t)sub_1AFD88680);
    v5 = OUTLINED_FUNCTION_38_21(v0[12]);
    return sub_1AFD89BC4(v5, v6);
  }
}

uint64_t sub_1AFD88680()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_80_4(v3);
  v0[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_0();
    return OUTLINED_FUNCTION_0_113();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[25] = (uint64_t)v5;
    *v5 = v2;
    v5[1] = sub_1AFD886F8;
    v6 = OUTLINED_FUNCTION_38_21(v0[13]);
    return sub_1AFD8A000(v6, v7);
  }
}

uint64_t sub_1AFD886F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_93_2();
  *(_QWORD *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_30(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD88744()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = (void *)v0[16];
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    v0[7] = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating current weather attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  OUTLINED_FUNCTION_117_2(v8, (uint64_t)sub_1AFD88518);
  OUTLINED_FUNCTION_38_21(v0[9]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD89320(v9, v10);
}

uint64_t sub_1AFD8887C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = (void *)v0[18];
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    v0[6] = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating minute forecast attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  v8 = (_QWORD *)swift_task_alloc();
  v0[19] = v8;
  OUTLINED_FUNCTION_117_2(v8, (uint64_t)sub_1AFD88590);
  OUTLINED_FUNCTION_38_21(v0[10]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD8962C(v9, v10);
}

uint64_t sub_1AFD889B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = (void *)v0[20];
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    v0[5] = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating hourly forecast attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  v8 = (_QWORD *)swift_task_alloc();
  v0[21] = v8;
  OUTLINED_FUNCTION_117_2(v8, (uint64_t)sub_1AFD88608);
  OUTLINED_FUNCTION_38_21(v0[11]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD898F8(v9, v10);
}

uint64_t sub_1AFD88AF4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = (void *)v0[22];
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    v0[4] = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating daily forecast attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  v8 = (_QWORD *)swift_task_alloc();
  v0[23] = v8;
  OUTLINED_FUNCTION_117_2(v8, (uint64_t)sub_1AFD88680);
  OUTLINED_FUNCTION_38_21(v0[12]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD89BC4(v9, v10);
}

uint64_t sub_1AFD88C30()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = (void *)v0[24];
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    v0[3] = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating air quality attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  v8 = (_QWORD *)swift_task_alloc();
  v0[25] = v8;
  *v8 = v0;
  v8[1] = sub_1AFD886F8;
  OUTLINED_FUNCTION_38_21(v0[13]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD8A000(v9, v10);
}

uint64_t sub_1AFD88D6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_7_84();
  if (qword_1EEE70078 != -1)
    swift_once();
  v1 = *(void **)(v0 + 208);
  v2 = OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_26_49(v2, (uint64_t)qword_1EEE72148);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_62_3();
  v3 = OUTLINED_FUNCTION_61();
  if (OUTLINED_FUNCTION_29_5(v3))
  {
    OUTLINED_FUNCTION_18_65();
    v4 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_13_86(5.8381e-34);
    v5 = OUTLINED_FUNCTION_79_5();
    *(_QWORD *)(v0 + 16) = v5;
    OUTLINED_FUNCTION_21_54();
    *v4 = v5;
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_2_105();
    OUTLINED_FUNCTION_15_83(&dword_1AFABF000, v6, v7, "error while updating air weather alerts attribution. Error=%{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_20_64();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();
  OUTLINED_FUNCTION_2_105();

  return OUTLINED_FUNCTION_50_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD88E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E0);
  v3[11] = swift_task_alloc();
  v5 = sub_1B0005EE4();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0005DAC();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06D8);
  v3[18] = swift_task_alloc();
  v7 = sub_1B0005D1C();
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD88FE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  char v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_72_2();
  v2 = OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_83_3(v2, v3, &qword_1ED1F06D8);
  OUTLINED_FUNCTION_39_18();
  if (v12)
  {
    v4 = v0[18];
    v5 = &qword_1ED1F06D8;
  }
  else
  {
    v6 = v0[15];
    v7 = v0[12];
    v8 = v0[13];
    v9 = v0[11];
    OUTLINED_FUNCTION_36_26(v0[20]);
    sub_1B0005D04();
    OUTLINED_FUNCTION_122_1();
    OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v6);
    if (EnumTagSinglePayload == 1)
    {
      v11 = v0[11];
      OUTLINED_FUNCTION_31_40(v0[20]);
      v5 = &qword_1ED1F06E0;
      v4 = v11;
    }
    else
    {
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_90_3();
      OUTLINED_FUNCTION_41_14();
      if (v12)
      {
        OUTLINED_FUNCTION_31_40(v0[16]);
        OUTLINED_FUNCTION_49_6();
        v5 = &qword_1ED1F4190;
        v4 = v6;
      }
      else
      {
        OUTLINED_FUNCTION_12_86();
        OUTLINED_FUNCTION_107_2();
        OUTLINED_FUNCTION_14_65(v7);
        if (!v12)
        {
          OUTLINED_FUNCTION_42_15();
          v14 = sub_1B0005D88();
          OUTLINED_FUNCTION_71_6(v14, v15);
          v16 = (_QWORD *)swift_task_alloc();
          v0[23] = v16;
          v17 = OUTLINED_FUNCTION_16_73(v16, (uint64_t)sub_1AFD89164);
          return OUTLINED_FUNCTION_8_89(v17, v18, v19, v20, v21);
        }
        OUTLINED_FUNCTION_6_87();
        OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
        v5 = &qword_1ED1F4190;
        v4 = v9;
      }
    }
  }
  sub_1AFACE0DC(v4, v5);
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v13);
}

uint64_t sub_1AFD89164()
{
  OUTLINED_FUNCTION_10_88();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_0_113();
}

uint64_t sub_1AFD891A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_7_84();
  v13 = v12[20];
  v14 = v12[16];
  v15 = v12[10];
  v16 = v12[7];
  v17 = *(void (**)(uint64_t, uint64_t))(v12[8] + 8);
  v17(v12[9], v16);
  v17(v15, v16);
  OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_23_59();
  return v18(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_1AFD89238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 8);
  v6(*(_QWORD *)(v0 + 72), v5);
  v6(v4, v5);
  OUTLINED_FUNCTION_54_4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_35_22();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFD89320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E0);
  v3[11] = swift_task_alloc();
  v5 = sub_1B0005EE4();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0005DAC();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2680);
  v3[18] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2678);
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD8948C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_72_2();
  v6 = OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_83_3(v6, v7, &qword_1ED1F2680);
  OUTLINED_FUNCTION_39_18();
  if (v10)
  {
    v8 = v1[18];
    v9 = &qword_1ED1F2680;
  }
  else
  {
    OUTLINED_FUNCTION_28_49();
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_54_4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_14_65(v4);
    if (v10)
    {
      v11 = v1[11];
      OUTLINED_FUNCTION_31_40(v1[20]);
      v9 = &qword_1ED1F06E0;
      v8 = v11;
    }
    else
    {
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_90_3();
      OUTLINED_FUNCTION_41_14();
      if (v12)
      {
        OUTLINED_FUNCTION_31_40(v1[16]);
        OUTLINED_FUNCTION_49_6();
        v9 = &qword_1ED1F4190;
        v8 = v0;
      }
      else
      {
        OUTLINED_FUNCTION_12_86();
        OUTLINED_FUNCTION_107_2();
        OUTLINED_FUNCTION_14_65(v2);
        if (!v13)
        {
          OUTLINED_FUNCTION_42_15();
          v15 = sub_1B0005D88();
          OUTLINED_FUNCTION_71_6(v15, v16);
          v17 = (_QWORD *)swift_task_alloc();
          v1[23] = v17;
          v18 = OUTLINED_FUNCTION_16_73(v17, (uint64_t)sub_1AFD895EC);
          return OUTLINED_FUNCTION_8_89(v18, v19, v20, v21, v22);
        }
        OUTLINED_FUNCTION_6_87();
        OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        v9 = &qword_1ED1F4190;
        v8 = v3;
      }
    }
  }
  sub_1AFACE0DC(v8, v9);
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v14);
}

uint64_t sub_1AFD895EC()
{
  OUTLINED_FUNCTION_10_88();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_0_113();
}

uint64_t sub_1AFD8962C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E0);
  v3[11] = swift_task_alloc();
  v5 = sub_1B0005EE4();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0005DAC();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0700);
  v3[18] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E68);
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD89798()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_72_2();
  v6 = OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_83_3(v6, v7, &qword_1ED1F0700);
  OUTLINED_FUNCTION_39_18();
  if (v10)
  {
    v8 = v1[18];
    v9 = &qword_1ED1F0700;
  }
  else
  {
    OUTLINED_FUNCTION_28_49();
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_54_4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_14_65(v4);
    if (v10)
    {
      v11 = v1[11];
      OUTLINED_FUNCTION_31_40(v1[20]);
      v9 = &qword_1ED1F06E0;
      v8 = v11;
    }
    else
    {
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_90_3();
      OUTLINED_FUNCTION_41_14();
      if (v12)
      {
        OUTLINED_FUNCTION_31_40(v1[16]);
        OUTLINED_FUNCTION_49_6();
        v9 = &qword_1ED1F4190;
        v8 = v0;
      }
      else
      {
        OUTLINED_FUNCTION_12_86();
        OUTLINED_FUNCTION_107_2();
        OUTLINED_FUNCTION_14_65(v2);
        if (!v13)
        {
          OUTLINED_FUNCTION_42_15();
          v15 = sub_1B0005D88();
          OUTLINED_FUNCTION_71_6(v15, v16);
          v17 = (_QWORD *)swift_task_alloc();
          v1[23] = v17;
          v18 = OUTLINED_FUNCTION_16_73(v17, (uint64_t)sub_1AFD895EC);
          return OUTLINED_FUNCTION_8_89(v18, v19, v20, v21, v22);
        }
        OUTLINED_FUNCTION_6_87();
        OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        v9 = &qword_1ED1F4190;
        v8 = v3;
      }
    }
  }
  sub_1AFACE0DC(v8, v9);
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v14);
}

uint64_t sub_1AFD898F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E0);
  v3[11] = swift_task_alloc();
  v5 = sub_1B0005EE4();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0005DAC();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06F8);
  v3[18] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F41D8);
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD89A64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_72_2();
  v6 = OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_83_3(v6, v7, &qword_1ED1F06F8);
  OUTLINED_FUNCTION_39_18();
  if (v10)
  {
    v8 = v1[18];
    v9 = &qword_1ED1F06F8;
  }
  else
  {
    OUTLINED_FUNCTION_28_49();
    OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_54_4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_14_65(v4);
    if (v10)
    {
      v11 = v1[11];
      OUTLINED_FUNCTION_31_40(v1[20]);
      v9 = &qword_1ED1F06E0;
      v8 = v11;
    }
    else
    {
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_90_3();
      OUTLINED_FUNCTION_41_14();
      if (v12)
      {
        OUTLINED_FUNCTION_31_40(v1[16]);
        OUTLINED_FUNCTION_49_6();
        v9 = &qword_1ED1F4190;
        v8 = v0;
      }
      else
      {
        OUTLINED_FUNCTION_12_86();
        OUTLINED_FUNCTION_107_2();
        OUTLINED_FUNCTION_14_65(v2);
        if (!v13)
        {
          OUTLINED_FUNCTION_42_15();
          v15 = sub_1B0005D88();
          OUTLINED_FUNCTION_71_6(v15, v16);
          v17 = (_QWORD *)swift_task_alloc();
          v1[23] = v17;
          v18 = OUTLINED_FUNCTION_16_73(v17, (uint64_t)sub_1AFD895EC);
          return OUTLINED_FUNCTION_8_89(v18, v19, v20, v21, v22);
        }
        OUTLINED_FUNCTION_6_87();
        OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        v9 = &qword_1ED1F4190;
        v8 = v3;
      }
    }
  }
  sub_1AFACE0DC(v8, v9);
  OUTLINED_FUNCTION_5_94();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v14);
}

uint64_t sub_1AFD89BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06F0);
  v3[10] = swift_task_alloc();
  v5 = sub_1B000628C();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0006034();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD89CF4()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_83_3(v0[2], v1, &qword_1ED1F06E8);
  OUTLINED_FUNCTION_39_18();
  if (v2)
  {
    v3 = v0[14];
    v4 = &qword_1ED1F06E8;
LABEL_8:
    sub_1AFACE0DC(v3, v4);
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_40_1();
    OUTLINED_FUNCTION_34_35();
    OUTLINED_FUNCTION_35_22();
    OUTLINED_FUNCTION_45_8();
    OUTLINED_FUNCTION_44_9();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
    return OUTLINED_FUNCTION_4_101(v12);
  }
  OUTLINED_FUNCTION_36_26(v0[16]);
  sub_1B0005FF8();
  v5 = OUTLINED_FUNCTION_95_2();
  if (v5 == 1)
  {
    v6 = v0[10];
    OUTLINED_FUNCTION_31_40(v0[16]);
    v4 = (uint64_t *)&unk_1ED1F06F0;
    v3 = v6;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_36_26(v0[12]);
  sub_1B0006280();
  v7 = OUTLINED_FUNCTION_95_2();
  v8 = v0[17];
  if (v7 == 1)
  {
    v9 = v0[15];
    v10 = v0[16];
    v11 = v0[5];
    OUTLINED_FUNCTION_31_40(v0[12]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v4 = &qword_1ED1F4190;
    v3 = v11;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[7] + 32))(v0[9], v0[5], v0[6]);
  v14 = sub_1B0006274();
  v16 = v15;
  v0[18] = v15;
  sub_1B0005FE0();
  v17 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v17;
  *v17 = v0;
  v17[1] = sub_1AFD89E84;
  return OUTLINED_FUNCTION_14_84(v14, v16, v0[9], v0[8], v0[3]);
}

uint64_t sub_1AFD89E84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_81_3();
  v9 = v2;
  v10 = v3;
  v8 = v1;
  v4 = (_QWORD *)*v1;
  v8 = v4;
  v5 = v4[7];
  OUTLINED_FUNCTION_80_4(&v8);
  v4[20] = v0;
  swift_task_dealloc();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  v4[21] = v6;
  OUTLINED_FUNCTION_27_53(v6);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_0();
  return swift_task_switch();
}

uint64_t sub_1AFD89F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_81_3();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v3);
}

uint64_t sub_1AFD89F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_98_1();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  OUTLINED_FUNCTION_54_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_123_1();
  return OUTLINED_FUNCTION_48_7(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD8A000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_1B0005710();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F06E0);
  v3[11] = swift_task_alloc();
  v5 = sub_1B0005EE4();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_1B0005DAC();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD8A11C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD, _QWORD);
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_81_3();
  v1 = v0[2];
  if (v1 && *(_QWORD *)(v1 + 16))
  {
    v2 = v0[15];
    v3 = v0[13];
    v4 = v0[11];
    v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B0005E00() - 8) + 80);
    v6 = v1 + ((v5 + 32) & ~v5);
    sub_1B0005DF4();
    OUTLINED_FUNCTION_122_1();
    OUTLINED_FUNCTION_27_53(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (__swift_getEnumTagSinglePayload(v4, 1, v2) == 1)
    {
      v7 = v0[11];
      v8 = (uint64_t *)&unk_1ED1F06E0;
    }
    else
    {
      OUTLINED_FUNCTION_9_89();
      OUTLINED_FUNCTION_90_3();
      OUTLINED_FUNCTION_113_2();
      if (v11)
      {
        v9 = v0[6];
        (*(void (**)(uint64_t, _QWORD))(v0[16] + 8))(v6, v0[15]);
        v8 = &qword_1ED1F4190;
        v7 = v9;
      }
      else
      {
        v10 = *(void (**)(_QWORD, _QWORD, _QWORD))(v0[8] + 32);
        v10(v0[10], v0[6], v0[7]);
        sub_1B0005DA0();
        OUTLINED_FUNCTION_113_2();
        if (!v11)
        {
          v10(v0[9], v0[5], v0[7]);
          sub_1B0005D88();
          v0[18] = v15;
          v16 = (_QWORD *)swift_task_alloc();
          v0[19] = v16;
          v17 = OUTLINED_FUNCTION_16_73(v16, (uint64_t)sub_1AFD8A2B4);
          return OUTLINED_FUNCTION_14_84(v17, v18, v19, v20, v21);
        }
        v12 = v0[16];
        v13 = v0[5];
        OUTLINED_FUNCTION_31_40(v0[8]);
        OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
        v8 = &qword_1ED1F4190;
        v7 = v13;
      }
    }
    sub_1AFACE0DC(v7, v8);
  }
  OUTLINED_FUNCTION_75_5();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v14);
}

uint64_t sub_1AFD8A2B4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_93_2();
  *(_QWORD *)(v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_0_113();
}

uint64_t sub_1AFD8A304()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_81_3();
  v1 = v0[16];
  v2 = v0[10];
  v3 = v0[7];
  v4 = *(void (**)(uint64_t, uint64_t))(v0[8] + 8);
  v4(v0[9], v3);
  v4(v2, v3);
  OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_75_5();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_4_101(v5);
}

uint64_t sub_1AFD8A380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_98_1();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 8);
  v4(*(_QWORD *)(v0 + 72), v3);
  v4(v2, v3);
  OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  swift_task_dealloc();
  OUTLINED_FUNCTION_123_1();
  return OUTLINED_FUNCTION_48_7(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1AFD8A408(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B000895C();
  sub_1AFD81F10(*a1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_1AFACE0DC((uint64_t)v6, &qword_1ED1F07E0);
    v10 = 1;
  }
  else
  {
    sub_1AFAF2984((uint64_t)v6, (uint64_t)v9, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    v10 = *(_QWORD *)(*(_QWORD *)v9 + 16) == 0;
    sub_1AFAE2D74((uint64_t)v9, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  }
  *a2 = v10;
}

uint64_t sub_1AFD8A544(_QWORD *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *a1 = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AFD8A588@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1B000895C();
  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v5 = sub_1AFAF46BC(), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v4 + 56);
    v9 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
    sub_1AFAF2DFC(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7, a2, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    v10 = a2;
    v11 = 0;
    v12 = v9;
  }
  else
  {
    v12 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
    v10 = a2;
    v11 = 1;
  }
  __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD8A64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = type metadata accessor for WeatherProviderAttribution(0);
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0760);
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v7 = sub_1B0005710();
  v4[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[23] = v8;
  v4[24] = *(_QWORD *)(v8 + 64);
  v4[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73B88);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v9 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v4[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[29] = v10;
  v4[30] = *(_QWORD *)(v10 + 64);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1AFD8A7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v42 = *(_QWORD *)(v0 + 232);
  v41 = *(_QWORD *)(v0 + 224);
  v1 = **(_QWORD **)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 56);
  v38 = v1 + 56;
  v40 = *(_QWORD *)(v0 + 184);
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v39 = (unint64_t)(63 - v4) >> 6;
  v43 = **(_QWORD **)(v0 + 96);
  swift_bridgeObjectRetain_n();
  v6 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v44 = (v5 - 1) & v5;
  v45 = v6;
  for (i = __clz(__rbit64(v5)) | (v6 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v17 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 264);
    v18 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 216);
    v49 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 200);
    v47 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 176);
    v46 = v21;
    v48 = *(_QWORD *)(v0 + 104);
    sub_1AFAF2DFC(*(_QWORD *)(v43 + 48) + *(_QWORD *)(v42 + 72) * i, v16, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    sub_1AFAF2984(v16, v17, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v22 = v17 + *(int *)(v41 + 20);
    v23 = sub_1B0008824();
    __swift_storeEnumTagSinglePayload(v19, 1, 1, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v20, v22, v21);
    sub_1AFAF2DFC(v17, v18, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v24 = (*(unsigned __int8 *)(v40 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v25 = (v47 + *(unsigned __int8 *)(v42 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v26 = (char *)swift_allocObject();
    *((_QWORD *)v26 + 2) = 0;
    *((_QWORD *)v26 + 3) = 0;
    *((_QWORD *)v26 + 4) = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(&v26[v24], v20, v46);
    sub_1AFAF2984(v18, (uint64_t)&v26[v25], type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    sub_1AFAF2558(v19, v49, &qword_1EEE73B88);
    LODWORD(v19) = OUTLINED_FUNCTION_120(v49);
    swift_retain();
    v27 = *(_QWORD *)(v0 + 208);
    if ((_DWORD)v19 == 1)
    {
      sub_1AFACE0DC(*(_QWORD *)(v0 + 208), &qword_1EEE73B88);
    }
    else
    {
      sub_1B0008818();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v27, v23);
    }
    if (*((_QWORD *)v26 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v28 = sub_1B00087F4();
      v30 = v29;
      swift_unknownObjectRelease();
    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v31 = **(_QWORD **)(v0 + 88);
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = &unk_1EEE73B98;
    *(_QWORD *)(v32 + 24) = v26;
    v33 = v30 | v28;
    if (v30 | v28)
    {
      v33 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v28;
      *(_QWORD *)(v0 + 40) = v30;
    }
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v33;
    *(_QWORD *)(v0 + 64) = v31;
    swift_task_create();
    swift_release();
    sub_1AFACE0DC(v35, &qword_1EEE73B88);
    sub_1AFAE2D74(v34, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v5 = v44;
    v6 = v45;
    if (v44)
      goto LABEL_4;
LABEL_5:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v8 >= v39)
      goto LABEL_38;
    v9 = *(_QWORD *)(v38 + 8 * v8);
    v10 = v6 + 1;
    if (!v9)
    {
      OUTLINED_FUNCTION_100_2();
      if (v11 == v12)
        goto LABEL_38;
      OUTLINED_FUNCTION_99_3();
      if (!v9)
      {
        OUTLINED_FUNCTION_100_2();
        if (v11 == v12)
          goto LABEL_38;
        OUTLINED_FUNCTION_99_3();
        if (!v9)
        {
          OUTLINED_FUNCTION_100_2();
          if (v11 == v12)
            goto LABEL_38;
          OUTLINED_FUNCTION_99_3();
          if (!v9)
          {
            OUTLINED_FUNCTION_100_2();
            if (v11 == v12)
              goto LABEL_38;
            OUTLINED_FUNCTION_99_3();
            if (!v9)
              break;
          }
        }
      }
    }
LABEL_27:
    v44 = (v9 - 1) & v9;
    v45 = v10;
  }
  v14 = v13 + 5;
  if (v14 >= v39)
  {
LABEL_38:
    v36 = *(_QWORD **)(v0 + 88);
    swift_release();
    OUTLINED_FUNCTION_20_0();
    *(_QWORD *)(v0 + 72) = *v36;
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73BB0);
    sub_1AFD8E220();
    *v37 = v0;
    v37[1] = sub_1AFD8AC40;
    sub_1B0008830();
    return;
  }
  v9 = *(_QWORD *)(v38 + 8 * v14);
  if (v9)
  {
    v10 = v14;
    goto LABEL_27;
  }
  while (!__OFADD__(v14, 1))
  {
    OUTLINED_FUNCTION_100_2();
    if (v11 == v12)
      goto LABEL_38;
    OUTLINED_FUNCTION_99_3();
    v14 = v15 + 1;
    if (v9)
      goto LABEL_27;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1AFD8AC40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_92_3();
  *(_QWORD *)(v1 + 280) = v0;
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD8AC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_7_84();
  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(_QWORD *)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 168);
      sub_1AFAF2558(v5, v8, &qword_1ED1F0760);
      sub_1AFAE8274(v8, v9, &qword_1ED1F0760);
      v10 = OUTLINED_FUNCTION_120(v9);
      v11 = *(_QWORD *)(v0 + 160);
      if (v10 == 1)
      {
        sub_1AFACE0DC(v11, &qword_1ED1F0760);
      }
      else
      {
        v13 = *(_QWORD *)(v0 + 128);
        v12 = *(_QWORD *)(v0 + 136);
        sub_1AFAF2984(v11, v12, type metadata accessor for WeatherProviderAttribution);
        sub_1AFAF2984(v12, v13, type metadata accessor for WeatherProviderAttribution);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = OUTLINED_FUNCTION_125_1(0, *(_QWORD *)(v7 + 16) + 1);
        v15 = *(_QWORD *)(v7 + 16);
        v14 = *(_QWORD *)(v7 + 24);
        if (v15 >= v14 >> 1)
          v7 = OUTLINED_FUNCTION_125_1(v14 > 1, v15 + 1);
        v16 = *(_QWORD *)(v0 + 128);
        *(_QWORD *)(v7 + 16) = v15 + 1;
        sub_1AFAF2984(v16, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, type metadata accessor for WeatherProviderAttribution);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  **(_QWORD **)(v0 + 80) = v7;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_35_22();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_44_9();
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_63_3();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_50_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD8AE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a1;
  v6[5] = a4;
  v7 = sub_1B0005710();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD8AEAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 40) + 32), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 56));
  v1 = (_QWORD *)OUTLINED_FUNCTION_56_3();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_1AFD8AF0C;
  OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_65_3(v2, v3, v4, v5);
}

uint64_t sub_1AFD8AF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_92_3();
  *(_QWORD *)(v2 + 96) = v1;
  *(_QWORD *)(v2 + 104) = v0;
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD8AF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_72_2();
  v1 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(uint64_t **)(v0 + 56);
    v5 = *(char **)(v0 + 32);
    v7 = *v4;
    v6 = v4[1];
    v8 = (char *)v4
       + *(int *)(type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0) + 20);
    v9 = type metadata accessor for WeatherProviderAttribution(0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v5[*(int *)(v9 + 24)], v8, v2);
    *(_QWORD *)v5 = v7;
    *((_QWORD *)v5 + 1) = v6;
    *((_QWORD *)v5 + 2) = v1;
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v9);
    OUTLINED_FUNCTION_94_0();
  }
  else
  {
    OUTLINED_FUNCTION_76_3();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFD8B00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;

  if (qword_1EEE70078 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = OUTLINED_FUNCTION_90();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EEE72148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_33_6();
  v6 = sub_1B0006CE8();
  v7 = sub_1B00089BC();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 104);
  if (v8)
  {
    v10 = OUTLINED_FUNCTION_4_18();
    v16 = (_QWORD *)OUTLINED_FUNCTION_4_18();
    v17 = OUTLINED_FUNCTION_4_18();
    *(_DWORD *)v10 = 136446466;
    sub_1AFAF86C8((unint64_t *)&qword_1EEE73BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v11 = sub_1B0008F80();
    *(_QWORD *)(v0 + 16) = sub_1AFB4AD14(v11, v12, &v17);
    sub_1B0008BB4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_97_3();
    *(_WORD *)(v10 + 12) = 2114;
    v13 = v9;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v14;
    sub_1B0008BB4();
    *v16 = v14;
    OUTLINED_FUNCTION_68_4();
    OUTLINED_FUNCTION_68_4();
    _os_log_impl(&dword_1AFABF000, v6, v7, "error while reading cached image at url:(%{public}s into memory. Error=%{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72A80);
    OUTLINED_FUNCTION_124_1();
    OUTLINED_FUNCTION_25();
  }
  OUTLINED_FUNCTION_68_4();
  OUTLINED_FUNCTION_97_3();
  OUTLINED_FUNCTION_68_4();
  OUTLINED_FUNCTION_68_4();

  OUTLINED_FUNCTION_76_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AFD8B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFD8B2C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 56) + 32), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 56));
  v1 = (_QWORD *)OUTLINED_FUNCTION_56_3();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_1AFD8B328;
  OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_65_3(v2, v3, v4, v5);
}

uint64_t sub_1AFD8B328(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  OUTLINED_FUNCTION_112_3(&v5);
  if (v1)
  {
    swift_task_dealloc();
    return ((uint64_t (*)(void))v2[1])();
  }
  else
  {

    OUTLINED_FUNCTION_17_0();
    return swift_task_switch();
  }
}

uint64_t sub_1AFD8B3A0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_7_84();
  v2 = v0[8];
  v1 = (char *)v0[9];
  v3 = v0[4];
  v4 = v0[5];
  v6 = v0[2];
  v5 = v0[3];
  v7 = &v1[*(int *)(v2 + 20)];
  v8 = OUTLINED_FUNCTION_89();
  v9 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(v7, v3, v8);
  v9(&v1[*(int *)(v2 + 24)], v4, v8);
  *(_QWORD *)v1 = v6;
  *((_QWORD *)v1 + 1) = v5;
  OUTLINED_FUNCTION_94_0();
  v10 = (_QWORD *)swift_task_alloc();
  v0[11] = v10;
  *v10 = v0;
  v10[1] = sub_1AFD8B448;
  OUTLINED_FUNCTION_38_21(v0[9]);
  OUTLINED_FUNCTION_23_59();
  return sub_1AFD8B508(v11, v12);
}

uint64_t sub_1AFD8B448()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_93_2();
  *(_QWORD *)(v1 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD8B494()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1AFAE2D74(*(_QWORD *)(v0 + 72), type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
  OUTLINED_FUNCTION_24_3();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_30(v1);
}

uint64_t sub_1AFD8B4CC()
{
  uint64_t v0;

  sub_1AFAE2D74(*(_QWORD *)(v0 + 72), type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_30(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD8B508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AFD8B524()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  int8x16_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = v0[2].i64[0];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (uint64_t *)swift_task_alloc();
  v4 = v0[1];
  v3[2] = v1;
  *(int8x16_t *)(v3 + 3) = vextq_s8(v4, v4, 8uLL);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
  sub_1AFD8B680((uint64_t *)(v2 + 16), v3[2], v3[3], v3[4]);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
  OUTLINED_FUNCTION_24_3();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[2].i64[0] + 32), *(_QWORD *)(v0[2].i64[0] + 56));
  type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  v5 = (_QWORD *)OUTLINED_FUNCTION_56_3();
  v0[2].i64[1] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1AFD8B618;
  OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_69_4(v6, v7, v8, v9);
}

uint64_t sub_1AFD8B618()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_93_2();
  *(_QWORD *)(v1 + 48) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return OUTLINED_FUNCTION_1_102();
}

uint64_t sub_1AFD8B664()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return v0();
}

uint64_t sub_1AFD8B674()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AFD8B680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumTagSinglePayload;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v47 = a4;
  v7 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E0);
  MEMORY[0x1E0C80A78](v12);
  v44 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - v15;
  v48 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  MEMORY[0x1E0C80A78](v48);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = a3;
  v19 = sub_1B000895C();
  v20 = (uint64_t)v50;
  sub_1AFD8B95C(a1, v19, v21);
  if (v20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v50 = v11;
    v43 = a2;
    swift_bridgeObjectRelease();
    sub_1B000895C();
    v42 = a1;
    sub_1AFD81F10(*a1, (uint64_t)v16);
    swift_bridgeObjectRelease();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v48);
    v24 = v46;
    v23 = v47;
    v25 = v44;
    v26 = (uint64_t)v18;
    if (EnumTagSinglePayload == 1)
    {
      sub_1AFACE0DC((uint64_t)v16, &qword_1ED1F07E0);
      v27 = sub_1B000895C();
      v29 = v28;
      sub_1B000580C();
      *v18 = MEMORY[0x1E0DEE9E8];
      v18[1] = v27;
      v18[2] = v29;
    }
    else
    {
      sub_1AFAF2984((uint64_t)v16, (uint64_t)v18, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    }
    v30 = (uint64_t)v50;
    sub_1AFAF2DFC(v23, (uint64_t)v24, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    sub_1AFBC69F8(v30, v24);
    sub_1AFAE2D74(v30, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails);
    v31 = sub_1B000895C();
    v33 = v32;
    sub_1AFAF2DFC(v26, v25, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    __swift_storeEnumTagSinglePayload(v25, 0, 1, v48);
    v34 = v31;
    v35 = v42;
    sub_1AFE9AD98(v25, v34, v33, v36, v37, v38, v39, v40, v41, (uint64_t)v42, v43, v44, v45, (uint64_t)v46, v47, v48, v49, (uint64_t)v50, v51,
      v52);
    sub_1AFD8BC34(*v35);
    sub_1AFAE2D74(v26, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  }
}

void sub_1AFD8B95C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v3;
  v8 = sub_1B00058D8();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07E0);
  MEMORY[0x1E0C80A78](v11);
  v36 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - v14;
  v16 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  v20 = *a1;
  if (!*(_QWORD *)(v20 + 16))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v16);
LABEL_7:
    sub_1AFACE0DC((uint64_t)v15, &qword_1ED1F07E0);
    return;
  }
  v35 = (_QWORD *)v4;
  swift_bridgeObjectRetain();
  v21 = sub_1AFAF46BC();
  if ((v22 & 1) != 0)
  {
    sub_1AFAF2DFC(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v17 + 72) * v21, (uint64_t)v15, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v23, 1, v16);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
    goto LABEL_7;
  sub_1AFAF2984((uint64_t)v15, (uint64_t)v19, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
  sub_1B00058A8();
  sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v24 = v39;
  v25 = sub_1B000850C();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v24);
  if ((v25 & 1) == 0)
  {
    v26 = v35;
    swift_retain();
    v27 = swift_bridgeObjectRetain();
    sub_1AFD857FC(v27, v26);
    swift_bridgeObjectRelease();
    v28 = v36;
    __swift_storeEnumTagSinglePayload(v36, 1, 1, v16);
    swift_bridgeObjectRetain();
    sub_1AFE9AD98(v28, a2, a3, v29, v30, v31, v32, v33, v34, (uint64_t)v35, v36, (uint64_t)v37, v38, v39, v40, v41, v42, v43, v44,
      v45);
  }
  sub_1AFAE2D74((uint64_t)v19, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry);
}

uint64_t sub_1AFD8BC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  id v7;
  uint64_t v8;

  sub_1B0005020();
  swift_allocObject();
  sub_1B0005014();
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0898);
  sub_1AFD8DF00();
  v3 = sub_1B0005008();
  v5 = v4;
  result = swift_release();
  if (!v1)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults, v8);
    sub_1B00089F8();

    return sub_1AFD8DDFC(v3, v5);
  }
  return result;
}

uint64_t sub_1AFD8BD2C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_retain();
  v4 = swift_bridgeObjectRetain();
  sub_1AFD85A70(v4, a2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t WeatherProviderAttributionCacheManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t WeatherProviderAttributionCacheManager.__deallocating_deinit()
{
  WeatherProviderAttributionCacheManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AFD8BDD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AFD8BE20;
  return WeatherProviderAttributionCacheManager.attributions(for:)(a1);
}

uint64_t sub_1AFD8BE20(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_11_1();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

void sub_1AFD8BE54()
{
  WeatherProviderAttributionCacheManager.cachedAttributions(for:)();
}

uint64_t sub_1AFD8BE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1AFD8E9E4;
  return WeatherProviderAttributionCacheManager.updateAttributions(for:with:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherAlerts:)(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1AFD8BF10(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for WeatherProviderAttribution(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC93038();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1AFD8C964(v6);
  *a1 = v3;
}

uint64_t sub_1AFD8BF90(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1AFD8BFF4;
  return v6(a1);
}

uint64_t sub_1AFD8BFF4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_11_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_30(v0);
}

void sub_1AFD8C018()
{
  sub_1AFAF86C8(&qword_1ED1F0748, type metadata accessor for WeatherProviderAttribution, (uint64_t)&protocol conformance descriptor for WeatherProviderAttribution);
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherProviderAttribution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B0005710();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v12 = v6;
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for WeatherProviderAttribution(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B0005710();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for WeatherProviderAttribution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  id v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B0005710();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v11 = v5;
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for WeatherProviderAttribution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1B0005710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for WeatherProviderAttribution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1B0005710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for WeatherProviderAttribution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1B0005710();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherProviderAttribution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFD8C344()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_91_2();
  if (v1)
  {
    OUTLINED_FUNCTION_146(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_89();
    v2 = OUTLINED_FUNCTION_121_2();
    OUTLINED_FUNCTION_6_5(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for WeatherProviderAttribution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFD8C390()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_89();
    v5 = OUTLINED_FUNCTION_106_1(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_5_4(v5, v6, v7, v8);
  }
}

uint64_t sub_1AFD8C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD8C8F8(a1, a2, a3, (uint64_t)&unk_1B00380F0, MEMORY[0x1E0DE9D10] + 64, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t dispatch thunk of WeatherProviderAttributionCacheManagerType.attributions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v7 = (_QWORD *)OUTLINED_FUNCTION_89_0();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AFD8E9E0;
  return OUTLINED_FUNCTION_69_4(a1, a2, a3, v9);
}

uint64_t dispatch thunk of WeatherProviderAttributionCacheManagerType.cachedAttributions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WeatherProviderAttributionCacheManagerType.updateAttributions(for:with:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherAlerts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;

  OUTLINED_FUNCTION_98_1();
  v28 = v10;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = (_QWORD *)OUTLINED_FUNCTION_89_0();
  *(_QWORD *)(v9 + 16) = v25;
  *v25 = v9;
  v25[1] = sub_1AFD8E9E4;
  return v27(v24, v22, v20, v18, v16, v14, v12, v28, a9);
}

uint64_t type metadata accessor for WeatherProviderAttributionCacheManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for WeatherProviderAttributionCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1AFD8C524(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B00058D8();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1AFD8C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B00058D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1AFD8C624(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1B00058D8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1AFD8C6AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1AFD8C740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1AFD8C7A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1AFD8C820()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFD8C82C()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_91_2();
  if (v1)
  {
    OUTLINED_FUNCTION_146(*v0);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    sub_1B00058D8();
    v2 = OUTLINED_FUNCTION_121_2();
    OUTLINED_FUNCTION_6_5(v2, v3, v4);
  }
}

uint64_t sub_1AFD8C870()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFD8C87C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    sub_1B00058D8();
    v5 = OUTLINED_FUNCTION_106_1(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_5_4(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F07D0);
}

uint64_t sub_1AFD8C8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AFD8C8F8(a1, a2, a3, MEMORY[0x1E0DE9D18] + 64, (uint64_t)&unk_1B00380F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1AFD8C8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t result;
  unint64_t v7;

  result = a6(319);
  if (v7 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AFD8C964(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  BOOL v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;

  v2 = v1;
  v140 = type metadata accessor for WeatherProviderAttribution(0);
  v4 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v134 = (uint64_t)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v144 = (uint64_t)&v126 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v126 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v126 - v12;
  MEMORY[0x1E0C80A78](v14);
  v137 = (char **)((char *)&v126 - v15);
  MEMORY[0x1E0C80A78](v16);
  v136 = (char **)((char *)&v126 - v17);
  MEMORY[0x1E0C80A78](v18);
  v132 = (char **)((char *)&v126 - v19);
  MEMORY[0x1E0C80A78](v20);
  v131 = (char **)((char *)&v126 - v21);
  v147 = a1;
  v22 = a1[1];
  v23 = sub_1B0008F74();
  if (v23 >= v22)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22)
        sub_1AFD8D3B4(0, v22, 1, v147);
      return;
    }
    goto LABEL_159;
  }
  v24 = v23;
  v128 = sub_1AFC912A0(v22 / 2);
  v129 = v22;
  v138 = v25;
  v139 = v4;
  if (v22 <= 0)
  {
LABEL_123:
    v27 = (char *)MEMORY[0x1E0DEE9D8];
    v68 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_124:
    if (v68 < 2)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      if (v129 >= -1)
        goto LABEL_136;
      goto LABEL_163;
    }
    v119 = *v147;
    while (1)
    {
      v120 = v68 - 2;
      if (v68 < 2)
        break;
      if (!v119)
        goto LABEL_167;
      v121 = v27;
      v122 = *(_QWORD *)&v27[16 * v120 + 32];
      v123 = *(_QWORD *)&v27[16 * v68 + 24];
      sub_1AFD8D610(v119 + *(_QWORD *)(v139 + 72) * v122, v119 + *(_QWORD *)(v139 + 72) * *(_QWORD *)&v27[16 * v68 + 16], v119 + *(_QWORD *)(v139 + 72) * v123, v138);
      if (v2)
        goto LABEL_121;
      if (v123 < v122)
        goto LABEL_154;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v121 = sub_1AFC92F64();
      if (v120 >= *((_QWORD *)v121 + 2))
        goto LABEL_155;
      v124 = &v121[16 * v120 + 32];
      *(_QWORD *)v124 = v122;
      *((_QWORD *)v124 + 1) = v123;
      v125 = *((_QWORD *)v121 + 2);
      if (v68 > v125)
        goto LABEL_156;
      memmove(&v121[16 * v68 + 16], &v121[16 * v68 + 32], 16 * (v125 - v68));
      *((_QWORD *)v121 + 2) = v125 - 1;
      v68 = v125 - 1;
      v27 = v121;
      if (v125 <= 2)
        goto LABEL_135;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
    return;
  }
  v127 = v24;
  v26 = 0;
  v27 = (char *)MEMORY[0x1E0DEE9D8];
  v28 = v22;
  v143 = v10;
  v141 = v13;
  while (1)
  {
    v29 = v26;
    v30 = v26 + 1;
    v135 = v26;
    if (v26 + 1 >= v28)
    {
      v38 = v26 + 1;
    }
    else
    {
      v130 = v2;
      v31 = *v147;
      v32 = *(_QWORD *)(v4 + 72);
      v33 = v131;
      v34 = v26;
      sub_1AFAF2DFC(*v147 + v32 * v30, (uint64_t)v131, type metadata accessor for WeatherProviderAttribution);
      v142 = v31;
      v146 = v32;
      v35 = v31 + v32 * v34;
      v36 = v132;
      sub_1AFAF2DFC(v35, (uint64_t)v132, type metadata accessor for WeatherProviderAttribution);
      v37 = *v36 == *v33 && v36[1] == v33[1];
      LODWORD(v145) = v37 ? 0 : sub_1B0008FB0();
      sub_1AFAE2D74((uint64_t)v132, type metadata accessor for WeatherProviderAttribution);
      sub_1AFAE2D74((uint64_t)v131, type metadata accessor for WeatherProviderAttribution);
      v29 = v135;
      v4 = v139;
      if (v135 + 2 >= v28)
      {
        v41 = v135 + 2;
      }
      else
      {
        v39 = v146 * v30;
        v40 = v142;
        v41 = v135 + 2;
        v42 = v146 * (v135 + 2);
        while (1)
        {
          v43 = v136;
          sub_1AFAF2DFC(v40 + v42, (uint64_t)v136, type metadata accessor for WeatherProviderAttribution);
          v44 = v137;
          sub_1AFAF2DFC(v40 + v39, (uint64_t)v137, type metadata accessor for WeatherProviderAttribution);
          v45 = *v44 == *v43 && v44[1] == v43[1];
          v46 = v45 ? 0 : sub_1B0008FB0();
          sub_1AFAE2D74((uint64_t)v137, type metadata accessor for WeatherProviderAttribution);
          sub_1AFAE2D74((uint64_t)v136, type metadata accessor for WeatherProviderAttribution);
          if (((v145 ^ v46) & 1) != 0)
            break;
          v40 += v146;
          ++v41;
          v10 = v143;
          if (v41 >= v28)
          {
            v41 = v28;
            v4 = v139;
            goto LABEL_25;
          }
        }
        v4 = v139;
        v10 = v143;
LABEL_25:
        v29 = v135;
      }
      if ((v145 & 1) != 0)
      {
        if (v41 < v29)
          goto LABEL_160;
        v38 = v41;
        if (v29 < v41)
        {
          v145 = v28;
          v126 = v27;
          v47 = 0;
          v48 = v146 * (v41 - 1);
          v49 = v41 * v146;
          v50 = v29;
          v51 = v29 * v146;
          do
          {
            if (v50 != v38 + v47 - 1)
            {
              v52 = v142;
              if (!v142)
                goto LABEL_166;
              v53 = v142 + v51;
              sub_1AFAF2984(v142 + v51, v134, type metadata accessor for WeatherProviderAttribution);
              if (v51 < v48 || v53 >= v52 + v49)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v51 != v48)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1AFAF2984(v134, v52 + v48, type metadata accessor for WeatherProviderAttribution);
              v10 = v143;
              v38 = v41;
            }
            ++v50;
            --v47;
            v48 -= v146;
            v49 -= v146;
            v51 += v146;
          }
          while (v50 < v38 + v47);
          v2 = v130;
          v4 = v139;
          v27 = v126;
          v29 = v135;
          v28 = v145;
          goto LABEL_45;
        }
      }
      else
      {
        v38 = v41;
      }
      v2 = v130;
    }
LABEL_45:
    if (v38 < v28)
    {
      if (__OFSUB__(v38, v29))
        goto LABEL_158;
      if (v38 - v29 < v127)
      {
        if (__OFADD__(v29, v127))
          goto LABEL_161;
        if (v29 + v127 >= v28)
          v55 = v28;
        else
          v55 = v29 + v127;
        if (v55 < v29)
          goto LABEL_162;
        if (v38 != v55)
        {
          v56 = v10;
          v126 = v27;
          v130 = v2;
          v142 = *(_QWORD *)(v4 + 72);
          v145 = v38 * v142;
          v146 = v142 * (v38 - 1);
          v133 = v55;
          do
          {
            v57 = 0;
            v58 = v135;
            while (1)
            {
              v59 = *v147;
              v60 = v141;
              sub_1AFAF2DFC(v145 + v57 + *v147, (uint64_t)v141, type metadata accessor for WeatherProviderAttribution);
              sub_1AFAF2DFC(v146 + v57 + v59, (uint64_t)v56, type metadata accessor for WeatherProviderAttribution);
              if (*(_QWORD *)v56 == *v60 && *((_QWORD *)v56 + 1) == v60[1])
                break;
              v62 = sub_1B0008FB0();
              sub_1AFAE2D74((uint64_t)v56, type metadata accessor for WeatherProviderAttribution);
              sub_1AFAE2D74((uint64_t)v60, type metadata accessor for WeatherProviderAttribution);
              if ((v62 & 1) == 0)
                goto LABEL_65;
              v63 = *v147;
              if (!*v147)
                goto LABEL_164;
              v64 = v63 + v146 + v57;
              sub_1AFAF2984(v63 + v145 + v57, v144, type metadata accessor for WeatherProviderAttribution);
              swift_arrayInitWithTakeFrontToBack();
              sub_1AFAF2984(v144, v64, type metadata accessor for WeatherProviderAttribution);
              v56 = v143;
              v57 -= v142;
              if (v38 == ++v58)
                goto LABEL_65;
            }
            sub_1AFAE2D74((uint64_t)v56, type metadata accessor for WeatherProviderAttribution);
            sub_1AFAE2D74((uint64_t)v60, type metadata accessor for WeatherProviderAttribution);
LABEL_65:
            ++v38;
            v146 += v142;
            v145 += v142;
          }
          while (v38 != v133);
          v38 = v133;
          v2 = v130;
          v27 = v126;
          v10 = v56;
          v29 = v135;
        }
      }
    }
    if (v38 < v29)
      goto LABEL_157;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v146 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v27 = sub_1AFC92E70(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v67 = *((_QWORD *)v27 + 2);
    v66 = *((_QWORD *)v27 + 3);
    v68 = v67 + 1;
    if (v67 >= v66 >> 1)
      v27 = sub_1AFC92E70((char *)(v66 > 1), v67 + 1, 1, v27);
    v69 = v2;
    *((_QWORD *)v27 + 2) = v68;
    v70 = v27 + 32;
    v71 = &v27[16 * v67 + 32];
    v72 = v146;
    *(_QWORD *)v71 = v135;
    *((_QWORD *)v71 + 1) = v72;
    if (v67)
      break;
    v68 = 1;
LABEL_115:
    v28 = v147[1];
    v26 = v146;
    v2 = v69;
    v4 = v139;
    if (v146 >= v28)
      goto LABEL_124;
  }
  while (1)
  {
    v73 = v68 - 1;
    if (v68 >= 4)
    {
      v78 = &v70[16 * v68];
      v79 = *((_QWORD *)v78 - 8);
      v80 = *((_QWORD *)v78 - 7);
      v84 = __OFSUB__(v80, v79);
      v81 = v80 - v79;
      if (v84)
        goto LABEL_142;
      v83 = *((_QWORD *)v78 - 6);
      v82 = *((_QWORD *)v78 - 5);
      v84 = __OFSUB__(v82, v83);
      v76 = v82 - v83;
      v77 = v84;
      if (v84)
        goto LABEL_143;
      v85 = v68 - 2;
      v86 = &v70[16 * v68 - 32];
      v88 = *(_QWORD *)v86;
      v87 = *((_QWORD *)v86 + 1);
      v84 = __OFSUB__(v87, v88);
      v89 = v87 - v88;
      if (v84)
        goto LABEL_144;
      v84 = __OFADD__(v76, v89);
      v90 = v76 + v89;
      if (v84)
        goto LABEL_146;
      if (v90 >= v81)
      {
        v108 = &v70[16 * v73];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v84 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v84)
          goto LABEL_152;
        v101 = v76 < v111;
        goto LABEL_104;
      }
    }
    else
    {
      if (v68 != 3)
      {
        v102 = *((_QWORD *)v27 + 4);
        v103 = *((_QWORD *)v27 + 5);
        v84 = __OFSUB__(v103, v102);
        v95 = v103 - v102;
        v96 = v84;
        goto LABEL_98;
      }
      v75 = *((_QWORD *)v27 + 4);
      v74 = *((_QWORD *)v27 + 5);
      v84 = __OFSUB__(v74, v75);
      v76 = v74 - v75;
      v77 = v84;
    }
    if ((v77 & 1) != 0)
      goto LABEL_145;
    v85 = v68 - 2;
    v91 = &v70[16 * v68 - 32];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v94 = __OFSUB__(v92, v93);
    v95 = v92 - v93;
    v96 = v94;
    if (v94)
      goto LABEL_147;
    v97 = &v70[16 * v73];
    v99 = *(_QWORD *)v97;
    v98 = *((_QWORD *)v97 + 1);
    v84 = __OFSUB__(v98, v99);
    v100 = v98 - v99;
    if (v84)
      goto LABEL_149;
    if (__OFADD__(v95, v100))
      goto LABEL_151;
    if (v95 + v100 >= v76)
    {
      v101 = v76 < v100;
LABEL_104:
      if (v101)
        v73 = v85;
      goto LABEL_106;
    }
LABEL_98:
    if ((v96 & 1) != 0)
      goto LABEL_148;
    v104 = &v70[16 * v73];
    v106 = *(_QWORD *)v104;
    v105 = *((_QWORD *)v104 + 1);
    v84 = __OFSUB__(v105, v106);
    v107 = v105 - v106;
    if (v84)
      goto LABEL_150;
    if (v107 < v95)
      goto LABEL_115;
LABEL_106:
    v112 = v73 - 1;
    if (v73 - 1 >= v68)
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    if (!*v147)
      goto LABEL_165;
    v113 = v27;
    v114 = &v70[16 * v112];
    v115 = *(_QWORD *)v114;
    v116 = &v70[16 * v73];
    v117 = *((_QWORD *)v116 + 1);
    sub_1AFD8D610(*v147 + *(_QWORD *)(v139 + 72) * *(_QWORD *)v114, *v147 + *(_QWORD *)(v139 + 72) * *(_QWORD *)v116, *v147 + *(_QWORD *)(v139 + 72) * v117, v138);
    if (v69)
      break;
    if (v117 < v115)
      goto LABEL_139;
    if (v73 > *((_QWORD *)v113 + 2))
      goto LABEL_140;
    *(_QWORD *)v114 = v115;
    *(_QWORD *)&v70[16 * v112 + 8] = v117;
    v118 = *((_QWORD *)v113 + 2);
    if (v73 >= v118)
      goto LABEL_141;
    v27 = v113;
    v68 = v118 - 1;
    memmove(&v70[16 * v73], v116 + 16, 16 * (v118 - 1 - v73));
    *((_QWORD *)v113 + 2) = v118 - 1;
    v10 = v143;
    if (v118 <= 2)
      goto LABEL_115;
  }
  v2 = v69;
LABEL_121:
  swift_bridgeObjectRelease();
  if (v129 < -1)
  {
    __break(1u);
    goto LABEL_123;
  }
LABEL_136:
  *(_QWORD *)(v128 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1AFD8D3B4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v31 = type metadata accessor for WeatherProviderAttribution(0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v28 - v9);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v28 - v13);
  v34 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v37 = v15 * (v34 - 1);
    v32 = (char *)&v28 - v13;
    v33 = v15;
    v36 = v15 * v34;
    v16 = type metadata accessor for WeatherProviderAttribution;
    while (2)
    {
      v17 = 0;
      v18 = v30;
      while (1)
      {
        v19 = *a4;
        sub_1AFAF2DFC(v36 + v17 + *a4, (uint64_t)v14, v16);
        sub_1AFAF2DFC(v37 + v17 + v19, (uint64_t)v10, v16);
        if (*v10 == *v14 && v10[1] == v14[1])
          break;
        v21 = sub_1B0008FB0();
        sub_1AFAE2D74((uint64_t)v10, v16);
        sub_1AFAE2D74((uint64_t)v14, v16);
        if ((v21 & 1) != 0)
        {
          v22 = *a4;
          if (!*a4)
          {
            __break(1u);
            return;
          }
          v23 = v10;
          v24 = v16;
          v25 = a4;
          v26 = v22 + v37 + v17;
          v27 = v24;
          sub_1AFAF2984(v22 + v36 + v17, v35, v24);
          swift_arrayInitWithTakeFrontToBack();
          sub_1AFAF2984(v35, v26, v27);
          v17 -= v33;
          ++v18;
          a4 = v25;
          v16 = v27;
          v10 = v23;
          v14 = v32;
          if (v34 != v18)
            continue;
        }
        goto LABEL_13;
      }
      sub_1AFAE2D74((uint64_t)v10, v16);
      sub_1AFAE2D74((uint64_t)v14, v16);
LABEL_13:
      v37 += v33;
      v36 += v33;
      if (++v34 != v29)
        continue;
      break;
    }
  }
}

void sub_1AFD8D610(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int64_t v18;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  BOOL v35;
  unint64_t v36;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  char v45;
  int64_t v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v52 = a4;
  v54 = a3;
  v53 = type metadata accessor for WeatherProviderAttribution(0);
  MEMORY[0x1E0C80A78](v53);
  v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t *)((char *)&v51 - v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v51 - v11);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v51 - v15);
  v17 = *(_QWORD *)(v14 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_88;
  v20 = v54 - a2;
  if (v54 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_89;
  v22 = v18 / v17;
  v23 = v20 / v17;
  v56 = *(_QWORD *)(v14 + 72);
  if (v18 / v17 >= v20 / v17)
  {
    v36 = v52;
    sub_1AFBA7E58(a2, v20 / v17);
    v26 = v36 + v23 * v17;
    if (v23 * v17 < 1 || a1 >= a2)
    {
      v24 = v52;
    }
    else
    {
      v55 = -v17;
      v38 = v54;
      do
      {
        v39 = v38;
        v54 = v26;
        v40 = v55;
        v41 = v26 + v55;
        v42 = v57;
        sub_1AFAF2DFC(v26 + v55, (uint64_t)v57, type metadata accessor for WeatherProviderAttribution);
        v43 = a2 + v40;
        sub_1AFAF2DFC(a2 + v40, (uint64_t)v7, type metadata accessor for WeatherProviderAttribution);
        if (*v7 == *v42 && v7[1] == v42[1])
          v45 = 0;
        else
          v45 = sub_1B0008FB0();
        v38 = v39 + v55;
        sub_1AFAE2D74((uint64_t)v7, type metadata accessor for WeatherProviderAttribution);
        sub_1AFAE2D74((uint64_t)v57, type metadata accessor for WeatherProviderAttribution);
        if ((v45 & 1) != 0)
        {
          if (v39 < a2 || v38 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            a2 = v43;
            v26 = v54;
          }
          else
          {
            if (v39 != a2)
              swift_arrayInitWithTakeBackToFront();
            a2 = v43;
            v26 = v54;
          }
        }
        else if (v39 < v54 || v38 >= v54)
        {
          swift_arrayInitWithTakeFrontToBack();
          v26 = v41;
        }
        else
        {
          if (v39 != v54)
            swift_arrayInitWithTakeBackToFront();
          v26 = v41;
        }
      }
      while (v26 > v52 && a2 > a1);
      v24 = v52;
    }
  }
  else
  {
    v24 = v52;
    sub_1AFBA7E58(a1, v18 / v17);
    v25 = v22 * v17;
    v26 = v24 + v22 * v17;
    if (v25 >= 1 && a2 < v54)
    {
      while (1)
      {
        sub_1AFAF2DFC(a2, (uint64_t)v16, type metadata accessor for WeatherProviderAttribution);
        sub_1AFAF2DFC(v24, (uint64_t)v12, type metadata accessor for WeatherProviderAttribution);
        if (*v12 == *v16 && v12[1] == v16[1])
          break;
        v29 = sub_1B0008FB0();
        sub_1AFAE2D74((uint64_t)v12, type metadata accessor for WeatherProviderAttribution);
        sub_1AFAE2D74((uint64_t)v16, type metadata accessor for WeatherProviderAttribution);
        if ((v29 & 1) == 0)
          goto LABEL_27;
        v30 = v56;
        v31 = a2 + v56;
        if (a1 < a2 || a1 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_39:
          v30 = v56;
          goto LABEL_40;
        }
        if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_39;
        }
LABEL_40:
        a1 += v30;
        v35 = v24 >= v26 || v31 >= v54;
        a2 = v31;
        if (v35)
          goto LABEL_82;
      }
      sub_1AFAE2D74((uint64_t)v12, type metadata accessor for WeatherProviderAttribution);
      sub_1AFAE2D74((uint64_t)v16, type metadata accessor for WeatherProviderAttribution);
LABEL_27:
      v30 = v56;
      v33 = v24 + v56;
      if (a1 < v24 || a1 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (a1 == v24)
        {
LABEL_36:
          v31 = a2;
          v24 = v33;
          goto LABEL_40;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = v56;
      goto LABEL_36;
    }
  }
LABEL_82:
  v49 = v26 - v24;
  if (v56 != -1 || v49 != 0x8000000000000000)
  {
    sub_1AFBA7E58(v24, v49 / v56);
    return;
  }
LABEL_90:
  __break(1u);
}

uint64_t sub_1AFD8DA7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1AFD8DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  v13 = sub_1AFD8DC48(a1, (uint64_t)v11, v12, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, a4);
  return v13;
}

uint64_t sub_1AFD8DB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];

  v9[3] = type metadata accessor for WeatherProviderAttributionImageCache();
  v9[4] = &protocol witness table for WeatherProviderAttributionImageCache;
  v9[0] = a2;
  type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  v6 = sub_1B0008488();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F08F0);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = a1;
  sub_1AFD8DD20((uint64_t)v9, a3 + 32);
  swift_retain();
  sub_1AFD871DC();
  sub_1AFD8754C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return a3;
}

uint64_t sub_1AFD8DC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[5];

  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry(0);
  v10 = sub_1B0008488();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F08F0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = a1;
  sub_1AFD8DD20((uint64_t)v13, a3 + 32);
  swift_retain();
  sub_1AFD871DC();
  sub_1AFD8754C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return a3;
}

uint64_t sub_1AFD8DD20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(uint64_t a1)
{
  return sub_1AFAE79F4(a1, (uint64_t *)&unk_1ED1F0798);
}

unint64_t sub_1AFD8DD78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED1F08A8;
  if (!qword_1ED1F08A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F0898);
    sub_1AFAF86C8(&qword_1ED1F07C8, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry, (uint64_t)&unk_1B00381E4);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED1F08A8);
  }
  return result;
}

uint64_t sub_1AFD8DDFC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1AFD8DE40()
{
  unint64_t result;

  result = qword_1ED1F07A8;
  if (!qword_1ED1F07A8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038398, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F07A8);
  }
  return result;
}

uint64_t sub_1AFD8DE7C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F08B8);
    sub_1AFAF86C8(a2, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails, a3);
    v11 = v10;
    result = MEMORY[0x1B5E03BF4](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AFD8DF00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED1F08A0;
  if (!qword_1ED1F08A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F0898);
    sub_1AFAF86C8(&qword_1ED1F07C0, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry, (uint64_t)&unk_1B00381BC);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED1F08A0);
  }
  return result;
}

uint64_t sub_1AFD8DF84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1AFD8DFF0;
  return sub_1AFD8A64C(a1, a2, v7, v6);
}

uint64_t sub_1AFD8DFF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_30(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AFD8E014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_89();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_3(*(int *)(v4 + 20));
  OUTLINED_FUNCTION_111_3(*(int *)(v4 + 24));
  return swift_deallocObject();
}

uint64_t sub_1AFD8E0D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_81_3();
  v3 = v2;
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_89() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails(0)
                                      - 8)
                          + 80);
  v8 = v5 + v6 + v7;
  v9 = v0[2];
  v10 = v0[3];
  v11 = v0[4];
  v12 = (uint64_t)v0 + v5;
  v13 = (uint64_t)v0 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_1AFD8E9E4;
  return sub_1AFD8AE48(v3, v9, v10, v11, v12, v13);
}

uint64_t sub_1AFD8E18C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AFD8E1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AFD8DFF0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EEE73BA0 + dword_1EEE73BA0))(a1, v4);
}

unint64_t sub_1AFD8E220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE73BB8;
  if (!qword_1EEE73BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73BB0);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DF0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE73BB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys()
{
  return &type metadata for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys;
}

char *sub_1AFD8E27C(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1B0005710();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  }
  return v4;
}

uint64_t sub_1AFD8E33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B0005710();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *sub_1AFD8E3B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B0005710();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

char *sub_1AFD8E448(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005710();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_1AFD8E4EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B0005710();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_1AFD8E578(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B0005710();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

uint64_t sub_1AFD8E60C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFD8E618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_91_2();
  if (v3)
  {
    OUTLINED_FUNCTION_146(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_6_5(v0 + *(int *)(v4 + 20), v5, v6);
  }
}

uint64_t sub_1AFD8E664()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFD8E670()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_89();
    v5 = OUTLINED_FUNCTION_106_1(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_5_4(v5, v6, v7, v8);
  }
}

uint64_t sub_1AFD8E6B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B0005710();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AFD8E728()
{
  sub_1AFAF86C8(&qword_1ED1F0788, type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails, (uint64_t)&unk_1B0038268);
}

unint64_t sub_1AFD8E758()
{
  unint64_t result;

  result = qword_1EEE73BC8;
  if (!qword_1EEE73BC8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038320, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE73BC8);
  }
  return result;
}

unint64_t sub_1AFD8E798()
{
  unint64_t result;

  result = qword_1ED1F07B8;
  if (!qword_1ED1F07B8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038290, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F07B8);
  }
  return result;
}

unint64_t sub_1AFD8E7D8()
{
  unint64_t result;

  result = qword_1ED1F07B0;
  if (!qword_1ED1F07B0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00382B8, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetailsCacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F07B0);
  }
  return result;
}

unint64_t sub_1AFD8E814()
{
  unint64_t result;

  result = qword_1ED1F0768;
  if (!qword_1ED1F0768)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00384A0, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F0768);
  }
  return result;
}

uint64_t _s9WeatherUI38WeatherProviderAttributionCacheManagerC25ProviderDetailsCacheEntryV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AFD8E89C + 4 * byte_1B0038015[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AFD8E8D0 + 4 * byte_1B0038010[v4]))();
}

uint64_t sub_1AFD8E8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD8E8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFD8E8E0);
  return result;
}

uint64_t sub_1AFD8E8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFD8E8F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AFD8E8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFD8E900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys()
{
  return &type metadata for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys;
}

unint64_t sub_1AFD8E920()
{
  unint64_t result;

  result = qword_1EEE73BD0;
  if (!qword_1EEE73BD0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038478, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE73BD0);
  }
  return result;
}

unint64_t sub_1AFD8E960()
{
  unint64_t result;

  result = qword_1ED1F0778;
  if (!qword_1ED1F0778)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00383E8, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F0778);
  }
  return result;
}

unint64_t sub_1AFD8E9A0()
{
  unint64_t result;

  result = qword_1ED1F0770;
  if (!qword_1ED1F0770)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038410, &type metadata for WeatherProviderAttributionCacheManager.ProviderDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1F0770);
  }
  return result;
}

void OUTLINED_FUNCTION_83_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1AFAF2558(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return sub_1B00084D0();
}

void OUTLINED_FUNCTION_101_2()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_113_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_121_2()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_122_1()
{
  return sub_1B0005ED8();
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_125_1(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AFD0B53C(a1, a2, 1, v2);
}

void sub_1AFD8EA90()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 6;
  v31 = 0x617274736F746C41;
  v32 = 0xEF53202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0050E80;
  v35 = 6;
  v27 = 0xEF53202D20737574;
  v28 = 0xD000000000000013;
  v29 = 0x80000001B0050E80;
  v30 = 6;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB000000004D202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF4D656C676E6953;
  v25 = 10;
  v26 = 0x617274736F746C41;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFD8F258();
  sub_1AFD92470();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V4.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3B03126F3F800000;
  *((_QWORD *)&v14 + 1) = 0x4120000000000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v36, 25, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x42400000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003D23D70ALL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFD8F258()
{
  uint64_t v0;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int64x2_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v77 = xmmword_1B0025DD0;
  v78 = xmmword_1B0025DE0;
  v75 = xmmword_1B0025DF0;
  v76 = xmmword_1B0025E00;
  v73 = xmmword_1B0025E10;
  v74 = xmmword_1B0025E20;
  __asm { FMOV            V2.2D, #1.0 }
  v71 = _Q2;
  v72 = _Q2;
  v69 = _Q2;
  v70 = xmmword_1B0025E50;
  v67 = _Q2;
  v68 = _Q2;
  v65 = _Q2;
  v66 = _Q2;
  v63 = _Q2;
  v64 = _Q2;
  v61 = xmmword_1B0025E80;
  v62 = _Q2;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = _Q2;
  v58 = _Q2;
  v55 = _Q2;
  v56 = _Q2;
  v53 = _Q2;
  v54 = _Q2;
  v51 = _Q2;
  v52 = _Q2;
  v49 = _Q2;
  v50 = _Q2;
  v47 = _Q2;
  v48 = _Q2;
  v45 = _Q2;
  v46 = _Q2;
  v43 = _Q2;
  v44 = _Q2;
  v41 = _Q2;
  v42 = _Q2;
  v39 = _Q2;
  v40 = _Q2;
  v37 = _Q2;
  v38 = _Q2;
  v35 = _Q2;
  v36 = _Q2;
  v33 = _Q2;
  v34 = _Q2;
  v31 = _Q2;
  v32 = _Q2;
  v29 = _Q2;
  v30 = _Q2;
  v27 = _Q2;
  v28 = _Q2;
  v25 = _Q2;
  v26 = _Q2;
  v23 = _Q2;
  v24 = _Q2;
  v21 = _Q2;
  v22 = _Q2;
  v19 = _Q2;
  v20 = _Q2;
  v17 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v18 = xmmword_1B0025EA0;
  v15 = xmmword_1B0025EB0;
  v16 = xmmword_1B0025EC0;
  v8 = _Q2;
  v13 = _Q2;
  v14 = _Q2;
  v11 = _Q2;
  v12 = _Q2;
  v9 = _Q2;
  v10 = _Q2;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v63, &v61,
    0x3F8000003F000000,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025DD0;
  v78 = xmmword_1B0025DE0;
  v75 = xmmword_1B0025DF0;
  v76 = xmmword_1B0025E00;
  v73 = xmmword_1B0025E10;
  v74 = xmmword_1B0025E20;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = v8;
  v61 = xmmword_1B0025E80;
  v62 = v8;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v18 = xmmword_1B0025EE0;
  v15 = xmmword_1B0025EF0;
  v16 = xmmword_1B0025F00;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v63, &v61,
    0x3F8000003F000000,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025F10;
  v78 = v8;
  v75 = xmmword_1B00273F0;
  v76 = xmmword_1B0025F30;
  v73 = xmmword_1B0025F40;
  v74 = v8;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = xmmword_1B0026900;
  v66 = xmmword_1B0026910;
  v63 = xmmword_1B0025F80;
  v64 = xmmword_1B0026140;
  v61 = xmmword_1B0025F90;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030C00;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = vdupq_n_s64(0x3FCF992720000000uLL);
  v18 = xmmword_1B0025FB0;
  v15 = xmmword_1B0025FC0;
  v16 = xmmword_1B0025FD0;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 2464, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.5, 0.8, 0.8, &v63, &v61,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025FE0;
  v78 = v8;
  v75 = xmmword_1B0025FF0;
  v76 = xmmword_1B0026000;
  v73 = xmmword_1B0026010;
  v74 = xmmword_1B0026020;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026050;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026080;
  v18 = xmmword_1B0026090;
  v15 = xmmword_1B00260A0;
  v16 = xmmword_1B0026090;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 3680, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.5, 0.85, 0.85, &v63, &v61,
    0x3F59999A3F59999ALL,
    0,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0026F60;
  v78 = xmmword_1B0026F70;
  v75 = xmmword_1B00260E0;
  v76 = xmmword_1B00260F0;
  v73 = xmmword_1B0026F80;
  v74 = xmmword_1B0026F90;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = xmmword_1B0026FD0;
  v64 = xmmword_1B0026160;
  v61 = xmmword_1B0026170;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026180;
  v18 = xmmword_1B0026190;
  v15 = xmmword_1B00261A0;
  v16 = xmmword_1B0026190;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0026FE0;
  v78 = xmmword_1B0026FF0;
  v75 = xmmword_1B0030C10;
  v76 = xmmword_1B0030C20;
  v73 = xmmword_1B0026200;
  v74 = xmmword_1B0026210;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = xmmword_1B0027040;
  v64 = xmmword_1B0027050;
  v61 = xmmword_1B0026240;
  v62 = xmmword_1B0026250;
  v59 = xmmword_1B0030C00;
  v60 = xmmword_1B0030C30;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026280;
  v18 = xmmword_1B0026290;
  v15 = xmmword_1B00262A0;
  v16 = xmmword_1B0026290;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.7, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027060;
  v78 = xmmword_1B00262C0;
  v75 = xmmword_1B0030C40;
  v76 = xmmword_1B00263D0;
  v73 = xmmword_1B00262E0;
  v74 = xmmword_1B00262F0;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026300;
  v62 = xmmword_1B0026310;
  v59 = xmmword_1B0030C50;
  v60 = xmmword_1B0030C60;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026340;
  v18 = xmmword_1B0026130;
  v15 = xmmword_1B0026350;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.6, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027080;
  v78 = xmmword_1B00262C0;
  v75 = xmmword_1B00384F0;
  v76 = v8;
  v73 = v8;
  v74 = v8;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0027090;
  v62 = v8;
  v59 = xmmword_1B0038500;
  v60 = xmmword_1B0030C60;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026390;
  v18 = xmmword_1B00281D0;
  v15 = xmmword_1B002E3A0;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1200.0, 20.0, 0.6, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027060;
  v78 = xmmword_1B00262C0;
  v75 = xmmword_1B0030C80;
  v76 = xmmword_1B0030C90;
  v73 = xmmword_1B00263E0;
  v74 = xmmword_1B00263F0;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = xmmword_1B0026220;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026220;
  v62 = v8;
  v59 = xmmword_1B0030CA0;
  v60 = xmmword_1B0030CB0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026390;
  v18 = xmmword_1B0026400;
  v15 = xmmword_1B0026410;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027060;
  v78 = xmmword_1B00262C0;
  v75 = xmmword_1B0030C80;
  v76 = xmmword_1B0030C90;
  v73 = xmmword_1B00263E0;
  v74 = xmmword_1B00263F0;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = xmmword_1B0026220;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026220;
  v62 = v8;
  v59 = xmmword_1B0030CC0;
  v60 = xmmword_1B0030CD0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026430;
  v18 = xmmword_1B0026400;
  v15 = xmmword_1B00263A0;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027080;
  v78 = xmmword_1B00262C0;
  v75 = xmmword_1B0030CE0;
  v76 = v8;
  v73 = v8;
  v74 = v8;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = v8;
  v62 = v8;
  v59 = xmmword_1B0038500;
  v60 = xmmword_1B0030C60;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026430;
  v18 = xmmword_1B00281D0;
  v15 = xmmword_1B002E3B0;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1200.0, 20.0, 0.6, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B00270A0;
  v78 = xmmword_1B0026470;
  v75 = xmmword_1B0030CF0;
  v76 = xmmword_1B0030D00;
  v73 = xmmword_1B00262E0;
  v74 = xmmword_1B00262F0;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B00264C0;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030C50;
  v60 = xmmword_1B0030C60;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026430;
  v18 = xmmword_1B0026130;
  v15 = xmmword_1B00264E0;
  v16 = xmmword_1B0026140;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 13408, 12.0, (__n128)xmmword_1B0030D10, 900.0, 0.0, 0.6, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B00274A0;
  v78 = xmmword_1B00274B0;
  v75 = xmmword_1B0030D20;
  v76 = xmmword_1B0030D30;
  v73 = xmmword_1B00270F0;
  v74 = xmmword_1B0027100;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = xmmword_1B0026560;
  v66 = xmmword_1B0027130;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026590;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030C00;
  v60 = xmmword_1B0030C30;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B00265B0;
  v18 = xmmword_1B00265C0;
  v15 = xmmword_1B00265D0;
  v16 = xmmword_1B00265E0;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 14624, 6.0, (__n128)xmmword_1B0030D40, 750.0, 800.0, 0.7, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0027500;
  v78 = xmmword_1B0027510;
  v75 = xmmword_1B0027520;
  v76 = xmmword_1B0027530;
  v73 = xmmword_1B0027160;
  v74 = xmmword_1B0027170;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B00271A0;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026170;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026690;
  v18 = xmmword_1B00266A0;
  v15 = xmmword_1B00266B0;
  v16 = xmmword_1B00266C0;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1600.0, 0.8, 1.0, 0.9, 0.9, &v63, &v61,
    0x3F6666663F666666,
    0,
    &v59,
    0,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0030D50;
  v78 = v8;
  v75 = xmmword_1B0026700;
  v76 = xmmword_1B0026710;
  v73 = xmmword_1B0030D60;
  v74 = xmmword_1B0030D70;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = xmmword_1B00271C0;
  v63 = v8;
  v64 = xmmword_1B0025E50;
  v61 = xmmword_1B0026050;
  v62 = xmmword_1B0025FA0;
  v59 = xmmword_1B0030C00;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026750;
  v18 = xmmword_1B0026760;
  v15 = xmmword_1B0026770;
  v16 = xmmword_1B0026780;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.5, 0.85, 0.85, &v63, &v61,
    0x3F59999A3F59999ALL,
    0,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025F10;
  v78 = v8;
  v74 = v8;
  v75 = xmmword_1B00273F0;
  v76 = xmmword_1B0025F30;
  v73 = xmmword_1B0025F40;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = xmmword_1B0026900;
  v66 = xmmword_1B0026910;
  v63 = xmmword_1B0027200;
  v64 = xmmword_1B0026140;
  v61 = xmmword_1B0025F90;
  v62 = xmmword_1B0027210;
  v59 = xmmword_1B0030C00;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = (int64x2_t)xmmword_1B0026800;
  v18 = xmmword_1B0027930;
  v15 = xmmword_1B0026810;
  v16 = xmmword_1B0027930;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 18272, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.5, 0.8, 0.8, &v63, &v61,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025DD0;
  v78 = xmmword_1B0025DE0;
  v75 = xmmword_1B0025DF0;
  v76 = xmmword_1B0025E00;
  v73 = xmmword_1B0025E10;
  v74 = xmmword_1B0025E20;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = v8;
  v61 = xmmword_1B0025E80;
  v62 = v8;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  __asm { FMOV            V0.2D, #0.25 }
  v17 = _Q0;
  v18 = xmmword_1B0025EA0;
  v15 = xmmword_1B0026820;
  v16 = xmmword_1B0025EA0;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v63, &v61,
    0x3F8000003F000000,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  v77 = xmmword_1B0025DD0;
  v78 = xmmword_1B0025DE0;
  v75 = xmmword_1B0025DF0;
  v76 = xmmword_1B0025E00;
  v73 = xmmword_1B0025E10;
  v74 = xmmword_1B0025E20;
  v71 = v8;
  v72 = v8;
  v69 = v8;
  v70 = xmmword_1B0025E50;
  v67 = v8;
  v68 = v8;
  v65 = v8;
  v66 = v8;
  v63 = v8;
  v64 = v8;
  v61 = xmmword_1B0025E80;
  v62 = v8;
  v59 = xmmword_1B0030BE0;
  v60 = xmmword_1B0030BF0;
  v57 = v8;
  v58 = v8;
  v55 = v8;
  v56 = v8;
  v53 = v8;
  v54 = v8;
  v51 = v8;
  v52 = v8;
  v49 = v8;
  v50 = v8;
  v47 = v8;
  v48 = v8;
  v45 = v8;
  v46 = v8;
  v43 = v8;
  v44 = v8;
  v41 = v8;
  v42 = v8;
  v39 = v8;
  v40 = v8;
  v37 = v8;
  v38 = v8;
  v35 = v8;
  v36 = v8;
  v33 = v8;
  v34 = v8;
  v31 = v8;
  v32 = v8;
  v29 = v8;
  v30 = v8;
  v27 = v8;
  v28 = v8;
  v25 = v8;
  v26 = v8;
  v23 = v8;
  v24 = v8;
  v21 = v8;
  v22 = v8;
  v19 = v8;
  v20 = v8;
  v17 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v18 = xmmword_1B0025EA0;
  v15 = xmmword_1B0026830;
  v16 = xmmword_1B0026840;
  v13 = v8;
  v14 = v8;
  v11 = v8;
  v12 = v8;
  v9 = v8;
  v10 = v8;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v77, &v75, &v73, &v71, &v69, &v67, &v65, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v63, &v61,
    0x3F8000003F000000,
    1061997773,
    &v59,
    1065353216,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    &v13,
    0,
    1097859072,
    &v11,
    (uint64_t)&v9);
  return v0;
}

uint64_t sub_1AFD92470()
{
  uint64_t v0;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int64x2_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  __asm { FMOV            V2.2D, #1.0 }
  v73 = _Q2;
  v74 = _Q2;
  v71 = _Q2;
  v72 = xmmword_1B0025E50;
  v69 = _Q2;
  v70 = _Q2;
  v67 = _Q2;
  v68 = _Q2;
  v65 = _Q2;
  v66 = _Q2;
  v63 = xmmword_1B0025E80;
  v64 = _Q2;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = _Q2;
  v60 = _Q2;
  v57 = _Q2;
  v58 = _Q2;
  v55 = _Q2;
  v56 = _Q2;
  v53 = _Q2;
  v54 = _Q2;
  v51 = _Q2;
  v52 = _Q2;
  v49 = _Q2;
  v50 = _Q2;
  v47 = _Q2;
  v48 = _Q2;
  v45 = _Q2;
  v46 = _Q2;
  v43 = _Q2;
  v44 = _Q2;
  v41 = _Q2;
  v42 = _Q2;
  v39 = _Q2;
  v40 = _Q2;
  v37 = _Q2;
  v38 = _Q2;
  v35 = _Q2;
  v36 = _Q2;
  v33 = _Q2;
  v34 = _Q2;
  v31 = _Q2;
  v32 = _Q2;
  v29 = _Q2;
  v30 = _Q2;
  v27 = _Q2;
  v28 = _Q2;
  v25 = _Q2;
  v26 = _Q2;
  v23 = _Q2;
  v24 = _Q2;
  v21 = _Q2;
  v22 = _Q2;
  v10 = _Q2;
  v19 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0025EB0;
  v18 = xmmword_1B0025EC0;
  v15 = xmmword_1B0026860;
  v16 = _Q2;
  v13 = xmmword_1B0026870;
  v14 = xmmword_1B0026880;
  v11 = xmmword_1B0026890;
  v12 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1123680256,
    1092616192,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v20 = xmmword_1B0025EE0;
  v17 = xmmword_1B0025EF0;
  v18 = xmmword_1B0025F00;
  v15 = xmmword_1B0026860;
  v16 = v10;
  v13 = xmmword_1B00268C0;
  v14 = xmmword_1B0026880;
  v11 = xmmword_1B00268D0;
  v12 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1123680256,
    1092616192,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025F10;
  v80 = v10;
  v77 = xmmword_1B00273F0;
  v78 = xmmword_1B0025F30;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026900;
  v68 = xmmword_1B0026910;
  v65 = xmmword_1B0025F80;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030C00;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCF992720000000uLL);
  v20 = xmmword_1B0025FB0;
  v17 = xmmword_1B0025FC0;
  v18 = xmmword_1B0025FD0;
  v15 = xmmword_1B0026920;
  v16 = v10;
  v13 = xmmword_1B0027240;
  v14 = xmmword_1B0026C50;
  v11 = xmmword_1B0027250;
  v12 = xmmword_1B0027260;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 2464, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.5, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1119092736,
    1092616192,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025FE0;
  v80 = v10;
  v77 = xmmword_1B0025FF0;
  v78 = xmmword_1B0026000;
  v75 = xmmword_1B0026010;
  v76 = xmmword_1B0026020;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026080;
  v20 = xmmword_1B0026090;
  v17 = xmmword_1B00260A0;
  v18 = xmmword_1B0026090;
  v15 = xmmword_1B0026970;
  v16 = v10;
  v13 = xmmword_1B0026BC0;
  v14 = xmmword_1B00269C0;
  v11 = xmmword_1B0027270;
  v12 = xmmword_1B0027280;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 3680, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.5, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    0,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1106247680,
    1101004800,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026F60;
  v80 = xmmword_1B0026F70;
  v77 = xmmword_1B00260E0;
  v78 = xmmword_1B00260F0;
  v75 = xmmword_1B0026F80;
  v76 = xmmword_1B0026F90;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026FD0;
  v66 = xmmword_1B0026160;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026180;
  v20 = xmmword_1B0026190;
  v17 = xmmword_1B00261A0;
  v18 = xmmword_1B0026190;
  v15 = xmmword_1B0026970;
  v16 = v10;
  v13 = xmmword_1B0027290;
  v14 = xmmword_1B00269C0;
  v11 = xmmword_1B00269D0;
  v12 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1101004800,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026FE0;
  v80 = xmmword_1B0026FF0;
  v77 = xmmword_1B0030C10;
  v78 = xmmword_1B0030C20;
  v75 = xmmword_1B0026200;
  v76 = xmmword_1B0026210;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0027040;
  v66 = xmmword_1B0027050;
  v63 = xmmword_1B0026240;
  v64 = xmmword_1B0026250;
  v61 = xmmword_1B0030C00;
  v62 = xmmword_1B0030C30;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026280;
  v20 = xmmword_1B0026290;
  v17 = xmmword_1B00262A0;
  v18 = xmmword_1B0026290;
  v15 = v10;
  v16 = v10;
  v13 = xmmword_1B00272A0;
  v14 = xmmword_1B00267B0;
  v11 = xmmword_1B0026A10;
  v12 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.7, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0030C40;
  v78 = xmmword_1B00263D0;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026300;
  v64 = xmmword_1B0026310;
  v61 = xmmword_1B0030C50;
  v62 = xmmword_1B0030C60;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026340;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B0026350;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = xmmword_1B00272B0;
  v14 = xmmword_1B00272C0;
  v11 = xmmword_1B0026A50;
  v12 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.6, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0030C70;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = xmmword_1B0030C50;
  v62 = xmmword_1B0030C60;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = xmmword_1B0026A70;
  v14 = xmmword_1B0026A80;
  v11 = xmmword_1B0026A90;
  v12 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1200.0, 20.0, 0.6, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0030C80;
  v78 = xmmword_1B0030C90;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = xmmword_1B0030CA0;
  v62 = xmmword_1B0030CB0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026390;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v13 = _Q0;
  v14 = xmmword_1B0026AB0;
  v11 = xmmword_1B0026AC0;
  v12 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0030C80;
  v78 = xmmword_1B0030C90;
  v75 = xmmword_1B00263E0;
  v76 = xmmword_1B00263F0;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = xmmword_1B0026220;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026220;
  v64 = v10;
  v61 = xmmword_1B0030CC0;
  v62 = xmmword_1B0030CD0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026400;
  v17 = xmmword_1B00263A0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v9;
  v14 = xmmword_1B0026AB0;
  v11 = xmmword_1B0026AE0;
  v12 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1200.0, 0.0, 0.8, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027060;
  v80 = xmmword_1B00262C0;
  v77 = xmmword_1B0030CE0;
  v78 = v10;
  v75 = v10;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = v10;
  v64 = v10;
  v61 = xmmword_1B0030C50;
  v62 = xmmword_1B0030C60;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B0026410;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = v9;
  v14 = xmmword_1B0026AB0;
  v11 = xmmword_1B0026AF0;
  v12 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1200.0, 20.0, 0.6, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00270A0;
  v80 = xmmword_1B0026470;
  v77 = xmmword_1B0030CF0;
  v78 = xmmword_1B0030D00;
  v75 = xmmword_1B00262E0;
  v76 = xmmword_1B00262F0;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B00264C0;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030C50;
  v62 = xmmword_1B0030C60;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026430;
  v20 = xmmword_1B0026130;
  v17 = xmmword_1B00264E0;
  v18 = xmmword_1B0026140;
  v15 = v10;
  v16 = v10;
  v13 = xmmword_1B00272D0;
  v14 = xmmword_1B00272E0;
  v11 = xmmword_1B0026B20;
  v12 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 13408, 12.0, (__n128)xmmword_1B0030D10, 900.0, 0.0, 0.6, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B00274A0;
  v80 = xmmword_1B00274B0;
  v77 = xmmword_1B0030D20;
  v78 = xmmword_1B0030D30;
  v75 = xmmword_1B00270F0;
  v76 = xmmword_1B0027100;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026560;
  v68 = xmmword_1B0027130;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026590;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030C00;
  v62 = xmmword_1B0030C30;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B00265B0;
  v20 = xmmword_1B00265C0;
  v17 = xmmword_1B00265D0;
  v18 = xmmword_1B00265E0;
  v15 = v10;
  v16 = v10;
  v13 = xmmword_1B00272F0;
  v14 = xmmword_1B0027300;
  v11 = xmmword_1B0026B60;
  v12 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 14624, 6.0, (__n128)xmmword_1B0030D40, 750.0, 800.0, 0.7, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0027500;
  v80 = xmmword_1B0027510;
  v77 = xmmword_1B0027520;
  v78 = xmmword_1B0027530;
  v75 = xmmword_1B0027160;
  v76 = xmmword_1B0027170;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B0026220;
  v68 = xmmword_1B00271A0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026170;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026690;
  v20 = xmmword_1B00266A0;
  v17 = xmmword_1B00266B0;
  v18 = xmmword_1B00266C0;
  v15 = xmmword_1B0026B80;
  v16 = xmmword_1B0026B90;
  v13 = xmmword_1B0027310;
  v14 = xmmword_1B0027320;
  v11 = xmmword_1B0027330;
  v12 = xmmword_1B0027340;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1600.0, 0.8, 1.0, 0.9, 0.9, &v65, &v63,
    0x3F6666663F666666,
    0,
    &v61,
    0,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    0,
    1097859072,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0030D50;
  v80 = v10;
  v77 = xmmword_1B0026700;
  v78 = xmmword_1B0026710;
  v75 = xmmword_1B0030D60;
  v76 = xmmword_1B0030D70;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = xmmword_1B00271C0;
  v65 = v10;
  v66 = xmmword_1B0025E50;
  v63 = xmmword_1B0026050;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030C00;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026750;
  v20 = xmmword_1B0026760;
  v17 = xmmword_1B0026770;
  v18 = xmmword_1B0026780;
  v15 = xmmword_1B0026BE0;
  v16 = xmmword_1B0026BF0;
  v13 = xmmword_1B0027350;
  v14 = xmmword_1B0027360;
  v11 = xmmword_1B0027370;
  v12 = xmmword_1B0027380;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1000.0, 0.8, 0.5, 0.85, 0.85, &v65, &v63,
    0x3F59999A3F59999ALL,
    0,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1101004800,
    1101004800,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0026790;
  v80 = v10;
  v77 = xmmword_1B00273F0;
  v78 = xmmword_1B0030D80;
  v75 = xmmword_1B0025F40;
  v76 = v10;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = xmmword_1B00267D0;
  v68 = xmmword_1B00267E0;
  v65 = xmmword_1B0027390;
  v66 = xmmword_1B0026140;
  v63 = xmmword_1B0025F90;
  v64 = xmmword_1B0025FA0;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = (int64x2_t)xmmword_1B0026800;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026810;
  v18 = xmmword_1B0025EA0;
  v15 = xmmword_1B0026C30;
  v16 = v10;
  v13 = xmmword_1B00273A0;
  v14 = xmmword_1B0026C50;
  v11 = xmmword_1B00273B0;
  v12 = xmmword_1B00273C0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 18272, -12.0, (__n128)xmmword_1B0027220, 100.0, 300.0, 0.1, 0.5, 0.8, 0.8, &v65, &v63,
    0x3F4CCCCD3F4CCCCDLL,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1119092736,
    1092616192,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  __asm { FMOV            V0.2D, #0.25 }
  v19 = _Q0;
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026820;
  v18 = xmmword_1B0025EA0;
  v15 = xmmword_1B0026860;
  v16 = v10;
  v13 = xmmword_1B0026C80;
  v14 = xmmword_1B0026880;
  v11 = xmmword_1B0026C90;
  v12 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1123680256,
    1092616192,
    &v13,
    (uint64_t)&v11);
  v79 = xmmword_1B0025DD0;
  v80 = xmmword_1B0025DE0;
  v77 = xmmword_1B0025DF0;
  v78 = xmmword_1B0025E00;
  v75 = xmmword_1B0025E10;
  v76 = xmmword_1B0025E20;
  v73 = v10;
  v74 = v10;
  v71 = v10;
  v72 = xmmword_1B0025E50;
  v69 = v10;
  v70 = v10;
  v67 = v10;
  v68 = v10;
  v65 = v10;
  v66 = v10;
  v63 = xmmword_1B0025E80;
  v64 = v10;
  v61 = xmmword_1B0030BE0;
  v62 = xmmword_1B0030BF0;
  v59 = v10;
  v60 = v10;
  v57 = v10;
  v58 = v10;
  v55 = v10;
  v56 = v10;
  v53 = v10;
  v54 = v10;
  v51 = v10;
  v52 = v10;
  v49 = v10;
  v50 = v10;
  v47 = v10;
  v48 = v10;
  v45 = v10;
  v46 = v10;
  v43 = v10;
  v44 = v10;
  v41 = v10;
  v42 = v10;
  v39 = v10;
  v40 = v10;
  v37 = v10;
  v38 = v10;
  v35 = v10;
  v36 = v10;
  v33 = v10;
  v34 = v10;
  v31 = v10;
  v32 = v10;
  v29 = v10;
  v30 = v10;
  v27 = v10;
  v28 = v10;
  v25 = v10;
  v26 = v10;
  v23 = v10;
  v24 = v10;
  v21 = v10;
  v22 = v10;
  v19 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v20 = xmmword_1B0025EA0;
  v17 = xmmword_1B0026830;
  v18 = xmmword_1B0026840;
  v15 = xmmword_1B0026860;
  v16 = v10;
  v13 = xmmword_1B0026870;
  v14 = xmmword_1B0026880;
  v11 = xmmword_1B0026890;
  v12 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v79, &v77, &v75, &v73, &v71, &v69, &v67, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 200.0, 170.0, 0.12583, 0.4, 0.8, 0.8, &v65, &v63,
    0x3F8000003F000000,
    1061997773,
    &v61,
    1065353216,
    &v59,
    &v57,
    &v55,
    &v53,
    &v51,
    &v49,
    &v47,
    &v45,
    &v43,
    &v41,
    &v39,
    &v37,
    &v35,
    &v33,
    &v31,
    &v29,
    &v27,
    &v25,
    &v23,
    &v21,
    &v19,
    &v17,
    &v15,
    1123680256,
    1092616192,
    &v13,
    (uint64_t)&v11);
  return v0;
}

uint64_t sub_1AFD958CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  int EnumTagSinglePayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44D8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_33();
  v57 = v1;
  type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_33();
  v58 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4038);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B0006424();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v53 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4478);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v53 - v18;
  sub_1B0005CF8();
  sub_1B000640C();
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v12, v7);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v13);
  v55 = v14;
  if (EnumTagSinglePayload == 1)
  {
    sub_1AFAF6288((uint64_t)v6, &qword_1ED1F4038);
    v22 = v7;
    v23 = v56;
LABEL_8:
    if (qword_1ED1F46A8 != -1)
      swift_once();
    OUTLINED_FUNCTION_1_103();
    v39 = (id)qword_1ED1F4470;
    OUTLINED_FUNCTION_1_0();
    sub_1B00054B8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
    v40 = OUTLINED_FUNCTION_14_70();
    *(_OWORD *)(v40 + 16) = xmmword_1B00275C0;
    sub_1B0005CF8();
    v41 = v23;
    sub_1B0006418();
    v20((char *)v23, v22);
    HIBYTE(v59) = 0;
    v42 = sub_1B0005A1C();
    OUTLINED_FUNCTION_0_114(v42);
    v43 = v58;
    static WeatherFormatStyle<>.weather(_:usage:locale:)(v44, (uint64_t)&v59 + 7, v41, v45, v46, v47, v48, v49, v53, (uint64_t)v54, v55, v56, v57, v58, v59, v60, v61, v62, v63,
      v64);
    swift_bridgeObjectRelease();
    sub_1AFAF6288(v41, &qword_1ED1F44D8);
    v50 = sub_1B0006700();
    v51 = sub_1B00066D0();
    sub_1AFC16B58(v43, 0, v51, (uint64_t)v16);
    OUTLINED_FUNCTION_3_98();
    sub_1AFD95E44(v43);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
    *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 64) = sub_1AFAFB1D0();
    *(_QWORD *)(v40 + 32) = v50;
    *(_QWORD *)(v40 + 40) = v20;
    v38 = sub_1B0008560();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v38;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v6, v13);
  v24 = (uint64_t)v20;
  v25 = v56;
  sub_1B0005CF8();
  sub_1B0006418();
  v54 = (void (*)(char *, uint64_t))v24;
  ((void (*)(uint64_t, uint64_t))v24)(v25, v7);
  sub_1AFD95E80();
  LOBYTE(v24) = sub_1B000850C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v24 & 1) == 0)
  {
    v22 = v7;
    v23 = v25;
    OUTLINED_FUNCTION_6_88();
    v20 = v54;
    goto LABEL_8;
  }
  if (qword_1ED1F46A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_103();
  v26 = (id)qword_1ED1F4470;
  OUTLINED_FUNCTION_1_0();
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v27 = OUTLINED_FUNCTION_14_70();
  *(_OWORD *)(v27 + 16) = xmmword_1B00275C0;
  HIBYTE(v59) = 1;
  v28 = sub_1B0005A1C();
  OUTLINED_FUNCTION_0_114(v28);
  v29 = v58;
  static WeatherFormatStyle<>.weather(_:usage:locale:)(v30, (uint64_t)&v59 + 7, v13, v31, v32, v33, v34, v35, v53, (uint64_t)v54, v55, v56, v57, v58, v59, v60, v61, v62, v63,
    v64);
  swift_bridgeObjectRelease();
  sub_1AFAF6288(v13, &qword_1ED1F44D8);
  v36 = sub_1B0006700();
  v37 = sub_1B00066D0();
  sub_1AFC16B58(v29, 0, v37, (uint64_t)v19);
  OUTLINED_FUNCTION_3_98();
  sub_1AFD95E44(v29);
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 64) = sub_1AFAFB1D0();
  *(_QWORD *)(v27 + 32) = v36;
  *(_QWORD *)(v27 + 40) = v25;
  v38 = sub_1B0008560();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_88();
  return v38;
}

uint64_t sub_1AFD95E44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AFD95E80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1EFEF0;
  if (!qword_1ED1EFEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1F4478);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CAE348], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1EFEF0);
  }
  return result;
}

uint64_t sub_1AFD95EC4@<X0>(void *(**a1)()@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = type metadata accessor for DailyGaugeView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  sub_1AFD97B24(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_1AFD97B6C((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a1 = sub_1AFD97BB0;
  a1[1] = (void *(*)())v7;
  return result;
}

void *sub_1AFD95F70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *result;
  _BYTE v10[312];
  _BYTE __src[328];

  v4 = sub_1B0007810();
  sub_1AFD96010(a1, v10);
  __src[320] = 0;
  memcpy(&__src[7], v10, 0x138uLL);
  sub_1B0007378();
  v6 = v5 * 0.5;
  v8 = v7 * 0.5;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  result = memcpy((void *)(a2 + 17), __src, 0x13FuLL);
  *(double *)(a2 + 336) = v6;
  *(double *)(a2 + 344) = v8;
  return result;
}

uint64_t sub_1AFD96010@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  char v84;
  _QWORD v85[22];
  _QWORD v86[17];
  _QWORD v87[39];
  _QWORD v88[2];
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[4];
  char v105;
  _BYTE v106[7];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  _BYTE v112[7];
  char v113;
  _BYTE v114[7];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  _BYTE v120[7];
  uint64_t v121;
  char v122;
  _BYTE v123[7];
  uint64_t v124;
  char v125;
  _BYTE v126[7];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  unsigned __int8 v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;
  unsigned __int8 v136;
  _BYTE v137[7];
  unsigned __int8 v138;
  _BYTE v139[7];
  unsigned __int8 v140;
  _BYTE v141[7];
  _BYTE v142[7];
  _BYTE v143[7];
  _DWORD v144[3];

  v66 = a2;
  v3 = (int *)type metadata accessor for DailyGaugeView();
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1B00082D8();
  v80 = v7;
  v81 = v6;
  sub_1AFD97B24(a1, (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v79 = swift_allocObject();
  sub_1AFD97B6C((uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v79 + v8);
  v78 = sub_1B0007AC8();
  sub_1B0007264();
  v64 = v10;
  v65 = v9;
  v63 = v11;
  v77 = v12;
  v76 = sub_1B0007AE0();
  sub_1B0007264();
  v74 = v14;
  v75 = v13;
  v72 = v16;
  v73 = v15;
  v136 = 0;
  v135 = 0;
  sub_1B00082E4();
  sub_1B0007360();
  v68 = v129;
  v69 = v131;
  v70 = v134;
  v71 = v133;
  v17 = v136;
  v67 = v135;
  v140 = v130;
  v138 = v132;
  if (*(_BYTE *)(a1 + v3[7]) == 1)
  {
    if (qword_1ED1F1018 != -1)
      swift_once();
    v18 = qword_1ED1FED48;
    v19 = swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EEE70138 != -1)
      swift_once();
    v20 = a1 + v3[6];
    v21 = type metadata accessor for ComplicationDailyGaugeViewModel();
    v18 = sub_1AFD376C4(v20 + *(int *)(v21 + 28), v20 + *(int *)(v21 + 32));
    v19 = v22;
  }
  v87[0] = v18;
  v87[1] = v19;
  sub_1AFAF9424();
  v23 = sub_1B0007D5C();
  v25 = v24;
  v27 = v26 & 1;
  v28 = sub_1B0007D08();
  v58 = v29;
  v59 = v28;
  v31 = v30;
  v57 = v32;
  sub_1AFAED640(v23, v25, v27);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v33 = sub_1B0007AC8();
  sub_1B0007264();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  if (*(_QWORD *)(a1 + v3[6]))
    v42 = (uint64_t *)(a1 + v3[9]);
  else
    v42 = (uint64_t *)(a1 + v3[9] + 8);
  v55 = *v42;
  v54 = swift_getKeyPath();
  v43 = *(_QWORD *)(a1 + 8);
  v44 = v31 & 1;
  v84 = v31 & 1;
  v83 = 0;
  v82 = 0;
  v61 = v138;
  v62 = v140;
  v85[0] = v81;
  v85[1] = v80;
  v85[2] = sub_1AFD97BDC;
  v85[3] = v79;
  LOBYTE(v85[4]) = v78;
  *(_DWORD *)((char *)&v85[4] + 1) = v144[0];
  HIDWORD(v85[4]) = *(_DWORD *)((char *)v144 + 3);
  v46 = v64;
  v45 = v65;
  v85[5] = v65;
  v85[6] = v64;
  v47 = v63;
  v85[7] = v63;
  v85[8] = v77;
  LOBYTE(v85[9]) = v17;
  HIDWORD(v85[9]) = *(_DWORD *)&v143[3];
  *(_DWORD *)((char *)&v85[9] + 1) = *(_DWORD *)v143;
  v60 = v17;
  LOBYTE(v85[10]) = v76;
  HIDWORD(v85[10]) = *(_DWORD *)&v142[3];
  *(_DWORD *)((char *)&v85[10] + 1) = *(_DWORD *)v142;
  v85[11] = v75;
  v85[12] = v74;
  v85[13] = v73;
  v85[14] = v72;
  LOBYTE(v85[15]) = v67;
  HIDWORD(v85[15]) = *(_DWORD *)&v141[3];
  *(_DWORD *)((char *)&v85[15] + 1) = *(_DWORD *)v141;
  v85[16] = v68;
  LOBYTE(v85[17]) = v140;
  HIDWORD(v85[17]) = *(_DWORD *)&v139[3];
  *(_DWORD *)((char *)&v85[17] + 1) = *(_DWORD *)v139;
  v85[18] = v69;
  LOBYTE(v85[19]) = v138;
  HIDWORD(v85[19]) = *(_DWORD *)&v137[3];
  *(_DWORD *)((char *)&v85[19] + 1) = *(_DWORD *)v137;
  v85[20] = v71;
  v85[21] = v70;
  v49 = v58;
  v48 = v59;
  v86[0] = v59;
  v86[1] = v58;
  LOBYTE(v86[2]) = v31 & 1;
  v51 = KeyPath;
  v50 = v57;
  v86[3] = v57;
  v86[4] = KeyPath;
  v86[5] = 1;
  LOBYTE(v86[6]) = 0;
  LOBYTE(v86[7]) = v33;
  v86[8] = v35;
  v86[9] = v37;
  v86[10] = v39;
  v86[11] = v41;
  LOBYTE(v86[12]) = 0;
  v86[13] = v54;
  v52 = v55;
  v86[14] = v55;
  v86[15] = 0;
  v86[16] = v43;
  memcpy(v87, v85, 0xB0uLL);
  memcpy(&v87[22], v86, 0x88uLL);
  memcpy(v66, v87, 0x138uLL);
  v88[0] = v48;
  v88[1] = v49;
  v89 = v44;
  v90 = v50;
  v91 = v51;
  v92 = 1;
  v93 = 0;
  v94 = v33;
  v95 = v35;
  v96 = v37;
  v97 = v39;
  v98 = v41;
  v99 = 0;
  v100 = v54;
  v101 = v52;
  v102 = 0;
  v103 = v43;
  sub_1AFD97C14((uint64_t)v85);
  sub_1AFD97C3C((uint64_t)v86);
  swift_retain();
  sub_1AFD97CA4((uint64_t)v88);
  v104[0] = v81;
  v104[1] = v80;
  v104[2] = sub_1AFD97BDC;
  v104[3] = v79;
  v105 = v78;
  *(_DWORD *)v106 = v144[0];
  *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v144 + 3);
  v107 = v45;
  v108 = v46;
  v109 = v47;
  v110 = v77;
  v111 = v60;
  *(_DWORD *)v112 = *(_DWORD *)v143;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v143[3];
  v113 = v76;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v142[3];
  *(_DWORD *)v114 = *(_DWORD *)v142;
  v115 = v75;
  v116 = v74;
  v117 = v73;
  v118 = v72;
  v119 = v67;
  *(_DWORD *)&v120[3] = *(_DWORD *)&v141[3];
  *(_DWORD *)v120 = *(_DWORD *)v141;
  v121 = v68;
  v122 = v62;
  *(_DWORD *)&v123[3] = *(_DWORD *)&v139[3];
  *(_DWORD *)v123 = *(_DWORD *)v139;
  v124 = v69;
  v125 = v61;
  *(_DWORD *)v126 = *(_DWORD *)v137;
  *(_DWORD *)&v126[3] = *(_DWORD *)&v137[3];
  v127 = v71;
  v128 = v70;
  return sub_1AFD97D0C((uint64_t)v104);
}

void sub_1AFD96638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double *v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C78);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C80);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C88);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (double *)(a2 + *(int *)(type metadata accessor for DailyGaugeView() + 24));
  if (*(_QWORD *)v13)
  {
    v14 = v13[1];
    v15 = swift_retain();
    sub_1AFD96834(v15, a1, (uint64_t)v6, v14);
    v16 = &qword_1EEE73C78;
    sub_1AFAF2558((uint64_t)v6, (uint64_t)v9, &qword_1EEE73C78);
    swift_storeEnumTagMultiPayload();
    sub_1AFD97D34();
    sub_1AFD97E3C();
    sub_1B0007918();
    swift_release();
    v17 = (uint64_t)v6;
  }
  else
  {
    sub_1AFD96CF0((uint64_t)v12);
    v16 = &qword_1EEE73C88;
    sub_1AFAF2558((uint64_t)v12, (uint64_t)v9, &qword_1EEE73C88);
    swift_storeEnumTagMultiPayload();
    sub_1AFD97D34();
    sub_1AFD97E3C();
    sub_1B0007918();
    v17 = (uint64_t)v12;
  }
  sub_1AFBFC674(v17, v16);
}

void sub_1AFD96834(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  double v31;
  double v32;
  char v33;
  uint64_t v34;
  char v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[33];
  double v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v55 = a2;
  v56 = a3;
  v58 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73420);
  v50 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CD8);
  v10 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C88);
  MEMORY[0x1E0C80A78](v49);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CA0);
  MEMORY[0x1E0C80A78](v51);
  v57 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C78);
  MEMORY[0x1E0C80A78](v53);
  v54 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DailyGaugeView();
  v18 = v4 + *(int *)(v17 + 24);
  v19 = 0.0;
  if ((*(_BYTE *)(v18 + 24) & 1) == 0)
  {
    v19 = 1.0;
    if (*(double *)(v18 + 16) <= 1.0)
      v19 = *(double *)(v18 + 16);
  }
  v60 = v19;
  *(_OWORD *)v59 = xmmword_1B0024620;
  sub_1AFAF0DA8();
  sub_1B000808C();
  v20 = sub_1AFD96F64();
  v21 = *(_QWORD *)(v18 + 32);
  *(double *)v59 = v20;
  v59[1] = v21;
  sub_1AFAD71A0(&qword_1EEE73418, &qword_1EEE73420, MEMORY[0x1E0CDF660]);
  sub_1AFD97F04();
  sub_1B0007E1C();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v7);
  v22 = v4 + *(int *)(v17 + 32);
  sub_1B00082E4();
  sub_1B0007360();
  v23 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v52);
  v24 = &v14[*(int *)(v49 + 36)];
  v25 = *(_OWORD *)&v59[29];
  *(_OWORD *)v24 = *(_OWORD *)&v59[27];
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = *(_OWORD *)&v59[31];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  v26 = sub_1B00082D8();
  v28 = v27;
  sub_1AFD96FC4(v5, (uint64_t)v59, a4);
  v29 = v57;
  sub_1AFAF2558((uint64_t)v14, v57, &qword_1EEE73C88);
  v30 = (uint64_t *)(v29 + *(int *)(v51 + 36));
  *v30 = v26;
  v30[1] = v28;
  memcpy(v30 + 2, v59, 0xD0uLL);
  sub_1AFBFC674((uint64_t)v14, &qword_1EEE73C88);
  v31 = *(double *)(v22 + 8);
  swift_retain();
  sub_1B00082E4();
  sub_1B0007360();
  v32 = v60;
  v33 = v61;
  v34 = v62;
  v35 = v63;
  v51 = v65;
  v52 = v64;
  sub_1B0007378();
  if (a4 >= 0.09)
  {
    v39 = *(double *)(v22 + 16);
    if (a4 <= 0.9)
    {
      v38 = v36 * a4 - v39;
      v37 = v39 * 0.5;
    }
    else
    {
      v40 = v31 + v39;
      v37 = v39 * 0.5;
      v38 = v37 + v36 - v40;
    }
  }
  else
  {
    v37 = *(double *)(v22 + 16) * 0.5;
    v38 = 0.0 - v37;
  }
  v41 = -(v38 + v37);
  v42 = sub_1B00082D8();
  v44 = v43;
  v45 = v57;
  v46 = v54;
  sub_1AFAF2558(v57, v54, &qword_1EEE73CA0);
  v47 = v46 + *(int *)(v53 + 36);
  *(_QWORD *)v47 = v58;
  *(_WORD *)(v47 + 8) = 256;
  *(double *)(v47 + 16) = v32;
  *(_BYTE *)(v47 + 24) = v33;
  *(_QWORD *)(v47 + 32) = v34;
  *(_BYTE *)(v47 + 40) = v35;
  v48 = v51;
  *(_QWORD *)(v47 + 48) = v52;
  *(_QWORD *)(v47 + 56) = v48;
  *(_QWORD *)(v47 + 64) = 0;
  *(double *)(v47 + 72) = v41;
  *(_QWORD *)(v47 + 80) = v42;
  *(_QWORD *)(v47 + 88) = v44;
  sub_1AFBFC674(v45, &qword_1EEE73CA0);
  sub_1AFAE8274(v46, v56, &qword_1EEE73C78);
}

void sub_1AFD96CF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v19 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73420);
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73C88);
  MEMORY[0x1E0C80A78](v17);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + *(int *)(type metadata accessor for DailyGaugeView() + 24);
  v12 = 0.0;
  if ((*(_BYTE *)(v11 + 24) & 1) == 0)
  {
    v12 = 1.0;
    if (*(double *)(v11 + 16) <= 1.0)
      v12 = *(double *)(v11 + 16);
  }
  v20 = v12;
  v21 = xmmword_1B0024620;
  sub_1AFAF0DA8();
  sub_1B000808C();
  v13 = sub_1AFD96F64();
  v14 = *(_QWORD *)(v11 + 32);
  *(double *)&v21 = v13;
  *((_QWORD *)&v21 + 1) = v14;
  sub_1AFAD71A0(&qword_1EEE73418, &qword_1EEE73420, MEMORY[0x1E0CDF660]);
  sub_1AFD97F04();
  sub_1B0007E1C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  sub_1B00082E4();
  sub_1B0007360();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
  v15 = (__int128 *)&v10[*(int *)(v17 + 36)];
  v16 = v22;
  *v15 = v21;
  v15[1] = v16;
  v15[2] = v23;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1AFAE8274((uint64_t)v10, v19, &qword_1EEE73C88);
}

double sub_1AFD96F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;

  v1 = type metadata accessor for DailyGaugeView();
  v2 = v0 + *(int *)(v1 + 32);
  v3 = *(double *)(v2 + 8);
  v4 = *(double *)(v2 + 16);
  v5 = v0 + *(int *)(v1 + 24);
  if ((*(_BYTE *)(v5 + 24) & 1) != 0 || (v6 = *(double *)(v5 + 16), v6 <= 1.0) && v6 < 0.9)
    v4 = v4 * 0.5;
  return v3 - v4;
}

uint64_t sub_1AFD96FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;
  _BYTE __dst[144];
  _BYTE v27[128];
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE __src[128];

  v6 = sub_1B0007FF0();
  v7 = sub_1B00082E4();
  LOBYTE(v25) = 0;
  LOBYTE(v24) = 1;
  sub_1AFF061D0(0, (uint64_t)__src, 0, v24, 0x7FF0000000000000, v25, v7, v8, v6, 0, 1);
  swift_release();
  v9 = sub_1B0007FD8();
  v10 = a1 + *(int *)(type metadata accessor for DailyGaugeView() + 32);
  v11 = *(double *)(v10 + 16);
  v12 = *(double *)(v10 + 8) + v11;
  sub_1B00082E4();
  sub_1B0007360();
  v13 = v28;
  v14 = v29;
  v15 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  sub_1B0007378();
  if (a3 >= 0.09)
  {
    v20 = v11 * 0.5 + v19 - v12;
    v21 = v19 * a3 - v11;
    if (a3 <= 0.9)
      v20 = v21;
  }
  else
  {
    v20 = v11 * -0.5 + 0.0;
  }
  v22 = -v20;
  memcpy(__dst, __src, 0x80uLL);
  memcpy((void *)a2, __src, 0x80uLL);
  __dst[136] = v14;
  __dst[128] = v16;
  *(_QWORD *)(a2 + 128) = v9;
  *(_WORD *)(a2 + 136) = 256;
  *(_QWORD *)(a2 + 144) = v13;
  *(_BYTE *)(a2 + 152) = v14;
  *(_QWORD *)(a2 + 160) = v15;
  *(_BYTE *)(a2 + 168) = v16;
  *(_QWORD *)(a2 + 176) = v17;
  *(_QWORD *)(a2 + 184) = v18;
  *(_QWORD *)(a2 + 192) = 0;
  *(double *)(a2 + 200) = v22;
  sub_1AFBB71DC((uint64_t)__dst);
  memcpy(v27, __src, sizeof(v27));
  return sub_1AFD7E798((uint64_t)v27);
}

void sub_1AFD971A8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1B0007FF0();
  sub_1B0007FF0();
  v1 = sub_1B0008014();
  swift_release();
  qword_1EEE92208 = v0;
  unk_1EEE92210 = v1;
  OUTLINED_FUNCTION_9_0();
}

_QWORD *sub_1AFD971F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v12 = *(_QWORD *)((char *)a2 + v8);
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = v12;
    *((_QWORD *)v9 + 1) = v11;
    v9[24] = v10[24];
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    v13 = type metadata accessor for ComplicationDailyGaugeViewModel();
    v14 = *(int *)(v13 + 28);
    v29 = &v10[v14];
    v30 = &v9[v14];
    v15 = sub_1B00058D8();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v28(v30, v29, v15);
    v16 = *(int *)(v13 + 32);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    *((_BYTE *)v7 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    v23 = a3[9];
    v24 = (_QWORD *)((char *)v7 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1AFD9736C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ComplicationDailyGaugeViewModel();
  v6 = v4 + *(int *)(v5 + 28);
  v7 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 32);
  v9 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_release();
}

_QWORD *sub_1AFD97424(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v11 = *(_QWORD *)((char *)a2 + v7);
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = v11;
  *((_QWORD *)v8 + 1) = v10;
  v8[24] = v9[24];
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
  *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
  v12 = type metadata accessor for ComplicationDailyGaugeViewModel();
  v13 = *(int *)(v12 + 28);
  v28 = &v9[v13];
  v29 = &v8[v13];
  v14 = sub_1B00058D8();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v27(v29, v28, v14);
  v15 = *(int *)(v12 + 32);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1AFD97574(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  v9 = *((_QWORD *)v8 + 2);
  v7[24] = v8[24];
  *((_QWORD *)v7 + 2) = v9;
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for ComplicationDailyGaugeViewModel();
  v11 = *(int *)(v10 + 28);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(v10 + 32);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_retain();
  swift_release();
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1AFD976F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[24] = *((_BYTE *)a2 + v6 + 24);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  *((_QWORD *)v7 + 4) = *(_QWORD *)((char *)a2 + v6 + 32);
  v9 = type metadata accessor for ComplicationDailyGaugeViewModel();
  v10 = *(int *)(v9 + 28);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 32);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *sub_1AFD97800(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  v7[24] = v8[24];
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for ComplicationDailyGaugeViewModel();
  v10 = *(int *)(v9 + 28);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1B00058D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(v9 + 32);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (_QWORD *)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = *v23;
  swift_release();
  *((_QWORD *)v22 + 1) = v23[1];
  swift_release();
  return a1;
}

uint64_t sub_1AFD97950()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFD9795C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_7_85();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AFD979CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFD979D8(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_7_85();
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t type metadata accessor for DailyGaugeView()
{
  uint64_t result;

  result = qword_1EEE73C30;
  if (!qword_1EEE73C30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFD97A70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ComplicationDailyGaugeViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AFD97B10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFD97B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyGaugeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFD97B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DailyGaugeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1AFD97BB0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_3_99();
  OUTLINED_FUNCTION_0_115();
  return sub_1AFD95F70(v0, v1);
}

void sub_1AFD97BDC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_3_99();
  v0 = OUTLINED_FUNCTION_0_115();
  sub_1AFD96638(v0, v1);
}

uint64_t sub_1AFD97C14(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1AFD97C3C(uint64_t a1)
{
  sub_1AFBB755C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AFD97CA4(uint64_t a1)
{
  sub_1AFAED640(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1AFD97D0C(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_1AFD97D34()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE73C90;
  if (!qword_1EEE73C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73C78);
    v2 = sub_1AFD97DB8();
    sub_1AFAD71A0(&qword_1EEE73CC8, &qword_1EEE73CD0, MEMORY[0x1E0CDA280]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE73C90);
  }
  return result;
}

unint64_t sub_1AFD97DB8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE73C98;
  if (!qword_1EEE73C98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73CA0);
    v2 = sub_1AFD97E3C();
    sub_1AFAD71A0(&qword_1EEE73CB8, &qword_1EEE73CC0, MEMORY[0x1E0CD8A38]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE73C98);
  }
  return result;
}

unint64_t sub_1AFD97E3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_1EEE73CA8;
  if (!qword_1EEE73CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73C88);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73420);
    sub_1AFAD71A0(&qword_1EEE73418, &qword_1EEE73420, MEMORY[0x1E0CDF660]);
    v4[2] = v2;
    v4[3] = &type metadata for VerticalGaugeStyle;
    v4[4] = v3;
    v4[5] = sub_1AFD97F04();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE73CA8);
  }
  return result;
}

unint64_t sub_1AFD97F04()
{
  unint64_t result;

  result = qword_1EEE73CB0;
  if (!qword_1EEE73CB0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003CEC4, &type metadata for VerticalGaugeStyle);
    atomic_store(result, (unint64_t *)&qword_1EEE73CB0);
  }
  return result;
}

uint64_t destroy for DailyGaugeView.Style()
{
  swift_release();
  return swift_release();
}

void _s9WeatherUI14DailyGaugeViewV5StyleVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for DailyGaugeView.Style(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DailyGaugeView.Style(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComplicationDailyGaugeViewModel.Current(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComplicationDailyGaugeViewModel.Current(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyGaugeView.Style()
{
  return &type metadata for DailyGaugeView.Style;
}

ValueMetadata *type metadata accessor for DailyGaugeView.Layout()
{
  return &type metadata for DailyGaugeView.Layout;
}

void sub_1AFD980D0()
{
  sub_1AFAD71A0(&qword_1EEE73CE0, &qword_1EEE73CE8, MEMORY[0x1E0CD9318]);
}

uint64_t sub_1AFD980FC(uint64_t a1, char a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2 & 1;
  v4 = BoundPropertyName.rawValue.getter();
  sub_1AFD98170(a1, v3, v4, v5);
  return swift_bridgeObjectRelease();
}

void sub_1AFD98170(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED1F4030 != -1)
      swift_once();
    v6 = sub_1B0006D00();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED1F4018);
    swift_bridgeObjectRetain_n();
    v7 = sub_1B0006CE8();
    v8 = sub_1B00089BC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v11 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1AFB4AD14(a3, a4, &v11);
      sub_1B0008BB4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AFABF000, v7, v8, "Failed to set binding because entity object ID was nil, binding=%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E03CC0](v10, -1, -1);
      MEMORY[0x1B5E03CC0](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1B0006E80();
  }
}

uint64_t sub_1AFD98328()
{
  BoundEntity.rawValue.getter();
  sub_1B0006E74();
  return swift_bridgeObjectRelease();
}

uint64_t WeatherVFXEffect.applyUpdate(_:lastConfiguration:effectType:cameraPositionType:hasLocationChanged:gradient:)(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  __int128 *v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[6];
  uint64_t v17;
  char v18;
  _BYTE v19[2336];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v5 = v4;
  v6 = v1;
  sub_1AFCCB5D4(v7, (uint64_t)v19);
  LOBYTE(v5) = *v5;
  v14 = v3[1];
  v15 = *v3;
  v12 = v3[3];
  v13 = v3[2];
  v10 = v3[5];
  v11 = v3[4];
  v8 = *((_QWORD *)v3 + 12);
  LOBYTE(v3) = *((_BYTE *)v3 + 104);
  sub_1AFCCB5D4((uint64_t)v19, (uint64_t)v16);
  sub_1AFD98490(v6);
  LOBYTE(v16[0]) = (_BYTE)v5;
  sub_1AFD994EC(v6);
  v16[0] = v15;
  v16[1] = v14;
  v16[2] = v13;
  v16[3] = v12;
  v16[4] = v11;
  v16[5] = v10;
  v17 = v8;
  v18 = (char)v3;
  return sub_1AFD99724((uint64_t)v16);
}

void sub_1AFD98490(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int v59;
  char v60;
  int v61;
  const void *v62;
  char v63;
  char v64;
  int v65;
  char v66;
  char v67;
  uint64x2_t v68;
  int8x16_t v69;
  int8x16_t v70;
  unsigned __int8 *v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t *v92;
  char v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char v107;
  int v108;
  int v109;
  int v110;
  unsigned __int8 v111;
  int v112;
  unint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  char v119;
  char v120;
  unint64_t *v121;
  char v122;
  int v123;
  char v124;
  unint64_t *v125;
  const void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  int v136;
  unint64_t *v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  unint64_t *v154;
  char v155;
  int v156;
  char v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  char v208;
  int v209;
  char v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  char v261;
  int v262;
  char v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  void *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  char v314;
  int v315;
  char v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  char v367;
  int v368;
  char v369;
  void *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  void *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  uint64_t v404;
  uint64_t v405;
  _BYTE v406[5];
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  int v410;
  uint64_t v411;
  int v412;
  uint64_t v413;
  uint64_t v414;
  int v415;
  uint64_t v416;
  int v417;
  uint64_t v418;
  uint64_t v419;
  int v420;
  uint64_t v421;
  int v422;
  uint64_t v423;
  uint64_t v424;
  int v425;
  uint64_t v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  int v430;
  int v431;
  uint64_t v432;
  int v433;
  char v434;
  char v435;
  char v436;
  char v437;
  char v438;
  char v439;
  char v440;
  char v441;
  char v442;
  char v443;
  char v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  int v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  unint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  const void *v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  unint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  unsigned __int8 *v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  char v828;
  uint64_t v829;
  char v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  char v847;
  uint64_t v848;
  char v849;
  char v850;
  uint64_t v851;
  char v852;
  int v853;
  uint64_t v854;
  int v855;
  int v856;
  uint64_t v857;
  int v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  char v866;
  char v867;
  char v868;
  char v869;
  char v870;
  char v871;
  char v872;
  __int16 v873;
  __int16 v874;
  uint64_t v875;
  char v876;
  _BYTE v877[5];
  _BYTE v878[5];
  char v879;
  _BYTE v880[5];
  char v881;
  char v882;
  _BYTE v883[5];
  char v884;
  char v885;
  _BYTE v886[5];
  char v887;
  _BYTE v888[5];
  char v889;
  __int16 v890;
  __int16 v891;
  __int16 v892;
  __int16 v893;
  __int16 v894;
  __int16 v895;
  int v896;
  char v897;
  char v898;
  char v899;
  char v900;
  char v901;
  char v902;
  char v903;
  _BYTE v904[3];
  _BYTE v905[3];
  _BYTE v906[3];
  _BYTE v907[3];
  _BYTE v908[3];
  _BYTE v909[3];
  int v910;
  char v911;
  __int16 v912;
  __int16 v913;
  __int16 v914;
  __int16 v915;
  __int16 v916;
  __int16 v917;
  int v918;
  char v919;
  char v920;
  char v921;
  char v922;
  char v923;
  char v924;
  char v925;
  _BYTE v926[3];
  _BYTE v927[3];
  _BYTE v928[3];
  _BYTE v929[3];
  _BYTE v930[3];
  _BYTE v931[3];
  int v932;
  char v933;
  __int16 v934;
  __int16 v935;
  __int16 v936;
  __int16 v937;
  __int16 v938;
  __int16 v939;
  uint64_t v940;
  char v941;
  char v942;
  char v943;
  char v944;
  char v945;
  char v946;
  char v947;
  int v948;
  int v949;
  int v950;
  int v951;
  int v952;
  int v953;
  uint64_t v954;
  _BYTE v955[5];
  _BYTE v956[5];
  _BYTE v957[5];
  _BYTE v958[5];
  _BYTE v959[5];
  _BYTE v960[5];
  char v961;
  __int16 v962;
  __int16 v963;
  __int16 v964;
  __int16 v965;
  __int16 v966;
  __int16 v967;
  int v968;
  char v969;
  char v970;
  char v971;
  char v972;
  char v973;
  char v974;
  char v975;
  _BYTE v976[3];
  _BYTE v977[3];
  _BYTE v978[3];
  _BYTE v979[3];
  _BYTE v980[3];
  _BYTE v981[3];
  char v982;
  char v983;
  uint64_t v984;
  char v985;
  uint64_t v986;
  _BYTE v987[5];
  _BYTE v988[5];
  _BYTE v989[5];
  _BYTE v990[5];
  _BYTE v991[5];
  char v992;
  __int16 v993;
  __int16 v994;
  __int16 v995;
  __int16 v996;
  __int16 v997;
  uint64_t v998;
  char v999;
  char v1000;
  char v1001;
  char v1002;
  char v1003;
  char v1004;
  _BYTE v1005[6];
  _BYTE v1006[3];
  _BYTE v1007[3];
  _BYTE v1008[3];
  _BYTE v1009[3];
  _BYTE v1010[3];
  __int16 v1011;
  __int16 v1012;
  __int16 v1013;
  __int16 v1014;
  __int16 v1015;
  uint64_t v1016;
  char v1017;
  char v1018;
  char v1019;
  char v1020;
  char v1021;
  char v1022;
  _BYTE v1023[3];
  _BYTE v1024[3];
  _BYTE v1025[3];
  _BYTE v1026[3];
  _BYTE v1027[3];
  _BYTE v1028[3];
  char v1029;
  __int16 v1030;
  __int16 v1031;
  __int16 v1032;
  __int16 v1033;
  __int16 v1034;
  __int16 v1035;
  int v1036;
  char v1037;
  _BYTE v1038[3];
  uint64_t v1039;
  __int16 v1040;
  _BYTE v1041[1646];
  char v1042;
  char v1043;
  _BYTE v1044[1646];
  char v1045;
  char v1046;
  _BYTE v1047[1646];
  char v1048;
  char v1049;
  _BYTE v1050[1646];
  char v1051;
  char v1052;
  _BYTE v1053[1646];
  char v1054;
  char v1055;
  unsigned __int32 v1056;
  __int16 v1057;
  char v1058;
  char v1059;
  char v1060;
  char v1061;
  char v1062;
  _BYTE v1063[3];
  _BYTE v1064[6];
  int v1065;
  __int16 v1066;
  char v1067;
  char v1068;
  char v1069;
  char v1070;
  char v1071;
  char v1072;
  char v1073;
  char v1074;
  char v1075;
  char v1076;
  char v1077;
  char v1078;
  char v1079;
  char v1080;
  char v1081;
  char v1082;
  char v1083;
  char v1084;
  char v1085;
  char v1086;
  char v1087;
  char v1088;
  char v1089;
  char v1090;
  char v1091;
  char v1092;
  char v1093;
  char v1094;
  char v1095;
  char v1096;
  char v1097;
  char v1098;
  char v1099;
  char v1100;
  char v1101;
  char v1102;
  uint64_t v1103;
  uint64_t v1104;
  _BYTE v1105[2336];
  _BYTE v1106[2352];

  v2 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v794 = v1;
  LODWORD(v704) = v3;
  HIDWORD(v514) = v4;
  v940 = v5;
  v6 = v2;
  OUTLINED_FUNCTION_11_83(&v1104, v2);
  HIDWORD(v998) = v6[1630];
  HIDWORD(v984) = v6[1629];
  LODWORD(v998) = v6[1631];
  LODWORD(v1016) = v6[1632];
  v7 = v6[1633];
  v8 = v6[1634];
  v9 = v6[1635];
  v10 = v6[1636];
  v11 = v6[1637];
  v12 = v6[1638];
  v13 = v6[1639];
  HIDWORD(v1016) = v6[1640];
  v14 = v6[1641];
  v15 = v6[1642];
  v1036 = v6[1643];
  LODWORD(v1039) = v6[1644];
  BYTE4(v1039) = v6[1645];
  LODWORD(v984) = v6[1646];
  HIDWORD(v848) = v6[1648];
  LODWORD(v875) = v6[1647];
  HIDWORD(v829) = v6[1651];
  LODWORD(v848) = v6[1649];
  v759 = v6;
  HIDWORD(v811) = v6[1652];
  LODWORD(v829) = v6[1650];
  v687 = (uint64_t)(v6 + 1653);
  OUTLINED_FUNCTION_12_87(&v1103, v6 + 1653);
  sub_1AFCCB5D4(v940, (uint64_t)v1105);
  LODWORD(v776) = BYTE4(v984) & 1;
  HIDWORD(v776) = BYTE4(v998) & 1;
  HIDWORD(v653) = v998 & 1;
  HIDWORD(v875) = v7;
  v896 = v8;
  LODWORD(v568) = v1016 & 1;
  HIDWORD(v568) = v7 & 1;
  v910 = v9;
  v918 = v10;
  LODWORD(v602) = v8 & 1;
  HIDWORD(v602) = v9 & 1;
  v932 = v11;
  LOBYTE(v940) = v12;
  LODWORD(v585) = v11 & 1;
  HIDWORD(v585) = BYTE4(v1016) & 1;
  HIDWORD(v742) = v14 & 1;
  HIDWORD(v636) = v15 & 1;
  LODWORD(v653) = v1036 & 1;
  v670 = v1039 & 0x100000001;
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1106);
  OUTLINED_FUNCTION_41_15((uint64_t)v1106);
  v968 = v14;
  v982 = v15;
  HIDWORD(v954) = v13;
  HIDWORD(v619) = v12 & 1;
  LODWORD(v636) = v13 & 1;
  LODWORD(v619) = v10 & 1;
  if (v16)
  {
    v17 = 0;
    v18 = 0;
    v19 = 2;
    v20 = v848;
  }
  else
  {
    if (v1106[1630])
      v21 = 256;
    else
      v21 = 0;
    v22 = v21 | v1106[1629];
    if (v1106[1631])
      v23 = 0x10000;
    else
      v23 = 0;
    if (v1106[1632])
      v24 = 0x1000000;
    else
      v24 = 0;
    v25 = v22 | v23 | v24;
    if (v1106[1633])
      v26 = 0x100000000;
    else
      v26 = 0;
    if (v1106[1634])
      v27 = 0x10000000000;
    else
      v27 = 0;
    v28 = v26 | v27;
    if (v1106[1635])
      v29 = 0x1000000000000;
    else
      v29 = 0;
    v30 = v25 | v28 | v29;
    if (v1106[1636])
      v31 = 0x100000000000000;
    else
      v31 = 0;
    v19 = v30 | v31;
    if (v1106[1638])
      v32 = 256;
    else
      v32 = 0;
    v33 = v32 | v1106[1637];
    if (v1106[1639])
      v34 = 0x10000;
    else
      v34 = 0;
    if (v1106[1640])
      v35 = 0x1000000;
    else
      v35 = 0;
    v36 = v33 | v34 | v35;
    if (v1106[1641])
      v37 = 0x100000000;
    else
      v37 = 0;
    v20 = v848;
    if (v1106[1642])
      v38 = 0x10000000000;
    else
      v38 = 0;
    v39 = v37 | v38;
    if (v1106[1643])
      v40 = 0x1000000000000;
    else
      v40 = 0;
    v41 = v36 | v39 | v40;
    if (v1106[1644])
      v42 = 0x100000000000000;
    else
      v42 = 0;
    v17 = v41 | v42;
    if (v1106[1646])
      v43 = 256;
    else
      v43 = 0;
    if (v1106[1647])
      v44 = 0x10000;
    else
      v44 = 0;
    if (v1106[1648])
      v45 = 0x1000000;
    else
      v45 = 0;
    if (v1106[1649])
      v46 = 0x100000000;
    else
      v46 = 0;
    if (v1106[1650])
      v47 = 0x10000000000;
    else
      v47 = 0;
    v48 = v46 | v47;
    if (v1106[1651])
      v49 = 0x1000000000000;
    else
      v49 = 0;
    v18 = v43 | v1106[1645] | v44 | v45 | v48 | v49 | ((unint64_t)v1106[1652] << 56);
  }
  v50 = v984 & 1;
  v51 = v875 & 1;
  v52 = BYTE4(v848) & 1;
  v53 = v20 & 1;
  v54 = BYTE4(v829) & 1;
  v531 = HIDWORD(v17) & 1;
  v55 = (v19 >> 8) & 1;
  v56 = v1016;
  v57 = BYTE4(v998);
  v497 = v55;
  if ((v704 & 1) == 0)
  {
    v1065 = v50 | ((_DWORD)v51 << 8) | ((_DWORD)v52 << 16) | ((_DWORD)v53 << 24);
    v1066 = (v50 | (v51 << 8) | (v52 << 16) | (v53 << 24) | ((unint64_t)(v829 & 1) << 32) | (v54 << 40)) >> 32;
    v705 = v19;
    v724 = v19;
    v405 = v18;
    v550 = v17;
    if (v19 == 2)
    {
      v59 = HIDWORD(v998);
      v61 = HIDWORD(v984);
      v60 = v998;
      v62 = (const void *)v687;
      v63 = v1016;
    }
    else
    {
      v68 = (uint64x2_t)vdupq_n_s64(v18);
      v69 = (int8x16_t)vdupq_n_s64(1uLL);
      v70 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)vshlq_u64(v68, (uint64x2_t)xmmword_1B00386A0), v69), (uint64x2_t)xmmword_1B0025810), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)vshlq_u64(v68, (uint64x2_t)xmmword_1B0038690), v69), (uint64x2_t)xmmword_1B00386B0));
      *(int8x8_t *)v70.i8 = vorr_s8(*(int8x8_t *)v70.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL));
      v1056 = v70.i32[0] | (v18 >> 8) & 1;
      v1057 = (unint64_t)(v70.i64[0] | ((HIWORD(v18) & 1) << 40)) >> 32;
      v71 = (unsigned __int8 *)OUTLINED_FUNCTION_25_50();
      v59 = HIDWORD(v998);
      v61 = HIDWORD(v984);
      v60 = v998;
      v73 = v759;
      v62 = (const void *)v687;
      v63 = v1016;
      if (static WeatherConditionBackgroundConfig.Layers.CloudLayers.== infix(_:_:)(v71, v72))
        goto LABEL_84;
    }
    OUTLINED_FUNCTION_43_9();
    v75 = OUTLINED_FUNCTION_11_83(v74, v759);
    OUTLINED_FUNCTION_2_106((uint64_t)v75, v76, v77, v78, v79, v80, v81, v82, v405, v445, v462, v480, v497, v514, v531, v550, v568, v585, v602,
      v619,
      v636,
      v653,
      v670,
      v687,
      v705,
      v724,
      v742,
      (uint64_t)v759,
      v776,
      v794,
      v811,
      v829,
      SWORD1(v829),
      SBYTE4(v829),
      SHIWORD(v829),
      v848,
      SWORD1(v848),
      SBYTE4(v848),
      SHIWORD(v848),
      v875,
      SWORD1(v875),
      SBYTE4(v875),
      SHIWORD(v875),
      v896,
      SHIWORD(v896),
      v910,
      SHIWORD(v910),
      v918,
      SHIWORD(v918),
      v11,
      SHIWORD(v11),
      v940,
      SHIDWORD(v940),
      v954,
      v13,
      SHIWORD(v13),
      v968,
      SHIWORD(v968),
      v15,
      v984,
      v998,
      v1016,
      SBYTE4(v1016));
    v1102 = BYTE4(v811);
    OUTLINED_FUNCTION_12_87((void *)(v56 + 1653), v62);
    OUTLINED_FUNCTION_42_16();
    sub_1AFD9D420();
    v73 = v759;
LABEL_84:
    OUTLINED_FUNCTION_43_9();
    v84 = OUTLINED_FUNCTION_11_83(v83, v73);
    OUTLINED_FUNCTION_2_106((uint64_t)v84, v85, v86, v87, v88, v89, v90, v91, v405, v445, v462, v480, v497, v514, v531, v550, v568, v585, v602,
      v619,
      v636,
      v653,
      v670,
      v687,
      v705,
      v724,
      v742,
      (uint64_t)v759,
      v776,
      v794,
      v811,
      v829,
      SWORD1(v829),
      SBYTE4(v829),
      SHIWORD(v829),
      v848,
      SWORD1(v848),
      SBYTE4(v848),
      SHIWORD(v848),
      v875,
      SWORD1(v875),
      SBYTE4(v875),
      SHIWORD(v875),
      v896,
      SHIWORD(v896),
      v910,
      SHIWORD(v910),
      v918,
      SHIWORD(v918),
      v932,
      SHIWORD(v932),
      v940,
      SHIDWORD(v940),
      v954,
      SBYTE4(v954),
      SHIWORD(v954),
      v968,
      SHIWORD(v968),
      v982,
      v984,
      v998,
      v1016,
      SBYTE4(v1016));
    v1102 = v828;
    OUTLINED_FUNCTION_12_87((void *)(v56 + 1653), v62);
    OUTLINED_FUNCTION_24_55();
    v92 = OUTLINED_FUNCTION_25_50();
    WeatherConditionBackgroundConfig.shouldRandomizeClouds(lastConfig:forceRandomization:)((uint64_t)v92);
    if ((v93 & 1) != 0)
    {
      v94 = OUTLINED_FUNCTION_11_83(v1064, v73);
      v1079 = v61;
      v1080 = v59;
      v1081 = v60;
      v1082 = v63;
      v1083 = v889;
      v1084 = v897;
      v1085 = v911;
      v1086 = v919;
      v1087 = v933;
      v1088 = v941;
      v1089 = v961;
      v1090 = v1029;
      v1091 = v969;
      v1092 = v983;
      v1093 = v1036;
      v1094 = v1039;
      v1095 = BYTE4(v1039);
      v1096 = v985;
      v1097 = v876;
      v1098 = v866;
      v1099 = v849;
      v1100 = v830;
      v1101 = v847;
      v1102 = v828;
      OUTLINED_FUNCTION_1_104(v94, v95, v96, v97, v98, v99, v100, v101, *(int *)v406, v406[4]);
      v102 = OUTLINED_FUNCTION_42_16();
      sub_1AFD9D4F8((uint64_t)v102);
    }
    v103 = v706;
    if (v706 == 2)
    {
      OUTLINED_FUNCTION_27_54(v777, 0);
      OUTLINED_FUNCTION_53_5();
      v104 = HIDWORD(v777);
    }
    else
    {
      OUTLINED_FUNCTION_51_0();
      if (v106 != (v725 & 1))
        OUTLINED_FUNCTION_27_54(v105, 0);
      OUTLINED_FUNCTION_51_0();
      OUTLINED_FUNCTION_53_5();
      if ((v107 & 1) == 0)
        goto LABEL_93;
    }
    OUTLINED_FUNCTION_52_6(v104, 0);
    if (v706 == 2)
    {
      OUTLINED_FUNCTION_14_85(8);
      OUTLINED_FUNCTION_13_87();
LABEL_96:
      OUTLINED_FUNCTION_10_89(25);
      if (v706 == 2)
      {
        OUTLINED_FUNCTION_37_29();
        goto LABEL_101;
      }
LABEL_98:
      OUTLINED_FUNCTION_51_0();
      if (v110 != ((v725 >> 24) & 1))
        OUTLINED_FUNCTION_37_29();
      OUTLINED_FUNCTION_21_55();
      v103 = v706;
      if (((v111 ^ BYTE4(v725) & 1) & 1) == 0)
      {
LABEL_102:
        sub_1AFD9D7CC();
        if (v103 == 2)
        {
          OUTLINED_FUNCTION_14_85(17);
          OUTLINED_FUNCTION_13_87();
        }
        else
        {
          OUTLINED_FUNCTION_21_55();
          if (v112 != (HIWORD(v725) & 1))
            OUTLINED_FUNCTION_10_89(17);
          v103 = v706;
          if (((_DWORD)v73 != 0) == (HIBYTE(v725) & 1))
            goto LABEL_109;
        }
        OUTLINED_FUNCTION_14_85(26);
        OUTLINED_FUNCTION_13_87();
        if (v103 == 2)
        {
          v1064[0] = 27;
          OUTLINED_FUNCTION_13_87();
LABEL_112:
          OUTLINED_FUNCTION_14_85(28);
          OUTLINED_FUNCTION_13_87();
          if (v103 == 2)
          {
            OUTLINED_FUNCTION_14_85(29);
            OUTLINED_FUNCTION_13_87();
            v113 = v551;
LABEL_117:
            sub_1AFD9D818();
            if (v103 == 2)
            {
              OUTLINED_FUNCTION_14_85(30);
              OUTLINED_FUNCTION_13_87();
LABEL_122:
              sub_1AFD9D884();
              if (v103 == 2)
              {
                v1064[0] = 33;
                OUTLINED_FUNCTION_13_87();
                goto LABEL_127;
              }
LABEL_124:
              OUTLINED_FUNCTION_34_36();
              if (v117 != (HIWORD(v113) & 1))
              {
                v1064[0] = 33;
                OUTLINED_FUNCTION_13_87();
              }
              OUTLINED_FUNCTION_21_55();
              if (((v118 ^ *(_DWORD *)v406) & 1) == 0)
                return;
LABEL_127:
              v1064[0] = 7;
              OUTLINED_FUNCTION_42_16();
LABEL_166:
              sub_1AFD98328();
              return;
            }
LABEL_119:
            OUTLINED_FUNCTION_21_55();
            if (v116 != v532)
              OUTLINED_FUNCTION_10_89(30);
            if (((_DWORD)v56 != -1653) == ((v113 >> 40) & 1))
              goto LABEL_124;
            goto LABEL_122;
          }
LABEL_114:
          OUTLINED_FUNCTION_21_55();
          v113 = v551;
          if (v114 != (v551 & 1))
            OUTLINED_FUNCTION_10_89(29);
          OUTLINED_FUNCTION_51_0();
          if (((v115 ^ (v551 >> 24) & 1) & 1) == 0)
            goto LABEL_119;
          goto LABEL_117;
        }
LABEL_109:
        if ((v61 != 0) != ((v551 >> 8) & 1))
        {
          v1064[0] = 27;
          OUTLINED_FUNCTION_13_87();
        }
        if ((v59 != 0) == ((v551 >> 16) & 1))
          goto LABEL_114;
        goto LABEL_112;
      }
LABEL_101:
      OUTLINED_FUNCTION_10_89(20);
      goto LABEL_102;
    }
LABEL_93:
    OUTLINED_FUNCTION_21_55();
    if (v108 != ((v725 >> 16) & 1))
      OUTLINED_FUNCTION_10_89(8);
    OUTLINED_FUNCTION_21_55();
    if (((v109 ^ HIBYTE(v551) & 1) & 1) == 0)
      goto LABEL_98;
    goto LABEL_96;
  }
  v58 = v19;
  v463 = v53;
  if (v19 == 2)
  {
    OUTLINED_FUNCTION_27_54(BYTE4(v984) & 1, 1);
  }
  else
  {
    if (((_DWORD)v776 != 0) != (v19 & 1))
    {
      v704 = BYTE4(v829) & 1;
      sub_1AFD9D274(BYTE4(v984) & 1, 1);
      LODWORD(v55) = (v19 >> 8) & 1;
      v57 = BYTE4(v998);
      LOBYTE(v54) = BYTE4(v829) & 1;
    }
    if ((((HIDWORD(v776) != 0) ^ v55) & 1) == 0)
      goto LABEL_75;
  }
  OUTLINED_FUNCTION_52_6(BYTE4(v998) & 1, 1);
  if (v19 == 2)
  {
    OUTLINED_FUNCTION_14_85(30);
    sub_1AFD98328();
    v64 = BYTE4(v742);
    v67 = v776;
LABEL_129:
    v1064[0] = v67;
    v1064[1] = BYTE4(v998) & 1;
    v1064[2] = BYTE4(v653);
    v1064[3] = v568;
    v1064[4] = BYTE4(v568);
    v1064[5] = v602;
    LOBYTE(v1065) = BYTE4(v602);
    BYTE1(v1065) = v619;
    BYTE2(v1065) = v585;
    HIBYTE(v1065) = BYTE4(v619);
    LOBYTE(v1066) = v13 & 1;
    HIBYTE(v1066) = BYTE4(v1016) & 1;
    v1067 = v64;
    v1068 = BYTE4(v636);
    v1069 = v1036 & 1;
    v1070 = v1039 & 1;
    v1071 = (v1039 & 0x100000001uLL) >> 32;
    v1072 = v984 & 1;
    v1073 = v875 & 1;
    v1074 = BYTE4(v848) & 1;
    v1075 = v463;
    v1076 = v829 & 1;
    v1077 = v54;
    v1078 = BYTE4(v811);
    sub_1AFD9D2BC((uint64_t)v1064);
    goto LABEL_130;
  }
LABEL_75:
  v723 = v19;
  v64 = BYTE4(v742);
  v65 = HIDWORD(v742) != 0;
  if (v65 != (_DWORD)v531)
  {
    OUTLINED_FUNCTION_14_85(30);
    sub_1AFD98328();
    v64 = BYTE4(v742);
  }
  sub_1AFC0BBB4(SHIBYTE(v18), SBYTE4(v811));
  v67 = v776;
  if (v58 == 2
    || (v66 & 1) == 0
    || ((((_DWORD)v776 != 0) ^ v723) & 1) != 0
    || (((HIDWORD(v776) != 0) ^ v497 | v65 ^ v531) & 1) != 0)
  {
    goto LABEL_129;
  }
LABEL_130:
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1064);
  OUTLINED_FUNCTION_41_15((uint64_t)v1064);
  v119 = v984;
  v120 = v57;
  if (v16)
  {
    v123 = 2;
  }
  else
  {
    v121 = OUTLINED_FUNCTION_25_50();
    OUTLINED_FUNCTION_1_76(v121, v1064);
    OUTLINED_FUNCTION_32_34();
    v123 = v122 & 1;
  }
  v124 = BYTE4(v811);
  v125 = OUTLINED_FUNCTION_25_50();
  v127 = OUTLINED_FUNCTION_11_83(v125, v126);
  v1058 = BYTE4(v984);
  v1059 = v120;
  OUTLINED_FUNCTION_9_90((uint64_t)v127, v128, v129, v130, v131, v132, v133, v134, v404, BYTE4(v848) & 1, v463, v829 & 1, v497, v514, v531, v549, v568, v585, v602,
    v619,
    v636,
    v653,
    v670,
    v687,
    v704,
    v723,
    v742,
    (uint64_t)v759,
    v776,
    v794,
    v811,
    v829,
    v848,
    v875,
    SBYTE4(v875),
    SHIWORD(v875),
    v896,
    SHIWORD(v896),
    v910,
    SHIWORD(v910),
    v918,
    SHIWORD(v918),
    v11,
    SHIWORD(v11),
    v940,
    SHIDWORD(v940),
    v954,
    v13,
    SHIWORD(v13),
    v968,
    SHIWORD(v968),
    v982,
    v984,
    v998,
    SHIDWORD(v998),
    v1016,
    SWORD1(v1016),
    SBYTE4(v1016),
    SHIWORD(v1016),
    v1036,
    SHIWORD(v1036),
    v1039,
    SWORD1(v1039));
  v1060 = v119;
  v135 = v877[0];
  v1061 = v877[0];
  OUTLINED_FUNCTION_40_17(v867, v407, v446, v464, v481, v498, v515, v533, v552, v569, v586, v603, v620, v637, v654, v671, v688, v707, v726,
    v743,
    v760,
    v778,
    v795,
    v812,
    v831,
    v850);
  v1062 = v124;
  OUTLINED_FUNCTION_12_87(v1063, v689);
  OUTLINED_FUNCTION_32_34();
  if (v123 == 2 || ((v136 ^ (v123 != 0)) & 1) != 0)
  {
    v1053[0] = 41;
    v137 = OUTLINED_FUNCTION_25_50();
    v138 = OUTLINED_FUNCTION_8_90(v137);
    v1058 = BYTE4(v986);
    v1059 = v1005[2];
    OUTLINED_FUNCTION_9_90((uint64_t)v138, v139, v140, v141, v142, v143, v144, v145, v408, v447, v465, v482, v499, v516, v534, v553, v570, v587, v604,
      v621,
      v638,
      v655,
      v672,
      (uint64_t)v689,
      v708,
      v727,
      v744,
      v761,
      v779,
      v796,
      v813,
      v832,
      v851,
      *(int *)v877,
      v877[4],
      v890,
      v898,
      *(__int16 *)v904,
      v904[2],
      v912,
      v920,
      *(__int16 *)v926,
      v926[2],
      v934,
      v942,
      v948,
      *(int *)v955,
      v955[4],
      v962,
      v970,
      *(__int16 *)v976,
      v976[2],
      v986,
      v999,
      *(int *)&v1005[2],
      v1017,
      *(__int16 *)v1023,
      v1023[2],
      v1030,
      v1037,
      *(__int16 *)v1038,
      v1038[2],
      v1040);
    v1060 = v986;
    v1061 = v135;
    OUTLINED_FUNCTION_40_17(v868, v409, v448, v466, v483, v500, v517, v535, v554, v571, v588, v605, v622, v639, v656, v673, v690, v709, v728,
      v745,
      v762,
      v780,
      v797,
      v814,
      v833,
      v852);
    v1062 = v124;
    OUTLINED_FUNCTION_1_104(v146, v147, v148, v149, v150, v151, v152, v153, v410, v434);
    OUTLINED_FUNCTION_32_34();
    OUTLINED_FUNCTION_26_50();
  }
  OUTLINED_FUNCTION_24_55();
  v154 = OUTLINED_FUNCTION_25_50();
  OUTLINED_FUNCTION_41_15((uint64_t)v154);
  if (v16)
  {
    v156 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_1_76(v1053, &v1056);
    OUTLINED_FUNCTION_33_36();
    v156 = v155 & 1;
  }
  v157 = v986;
  v158 = OUTLINED_FUNCTION_8_90(v1053);
  OUTLINED_FUNCTION_4_102((uint64_t)v158, v159, v160, v161, v162, v163, v164, v165, v408, v447, v465, v482, v499, v516, v534, v553, v570, v587, v604,
    v621,
    v638,
    v655,
    v672,
    (uint64_t)v689,
    v708,
    v727,
    v744,
    v761,
    v779,
    v796,
    v813,
    v832,
    v851,
    *(int *)v877,
    v877[4],
    v890,
    v898,
    *(__int16 *)v904,
    v904[2],
    v912,
    v920,
    *(__int16 *)v926,
    v926[2],
    v934,
    v942,
    v948,
    *(int *)v955,
    v955[4],
    v962,
    v970,
    *(__int16 *)v976,
    v976[2],
    v986,
    SBYTE4(v986),
    SHIWORD(v986),
    v999,
    *(__int16 *)v1005,
    v1005[2],
    *(__int16 *)&v1005[4],
    v1017,
    *(__int16 *)v1023,
    v1023[2],
    v1030);
  v1054 = v157;
  OUTLINED_FUNCTION_31_41(v166, v167, v168, v169, v170, v171, v172, v173, v411, v449, v467, v484, v501, v518, v536, v555, v572, v589, v606,
    v623,
    v640,
    v657,
    v674,
    v691,
    v710,
    v729,
    v746,
    v763,
    v781,
    v798,
    v815,
    v834,
    v853,
    v869);
  v1055 = v124;
  OUTLINED_FUNCTION_1_104(v174, v175, v176, v177, v178, v179, v180, v181, v412, v435);
  OUTLINED_FUNCTION_33_36();
  OUTLINED_FUNCTION_34_36();
  if (v156 == 2 || ((v182 ^ v183) & 1) != 0)
  {
    v1050[0] = 42;
    v184 = OUTLINED_FUNCTION_8_90(v1053);
    OUTLINED_FUNCTION_4_102((uint64_t)v184, v185, v186, v187, v188, v189, v190, v191, v413, v450, v468, v485, v502, v519, v537, v556, v573, v590, v607,
      v624,
      v641,
      v658,
      v675,
      v692,
      v711,
      v730,
      v747,
      v764,
      v782,
      v799,
      v816,
      v835,
      v854,
      *(int *)v878,
      v878[4],
      v891,
      v899,
      *(__int16 *)v905,
      v905[2],
      v913,
      v921,
      *(__int16 *)v927,
      v927[2],
      v935,
      v943,
      v949,
      *(int *)v956,
      v956[4],
      v963,
      v971,
      *(__int16 *)v977,
      v977[2],
      *(int *)v987,
      v987[4],
      v993,
      v1000,
      *(__int16 *)v1006,
      v1006[2],
      v1011,
      v1018,
      *(__int16 *)v1024,
      v1024[2],
      v1031);
    v1054 = v987[0];
    OUTLINED_FUNCTION_31_41(v192, v193, v194, v195, v196, v197, v198, v199, v414, v451, v469, v486, v503, v520, v538, v557, v574, v591, v608,
      v625,
      v642,
      v659,
      v676,
      v693,
      v712,
      v731,
      v748,
      v765,
      v783,
      v800,
      v817,
      v836,
      v855,
      v870);
    v1055 = v124;
    OUTLINED_FUNCTION_1_104(v200, v201, v202, v203, v204, v205, v206, v207, v415, v436);
    OUTLINED_FUNCTION_33_36();
    OUTLINED_FUNCTION_26_50();
  }
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1053);
  OUTLINED_FUNCTION_41_15((uint64_t)v1053);
  if (v16)
  {
    v209 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_1_76(v1050, v1053);
    OUTLINED_FUNCTION_29_56();
    v209 = v208 & 1;
  }
  v210 = v987[0];
  v211 = OUTLINED_FUNCTION_8_90(v1050);
  OUTLINED_FUNCTION_7_86((uint64_t)v211, v212, v213, v214, v215, v216, v217, v218, v413, v450, v468, v485, v502, v519, v537, v556, v573, v590, v607,
    v624,
    v641,
    v658,
    v675,
    v692,
    v711,
    v730,
    v747,
    v764,
    v782,
    v799,
    v816,
    v835,
    v854,
    *(int *)v878,
    v878[4],
    v891,
    v899,
    *(__int16 *)v905,
    v905[2],
    v913,
    v921,
    *(__int16 *)v927,
    v927[2],
    v935,
    v943,
    v949,
    *(int *)v956,
    v956[4],
    v963,
    v971,
    *(__int16 *)v977,
    v977[2],
    *(int *)v987,
    v987[4],
    v993,
    v1000,
    *(__int16 *)v1006,
    v1006[2],
    v1011,
    v1018,
    *(__int16 *)v1024,
    v1024[2],
    v1031);
  v1051 = v210;
  OUTLINED_FUNCTION_23_60(v219, v220, v221, v222, v223, v224, v225, v226, v416, v452, v470, v487, v504, v521, v539, v558, v575, v592, v609,
    v626,
    v643,
    v660,
    v677,
    v694,
    v713,
    v732,
    v749,
    v766,
    v784,
    v801,
    v818,
    v837,
    v856,
    v871,
    v873,
    v879);
  v1052 = v124;
  OUTLINED_FUNCTION_1_104(v227, v228, v229, v230, v231, v232, v233, v234, v417, v437);
  OUTLINED_FUNCTION_29_56();
  OUTLINED_FUNCTION_34_36();
  if (v209 == 2 || ((v235 ^ v236) & 1) != 0)
  {
    v1047[0] = 43;
    v237 = OUTLINED_FUNCTION_8_90(v1050);
    OUTLINED_FUNCTION_7_86((uint64_t)v237, v238, v239, v240, v241, v242, v243, v244, v418, v453, v471, v488, v505, v522, v540, v559, v576, v593, v610,
      v627,
      v644,
      v661,
      v678,
      v695,
      v714,
      v733,
      v750,
      v767,
      v785,
      v802,
      v819,
      v838,
      v857,
      *(int *)v880,
      v880[4],
      v892,
      v900,
      *(__int16 *)v906,
      v906[2],
      v914,
      v922,
      *(__int16 *)v928,
      v928[2],
      v936,
      v944,
      v950,
      *(int *)v957,
      v957[4],
      v964,
      v972,
      *(__int16 *)v978,
      v978[2],
      *(int *)v988,
      v988[4],
      v994,
      v1001,
      *(__int16 *)v1007,
      v1007[2],
      v1012,
      v1019,
      *(__int16 *)v1025,
      v1025[2],
      v1032);
    v1051 = v988[0];
    OUTLINED_FUNCTION_23_60(v245, v246, v247, v248, v249, v250, v251, v252, v419, v454, v472, v489, v506, v523, v541, v560, v577, v594, v611,
      v628,
      v645,
      v662,
      v679,
      v696,
      v715,
      v734,
      v751,
      v768,
      v786,
      v803,
      v820,
      v839,
      v858,
      v872,
      v874,
      v881);
    v1052 = v124;
    OUTLINED_FUNCTION_1_104(v253, v254, v255, v256, v257, v258, v259, v260, v420, v438);
    OUTLINED_FUNCTION_29_56();
    OUTLINED_FUNCTION_26_50();
  }
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1050);
  OUTLINED_FUNCTION_41_15((uint64_t)v1050);
  if (v16)
  {
    v262 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_1_76(v1047, v1050);
    OUTLINED_FUNCTION_28_50();
    v262 = v261 & 1;
  }
  v263 = v988[0];
  v264 = OUTLINED_FUNCTION_8_90(v1047);
  OUTLINED_FUNCTION_6_89((uint64_t)v264, v265, v266, v267, v268, v269, v270, v271, v418, v453, v471, v488, v505, v522, v540, v559, v576, v593, v610,
    v627,
    v644,
    v661,
    v678,
    v695,
    v714,
    v733,
    v750,
    v767,
    v785,
    v802,
    v819,
    v838,
    v857,
    *(int *)v880,
    v880[4],
    v892,
    v900,
    *(__int16 *)v906,
    v906[2],
    v914,
    v922,
    *(__int16 *)v928,
    v928[2],
    v936,
    v944,
    v950,
    *(int *)v957,
    v957[4],
    v964,
    v972,
    *(__int16 *)v978,
    v978[2],
    *(int *)v988,
    v988[4],
    v994,
    v1001,
    *(__int16 *)v1007,
    v1007[2],
    v1012,
    v1019,
    *(__int16 *)v1025,
    v1025[2],
    v1032);
  v1048 = v263;
  OUTLINED_FUNCTION_35_23(v272, v273, v274, v275, v276, v277, v278, v279, v421, v455, v473, v490, v507, v524, v542, v561, v578, v595, v612,
    v629,
    v646,
    v663,
    v680,
    v697,
    v716,
    v735,
    v752,
    v769,
    v787,
    v804,
    v821,
    v840,
    v859,
    v882);
  v1049 = v124;
  OUTLINED_FUNCTION_1_104(v280, v281, v282, v283, v284, v285, v286, v287, v422, v439);
  OUTLINED_FUNCTION_28_50();
  OUTLINED_FUNCTION_34_36();
  if (v262 == 2 || ((v288 ^ v289) & 1) != 0)
  {
    v1044[0] = 44;
    v290 = OUTLINED_FUNCTION_8_90(v1047);
    OUTLINED_FUNCTION_6_89((uint64_t)v290, v291, v292, v293, v294, v295, v296, v297, v423, v456, v474, v491, v508, v525, v543, v562, v579, v596, v613,
      v630,
      v647,
      v664,
      v681,
      v698,
      v717,
      v736,
      v753,
      v770,
      v788,
      v805,
      v822,
      v841,
      v860,
      *(int *)v883,
      v883[4],
      v893,
      v901,
      *(__int16 *)v907,
      v907[2],
      v915,
      v923,
      *(__int16 *)v929,
      v929[2],
      v937,
      v945,
      v951,
      *(int *)v958,
      v958[4],
      v965,
      v973,
      *(__int16 *)v979,
      v979[2],
      *(int *)v989,
      v989[4],
      v995,
      v1002,
      *(__int16 *)v1008,
      v1008[2],
      v1013,
      v1020,
      *(__int16 *)v1026,
      v1026[2],
      v1033);
    v1048 = v989[0];
    OUTLINED_FUNCTION_35_23(v298, v299, v300, v301, v302, v303, v304, v305, v424, v457, v475, v492, v509, v526, v544, v563, v580, v597, v614,
      v631,
      v648,
      v665,
      v682,
      v699,
      v718,
      v737,
      v754,
      v771,
      v789,
      v806,
      v823,
      v842,
      v861,
      v884);
    v1049 = v124;
    OUTLINED_FUNCTION_1_104(v306, v307, v308, v309, v310, v311, v312, v313, v425, v440);
    OUTLINED_FUNCTION_28_50();
    OUTLINED_FUNCTION_26_50();
  }
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1047);
  OUTLINED_FUNCTION_41_15((uint64_t)v1047);
  if (v16)
  {
    v315 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_1_76(v1044, v1047);
    OUTLINED_FUNCTION_48_8();
    v315 = v314 & 1;
  }
  v316 = v989[0];
  v317 = OUTLINED_FUNCTION_8_90(v1044);
  OUTLINED_FUNCTION_3_100((uint64_t)v317, v318, v319, v320, v321, v322, v323, v324, v423, v456, v474, v491, v508, v525, v543, v562, v579, v596, v613,
    v630,
    v647,
    v664,
    v681,
    v698,
    v717,
    v736,
    v753,
    v770,
    v788,
    v805,
    v822,
    v841,
    v860,
    *(int *)v883,
    v883[4],
    v893,
    v901,
    *(__int16 *)v907,
    v907[2],
    v915,
    v923,
    *(__int16 *)v929,
    v929[2],
    v937,
    v945,
    v951,
    *(int *)v958,
    v958[4],
    v965,
    v973,
    *(__int16 *)v979,
    v979[2],
    *(int *)v989,
    v989[4],
    v995,
    v1002,
    *(__int16 *)v1008,
    v1008[2],
    v1013,
    v1020,
    *(__int16 *)v1026,
    v1026[2],
    v1033);
  v1045 = v316;
  OUTLINED_FUNCTION_36_27(v325, v326, v327, v328, v329, v330, v331, v332, v426, v458, v476, v493, v510, v527, v545, v564, v581, v598, v615,
    v632,
    v649,
    v666,
    v683,
    v700,
    v719,
    v738,
    v755,
    v772,
    v790,
    v807,
    v824,
    v843,
    v862,
    v885);
  v1046 = v124;
  OUTLINED_FUNCTION_1_104(v333, v334, v335, v336, v337, v338, v339, v340, v427, v441);
  OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_34_36();
  if (v315 == 2 || ((v341 ^ v342) & 1) != 0)
  {
    v1041[0] = 45;
    v343 = OUTLINED_FUNCTION_8_90(v1044);
    OUTLINED_FUNCTION_3_100((uint64_t)v343, v344, v345, v346, v347, v348, v349, v350, v428, v459, v477, v494, v511, v528, v546, v565, v582, v599, v616,
      v633,
      v650,
      v667,
      v684,
      v701,
      v720,
      v739,
      v756,
      v773,
      v791,
      v808,
      v825,
      v844,
      v863,
      *(int *)v886,
      v886[4],
      v894,
      v902,
      *(__int16 *)v908,
      v908[2],
      v916,
      v924,
      *(__int16 *)v930,
      v930[2],
      v938,
      v946,
      v952,
      *(int *)v959,
      v959[4],
      v966,
      v974,
      *(__int16 *)v980,
      v980[2],
      *(int *)v990,
      v990[4],
      v996,
      v1003,
      *(__int16 *)v1009,
      v1009[2],
      v1014,
      v1021,
      *(__int16 *)v1027,
      v1027[2],
      v1034);
    v1045 = v990[0];
    OUTLINED_FUNCTION_36_27(v351, v352, v353, v354, v355, v356, v357, v358, v429, v460, v478, v495, v512, v529, v547, v566, v583, v600, v617,
      v634,
      v651,
      v668,
      v685,
      v702,
      v721,
      v740,
      v757,
      v774,
      v792,
      v809,
      v826,
      v845,
      v864,
      v887);
    v1046 = v124;
    OUTLINED_FUNCTION_1_104(v359, v360, v361, v362, v363, v364, v365, v366, v430, v442);
    OUTLINED_FUNCTION_48_8();
    OUTLINED_FUNCTION_26_50();
  }
  sub_1AFCCB5D4((uint64_t)v1105, (uint64_t)v1044);
  OUTLINED_FUNCTION_41_15((uint64_t)v1044);
  if (v16)
  {
    v368 = 2;
  }
  else
  {
    OUTLINED_FUNCTION_1_76(v1041, v1044);
    OUTLINED_FUNCTION_50_6();
    v368 = v367 & 1;
  }
  v369 = v990[0];
  v370 = OUTLINED_FUNCTION_8_90(v1041);
  OUTLINED_FUNCTION_5_95((uint64_t)v370, v371, v372, v373, v374, v375, v376, v377, v428, v459, v477, v494, v511, v528, v546, v565, v582, v599, v616,
    v633,
    v650,
    v667,
    v684,
    v701,
    v720,
    v739,
    v756,
    v773,
    v791,
    v808,
    v825,
    v844,
    v863,
    *(int *)v886,
    v886[4],
    v894,
    v902,
    *(__int16 *)v908,
    v908[2],
    v916,
    v924,
    *(__int16 *)v930,
    v930[2],
    v938,
    v946,
    v952,
    *(int *)v959,
    v959[4],
    v966,
    v974,
    *(__int16 *)v980,
    v980[2],
    *(int *)v990,
    v990[4],
    v996,
    v1003,
    *(__int16 *)v1009,
    v1009[2],
    v1014,
    v1021,
    *(__int16 *)v1027,
    v1027[2],
    v1034);
  v1042 = v369;
  OUTLINED_FUNCTION_38_22();
  v1043 = v124;
  OUTLINED_FUNCTION_1_104(v378, v379, v380, v381, v382, v383, v384, v385, v431, v443);
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_34_36();
  if (v368 == 2 || ((v386 ^ v387) & 1) != 0)
  {
    v388 = OUTLINED_FUNCTION_8_90(v1041);
    OUTLINED_FUNCTION_5_95((uint64_t)v388, v389, v390, v391, v392, v393, v394, v395, v432, v461, v479, v496, v513, v530, v548, v567, v584, v601, v618,
      v635,
      v652,
      v669,
      v686,
      v703,
      v722,
      v741,
      v758,
      v775,
      v793,
      v810,
      v827,
      v846,
      v865,
      *(int *)v888,
      v888[4],
      v895,
      v903,
      *(__int16 *)v909,
      v909[2],
      v917,
      v925,
      *(__int16 *)v931,
      v931[2],
      v939,
      v947,
      v953,
      *(int *)v960,
      v960[4],
      v967,
      v975,
      *(__int16 *)v981,
      v981[2],
      *(int *)v991,
      v991[4],
      v997,
      v1004,
      *(__int16 *)v1010,
      v1010[2],
      v1015,
      v1022,
      *(__int16 *)v1028,
      v1028[2],
      v1035);
    v1042 = v992;
    OUTLINED_FUNCTION_38_22();
    v1043 = v124;
    OUTLINED_FUNCTION_1_104(v396, v397, v398, v399, v400, v401, v402, v403, v433, v444);
    OUTLINED_FUNCTION_50_6();
    goto LABEL_166;
  }
}

uint64_t sub_1AFD994EC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  uint64_t v36;
  const void *v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  char *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  _BYTE v66[3];
  int v67;
  __int16 v68;
  int v69;
  char v70;
  _BYTE v71[3];
  int v72;
  __int16 v73;
  int v74;
  char v75;
  _BYTE v76[3];
  int v77;
  __int16 v78;
  int v79;
  char v80;
  _BYTE v81[3];
  int v82;
  __int16 v83;
  int v84;
  char v85;
  _BYTE v86[3];
  int v87;
  __int16 v88;
  int v89;
  char v90;
  _BYTE v91[3];
  int v92;
  __int16 v93;
  int v94;
  char v95;
  _BYTE v96[3];
  int v97;
  __int16 v98;
  int v99;
  char v100;
  _BYTE v101[3];
  int v102;
  __int16 v103;
  char v104;
  char v105;
  _BYTE v106[1629];
  char v107;
  char v108;
  char v109;
  _BYTE v110[690];
  char v111;
  _BYTE v112[680];
  _BYTE v113[1648];

  v1 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v5 = v4;
  v6 = v1;
  OUTLINED_FUNCTION_11_83(v113, v1);
  LODWORD(v54) = v6[1630];
  HIDWORD(v54) = v6[1629];
  HIDWORD(v52) = v6[1631];
  v7 = v6[1632];
  LODWORD(v50) = v6[1634];
  HIDWORD(v50) = v6[1633];
  HIDWORD(v48) = v6[1635];
  v102 = v6[1637];
  v104 = v6[1636];
  v97 = v6[1639];
  v99 = v6[1638];
  v92 = v6[1641];
  v94 = v6[1640];
  v87 = v6[1643];
  v89 = v6[1642];
  v82 = v6[1645];
  v84 = v6[1644];
  v77 = v6[1647];
  v79 = v6[1646];
  v72 = v6[1649];
  v74 = v6[1648];
  v67 = v6[1651];
  v69 = v6[1650];
  v64 = v6[1652];
  OUTLINED_FUNCTION_12_87(v112, v6 + 1653);
  HIDWORD(v46) = *v3;
  LODWORD(v48) = *v5;
  v106[0] = *v5;
  LODWORD(v52) = v7;
  v42 = (char *)sub_1AFE830A4(v7 & 1);
  v8 = *((_QWORD *)v42 + 2);
  if (v8)
  {
    v9 = v42 + 32;
    v10 = v110;
    v44 = v110;
    v12 = v54;
    v11 = BYTE4(v54);
    v13 = BYTE4(v52);
    do
    {
      v56 = (uint64_t)(v9 + 1);
      v60 = v8;
      v111 = *v9;
      v14 = v111;
      v15 = OUTLINED_FUNCTION_11_83(v106, v113);
      v107 = v11;
      v108 = v12;
      v109 = v13;
      OUTLINED_FUNCTION_0_116((uint64_t)v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v42, (uint64_t)v44, v46, v48, v50, v52, v54, v56, v60, v64, SHIWORD(v64),
        v67,
        SHIWORD(v67),
        v69,
        SHIWORD(v69),
        v72,
        SHIWORD(v72),
        v74,
        SHIWORD(v74),
        v77,
        SHIWORD(v77),
        v79,
        SHIWORD(v79),
        v82,
        SHIWORD(v82),
        v84,
        SHIWORD(v84),
        v87,
        SHIWORD(v87),
        v89,
        SHIWORD(v89),
        v92,
        SHIWORD(v92),
        v94,
        SHIWORD(v94),
        v97,
        SHIWORD(v97),
        v99,
        SHIWORD(v99),
        v102,
        SHIWORD(v102),
        v104);
      OUTLINED_FUNCTION_12_87(v10, v23);
      OUTLINED_FUNCTION_47_8();
      sub_1AFD999D0(v24, v25, v26);
      v111 = v14;
      v27 = OUTLINED_FUNCTION_11_83(v106, v113);
      v107 = v11;
      v108 = v12;
      v109 = v13;
      if ((v49 & 1) != 0)
      {
        OUTLINED_FUNCTION_0_116((uint64_t)v27, v28, v29, v30, v31, v32, v33, v34, v43, v45, v47, v49, v51, v53, v55, v57, v61, v65, *(__int16 *)v66,
          v66[2],
          v68,
          v70,
          *(__int16 *)v71,
          v71[2],
          v73,
          v75,
          *(__int16 *)v76,
          v76[2],
          v78,
          v80,
          *(__int16 *)v81,
          v81[2],
          v83,
          v85,
          *(__int16 *)v86,
          v86[2],
          v88,
          v90,
          *(__int16 *)v91,
          v91[2],
          v93,
          v95,
          *(__int16 *)v96,
          v96[2],
          v98,
          v100,
          *(__int16 *)v101,
          v101[2],
          v103,
          v105);
        v10 = v44;
        OUTLINED_FUNCTION_12_87(v44, v35);
        sub_1AFD9CE70(&v111, (uint64_t)v106);
        v9 = v58;
        v36 = v62;
      }
      else
      {
        OUTLINED_FUNCTION_0_116((uint64_t)v27, v28, v29, v30, v31, v32, v33, v34, v43, v45, v47, v49, v51, v53, v55, v57, v61, v65, *(__int16 *)v66,
          v66[2],
          v68,
          v70,
          *(__int16 *)v71,
          v71[2],
          v73,
          v75,
          *(__int16 *)v76,
          v76[2],
          v78,
          v80,
          *(__int16 *)v81,
          v81[2],
          v83,
          v85,
          *(__int16 *)v86,
          v86[2],
          v88,
          v90,
          *(__int16 *)v91,
          v91[2],
          v93,
          v95,
          *(__int16 *)v96,
          v96[2],
          v98,
          v100,
          *(__int16 *)v101,
          v101[2],
          v103,
          v105);
        OUTLINED_FUNCTION_12_87(v44, v37);
        OUTLINED_FUNCTION_47_8();
        sub_1AFD9A15C(v38, v39, v40);
        v9 = v59;
        v36 = v63;
        v10 = v44;
      }
      v8 = v36 - 1;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFD99724(uint64_t result)
{
  float64x2_t *v1;
  uint64_t inited;
  float32x4_t v3;
  __n128 v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __int128 v27;
  __n128 v28;
  __n128 *v29;

  if ((*(_BYTE *)(result + 104) & 1) == 0)
  {
    v1 = (float64x2_t *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C60);
    inited = swift_initStackObject();
    v3 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*v1), v1[1]);
    *(_OWORD *)(inited + 16) = xmmword_1B00275B0;
    *(float32x4_t *)(inited + 32) = v3;
    v4.n128_f64[0] = sub_1AFAE64F0();
    v25 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
    v5 = (__n128 *)OUTLINED_FUNCTION_19_58();
    OUTLINED_FUNCTION_15_84(v5, v25);
    OUTLINED_FUNCTION_49_7();
    v6 = swift_initStackObject();
    OUTLINED_FUNCTION_30_46(v6, v1[3], v1[2], v7, v8, v9, v10, v11, v12, v13, v25.n128_i64[0], v25.n128_i64[1], xmmword_1B00275B0);
    v26 = v14;
    v15 = (__n128 *)OUTLINED_FUNCTION_19_58();
    OUTLINED_FUNCTION_15_84(v15, v26);
    OUTLINED_FUNCTION_49_7();
    v16 = swift_initStackObject();
    OUTLINED_FUNCTION_30_46(v16, v1[5], v1[4], v17, v18, v19, v20, v21, v22, v23, v26.n128_i64[0], v26.n128_i64[1], v27);
    v28 = v24;
    v29 = (__n128 *)OUTLINED_FUNCTION_19_58();
    OUTLINED_FUNCTION_15_84(v29, v28);
    return OUTLINED_FUNCTION_49_7();
  }
  return result;
}

uint64_t WeatherVFXEffect.applyOverrides(_:config:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  int v5;
  uint64_t v6;
  char v7;
  float *v8;
  uint64_t v9;
  float v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  float v15[6];
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *(float *)(a2 + 1228);
    v5 = *(unsigned __int8 *)(a2 + 1280);
    v6 = *(_QWORD *)(v2 + 40);
    v7 = *(_BYTE *)(v2 + 48);
    v8 = (float *)(swift_bridgeObjectRetain() + 36);
    v9 = MEMORY[0x1E0DEB188];
    do
    {
      v10 = *v8;
      *(_QWORD *)&v11 = 0;
      *((_QWORD *)&v11 + 1) = *((unsigned int *)v8 - 1);
      v14 = v11;
      v17 = 1;
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C78);
      *(_QWORD *)v15 = OUTLINED_FUNCTION_19_58();
      *(_OWORD *)(*(_QWORD *)v15 + 16) = v14;
      sub_1AFD980FC(v6, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      if (v5)
      {
        v12 = *(_QWORD *)(v2 + 24);
        v13 = *(_BYTE *)(v2 + 32);
        v17 = -81;
        v16 = v9;
        v15[0] = v4
               + (float)((float)((float)(v4 + 16.0) - v4)
                       * (float)((float)((float)((float)(v10 + -0.5) * (float)(v10 + -0.5)) * -4.0) + 1.0));
        sub_1AFD980FC(v12, v13);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      }
      v8 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFD999C0()
{
  return swift_deallocObject();
}

_BYTE *sub_1AFD999D0(_BYTE *result, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  int v38;
  int v39;
  __int128 v40;
  _QWORD v41[3];
  uint64_t v42;
  char v43;

  if (*result == 1)
  {
    v38 = *(_DWORD *)(a2 + 1980);
    v39 = *(_DWORD *)(a2 + 1984);
    v36 = *(_OWORD *)(a2 + 464);
    v37 = *(_OWORD *)(a2 + 480);
    v35 = *(_QWORD *)(a2 + 448);
    v33 = *(_DWORD *)(a2 + 440);
    v34 = *(_DWORD *)(a2 + 444);
    v32 = *(_DWORD *)(a2 + 436);
    v30 = *(_OWORD *)(a2 + 288);
    v31 = *(_OWORD *)(a2 + 304);
    v28 = *(_DWORD *)(a2 + 268);
    v26 = *(_DWORD *)(a2 + 272);
    v27 = *(_DWORD *)(a2 + 264);
    v29 = *(_QWORD *)(a2 + 256);
    v24 = *(_DWORD *)(a2 + 248);
    v25 = *(_DWORD *)(a2 + 244);
    v23 = *(_DWORD *)(a2 + 236);
    v9 = *(_DWORD *)(a2 + 164);
    v8 = *(_DWORD *)(a2 + 168);
    v10 = *(_DWORD *)(a2 + 160);
    v21 = *(_OWORD *)(a2 + 128);
    v22 = *(_OWORD *)(a2 + 144);
    v20 = *(_QWORD *)(a2 + 112);
    v11 = *(_DWORD *)(a2 + 104);
    v12 = *(_DWORD *)(a2 + 108);
    v14 = *(_DWORD *)(a2 + 96);
    v13 = *(_DWORD *)(a2 + 100);
    v15 = *(_DWORD *)(a2 + 88);
    v16 = *(_DWORD *)(a2 + 92);
    v5 = *(_QWORD *)(v3 + 24);
    v6 = *(_BYTE *)(v3 + 32);
    v43 = 86;
    v17 = MEMORY[0x1E0DEB188];
    v42 = MEMORY[0x1E0DEB188];
    LODWORD(v41[0]) = v15;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 87;
    v42 = v17;
    LODWORD(v41[0]) = v16;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 88;
    v42 = v17;
    LODWORD(v41[0]) = v14;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = -44;
    v42 = v17;
    LODWORD(v41[0]) = v13;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 40;
    v42 = v17;
    LODWORD(v41[0]) = v12;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 41;
    v42 = v17;
    LODWORD(v41[0]) = v11;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 45;
    v42 = v17;
    LODWORD(v41[0]) = v10;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 46;
    v42 = v17;
    LODWORD(v41[0]) = v9;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 47;
    v42 = v17;
    LODWORD(v41[0]) = v8;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 42;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
    v42 = v18;
    v41[0] = v20;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 43;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v21;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 44;
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v22;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = -43;
    v42 = v17;
    LODWORD(v41[0]) = v23;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 58;
    v42 = v17;
    LODWORD(v41[0]) = v24;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 59;
    v42 = v17;
    LODWORD(v41[0]) = v25;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 63;
    v42 = v17;
    LODWORD(v41[0]) = v26;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 61;
    v42 = v17;
    LODWORD(v41[0]) = v27;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 62;
    v42 = v17;
    LODWORD(v41[0]) = v28;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 60;
    v42 = v18;
    v41[0] = v29;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 64;
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v30;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 65;
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v31;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = -41;
    v42 = v17;
    LODWORD(v41[0]) = v32;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 104;
    v42 = v17;
    LODWORD(v41[0]) = v33;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 105;
    v42 = v17;
    LODWORD(v41[0]) = v34;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 106;
    v42 = v18;
    v41[0] = v35;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 107;
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v36;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 108;
    v42 = v19;
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v37;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 56;
    v42 = v17;
    LODWORD(v41[0]) = v38;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 57;
    v42 = v17;
    LODWORD(v41[0]) = v39;
  }
  else
  {
    if (*result)
      return result;
    v4 = *(_DWORD *)(a2 + 80);
    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_BYTE *)(v3 + 48);
    if ((*a3 & 1) != 0)
      v7 = *(_OWORD *)(a2 + 48);
    else
      v7 = *(_OWORD *)(a2 + 32);
    v40 = v7;
    v43 = 0;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C78);
    v41[0] = swift_allocObject();
    *(_OWORD *)(v41[0] + 16) = v40;
    sub_1AFD980FC(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v43 = 3;
    v42 = MEMORY[0x1E0DEB188];
    LODWORD(v41[0]) = v4;
  }
  sub_1AFD980FC(v5, v6);
  return (_BYTE *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

_BYTE *sub_1AFD9A15C(_BYTE *result, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  __int128 v61;
  int v62;
  __int128 v63;
  __int128 v64;
  int v65;
  int v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  int v76;
  int v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  int v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  __int128 v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  char v103;
  __int128 v104;
  __int128 v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  char v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  char v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  char v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  int v133;
  int v134;
  char v135;
  int v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  int v144;
  __int128 v145;
  int v146;
  int v147;
  __int128 v148;
  int v149;
  int v150;
  int v151;
  int v152;
  __int128 v153;
  int v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  int v160;
  __int128 v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  uint64_t v177;
  int v178;
  int v179;
  __int128 v180;
  int v181;
  int v182;
  int v183;
  int v184;
  uint64_t v185;
  int v186;
  int v187;
  uint64_t v188;
  int v189;
  __int128 v190;
  int v191;
  int v192;
  int v193;
  uint64_t v194;
  __int128 v195;
  int v196;
  __int128 v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t v207;
  int v208;
  __int128 v209;
  int v210;
  uint64_t v211;
  __int128 v212;
  uint64_t v213;
  int v214;
  __int128 v215;
  _QWORD v216[3];
  uint64_t v217;
  char v218;

  v4 = *result;
  switch(v4)
  {
    case 24:
      v47 = *(_DWORD *)(a2 + 1528);
      v48 = *(_QWORD *)(a2 + 1520);
      v49 = *(_QWORD *)(a2 + 1512);
      v50 = *(_DWORD *)(a2 + 1508);
      v51 = *(_DWORD *)(a2 + 1504);
      v212 = *(_OWORD *)(a2 + 1488);
      v215 = *(_OWORD *)(a2 + 1536);
      v209 = *(_OWORD *)(a2 + 1472);
      v52 = *(_QWORD *)(a2 + 1456);
      v53 = *(_DWORD *)(a2 + 1448);
      v54 = *(_DWORD *)(a2 + 1444);
      v55 = *(_DWORD *)(a2 + 1440);
      v14 = *(_QWORD *)(v3 + 72);
      v15 = *(_BYTE *)(v3 + 80);
      v218 = 26;
      v56 = MEMORY[0x1E0DEB188];
      v217 = MEMORY[0x1E0DEB188];
      LODWORD(v216[0]) = v55;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 27;
      v216[0] = v49;
      v216[1] = v48;
      swift_bridgeObjectRetain();
      sub_1B0008644();
      v217 = MEMORY[0x1E0DEA968];
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 28;
      v217 = v56;
      LODWORD(v216[0]) = v54;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 29;
      v217 = v56;
      LODWORD(v216[0]) = v53;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 30;
      v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
      v216[0] = v52;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 31;
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
      v217 = v57;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v209;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 32;
      v217 = v57;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v212;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 34;
      v217 = v56;
      LODWORD(v216[0]) = v50;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 33;
      v217 = v56;
      LODWORD(v216[0]) = v51;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 35;
      v217 = v56;
      LODWORD(v216[0]) = v47;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 36;
      v217 = v57;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v215;
      break;
    case 1:
      v62 = *(_DWORD *)(a2 + 1804);
      v61 = *(_OWORD *)(a2 + 1808);
      v164 = *(_QWORD *)(a2 + 2304);
      v162 = *(_QWORD *)(a2 + 2296);
      v159 = *(_QWORD *)(a2 + 2288);
      v157 = *(_QWORD *)(a2 + 2280);
      v155 = *(_QWORD *)(a2 + 2272);
      v153 = *(_OWORD *)(a2 + 2256);
      v151 = *(_DWORD *)(a2 + 2252);
      v149 = *(_DWORD *)(a2 + 2248);
      v147 = *(_DWORD *)(a2 + 2244);
      v146 = *(_DWORD *)(a2 + 2240);
      v145 = *(_OWORD *)(a2 + 2224);
      v144 = *(_DWORD *)(a2 + 2212);
      v143 = *(_DWORD *)(a2 + 2208);
      v142 = *(_QWORD *)(a2 + 2200);
      v140 = *(_QWORD *)(a2 + 2008);
      v139 = *(_QWORD *)(a2 + 2000);
      v138 = *(_DWORD *)(a2 + 1992);
      v137 = *(_DWORD *)(a2 + 1988);
      v200 = *(_DWORD *)(a2 + 1976);
      v198 = *(_DWORD *)(a2 + 1972);
      v196 = *(_DWORD *)(a2 + 1968);
      v194 = *(_QWORD *)(a2 + 1960);
      v192 = *(_DWORD *)(a2 + 1952);
      v190 = *(_OWORD *)(a2 + 1936);
      v186 = *(_DWORD *)(a2 + 1928);
      v185 = *(_QWORD *)(a2 + 1920);
      v184 = *(_DWORD *)(a2 + 1912);
      v183 = *(_DWORD *)(a2 + 1908);
      v181 = *(_DWORD *)(a2 + 1904);
      v180 = *(_OWORD *)(a2 + 1888);
      v179 = *(_DWORD *)(a2 + 1880);
      v141 = *(_QWORD *)(a2 + 1872);
      v178 = *(_DWORD *)(a2 + 1864);
      v177 = *(_QWORD *)(a2 + 1856);
      v176 = *(_DWORD *)(a2 + 1852);
      v175 = *(_DWORD *)(a2 + 1848);
      v11 = *(_DWORD *)(a2 + 172);
      LODWORD(v216[0]) = *(_DWORD *)(a2 + 176);
      v174 = *(_DWORD *)(a2 + 1844);
      v210 = *(unsigned __int8 *)(a2 + 1824);
      v207 = *(_QWORD *)(a2 + 1368);
      v135 = *(_BYTE *)(a2 + 1236);
      v131 = *(_QWORD *)(a2 + 1128);
      v129 = *(_BYTE *)(a2 + 1120);
      v122 = *(_QWORD *)(a2 + 1000);
      v120 = *(_BYTE *)(a2 + 992);
      v113 = *(_QWORD *)(a2 + 872);
      v111 = *(_BYTE *)(a2 + 864);
      v213 = *(_QWORD *)(a2 + 744);
      v103 = *(_BYTE *)(a2 + 736);
      v83 = *(_QWORD *)(a2 + 424);
      v12 = *(_QWORD *)(a2 + 400);
      v86 = *(_QWORD *)(a2 + 408);
      v13 = *(_BYTE *)(a2 + 384);
      v14 = *(_QWORD *)(v3 + 24);
      v15 = *(_BYTE *)(v3 + 32);
      v218 = 48;
      v217 = MEMORY[0x1E0DEB188];
      v16 = MEMORY[0x1E0DEB188];
      v173 = *(_DWORD *)(a2 + 1840);
      v172 = *(_DWORD *)(a2 + 1836);
      v187 = *(_DWORD *)(a2 + 1832);
      v182 = *(_DWORD *)(a2 + 1828);
      v154 = *(_DWORD *)(a2 + 1800);
      v150 = *(_DWORD *)(a2 + 1796);
      v152 = *(_DWORD *)(a2 + 1792);
      v148 = *(_OWORD *)(a2 + 1776);
      v171 = *(_DWORD *)(a2 + 1740);
      v170 = *(_DWORD *)(a2 + 1736);
      v93 = *(_QWORD *)(a2 + 1616);
      v91 = *(_OWORD *)(a2 + 1584);
      v92 = *(_OWORD *)(a2 + 1600);
      v90 = *(_QWORD *)(a2 + 1568);
      v89 = *(_DWORD *)(a2 + 1560);
      v88 = *(_DWORD *)(a2 + 1556);
      v87 = *(_DWORD *)(a2 + 1552);
      v158 = *(_OWORD *)(a2 + 1408);
      v156 = *(_OWORD *)(a2 + 1392);
      v161 = *(_OWORD *)(a2 + 1376);
      v205 = *(_QWORD *)(a2 + 1360);
      v201 = *(_DWORD *)(a2 + 1348);
      v203 = *(_DWORD *)(a2 + 1352);
      v199 = *(_DWORD *)(a2 + 1344);
      v197 = *(_OWORD *)(a2 + 1328);
      v195 = *(_OWORD *)(a2 + 1312);
      v193 = *(_DWORD *)(a2 + 1304);
      v191 = *(_DWORD *)(a2 + 1300);
      v189 = *(_DWORD *)(a2 + 1296);
      v188 = *(_QWORD *)(a2 + 1288);
      v134 = *(_DWORD *)(a2 + 1232);
      v94 = *(_DWORD *)(a2 + 1228);
      v95 = *(_DWORD *)(a2 + 1224);
      v96 = *(_DWORD *)(a2 + 1220);
      v133 = *(_DWORD *)(a2 + 1216);
      v132 = *(_OWORD *)(a2 + 1200);
      v130 = *(_OWORD *)(a2 + 1136);
      v128 = *(_DWORD *)(a2 + 1116);
      v127 = *(_DWORD *)(a2 + 1112);
      v126 = *(_QWORD *)(a2 + 1104);
      v125 = *(_QWORD *)(a2 + 1096);
      v124 = *(_DWORD *)(a2 + 1088);
      v123 = *(_OWORD *)(a2 + 1072);
      v121 = *(_OWORD *)(a2 + 1008);
      v119 = *(_DWORD *)(a2 + 988);
      v118 = *(_DWORD *)(a2 + 984);
      v117 = *(_QWORD *)(a2 + 976);
      v116 = *(_QWORD *)(a2 + 968);
      v115 = *(_DWORD *)(a2 + 960);
      v114 = *(_OWORD *)(a2 + 944);
      v112 = *(_OWORD *)(a2 + 880);
      v110 = *(_DWORD *)(a2 + 860);
      v109 = *(_DWORD *)(a2 + 856);
      v107 = *(_QWORD *)(a2 + 840);
      v108 = *(_QWORD *)(a2 + 848);
      v106 = *(_DWORD *)(a2 + 832);
      v104 = *(_OWORD *)(a2 + 752);
      v105 = *(_OWORD *)(a2 + 816);
      v102 = *(_DWORD *)(a2 + 732);
      v101 = *(_DWORD *)(a2 + 728);
      v99 = *(_QWORD *)(a2 + 712);
      v100 = *(_QWORD *)(a2 + 720);
      v98 = *(_DWORD *)(a2 + 704);
      v97 = *(_OWORD *)(a2 + 688);
      v169 = *(_QWORD *)(a2 + 672);
      v168 = *(_QWORD *)(a2 + 664);
      v167 = *(_QWORD *)(a2 + 656);
      v165 = *(_OWORD *)(a2 + 624);
      v166 = *(_OWORD *)(a2 + 640);
      v163 = *(_DWORD *)(a2 + 612);
      v160 = *(_DWORD *)(a2 + 608);
      v74 = *(_OWORD *)(a2 + 576);
      v75 = *(_OWORD *)(a2 + 592);
      v73 = *(_QWORD *)(a2 + 568);
      v72 = *(_DWORD *)(a2 + 564);
      v79 = *(_OWORD *)(a2 + 528);
      v80 = *(_OWORD *)(a2 + 544);
      v78 = *(_QWORD *)(a2 + 512);
      v76 = *(_DWORD *)(a2 + 500);
      v77 = *(_DWORD *)(a2 + 504);
      v70 = *(_DWORD *)(a2 + 496);
      v71 = *(_DWORD *)(a2 + 560);
      v84 = *(_DWORD *)(a2 + 416);
      v85 = *(_DWORD *)(a2 + 420);
      v81 = *(_DWORD *)(a2 + 392);
      v82 = *(_DWORD *)(a2 + 432);
      v136 = *(_DWORD *)(a2 + 388);
      v68 = *(_OWORD *)(a2 + 352);
      v69 = *(_OWORD *)(a2 + 368);
      v65 = *(_DWORD *)(a2 + 336);
      v66 = *(_DWORD *)(a2 + 340);
      v67 = *(_QWORD *)(a2 + 328);
      v17 = *(_DWORD *)(a2 + 324);
      v18 = *(_DWORD *)(a2 + 320);
      v19 = *(_DWORD *)(a2 + 240);
      v21 = *(_DWORD *)(a2 + 228);
      v20 = *(_DWORD *)(a2 + 232);
      v22 = *(_DWORD *)(a2 + 224);
      v63 = *(_OWORD *)(a2 + 192);
      v64 = *(_OWORD *)(a2 + 208);
      v23 = *(_QWORD *)(a2 + 184);
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 49;
      v217 = v16;
      LODWORD(v216[0]) = v11;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 53;
      v217 = v16;
      LODWORD(v216[0]) = v22;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 54;
      v217 = v16;
      LODWORD(v216[0]) = v21;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 55;
      v217 = v16;
      LODWORD(v216[0]) = v20;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 50;
      v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
      v24 = v217;
      v216[0] = v23;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 51;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v63;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 52;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v64;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 74;
      v217 = MEMORY[0x1E0DEAFA0];
      LOBYTE(v216[0]) = v13;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 66;
      v217 = v16;
      LODWORD(v216[0]) = v17;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 67;
      v217 = v16;
      LODWORD(v216[0]) = v18;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 71;
      v217 = v16;
      LODWORD(v216[0]) = v19;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 69;
      v217 = v16;
      LODWORD(v216[0]) = v65;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 70;
      v217 = v16;
      LODWORD(v216[0]) = v66;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 68;
      v217 = v24;
      v216[0] = v67;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 72;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v68;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 73;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v69;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -42;
      v217 = v16;
      LODWORD(v216[0]) = v70;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 114;
      v217 = v16;
      LODWORD(v216[0]) = v71;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 115;
      v217 = v16;
      LODWORD(v216[0]) = v72;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 116;
      v217 = v24;
      v216[0] = v73;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 117;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v74;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 118;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v75;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 109;
      v217 = v16;
      LODWORD(v216[0]) = v76;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 110;
      v217 = v16;
      LODWORD(v216[0]) = v77;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 111;
      v217 = v24;
      v216[0] = v78;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 112;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v79;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 113;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v80;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 77;
      v217 = v16;
      LODWORD(v216[0]) = v81;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 78;
      v217 = MEMORY[0x1E0DEB418];
      v26 = MEMORY[0x1E0DEB418];
      v216[0] = v12;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 85;
      v217 = v26;
      v216[0] = v83;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -39;
      v217 = v16;
      LODWORD(v216[0]) = v82;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 80;
      v217 = v26;
      v216[0] = v86;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 81;
      v217 = v16;
      LODWORD(v216[0]) = v84;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 82;
      v217 = v16;
      LODWORD(v216[0]) = v85;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -40;
      v217 = v16;
      LODWORD(v216[0]) = v87;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 98;
      v217 = v16;
      LODWORD(v216[0]) = v88;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 99;
      v217 = v16;
      LODWORD(v216[0]) = v89;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 100;
      v217 = v24;
      v216[0] = v90;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 101;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v91;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 102;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v92;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 103;
      v217 = v24;
      v216[0] = v93;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -81;
      v217 = v16;
      LODWORD(v216[0]) = v94;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -82;
      v217 = v16;
      LODWORD(v216[0]) = v95;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -83;
      v217 = v16;
      LODWORD(v216[0]) = v96;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -121;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v97;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -120;
      v217 = v16;
      LODWORD(v216[0]) = v98;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -119;
      v217 = v24;
      v216[0] = v99;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -118;
      v217 = v24;
      v216[0] = v100;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -117;
      v217 = v16;
      LODWORD(v216[0]) = v101;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -116;
      v217 = v16;
      LODWORD(v216[0]) = v102;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -115;
      v27 = MEMORY[0x1E0DEAFA0];
      v217 = MEMORY[0x1E0DEAFA0];
      LOBYTE(v216[0]) = v103;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -114;
      v217 = MEMORY[0x1E0DEB418];
      v216[0] = v213;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -113;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C78);
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v104;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -112;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v105;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -111;
      v217 = v16;
      LODWORD(v216[0]) = v106;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -110;
      v217 = v24;
      v216[0] = v107;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -109;
      v217 = v24;
      v216[0] = v108;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -108;
      v29 = v16;
      v217 = v16;
      LODWORD(v216[0]) = v109;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -107;
      v217 = v16;
      LODWORD(v216[0]) = v110;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -106;
      v217 = v27;
      LOBYTE(v216[0]) = v111;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -105;
      v217 = MEMORY[0x1E0DEB418];
      v216[0] = v113;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -104;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v112;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -103;
      v30 = v25;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v114;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -102;
      v217 = v29;
      LODWORD(v216[0]) = v115;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -101;
      v217 = v24;
      v216[0] = v116;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -100;
      v217 = v24;
      v216[0] = v117;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -99;
      v217 = v29;
      LODWORD(v216[0]) = v118;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -98;
      v217 = v29;
      LODWORD(v216[0]) = v119;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -97;
      v31 = MEMORY[0x1E0DEAFA0];
      v217 = MEMORY[0x1E0DEAFA0];
      LOBYTE(v216[0]) = v120;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -96;
      v32 = MEMORY[0x1E0DEB418];
      v217 = MEMORY[0x1E0DEB418];
      v216[0] = v122;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -95;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v121;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -94;
      v217 = v25;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v123;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -93;
      v33 = MEMORY[0x1E0DEB188];
      v217 = MEMORY[0x1E0DEB188];
      LODWORD(v216[0]) = v124;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -92;
      v217 = v24;
      v216[0] = v125;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -91;
      v217 = v24;
      v216[0] = v126;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -90;
      v217 = v33;
      LODWORD(v216[0]) = v127;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -89;
      v217 = v33;
      LODWORD(v216[0]) = v128;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -88;
      v217 = v31;
      LOBYTE(v216[0]) = v129;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -87;
      v217 = v32;
      v216[0] = v131;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -86;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v130;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -85;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v132;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -84;
      v217 = v33;
      LODWORD(v216[0]) = v133;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -83;
      v217 = v33;
      LODWORD(v216[0]) = v96;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -82;
      v217 = v33;
      LODWORD(v216[0]) = v95;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -81;
      v217 = v33;
      LODWORD(v216[0]) = v94;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -80;
      v217 = v33;
      LODWORD(v216[0]) = v134;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -79;
      v217 = v31;
      LOBYTE(v216[0]) = v135;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 83;
      v217 = v33;
      LODWORD(v216[0]) = v137;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 84;
      v217 = v33;
      LODWORD(v216[0]) = v138;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 76;
      v217 = v24;
      v216[0] = v139;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 79;
      v217 = v24;
      v216[0] = v140;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -59;
      v217 = v24;
      v216[0] = v141;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 75;
      v217 = v33;
      LODWORD(v216[0]) = v136;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 126;
      v34 = MEMORY[0x1E0DEB418];
      v217 = MEMORY[0x1E0DEB418];
      v216[0] = v142;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 127;
      v217 = v33;
      LODWORD(v216[0]) = v143;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 0x80;
      v217 = v33;
      LODWORD(v216[0]) = v144;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -127;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v145;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -126;
      v217 = v33;
      LODWORD(v216[0]) = v146;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -125;
      v217 = v33;
      LODWORD(v216[0]) = v147;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -124;
      v217 = v33;
      LODWORD(v216[0]) = v149;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -123;
      v217 = v33;
      LODWORD(v216[0]) = v151;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -122;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v153;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -23;
      v217 = v34;
      v216[0] = v155;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -22;
      v217 = v34;
      v216[0] = v157;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -21;
      v217 = v34;
      v216[0] = v159;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -20;
      v217 = v34;
      v216[0] = v162;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -19;
      v217 = v34;
      v216[0] = v164;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 95;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v148;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 93;
      v217 = v33;
      LODWORD(v216[0]) = v150;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 92;
      v217 = v33;
      LODWORD(v216[0]) = v152;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 94;
      v217 = v33;
      LODWORD(v216[0]) = v154;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 90;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v156;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 91;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v158;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 89;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v161;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 119;
      v217 = v33;
      LODWORD(v216[0]) = v160;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 120;
      v217 = v33;
      LODWORD(v216[0]) = v163;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 121;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v165;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 122;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v166;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 123;
      v217 = v24;
      v216[0] = v167;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 124;
      v217 = v24;
      v216[0] = v168;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 125;
      v217 = v24;
      v216[0] = v169;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 20;
      v217 = v33;
      LODWORD(v216[0]) = v170;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 21;
      v217 = v33;
      LODWORD(v216[0]) = v171;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -66;
      v217 = v33;
      LODWORD(v216[0]) = v172;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -65;
      v217 = v33;
      LODWORD(v216[0]) = v173;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -64;
      v217 = v33;
      LODWORD(v216[0]) = v174;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -63;
      v217 = v33;
      LODWORD(v216[0]) = v175;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -62;
      v217 = v33;
      LODWORD(v216[0]) = v176;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -61;
      v217 = v34;
      v216[0] = v177;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -60;
      v217 = v33;
      LODWORD(v216[0]) = v178;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -58;
      v217 = v33;
      LODWORD(v216[0]) = v179;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -57;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v180;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -56;
      v217 = v33;
      LODWORD(v216[0]) = v181;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -55;
      v217 = v33;
      LODWORD(v216[0]) = v183;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -54;
      v217 = v33;
      LODWORD(v216[0]) = v184;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -53;
      v217 = v34;
      v216[0] = v185;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -52;
      v217 = v33;
      LODWORD(v216[0]) = v186;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -51;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v190;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -50;
      v217 = v33;
      LODWORD(v216[0]) = v192;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -49;
      v217 = v24;
      v216[0] = v194;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -48;
      v217 = v33;
      LODWORD(v216[0]) = v182;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -47;
      v217 = v33;
      LODWORD(v216[0]) = v196;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -46;
      v217 = v33;
      LODWORD(v216[0]) = v198;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -45;
      v217 = v33;
      LODWORD(v216[0]) = v200;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -67;
      v217 = v33;
      LODWORD(v216[0]) = v187;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -78;
      v217 = v24;
      v216[0] = v188;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -77;
      v217 = v33;
      LODWORD(v216[0]) = v189;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -76;
      v217 = v33;
      LODWORD(v216[0]) = v191;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -75;
      v217 = v33;
      LODWORD(v216[0]) = v193;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -74;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v195;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -73;
      v217 = v30;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v197;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -72;
      v217 = v33;
      LODWORD(v216[0]) = v199;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -71;
      v217 = v33;
      LODWORD(v216[0]) = v201;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -70;
      v217 = v33;
      LODWORD(v216[0]) = v203;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -69;
      v217 = v24;
      v216[0] = v205;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = -68;
      v217 = v34;
      v216[0] = v207;
      sub_1AFD980FC(v14, v15);
      result = (_BYTE *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      if (v210 != 1)
        return result;
      v218 = 97;
      v217 = v28;
      v216[0] = swift_allocObject();
      *(_OWORD *)(v216[0] + 16) = v61;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 96;
      v217 = v33;
      LODWORD(v216[0]) = v62;
      break;
    case 18:
      v211 = *(_QWORD *)(a2 + 1728);
      v208 = *(_DWORD *)(a2 + 1724);
      v35 = *(_DWORD *)(a2 + 1716);
      v202 = *(_DWORD *)(a2 + 1712);
      v36 = *(_DWORD *)(a2 + 1708);
      v37 = *(_DWORD *)(a2 + 1704);
      v204 = *(_DWORD *)(a2 + 1700);
      v206 = *(_DWORD *)(a2 + 1720);
      v38 = *(_DWORD *)(a2 + 1696);
      v214 = *(_DWORD *)(a2 + 1692);
      v39 = *(_DWORD *)(a2 + 1688);
      v40 = *(_DWORD *)(a2 + 1684);
      v41 = *(_DWORD *)(a2 + 1680);
      v42 = *(_QWORD *)(a2 + 1672);
      v43 = *(_QWORD *)(a2 + 1664);
      v44 = *(_BYTE *)(a2 + 1656);
      v14 = *(_QWORD *)(v3 + 56);
      v15 = *(_BYTE *)(v3 + 64);
      v218 = 6;
      v217 = MEMORY[0x1E0DEB418];
      v216[0] = v42;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 7;
      v45 = MEMORY[0x1E0DEB188];
      v217 = MEMORY[0x1E0DEB188];
      LODWORD(v216[0]) = v41;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 8;
      v217 = v45;
      LODWORD(v216[0]) = v38;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 9;
      v217 = v45;
      LODWORD(v216[0]) = v40;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 10;
      v217 = v45;
      LODWORD(v216[0]) = v39;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 11;
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
      v217 = v46;
      v216[0] = v43;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 12;
      v217 = v45;
      LODWORD(v216[0]) = v35;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 13;
      v217 = v45;
      LODWORD(v216[0]) = v37;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 14;
      v217 = v45;
      LODWORD(v216[0]) = v36;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 15;
      v217 = v45;
      LODWORD(v216[0]) = v202;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 16;
      v217 = v45;
      LODWORD(v216[0]) = v204;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 17;
      v217 = v45;
      LODWORD(v216[0]) = v206;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 18;
      v217 = v45;
      LODWORD(v216[0]) = v208;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 19;
      v217 = v46;
      v216[0] = v211;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 22;
      v217 = v45;
      LODWORD(v216[0]) = v214;
      sub_1AFD980FC(v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 23;
      v217 = MEMORY[0x1E0DEAFA0];
      LOBYTE(v216[0]) = v44;
      break;
    default:
      if (*result)
        return result;
      v5 = *(_DWORD *)(a2 + 84);
      v6 = *(_QWORD *)(v3 + 40);
      v7 = *(_BYTE *)(v3 + 48);
      v8 = MEMORY[0x1E0DEB188];
      if ((*a3 & 1) != 0)
      {
        v9 = *(_DWORD *)(a2 + 68);
        v10 = *(_QWORD *)(a2 + 72);
        v218 = 2;
        v217 = MEMORY[0x1E0DEB188];
        LODWORD(v216[0]) = v9;
        sub_1AFD980FC(v6, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        v218 = 5;
        v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
        v216[0] = v10;
      }
      else
      {
        v60 = *(_DWORD *)(a2 + 64);
        v218 = 2;
        v217 = MEMORY[0x1E0DEB188];
        LODWORD(v216[0]) = v60;
        sub_1AFD980FC(v6, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        v218 = 5;
        v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
        v216[0] = sub_1AFB36844(&unk_1E6084298);
      }
      sub_1AFD980FC(v6, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
      v218 = 4;
      v217 = v8;
      LODWORD(v216[0]) = v5;
      v58 = v6;
      v59 = v7;
      goto LABEL_14;
  }
  v58 = v14;
  v59 = v15;
LABEL_14:
  sub_1AFD980FC(v58, v59);
  return (_BYTE *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
}

_BYTE *sub_1AFD9CE70(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[3];
  uint64_t v23;
  char v24;

  if (*result == 1)
  {
    v3 = *(_DWORD *)(a2 + 2192);
    v20 = *(_OWORD *)(a2 + 2160);
    v21 = *(_OWORD *)(a2 + 2176);
    v4 = *(_DWORD *)(a2 + 2144);
    v5 = *(_QWORD *)(a2 + 2136);
    v6 = *(_QWORD *)(a2 + 2128);
    v7 = *(_QWORD *)(a2 + 2120);
    v8 = *(_DWORD *)(a2 + 2112);
    v18 = *(_OWORD *)(a2 + 2080);
    v19 = *(_OWORD *)(a2 + 2096);
    v16 = *(_OWORD *)(a2 + 2048);
    v17 = *(_OWORD *)(a2 + 2064);
    v14 = *(_OWORD *)(a2 + 2016);
    v15 = *(_OWORD *)(a2 + 2032);
    v9 = *(_QWORD *)(v2 + 24);
    v10 = *(_BYTE *)(v2 + 32);
    v24 = -37;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C80);
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v14;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -36;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v15;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -35;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v16;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -34;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v17;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -33;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v18;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -32;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v19;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -31;
    v12 = MEMORY[0x1E0DEB188];
    v23 = MEMORY[0x1E0DEB188];
    LODWORD(v22[0]) = v8;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -30;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C70);
    v23 = v13;
    v22[0] = v7;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -29;
    v23 = v13;
    v22[0] = v6;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -28;
    v23 = v13;
    v22[0] = v5;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -27;
    v23 = v12;
    LODWORD(v22[0]) = v4;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -26;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v20;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -25;
    v23 = v11;
    v22[0] = swift_allocObject();
    *(_OWORD *)(v22[0] + 16) = v21;
    sub_1AFD980FC(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v24 = -24;
    v23 = v12;
    LODWORD(v22[0]) = v3;
    sub_1AFD980FC(v9, v10);
    return (_BYTE *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

void sub_1AFD9D274(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_39_19();
  if ((a2 & 1) == 0)
    sub_1AFD98328();
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFD9D2BC(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_1AFD9D304()
{
  swift_bridgeObjectRelease();
  sub_1AFD98328();
  OUTLINED_FUNCTION_18_66();
  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_18_66();
  sub_1AFD98328();
  OUTLINED_FUNCTION_10_1();
}

uint64_t sub_1AFD9D420()
{
  sub_1AFD98328();
  sub_1AFD98328();
  sub_1AFD98328();
  sub_1AFD98328();
  OUTLINED_FUNCTION_39_19();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  return OUTLINED_FUNCTION_16_74();
}

uint64_t sub_1AFD9D4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  unsigned __int8 *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  unsigned __int8 *v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  unsigned __int8 *v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;
  unsigned __int8 *v28;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v31 = *(_QWORD *)(a1 + 744);
  v2 = *(_QWORD *)(a1 + 768);
  v3 = *(_QWORD *)(a1 + 784);
  v4 = *(_QWORD *)(a1 + 792);
  v5 = *(_QWORD *)(a1 + 800);
  v34 = *(_QWORD *)(a1 + 896);
  v35 = *(_QWORD *)(a1 + 872);
  v6 = *(_QWORD *)(a1 + 904);
  v7 = *(_QWORD *)(a1 + 920);
  v32 = *(_QWORD *)(a1 + 928);
  v33 = *(_QWORD *)(a1 + 912);
  v39 = *(_QWORD *)(a1 + 1024);
  v40 = *(_QWORD *)(a1 + 1000);
  v8 = *(_QWORD *)(a1 + 1032);
  v9 = *(_QWORD *)(a1 + 1048);
  v37 = *(_QWORD *)(a1 + 1056);
  v38 = *(_QWORD *)(a1 + 1040);
  v48 = *(_QWORD *)(a1 + 1128);
  v44 = *(_QWORD *)(a1 + 1168);
  v45 = *(_QWORD *)(a1 + 1152);
  v41 = *(_QWORD *)(a1 + 1176);
  v42 = *(_QWORD *)(a1 + 1160);
  v43 = *(_QWORD *)(a1 + 1184);
  v50 = *(_QWORD *)(a1 + 1248);
  v51 = *(_QWORD *)(a1 + 1256);
  v52 = *(_QWORD *)(a1 + 1240);
  v49 = *(_QWORD *)(a1 + 1264);
  v56 = *(_QWORD *)(a1 + 776);
  v57 = v3;
  v47 = *(_QWORD *)(a1 + 1272);
  v53 = *(unsigned __int8 *)(a1 + 1647);
  v58 = v4;
  v59 = v5;
  v54 = 13;
  v10 = *(unsigned __int8 *)(a1 + 1648);
  v55 = v2;
  v30 = *(unsigned __int8 *)(a1 + 1649);
  v36 = *(unsigned __int8 *)(a1 + 1650);
  v46 = *(unsigned __int8 *)(a1 + 1651);
  v11 = *(_QWORD *)(v1 + 88);
  v12 = *(unsigned __int8 *)(v1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AFD9D8C0(&v55, v11, v12, &v54, v31, 0, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v34;
  v56 = v6;
  v57 = v33;
  v58 = v7;
  v59 = v32;
  v54 = 10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)OUTLINED_FUNCTION_17_80();
  sub_1AFD9D8C0(v13, v14, v15, v16, v35, 0, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v39;
  v56 = v8;
  v57 = v38;
  v58 = v9;
  v59 = v37;
  v54 = 11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = (_QWORD *)OUTLINED_FUNCTION_17_80();
  sub_1AFD9D8C0(v17, v18, v19, v20, v40, 0, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v45;
  v56 = v42;
  v57 = v44;
  v58 = v41;
  v59 = v43;
  OUTLINED_FUNCTION_44_10(12);
  swift_bridgeObjectRetain();
  v21 = (_QWORD *)OUTLINED_FUNCTION_17_80();
  sub_1AFD9D8C0(v21, v22, v23, v24, v48, 0, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v52;
  v56 = v50;
  v57 = v51;
  v58 = v49;
  v59 = v47;
  OUTLINED_FUNCTION_44_10(9);
  swift_bridgeObjectRetain();
  v25 = (_QWORD *)OUTLINED_FUNCTION_17_80();
  sub_1AFD9D8C0(v25, v26, v27, v28, 1, 1, v53);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AFD9D7CC()
{
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_27_17();
}

void sub_1AFD9D818()
{
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_27_17();
}

void sub_1AFD9D884()
{
  OUTLINED_FUNCTION_39_19();
  OUTLINED_FUNCTION_39_19();
  OUTLINED_FUNCTION_10_1();
}

uint64_t sub_1AFD9D8C0(_QWORD *a1, uint64_t a2, int a3, unsigned __int8 *a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  size_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  _QWORD v87[2];
  __int128 v88;
  unint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  int v94;
  int v95;
  unsigned int v96;
  unint64_t v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;

  v99 = a2;
  LODWORD(v8) = a6;
  v102 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  v13 = MEMORY[0x1E0C80A78](v12);
  v90 = (uint64_t)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v13);
  v101 = (uint64_t)v87 - v16;
  v17 = a1[4];
  if (v17)
  {
    if ((v8 & 1) != 0)
      v18 = 1;
    else
      v18 = 6;
    if ((v17 & 0x8000000000000000) == 0)
    {
      v93 = a1[2];
      v92 = a1[3];
      v94 = *a4;
      v109 = (unint64_t)sub_1AFC9B7A0(0, v17);
      sub_1AFD9E44C();
      v19 = v109;
      v112 = v109;
      v20 = *(_QWORD *)(v109 + 16);
      v95 = v8;
      v96 = a7;
      v104 = v18;
      if (v20 >= v18)
        goto LABEL_42;
      LODWORD(v107) = a3;
      while (1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4160);
        v21 = (_QWORD *)swift_allocObject();
        v22 = _swift_stdlib_malloc_size(v21);
        v21[2] = v17;
        v21[3] = 2 * ((uint64_t)(v22 - 32) / 8);
        v21[4] = 0;
        v23 = (unint64_t)(v21 + 4);
        if (v17 != 1)
        {
          v24 = 0;
          do
          {
            v21[v24 + 5] = v24 + 1;
            ++v24;
          }
          while (v17 - 1 != v24);
        }
        v25 = v21[2];
        v26 = v25 - 2;
        if (v25 >= 2)
          break;
LABEL_25:
        v35 = *(_QWORD *)(v19 + 16);
        if (__OFADD__(v35, v25))
          goto LABEL_67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0
          || (int64_t)(v35 + v25) > *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_1AFD0B268();
          v19 = v36;
        }
        if (v21[2])
        {
          v37 = *(_QWORD *)(v19 + 16);
          if ((*(_QWORD *)(v19 + 24) >> 1) - v37 < (uint64_t)v25)
            goto LABEL_69;
          v38 = (void *)(v19 + 8 * v37 + 32);
          if (v23 < (unint64_t)v38 + 8 * v25 && (unint64_t)v38 < v23 + 8 * v25)
            goto LABEL_72;
          memcpy(v38, v21 + 4, 8 * v25);
          if (v25)
          {
            v40 = *(_QWORD *)(v19 + 16);
            v30 = __OFADD__(v40, v25);
            v41 = v40 + v25;
            if (v30)
              goto LABEL_70;
            *(_QWORD *)(v19 + 16) = v41;
          }
        }
        else if (v25)
        {
          goto LABEL_68;
        }
        swift_release();
        if (*(_QWORD *)(v19 + 16) >= v104)
        {
          v112 = v19;
          LOBYTE(v8) = v95;
          a7 = v96;
          LOBYTE(a3) = v107;
LABEL_42:
          v42 = 0;
          v98 = a3 & 1;
          v89 = &v109;
          *((_QWORD *)&v43 + 1) = 2;
          v105 = xmmword_1B00275C0;
          *(_QWORD *)&v43 = 136446978;
          v88 = v43;
          v87[1] = MEMORY[0x1E0DEE9B8] + 8;
          v91 = 0x80000001B0057830;
          while (2)
          {
            if ((v8 & 1) != 0)
            {
              v109 = 0;
              v110 = 0xE000000000000000;
            }
            else
            {
              v109 = 95;
              v110 = 0xE100000000000000;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
              v44 = swift_allocObject();
              *(_OWORD *)(v44 + 16) = v105;
              *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEB418];
              *(_QWORD *)(v44 + 64) = MEMORY[0x1E0DEB490];
              *(_QWORD *)(v44 + 32) = v42;
              sub_1B00085A8();
              sub_1B0008644();
              swift_bridgeObjectRelease();
              v109 = 0;
              v110 = 0xE000000000000000;
              LOBYTE(v108) = v94;
              BoundEntity.rawValue.getter();
            }
            sub_1B0008644();
            swift_bridgeObjectRelease();
            sub_1B0008644();
            sub_1B0008644();
            swift_bridgeObjectRelease();
            v46 = v109;
            v45 = v110;
            swift_bridgeObjectRetain();
            sub_1B0008644();
            v106 = v109;
            v107 = v110;
            v109 = v46;
            v110 = v45;
            swift_bridgeObjectRetain();
            sub_1B0008644();
            swift_bridgeObjectRelease();
            v48 = v109;
            v47 = v110;
            if ((a7 & 1) != 0 && v42 < v102)
            {
              if (!*(_QWORD *)(v112 + 16))
                goto LABEL_66;
              v97 = v109;
              v103 = v110;
              v49 = *(_QWORD *)(v112 + 32);
              sub_1AFF70348(0, 1);
              v50 = v93;
              v51 = v92;
              v109 = v93;
              v110 = v92;
              swift_bridgeObjectRetain();
              sub_1B0008644();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
              v52 = swift_allocObject();
              *(_OWORD *)(v52 + 16) = v105;
              v53 = MEMORY[0x1E0DEB418];
              *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEB418];
              v54 = MEMORY[0x1E0DEB490];
              *(_QWORD *)(v52 + 64) = MEMORY[0x1E0DEB490];
              *(_QWORD *)(v52 + 32) = v49;
              sub_1B00085A8();
              sub_1B0008644();
              swift_bridgeObjectRelease();
              sub_1B0008644();
              sub_1B0008644();
              v56 = v109;
              v55 = (void *)v110;
              v109 = v50;
              v110 = v51;
              swift_bridgeObjectRetain();
              sub_1B0008644();
              v57 = swift_allocObject();
              *(_OWORD *)(v57 + 16) = v105;
              *(_QWORD *)(v57 + 56) = v53;
              *(_QWORD *)(v57 + 64) = v54;
              *(_QWORD *)(v57 + 32) = v49;
              sub_1B00085A8();
              sub_1B0008644();
              swift_bridgeObjectRelease();
              sub_1B0008644();
              sub_1B0008644();
              v59 = v109;
              v58 = (void *)v110;
              v60 = (void *)objc_opt_self();
              v61 = objc_msgSend(v60, sel_mainBundle);
              swift_bridgeObjectRetain();
              v62 = v101;
              v100 = v56;
              sub_1AFB39184(v55, (void *)0xE300000000000000, v101);

              swift_bridgeObjectRelease();
              v63 = sub_1B0005710();
              if (__swift_getEnumTagSinglePayload(v62, 1, v63) == 1)
              {
LABEL_52:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1AFCCA0C4(v62);
                if (qword_1ED1F4030 != -1)
                  swift_once();
                v71 = sub_1B0006D00();
                __swift_project_value_buffer(v71, (uint64_t)qword_1ED1F4018);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v72 = sub_1B0006CE8();
                v73 = sub_1B00089BC();
                v74 = os_log_type_enabled(v72, v73);
                v75 = v104;
                if (v74)
                {
                  v76 = swift_slowAlloc();
                  v77 = swift_slowAlloc();
                  v109 = v77;
                  *(_DWORD *)v76 = v88;
                  v107 = v59;
                  swift_bridgeObjectRetain();
                  v108 = sub_1AFB4AD14(v100, (unint64_t)v55, (uint64_t *)&v109);
                  sub_1B0008BB4();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v76 + 12) = 2082;
                  v108 = sub_1AFB4AD14(7894123, 0xE300000000000000, (uint64_t *)&v109);
                  sub_1B0008BB4();
                  *(_WORD *)(v76 + 22) = 2082;
                  swift_bridgeObjectRetain();
                  v108 = sub_1AFB4AD14(v107, (unint64_t)v58, (uint64_t *)&v109);
                  sub_1B0008BB4();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v76 + 32) = 2082;
                  v108 = sub_1AFB4AD14(7894123, 0xE300000000000000, (uint64_t *)&v109);
                  sub_1B0008BB4();
                  _os_log_impl(&dword_1AFABF000, v72, v73, "Failed to load cloud assets for %{public}s.%{public}s, %{public}s.%{public}s", (uint8_t *)v76, 0x2Au);
                  swift_arrayDestroy();
                  MEMORY[0x1B5E03CC0](v77, -1, -1);
                  MEMORY[0x1B5E03CC0](v76, -1, -1);

                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                }
                LOBYTE(v8) = v95;
                a7 = v96;
              }
              else
              {
                v64 = v101;
                v65 = sub_1B00056D4();
                v67 = v66;
                v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8);
                v68(v64, v63);
                v69 = objc_msgSend(v60, sel_mainBundle);
                swift_bridgeObjectRetain();
                v70 = v90;
                sub_1AFB39184(v58, (void *)0xE300000000000000, v90);

                swift_bridgeObjectRelease();
                if (__swift_getEnumTagSinglePayload(v70, 1, v63) == 1)
                {
                  swift_bridgeObjectRelease();
                  v62 = v70;
                  goto LABEL_52;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v82 = sub_1B00056D4();
                v84 = v83;
                v68(v70, v63);
                v8 = MEMORY[0x1E0DEA968];
                v111 = MEMORY[0x1E0DEA968];
                v109 = v65;
                v110 = v67;
                v85 = v99;
                v86 = v98;
                sub_1AFD98170(v99, v98, v106, v107);
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
                v111 = v8;
                v109 = v82;
                v110 = v84;
                sub_1AFD98170(v85, v86, v97, v103);
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
                LOBYTE(v8) = v95;
                a7 = v96;
                v75 = v104;
              }
            }
            else
            {
              v111 = MEMORY[0x1E0DEA968];
              v109 = 0xD000000000000018;
              v78 = a7;
              v79 = v91;
              v110 = v91;
              v80 = v99;
              v81 = v98;
              sub_1AFD98170(v99, v98, v106, v107);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
              v111 = MEMORY[0x1E0DEA968];
              v109 = 0xD000000000000018;
              v110 = v79;
              a7 = v78;
              v75 = v104;
              sub_1AFD98170(v80, v81, v48, v47);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
            }
            if (v75 == ++v42)
              return swift_bridgeObjectRelease();
            continue;
          }
        }
      }
      v27 = 0;
      while (1)
      {
        v109 = 0;
        MEMORY[0x1B5E03CD8](&v109, 8);
        v28 = (v109 * (unsigned __int128)v25) >> 64;
        if (v25 > v109 * v25)
        {
          v29 = -(uint64_t)v25 % v25;
          if (v29 > v109 * v25)
          {
            do
            {
              v109 = 0;
              MEMORY[0x1B5E03CD8](&v109, 8);
            }
            while (v29 > v109 * v25);
            v28 = (v109 * (unsigned __int128)v25) >> 64;
          }
        }
        v30 = __OFADD__(v27, v28);
        v31 = v27 + v28;
        if (v30)
          break;
        if (v27 != v31)
        {
          v32 = v21[2];
          if (v27 >= v32)
            goto LABEL_64;
          if (v31 >= v32)
            goto LABEL_65;
          v33 = *(_QWORD *)(v23 + 8 * v27);
          *(_QWORD *)(v23 + 8 * v27) = *(_QWORD *)(v23 + 8 * v31);
          *(_QWORD *)(v23 + 8 * v31) = v33;
        }
        --v25;
        if (v27++ == v26)
        {
          v25 = v21[2];
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
    }
    __break(1u);
LABEL_72:
    result = sub_1B0008E3C();
    __break(1u);
  }
  return result;
}

__n64 ClosedRange<>.simd2.getter(double a1, float a2)
{
  __n64 result;

  result.n64_f32[1] = a2;
  return result;
}

uint64_t sub_1AFD9E434(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 776);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1AFD9E44C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = v2 - 2;
  if (v2 >= 2)
  {
    v4 = 0;
    while (1)
    {
      v14 = 0;
      MEMORY[0x1B5E03CD8](&v14, 8);
      v5 = (v14 * (unsigned __int128)v2) >> 64;
      if (v2 > v14 * v2)
      {
        v6 = -(uint64_t)v2 % v2;
        if (v6 > v14 * v2)
        {
          do
          {
            v14 = 0;
            MEMORY[0x1B5E03CD8](&v14, 8);
          }
          while (v6 > v14 * v2);
          v5 = (v14 * (unsigned __int128)v2) >> 64;
        }
      }
      v7 = v4 + v5;
      if (__OFADD__(v4, v5))
        break;
      if (v4 != v7)
      {
        v8 = *(_QWORD *)(v1 + 16);
        if (v4 >= v8)
          goto LABEL_20;
        if (v7 >= v8)
          goto LABEL_21;
        v9 = *(_QWORD *)(v1 + 32 + 8 * v4);
        v10 = *(_QWORD *)(v1 + 32 + 8 * v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AFC93048();
          v1 = v11;
        }
        v12 = *(_QWORD *)(v1 + 16);
        if (v4 >= v12)
          goto LABEL_22;
        *(_QWORD *)(v1 + 32 + 8 * v4) = v10;
        if (v7 >= v12)
          goto LABEL_23;
        *(_QWORD *)(v1 + 32 + 8 * v7) = v9;
        *v0 = v1;
      }
      --v2;
      if (v4++ == v3)
        return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

uint64_t WeatherDescription.write(to:)()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1B00085F0();
  if (!v0)
    return sub_1B00085F0();
  return result;
}

uint64_t static WeatherDescription.read(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1B00085E4();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    result = sub_1B00085E4();
    *a1 = v5;
    a1[1] = v6;
    a1[2] = result;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_1AFD9E63C@<X0>(uint64_t *a1@<X8>)
{
  return static WeatherDescription.read(from:)(a1);
}

uint64_t sub_1AFD9E650()
{
  return WeatherDescription.write(to:)();
}

void sub_1AFD9E664()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 2;
  sub_1AFD9EE98();
  sub_1AFD9EE98();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E3851EC3DCCCCCDLL;
  *(_QWORD *)&v11 = 0x4396000041900000;
  LODWORD(v9) = 1091567616;
  DWORD2(v8) = 1128792064;
  *(_QWORD *)&v8 = 0x41F00000413B04ADLL;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42B400003FC00000, v5, 0x3E4CCCCD3E1374BCLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB12ED63F800000, 0,
    0x4248000000000000,
    v7,
    0x3E23D70A3D83126FLL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x40C0000000000000,
    v8,
    0x3E4CCCCD3E0F5C29,
    1091994787,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1088421888,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFD9EE98()
{
  uint64_t v0;
  int64x2_t v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  double v20;
  __n128 v21;
  float v22;
  __n128 v23;
  int64x2_t v24;
  double v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  double v37;
  __n128 v38;
  float v39;
  __int128 v40;
  __n128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  unsigned int v45;
  __n128 *v46;
  uint64_t v47;
  float v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _OWORD *v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  double v57;
  __n128 v58;
  float v59;
  __n128 v60;
  __n128 v61;
  __int128 v62;
  __int128 v63;
  __n128 v64;
  __n128 *v65;
  double v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  __n128 v75;
  float v76;
  float v77;
  __n128 v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  double v86;
  __n128 v87;
  double v88;
  __n128 v89;
  __n128 v90;
  __n128 *v91;
  double v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  uint64_t v100;
  __n128 v101;
  float v102;
  float v103;
  __n128 v104;
  double v105;
  double v106;
  __n128 v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  __n128 v113;
  double v114;
  __n128 v115;
  double v116;
  __n128 v117;
  __n128 v118;
  double v119;
  __n128 v120;
  double v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  float v130;
  float v131;
  _OWORD *v132;
  double v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  uint64_t v141;
  float v142;
  float v143;
  __int128 v144;
  __int128 v145;
  double v147;
  __n128 v148;
  __int128 v149;
  __int128 v150;
  __n128 v151;
  _OWORD *v152;
  _OWORD *v153;
  _OWORD *v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  double v161;
  float v162;
  __n128 v163;
  int64x2_t v164;
  double v165;
  __n128 v166;
  __int128 v167;
  __n128 v168;
  double v169;
  __n128 v170;
  __int128 v171;
  __n128 v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  uint64_t v181;
  double v182;
  __n128 v183;
  float v184;
  int64x2_t v185;
  __n128 v186;
  __n128 v187;
  double v188;
  __n128 v189;
  __int128 v190;
  double v191;
  double v192;
  __n128 v193;
  uint64_t v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  uint64_t v202;
  float v203;
  uint64_t v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  int v209;
  int v210;
  int v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  int v294;
  int v295;
  int v296;
  int v297;
  _OWORD *v298;
  _OWORD *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  __n128 v304;
  __n128 v305;
  __n128 v306;
  int64x2_t v307;
  __n128 v308;
  __n128 v309;
  __n128 v310;
  __n128 v311;
  __n128 v312;
  __n128 v313;
  __n128 v314;
  __n128 v315;
  __n128 v316;
  __n128 v317;
  __n128 v318;
  __n128 v319;
  __n128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __n128 v337;
  __n128 v338;
  __n128 v339;
  __n128 v340;
  __n128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __n128 v357;
  __n128 v358;
  __n128 v359;
  __n128 v360;
  __int128 v361;
  __int128 v362;
  __n128 v363;
  __n128 v364;
  int64x2_t v365;
  __int128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __n128 v370;
  __n128 v371;
  __int128 v372;
  __n128 v373;
  __n128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v379 = xmmword_1B0029EC0;
  v380 = xmmword_1B0029ED0;
  v377 = xmmword_1B0027F40;
  v378 = xmmword_1B0027F50;
  v375 = xmmword_1B0027F60;
  v376 = xmmword_1B0027F70;
  __asm { FMOV            V1.2D, #1.0 }
  v373 = _Q1;
  v374 = _Q1;
  __asm { FMOV            V2.2D, #0.5 }
  v309 = _Q2;
  v371 = _Q2;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B0026E60, _Q1);
  v365 = v7;
  OUTLINED_FUNCTION_11_11((__n128)xmmword_1B0027FB0, v8);
  v355 = xmmword_1B0029EE0;
  v356 = xmmword_1B0029EF0;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B0029F00, (__n128)xmmword_1B0029F10);
  v351 = xmmword_1B0029F20;
  v352 = xmmword_1B0029F30;
  v349 = xmmword_1B0029F40;
  v350 = xmmword_1B0029F50;
  v347 = xmmword_1B0029F60;
  v348 = xmmword_1B0029F70;
  v345 = xmmword_1B0029F80;
  v346 = xmmword_1B0029F90;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B0029FA0, (__n128)xmmword_1B0029FB0);
  v341 = v9;
  v342 = xmmword_1B0029FC0;
  v339 = v10;
  v340 = v10;
  v337 = v10;
  v338 = v10;
  v335 = xmmword_1B0029FD0;
  v336 = xmmword_1B0029FE0;
  v333 = xmmword_1B0029FF0;
  v334 = xmmword_1B002A000;
  v331 = xmmword_1B002A010;
  v332 = xmmword_1B0025E90;
  v329 = xmmword_1B002A020;
  v330 = xmmword_1B002A030;
  v327 = xmmword_1B002A010;
  v328 = xmmword_1B0025E90;
  v325 = xmmword_1B002A040;
  v326 = xmmword_1B002A050;
  v323 = xmmword_1B002A060;
  v324 = xmmword_1B002A070;
  v321 = xmmword_1B002A080;
  v322 = xmmword_1B002A090;
  v310 = v10;
  OUTLINED_FUNCTION_10_8(1.0, 0.902988076, v10);
  v300 = v11;
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_3(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, 200.0, v22, 0.1, 0.8, &v365, &v363, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v361,
    0,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    v300);
  OUTLINED_FUNCTION_3_29();
  v371 = v309;
  v372 = xmmword_1B0026E60;
  OUTLINED_FUNCTION_35_6(0.5, v309.n128_f64[0], v23);
  v365 = v24;
  OUTLINED_FUNCTION_14_20(v25, *(double *)v24.i64, v26);
  OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_2_21();
  v345 = xmmword_1B0029F80;
  v346 = xmmword_1B0029F90;
  v343 = xmmword_1B0029FA0;
  v344 = xmmword_1B0029FB0;
  v341 = (__n128)xmmword_1B0029F80;
  v342 = xmmword_1B0029FC0;
  v339 = v27;
  v340 = v27;
  v337 = v27;
  v338 = v27;
  v335 = xmmword_1B0029FD0;
  v336 = xmmword_1B0029FE0;
  v333 = xmmword_1B0029FF0;
  v334 = xmmword_1B002A000;
  v331 = xmmword_1B002A010;
  v332 = xmmword_1B0025E90;
  v329 = xmmword_1B002A020;
  v330 = xmmword_1B002A030;
  v327 = xmmword_1B002A010;
  v328 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_8_25();
  v319 = v28;
  v320 = v28;
  v317 = v28;
  v318 = v28;
  v315 = v28;
  v316 = v28;
  v313 = v28;
  v314 = v28;
  v311 = v28;
  v312 = v28;
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_17_3(v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, 200.0, v39, 0.1, 0.8, &v365, &v363, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v361,
    0,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  v379 = xmmword_1B002A0B0;
  v380 = xmmword_1B002A0C0;
  v377 = xmmword_1B002A0D0;
  v378 = xmmword_1B0028100;
  v375 = xmmword_1B00276E0;
  v376 = xmmword_1B0026110;
  v373 = v310;
  v374 = v310;
  v371 = v309;
  v372 = xmmword_1B00271F0;
  v369 = v310;
  v370 = v310;
  v367 = v310;
  v368 = v310;
  v307 = vdupq_n_s64(0x3FE0ECE8A0000000uLL);
  v365 = v307;
  v366 = xmmword_1B0028120;
  v363 = v310;
  v364 = v310;
  v361 = (__int128)v310;
  v362 = (__int128)v310;
  v359 = v310;
  v360 = v310;
  v357 = v310;
  v358 = v310;
  v355 = xmmword_1B002A0E0;
  v356 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A0F0, (__n128)xmmword_1B002A100);
  v351 = xmmword_1B002A110;
  v352 = v40;
  v349 = xmmword_1B002A120;
  v350 = xmmword_1B002A130;
  v347 = xmmword_1B0026220;
  v348 = xmmword_1B00277A0;
  v345 = xmmword_1B0026220;
  v346 = xmmword_1B0026120;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A140, (__n128)xmmword_1B002A150);
  v341 = (__n128)xmmword_1B0029F80;
  v342 = xmmword_1B002A160;
  v339 = v41;
  v340 = v41;
  v337 = v41;
  v338 = v41;
  v335 = xmmword_1B002A170;
  v336 = xmmword_1B002A180;
  v333 = xmmword_1B002A190;
  v334 = xmmword_1B002A1A0;
  v331 = xmmword_1B002A040;
  v332 = v42;
  v329 = xmmword_1B002A1B0;
  v330 = xmmword_1B002A1C0;
  v327 = xmmword_1B002A1D0;
  v328 = v42;
  v325 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A1E0, (__n128)xmmword_1B002A1F0);
  v321 = v43;
  v322 = xmmword_1B002A200;
  v319 = v44;
  v320 = v44;
  v317 = v44;
  v318 = v44;
  v315 = v44;
  v316 = v44;
  v313 = v44;
  v314 = v44;
  v311 = v44;
  v312 = v44;
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v205 = v45 | 0x3F4CCCCD00000000;
  v306 = v46[22];
  v48 = *(float *)(v47 + 2636);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_17_3(v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, 350.0, v59, v48, 0.8, &v365, &v363, v205, 1061997773, &v361,
    0,
    &v359,
    &v357,
    v216,
    v219,
    v222,
    v225,
    v230,
    v235,
    v240,
    v245,
    v250,
    v255,
    v260,
    v265,
    v270,
    v275,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  v379 = xmmword_1B002A210;
  v380 = (__int128)v310;
  v377 = xmmword_1B0028190;
  v378 = xmmword_1B0028210;
  OUTLINED_FUNCTION_33_11();
  v373 = v60;
  v374 = v60;
  v371 = v60;
  v372 = xmmword_1B0027030;
  v369 = v60;
  v370 = v60;
  v367 = v60;
  v368 = v60;
  v365 = (int64x2_t)v60;
  v366 = xmmword_1B0027740;
  v363 = v60;
  v364 = v60;
  v361 = xmmword_1B0026320;
  v362 = xmmword_1B0026330;
  v359 = v60;
  v360 = v60;
  v357 = v60;
  v358 = v60;
  v355 = xmmword_1B002A0E0;
  v356 = xmmword_1B0025E90;
  v353 = xmmword_1B002A220;
  v354 = xmmword_1B002A230;
  OUTLINED_FUNCTION_27_12(0.819462717, (__n128)xmmword_1B0025E90);
  v349 = xmmword_1B002A240;
  v350 = xmmword_1B002A250;
  v347 = xmmword_1B0025E80;
  v348 = (__int128)v61;
  v345 = xmmword_1B0025E80;
  v346 = (__int128)v61;
  v343 = xmmword_1B0026220;
  v344 = xmmword_1B002A260;
  v341 = (__n128)xmmword_1B0026220;
  v342 = xmmword_1B0026120;
  OUTLINED_FUNCTION_31_8(1.0, 0.899999976, 1.0, v61);
  v335 = xmmword_1B002A270;
  v336 = xmmword_1B002A280;
  v333 = xmmword_1B002A290;
  v334 = xmmword_1B002A2A0;
  v331 = xmmword_1B002A2B0;
  v332 = v62;
  v329 = xmmword_1B002A2C0;
  v330 = v63;
  v327 = xmmword_1B002A040;
  v328 = v62;
  v325 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A2D0, (__n128)xmmword_1B002A2E0);
  v321 = xmmword_1B0029F80;
  v322 = xmmword_1B002A2F0;
  v319 = v64;
  v320 = v64;
  v317 = v64;
  v318 = v64;
  v315 = v64;
  v316 = v64;
  v313 = v64;
  v314 = v64;
  v311 = v64;
  v312 = v64;
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v305 = v65[32];
  v66 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_17_3(v67, v68, v69, v70, v71, v72, v73, v74, v66, v75, 900.0, v76, v77, 0.9, &v365, &v363, 0x3F6666663F666666, 0, &v361,
    0,
    &v359,
    &v357,
    v217,
    v220,
    v223,
    v226,
    v231,
    v236,
    v241,
    v246,
    v251,
    v256,
    v261,
    v266,
    v271,
    v276,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  v379 = (__int128)v310;
  v380 = (__int128)v310;
  OUTLINED_FUNCTION_20_21();
  v375 = xmmword_1B0028220;
  v376 = xmmword_1B0028230;
  v373 = v78;
  v374 = v78;
  v371 = v78;
  OUTLINED_FUNCTION_12_26((__n128)xmmword_1B0026FC0, 0.99988085, v78);
  v361 = xmmword_1B0027D70;
  v362 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_18_34(1.0, 0.9627316, v79);
  v353 = xmmword_1B002A300;
  v354 = xmmword_1B0028110;
  OUTLINED_FUNCTION_27_12(0.869406462, v80);
  v341 = OUTLINED_FUNCTION_13_33((__n128)xmmword_1B002A310, v81, v82, v83);
  v342 = xmmword_1B002A320;
  *(_QWORD *)&v86 = OUTLINED_FUNCTION_7_27(v341.n128_f64[0], v84, v85).n128_u64[0];
  OUTLINED_FUNCTION_19_26(v86, v87, v88, (__n128)xmmword_1B0027840);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A330, v89);
  v321 = xmmword_1B002A340;
  v322 = xmmword_1B002A350;
  OUTLINED_FUNCTION_15_6(0.999901831, 0.999879897, v90);
  OUTLINED_FUNCTION_0_27();
  OUTLINED_FUNCTION_12_8();
  v304 = v91[39];
  v92 = OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_17_3(v93, v94, v95, v96, v97, v98, v99, v100, v92, v101, 1000.0, v102, v103, 0.9, &v365, &v363, 0x3F6666663F666666, 0, &v361,
    0,
    &v359,
    &v357,
    v218,
    v221,
    v224,
    v227,
    v232,
    v237,
    v242,
    v247,
    v252,
    v257,
    v262,
    v267,
    v272,
    v277,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  v379 = (__int128)v310;
  v380 = (__int128)v310;
  OUTLINED_FUNCTION_20_21();
  v375 = xmmword_1B0028220;
  v376 = xmmword_1B0028230;
  v373 = v104;
  v374 = v104;
  v371 = v104;
  OUTLINED_FUNCTION_12_26((__n128)xmmword_1B0026FC0, v105, v104);
  v361 = xmmword_1B0027D70;
  v362 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_18_34(0.9627316, v106, v107);
  v353 = xmmword_1B002A300;
  v354 = xmmword_1B0028110;
  OUTLINED_FUNCTION_27_12(0.869406462, v108);
  v341 = OUTLINED_FUNCTION_13_33((__n128)xmmword_1B002A310, v109, v110, v111);
  v342 = xmmword_1B002A320;
  *(_QWORD *)&v114 = OUTLINED_FUNCTION_7_27(1.0, v112, v113).n128_u64[0];
  OUTLINED_FUNCTION_19_26(v114, v115, v116, v117);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A330, v118);
  v321 = xmmword_1B002A340;
  v322 = xmmword_1B002A350;
  OUTLINED_FUNCTION_15_6(0.999879897, v119, v120);
  OUTLINED_FUNCTION_12_8();
  v121 = OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_9_4(v122, v123, v124, v125, v126, v127, v128, v129, v121, v304, 1000.0, v130, v131, 0.9, &v365, &v363, 0x3F6666663F666666, 0, &v361,
    0,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  OUTLINED_FUNCTION_20_21();
  v372 = xmmword_1B0027030;
  v366 = xmmword_1B0027740;
  v361 = xmmword_1B0026320;
  v362 = xmmword_1B0026330;
  v353 = xmmword_1B002A220;
  v354 = xmmword_1B002A230;
  v347 = xmmword_1B0025E80;
  v345 = xmmword_1B0025E80;
  v344 = xmmword_1B002A260;
  v343 = xmmword_1B0026220;
  v341 = (__n128)xmmword_1B0026220;
  v342 = xmmword_1B0026120;
  v335 = xmmword_1B002A270;
  v336 = xmmword_1B002A280;
  v333 = xmmword_1B002A290;
  v334 = xmmword_1B002A2A0;
  v331 = xmmword_1B002A2B0;
  v329 = xmmword_1B002A2C0;
  v349 = xmmword_1B002A240;
  v350 = xmmword_1B002A250;
  v330 = xmmword_1B002A250;
  v323 = xmmword_1B002A2D0;
  v324 = xmmword_1B002A2E0;
  v322 = xmmword_1B002A2F0;
  v379 = xmmword_1B002A210;
  v371 = v310;
  v365 = (int64x2_t)v310;
  v321 = xmmword_1B0029F80;
  v380 = (__int128)v310;
  v375 = xmmword_1B00276E0;
  v376 = xmmword_1B0026110;
  v373 = v310;
  v374 = v310;
  v369 = v310;
  v370 = v310;
  v367 = v310;
  v368 = v310;
  v363 = v310;
  v364 = v310;
  v359 = v310;
  v360 = v310;
  v357 = v310;
  v358 = v310;
  v355 = xmmword_1B002A0E0;
  v356 = xmmword_1B0025E90;
  v351 = xmmword_1B002A110;
  v352 = xmmword_1B0025E90;
  v348 = (__int128)v310;
  v346 = (__int128)v310;
  v339 = v310;
  v340 = v310;
  v337 = v310;
  v338 = v310;
  v332 = xmmword_1B0025E90;
  v327 = xmmword_1B002A040;
  v328 = xmmword_1B0025E90;
  v325 = xmmword_1B002A040;
  v326 = xmmword_1B002A050;
  v319 = v310;
  v320 = v310;
  v317 = v310;
  v318 = v310;
  v315 = v310;
  v316 = v310;
  v313 = v310;
  v314 = v310;
  v311 = v310;
  v312 = v310;
  OUTLINED_FUNCTION_1_25();
  v228 = v132;
  OUTLINED_FUNCTION_17_26();
  v133 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_9_4(v134, v135, v136, v137, v138, v139, v140, v141, v133, v305, 900.0, v142, v143, 0.9, &v365, &v363, 0x3F6666663F666666, 0, v206,
    v209,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    v228,
    v233,
    v238,
    v243,
    v248,
    v253,
    v258,
    v263,
    v268,
    v273,
    v278,
    v280,
    v282,
    v284,
    v286,
    v288,
    v290,
    v292,
    v294,
    v296,
    v298,
    v301);
  v379 = xmmword_1B002A0B0;
  v380 = xmmword_1B002A0C0;
  v377 = xmmword_1B002A0D0;
  v378 = xmmword_1B0028100;
  OUTLINED_FUNCTION_33_11();
  v373 = v310;
  v374 = v310;
  v371 = v309;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B00271F0, v310);
  v365 = v307;
  v366 = xmmword_1B0028120;
  v363 = (__n128)v144;
  v364 = (__n128)v144;
  v361 = v144;
  v362 = v144;
  v359 = (__n128)v144;
  v360 = (__n128)v144;
  v357 = (__n128)v144;
  v358 = (__n128)v144;
  v355 = xmmword_1B002A0E0;
  v356 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A360, (__n128)xmmword_1B002A370);
  v351 = xmmword_1B002A110;
  v352 = v145;
  v349 = xmmword_1B002A120;
  v350 = xmmword_1B002A130;
  v347 = xmmword_1B002A380;
  v348 = xmmword_1B002A390;
  v345 = xmmword_1B002A3A0;
  v346 = xmmword_1B002A3B0;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A3C0, (__n128)xmmword_1B002A3D0);
  __asm { FMOV            V1.2D, #0.75 }
  v341 = (__n128)xmmword_1B002A3E0;
  v342 = _Q1;
  OUTLINED_FUNCTION_31_8(0.662596464, *(double *)&_Q1, v147, v148);
  v335 = xmmword_1B002A170;
  v336 = xmmword_1B002A180;
  v333 = xmmword_1B002A190;
  v334 = xmmword_1B002A1A0;
  v331 = xmmword_1B002A040;
  v332 = v149;
  v329 = xmmword_1B002A1B0;
  v330 = xmmword_1B002A1C0;
  v327 = xmmword_1B002A1D0;
  v328 = v149;
  v325 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  v308 = (__n128)vdupq_n_s64(0x3FD3333340000000uLL);
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A3F0, v308);
  v321 = v150;
  v322 = xmmword_1B002A400;
  v319 = v151;
  v320 = v151;
  v317 = v151;
  v318 = v151;
  v315 = v151;
  v316 = v151;
  v313 = v151;
  v314 = v151;
  v311 = v151;
  v312 = v151;
  OUTLINED_FUNCTION_1_25();
  v229 = v152;
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_9_4(v153, v154, v155, v156, v157, v158, v159, v160, v161, v306, 350.0, v162, v48, 0.8, &v365, &v363, 0x3F4CCCCD3F4CCCCDLL, 1061997773, v207,
    v210,
    &v359,
    &v357,
    &v355,
    &v353,
    &v351,
    v229,
    v234,
    v239,
    v244,
    v249,
    v254,
    v259,
    v264,
    v269,
    v274,
    v279,
    v281,
    v283,
    v285,
    v287,
    v289,
    v291,
    v293,
    v295,
    v297,
    v299,
    v302);
  OUTLINED_FUNCTION_3_29();
  v371 = v309;
  v372 = xmmword_1B0026E60;
  OUTLINED_FUNCTION_35_6(v309.n128_f64[0], 0.5, v163);
  v365 = v164;
  OUTLINED_FUNCTION_14_20(*(double *)v164.i64, v165, v166);
  v355 = xmmword_1B002A410;
  v356 = xmmword_1B002A420;
  OUTLINED_FUNCTION_34_3((__n128)xmmword_1B002A430, (__n128)xmmword_1B002A440);
  v351 = xmmword_1B0029F20;
  v352 = xmmword_1B0029F30;
  v349 = xmmword_1B002A450;
  v350 = (__int128)v308;
  v347 = xmmword_1B002A460;
  v348 = v167;
  v345 = xmmword_1B002A470;
  v346 = xmmword_1B002A480;
  OUTLINED_FUNCTION_24_7((__n128)xmmword_1B002A490, (__n128)xmmword_1B002A4A0);
  v341 = (__n128)xmmword_1B002A4B0;
  v342 = xmmword_1B002A4C0;
  *(_QWORD *)&v169 = OUTLINED_FUNCTION_5_96(0.6105057, 0.730892539, v168).n128_u64[0];
  v332 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_29_23(v169, v170);
  v328 = v171;
  v325 = xmmword_1B002A040;
  OUTLINED_FUNCTION_26_26();
  __asm { FMOV            V1.2D, #0.25 }
  OUTLINED_FUNCTION_25_10((__n128)xmmword_1B002A4D0, _Q1);
  v321 = xmmword_1B002A4E0;
  v322 = xmmword_1B002A070;
  v319 = v173;
  v320 = v173;
  v317 = v173;
  v318 = v173;
  v315 = v173;
  v316 = v173;
  v313 = v173;
  v314 = v173;
  v311 = v173;
  v312 = v173;
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_17_26();
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_9_4(v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, 200.0, v184, 0.1, 0.8, &v365, &v363, 0x3F4CCCCD3F4CCCCDLL, 1065353216, v208,
    v211,
    v212,
    v214,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    (uint64_t)&v311);
  v379 = xmmword_1B0029EC0;
  v380 = xmmword_1B0029ED0;
  v377 = xmmword_1B0027F40;
  v378 = xmmword_1B0027F50;
  v375 = xmmword_1B0027F60;
  v376 = xmmword_1B0027F70;
  OUTLINED_FUNCTION_32_8();
  v373 = v310;
  v374 = v310;
  v371 = v309;
  OUTLINED_FUNCTION_16_15((__n128)xmmword_1B0026E60, v310);
  v365 = v185;
  OUTLINED_FUNCTION_11_11((__n128)xmmword_1B0027FB0, v186);
  OUTLINED_FUNCTION_2_21();
  v345 = xmmword_1B0029F80;
  v346 = xmmword_1B0029F90;
  v343 = xmmword_1B0029FA0;
  v344 = xmmword_1B0029FB0;
  v341 = (__n128)xmmword_1B0029F80;
  v342 = xmmword_1B0029FC0;
  *(_QWORD *)&v188 = OUTLINED_FUNCTION_5_96(0.99987489, 0.999896884, v187).n128_u64[0];
  v332 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_29_23(v188, v189);
  v328 = v190;
  *(_QWORD *)&v191 = OUTLINED_FUNCTION_8_25().n128_u64[0];
  OUTLINED_FUNCTION_10_8(v191, v192, v193);
  v303 = v194;
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_6_22();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v195, v196, v197, v198, v199, v200, v201, v202, -90.0, (__n128)xmmword_1B002A0A0, 200.0, v203, 0.1, 0.8, 0.9, 0.8, &v365, &v363,
    0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v361,
    0,
    v213,
    v215,
    &v355,
    &v353,
    &v351,
    &v349,
    &v347,
    &v345,
    &v343,
    &v341,
    &v339,
    &v337,
    &v335,
    &v333,
    &v331,
    &v329,
    &v327,
    &v325,
    &v323,
    &v321,
    &v319,
    &v317,
    &v315,
    1112014848,
    1097859072,
    &v313,
    v303);
  return v0;
}

double sub_1AFDA064C()
{
  double result;

  dword_1EEE92218 = 0;
  qword_1EEE92230 = 0;
  xmmword_1EEE92220 = 0uLL;
  dword_1EEE92238 = 0;
  qword_1EEE92240 = 0;
  unk_1EEE92248 = 0;
  dword_1EEE92250 = 0;
  unk_1EEE92254 = xmmword_1B0038730;
  unk_1EEE92264 = xmmword_1B0038740;
  result = 3.56521972e-12;
  unk_1EEE92274 = xmmword_1B0038750;
  dword_1EEE92284 = 1060823368;
  return result;
}

uint64_t sub_1AFDA06A0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1AFDA06BC + 4 * byte_1B00387B8[*a1]))();
}

void sub_1AFDA06BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 76) = 0x3E8000003F19999ALL;
  *(_DWORD *)(v0 + 84) = 1074370970;
  *(_OWORD *)(v0 + 60) = xmmword_1B0038780;
}

double sub_1AFDA0730()
{
  uint64_t v0;
  double result;

  *(_OWORD *)(v0 + 88) = xmmword_1B0038790;
  result = 0.000410156382;
  *(_QWORD *)(v0 + 104) = 0x3F3AE1483ECCCCCDLL;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PrecipitationComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = v7[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1B0005FB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v18 = v17[5];
      v19 = &v14[v18];
      v20 = &v15[v18];
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[8] = v20[8];
      v14[v17[6]] = v15[v17[6]];
      v14[v17[7]] = v15[v17[7]];
      *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
      v14[v17[9]] = v15[v17[9]];
      v21 = v7[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_1B00060E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for PrecipitationComplicationDataStatus(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[6];
    v7 = sub_1B0005FB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v2[7];
    v9 = sub_1B00060E8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *initializeWithCopy for PrecipitationComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = v6[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_1B00060E8();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for PrecipitationComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;

  v6 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v27 = v6[5];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
      v31 = v6[6];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
      v35 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v36 = v35[5];
      v37 = &v32[v36];
      v38 = &v33[v36];
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v37[8] = v38[8];
      v32[v35[6]] = v33[v35[6]];
      v32[v35[7]] = v33[v35[7]];
      *(_QWORD *)&v32[v35[8]] = *(_QWORD *)&v33[v35[8]];
      v32[v35[9]] = v33[v35[9]];
      v39 = v6[7];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = sub_1B00060E8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFDA0DE8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  v21 = v20[8];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v21;
  v14[v17[6]] = v15[v17[6]];
  v14[v17[7]] = v15[v17[7]];
  *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  v22 = v6[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFDA0DE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PrecipitationComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for PrecipitationComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = v6[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v12[v15[6]] = v13[v15[6]];
    v12[v15[7]] = v13[v15[7]];
    *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    v19 = v6[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_1B00060E8();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for PrecipitationComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;

  v6 = (int *)type metadata accessor for PrecipitationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v26 = v6[5];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1B0005B84();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      v30 = v6[6];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_1B0005FB0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
      v34 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v35 = v34[5];
      v36 = &v31[v35];
      v37 = &v32[v35];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      v36[8] = v37[8];
      v31[v34[6]] = v32[v34[6]];
      v31[v34[7]] = v32[v34[7]];
      *(_QWORD *)&v31[v34[8]] = *(_QWORD *)&v32[v34[8]];
      v31[v34[9]] = v32[v34[9]];
      v38 = v6[7];
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = sub_1B00060E8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFDA0DE8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B0005B84();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v6[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B0005FB0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v14[v17[6]] = v15[v17[6]];
  v14[v17[7]] = v15[v17[7]];
  *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  v21 = v6[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_1B00060E8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDA1250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for PrecipitationComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrecipitationComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDA12A0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for PrecipitationComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFDA12EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PrecipitationComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFDA131C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrecipitationComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for PrecipitationComplicationDataStatus()
{
  uint64_t result;

  result = qword_1ED1EFA18;
  if (!qword_1ED1EFA18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFDA138C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PrecipitationComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t NextHourPrecipitationStringBuilder.__allocating_init()()
{
  return swift_allocObject();
}

void NextHourPrecipitationStringBuilder.buildListString(from:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22_0();
  v4 = sub_1B0005B84();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33();
  v31 = v6;
  v7 = sub_1B0006268();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33();
  v28 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1B48);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_17_81();
  v11 = sub_1B0006214();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_27_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2680);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_10();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2678);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_9();
  v18 = v17 - v16;
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_4_0(v0, 1, v14);
  if (v19)
  {
    v20 = &qword_1ED1F2680;
    v21 = v0;
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v18, v0, v14);
  v22 = sub_1B00064C0();
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_90();
    goto LABEL_11;
  }
  v23 = sub_1B00064B4();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_35_24();
  OUTLINED_FUNCTION_34_37((uint64_t (*)(_QWORD))sub_1AFDAC028, v24, v25);
  OUTLINED_FUNCTION_18_67(v26);
  OUTLINED_FUNCTION_32_35();
  if (!v0)
  {
    OUTLINED_FUNCTION_4_15();
    sub_1AFBA73D4(v32);
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_4_0(v1, 1, v11);
    if (!v19)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v3, v1, v11);
      OUTLINED_FUNCTION_42_17();
      sub_1B0005B78();
      sub_1AFDA1A24();
      OUTLINED_FUNCTION_46_7();
      v27(v31, v4);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      OUTLINED_FUNCTION_13_88(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      OUTLINED_FUNCTION_6_90();
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_6_90();
    v20 = &qword_1ED1F1B48;
    v21 = v1;
LABEL_4:
    sub_1AFAF6288(v21, v20);
LABEL_11:
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_2_3();
    return;
  }
  OUTLINED_FUNCTION_20_65();
  __break(1u);
}

void NextHourPrecipitationStringBuilder.buildWidgetString(from:timeZone:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_22_0();
  v26 = v4;
  v25 = v5;
  v6 = OUTLINED_FUNCTION_19_59();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33();
  v24 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1B48);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  v10 = OUTLINED_FUNCTION_8_91();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2680);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_10();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2678);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_4_0(v0, 1, v13);
  if (v15)
  {
    v16 = &qword_1ED1F2680;
    v17 = v0;
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v0, v13);
  v18 = sub_1B00064C0();
  if ((v18 & 1) == 0)
  {
    OUTLINED_FUNCTION_7_87();
    goto LABEL_11;
  }
  v19 = sub_1B00064B4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_35_24();
  OUTLINED_FUNCTION_34_37((uint64_t (*)(_QWORD))sub_1AFDAC028, v20, v21);
  OUTLINED_FUNCTION_18_67(v22);
  OUTLINED_FUNCTION_32_35();
  if (!v0)
  {
    OUTLINED_FUNCTION_4_15();
    OUTLINED_FUNCTION_26_51();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_4_0(v3, 1, v10);
    if (!v15)
    {
      OUTLINED_FUNCTION_23_61(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
      sub_1B0006208();
      sub_1AFDA2F08(v24, v25, v26);
      OUTLINED_FUNCTION_46_7();
      v23(v24, v6);
      OUTLINED_FUNCTION_13_88(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_7_87();
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_7_87();
    v16 = &qword_1ED1F1B48;
    v17 = v3;
LABEL_4:
    sub_1AFAF6288(v17, v16);
LABEL_11:
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_2_3();
    return;
  }
  OUTLINED_FUNCTION_20_65();
  __break(1u);
}

void NextHourPrecipitationStringBuilder.buildShortString(from:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[6];

  OUTLINED_FUNCTION_22_0();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_19_59();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_9();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1B48);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_26_2();
  v10 = sub_1B0006214();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_37();
  v12 = sub_1B00064B4();
  v15[2] = v3;
  OUTLINED_FUNCTION_34_37((uint64_t (*)(_QWORD))sub_1AFDAACA4, (uint64_t)v15, v12);
  OUTLINED_FUNCTION_18_67(v13);
  OUTLINED_FUNCTION_32_35();
  if (v3)
  {
    OUTLINED_FUNCTION_20_65();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_15();
    sub_1AFBA73D4(v15[4]);
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_4_0(v1, 1, v10);
    if (v14)
    {
      sub_1AFAF6288(v1, &qword_1ED1F1B48);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v0, v1, v10);
      sub_1B0006208();
      sub_1AFDA6160();
      OUTLINED_FUNCTION_27(v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
    }
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_2_3();
  }
}

uint64_t sub_1AFDA19DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AFDA1A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  id v8;
  uint64_t v9;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v90;

  v0 = sub_1B0006238();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0006250();
  v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E0CEF028])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF0E0]
    || v4 == *MEMORY[0x1E0CEF0C8]
    || v4 == *MEMORY[0x1E0CEF168]
    || v4 == *MEMORY[0x1E0CEF170])
  {
    if (qword_1ED1F46A8 == -1)
    {
LABEL_16:
      swift_beginAccess();
      v8 = (id)qword_1ED1F4470;
      v9 = sub_1B00054B8();

      return v9;
    }
LABEL_176:
    swift_once();
    goto LABEL_16;
  }
  if (v4 == *MEMORY[0x1E0CEF210])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEEFA0]
    || v4 == *MEMORY[0x1E0CEEF98]
    || v4 == *MEMORY[0x1E0CEF040]
    || v4 == *MEMORY[0x1E0CEF048])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF1F0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF250]
    || v4 == *MEMORY[0x1E0CEF228]
    || v4 == *MEMORY[0x1E0CEEFE8]
    || v4 == *MEMORY[0x1E0CEEFF0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF240])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF008]
    || v4 == *MEMORY[0x1E0CEEFD0]
    || v4 == *MEMORY[0x1E0CEF090]
    || v4 == *MEMORY[0x1E0CEF088]
    || v4 == *MEMORY[0x1E0CEF080]
    || v4 == *MEMORY[0x1E0CEF098]
    || v4 == *MEMORY[0x1E0CEF030]
    || v4 == *MEMORY[0x1E0CEEF40]
    || v4 == *MEMORY[0x1E0CEF138]
    || v4 == *MEMORY[0x1E0CEF148]
    || v4 == *MEMORY[0x1E0CEF0F0]
    || v4 == *MEMORY[0x1E0CEEF50]
    || v4 == *MEMORY[0x1E0CEF118]
    || v4 == *MEMORY[0x1E0CEF120]
    || v4 == *MEMORY[0x1E0CEF0D0]
    || v4 == *MEMORY[0x1E0CEEF48]
    || v4 == *MEMORY[0x1E0CEF1A8]
    || v4 == *MEMORY[0x1E0CEF1B8]
    || v4 == *MEMORY[0x1E0CEF178]
    || v4 == *MEMORY[0x1E0CEEF58]
    || v4 == *MEMORY[0x1E0CEF1B0]
    || v4 == *MEMORY[0x1E0CEF1C0]
    || v4 == *MEMORY[0x1E0CEF180]
    || v4 == *MEMORY[0x1E0CEEF60])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF050])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF100]
    || v4 == *MEMORY[0x1E0CEF0E8]
    || v4 == *MEMORY[0x1E0CEF198]
    || v4 == *MEMORY[0x1E0CEF1A0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF218])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEEFB8]
    || v4 == *MEMORY[0x1E0CEEFA8]
    || v4 == *MEMORY[0x1E0CEF060]
    || v4 == *MEMORY[0x1E0CEF068])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF1F8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF260]
    || v4 == *MEMORY[0x1E0CEF230]
    || v4 == *MEMORY[0x1E0CEEFF8]
    || v4 == *MEMORY[0x1E0CEF000])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF248])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  v49 = *MEMORY[0x1E0CEEF78];
  v50 = *MEMORY[0x1E0CEF140];
  v51 = *MEMORY[0x1E0CEF150];
  v52 = *MEMORY[0x1E0CEF0D8];
  v53 = *MEMORY[0x1E0CEEF70];
  v54 = *MEMORY[0x1E0CEF1C8];
  if (v4 == *MEMORY[0x1E0CEF010]
    || v4 == *MEMORY[0x1E0CEEFD8]
    || v4 == *MEMORY[0x1E0CEF0A8]
    || v4 == *MEMORY[0x1E0CEF0A0]
    || v4 == *MEMORY[0x1E0CEF0B8]
    || v4 == *MEMORY[0x1E0CEF0C0]
    || v4 == *MEMORY[0x1E0CEF038]
    || v4 == *MEMORY[0x1E0CEEF68]
    || v4 == *MEMORY[0x1E0CEF158]
    || v4 == *MEMORY[0x1E0CEF160]
    || v4 == *MEMORY[0x1E0CEF0F8]
    || v4 == (_DWORD)v49
    || v4 == (_DWORD)v50
    || v4 == (_DWORD)v51
    || v4 == (_DWORD)v52
    || v4 == (_DWORD)v53
    || v4 == (_DWORD)v54
    || v4 == *MEMORY[0x1E0CEF1D8]
    || v4 == *MEMORY[0x1E0CEF188]
    || v4 == *MEMORY[0x1E0CEEF80]
    || v4 == *MEMORY[0x1E0CEF1D0]
    || v4 == *MEMORY[0x1E0CEF1E0]
    || v4 == *MEMORY[0x1E0CEF190]
    || v4 == *MEMORY[0x1E0CEEF88])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEEFE0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF0B0]
    || v4 == *MEMORY[0x1E0CEF078]
    || v4 == *MEMORY[0x1E0CEF128]
    || v4 == *MEMORY[0x1E0CEF130])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF208])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEEF90]
    || v4 == *MEMORY[0x1E0CEF258]
    || v4 == *MEMORY[0x1E0CEF018]
    || v4 == *MEMORY[0x1E0CEF020])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEEFB0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF070]
    || v4 == *MEMORY[0x1E0CEF058]
    || v4 == *MEMORY[0x1E0CEF108]
    || v4 == *MEMORY[0x1E0CEF110])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF1E8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 == *MEMORY[0x1E0CEF238]
    || v4 == *MEMORY[0x1E0CEF220]
    || v4 == *MEMORY[0x1E0CEEFC0]
    || v4 == *MEMORY[0x1E0CEEFC8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_16;
    goto LABEL_176;
  }
  if (v4 != *MEMORY[0x1E0CEF200])
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8))(v3, v0, v49, v50, v51, v52, v53, v54);
  return 0;
}

void sub_1AFDA2DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(__n128);
  void (*v24)(__n128);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;

  OUTLINED_FUNCTION_16_2();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_34();
  v28 = OUTLINED_FUNCTION_11_0();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&a9 - v34;
  v24(v33);
  OUTLINED_FUNCTION_45((uint64_t)v31, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  if (__swift_getEnumTagSinglePayload(v20, 1, v28) == 1)
  {
    OUTLINED_FUNCTION_45((uint64_t)v35, (uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    sub_1AFAF6288(v20, &qword_1ED1F4BA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    OUTLINED_FUNCTION_45((uint64_t)v35, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
  }
  sub_1AFC92FA8();
  sub_1B000850C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v28);
  OUTLINED_FUNCTION_4();
}

uint64_t sub_1AFDA2F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  int v56;
  int v57;
  id v61;
  uint64_t v62;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  BOOL v77;
  BOOL v78;
  int v99;
  void (*v100)(char *, uint64_t);
  unsigned int v101;
  void (*v102)(uint64_t, _QWORD, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  __int128 v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;

  v110 = a3;
  v4 = sub_1B0006238();
  v115 = *(_QWORD *)(v4 - 8);
  v116 = v4;
  MEMORY[0x1E0C80A78](v4);
  v114 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B00052A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v109 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v100 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v100 - v16;
  v18 = sub_1B00058D8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v111 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v100 - v22;
  v24 = sub_1B0005B18();
  v112 = *(_QWORD *)(v24 - 8);
  v113 = v24;
  MEMORY[0x1E0C80A78](v24);
  v118 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005A34();
  v117 = a1;
  sub_1B0006244();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
  {
    sub_1AFAF6288((uint64_t)v17, &qword_1ED1F4BA0);
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
  }
  else
  {
    v107 = v19;
    v106 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v106(v23, v17, v18);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
    v31 = sub_1B0005B00();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned __int8 *)(v32 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = v34 + *(_QWORD *)(v32 + 72);
    v105 = v30;
    v104 = v35;
    v103 = v33 | 7;
    v36 = swift_allocObject();
    v108 = xmmword_1B00275C0;
    *(_OWORD *)(v36 + 16) = xmmword_1B00275C0;
    v37 = *(void (**)(_QWORD))(v32 + 104);
    v101 = *MEMORY[0x1E0CB1178];
    v102 = (void (*)(uint64_t, _QWORD, uint64_t))v37;
    v37(v36 + v34);
    sub_1AFAFAA98();
    sub_1B0005A58();
    swift_bridgeObjectRelease();
    v38 = sub_1B0005260();
    LOBYTE(v32) = v39;
    v40 = *(void (**)(char *, uint64_t))(v7 + 8);
    v110 = v6;
    v100 = v40;
    v40(v11, v6);
    v28 = 0;
    v41 = MEMORY[0x1E0DEB418];
    if ((v32 & 1) != 0)
    {
      v29 = 0;
    }
    else
    {
      v29 = 0;
      if (v38 >= 1)
      {
        if (qword_1ED1F46A8 != -1)
          swift_once();
        swift_beginAccess();
        v42 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v108;
        *(_QWORD *)(v43 + 56) = v41;
        *(_QWORD *)(v43 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v43 + 32) = v38;
        v44 = sub_1B0008560();
        v29 = v45;
        v28 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    sub_1B000625C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v107 + 8))(v23, v18);
      sub_1AFAF6288((uint64_t)v14, &qword_1ED1F4BA0);
      v26 = 0;
      v27 = 0;
    }
    else
    {
      v106(v111, v14, v18);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v108;
      v102(v46 + v34, v101, v31);
      sub_1AFAFAA98();
      v47 = v109;
      sub_1B0005A58();
      swift_bridgeObjectRelease();
      v48 = sub_1B0005260();
      v50 = v49;
      v100(v47, v110);
      v26 = 0;
      v27 = 0;
      if ((v50 & 1) == 0 && v48 >= 1)
      {
        if (qword_1ED1F46A8 != -1)
          swift_once();
        swift_beginAccess();
        v51 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = v108;
        *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v52 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v52 + 32) = v48;
        v26 = sub_1B0008560();
        v27 = v53;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v54 = *(void (**)(char *, uint64_t))(v107 + 8);
      v54(v111, v18);
      v54(v23, v18);
    }
  }
  v55 = v114;
  sub_1B0006250();
  v56 = (*(uint64_t (**)(char *, uint64_t))(v115 + 88))(v55, v116);
  if (v56 == *MEMORY[0x1E0CEF028])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED1F46A8 == -1)
      goto LABEL_35;
    goto LABEL_406;
  }
  v57 = v56;
  if (v56 == *MEMORY[0x1E0CEF0E0]
    || v56 == *MEMORY[0x1E0CEF0C8]
    || v56 == *MEMORY[0x1E0CEF168]
    || v56 == *MEMORY[0x1E0CEF170])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED1F46A8 == -1)
      goto LABEL_35;
    goto LABEL_406;
  }
  if (v56 != *MEMORY[0x1E0CEF210])
  {
    if (v56 == *MEMORY[0x1E0CEEFA0])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEEF98])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
        {
LABEL_45:
          swift_beginAccess();
          v64 = (id)qword_1ED1F4470;
          sub_1B00054B8();

          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_1B00275C0;
          *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v65 + 64) = sub_1AFAFB1D0();
          *(_QWORD *)(v65 + 32) = v28;
          *(_QWORD *)(v65 + 40) = v29;
LABEL_46:
          v62 = sub_1B0008560();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
LABEL_178:
        swift_once();
        goto LABEL_45;
      }
LABEL_434:
      (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
      return 0;
    }
    if (v56 == *MEMORY[0x1E0CEF040])
    {
      if (v29)
      {
        if (v27)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_56;
          goto LABEL_197;
        }
LABEL_78:
        (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_433;
    }
    if (v56 == *MEMORY[0x1E0CEF048])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
      {
LABEL_56:
        swift_beginAccess();
        v66 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1B00275A0;
        v68 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
        v69 = sub_1AFAFB1D0();
        *(_QWORD *)(v67 + 32) = v28;
        *(_QWORD *)(v67 + 40) = v29;
        *(_QWORD *)(v67 + 96) = v68;
        *(_QWORD *)(v67 + 104) = v69;
        *(_QWORD *)(v67 + 64) = v69;
        *(_QWORD *)(v67 + 72) = v26;
        *(_QWORD *)(v67 + 80) = v27;
        goto LABEL_46;
      }
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF1F0])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF250])
    {
LABEL_61:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF228])
    {
LABEL_65:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEEFE8])
    {
LABEL_69:
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEEFF0])
      goto LABEL_74;
    if (v56 == *MEMORY[0x1E0CEF240])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF008])
    {
      swift_bridgeObjectRelease();
      if (!v29)
      {
        (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
        return 0;
      }
      if (qword_1ED1F46A8 == -1)
        goto LABEL_45;
      goto LABEL_178;
    }
    if (v56 == *MEMORY[0x1E0CEEFD0])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF090])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF088])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF080])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF098])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF030] || v56 == *MEMORY[0x1E0CEEF40])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF138])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF148])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF0F0])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEEF50])
      goto LABEL_61;
    if (v56 == *MEMORY[0x1E0CEF118]
      || v56 == *MEMORY[0x1E0CEF120]
      || v56 == *MEMORY[0x1E0CEF0D0]
      || v56 == *MEMORY[0x1E0CEEF48])
    {
      goto LABEL_65;
    }
    if (v56 == *MEMORY[0x1E0CEF1A8]
      || v56 == *MEMORY[0x1E0CEF1B8]
      || v56 == *MEMORY[0x1E0CEF178]
      || v56 == *MEMORY[0x1E0CEEF58])
    {
      goto LABEL_69;
    }
    v77 = v56 == *MEMORY[0x1E0CEF1B0] || v56 == *MEMORY[0x1E0CEF1C0];
    v78 = v77 || v56 == *MEMORY[0x1E0CEF180];
    if (v78 || v56 == *MEMORY[0x1E0CEEF60])
    {
LABEL_74:
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF050])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF100]
      || v56 == *MEMORY[0x1E0CEF0E8]
      || v56 == *MEMORY[0x1E0CEF198]
      || v56 == *MEMORY[0x1E0CEF1A0])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF218])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEEFB8])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEEFA8])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF060])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF068])
    {
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 == *MEMORY[0x1E0CEF1F8])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v56 == *MEMORY[0x1E0CEF260])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEF230])
    {
LABEL_230:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_178;
      }
      goto LABEL_434;
    }
    if (v56 == *MEMORY[0x1E0CEEFF8])
    {
LABEL_234:
      if (!v29)
        goto LABEL_433;
      if (!v27)
        goto LABEL_78;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_197;
    }
    if (v56 != *MEMORY[0x1E0CEF000])
    {
      if (v56 == *MEMORY[0x1E0CEF248])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1ED1F46A8 == -1)
          goto LABEL_35;
        goto LABEL_406;
      }
      if (v56 == *MEMORY[0x1E0CEF010])
        goto LABEL_249;
      if (v56 == *MEMORY[0x1E0CEEFD8])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_178;
        }
        goto LABEL_434;
      }
      if (v56 == *MEMORY[0x1E0CEF0A8])
      {
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_197;
      }
      if (v56 == *MEMORY[0x1E0CEF0A0])
      {
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_197;
      }
      if (v56 == *MEMORY[0x1E0CEF0B8])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_178;
        }
        goto LABEL_434;
      }
      if (v56 == *MEMORY[0x1E0CEF0C0])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_178;
        }
        goto LABEL_434;
      }
      if (v56 == *MEMORY[0x1E0CEF038] || v56 == *MEMORY[0x1E0CEEF68])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1ED1F46A8 == -1)
          goto LABEL_35;
        goto LABEL_406;
      }
      if (v56 == *MEMORY[0x1E0CEF158])
      {
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_197;
      }
      if (v56 == *MEMORY[0x1E0CEF160])
      {
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_197;
      }
      if (v56 == *MEMORY[0x1E0CEF0F8])
      {
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_197;
      }
      if (v56 == *MEMORY[0x1E0CEEF78])
      {
LABEL_249:
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_178;
        }
        goto LABEL_434;
      }
      if (v56 == *MEMORY[0x1E0CEF140]
        || v56 == *MEMORY[0x1E0CEF150]
        || v56 == *MEMORY[0x1E0CEF0D8]
        || v56 == *MEMORY[0x1E0CEEF70])
      {
        goto LABEL_230;
      }
      if (v56 == *MEMORY[0x1E0CEF1C8]
        || v56 == *MEMORY[0x1E0CEF1D8]
        || v56 == *MEMORY[0x1E0CEF188]
        || v56 == *MEMORY[0x1E0CEEF80])
      {
        goto LABEL_234;
      }
      if (v56 != *MEMORY[0x1E0CEF1D0]
        && v56 != *MEMORY[0x1E0CEF1E0]
        && v56 != *MEMORY[0x1E0CEF190]
        && v56 != *MEMORY[0x1E0CEEF88])
      {
        if (v56 == *MEMORY[0x1E0CEEFE0])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v56 == *MEMORY[0x1E0CEF0B0]
          || v56 == *MEMORY[0x1E0CEF078]
          || v56 == *MEMORY[0x1E0CEF128]
          || v56 == *MEMORY[0x1E0CEF130])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v56 == *MEMORY[0x1E0CEF208])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v56 == *MEMORY[0x1E0CEEF90])
        {
          swift_bridgeObjectRelease();
          if (v29)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_45;
            goto LABEL_178;
          }
          goto LABEL_434;
        }
        if (v56 == *MEMORY[0x1E0CEF258])
        {
          swift_bridgeObjectRelease();
          if (v29)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_45;
            goto LABEL_178;
          }
          goto LABEL_434;
        }
        if (v56 != *MEMORY[0x1E0CEF018])
        {
          if (v56 == *MEMORY[0x1E0CEF020])
          {
            if (v29)
            {
              if (v27)
              {
                if (qword_1ED1F46A8 != -1)
                  swift_once();
                goto LABEL_56;
              }
              goto LABEL_78;
            }
          }
          else
          {
            if (v56 == *MEMORY[0x1E0CEEFB0])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 != -1)
                swift_once();
              goto LABEL_35;
            }
            if (v56 == *MEMORY[0x1E0CEF070]
              || v56 == *MEMORY[0x1E0CEF058]
              || v56 == *MEMORY[0x1E0CEF108]
              || v56 == *MEMORY[0x1E0CEF110])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 != -1)
                swift_once();
              goto LABEL_35;
            }
            if (v56 == *MEMORY[0x1E0CEF1E8])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 != -1)
                swift_once();
              goto LABEL_35;
            }
            if (v56 == *MEMORY[0x1E0CEF238])
            {
              swift_bridgeObjectRelease();
              if (v29)
              {
                if (qword_1ED1F46A8 != -1)
                  swift_once();
                goto LABEL_45;
              }
              goto LABEL_434;
            }
            if (v56 == *MEMORY[0x1E0CEF220])
            {
              swift_bridgeObjectRelease();
              if (v29)
              {
                if (qword_1ED1F46A8 != -1)
                  swift_once();
                goto LABEL_45;
              }
              goto LABEL_434;
            }
            if (v56 == *MEMORY[0x1E0CEEFC0])
            {
              if (v29)
              {
                if (v27)
                {
                  if (qword_1ED1F46A8 != -1)
                    swift_once();
                  goto LABEL_56;
                }
                goto LABEL_78;
              }
            }
            else
            {
              if (v56 != *MEMORY[0x1E0CEEFC8])
              {
                v99 = *MEMORY[0x1E0CEF200];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
                if (v57 != v99)
                  (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v116);
                return 0;
              }
              if (v29)
              {
                if (v27)
                {
                  if (qword_1ED1F46A8 != -1)
                    swift_once();
                  goto LABEL_56;
                }
                goto LABEL_78;
              }
            }
          }
LABEL_433:
          swift_bridgeObjectRelease();
          goto LABEL_434;
        }
        if (!v29)
          goto LABEL_433;
        if (!v27)
          goto LABEL_78;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
LABEL_197:
        swift_once();
        goto LABEL_56;
      }
    }
    if (!v29)
      goto LABEL_433;
    if (!v27)
      goto LABEL_78;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_56;
    goto LABEL_197;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED1F46A8 != -1)
LABEL_406:
    swift_once();
LABEL_35:
  swift_beginAccess();
  v61 = (id)qword_1ED1F4470;
  v62 = sub_1B00054B8();

LABEL_36:
  (*(void (**)(char *, uint64_t))(v112 + 8))(v118, v113);
  return v62;
}

uint64_t sub_1AFDA6160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  id v10;
  uint64_t v11;
  BOOL v16;
  BOOL v17;
  BOOL v36;
  uint64_t v57;

  v0 = sub_1B0006238();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0006250();
  v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E0CEF028]
    || v4 == *MEMORY[0x1E0CEF0E0]
    || v4 == *MEMORY[0x1E0CEF0C8]
    || v4 == *MEMORY[0x1E0CEF168]
    || v4 == *MEMORY[0x1E0CEF170])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF210] || v4 == *MEMORY[0x1E0CEEFA0])
    goto LABEL_22;
  if (v4 == *MEMORY[0x1E0CEEF98])
    goto LABEL_25;
  if (v4 == *MEMORY[0x1E0CEF040])
  {
LABEL_22:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF048])
  {
LABEL_30:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF1F0] || v4 == *MEMORY[0x1E0CEF250])
    goto LABEL_37;
  if (v4 == *MEMORY[0x1E0CEF228])
    goto LABEL_25;
  if (v4 == *MEMORY[0x1E0CEEFE8])
    goto LABEL_37;
  if (v4 == *MEMORY[0x1E0CEEFF0])
    goto LABEL_30;
  if (v4 == *MEMORY[0x1E0CEF240] || v4 == *MEMORY[0x1E0CEF008])
    goto LABEL_47;
  if (v4 == *MEMORY[0x1E0CEEFD0])
    goto LABEL_25;
  if (v4 == *MEMORY[0x1E0CEF090])
    goto LABEL_30;
  if (v4 == *MEMORY[0x1E0CEF088])
    goto LABEL_47;
  if (v4 == *MEMORY[0x1E0CEF080])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF098])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF030] || v4 == *MEMORY[0x1E0CEEF40])
  {
LABEL_47:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  v16 = v4 == *MEMORY[0x1E0CEF138] || v4 == *MEMORY[0x1E0CEF148];
  v17 = v16 || v4 == *MEMORY[0x1E0CEF0F0];
  if (v17 || v4 == *MEMORY[0x1E0CEEF50])
  {
LABEL_37:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF118]
    || v4 == *MEMORY[0x1E0CEF120]
    || v4 == *MEMORY[0x1E0CEF0D0]
    || v4 == *MEMORY[0x1E0CEEF48])
  {
LABEL_25:
    if (qword_1ED1F46A8 == -1)
    {
LABEL_26:
      swift_beginAccess();
      v10 = (id)qword_1ED1F4470;
      v11 = sub_1B00054B8();

      return v11;
    }
LABEL_276:
    swift_once();
    goto LABEL_26;
  }
  if (v4 == *MEMORY[0x1E0CEF1A8]
    || v4 == *MEMORY[0x1E0CEF1B8]
    || v4 == *MEMORY[0x1E0CEF178]
    || v4 == *MEMORY[0x1E0CEEF58])
  {
    goto LABEL_37;
  }
  if (v4 == *MEMORY[0x1E0CEF1B0]
    || v4 == *MEMORY[0x1E0CEF1C0]
    || v4 == *MEMORY[0x1E0CEF180]
    || v4 == *MEMORY[0x1E0CEEF60])
  {
    goto LABEL_30;
  }
  if (v4 == *MEMORY[0x1E0CEF050]
    || v4 == *MEMORY[0x1E0CEF100]
    || v4 == *MEMORY[0x1E0CEF0E8]
    || v4 == *MEMORY[0x1E0CEF198]
    || v4 == *MEMORY[0x1E0CEF1A0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF218] || v4 == *MEMORY[0x1E0CEEFB8])
    goto LABEL_129;
  if (v4 == *MEMORY[0x1E0CEEFA8])
    goto LABEL_132;
  if (v4 == *MEMORY[0x1E0CEF060])
  {
LABEL_129:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF068])
  {
LABEL_136:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF1F8] || v4 == *MEMORY[0x1E0CEF260])
    goto LABEL_144;
  if (v4 == *MEMORY[0x1E0CEF230])
    goto LABEL_132;
  if (v4 == *MEMORY[0x1E0CEEFF8])
    goto LABEL_144;
  if (v4 == *MEMORY[0x1E0CEF000])
    goto LABEL_136;
  if (v4 == *MEMORY[0x1E0CEF248] || v4 == *MEMORY[0x1E0CEF010])
    goto LABEL_155;
  if (v4 == *MEMORY[0x1E0CEEFD8])
    goto LABEL_132;
  if (v4 == *MEMORY[0x1E0CEF0A8])
    goto LABEL_136;
  if (v4 == *MEMORY[0x1E0CEF0A0])
    goto LABEL_155;
  if (v4 == *MEMORY[0x1E0CEF0B8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF0C0])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF038] || v4 == *MEMORY[0x1E0CEEF68])
  {
LABEL_155:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  v36 = v4 == *MEMORY[0x1E0CEF158] || v4 == *MEMORY[0x1E0CEF160];
  if (v36 || v4 == *MEMORY[0x1E0CEF0F8])
  {
LABEL_144:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEEF78])
    goto LABEL_155;
  if (v4 == *MEMORY[0x1E0CEF140]
    || v4 == *MEMORY[0x1E0CEF150]
    || v4 == *MEMORY[0x1E0CEF0D8]
    || v4 == *MEMORY[0x1E0CEEF70])
  {
LABEL_132:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF1C8]
    || v4 == *MEMORY[0x1E0CEF1D8]
    || v4 == *MEMORY[0x1E0CEF188]
    || v4 == *MEMORY[0x1E0CEEF80])
  {
    goto LABEL_144;
  }
  if (v4 == *MEMORY[0x1E0CEF1D0]
    || v4 == *MEMORY[0x1E0CEF1E0]
    || v4 == *MEMORY[0x1E0CEF190]
    || v4 == *MEMORY[0x1E0CEEF88])
  {
    goto LABEL_136;
  }
  if (v4 == *MEMORY[0x1E0CEEFE0]
    || v4 == *MEMORY[0x1E0CEF0B0]
    || v4 == *MEMORY[0x1E0CEF078]
    || v4 == *MEMORY[0x1E0CEF128]
    || v4 == *MEMORY[0x1E0CEF130])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF208] || v4 == *MEMORY[0x1E0CEEF90])
    goto LABEL_237;
  if (v4 == *MEMORY[0x1E0CEF258])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF018])
  {
LABEL_237:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF020])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEEFB0]
    || v4 == *MEMORY[0x1E0CEF070]
    || v4 == *MEMORY[0x1E0CEF058]
    || v4 == *MEMORY[0x1E0CEF108]
    || v4 == *MEMORY[0x1E0CEF110])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEF1E8] || v4 == *MEMORY[0x1E0CEF238])
    goto LABEL_268;
  if (v4 == *MEMORY[0x1E0CEF220])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEEFC0])
  {
LABEL_268:
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 == *MEMORY[0x1E0CEEFC8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_26;
    goto LABEL_276;
  }
  if (v4 != *MEMORY[0x1E0CEF200])
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

void NextHourPrecipitationStringBuilder.buildIntensityString(from:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_22_0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CF0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_17_81();
  v6 = sub_1B00063D0();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_38();
  v24 = v8;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73CF8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_27_1();
  v13 = sub_1B00060D0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_26_2();
  if ((sub_1B00064C0() & 1) != 0)
  {
    v15 = sub_1B00064CC();
    MEMORY[0x1E0C80A78](v15);
    *(&v23 - 2) = v4;
    sub_1AFBA781C((uint64_t (*)(_QWORD))sub_1AFDAACC8, (uint64_t)(&v23 - 4), v16);
    OUTLINED_FUNCTION_18_67(v17);
    sub_1AFDAAD8C(&v27);
    swift_bridgeObjectRelease();
    sub_1AFBA7468(v27);
    swift_release();
    OUTLINED_FUNCTION_4_0(v2, 1, v13);
    if (v19)
    {
      sub_1AFAF6288(v2, &qword_1EEE73CF8);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, v2, v13);
      sub_1B00060C4();
      v18 = sub_1B00063A0();
      OUTLINED_FUNCTION_4_0(v0, 1, v18);
      if (v19)
      {
        sub_1AFAF6288(v0, &qword_1EEE73CF0);
      }
      else
      {
        v20 = v24;
        sub_1B0006394();
        OUTLINED_FUNCTION_27(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8));
        v22 = v25;
        v21 = v26;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v11, v20, v26);
        static NextHourPrecipitationStringBuilder.buildIntensityString(for:)((uint64_t)v11);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v21);
      }
      OUTLINED_FUNCTION_37_30();
    }
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t static NextHourPrecipitationStringBuilder.buildIntensityString(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  id v8;
  uint64_t v9;

  v2 = sub_1B00063D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0CEF3F8])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v7 == *MEMORY[0x1E0CEF400])
  {
    if (qword_1ED1F46A8 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v7 != *MEMORY[0x1E0CEF3F0])
  {
    OUTLINED_FUNCTION_27(v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    return 0;
  }
  if (qword_1ED1F46A8 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  OUTLINED_FUNCTION_5_97();
  v8 = OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_25_51();
  v9 = sub_1B00054B8();

  return v9;
}

void NextHourPrecipitationStringBuilder.buildLongString(from:timeZone:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_0();
  v19 = v0;
  v5 = v4;
  v17 = v6;
  v18 = OUTLINED_FUNCTION_19_59();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_37();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1B48);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_8_91();
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27_1();
  if ((sub_1B00064C0() & 1) != 0)
  {
    v11 = sub_1B00064B4();
    MEMORY[0x1E0C80A78](v11);
    v16 = v5;
    v15[2] = v5;
    OUTLINED_FUNCTION_34_37((uint64_t (*)(_QWORD))sub_1AFDAC028, (uint64_t)v15, v12);
    OUTLINED_FUNCTION_18_67(v13);
    OUTLINED_FUNCTION_32_35();
    OUTLINED_FUNCTION_4_15();
    OUTLINED_FUNCTION_26_51();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_4_0(v3, 1, v9);
    if (v14)
    {
      sub_1AFAF6288(v3, &qword_1ED1F1B48);
    }
    else
    {
      OUTLINED_FUNCTION_23_61(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      OUTLINED_FUNCTION_42_17();
      sub_1AFDA7B78(v2, v17, v16);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v18);
      OUTLINED_FUNCTION_13_88(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFDA7B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  char v39;
  void (*v40)(_BYTE *, uint64_t);
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t);
  _BYTE *v57;
  int v58;
  int v59;
  id v63;
  uint64_t v64;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  BOOL v79;
  BOOL v80;
  int v102;
  _BYTE v103[12];
  unsigned int v104;
  void (*v105)(uint64_t, _QWORD, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v110;
  __int128 v111;
  _BYTE *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;

  v113 = a3;
  v4 = sub_1B0006238();
  v118 = *(_QWORD *)(v4 - 8);
  v119 = v4;
  MEMORY[0x1E0C80A78](v4);
  v117 = &v103[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1B00052A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v112 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v103[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v103[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v103[-v16];
  v18 = sub_1B00058D8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v114 = &v103[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v103[-v22];
  v24 = sub_1B0005B18();
  v115 = *(_QWORD *)(v24 - 8);
  v116 = v24;
  MEMORY[0x1E0C80A78](v24);
  v121 = &v103[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B0005A34();
  v120 = a1;
  sub_1B0006244();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
  {
    sub_1AFAF6288((uint64_t)v17, &qword_1ED1F4BA0);
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
  }
  else
  {
    v110 = v19;
    v109 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32);
    v109(v23, v17, v18);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BB0);
    v31 = sub_1B0005B00();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned __int8 *)(v32 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = v34 + *(_QWORD *)(v32 + 72);
    v108 = v30;
    v107 = v35;
    v106 = v33 | 7;
    v36 = swift_allocObject();
    v111 = xmmword_1B00275C0;
    *(_OWORD *)(v36 + 16) = xmmword_1B00275C0;
    v37 = *(void (**)(_QWORD))(v32 + 104);
    v104 = *MEMORY[0x1E0CB1178];
    v105 = (void (*)(uint64_t, _QWORD, uint64_t))v37;
    v37(v36 + v34);
    sub_1AFAFAA98();
    sub_1B0005A58();
    swift_bridgeObjectRelease();
    v38 = sub_1B0005260();
    LOBYTE(v32) = v39;
    v40 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v113 = v6;
    v41 = v6;
    v42 = v40;
    v40(v11, v41);
    v28 = 0;
    if ((v32 & 1) != 0)
    {
      v29 = 0;
    }
    else
    {
      v29 = 0;
      if (v38 >= 1)
      {
        if (qword_1ED1F46A8 != -1)
          swift_once();
        swift_beginAccess();
        v43 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = v111;
        *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v44 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v44 + 32) = v38;
        v45 = sub_1B0008560();
        v29 = v46;
        v28 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    sub_1B000625C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v18) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v23, v18);
      sub_1AFAF6288((uint64_t)v14, &qword_1ED1F4BA0);
      v26 = 0;
      v27 = 0;
    }
    else
    {
      v109(v114, v14, v18);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v111;
      v105(v47 + v34, v104, v31);
      sub_1AFAFAA98();
      v48 = v112;
      sub_1B0005A58();
      swift_bridgeObjectRelease();
      v49 = sub_1B0005260();
      v51 = v50;
      v42(v48, v113);
      v26 = 0;
      v27 = 0;
      if ((v51 & 1) == 0 && v49 >= 1)
      {
        v52 = MEMORY[0x1E0DEB418];
        if (qword_1ED1F46A8 != -1)
          swift_once();
        swift_beginAccess();
        v53 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = v111;
        *(_QWORD *)(v54 + 56) = v52;
        *(_QWORD *)(v54 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v54 + 32) = v49;
        v26 = sub_1B0008560();
        v27 = v55;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v56 = *(void (**)(_BYTE *, uint64_t))(v110 + 8);
      v56(v114, v18);
      v56(v23, v18);
    }
  }
  v57 = v117;
  sub_1B0006250();
  v58 = (*(uint64_t (**)(_BYTE *, uint64_t))(v118 + 88))(v57, v119);
  if (v58 == *MEMORY[0x1E0CEF028])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED1F46A8 == -1)
      goto LABEL_35;
    goto LABEL_406;
  }
  v59 = v58;
  if (v58 == *MEMORY[0x1E0CEF0E0]
    || v58 == *MEMORY[0x1E0CEF0C8]
    || v58 == *MEMORY[0x1E0CEF168]
    || v58 == *MEMORY[0x1E0CEF170])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED1F46A8 == -1)
      goto LABEL_35;
    goto LABEL_406;
  }
  if (v58 != *MEMORY[0x1E0CEF210])
  {
    if (v58 == *MEMORY[0x1E0CEEFA0])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEEF98])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
        {
LABEL_45:
          swift_beginAccess();
          v66 = (id)qword_1ED1F4470;
          sub_1B00054B8();

          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
          v67 = swift_allocObject();
          *(_OWORD *)(v67 + 16) = xmmword_1B00275C0;
          *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v67 + 64) = sub_1AFAFB1D0();
          *(_QWORD *)(v67 + 32) = v28;
          *(_QWORD *)(v67 + 40) = v29;
LABEL_46:
          v64 = sub_1B0008560();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
LABEL_189:
        swift_once();
        goto LABEL_45;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF040])
    {
      if (v29)
      {
        if (v27)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_56;
          goto LABEL_198;
        }
LABEL_432:
        (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v121, v116);
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_429;
    }
    if (v58 == *MEMORY[0x1E0CEF048])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
      {
LABEL_56:
        swift_beginAccess();
        v68 = (id)qword_1ED1F4470;
        sub_1B00054B8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
        v69 = swift_allocObject();
        *(_OWORD *)(v69 + 16) = xmmword_1B00275A0;
        v70 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
        v71 = sub_1AFAFB1D0();
        *(_QWORD *)(v69 + 32) = v28;
        *(_QWORD *)(v69 + 40) = v29;
        *(_QWORD *)(v69 + 96) = v70;
        *(_QWORD *)(v69 + 104) = v71;
        *(_QWORD *)(v69 + 64) = v71;
        *(_QWORD *)(v69 + 72) = v26;
        *(_QWORD *)(v69 + 80) = v27;
        goto LABEL_46;
      }
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF1F0])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEF250])
    {
LABEL_61:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF228])
    {
LABEL_65:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEEFE8])
    {
LABEL_69:
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEEFF0])
      goto LABEL_74;
    if (v58 == *MEMORY[0x1E0CEF240])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEF008])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEEFD0])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF090])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF088])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF080])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF098])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF030] || v58 == *MEMORY[0x1E0CEEF40])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEF138])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF148])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF0F0])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEEF50])
      goto LABEL_61;
    if (v58 == *MEMORY[0x1E0CEF118]
      || v58 == *MEMORY[0x1E0CEF120]
      || v58 == *MEMORY[0x1E0CEF0D0]
      || v58 == *MEMORY[0x1E0CEEF48])
    {
      goto LABEL_65;
    }
    if (v58 == *MEMORY[0x1E0CEF1A8]
      || v58 == *MEMORY[0x1E0CEF1B8]
      || v58 == *MEMORY[0x1E0CEF178]
      || v58 == *MEMORY[0x1E0CEEF58])
    {
      goto LABEL_69;
    }
    v79 = v58 == *MEMORY[0x1E0CEF1B0] || v58 == *MEMORY[0x1E0CEF1C0];
    v80 = v79 || v58 == *MEMORY[0x1E0CEF180];
    if (v80 || v58 == *MEMORY[0x1E0CEEF60])
    {
LABEL_74:
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF050]
      || v58 == *MEMORY[0x1E0CEF100]
      || v58 == *MEMORY[0x1E0CEF0E8]
      || v58 == *MEMORY[0x1E0CEF198]
      || v58 == *MEMORY[0x1E0CEF1A0])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEF218])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEEFB8])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEEFA8])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF060])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF068])
    {
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 == *MEMORY[0x1E0CEF1F8])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED1F46A8 == -1)
        goto LABEL_35;
      goto LABEL_406;
    }
    if (v58 == *MEMORY[0x1E0CEF260])
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEF230])
    {
LABEL_226:
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_1ED1F46A8 == -1)
          goto LABEL_45;
        goto LABEL_189;
      }
      goto LABEL_430;
    }
    if (v58 == *MEMORY[0x1E0CEEFF8])
    {
LABEL_231:
      if (!v29)
        goto LABEL_429;
      if (!v27)
        goto LABEL_432;
      if (qword_1ED1F46A8 == -1)
        goto LABEL_56;
      goto LABEL_198;
    }
    if (v58 != *MEMORY[0x1E0CEF000])
    {
      if (v58 == *MEMORY[0x1E0CEF248])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1ED1F46A8 == -1)
          goto LABEL_35;
        goto LABEL_406;
      }
      if (v58 == *MEMORY[0x1E0CEF010])
        goto LABEL_245;
      if (v58 == *MEMORY[0x1E0CEEFD8])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_189;
        }
        goto LABEL_430;
      }
      if (v58 == *MEMORY[0x1E0CEF0A8])
      {
        if (!v29)
          goto LABEL_429;
        if (!v27)
          goto LABEL_432;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_198;
      }
      if (v58 == *MEMORY[0x1E0CEF0A0])
      {
        if (!v29)
          goto LABEL_429;
        if (!v27)
          goto LABEL_432;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_198;
      }
      if (v58 == *MEMORY[0x1E0CEF0B8])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_189;
        }
        goto LABEL_430;
      }
      if (v58 == *MEMORY[0x1E0CEF0C0])
      {
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_189;
        }
        goto LABEL_430;
      }
      if (v58 == *MEMORY[0x1E0CEF038] || v58 == *MEMORY[0x1E0CEEF68])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1ED1F46A8 == -1)
          goto LABEL_35;
        goto LABEL_406;
      }
      if (v58 == *MEMORY[0x1E0CEF158])
      {
        if (!v29)
          goto LABEL_429;
        if (!v27)
          goto LABEL_432;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_198;
      }
      if (v58 == *MEMORY[0x1E0CEF160])
      {
        if (!v29)
          goto LABEL_429;
        if (!v27)
          goto LABEL_432;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_198;
      }
      if (v58 == *MEMORY[0x1E0CEF0F8])
      {
        if (!v29)
          goto LABEL_429;
        if (!v27)
          goto LABEL_432;
        if (qword_1ED1F46A8 == -1)
          goto LABEL_56;
        goto LABEL_198;
      }
      if (v58 == *MEMORY[0x1E0CEEF78])
      {
LABEL_245:
        swift_bridgeObjectRelease();
        if (v29)
        {
          if (qword_1ED1F46A8 == -1)
            goto LABEL_45;
          goto LABEL_189;
        }
        goto LABEL_430;
      }
      if (v58 == *MEMORY[0x1E0CEF140]
        || v58 == *MEMORY[0x1E0CEF150]
        || v58 == *MEMORY[0x1E0CEF0D8]
        || v58 == *MEMORY[0x1E0CEEF70])
      {
        goto LABEL_226;
      }
      if (v58 == *MEMORY[0x1E0CEF1C8]
        || v58 == *MEMORY[0x1E0CEF1D8]
        || v58 == *MEMORY[0x1E0CEF188]
        || v58 == *MEMORY[0x1E0CEEF80])
      {
        goto LABEL_231;
      }
      if (v58 != *MEMORY[0x1E0CEF1D0]
        && v58 != *MEMORY[0x1E0CEF1E0]
        && v58 != *MEMORY[0x1E0CEF190]
        && v58 != *MEMORY[0x1E0CEEF88])
      {
        if (v58 == *MEMORY[0x1E0CEEFE0])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v58 == *MEMORY[0x1E0CEF0B0]
          || v58 == *MEMORY[0x1E0CEF078]
          || v58 == *MEMORY[0x1E0CEF128]
          || v58 == *MEMORY[0x1E0CEF130])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v58 == *MEMORY[0x1E0CEF208])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1ED1F46A8 == -1)
            goto LABEL_35;
          goto LABEL_406;
        }
        if (v58 == *MEMORY[0x1E0CEEF90])
        {
          swift_bridgeObjectRelease();
          if (v29)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_45;
            goto LABEL_189;
          }
          goto LABEL_430;
        }
        if (v58 == *MEMORY[0x1E0CEF258])
        {
          swift_bridgeObjectRelease();
          if (v29)
          {
            if (qword_1ED1F46A8 == -1)
              goto LABEL_45;
            goto LABEL_189;
          }
LABEL_430:
          (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v121, v116);
          return 0;
        }
        if (v58 == *MEMORY[0x1E0CEF018])
        {
          if (!v29)
            goto LABEL_429;
          if (!v27)
            goto LABEL_432;
          if (qword_1ED1F46A8 == -1)
            goto LABEL_56;
        }
        else
        {
          if (v58 != *MEMORY[0x1E0CEF020])
          {
            if (v58 == *MEMORY[0x1E0CEEFB0])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 == -1)
                goto LABEL_35;
              goto LABEL_406;
            }
            if (v58 == *MEMORY[0x1E0CEF070]
              || v58 == *MEMORY[0x1E0CEF058]
              || v58 == *MEMORY[0x1E0CEF108]
              || v58 == *MEMORY[0x1E0CEF110])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 != -1)
                swift_once();
              goto LABEL_35;
            }
            if (v58 == *MEMORY[0x1E0CEF1E8])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_1ED1F46A8 != -1)
                swift_once();
              goto LABEL_35;
            }
            if (v58 == *MEMORY[0x1E0CEF238])
            {
              swift_bridgeObjectRelease();
              if (v29)
              {
                if (qword_1ED1F46A8 != -1)
                  swift_once();
                goto LABEL_45;
              }
              goto LABEL_430;
            }
            if (v58 == *MEMORY[0x1E0CEF220])
            {
              swift_bridgeObjectRelease();
              if (v29)
              {
                if (qword_1ED1F46A8 != -1)
                  swift_once();
                goto LABEL_45;
              }
              goto LABEL_430;
            }
            if (v58 == *MEMORY[0x1E0CEEFC0])
            {
              if (v29)
              {
                if (v27)
                {
                  if (qword_1ED1F46A8 != -1)
                    swift_once();
                  goto LABEL_56;
                }
                goto LABEL_432;
              }
            }
            else
            {
              if (v58 != *MEMORY[0x1E0CEEFC8])
              {
                v102 = *MEMORY[0x1E0CEF200];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v121, v116);
                if (v59 != v102)
                  (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v117, v119);
                return 0;
              }
              if (v29)
              {
                if (v27)
                {
                  if (qword_1ED1F46A8 != -1)
                    swift_once();
                  goto LABEL_56;
                }
                goto LABEL_432;
              }
            }
LABEL_429:
            swift_bridgeObjectRelease();
            goto LABEL_430;
          }
          if (!v29)
            goto LABEL_429;
          if (!v27)
            goto LABEL_432;
          if (qword_1ED1F46A8 == -1)
            goto LABEL_56;
        }
LABEL_198:
        swift_once();
        goto LABEL_56;
      }
    }
    if (!v29)
      goto LABEL_429;
    if (!v27)
      goto LABEL_432;
    if (qword_1ED1F46A8 == -1)
      goto LABEL_56;
    goto LABEL_198;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED1F46A8 != -1)
LABEL_406:
    swift_once();
LABEL_35:
  swift_beginAccess();
  v63 = (id)qword_1ED1F4470;
  v64 = sub_1B00054B8();

LABEL_36:
  (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v121, v116);
  return v64;
}

uint64_t NextHourPrecipitationStringBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NextHourPrecipitationStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

#error "1AFDAACB8: call analysis failed (funcsize=9)"

#error "1AFDAACDC: call analysis failed (funcsize=9)"

void sub_1AFDAACEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1B0006214();
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC92F84();
    v2 = v3;
  }
  sub_1AFDAAE40();
  *a1 = v2;
}

void sub_1AFDAAD8C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1B00060D0();
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AFC93058();
    v2 = v3;
  }
  sub_1AFDAAE40();
  *a1 = v2;
}

uint64_t method lookup function for NextHourPrecipitationStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NextHourPrecipitationStringBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1AFDAAE40()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  char *v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  void (*v104)(char *, char *, uint64_t);
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  char v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  int64_t *v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  void (*v150)(uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(_QWORD);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  void (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  void (*v181)(uint64_t);
  uint64_t v182;
  char *v183;
  uint64_t v184;
  _QWORD *v185;

  OUTLINED_FUNCTION_16_2();
  v166 = v1;
  v181 = v2;
  v4 = v3;
  v6 = v5;
  v7 = v0;
  v9 = (int64_t)v8;
  v176 = OUTLINED_FUNCTION_11_0();
  v169 = *(_QWORD *)(v176 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v10);
  v175 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v12);
  v21 = OUTLINED_FUNCTION_36_28(v13, v14, v15, v16, v17, v18, v19, v20, v156);
  v167 = v6;
  v22 = v6(v21);
  v185 = *(_QWORD **)(v22 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_38();
  v163 = v24;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v25);
  v182 = (uint64_t)&v156 - v26;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v27);
  v173 = (char *)&v156 - v28;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_24_13();
  v177 = (char *)v30;
  v31 = *(_QWORD *)(v9 + 8);
  v32 = sub_1B0008F74();
  if (v32 >= v31)
  {
    if ((v31 & 0x8000000000000000) == 0)
    {
      if (v31)
        sub_1AFDAB8DC();
      goto LABEL_118;
    }
    goto LABEL_140;
  }
  v158 = v32;
  v157 = v4(v31 / 2);
  v165 = v33;
  if (v31 <= 0)
  {
LABEL_104:
    v35 = (char *)MEMORY[0x1E0DEE9D8];
    v101 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
    if (v101 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      if (v31 >= -1)
        goto LABEL_117;
      goto LABEL_144;
    }
    v150 = *(void (**)(uint64_t))v9;
    while (1)
    {
      v9 = v101 - 2;
      if (v101 < 2)
        break;
      if (!v150)
        goto LABEL_148;
      v151 = v35;
      v152 = *(_QWORD *)&v35[16 * v9 + 32];
      v153 = *(_QWORD *)&v35[16 * v101 + 24];
      OUTLINED_FUNCTION_16_75();
      if (v0)
        goto LABEL_102;
      if (v153 < v152)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v151 = sub_1AFC92F64();
      if ((unint64_t)v9 >= *((_QWORD *)v151 + 2))
        goto LABEL_136;
      v154 = &v151[16 * v9 + 32];
      *(_QWORD *)v154 = v152;
      *((_QWORD *)v154 + 1) = v153;
      v155 = *((_QWORD *)v151 + 2);
      if (v101 > v155)
        goto LABEL_137;
      memmove(&v151[16 * v101 + 16], &v151[16 * v101 + 32], 16 * (v155 - v101));
      v35 = v151;
      *((_QWORD *)v151 + 2) = v155 - 1;
      v101 = v155 - 1;
      if (v155 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v34 = 0;
  v35 = (char *)MEMORY[0x1E0DEE9D8];
  v36 = v31;
  v159 = v31;
  v178 = (_QWORD *)v9;
  v180 = v22;
  while (1)
  {
    v37 = (uint64_t)v34;
    v38 = v34 + 1;
    v162 = v35;
    v164 = v34;
    if ((uint64_t)(v34 + 1) >= v36)
    {
      v53 = (uint64_t)(v34 + 1);
    }
    else
    {
      v39 = *(void (**)(uint64_t))v9;
      v160 = (char *)v39;
      v40 = v185[9];
      v184 = v40;
      v41 = (void (*)(char *, char *, uint64_t))v185[2];
      OUTLINED_FUNCTION_49_8((uint64_t)v177, (uint64_t)v39 + v40 * (_QWORD)v38);
      v42 = (uint64_t)v39 + v40 * v37;
      v43 = (uint64_t)v173;
      v179 = v41;
      v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v41)(v173, v42, v22);
      v45 = v174;
      v172 = v36;
      v46 = v181;
      v47 = ((uint64_t (*)(uint64_t))v181)(v44);
      v48 = v175;
      v46(v47);
      v36 = v172;
      LODWORD(v183) = sub_1B0005860();
      v49 = *(void (**)(char *, uint64_t))(v169 + 8);
      v50 = v176;
      v49(v48, v176);
      v51 = v45;
      v37 = (uint64_t)v164;
      v171 = (void (*)(uint64_t, uint64_t))v49;
      v49(v51, v50);
      v52 = (char *)v185[1];
      OUTLINED_FUNCTION_48_9(v43);
      v170 = v52;
      ((void (*)(char *, uint64_t))v52)(v177, v22);
      v53 = v37 + 2;
      if (v37 + 2 < v36)
      {
        v156 = v7;
        v168 = v184 * (_QWORD)v38;
        v54 = v160;
        v161 = v184 * v53;
        while (1)
        {
          v55 = v53;
          v56 = (uint64_t)v177;
          v57 = v179;
          v58 = v180;
          v179(v177, &v54[v161], v180);
          v59 = v173;
          v57(v173, &v54[v168], v58);
          v60 = v174;
          v61 = OUTLINED_FUNCTION_51_1();
          v62 = v175;
          ((void (*)(uint64_t))v57)(v61);
          LODWORD(v57) = sub_1B0005860();
          v63 = v62;
          v64 = v176;
          v65 = v171;
          v171((uint64_t)v63, v176);
          v65((uint64_t)v60, v64);
          v66 = (void (*)(uint64_t, uint64_t))v170;
          ((void (*)(char *, uint64_t))v170)(v59, v58);
          v66(v56, v58);
          if (((v183 ^ v57) & 1) != 0)
            break;
          v53 = v55 + 1;
          v54 += v184;
          v36 = v172;
          if (v55 + 1 >= v172)
          {
            v53 = v172;
            v7 = v156;
            v22 = v180;
            v37 = (uint64_t)v164;
            goto LABEL_12;
          }
        }
        v7 = v156;
        v22 = v180;
        v53 = v55;
        v37 = (uint64_t)v164;
        v36 = v172;
      }
LABEL_12:
      v67 = v162;
      v9 = (int64_t)v178;
      if ((v183 & 1) != 0)
      {
        if (v53 < v37)
          goto LABEL_141;
        if (v37 < v53)
        {
          v68 = 0;
          v69 = v184;
          v70 = v184 * (v53 - 1);
          v71 = v53 * v184;
          v72 = v37 * v184;
          v179 = (void (*)(char *, char *, uint64_t))v53;
          do
          {
            if (v37 != v53 + v68 - 1)
            {
              v73 = v160;
              if (!v160)
                goto LABEL_147;
              v74 = v7;
              v75 = (unint64_t)&v160[v72];
              v183 = &v160[v70];
              v76 = v180;
              v171 = (void (*)(uint64_t, uint64_t))v185[4];
              ((void (*)(uint64_t, char *, uint64_t, char *))v171)(v163, &v160[v72], v180, v67);
              if (v72 < v70 || v75 >= (unint64_t)&v73[v71])
              {
                OUTLINED_FUNCTION_53_6();
                swift_arrayInitWithTakeFrontToBack();
                v69 = v184;
              }
              else
              {
                v69 = v184;
                if (v72 != v70)
                {
                  OUTLINED_FUNCTION_53_6();
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(char *, uint64_t, uint64_t))v171)(v183, v163, v76);
              v67 = v162;
              v7 = v74;
              v53 = (uint64_t)v179;
            }
            ++v37;
            --v68;
            v70 -= v69;
            v71 -= v69;
            v72 += v69;
          }
          while (v37 < v53 + v68);
          v9 = (int64_t)v178;
          v22 = v180;
          v37 = (uint64_t)v164;
          v36 = v172;
        }
      }
    }
    if (v53 < v36)
    {
      if (__OFSUB__(v53, v37))
        goto LABEL_139;
      if (v53 - v37 < v158)
      {
        if (__OFADD__(v37, v158))
          goto LABEL_142;
        if (v37 + v158 >= v36)
          v78 = v36;
        else
          v78 = v37 + v158;
        if (v78 < v37)
          goto LABEL_143;
        if (v53 != v78)
        {
          v156 = v7;
          v79 = (char *)v185[9];
          v168 = v185[2];
          v80 = (_QWORD)v79 * (v53 - 1);
          v170 = v79;
          v81 = v53 * (_QWORD)v79;
          v161 = v78;
          do
          {
            v82 = 0;
            v179 = (void (*)(char *, char *, uint64_t))v53;
            v171 = (void (*)(uint64_t, uint64_t))v81;
            v172 = v80;
            while (1)
            {
              v83 = *(void (**)(uint64_t))v9;
              v183 = (char *)(v81 + v82);
              v184 = v37;
              v84 = (char *)v83 + v81 + v82;
              v85 = (uint64_t)v177;
              v86 = (void (*)(char *, char *, uint64_t))v168;
              ((void (*)(char *, char *, uint64_t))v168)(v177, v84, v22);
              v87 = (uint64_t)v173;
              v86(v173, (char *)v83 + v80 + v82, v22);
              v88 = v174;
              v89 = OUTLINED_FUNCTION_51_1();
              v90 = v175;
              v83(v89);
              LOBYTE(v83) = sub_1B0005860();
              v91 = *(void (**)(char *, uint64_t))(v169 + 8);
              v92 = v90;
              v93 = v176;
              v91(v92, v176);
              v94 = v88;
              v22 = v180;
              v91(v94, v93);
              OUTLINED_FUNCTION_48_9(v87);
              OUTLINED_FUNCTION_48_9(v85);
              if ((v83 & 1) == 0)
                break;
              v95 = *(void (**)(uint64_t))v9;
              if (!*(_QWORD *)v9)
                goto LABEL_145;
              v81 = (uint64_t)v171;
              v80 = v172;
              v96 = (uint64_t)v95 + v172 + v82;
              OUTLINED_FUNCTION_49_8(v182, (uint64_t)v171 + (_QWORD)v95 + v82);
              swift_arrayInitWithTakeFrontToBack();
              OUTLINED_FUNCTION_49_8(v96, v182);
              v82 -= (uint64_t)v170;
              v37 = v184 + 1;
              v9 = (int64_t)v178;
              v97 = v179;
              if (v179 == (void (*)(char *, char *, uint64_t))(v184 + 1))
                goto LABEL_45;
            }
            v97 = v179;
            v81 = (uint64_t)v171;
            v80 = v172;
LABEL_45:
            v53 = (uint64_t)v97 + 1;
            v80 += (uint64_t)v170;
            v81 += (uint64_t)v170;
            v37 = (uint64_t)v164;
          }
          while (v53 != v161);
          v53 = v161;
          v7 = v156;
        }
      }
    }
    if (v53 < v37)
      goto LABEL_138;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v179 = (void (*)(char *, char *, uint64_t))v53;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v35 = v162;
    else
      v35 = sub_1AFC92E70(0, *((_QWORD *)v162 + 2) + 1, 1, v162);
    v100 = *((_QWORD *)v35 + 2);
    v99 = *((_QWORD *)v35 + 3);
    v101 = v100 + 1;
    if (v100 >= v99 >> 1)
      v35 = sub_1AFC92E70((char *)(v99 > 1), v100 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v101;
    v102 = v35 + 32;
    v103 = &v35[16 * v100 + 32];
    v104 = v179;
    *(_QWORD *)v103 = v37;
    *((_QWORD *)v103 + 1) = v104;
    if (v100)
      break;
    v101 = 1;
LABEL_95:
    v9 = (int64_t)v178;
    v34 = (char *)v179;
    v36 = v178[1];
    v31 = v159;
    if ((uint64_t)v179 >= v36)
      goto LABEL_105;
  }
  while (1)
  {
    v105 = v101 - 1;
    if (v101 >= 4)
    {
      v110 = &v102[16 * v101];
      v111 = *((_QWORD *)v110 - 8);
      v112 = *((_QWORD *)v110 - 7);
      v116 = __OFSUB__(v112, v111);
      v113 = v112 - v111;
      if (v116)
        goto LABEL_123;
      v115 = *((_QWORD *)v110 - 6);
      v114 = *((_QWORD *)v110 - 5);
      v116 = __OFSUB__(v114, v115);
      v108 = v114 - v115;
      v109 = v116;
      if (v116)
        goto LABEL_124;
      v117 = v101 - 2;
      v118 = &v102[16 * v101 - 32];
      v120 = *(_QWORD *)v118;
      v119 = *((_QWORD *)v118 + 1);
      v116 = __OFSUB__(v119, v120);
      v121 = v119 - v120;
      if (v116)
        goto LABEL_125;
      v116 = __OFADD__(v108, v121);
      v122 = v108 + v121;
      if (v116)
        goto LABEL_127;
      if (v122 >= v113)
      {
        v140 = &v102[16 * v105];
        v142 = *(_QWORD *)v140;
        v141 = *((_QWORD *)v140 + 1);
        v116 = __OFSUB__(v141, v142);
        v143 = v141 - v142;
        if (v116)
          goto LABEL_133;
        v133 = v108 < v143;
        goto LABEL_84;
      }
    }
    else
    {
      if (v101 != 3)
      {
        v134 = *((_QWORD *)v35 + 4);
        v135 = *((_QWORD *)v35 + 5);
        v116 = __OFSUB__(v135, v134);
        v127 = v135 - v134;
        v128 = v116;
        goto LABEL_78;
      }
      v107 = *((_QWORD *)v35 + 4);
      v106 = *((_QWORD *)v35 + 5);
      v116 = __OFSUB__(v106, v107);
      v108 = v106 - v107;
      v109 = v116;
    }
    if ((v109 & 1) != 0)
      goto LABEL_126;
    v117 = v101 - 2;
    v123 = &v102[16 * v101 - 32];
    v125 = *(_QWORD *)v123;
    v124 = *((_QWORD *)v123 + 1);
    v126 = __OFSUB__(v124, v125);
    v127 = v124 - v125;
    v128 = v126;
    if (v126)
      goto LABEL_128;
    v129 = &v102[16 * v105];
    v131 = *(_QWORD *)v129;
    v130 = *((_QWORD *)v129 + 1);
    v116 = __OFSUB__(v130, v131);
    v132 = v130 - v131;
    if (v116)
      goto LABEL_130;
    if (__OFADD__(v127, v132))
      goto LABEL_132;
    if (v127 + v132 >= v108)
    {
      v133 = v108 < v132;
LABEL_84:
      if (v133)
        v105 = v117;
      goto LABEL_86;
    }
LABEL_78:
    if ((v128 & 1) != 0)
      goto LABEL_129;
    v136 = &v102[16 * v105];
    v138 = *(_QWORD *)v136;
    v137 = *((_QWORD *)v136 + 1);
    v116 = __OFSUB__(v137, v138);
    v139 = v137 - v138;
    if (v116)
      goto LABEL_131;
    if (v139 < v127)
      goto LABEL_95;
LABEL_86:
    v144 = v105 - 1;
    if (v105 - 1 >= v101)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v178)
      goto LABEL_146;
    v145 = v35;
    v146 = (int64_t *)&v102[16 * v144];
    v9 = *v146;
    v147 = &v102[16 * v105];
    v148 = *((_QWORD *)v147 + 1);
    OUTLINED_FUNCTION_16_75();
    v7 = v0;
    if (v0)
      break;
    if (v148 < v9)
      goto LABEL_120;
    if (v105 > *((_QWORD *)v145 + 2))
      goto LABEL_121;
    *v146 = v9;
    *(_QWORD *)&v102[16 * v144 + 8] = v148;
    v149 = *((_QWORD *)v145 + 2);
    if (v105 >= v149)
      goto LABEL_122;
    v101 = v149 - 1;
    memmove(&v102[16 * v105], v147 + 16, 16 * (v149 - 1 - v105));
    v35 = v145;
    *((_QWORD *)v145 + 2) = v149 - 1;
    v22 = v180;
    if (v149 <= 2)
      goto LABEL_95;
  }
  v31 = v159;
LABEL_102:
  swift_bridgeObjectRelease();
  if (v31 < -1)
  {
    __break(1u);
    goto LABEL_104;
  }
LABEL_117:
  *(_QWORD *)(v157 + 16) = 0;
  swift_bridgeObjectRelease();
LABEL_118:
  OUTLINED_FUNCTION_4();
}

void sub_1AFDAB8DC()
{
  void (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;

  OUTLINED_FUNCTION_16_2();
  v67 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v58 = v9;
  v10 = OUTLINED_FUNCTION_11_0();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v13);
  v22 = OUTLINED_FUNCTION_36_28(v14, v15, v16, v17, v18, v19, v20, v21, v56[0]);
  v23 = v2(v22);
  v74 = *(_QWORD **)(v23 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_38();
  v72 = v25;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v26);
  v62 = (char *)v56 - v27;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_24_13();
  v61 = v29;
  v71 = v6;
  v57 = v8;
  if (v6 != v8)
  {
    v30 = v74[9];
    v59 = (uint64_t (*)(char *, uint64_t, uint64_t))v74[2];
    v60 = v23;
    v31 = v30 * (v71 - 1);
    v68 = v30;
    v32 = v30 * v71;
    while (2)
    {
      v33 = 0;
      v75 = v58;
      v69 = v32;
      v70 = v31;
      do
      {
        v34 = *v4;
        v73 = v32 + v33;
        v35 = v32 + v33 + v34;
        v36 = v61;
        v37 = v59;
        v59(v61, v35, v23);
        v38 = v31 + v33 + v34;
        v39 = v62;
        v40 = v37(v62, v38, v23);
        v41 = v63;
        v42 = v67;
        v43 = ((uint64_t (*)(uint64_t))v67)(v40);
        v44 = v4;
        v45 = v64;
        v42(v43);
        LOBYTE(v42) = sub_1B0005860();
        v46 = *(void (**)(char *, uint64_t))(v65 + 8);
        v47 = v45;
        v48 = v66;
        v46(v47, v66);
        v49 = v48;
        v4 = v44;
        v23 = v60;
        v46(v41, v49);
        v50 = (void (*)(char *, uint64_t))v74[1];
        v51 = v39;
        v31 = v70;
        v50(v51, v23);
        v52 = v36;
        v32 = v69;
        v50(v52, v23);
        if ((v42 & 1) == 0)
          break;
        v53 = *v4;
        if (!*v4)
        {
          __break(1u);
          return;
        }
        v54 = v53 + v31 + v33;
        v55 = (void (*)(uint64_t, uint64_t, uint64_t))v74[4];
        v55(v72, v53 + v32 + v33, v23);
        swift_arrayInitWithTakeFrontToBack();
        v55(v54, v72, v23);
        v33 -= v68;
        ++v75;
      }
      while (v71 != v75);
      v31 += v68;
      v32 += v68;
      if (++v71 != v57)
        continue;
      break;
    }
  }
  OUTLINED_FUNCTION_4();
}

void sub_1AFDABB80()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  unint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_16_2();
  v63 = v0;
  v2 = v1;
  v4 = v3;
  v66 = v5;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_11_0();
  v61 = *(_QWORD *)(v10 - 8);
  v62 = v10;
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_38();
  v60 = v12;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_24_13();
  v59 = v14;
  v68 = v2(0);
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_38();
  v58 = v15;
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_24_13();
  v57 = v17;
  v64 = v18;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v20 = v7 - v9;
  if (v7 - v9 == 0x8000000000000000 && v19 == -1)
    goto LABEL_78;
  v22 = v66 - v7;
  if (v66 - v7 == 0x8000000000000000 && v19 == -1)
    goto LABEL_79;
  v24 = v20 / v19;
  v25 = v22 / v19;
  if (v20 / v19 >= v22 / v19)
  {
    OUTLINED_FUNCTION_43_10();
    v26 = v4 + v25 * v19;
    if (v25 * v19 < 1 || v9 >= v7)
      goto LABEL_72;
    v51 = -v19;
    v49 = v4;
    v50 = *(void (**)(uint64_t))(v64 + 16);
    v29 = v66;
    v55 = v19;
    v65 = v9;
    while (1)
    {
      v53 = v29;
      v67 = v29 + v51;
      v50(v57);
      v30 = ((uint64_t (*)(uint64_t))v50)(v58);
      v31 = v63(v30);
      v63(v31);
      v32 = sub_1B0005860();
      v33 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v33(v60, v62);
      v33(v59, v62);
      v34 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v34(v58, v68);
      v34(v57, v68);
      if ((v32 & 1) != 0)
      {
        v29 = v67;
        if (v53 >= v7 && v67 < v7)
        {
          v19 = v55;
          v37 = v65;
          if (v53 != v7)
          {
            v7 += v51;
            goto LABEL_40;
          }
          v7 += v51;
LABEL_43:
          v4 = v49;
          goto LABEL_44;
        }
        v7 += v51;
      }
      else
      {
        v29 = v67;
        if (v53 >= v26 && v67 < v26)
        {
          v19 = v55;
          v37 = v65;
          if (v53 == v26)
          {
            v26 += v51;
          }
          else
          {
            v26 += v51;
LABEL_40:
            OUTLINED_FUNCTION_13_16();
          }
          goto LABEL_43;
        }
        v26 += v51;
      }
      OUTLINED_FUNCTION_22_54();
      v4 = v49;
      v19 = v55;
      v37 = v65;
LABEL_44:
      if (v26 <= v4 || v7 <= v37)
        goto LABEL_72;
    }
  }
  OUTLINED_FUNCTION_43_10();
  v26 = v4 + v24 * v19;
  if (v24 * v19 >= 1 && v7 < v66)
  {
    v54 = *(void (**)(uint64_t, unint64_t, uint64_t))(v64 + 16);
    v56 = v19;
    v52 = v4 + v24 * v19;
    do
    {
      v54(v57, v7, v68);
      v39 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t))v54)(v58, v4, v68);
      v40 = v63(v39);
      v41 = v7;
      v63(v40);
      v42 = sub_1B0005860();
      v43 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v43(v60, v62);
      v43(v59, v62);
      v44 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v44(v58, v68);
      v44(v57, v68);
      if ((v42 & 1) != 0)
      {
        v19 = v56;
        v7 += v56;
        if (v9 < v41 || v9 >= v7)
        {
          OUTLINED_FUNCTION_22_54();
        }
        else if (v9 != v41)
        {
          OUTLINED_FUNCTION_13_16();
        }
      }
      else
      {
        v19 = v56;
        if (v9 < v4 || v9 >= v4 + v56)
        {
          OUTLINED_FUNCTION_22_54();
        }
        else if (v9 != v4)
        {
          OUTLINED_FUNCTION_13_16();
        }
        v4 += v56;
      }
      v26 = v52;
      v9 += v19;
    }
    while (v4 < v52 && v7 < v66);
  }
LABEL_72:
  if (v19 != -1 || v26 - v4 != 0x8000000000000000)
  {
    OUTLINED_FUNCTION_43_10();
    OUTLINED_FUNCTION_4();
    return;
  }
LABEL_80:
  __break(1u);
}

uint64_t sub_1AFDAC028()
{
  return sub_1AFDAACA4() & 1;
}

void sub_1AFDAC040()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _WORD v20[8];
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37[9];

  v37[0] = 6;
  v32 = 0xD000000000000010;
  v33 = 0x80000001B0051400;
  v34 = 0xD000000000000014;
  v35 = 0x80000001B0051420;
  v36 = 10;
  v28 = 0x80000001B0051400;
  v29 = 0xD000000000000014;
  v30 = 0x80000001B0051420;
  v31 = 10;
  v22 = 0xD000000000000010;
  v23 = 0x80000001B0051400;
  v24 = 0xD000000000000014;
  v25 = 0x80000001B0051420;
  v26 = 6;
  v27 = 0xD000000000000010;
  strcpy((char *)v20, "Wispy_Single");
  HIBYTE(v20[6]) = 0;
  v20[7] = -5120;
  v21 = 6;
  sub_1AFDAC810();
  sub_1AFDAC810();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V5.2S, #3.25
    FMOV            V4.2S, #13.0
  }
  *((_QWORD *)&v19 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v19 = 0x4248000044BB8000;
  DWORD2(v17) = 1116471296;
  *(_QWORD *)&v17 = 0x43FA000040400000;
  *(_QWORD *)&v15 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v15 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v13 + 1) = 0x3EA3D70A3E19999ALL;
  *(_QWORD *)&v13 = 0x4396000041880000;
  LODWORD(v11) = 1093310165;
  DWORD2(v10) = 1128792064;
  *(_QWORD *)&v10 = 0x41A0000041727059;
  LODWORD(v9) = 1153138688;
  LODWORD(v7) = 1140457472;
  sub_1AFB471E4((uint64_t)v37, 48, 0, 2000, 133, 10, 1, 12, 0, 0x42400000C20C0000, 0x428C000040400000, v7, 0x3E8000003DF5C28FLL, v8, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v9,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4118000000000000,
    v10,
    0x3EAE147B3DE147AELL,
    1091529988,
    v11,
    v12,
    xmmword_1B0025CC0,
    _Q0,
    v13,
    1091005916,
    v14,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v15,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v16,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v17,
    1039516303,
    1048576000,
    v18,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v19,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFDAC810()
{
  uint64_t v0;
  __int128 v6;
  __n128 v7;
  __int128 v8;
  __int128 v9;
  double v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  float v21;
  __int128 v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  __n128 v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  double v42;
  __n128 v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  double v50;
  __n128 v51;
  __n128 v52;
  double v53;
  double v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  double v58;
  double v59;
  double v60;
  __n128 v61;
  __n128 v62;
  __int128 v63;
  __n128 v64;
  double v65;
  __n128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  double v70;
  uint64_t v71;
  _OWORD *v72;
  unsigned int v73;
  __n128 *v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  double v85;
  __n128 v86;
  float v87;
  float v88;
  float v89;
  float v90;
  double v91;
  __n128 v92;
  double v93;
  __n128 v94;
  __int128 v95;
  __n128 v96;
  __int128 v97;
  __int128 v98;
  double v99;
  double v100;
  uint64_t v101;
  __n128 *v102;
  uint64_t v103;
  float v104;
  uint64_t v105;
  float v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _OWORD *v113;
  uint64_t v114;
  double v115;
  __n128 v116;
  float v117;
  float v118;
  float v119;
  double v120;
  __n128 v121;
  __n128 v122;
  __n128 v123;
  double v124;
  __n128 v125;
  __int128 v126;
  double v127;
  double v128;
  __n128 v129;
  double v130;
  __n128 v131;
  __int128 v132;
  __n128 v133;
  __int128 v134;
  __n128 *v135;
  uint64_t v136;
  float v137;
  uint64_t v138;
  float v139;
  double v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  uint64_t v148;
  __n128 v149;
  float v150;
  float v151;
  __n128 v152;
  __int128 v153;
  __int128 v154;
  double v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  uint64_t v163;
  float v164;
  float v165;
  _OWORD *v166;
  _OWORD *v167;
  _OWORD *v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  uint64_t v173;
  double v174;
  float v175;
  float v176;
  float v177;
  __n128 v178;
  double v179;
  __n128 v180;
  double v181;
  double v182;
  double v183;
  __n128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  double v188;
  double v189;
  __n128 v190;
  __int128 v191;
  __n128 v192;
  __int128 v193;
  __int128 v194;
  double v195;
  double v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  uint64_t v204;
  double v205;
  float v206;
  double v207;
  double v208;
  __n128 v209;
  __n128 v210;
  double v211;
  double v212;
  double v213;
  __int128 v214;
  __n128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  double v220;
  __n128 v221;
  __int128 v222;
  __n128 v223;
  __int128 v224;
  double v225;
  __n128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  double v230;
  double v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  uint64_t v239;
  double v240;
  __n128 v241;
  float v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __n128 v248;
  __int128 v249;
  __int128 v250;
  __n128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  uint64_t v262;
  double v263;
  __n128 v264;
  float v265;
  float v266;
  float v267;
  float v268;
  float v269;
  uint64_t v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  _OWORD *v409;
  _OWORD *v410;
  _OWORD *v411;
  _OWORD *v412;
  _OWORD *v413;
  _OWORD *v414;
  _OWORD *v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  __n128 v430;
  __n128 v431;
  __n128 v432;
  float v433;
  float v434;
  __n128 v435;
  __int128 v436;
  __int128 v437;
  __n128 v438;
  __n128 v439;
  __n128 v440;
  __n128 v441;
  __n128 v442;
  __n128 v443;
  __n128 v444;
  __int128 v445;
  __n128 v446;
  __int128 v447;
  __n128 v448;
  __int128 v449;
  __n128 v450;
  __int128 v451;
  __n128 v452;
  __int128 v453;
  __n128 v454;
  __int128 v455;
  __n128 v456;
  __n128 v457;
  __n128 v458;
  __n128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __n128 v464;
  __int128 v465;
  __n128 v466;
  __n128 v467;
  __n128 v468;
  __int128 v469;
  __n128 v470;
  __int128 v471;
  __n128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __n128 v476;
  __int128 v477;
  __n128 v478;
  __int128 v479;
  __n128 v480;
  __int128 v481;
  __n128 v482;
  __int128 v483;
  __n128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __n128 v498;
  __int128 v499;
  __n128 v500;
  __n128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v506 = xmmword_1B002B2B0;
  v507 = xmmword_1B00276B0;
  v504 = xmmword_1B002B2C0;
  v505 = xmmword_1B0026AB0;
  v502 = xmmword_1B002B2D0;
  v503 = xmmword_1B002B2E0;
  __asm { FMOV            V4.2D, #1.0 }
  v435 = _Q4;
  v500 = _Q4;
  v501 = _Q4;
  v498 = _Q4;
  v499 = xmmword_1B0025E50;
  v496 = xmmword_1B002B2F0;
  v497 = xmmword_1B002B300;
  v494 = xmmword_1B002B310;
  v495 = xmmword_1B0029080;
  v492 = xmmword_1B002B320;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B330;
  v491 = xmmword_1B0027730;
  v488 = (__int128)_Q4;
  v489 = (__int128)_Q4;
  v487 = 0u;
  v486 = 0u;
  v484 = _Q4;
  v485 = xmmword_1B0027030;
  v482 = _Q4;
  v483 = xmmword_1B0025E90;
  v480 = _Q4;
  v481 = xmmword_1B0027730;
  v478 = _Q4;
  v479 = xmmword_1B0025E90;
  v476 = _Q4;
  v477 = xmmword_1B0025E50;
  v474 = (__int128)_Q4;
  v475 = xmmword_1B0025E90;
  v472 = _Q4;
  v473 = xmmword_1B0026140;
  v470 = _Q4;
  v471 = xmmword_1B0025E90;
  v468 = _Q4;
  v469 = xmmword_1B0027740;
  v466 = _Q4;
  v467 = _Q4;
  v464 = _Q4;
  v465 = xmmword_1B0027770;
  v462 = xmmword_1B0027FE0;
  v463 = xmmword_1B0025E90;
  v460 = xmmword_1B0028000;
  v461 = xmmword_1B002B340;
  OUTLINED_FUNCTION_6_91(0.799999952, 1.0, 1.0, 1.0, _Q4);
  v436 = v6;
  v455 = v6;
  v452 = v7;
  v437 = v8;
  v453 = v8;
  v450 = v7;
  v451 = xmmword_1B00277B0;
  v448 = v7;
  v449 = v9;
  v446 = v7;
  v447 = v6;
  v444 = v7;
  v445 = v8;
  OUTLINED_FUNCTION_5_98(1.0, v10, *(double *)&v6, *(double *)&v8, v7);
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_15_2(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, 200.0, v21, 0.1, 0.4, 0.8, 0.8, &v492, &v490, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v488,
    0,
    &v486,
    &v484,
    &v482,
    &v480,
    &v478,
    &v476,
    &v474,
    &v472,
    &v470,
    &v468,
    &v466,
    &v464,
    &v462,
    &v460,
    &v458,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    1112014848,
    1097859072,
    &v440,
    (uint64_t)&v438);
  OUTLINED_FUNCTION_10_64();
  v504 = xmmword_1B002B350;
  v505 = xmmword_1B0026A00;
  v502 = xmmword_1B002B360;
  v503 = xmmword_1B002B370;
  v500 = v435;
  v501 = v435;
  v498 = v435;
  v499 = v436;
  OUTLINED_FUNCTION_7_88();
  OUTLINED_FUNCTION_20_47((__n128)xmmword_1B002B380);
  v492 = xmmword_1B002B390;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B330;
  v491 = xmmword_1B0028260;
  v488 = v22;
  v489 = v22;
  OUTLINED_FUNCTION_24_56();
  v484 = v23;
  v485 = v437;
  v482 = v23;
  v483 = xmmword_1B0025E90;
  v480 = v23;
  v481 = xmmword_1B0027730;
  v478 = v23;
  v479 = xmmword_1B0025E90;
  v476 = v23;
  v477 = v24;
  v474 = xmmword_1B0027FE0;
  v475 = xmmword_1B0025E90;
  v472 = v23;
  v473 = xmmword_1B0026140;
  v470 = v23;
  v471 = xmmword_1B0025E90;
  v468 = v23;
  v469 = v25;
  v466 = v23;
  v467 = v23;
  v464 = v23;
  v465 = xmmword_1B0027770;
  v462 = xmmword_1B0027FE0;
  v463 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_11_84();
  v458 = v26;
  v459 = v26;
  v456 = v26;
  v457 = v26;
  v454 = v26;
  v455 = v27;
  v452 = v26;
  v453 = v28;
  v450 = v26;
  OUTLINED_FUNCTION_27_55();
  v448 = v29;
  v449 = v30;
  v446 = v29;
  v447 = v31;
  v444 = v29;
  v445 = v32;
  v442 = v29;
  v443 = v29;
  v440 = v29;
  v441 = v29;
  v438 = v29;
  v439 = v29;
  OUTLINED_FUNCTION_3_2();
  v291 = v33;
  OUTLINED_FUNCTION_15_18();
  OUTLINED_FUNCTION_27_36();
  OUTLINED_FUNCTION_15_2(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, &v492, &v490, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v488,
    0,
    &v486,
    &v484,
    v291,
    v300,
    v309,
    v318,
    v327,
    v336,
    v345,
    v354,
    v363,
    v372,
    v381,
    v390,
    v399,
    v408,
    v412,
    v414,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    1112014848,
    1097859072,
    &v440,
    (uint64_t)&v438);
  v506 = xmmword_1B002B3A0;
  v507 = xmmword_1B002B3B0;
  v504 = xmmword_1B002B3C0;
  v505 = xmmword_1B002B3D0;
  v502 = xmmword_1B002B3E0;
  v503 = xmmword_1B0026110;
  OUTLINED_FUNCTION_26_52(0.278431267, 0.403921604, v50, v435);
  v499 = v436;
  v496 = (__int128)v51;
  v497 = (__int128)v51;
  v494 = xmmword_1B002B3F0;
  v495 = xmmword_1B002B400;
  v492 = xmmword_1B002B410;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B420;
  v491 = xmmword_1B002B430;
  v488 = (__int128)v51;
  v489 = (__int128)v51;
  OUTLINED_FUNCTION_12_88(0.694117665, 1.0, 1.0, v51);
  v485 = v437;
  v482 = v52;
  OUTLINED_FUNCTION_23_62((__n128)xmmword_1B002B440, v53, v54, v52);
  v479 = xmmword_1B0025E90;
  v476 = (__n128)v55;
  v477 = v56;
  v474 = v55;
  v475 = xmmword_1B002B450;
  v472 = (__n128)v55;
  v473 = xmmword_1B0026140;
  v470 = (__n128)v55;
  v471 = xmmword_1B002B460;
  v468 = (__n128)v55;
  v469 = v57;
  v466 = (__n128)v55;
  v467 = (__n128)v55;
  v464 = (__n128)v55;
  v465 = xmmword_1B0027770;
  v462 = xmmword_1B0027FE0;
  v463 = xmmword_1B0025E90;
  *(_QWORD *)&v58 = OUTLINED_FUNCTION_11_84().n128_u64[0];
  OUTLINED_FUNCTION_8_92(v58, v59, v60, v61, v62);
  v453 = v63;
  v450 = v64;
  *(_QWORD *)&v65 = OUTLINED_FUNCTION_27_55().n128_u64[0];
  v448 = v66;
  v449 = v67;
  v446 = v66;
  v447 = v68;
  v444 = v66;
  v445 = v69;
  OUTLINED_FUNCTION_14_86(v65, v70, *(double *)&v67, v66);
  v428 = v71;
  OUTLINED_FUNCTION_3_2();
  v292 = v72;
  OUTLINED_FUNCTION_19_4();
  v271 = v73 | 0x3F4CCCCD00000000;
  v432 = v74[163];
  v433 = *(float *)(v75 + 2228);
  v434 = *(float *)(v76 + 1392);
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_15_2(v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, 0.4, 0.8, v90, &v492, &v490, v271,
    1061997773,
    &v488,
    0,
    &v486,
    &v484,
    v292,
    v301,
    v310,
    v319,
    v328,
    v337,
    v346,
    v355,
    v364,
    v373,
    v382,
    v391,
    v400,
    v409,
    v413,
    v415,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    1112014848,
    1097859072,
    &v440,
    v428);
  v506 = xmmword_1B002B470;
  v507 = (__int128)v435;
  v504 = xmmword_1B002B480;
  v505 = xmmword_1B002B490;
  v502 = (__int128)v435;
  v503 = (__int128)v435;
  OUTLINED_FUNCTION_26_52(0.53725493, 0.698039234, v91, v435);
  v499 = v436;
  v496 = (__int128)v92;
  v497 = (__int128)v92;
  v494 = xmmword_1B002B4A0;
  v495 = xmmword_1B002B4B0;
  v492 = xmmword_1B002B4C0;
  v493 = xmmword_1B00277A0;
  v490 = xmmword_1B002B420;
  v491 = xmmword_1B002B4D0;
  v488 = xmmword_1B0026320;
  v489 = xmmword_1B0027440;
  OUTLINED_FUNCTION_12_88(0.970078886, 0.97049278, v93, v92);
  v485 = v437;
  v482 = v94;
  v483 = xmmword_1B002B4E0;
  v480 = v94;
  v481 = xmmword_1B002B4F0;
  v478 = v94;
  v479 = xmmword_1B0025E90;
  v476 = v94;
  v477 = v95;
  v474 = (__int128)v94;
  v475 = xmmword_1B0026230;
  v472 = v94;
  v473 = xmmword_1B0027890;
  v470 = v94;
  v471 = xmmword_1B00277B0;
  v468 = v94;
  v469 = xmmword_1B0026230;
  OUTLINED_FUNCTION_9_91(1.0, (__n128)xmmword_1B0025E90, 1.0, v94);
  v460 = (__int128)v96;
  v461 = xmmword_1B002B500;
  v458 = v96;
  v459 = v96;
  v456 = v96;
  v457 = v96;
  v454 = v96;
  v455 = v97;
  v452 = v96;
  v453 = v98;
  v450 = v96;
  v451 = xmmword_1B0028150;
  v448 = v96;
  v449 = xmmword_1B0026140;
  v446 = v96;
  v447 = v97;
  v444 = v96;
  v445 = v98;
  OUTLINED_FUNCTION_14_86(1.0, v99, v100, v96);
  v429 = v101;
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_23_18();
  v431 = v102[32];
  v104 = *(float *)(v103 + 3240);
  v106 = *(float *)(v105 + 2616);
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_15_2(v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, 700.0, v117, v104, v118, v106, v119, &v492, &v490, 0x3F6666663EE66666,
    0,
    &v488,
    v272,
    v277,
    v284,
    v293,
    v302,
    v311,
    v320,
    v329,
    v338,
    v347,
    v356,
    v365,
    v374,
    v383,
    v392,
    v401,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    1112014848,
    1097859072,
    &v440,
    v429);
  v506 = xmmword_1B002B510;
  v507 = (__int128)v435;
  OUTLINED_FUNCTION_29_11();
  v502 = xmmword_1B0028220;
  v503 = xmmword_1B0028230;
  OUTLINED_FUNCTION_26_52(0.999904573, 0.99988085, v120, v121);
  v499 = v436;
  v496 = xmmword_1B002B520;
  v497 = xmmword_1B0028260;
  v494 = xmmword_1B002B530;
  v495 = xmmword_1B0026400;
  v492 = xmmword_1B002B540;
  v493 = xmmword_1B00277A0;
  v490 = xmmword_1B002B420;
  v491 = xmmword_1B002B550;
  v488 = xmmword_1B0027D70;
  v489 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_12_88(1.0, *(double *)&v436, 0.9627316, v122);
  v485 = v437;
  v482 = v123;
  OUTLINED_FUNCTION_23_62((__n128)xmmword_1B0028150, v124, *(double *)&v437, v123);
  v479 = xmmword_1B0025E90;
  v476 = v125;
  v477 = v126;
  v474 = (__int128)v125;
  v475 = (__int128)v125;
  v472 = v125;
  v473 = (__int128)v125;
  v470 = v125;
  v471 = xmmword_1B0025E90;
  v468 = v125;
  v469 = xmmword_1B002B560;
  *(_QWORD *)&v128 = OUTLINED_FUNCTION_9_91(1.0, (__n128)xmmword_1B0025E90, v127, v125).n128_u64[0];
  v460 = (__int128)v129;
  v461 = xmmword_1B002B500;
  OUTLINED_FUNCTION_8_92(v128, 1.0, v130, v129, v131);
  v453 = v132;
  v450 = v133;
  v451 = xmmword_1B00278C0;
  v448 = v133;
  v449 = xmmword_1B0026140;
  v446 = v133;
  v447 = v134;
  v444 = v133;
  v445 = v132;
  v442 = v133;
  v443 = v133;
  v440 = v133;
  v441 = v133;
  v438 = v133;
  v439 = v133;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_19_4();
  v430 = v135[223];
  v137 = *(float *)(v136 + 1396);
  v139 = *(float *)(v138 + 2612);
  v140 = OUTLINED_FUNCTION_14_59();
  OUTLINED_FUNCTION_15_2(v141, v142, v143, v144, v145, v146, v147, v148, v140, v149, v137, v150, 0.8, v151, v106, v139, &v492, &v490, 0x3F6666663F06D628,
    0,
    &v488,
    v273,
    v278,
    v285,
    v294,
    v303,
    v312,
    v321,
    v330,
    v339,
    v348,
    v357,
    v366,
    v375,
    v384,
    v393,
    v402,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v416,
    v422,
    &v440,
    (uint64_t)&v438);
  v506 = xmmword_1B002B510;
  v507 = (__int128)v435;
  OUTLINED_FUNCTION_29_11();
  v502 = xmmword_1B0028220;
  v503 = xmmword_1B0028230;
  v500 = v152;
  v501 = v152;
  v498 = v152;
  v499 = v436;
  v496 = xmmword_1B002B520;
  v497 = xmmword_1B0028260;
  v494 = xmmword_1B002B530;
  v495 = xmmword_1B0026400;
  v492 = xmmword_1B002B540;
  v493 = xmmword_1B00277A0;
  v490 = xmmword_1B002B420;
  v491 = xmmword_1B002B550;
  v488 = xmmword_1B0027D70;
  v489 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_24_56();
  v484 = (__n128)v153;
  v485 = v437;
  v482 = (__n128)v153;
  v483 = xmmword_1B0028150;
  v480 = (__n128)v153;
  v481 = xmmword_1B0027730;
  v478 = (__n128)v153;
  v479 = xmmword_1B0025E90;
  v476 = (__n128)v153;
  v477 = v154;
  v474 = v153;
  v475 = v153;
  v472 = (__n128)v153;
  v473 = v153;
  v470 = (__n128)v153;
  v471 = xmmword_1B0025E90;
  v468 = (__n128)v153;
  v469 = xmmword_1B002B560;
  v466 = (__n128)v153;
  v467 = (__n128)v153;
  v464 = (__n128)v153;
  v465 = xmmword_1B0027770;
  v462 = v153;
  v463 = xmmword_1B0025E90;
  v460 = v153;
  v461 = xmmword_1B002B500;
  v458 = (__n128)v153;
  v459 = (__n128)v153;
  v456 = (__n128)v153;
  v457 = (__n128)v153;
  v454 = (__n128)v153;
  v455 = v154;
  v452 = (__n128)v153;
  v453 = v437;
  v450 = (__n128)v153;
  v451 = xmmword_1B00278C0;
  v448 = (__n128)v153;
  v449 = xmmword_1B0026140;
  v446 = (__n128)v153;
  v447 = v154;
  v444 = (__n128)v153;
  v445 = v437;
  v442 = (__n128)v153;
  v443 = (__n128)v153;
  v440 = (__n128)v153;
  v441 = (__n128)v153;
  v438 = (__n128)v153;
  v439 = (__n128)v153;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_73();
  v155 = OUTLINED_FUNCTION_14_59();
  OUTLINED_FUNCTION_29(v156, v157, v158, v159, v160, v161, v162, v163, v155, v430, v137, v164, 0.8, v165, v106, v139, &v492, &v490, 0x3F6666663F06D628,
    0,
    &v488,
    0,
    v279,
    v286,
    v295,
    v304,
    v313,
    v322,
    v331,
    v340,
    v349,
    v358,
    v367,
    v376,
    v385,
    v394,
    v403,
    v410,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v417,
    v423,
    &v440,
    (uint64_t)&v438);
  v506 = xmmword_1B002B470;
  v507 = (__int128)v435;
  v503 = (__int128)v435;
  v504 = xmmword_1B002B480;
  v505 = xmmword_1B002B490;
  v502 = (__int128)v435;
  v500 = v435;
  v501 = v435;
  v498 = v435;
  v499 = v436;
  v496 = (__int128)v435;
  v497 = (__int128)v435;
  v494 = xmmword_1B002B4A0;
  v495 = xmmword_1B002B4B0;
  v492 = xmmword_1B002B4C0;
  v493 = xmmword_1B00277A0;
  v490 = xmmword_1B002B420;
  v491 = xmmword_1B002B4D0;
  v488 = xmmword_1B0026320;
  v489 = xmmword_1B0027440;
  v487 = 0u;
  v486 = 0u;
  v484 = v435;
  v485 = v437;
  v482 = v435;
  v483 = xmmword_1B002B4E0;
  v480 = v435;
  v481 = xmmword_1B002B4F0;
  v478 = v435;
  v479 = xmmword_1B0025E90;
  v476 = v435;
  v477 = v436;
  v474 = (__int128)v435;
  v475 = xmmword_1B0026230;
  v472 = v435;
  v473 = xmmword_1B0027890;
  v470 = v435;
  v471 = xmmword_1B00277B0;
  v468 = v435;
  v469 = xmmword_1B0026230;
  v466 = v435;
  v467 = v435;
  v464 = v435;
  v465 = xmmword_1B0027770;
  v462 = (__int128)v435;
  v463 = xmmword_1B0025E90;
  v460 = (__int128)v435;
  v461 = xmmword_1B002B500;
  v458 = v435;
  v459 = v435;
  v456 = v435;
  v457 = v435;
  v454 = v435;
  v455 = v436;
  v452 = v435;
  v453 = v437;
  v450 = v435;
  v451 = xmmword_1B0028150;
  v448 = v435;
  v449 = xmmword_1B0026140;
  v446 = v435;
  v447 = v436;
  v444 = v435;
  v445 = v437;
  v442 = v435;
  v443 = v435;
  v440 = v435;
  v441 = v435;
  v438 = v435;
  v439 = v435;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_29(v166, v167, v168, v169, v170, v171, v172, v173, v174, v431, 700.0, v175, v104, v176, v106, v177, &v492, &v490, 0x3F6666663EE66666,
    0,
    &v488,
    v274,
    v280,
    v287,
    v296,
    v305,
    v314,
    v323,
    v332,
    v341,
    v350,
    v359,
    v368,
    v377,
    v386,
    v395,
    v404,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v418,
    v424,
    &v440,
    (uint64_t)&v438);
  v506 = xmmword_1B002B3A0;
  v507 = xmmword_1B002B3B0;
  v504 = xmmword_1B002B3C0;
  v505 = xmmword_1B002B3D0;
  v502 = xmmword_1B002B3E0;
  OUTLINED_FUNCTION_25_52((__n128)xmmword_1B0026110);
  v499 = v436;
  v496 = (__int128)v178;
  v497 = (__int128)v178;
  v494 = xmmword_1B002B3F0;
  v495 = xmmword_1B002B400;
  v492 = xmmword_1B002B410;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B420;
  OUTLINED_FUNCTION_13_89(*(double *)&v436, (__n128)xmmword_1B002B430, 1.0, v179, v178);
  v485 = v437;
  v482 = v180;
  v483 = xmmword_1B002B440;
  OUTLINED_FUNCTION_29_57(v181, 1.0, v182, v183, v180);
  v479 = xmmword_1B0025E90;
  v476 = v184;
  v477 = v185;
  v474 = (__int128)v184;
  v475 = xmmword_1B002B450;
  v472 = v184;
  v473 = xmmword_1B0026140;
  v470 = v184;
  v471 = xmmword_1B002B460;
  v468 = v184;
  v469 = v186;
  OUTLINED_FUNCTION_22_57(1.0, 1.0, *(double *)&v186, 1.0, v184);
  v462 = xmmword_1B0027FE0;
  v463 = v187;
  v460 = xmmword_1B0028000;
  v461 = xmmword_1B002B340;
  OUTLINED_FUNCTION_6_91(1.0, *(double *)&v187, v188, v189, v190);
  v455 = v191;
  v452 = v192;
  v453 = v193;
  v450 = v192;
  v451 = xmmword_1B00277B0;
  v448 = v192;
  v449 = v194;
  v446 = v192;
  v447 = v191;
  v444 = v192;
  v445 = v193;
  OUTLINED_FUNCTION_5_98(v195, 1.0, v196, *(double *)&v194, v192);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_29(v197, v198, v199, v200, v201, v202, v203, v204, v205, v432, 250.0, v206, v433, 0.4, 0.8, v434, &v492, &v490, 0x3F4CCCCD3ED112DDLL,
    1061997773,
    &v488,
    v275,
    v281,
    v288,
    v297,
    v306,
    v315,
    v324,
    v333,
    v342,
    v351,
    v360,
    v369,
    v378,
    v387,
    v396,
    v405,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v419,
    v425,
    &v440,
    (uint64_t)&v438);
  OUTLINED_FUNCTION_10_64();
  v504 = xmmword_1B002B350;
  v505 = xmmword_1B0026A00;
  v502 = xmmword_1B002B360;
  OUTLINED_FUNCTION_25_52((__n128)xmmword_1B002B370);
  v499 = v436;
  OUTLINED_FUNCTION_7_88();
  OUTLINED_FUNCTION_20_47((__n128)xmmword_1B002B380);
  v492 = xmmword_1B002B390;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B330;
  OUTLINED_FUNCTION_13_89(1.0, (__n128)xmmword_1B0028260, v207, v208, v209);
  v485 = v437;
  v482 = v210;
  v483 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_29_57(v211, v212, 1.0, v213, v210);
  v479 = v214;
  v476 = v215;
  v477 = v216;
  v474 = xmmword_1B0027FE0;
  v475 = v214;
  v472 = v215;
  v473 = xmmword_1B0026140;
  v470 = v215;
  v471 = v214;
  v468 = v215;
  v469 = v217;
  OUTLINED_FUNCTION_22_57(*(double *)&v217, 1.0, *(double *)&v214, 0.899999976, v215);
  v462 = v218;
  v463 = v219;
  v460 = xmmword_1B0028000;
  v461 = xmmword_1B002B340;
  OUTLINED_FUNCTION_6_91(1.0, v220, *(double *)&v219, *(double *)&v218, v221);
  v455 = v222;
  v452 = v223;
  v453 = v224;
  v450 = v223;
  *(_QWORD *)&v225 = OUTLINED_FUNCTION_27_55().n128_u64[0];
  v448 = v226;
  v449 = v227;
  v446 = v226;
  v447 = v228;
  v444 = v226;
  v445 = v229;
  OUTLINED_FUNCTION_5_98(v225, *(double *)&v227, v230, v231, v226);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_72();
  OUTLINED_FUNCTION_15_18();
  OUTLINED_FUNCTION_29(v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, 200.0, v242, 0.1, 0.4, 0.8, 0.85, &v492, &v490, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v488,
    v276,
    v282,
    v289,
    v298,
    v307,
    v316,
    v325,
    v334,
    v343,
    v352,
    v361,
    v370,
    v379,
    v388,
    v397,
    v406,
    &v456,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v420,
    v426,
    &v440,
    (uint64_t)&v438);
  OUTLINED_FUNCTION_10_64();
  v504 = xmmword_1B002B2C0;
  v505 = xmmword_1B0026AB0;
  v502 = xmmword_1B002B2D0;
  v503 = xmmword_1B002B2E0;
  v500 = v435;
  v501 = v435;
  v498 = v435;
  v499 = v436;
  OUTLINED_FUNCTION_7_88();
  OUTLINED_FUNCTION_20_47((__n128)xmmword_1B002B310);
  v492 = xmmword_1B002B320;
  v493 = xmmword_1B0027740;
  v490 = xmmword_1B002B330;
  v491 = xmmword_1B0027730;
  v488 = v243;
  v489 = v243;
  OUTLINED_FUNCTION_24_56();
  v484 = (__n128)v244;
  v485 = v437;
  v482 = (__n128)v244;
  v483 = xmmword_1B0025E90;
  v480 = (__n128)v244;
  v481 = v245;
  v478 = (__n128)v244;
  v479 = xmmword_1B0025E90;
  v476 = (__n128)v244;
  v477 = v246;
  v474 = v244;
  v475 = xmmword_1B0025E90;
  v472 = (__n128)v244;
  v473 = xmmword_1B0026140;
  v470 = (__n128)v244;
  v471 = xmmword_1B0025E90;
  v468 = (__n128)v244;
  v469 = v247;
  v466 = (__n128)v244;
  v467 = (__n128)v244;
  v464 = (__n128)v244;
  v465 = xmmword_1B0027770;
  v462 = xmmword_1B0027FE0;
  v463 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_11_84();
  v458 = v248;
  v459 = v248;
  v456 = v248;
  v457 = v248;
  v454 = v248;
  v455 = v249;
  v452 = v248;
  v453 = v250;
  v450 = v248;
  OUTLINED_FUNCTION_27_55();
  v448 = v251;
  v449 = v252;
  v446 = v251;
  v447 = v253;
  v444 = v251;
  v445 = v254;
  v442 = v251;
  v443 = v251;
  v440 = v251;
  v441 = v251;
  v438 = v251;
  v439 = v251;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_2_73();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_27_36();
  OUTLINED_FUNCTION_29(v255, v256, v257, v258, v259, v260, v261, v262, v263, v264, v265, v266, v267, v268, v269, 0.8, &v492, &v490, 0x3F4CCCCD3F4CCCCDLL,
    1065353216,
    &v488,
    0,
    v283,
    v290,
    v299,
    v308,
    v317,
    v326,
    v335,
    v344,
    v353,
    v362,
    v371,
    v380,
    v389,
    v398,
    v407,
    v411,
    &v454,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    v421,
    v427,
    &v440,
    (uint64_t)&v438);
  return v0;
}

void sub_1AFDADE94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(_BYTE *, uint64_t);
  void (*v36)(_BYTE *, _QWORD);
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, _QWORD);
  void (*v58)(_BYTE *, uint64_t);
  _BYTE v59[16];
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  void (*v70)(_BYTE *, uint64_t, uint64_t, __n128);
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[40];
  _BYTE *v84;

  v63 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2780);
  MEMORY[0x1E0C80A78](v3);
  v62 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4128);
  MEMORY[0x1E0C80A78](v61);
  v60 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE038);
  MEMORY[0x1E0C80A78](v6);
  v69 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = sub_1B00052C0();
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v67 = &v59[-v10];
  v76 = sub_1B00053F8();
  v82 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v84 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = sub_1B0005404();
  v12 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v80 = &v59[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v79 = &v59[-v15];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4170);
  MEMORY[0x1E0C80A78](v16);
  v78 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1B0005410();
  v19 = (void (*)(uint64_t))MEMORY[0x1E0CAF160];
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v22 = &v59[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4198);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = &v59[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v72 = v20;
  v70 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v20 + 16);
  v70(v22, a1, v18, v24);
  sub_1AFADA43C(&qword_1ED1EC780, v19);
  v71 = v22;
  v74 = v18;
  sub_1B00086F8();
  v27 = *(int *)(v23 + 36);
  v77 = v26;
  v28 = &v26[v27];
  v81 = v12;
  v73 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v64 = *MEMORY[0x1E0CAECE8];
  while (1)
  {
    v29 = v79;
    v30 = v75;
    v73(v79, v28, v75);
    sub_1AFADA43C(&qword_1ED1F4180, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
    v31 = v80;
    v32 = (uint64_t)v77;
    v33 = v74;
    sub_1B00088E4();
    sub_1AFADA43C(&qword_1ED1F4178, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v34 = sub_1B0008530();
    v35 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
    v35(v31, v30);
    v35(v29, v30);
    if ((v34 & 1) != 0)
      break;
    v36 = (void (*)(_BYTE *, _QWORD))sub_1B00088FC();
    v37 = v82;
    v38 = v78;
    v39 = v33;
    v40 = v76;
    (*(void (**)(_BYTE *))(v82 + 16))(v78);
    v36(v83, 0);
    v41 = v71;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v70)(v71, v32, v39);
    v42 = v28;
    sub_1B00088F0();
    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v41, v39);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40) == 1)
      goto LABEL_11;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32))(v84, v38, v40);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(_QWORD *)&v59[-16] = v44;
    swift_getKeyPath();
    sub_1AFDAEE4C();
    v45 = (uint64_t)v69;
    sub_1B00053D4();
    swift_release();
    v46 = v68;
    if (__swift_getEnumTagSinglePayload(v45, 1, v68) == 1)
    {
      sub_1AFACB308(v45, &qword_1ED1EE038);
    }
    else
    {
      v47 = v65;
      v48 = v67;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v65 + 32))(v67, v45, v46);
      v49 = v66;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v66, v48, v46);
      v50 = (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 88))(v49, v46);
      if (v50 == v64)
      {
        v51 = (uint64_t)v60;
        sub_1B00053EC();
        v52 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v52);
        *(_QWORD *)&v59[-16] = v53;
        swift_getKeyPath();
        v54 = (uint64_t)v62;
        sub_1B0007D20();
        v55 = sub_1B0007D2C();
        __swift_storeEnumTagSinglePayload(v54, 0, 1, v55);
        sub_1AFB23DC0(&qword_1ED1F1688, &qword_1ED1F4128);
        v56 = v47;
        v57 = (void (*)(_BYTE *, _QWORD))sub_1B00054A0();
        sub_1AFD2CB04();
        sub_1B0005524();
        v57(v83, 0);
        sub_1AFACB308(v51, &qword_1ED1F4128);
        (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v67, v46);
      }
      else
      {
        v58 = *(void (**)(_BYTE *, uint64_t))(v47 + 8);
        v58(v67, v46);
        v58(v66, v46);
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v84, v40);
    v28 = v42;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v78, 1, 1, v76);
LABEL_11:
  sub_1AFACB308(v32, &qword_1ED1F4198);
}

void __swiftcall PercentFormattedView.init(value:title:)(WeatherUI::PercentFormattedView *__return_ptr retstr, Swift::Double value, Swift::String_optional title)
{
  retstr->value = value;
  retstr->title = title;
  retstr->overrideFormatted.value._countAndFlagsBits = 0;
  retstr->overrideFormatted.value._object = 0;
}

double PercentFormattedView.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PercentFormattedView.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall PercentFormattedView.init(value:title:)(WeatherUI::PercentFormattedView *__return_ptr retstr, Swift::String value, Swift::String_optional title)
{
  retstr->value = 0.0;
  retstr->title = title;
  retstr->overrideFormatted.value = value;
}

double PercentFormattedView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v3 = sub_1B0005470();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B00077B0();
  MEMORY[0x1E0C80A78](v7);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  if (v10)
  {
    sub_1B00077A4();
    sub_1B0007798();
    sub_1B000778C();
    sub_1B0007798();
    *(_QWORD *)&v27 = v8;
    *((_QWORD *)&v27 + 1) = v9;
    *(_QWORD *)&v28 = v10;
    OUTLINED_FUNCTION_0_117();
    sub_1B0007768();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1B0007798();
    sub_1B00077C8();
    if (qword_1ED1F46A8 != -1)
      swift_once();
    swift_beginAccess();
    v11 = (id)qword_1ED1F4470;
    v22 = sub_1B0007D44();
    v23 = v12;
    v24 = v13 & 1;
    v25 = v14;
    v26 = 0;
  }
  else
  {
    *(_QWORD *)&v27 = *v1;
    *((_QWORD *)&v27 + 1) = v9;
    *(_QWORD *)&v28 = 0;
    OUTLINED_FUNCTION_0_117();
    v22 = sub_1B0007D50();
    v23 = v16;
    v24 = v15 & 1;
    v25 = v17;
    v26 = 1;
  }
  sub_1B0007918();
  result = *(double *)&v27;
  v19 = v28;
  v20 = v29;
  *(_OWORD *)a1 = v27;
  *(_OWORD *)(a1 + 16) = v19;
  *(_BYTE *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1AFDAE858@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v27 = a1;
  v3 = sub_1B0005410();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE050);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B0005A1C();
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4168);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B0005470();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B00054E8();
  MEMORY[0x1E0C80A78](v16);
  if (v2[4])
  {
    swift_bridgeObjectRetain();
    sub_1B00054DC();
    return sub_1B000547C();
  }
  else
  {
    v28 = *v2;
    sub_1B000595C();
    sub_1AFAF0DA8();
    sub_1B00055F0();
    sub_1B00055E4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1AFB23DC0(&qword_1ED1EE048, &qword_1ED1EE050);
    v18 = v23;
    sub_1B0008458();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v18);
    v19 = (uint64_t)v24;
    sub_1B0005428();
    sub_1AFDADE94(v19, (uint64_t)v15);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v26);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v27, v15, v21);
  }
}

uint64_t sub_1AFDAEB10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D00);
  return sub_1B0008530() & 1;
}

uint64_t sub_1AFDAEB68()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D00);
  return sub_1B00084DC();
}

void sub_1AFDAEBAC()
{
  sub_1AFDAEE4C();
  sub_1B0005560();
  __break(1u);
}

uint64_t sub_1AFDAEBD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PercentFormattedView()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PercentFormattedView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PercentFormattedView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PercentFormattedView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PercentFormattedView(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PercentFormattedView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PercentFormattedView()
{
  return &type metadata for PercentFormattedView;
}

unint64_t sub_1AFDAEDD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1EE2B8;
  if (!qword_1ED1EE2B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1EE2C0);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1EE2B8);
  }
  return result;
}

void sub_1AFDAEE30()
{
  sub_1B00052CC();
  __break(1u);
}

unint64_t sub_1AFDAEE4C()
{
  unint64_t result;

  result = qword_1ED1EE040;
  if (!qword_1ED1EE040)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CAED00], MEMORY[0x1E0CAED10]);
    atomic_store(result, (unint64_t *)&qword_1ED1EE040);
  }
  return result;
}

uint64_t sub_1AFDAEE90()
{
  return swift_release();
}

uint64_t sub_1AFDAEE98(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1AFDAEEAC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1AFDAEEDC()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _WORD v20[8];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _WORD v24[8];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _WORD v28[8];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 3;
  v30 = 0x617274736F746C41;
  v31 = 0xEF53202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0050E80;
  v34 = 6;
  v27 = 0xE500000000000000;
  strcpy((char *)v28, "Wispy_Single");
  HIBYTE(v28[6]) = 0;
  v28[7] = -5120;
  v29 = 6;
  v22 = 0x7970736957;
  v23 = 0xE500000000000000;
  strcpy((char *)v24, "Wispy_Single");
  HIBYTE(v24[6]) = 0;
  v24[7] = -5120;
  v25 = 6;
  v26 = 0x7970736957;
  strcpy((char *)v20, "Wispy_Single");
  HIBYTE(v20[6]) = 0;
  v20[7] = -5120;
  v21 = 6;
  sub_1AFBEB368();
  sub_1AFBEB368();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #5.0
    FMOV            V2.2S, #1.5
  }
  *((_QWORD *)&v19 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v19 = 0x4248000044BB8000;
  DWORD2(v17) = 1116471296;
  *(_QWORD *)&v17 = 0x43FA000040400000;
  *(_QWORD *)&v15 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v15 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v13 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v13 = 0x4348000040C00000;
  LODWORD(v11) = 1101004800;
  DWORD2(v10) = 1132068864;
  *(_QWORD *)&v10 = 0x4140000040A00000;
  LODWORD(v9) = 1153138688;
  LODWORD(v7) = 1140457472;
  sub_1AFB471E4((uint64_t)&v35, 30, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v7, 0x3E8000003DF5C28FLL, v8, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v9,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v10,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v11,
    v12,
    _Q0,
    _Q0,
    v13,
    1084227584,
    v14,
    _Q0,
    _Q0,
    v15,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v16,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1039516303,
    1048576000,
    v18,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v19,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4100000040A00000);
}

void destroy for HourlyForecastView(id *a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for HourlyForecastView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(void **)(a2 + 48);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  return a1;
}

uint64_t assignWithCopy for HourlyForecastView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 40);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 48);
  v20 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 56);
  v23 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v22;
  v24 = v22;

  v25 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v25;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for HourlyForecastView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for HourlyForecastView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HourlyForecastView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastView()
{
  return &type metadata for HourlyForecastView;
}

uint64_t sub_1AFDAF9B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDAF9C4()
{
  const void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _OWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t __dst[14];

  v1 = v0;
  v36 = sub_1B00079D8();
  v35 = *(_QWORD *)(v36 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_9();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D08);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D10);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_9();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D18);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_9();
  v19 = v18 - v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D20);
  v37 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_9();
  v24 = v23 - v22;
  memcpy(__dst, v1, 0x68uLL);
  *(_QWORD *)v9 = sub_1B0007810();
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = 1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D28);
  sub_1AFDAFDA4(__dst, v9 + *(int *)(v25 + 44));
  sub_1AFAF869C(v9, v14, &qword_1EEE73D08);
  v26 = (_QWORD *)(v14 + *(int *)(v10 + 36));
  *v26 = 0xD000000000000012;
  v26[1] = 0x80000001B0038970;
  sub_1AFACE0DC(v9, &qword_1EEE73D08);
  sub_1B00082E4();
  sub_1B0007360();
  sub_1AFAF869C(v14, v19, &qword_1EEE73D10);
  v27 = (_OWORD *)(v19 + *(int *)(v15 + 36));
  *v27 = v38;
  v27[1] = v39;
  v27[2] = v40;
  sub_1AFACE0DC(v14, &qword_1EEE73D10);
  sub_1B00079CC();
  sub_1AFDB22E8((uint64_t)&unk_1EEE73D30);
  sub_1B0007EF4();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v5, v36);
  sub_1AFACE0DC(v19, &qword_1EEE73D18);
  sub_1B00077BC();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v28 = (id)qword_1ED1F4470;
  v29 = sub_1B0007D44();
  v31 = v30;
  v33 = v32 & 1;
  swift_getOpaqueTypeConformance2();
  sub_1B0007E64();
  sub_1AFAED640(v29, v31, v33);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v24, v20);
}

void sub_1AFDAFDA4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D48);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  v10 = a1[12];
  sub_1B00082E4();
  sub_1B0007360();
  v27 = v28;
  v26 = v29;
  v25 = v30;
  v24 = v31;
  v22 = v33;
  v23 = v32;
  sub_1AFC97FCC(v10, *a1);
  swift_bridgeObjectRetain();
  sub_1AFC98104();
  v12 = v11;
  *v9 = sub_1B0007A98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D50);
  sub_1AFDAFFF8(v12, a1);
  swift_bridgeObjectRelease();
  sub_1B00082E4();
  sub_1B0007360();
  v21 = v34;
  v13 = v35;
  v14 = v36;
  v15 = v37;
  v16 = v38;
  v17 = v39;
  sub_1AFAF869C((uint64_t)v9, (uint64_t)v6, &qword_1EEE73D48);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v25;
  *(_BYTE *)(a2 + 40) = v24;
  v18 = v22;
  *(_QWORD *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D58);
  sub_1AFAF869C((uint64_t)v6, a2 + *(int *)(v19 + 48), &qword_1EEE73D48);
  v20 = a2 + *(int *)(v19 + 64);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  *(_QWORD *)(v20 + 16) = v21;
  *(_BYTE *)(v20 + 24) = v13;
  *(_QWORD *)(v20 + 32) = v14;
  *(_BYTE *)(v20 + 40) = v15;
  *(_QWORD *)(v20 + 48) = v16;
  *(_QWORD *)(v20 + 56) = v17;
  sub_1AFACE0DC((uint64_t)v9, &qword_1EEE73D48);
  sub_1AFACE0DC((uint64_t)v6, &qword_1EEE73D48);
}

uint64_t sub_1AFDAFFF8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;

  swift_getKeyPath();
  v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), a2, 0x68uLL);
  *(_QWORD *)(v4 + 120) = a1;
  sub_1AFDB14C8(a2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D68);
  sub_1AFDB1534();
  sub_1AFDB2430((uint64_t)&unk_1EEE73D88);
  return sub_1B0008278();
}

uint64_t sub_1AFDB0108@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AFC97FCC(*a1, a3);
  swift_bridgeObjectRetain();
  sub_1AFC98104();
  v7 = v6;
  *(_QWORD *)a4 = sub_1B0007744();
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D90);
  v8 = swift_allocObject();
  memcpy((void *)(v8 + 16), a2, 0x68uLL);
  *(_QWORD *)(v8 + 120) = v7;
  swift_bridgeObjectRetain();
  sub_1AFDB14C8(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71A18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73D98);
  sub_1AFDB2430((uint64_t)&unk_1EEE73DA0);
  sub_1AFDB2430((uint64_t)&unk_1EEE73DA8);
  sub_1AFBB7034((uint64_t)&unk_1EEE73DB0);
  return sub_1B0008284();
}

void sub_1AFDB0298(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE __dst[96];

  v37 = a3;
  v38 = a4;
  v6 = type metadata accessor for HourlyForecastViewModel.HourModel();
  MEMORY[0x1E0C80A78](v6);
  v34 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73DB8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73DC0);
  MEMORY[0x1E0C80A78](v11);
  v35 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - v17;
  v19 = type metadata accessor for HourlyForecastCell();
  MEMORY[0x1E0C80A78](v19);
  v36 = (uint64_t)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v33 - v22;
  sub_1AFB39910(a1, (uint64_t)&v33 - v22, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
  a2 += 8;
  memcpy(__dst, a2, sizeof(__dst));
  memcpy(&v23[*(int *)(v19 + 20)], a2, 0x60uLL);
  sub_1AFB39910(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v6);
  sub_1AFBDBB60(v37, (uint64_t)v15);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1AFAF869C((uint64_t)v18, (uint64_t)v10, &qword_1EEE73DC0);
  sub_1AFAF869C((uint64_t)v15, v24, &qword_1EEE73DC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6) != 1)
  {
    v25 = v35;
    sub_1AFAF869C((uint64_t)v10, v35, &qword_1EEE73DC0);
    if (__swift_getEnumTagSinglePayload(v24, 1, v6) != 1)
    {
      v26 = v34;
      sub_1AFBA9124(v24, v34);
      sub_1AFDB1688((uint64_t)__dst);
      sub_1AFF59E28(v25, v26);
      v28 = v27;
      sub_1AFAE2D74(v26, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
      sub_1AFACE0DC((uint64_t)v15, &qword_1EEE73DC0);
      sub_1AFACE0DC((uint64_t)v18, &qword_1EEE73DC0);
      sub_1AFAE2D74(v25, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
      sub_1AFACE0DC((uint64_t)v10, &qword_1EEE73DC0);
      if ((v28 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v29 = 0;
      goto LABEL_10;
    }
    sub_1AFDB1688((uint64_t)__dst);
    sub_1AFACE0DC((uint64_t)v15, &qword_1EEE73DC0);
    sub_1AFACE0DC((uint64_t)v18, &qword_1EEE73DC0);
    sub_1AFAE2D74(v25, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastViewModel.HourModel);
LABEL_6:
    sub_1AFACE0DC((uint64_t)v10, &qword_1EEE73DB8);
    goto LABEL_9;
  }
  sub_1AFDB1688((uint64_t)__dst);
  sub_1AFACE0DC((uint64_t)v15, &qword_1EEE73DC0);
  sub_1AFACE0DC((uint64_t)v18, &qword_1EEE73DC0);
  if (__swift_getEnumTagSinglePayload(v24, 1, v6) != 1)
    goto LABEL_6;
  sub_1AFACE0DC((uint64_t)v10, &qword_1EEE73DC0);
LABEL_8:
  v29 = 1;
LABEL_10:
  v30 = v36;
  sub_1AFB39910((uint64_t)v23, v36, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastCell);
  v31 = v38;
  sub_1AFB39910(v30, v38, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastCell);
  v32 = v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73DC8) + 48);
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 0;
  *(_BYTE *)(v32 + 9) = v29;
  sub_1AFAE2D74((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastCell);
  sub_1AFAE2D74(v30, (uint64_t (*)(_QWORD))type metadata accessor for HourlyForecastCell);
}

unint64_t sub_1AFDB06A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE73D38;
  if (!qword_1EEE73D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73D10);
    sub_1AFDB2430((uint64_t)&unk_1EEE73D40);
    v3 = v2;
    sub_1AFDB2430((uint64_t)&qword_1ED1ECDA0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE73D38);
  }
  return result;
}

void sub_1AFDB073C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1B00079D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73E70);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_1B0007810();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73E78);
  sub_1AFDB086C(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  sub_1B00079C0();
  sub_1AFDB2430((uint64_t)&unk_1EEE73E80);
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1AFACE0DC((uint64_t)v7, &qword_1EEE73E70);
}

void sub_1AFDB086C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  id v117;
  uint64_t v118;
  id *v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE v136[24];
  void *v137;
  char v138;
  uint64_t v139;
  char v140;
  __int128 v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  __int128 v146;

  v118 = a2;
  v120 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73E88);
  MEMORY[0x1E0C80A78](v120);
  v125 = (uint64_t)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72088);
  MEMORY[0x1E0C80A78](v4);
  v109 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73E90);
  MEMORY[0x1E0C80A78](v117);
  v110 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73E98);
  MEMORY[0x1E0C80A78](v7);
  v122 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v124 = (uint64_t)&v109 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE6D0);
  MEMORY[0x1E0C80A78](v11);
  v121 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v116 = (char *)&v109 - v14;
  MEMORY[0x1E0C80A78](v15);
  v123 = (uint64_t)&v109 - v16;
  v114 = type metadata accessor for HourlyForecastViewModel.HourModel();
  v17 = (uint64_t *)(a1 + *(int *)(v114 + 32));
  v18 = *v17;
  v19 = v17[1];
  if (qword_1ED1F1698 != -1)
    swift_once();
  NSDateFormatter.periodSymbols.getter();
  v20 = (id *)(a1 + *(int *)(type metadata accessor for HourlyForecastCell() + 20));
  v111 = *v20;
  sub_1B0007C6C();
  TimeStyle.formatTime(_:periodSymbols:font:)();
  v22 = v21;
  v24 = v23;
  v115 = v19;
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_release();
  v112 = v18;
  v27 = v26 & 1;
  v113 = a1;
  v28 = *(unsigned __int8 *)(a1 + 16);
  v29 = 6;
  if (*(_BYTE *)(a1 + 16))
    v29 = 1;
  v119 = v20;
  MEMORY[0x1B5E01F8C](v20[v29]);
  v30 = sub_1B0007CCC();
  v32 = v31;
  v34 = v33;
  swift_release();
  sub_1AFAED640(v22, v24, v27);
  swift_bridgeObjectRelease();
  if (!v28)
    sub_1B0007B94();
  v35 = v34 & 1;
  v36 = sub_1B0007CA8();
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_1AFAED640(v30, v32, v35);
  swift_bridgeObjectRelease();
  objc_msgSend(v111, sel_capHeight);
  sub_1B00082E4();
  sub_1B0007360();
  v128 = (void *)v36;
  v129 = v38;
  LOBYTE(v130) = v42;
  v131 = v40;
  v132 = v137;
  LOBYTE(v133) = v138;
  v134 = v139;
  LOBYTE(v135) = v140;
  *(_OWORD *)v136 = v141;
  v142 = (char *)v112;
  v143 = v115;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE5B0);
  sub_1AFDB23E4((uint64_t)&qword_1ED1EE5A8);
  sub_1AFAF9424();
  v43 = (uint64_t)v116;
  sub_1B0007EC4();
  sub_1AFAED640(v36, v38, v42);
  swift_bridgeObjectRelease();
  sub_1AFDB2298(v43, v123);
  v44 = v119;
  v116 = (char *)v119[7];
  LODWORD(v115) = *((unsigned __int8 *)v119 + 64);
  v45 = v114;
  v46 = v113;
  v47 = (uint64_t *)(v113 + *(int *)(v114 + 36));
  v48 = *v47;
  v49 = v47[1];
  v50 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0)
    v50 = v48 & 0xFFFFFFFFFFFFLL;
  if (v50)
  {
    swift_bridgeObjectRetain();
    sub_1B0008098();
    v51 = *MEMORY[0x1E0CDF760];
    v52 = sub_1B00080D4();
    v53 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v109, v51, v52);
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v52);
    v54 = sub_1B00080B0();
    swift_release();
    sub_1AFACE0DC(v53, &qword_1EEE72088);
    v55 = v44[3];
    v56 = sub_1B0007C6C();
    KeyPath = swift_getKeyPath();
    sub_1B00082E4();
    sub_1B0007360();
    v128 = (void *)v54;
    v129 = 0;
    LOWORD(v130) = 1;
    v131 = KeyPath;
    v132 = (void *)v56;
    v133 = v142;
    LOBYTE(v134) = v143;
    v135 = v144;
    v136[0] = v145;
    *(_OWORD *)&v136[8] = v146;
    v58 = (uint64_t *)(v46 + *(int *)(v45 + 40));
    v60 = *v58;
    v59 = v58[1];
    v126 = v60;
    v127 = v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73EA0);
    sub_1AFDB22E8((uint64_t)&unk_1EEE73EA8);
    v61 = (uint64_t)v110;
    sub_1B0007EC4();
    swift_release();
    swift_release();
    swift_release();
    sub_1AFAF869C(v61, v125, &qword_1EEE73E90);
    swift_storeEnumTagMultiPayload();
    sub_1AFDB245C();
    sub_1B0007918();
    sub_1AFACE0DC(v61, &qword_1EEE73E90);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1AFDB245C();
    sub_1B0007918();
  }
  if (*((_BYTE *)v44 + 65) == 1)
  {
    v120 = v44[7];
    v125 = *((unsigned __int8 *)v44 + 64);
    v62 = v46 + *(int *)(v45 + 28);
    v63 = *(_QWORD *)(v62 + 8);
    v128 = *(void **)v62;
    v129 = v63;
    swift_bridgeObjectRetain();
    v64 = sub_1B0007D5C();
    v66 = v65;
    v68 = v67 & 1;
    v117 = v44[4];
    sub_1B0007C6C();
    v69 = sub_1B0007D08();
    v71 = v70;
    v73 = v72;
    v114 = v74;
    swift_release();
    v75 = v73 & 1;
    sub_1AFAED640(v64, v66, v68);
    swift_bridgeObjectRelease();
    v76 = *(unsigned __int8 *)(v46 + 16);
    v77 = 6;
    if (*(_BYTE *)(v46 + 16))
      v77 = 5;
    MEMORY[0x1B5E01F8C](v119[v77]);
    v78 = sub_1B0007CCC();
    v80 = v79;
    v82 = v81;
    swift_release();
    sub_1AFAED640(v69, v71, v75);
    swift_bridgeObjectRelease();
    if (!v76)
      sub_1B0007B94();
    v88 = v82 & 1;
    v89 = sub_1B0007CA8();
    v91 = v90;
    v93 = v92;
    v95 = v94 & 1;
    sub_1AFAED640(v78, v80, v88);
    swift_bridgeObjectRelease();
    objc_msgSend(v117, sel_capHeight);
    sub_1B00082E4();
    sub_1B0007360();
    v117 = v128;
    v114 = v129;
    v113 = v130;
    v112 = v131;
    v111 = v132;
    v110 = v133;
    sub_1AFBB755C(v89, v91, v95);
    swift_bridgeObjectRetain();
    v119 = (id *)v89;
    v84 = v91;
    v85 = v95;
    sub_1AFAED640(v89, v91, v95);
    v86 = v93;
    swift_bridgeObjectRelease();
    v87 = 257;
    v83 = (uint64_t)v120;
  }
  else
  {
    v83 = 0;
    v125 = 0;
    v119 = 0;
    v84 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v117 = 0;
    v114 = 0;
    v113 = 0;
    v112 = 0;
    v111 = 0;
    v110 = 0;
  }
  v96 = v121;
  sub_1AFAF869C(v123, v121, &qword_1ED1EE6D0);
  v97 = v122;
  sub_1AFAF869C(v124, v122, &qword_1EEE73E98);
  v98 = v96;
  v99 = v118;
  sub_1AFAF869C(v98, v118, &qword_1ED1EE6D0);
  v100 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_1EEE73EC8);
  v101 = v99 + v100[12];
  *(_QWORD *)v101 = v116;
  *(_BYTE *)(v101 + 8) = v115;
  sub_1AFAF869C(v97, v99 + v100[16], &qword_1EEE73E98);
  v102 = (uint64_t *)(v99 + v100[20]);
  v103 = v125;
  *v102 = v83;
  v102[1] = v103;
  v125 = v103;
  v104 = (uint64_t)v119;
  v102[2] = (uint64_t)v119;
  v102[3] = v84;
  v102[4] = v85;
  v102[5] = v86;
  v105 = (uint64_t)v117;
  v102[6] = v87;
  v102[7] = v105;
  v106 = v83;
  v120 = (id)v83;
  v107 = v113;
  v102[8] = v114;
  v102[9] = v107;
  v109 = (char *)v87;
  v108 = (uint64_t)v111;
  v102[10] = v112;
  v102[11] = v108;
  v102[12] = (uint64_t)v110;
  sub_1AFDB24F8(v106, v103, v104, v84, v85, v86);
  sub_1AFACE0DC(v124, &qword_1EEE73E98);
  sub_1AFACE0DC(v123, &qword_1ED1EE6D0);
  sub_1AFDB2534((uint64_t)v120, v125, v104, v84, v85, v86);
  sub_1AFACE0DC(v122, &qword_1EEE73E98);
  sub_1AFACE0DC(v121, &qword_1ED1EE6D0);
}

uint64_t sub_1AFDB14BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AFDB0108(a1, (_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 120), a2);
}

_QWORD *sub_1AFDB14C8(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v2 = (void *)a1[1];
  v3 = (void *)a1[2];
  v4 = (void *)a1[3];
  v5 = (void *)a1[4];
  v6 = (void *)a1[5];
  v7 = (void *)a1[6];
  v8 = (void *)a1[7];
  swift_bridgeObjectRetain();
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  return a1;
}

unint64_t sub_1AFDB1534()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EEE73D70;
  if (!qword_1EEE73D70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73D60);
    v2 = sub_1AFDB1598();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DECD00], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEE73D70);
  }
  return result;
}

unint64_t sub_1AFDB1598()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EEE73D78;
  if (!qword_1EEE73D78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73D80);
    v2 = sub_1AFDB1604();
    v3[0] = MEMORY[0x1E0DEB458];
    v3[1] = v2;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEB8B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEE73D78);
  }
  return result;
}

unint64_t sub_1AFDB1604()
{
  unint64_t result;

  result = qword_1ED1F0FA8;
  if (!qword_1ED1F0FA8)
  {
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED1F0FA8);
  }
  return result;
}

void sub_1AFDB1644(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AFDB0298(a1, (char *)(v2 + 16), *(_QWORD *)(v2 + 120), a2);
}

uint64_t type metadata accessor for HourlyForecastCell()
{
  uint64_t result;

  result = qword_1EEE73E28;
  if (!qword_1EEE73E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFDB1688(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(id *)a1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  return a1;
}

_QWORD *sub_1AFDB16EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v52;
  uint64_t v53;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v50 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v50 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = (int *)type metadata accessor for HourlyForecastViewModel.HourModel();
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1B00058D8();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[8];
    v19 = (_QWORD *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v53 = v20[1];
    *v19 = *v20;
    v19[1] = v53;
    v21 = v8[9];
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v8[10];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    *(_QWORD *)((char *)v4 + v8[11]) = *(uint64_t *)((char *)a2 + v8[11]);
    v29 = v8[12];
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = *(int *)(a3 + 20);
    v34 = (char *)v4 + v33;
    v35 = (uint64_t)a2 + v33;
    v36 = *(void **)v35;
    v37 = *(void **)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v37;
    v39 = *(void **)(v35 + 16);
    v38 = *(void **)(v35 + 24);
    *((_QWORD *)v34 + 2) = v39;
    *((_QWORD *)v34 + 3) = v38;
    v40 = *(void **)(v35 + 32);
    v52 = *(void **)(v35 + 40);
    *((_QWORD *)v34 + 4) = v40;
    *((_QWORD *)v34 + 5) = v52;
    v34[64] = *(_BYTE *)(v35 + 64);
    v42 = *(void **)(v35 + 48);
    v41 = *(_QWORD *)(v35 + 56);
    *((_QWORD *)v34 + 6) = v42;
    *((_QWORD *)v34 + 7) = v41;
    v34[65] = *(_BYTE *)(v35 + 65);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    *((_QWORD *)v34 + 11) = *(_QWORD *)(v35 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = v36;
    v44 = v37;
    v45 = v39;
    v46 = v38;
    v47 = v40;
    v48 = v52;
    v49 = v42;
  }
  return v4;
}

void sub_1AFDB18C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for HourlyForecastViewModel.HourModel() + 24);
  v5 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (id *)(a1 + *(int *)(a2 + 20));

}

uint64_t sub_1AFDB19B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (int *)type metadata accessor for HourlyForecastViewModel.HourModel();
  v8 = v7[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1B00058D8();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v7[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v51 = v19[1];
  *v18 = *v19;
  v18[1] = v51;
  v20 = v7[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v7[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v28 = v7[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = *(int *)(a3 + 20);
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(void **)v34;
  v36 = *(void **)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v36;
  v38 = *(void **)(v34 + 16);
  v37 = *(void **)(v34 + 24);
  *(_QWORD *)(v33 + 16) = v38;
  *(_QWORD *)(v33 + 24) = v37;
  v39 = *(void **)(v34 + 32);
  v50 = *(void **)(v34 + 40);
  *(_QWORD *)(v33 + 32) = v39;
  *(_QWORD *)(v33 + 40) = v50;
  *(_BYTE *)(v33 + 64) = *(_BYTE *)(v34 + 64);
  v41 = *(void **)(v34 + 48);
  v40 = *(_QWORD *)(v34 + 56);
  *(_QWORD *)(v33 + 48) = v41;
  *(_QWORD *)(v33 + 56) = v40;
  *(_BYTE *)(v33 + 65) = *(_BYTE *)(v34 + 65);
  *(_OWORD *)(v33 + 72) = *(_OWORD *)(v34 + 72);
  *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = v35;
  v43 = v36;
  v44 = v38;
  v45 = v37;
  v46 = v39;
  v47 = v50;
  v48 = v41;
  return a1;
}

uint64_t sub_1AFDB1B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for HourlyForecastViewModel.HourModel();
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v6[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v6[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v6[10];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  v23 = v6[12];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = *(int *)(a3 + 20);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(void **)v28;
  v30 = *(void **)v27;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v31 = v29;

  v32 = *(void **)(v28 + 8);
  v33 = *(void **)(v27 + 8);
  *(_QWORD *)(v27 + 8) = v32;
  v34 = v32;

  v35 = *(void **)(v28 + 16);
  v36 = *(void **)(v27 + 16);
  *(_QWORD *)(v27 + 16) = v35;
  v37 = v35;

  v38 = *(void **)(v28 + 24);
  v39 = *(void **)(v27 + 24);
  *(_QWORD *)(v27 + 24) = v38;
  v40 = v38;

  v41 = *(void **)(v28 + 32);
  v42 = *(void **)(v27 + 32);
  *(_QWORD *)(v27 + 32) = v41;
  v43 = v41;

  v44 = *(void **)(v28 + 40);
  v45 = *(void **)(v27 + 40);
  *(_QWORD *)(v27 + 40) = v44;
  v46 = v44;

  v47 = *(void **)(v28 + 48);
  v48 = *(void **)(v27 + 48);
  *(_QWORD *)(v27 + 48) = v47;
  v49 = v47;

  v50 = *(_QWORD *)(v28 + 56);
  *(_BYTE *)(v27 + 64) = *(_BYTE *)(v28 + 64);
  *(_QWORD *)(v27 + 56) = v50;
  *(_BYTE *)(v27 + 65) = *(_BYTE *)(v28 + 65);
  *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
  *(_QWORD *)(v27 + 80) = *(_QWORD *)(v28 + 80);
  *(_QWORD *)(v27 + 88) = *(_QWORD *)(v28 + 88);
  return a1;
}

uint64_t sub_1AFDB1DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for HourlyForecastViewModel.HourModel();
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
  *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
  *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
  *(_OWORD *)(a1 + v6[10]) = *(_OWORD *)(a2 + v6[10]);
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x60uLL);
  return a1;
}

uint64_t sub_1AFDB1E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (int *)type metadata accessor for HourlyForecastViewModel.HourModel();
  v8 = v7[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1B00058D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = v7[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v7[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = v7[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[11]) = *(_QWORD *)(a2 + v7[11]);
  v32 = v7[12];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(void **)(a1 + v37);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)v39;

  v41 = *(void **)(v38 + 8);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);

  v42 = *(void **)(v38 + 16);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);

  v43 = *(void **)(v38 + 24);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);

  v44 = *(void **)(v38 + 32);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);

  v45 = *(void **)(v38 + 40);
  *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);

  v46 = *(void **)(v38 + 48);
  *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);

  *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
  *(_BYTE *)(v38 + 64) = *(_BYTE *)(v39 + 64);
  *(_BYTE *)(v38 + 65) = *(_BYTE *)(v39 + 65);
  *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
  *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
  return a1;
}

uint64_t sub_1AFDB2044()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDB2050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for HourlyForecastViewModel.HourModel();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1AFDB20C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDB20D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for HourlyForecastViewModel.HourModel();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1AFDB2148()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HourlyForecastViewModel.HourModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AFDB21BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[4];

  result = qword_1EEE73E60;
  if (!qword_1EEE73E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73E68);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73D18);
    sub_1AFDB22E8((uint64_t)&unk_1EEE73D30);
    v6[2] = v2;
    v6[3] = v3;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&qword_1EEE73E60);
  }
  return result;
}

uint64_t sub_1AFDB2288()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDB2298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFDB22E8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v4 = v3;
    v5 = OUTLINED_FUNCTION_6_92(0, v2);
    v6[0] = v4();
    v6[1] = MEMORY[0x1E0CD8D70];
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v5, v6), v1);
  }
  OUTLINED_FUNCTION_10_1();
}

unint64_t sub_1AFDB2340()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE73EB0;
  if (!qword_1EEE73EB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73EB8);
    sub_1AFDB23E4((uint64_t)&unk_1ED1F0F88);
    v3 = v2;
    sub_1AFDB2430((uint64_t)&qword_1ED1EE7C8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE73EB0);
  }
  return result;
}

void sub_1AFDB23E4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = OUTLINED_FUNCTION_6_92(0, v2);
    v8[0] = v6;
    v8[1] = v5;
    atomic_store(MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v7, v8), v1);
  }
  OUTLINED_FUNCTION_10_1();
}

void sub_1AFDB2430(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_17_5(a1))
  {
    OUTLINED_FUNCTION_6_92(0, v1);
    OUTLINED_FUNCTION_15_0();
  }
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1AFDB245C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE73EC0;
  if (!qword_1EEE73EC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73E90);
    sub_1AFDB22E8((uint64_t)&unk_1EEE73EA8);
    v3 = v2;
    sub_1AFBB7034((uint64_t)qword_1ED1F1A18);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE73EC0);
  }
  return result;
}

uint64_t sub_1AFDB24F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1AFBB755C(a3, a4, a5 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AFDB2534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_1AFAED640(a3, a4, a5 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AFDB2570()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE73E70);
  sub_1AFDB2430((uint64_t)&unk_1EEE73E80);
  return swift_getOpaqueTypeConformance2();
}

void StringBuilder.__allocating_init(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_9_92();
  StringBuilder.init(_:)(a1, a2, v4, v5);
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFDB260C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1B0008620();
    if (!__OFSUB__(result, v1))
    {
      sub_1B0008638();
      v2 = sub_1B00086EC();
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AFDB26F8(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1AFC9BA4C(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1AFDB2768()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AFDB2794()
{
  sub_1AFDB2768();
  return swift_deallocClassInstance();
}

uint64_t static RuleBuilder.buildBlock<A, B, C>(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_93();
  OUTLINED_FUNCTION_3_101(0, v15, v16, v15);
  OUTLINED_FUNCTION_5_99();
  OUTLINED_FUNCTION_41();
  sub_1AFAEDE0C(v12, a7, a10);
  OUTLINED_FUNCTION_12_89();
  sub_1AFAEDE0C(v11, a8, a11);
  OUTLINED_FUNCTION_0_118();
  return a8;
}

uint64_t static RuleBuilder.buildBlock<A, B, C, D, E>(_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  OUTLINED_FUNCTION_3_101(0, a6, a7, a4);
  sub_1AFAEDE0C(a1, a8, a13);
  OUTLINED_FUNCTION_41();
  sub_1AFAEDE0C(a2, a9, a14);
  swift_release();
  OUTLINED_FUNCTION_7_89();
  OUTLINED_FUNCTION_0_118();
  OUTLINED_FUNCTION_4_103(a4, a11, a16);
  OUTLINED_FUNCTION_2_107();
  sub_1AFAEDE0C(a5, a12, a17);
  OUTLINED_FUNCTION_0_118();
  return a14;
}

uint64_t method lookup function for StringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StringBuilder.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for RuleRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for RuleBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RuleBuilder);
}

uint64_t *initializeBufferWithCopyOfBuffer for HumidityComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for HumidityComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1B00058FC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *((_BYTE *)a1 + v7[5]) = *((_BYTE *)a2 + v7[5]);
      v10 = v7[6];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for HumidityComplicationDataStatus(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for HumidityComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1B00058FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(v2 + 24);
    v6 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for HumidityComplicationDataStatus(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = (int *)type metadata accessor for HumidityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    a1[v6[5]] = a2[v6[5]];
    v8 = v6[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithCopy for HumidityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = (int *)type metadata accessor for HumidityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v15 = sub_1B00058FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(a1, a2, v15);
      a1[v6[5]] = a2[v6[5]];
      v16 = v6[6];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFD0CA4C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1B00058FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  a1[v6[5]] = a2[v6[5]];
  v10 = v6[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

char *initializeWithTake for HumidityComplicationDataStatus(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = (int *)type metadata accessor for HumidityComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B00058FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    a1[v6[5]] = a2[v6[5]];
    v8 = v6[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1B0005B84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_BYTE *assignWithTake for HumidityComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = (int *)type metadata accessor for HumidityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v15 = sub_1B00058FC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(a1, a2, v15);
      a1[v6[5]] = a2[v6[5]];
      v16 = v6[6];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
      *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
      *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFD0CA4C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1B00058FC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  a1[v6[5]] = a2[v6[5]];
  v10 = v6[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1B0005B84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HumidityComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDB306C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for HumidityComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HumidityComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDB30BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for HumidityComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFDB3108(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HumidityComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFDB3138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HumidityComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for HumidityComplicationDataStatus()
{
  uint64_t result;

  result = qword_1EEE73FC0;
  if (!qword_1EEE73FC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFDB31A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HumidityComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFDB31FC()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0x80000001B0051400;
  v28 = 0xD000000000000014;
  v29 = 0x80000001B0051420;
  v30 = 6;
  v21 = 0x617274736F746C41;
  v22 = 0xEF4C202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0051480;
  v25 = 6;
  v26 = 0xD000000000000010;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFDB3A00();
  sub_1AFDB3A00();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V4.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1137180672;
  LODWORD(v6) = 1108869120;
  sub_1AFB471E4((uint64_t)&v36, 48, 0, 2000, 133, 10, 1, 10, 0, 0x41F00000C20C0000, 0x42A0000040400000, v6, 0x3E3851EC3E051EB8, v7, 0x3F8000003F800000, 0x3E99999A3F800000, 0x3F8000003F800000, 0x3F3333333F800000, 1056964608,
    0x428C000000000000,
    v8,
    0x3E051EB83D4CCCCDLL,
    0x3F8000003F800000,
    0x3F152CEC3F800000,
    0x3F8000003F800000,
    0x3F5B1FF13F800000,
    1065353216,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFDB3A00()
{
  uint64_t v0;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  double v15;
  __n128 v16;
  __n128 v17;
  double v18;
  double v19;
  double v20;
  double v21;
  __n128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  double v26;
  double v27;
  __n128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  double v35;
  double v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  double v46;
  __n128 v47;
  __n128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  double v52;
  __n128 v53;
  __int128 v54;
  __n128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  double v68;
  __n128 v69;
  float v70;
  float v71;
  float v72;
  __n128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __n128 v80;
  __int128 v81;
  __int128 v82;
  __n128 *v83;
  uint64_t v84;
  float v85;
  double v86;
  _OWORD *v87;
  _OWORD *v88;
  _OWORD *v89;
  _OWORD *v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  uint64_t v94;
  __n128 v95;
  float v96;
  float v97;
  __int128 v98;
  __n128 v99;
  __int128 v100;
  double v101;
  double v102;
  __n128 v103;
  __n128 v104;
  __int128 v105;
  __int128 v106;
  __n128 v107;
  __int128 v108;
  __n128 v109;
  __int128 v110;
  __int128 v111;
  _OWORD *v112;
  _OWORD *v113;
  __n128 *v114;
  double v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  uint64_t v123;
  __n128 v124;
  float v125;
  float v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __n128 v132;
  __int128 v133;
  __int128 v134;
  _OWORD *v135;
  _OWORD *v136;
  double v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  uint64_t v145;
  float v146;
  float v147;
  __int128 v148;
  double v149;
  double v150;
  double v151;
  double v152;
  __n128 v153;
  __n128 v154;
  double v155;
  __n128 v156;
  __int128 v157;
  __int128 v158;
  double v159;
  double v160;
  __int128 v161;
  __n128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  double v166;
  __n128 v167;
  __int128 v168;
  __int128 v169;
  double v170;
  double v171;
  _OWORD *v172;
  _OWORD *v173;
  double v174;
  _OWORD *v175;
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  uint64_t v182;
  float v183;
  float v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  _OWORD *v189;
  _OWORD *v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  uint64_t v197;
  float v198;
  __n128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __n128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  uint64_t v218;
  __n128 v219;
  __int128 v220;
  __n128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  uint64_t v233;
  uint64_t v235;
  uint64_t v236;
  int v237;
  int v238;
  _OWORD *v239;
  _OWORD *v240;
  int v241;
  int v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  uint64_t v394;
  uint64_t v395;
  __n128 v396;
  __n128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __n128 v405;
  __int128 v406;
  __n128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __n128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __n128 v429;
  __int128 v430;
  __n128 v431;
  __int128 v432;
  __n128 v433;
  __n128 v434;
  __n128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  _OWORD v447[2];
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v466 = xmmword_1B00276A0;
  v467 = xmmword_1B00276B0;
  v464 = xmmword_1B002C560;
  v465 = xmmword_1B002C570;
  v462 = xmmword_1B002B2D0;
  v463 = xmmword_1B002B2E0;
  __asm { FMOV            V3.2D, #1.0 }
  v460 = _Q3;
  v461 = _Q3;
  v458 = _Q3;
  v459 = _Q3;
  v456 = xmmword_1B002B2F0;
  v457 = xmmword_1B002B300;
  v454 = xmmword_1B0028CD0;
  v455 = xmmword_1B0028CE0;
  v452 = xmmword_1B002C580;
  v453 = xmmword_1B00277A0;
  v450 = xmmword_1B0028D00;
  v451 = xmmword_1B0028C80;
  v448 = _Q3;
  v449 = _Q3;
  OUTLINED_FUNCTION_12_36();
  v445 = v6;
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C590;
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C5A0;
  v442 = xmmword_1B0026FC0;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028150;
  v398 = v6;
  v435 = (__n128)v6;
  v436 = xmmword_1B0025E90;
  v433 = (__n128)v6;
  v434 = (__n128)v6;
  v431 = (__n128)v6;
  v432 = xmmword_1B0025E90;
  v429 = (__n128)v6;
  v430 = xmmword_1B0025E50;
  v427 = v6;
  v428 = v6;
  v425 = v6;
  v426 = xmmword_1B0027770;
  v423 = xmmword_1B00291A0;
  v424 = xmmword_1B0025E90;
  v421 = xmmword_1B002C5B0;
  v422 = xmmword_1B0026230;
  v419 = v6;
  v420 = v6;
  v417 = v6;
  v418 = v6;
  v415 = v6;
  v416 = xmmword_1B0025E50;
  v413 = (__n128)v6;
  v414 = xmmword_1B0027030;
  v411 = xmmword_1B002C590;
  v412 = xmmword_1B00277B0;
  v409 = xmmword_1B002C5A0;
  v410 = xmmword_1B0028150;
  v407 = (__n128)v6;
  v408 = xmmword_1B0025E50;
  v405 = (__n128)v6;
  v406 = xmmword_1B0027030;
  v403 = v6;
  v404 = v6;
  v401 = v6;
  v402 = v6;
  v399 = v6;
  v400 = v6;
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_8_9(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, 200.0, 35.0, 0.1, &v452, &v450, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v448, 0,
    v447,
    &v445,
    &v443,
    &v441,
    &v439,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    &v401,
    (uint64_t)&v399);
  v466 = xmmword_1B00276A0;
  v467 = xmmword_1B00276B0;
  v464 = xmmword_1B002C560;
  v465 = xmmword_1B002C570;
  v462 = xmmword_1B002B2D0;
  OUTLINED_FUNCTION_14_88((__n128)xmmword_1B002B2E0);
  v456 = xmmword_1B002B2F0;
  v457 = xmmword_1B002B300;
  v454 = xmmword_1B0028CD0;
  v455 = xmmword_1B0028CE0;
  v452 = xmmword_1B002C580;
  v453 = xmmword_1B00277A0;
  v450 = xmmword_1B0028D00;
  v451 = xmmword_1B0028C80;
  v448 = (__int128)v17;
  v449 = (__int128)v17;
  OUTLINED_FUNCTION_31_18(1.0, v18, v19, v20, v21, v17);
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C590;
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C5A0;
  v442 = xmmword_1B0026FC0;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028150;
  v435 = v22;
  v436 = xmmword_1B0025E90;
  v433 = v22;
  v434 = v22;
  v431 = v22;
  v432 = xmmword_1B0025E90;
  v429 = v22;
  v430 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_25_17(1.0, 0.899999976, 0.699999928, 0.799999952, 0.899999976, v22);
  v423 = v23;
  v424 = v24;
  v421 = v25;
  v422 = xmmword_1B0026230;
  OUTLINED_FUNCTION_23_16(1.0, v26, v27, *(double *)&v25, *(double *)&v23, v28);
  v416 = v29;
  v413 = v30;
  v414 = v31;
  v411 = v32;
  v412 = xmmword_1B00277B0;
  v409 = v33;
  v410 = v34;
  v407 = v30;
  v408 = v29;
  v405 = v30;
  v406 = v31;
  OUTLINED_FUNCTION_20_27(1.0, *(double *)&v32, *(double *)&v33, v35, v36, v30);
  OUTLINED_FUNCTION_3_38();
  v265 = v37;
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_8_9(v38, v39, v40, v41, v42, v43, v44, v45, v46, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v452, &v450, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v448, 0,
    v447,
    &v445,
    &v443,
    &v441,
    v265,
    v274,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    v338,
    v346,
    v352,
    v358,
    v364,
    v368,
    v370,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    &v401,
    (uint64_t)&v399);
  v466 = xmmword_1B002C5C0;
  v467 = xmmword_1B002B3B0;
  v464 = xmmword_1B002C5D0;
  v465 = xmmword_1B002B3D0;
  OUTLINED_FUNCTION_9_93((__n128)xmmword_1B00277F0, (__n128)xmmword_1B0026110);
  v452 = (__int128)v47;
  v453 = xmmword_1B002C5E0;
  v450 = xmmword_1B002C5F0;
  v451 = xmmword_1B0028D90;
  v448 = (__int128)v47;
  v449 = (__int128)v47;
  OUTLINED_FUNCTION_32_13(0.799999952, 1.0, v47);
  OUTLINED_FUNCTION_33_37();
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C600;
  v442 = xmmword_1B0027740;
  v439 = (__int128)v48;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C610;
  v438 = xmmword_1B0026FC0;
  v435 = v48;
  v436 = xmmword_1B0025E90;
  v433 = v48;
  v434 = v48;
  v431 = v48;
  v432 = xmmword_1B0025E90;
  v429 = v48;
  v430 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_21_4(0.800000072, 1.0, v48);
  v423 = v49;
  v424 = v50;
  v421 = v51;
  OUTLINED_FUNCTION_16_36((__n128)xmmword_1B0026230, v52, v53);
  v416 = v54;
  v413 = v55;
  v414 = v56;
  v411 = v57;
  v412 = xmmword_1B0027FF0;
  v409 = v58;
  v410 = v59;
  v407 = v55;
  v408 = v54;
  v405 = v55;
  v406 = v56;
  v403 = (__int128)v55;
  v404 = (__int128)v55;
  v401 = (__int128)v55;
  v402 = (__int128)v55;
  v399 = (__int128)v55;
  v400 = (__int128)v55;
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_1_37();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_8_9(v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, &v452, &v450, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v448, 0,
    v447,
    &v445,
    v249,
    v257,
    v266,
    v275,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    v339,
    v347,
    v353,
    v359,
    v365,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    v390,
    v394);
  OUTLINED_FUNCTION_7_5();
  v464 = xmmword_1B0028D70;
  v465 = xmmword_1B0028A50;
  v462 = xmmword_1B00276E0;
  v463 = xmmword_1B0026110;
  v460 = v398;
  v461 = v398;
  v458 = v398;
  v459 = v398;
  v456 = v398;
  v457 = v398;
  v454 = v398;
  v455 = v398;
  v452 = v398;
  v453 = xmmword_1B0027840;
  OUTLINED_FUNCTION_11_41((__n128)xmmword_1B002C620);
  v448 = xmmword_1B0026320;
  v449 = xmmword_1B0026330;
  OUTLINED_FUNCTION_12_36();
  v445 = (__int128)v73;
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B00291A0;
  v444 = xmmword_1B00278C0;
  v441 = xmmword_1B002C610;
  v442 = xmmword_1B0026400;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B00277A0;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028260;
  v435 = v73;
  v436 = xmmword_1B0025E90;
  v433 = v73;
  v434 = v73;
  v431 = v73;
  v432 = xmmword_1B0025E90;
  v429 = v73;
  OUTLINED_FUNCTION_29_58();
  v427 = v74;
  v428 = v74;
  v425 = v74;
  v426 = xmmword_1B0027770;
  v423 = v74;
  v424 = v75;
  v421 = v76;
  v422 = xmmword_1B002C630;
  v419 = v74;
  v420 = v74;
  v417 = v74;
  v418 = v74;
  v415 = v74;
  v416 = v77;
  v413 = (__n128)v74;
  v414 = v78;
  v411 = v79;
  v412 = xmmword_1B0026FC0;
  v409 = v76;
  OUTLINED_FUNCTION_30_18();
  v407 = v80;
  v408 = v81;
  v405 = v80;
  v406 = v82;
  v403 = (__int128)v80;
  v404 = (__int128)v80;
  v401 = (__int128)v80;
  v402 = (__int128)v80;
  v399 = (__int128)v80;
  v400 = (__int128)v80;
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_1_37();
  OUTLINED_FUNCTION_16_6();
  v397 = v83[32];
  v85 = *(float *)(v84 + 2620);
  v86 = OUTLINED_FUNCTION_18_19();
  OUTLINED_FUNCTION_29_0(v87, v88, v89, v90, v91, v92, v93, v94, v86, v95, 600.0, v96, v85, v97, &v452, &v450, 0x3F6666663F800000, 0, &v448,
    0,
    v447,
    &v445,
    v250,
    v258,
    v267,
    v276,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    v340,
    v348,
    v354,
    v360,
    v366,
    (_OWORD *)0x3F800000,
    &v409,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    v391,
    v395);
  OUTLINED_FUNCTION_7_5();
  v464 = xmmword_1B0028DA0;
  v465 = xmmword_1B0028DB0;
  OUTLINED_FUNCTION_9_93((__n128)xmmword_1B0028220, (__n128)xmmword_1B0028230);
  v452 = v98;
  v453 = xmmword_1B0027840;
  OUTLINED_FUNCTION_11_41((__n128)xmmword_1B002C640);
  v448 = xmmword_1B0028DD0;
  v449 = xmmword_1B0028DE0;
  OUTLINED_FUNCTION_32_13(1.0, 0.962731481, v99);
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C650;
  v444 = xmmword_1B0029070;
  v441 = xmmword_1B002C660;
  v442 = xmmword_1B0027730;
  v439 = v100;
  v440 = xmmword_1B002C670;
  v437 = xmmword_1B002C680;
  v438 = xmmword_1B002C690;
  v435 = (__n128)v100;
  v436 = xmmword_1B0025E90;
  v433 = (__n128)v100;
  v434 = (__n128)v100;
  v431 = (__n128)v100;
  v432 = xmmword_1B0025E90;
  v429 = (__n128)v100;
  OUTLINED_FUNCTION_29_58();
  OUTLINED_FUNCTION_21_4(v101, v102, v103);
  v423 = (__int128)v104;
  v424 = v105;
  v421 = (__int128)v104;
  OUTLINED_FUNCTION_16_36((__n128)xmmword_1B002C6A0, *(double *)&v105, v104);
  v416 = v106;
  v413 = v107;
  v414 = v108;
  v411 = xmmword_1B00291A0;
  v412 = xmmword_1B00277A0;
  v409 = xmmword_1B00291A0;
  OUTLINED_FUNCTION_30_18();
  v407 = v109;
  v408 = v110;
  v405 = v109;
  v406 = v111;
  v403 = (__int128)v109;
  v404 = (__int128)v109;
  v401 = (__int128)v109;
  v402 = (__int128)v109;
  v399 = (__int128)v109;
  v400 = (__int128)v109;
  OUTLINED_FUNCTION_10_42();
  v372 = v112;
  OUTLINED_FUNCTION_34_4();
  v251 = v113;
  OUTLINED_FUNCTION_16_6();
  v396 = v114[223];
  v115 = OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_29_0(v116, v117, v118, v119, v120, v121, v122, v123, v115, v124, 900.0, v125, 0.8, v126, &v452, &v450, 0x3F6666663F800000, 0, &v448,
    0,
    v447,
    &v445,
    v251,
    v259,
    v268,
    &v437,
    &v435,
    &v433,
    &v431,
    &v429,
    &v427,
    &v425,
    &v423,
    &v421,
    &v419,
    &v417,
    &v415,
    &v413,
    (_OWORD *)0x3F800000,
    &v409,
    v372,
    v374,
    v378,
    v382,
    v386,
    v392,
    (uint64_t)&v399);
  OUTLINED_FUNCTION_7_5();
  v464 = xmmword_1B0028DA0;
  v465 = xmmword_1B0028DB0;
  v462 = xmmword_1B0028220;
  v463 = xmmword_1B0028230;
  v460 = v398;
  v461 = v398;
  v458 = v398;
  v459 = v398;
  v456 = v398;
  v457 = v398;
  v454 = v398;
  v455 = v398;
  v452 = v398;
  v453 = xmmword_1B0027840;
  OUTLINED_FUNCTION_11_41((__n128)xmmword_1B002C640);
  v448 = xmmword_1B0028DD0;
  v449 = xmmword_1B0028DE0;
  OUTLINED_FUNCTION_12_36();
  v445 = v127;
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C650;
  v444 = xmmword_1B0029070;
  v441 = xmmword_1B002C660;
  v442 = xmmword_1B0027730;
  v439 = v127;
  v440 = xmmword_1B002C670;
  v437 = xmmword_1B002C680;
  v438 = xmmword_1B002C690;
  v435 = (__n128)v127;
  v436 = xmmword_1B0025E90;
  v433 = (__n128)v127;
  v434 = (__n128)v127;
  v431 = (__n128)v127;
  v432 = xmmword_1B0025E90;
  v429 = (__n128)v127;
  OUTLINED_FUNCTION_29_58();
  v427 = v128;
  v428 = v128;
  v425 = v128;
  v426 = xmmword_1B0027770;
  v423 = v128;
  v424 = v129;
  v421 = v128;
  v422 = xmmword_1B002C6A0;
  v419 = v128;
  v420 = v128;
  v417 = v128;
  v418 = v128;
  v415 = v128;
  v416 = v130;
  v413 = (__n128)v128;
  v414 = v131;
  v411 = xmmword_1B00291A0;
  v412 = xmmword_1B00277A0;
  v409 = xmmword_1B00291A0;
  OUTLINED_FUNCTION_30_18();
  v407 = v132;
  v408 = v133;
  v405 = v132;
  v406 = v134;
  v403 = (__int128)v132;
  v404 = (__int128)v132;
  v401 = (__int128)v132;
  v402 = (__int128)v132;
  v399 = (__int128)v132;
  v400 = (__int128)v132;
  OUTLINED_FUNCTION_10_42();
  v373 = v135;
  OUTLINED_FUNCTION_3_38();
  OUTLINED_FUNCTION_34_4();
  v252 = v136;
  OUTLINED_FUNCTION_16_6();
  v137 = OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_28_13(v138, v139, v140, v141, v142, v143, v144, v145, v137, v396, 900.0, v146, 0.8, v147, &v452, &v450, 0x3F6666663F800000, 0, &v448,
    0,
    v447,
    &v445,
    v252,
    v260,
    v269,
    v277,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    v341,
    v349,
    v355,
    v361,
    v367,
    v369,
    v371,
    v373,
    v375,
    v379,
    v383,
    v387,
    v393,
    (uint64_t)&v399);
  OUTLINED_FUNCTION_7_5();
  v464 = xmmword_1B0028D70;
  v465 = xmmword_1B0028A50;
  v462 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_14_88((__n128)xmmword_1B0026110);
  v456 = v148;
  v457 = v148;
  v454 = v148;
  v455 = v148;
  v452 = v148;
  v453 = xmmword_1B0027840;
  OUTLINED_FUNCTION_11_41((__n128)xmmword_1B002C620);
  v448 = xmmword_1B0026320;
  v449 = xmmword_1B0026330;
  OUTLINED_FUNCTION_31_18(0.97049284, v149, v150, v151, v152, v153);
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B00291A0;
  v444 = xmmword_1B00278C0;
  v441 = xmmword_1B002C610;
  v442 = xmmword_1B0026400;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B00277A0;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028260;
  v435 = v154;
  v436 = xmmword_1B0025E90;
  v433 = v154;
  v434 = v154;
  v431 = v154;
  v432 = xmmword_1B0025E90;
  v429 = v154;
  v430 = xmmword_1B0025E50;
  *(_QWORD *)&v155 = OUTLINED_FUNCTION_25_17(1.0, 1.0, 1.0, 1.0, 0.799999952, v154).n128_u64[0];
  v423 = (__int128)v156;
  v424 = v157;
  v421 = v158;
  v422 = xmmword_1B002C630;
  OUTLINED_FUNCTION_23_16(v155, v159, 1.0, v160, *(double *)&v158, v156);
  v416 = v161;
  v413 = v162;
  v414 = v163;
  v411 = v164;
  v412 = xmmword_1B0026FC0;
  v409 = v165;
  *(_QWORD *)&v166 = OUTLINED_FUNCTION_30_18().n128_u64[0];
  v407 = v167;
  v408 = v168;
  v405 = v167;
  v406 = v169;
  OUTLINED_FUNCTION_20_27(v166, *(double *)&v168, v170, *(double *)&v169, v171, v167);
  OUTLINED_FUNCTION_15_16();
  v376 = v172;
  OUTLINED_FUNCTION_2_34();
  v245 = v173;
  OUTLINED_FUNCTION_16_6();
  v174 = OUTLINED_FUNCTION_18_19();
  OUTLINED_FUNCTION_28_13(v175, v176, v177, v178, v179, v180, v181, v182, v174, v397, 600.0, v183, v85, v184, &v452, &v450, 0x3F6666663F800000, 0, &v448,
    0,
    v447,
    v245,
    v253,
    v261,
    v270,
    v278,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    v334,
    v342,
    v350,
    v356,
    v362,
    &v413,
    &v411,
    &v409,
    &v407,
    v376,
    v380,
    v384,
    v388,
    &v401,
    (uint64_t)&v399);
  v466 = xmmword_1B002C5C0;
  v467 = xmmword_1B002B3B0;
  v464 = xmmword_1B002C5D0;
  v465 = xmmword_1B002B3D0;
  v462 = xmmword_1B00277F0;
  v463 = xmmword_1B0026110;
  v460 = v398;
  v461 = v398;
  v458 = v398;
  v459 = v398;
  v456 = v398;
  v457 = v398;
  v454 = v398;
  v455 = v398;
  v452 = v398;
  v453 = xmmword_1B002C5E0;
  v450 = xmmword_1B002C5F0;
  v451 = xmmword_1B0028D90;
  v448 = v398;
  v449 = v398;
  memset(v447, 0, sizeof(v447));
  v445 = v398;
  OUTLINED_FUNCTION_33_37();
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C600;
  v442 = v185;
  v439 = v186;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C610;
  v438 = xmmword_1B0026FC0;
  v435 = (__n128)v186;
  v436 = xmmword_1B0025E90;
  v433 = (__n128)v186;
  v434 = (__n128)v186;
  v431 = (__n128)v186;
  v432 = xmmword_1B0025E90;
  v429 = (__n128)v186;
  v430 = xmmword_1B0025E50;
  v427 = v186;
  v428 = v186;
  v425 = v186;
  v426 = xmmword_1B0027770;
  v423 = v187;
  v424 = xmmword_1B0025E90;
  v421 = xmmword_1B002C610;
  v422 = xmmword_1B0026230;
  v419 = v186;
  v420 = v186;
  v417 = v186;
  v418 = v186;
  v415 = v186;
  v416 = xmmword_1B0025E50;
  v413 = (__n128)v186;
  v414 = v188;
  v411 = v187;
  v412 = xmmword_1B0027FF0;
  v409 = xmmword_1B002C600;
  v410 = xmmword_1B0026FC0;
  v407 = (__n128)v186;
  v408 = xmmword_1B0025E50;
  v405 = (__n128)v186;
  v406 = v188;
  v403 = v186;
  v404 = v186;
  v401 = v186;
  v402 = v186;
  v399 = v186;
  v400 = v186;
  OUTLINED_FUNCTION_2_34();
  v246 = v189;
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_9_13(v190, v191, v192, v193, v194, v195, v196, v197, -18.0, (__n128)xmmword_1B0028A30, 250.0, v198, 0.3, &v452, &v450, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v448, 0,
    v447,
    v246,
    v254,
    v262,
    v271,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v335,
    v343,
    v351,
    v357,
    v363,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    &v401,
    (uint64_t)&v399);
  OUTLINED_FUNCTION_0_119();
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C590;
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C5A0;
  v442 = xmmword_1B0026FC0;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028150;
  v435 = v199;
  v436 = xmmword_1B0025E90;
  v433 = v199;
  v434 = v199;
  v431 = v199;
  v432 = xmmword_1B0025E90;
  v429 = v199;
  OUTLINED_FUNCTION_29_58();
  v427 = v200;
  v428 = v200;
  v425 = v200;
  v426 = xmmword_1B0027770;
  v423 = v201;
  v424 = v202;
  v421 = v203;
  v422 = xmmword_1B0026230;
  OUTLINED_FUNCTION_27_19();
  v416 = v204;
  v413 = v205;
  v414 = v206;
  v411 = v207;
  v412 = xmmword_1B00277B0;
  v409 = v208;
  v410 = v209;
  v407 = v205;
  v408 = v204;
  v405 = v205;
  v406 = v206;
  OUTLINED_FUNCTION_17_31();
  OUTLINED_FUNCTION_15_16();
  v377 = v210;
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_9_13(v211, v212, v213, v214, v215, v216, v217, v218, -60.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v452, &v450, v235, v237, v239, v241,
    v243,
    v247,
    v255,
    v263,
    v272,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v344,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    v377,
    v381,
    v385,
    v389,
    &v401,
    (uint64_t)&v399);
  OUTLINED_FUNCTION_0_119();
  v446 = xmmword_1B0027030;
  v443 = xmmword_1B002C590;
  v444 = xmmword_1B0028150;
  v441 = xmmword_1B002C5A0;
  v442 = xmmword_1B0026FC0;
  v439 = xmmword_1B00291A0;
  v440 = xmmword_1B0028150;
  v437 = xmmword_1B002C5B0;
  v438 = xmmword_1B0028150;
  v435 = v219;
  v436 = xmmword_1B0025E90;
  v433 = v219;
  v434 = v219;
  v431 = v219;
  v432 = xmmword_1B0025E90;
  v429 = v219;
  v430 = xmmword_1B0025E50;
  v427 = (__int128)v219;
  v428 = (__int128)v219;
  v425 = (__int128)v219;
  v426 = xmmword_1B0027770;
  v423 = xmmword_1B00291A0;
  v424 = xmmword_1B0025E90;
  v421 = xmmword_1B002C5B0;
  v422 = xmmword_1B0026230;
  OUTLINED_FUNCTION_27_19();
  v416 = v220;
  v413 = v221;
  v414 = v222;
  v411 = v223;
  v412 = xmmword_1B00277B0;
  v409 = v224;
  v410 = v225;
  v407 = v221;
  v408 = v220;
  v405 = v221;
  v406 = v222;
  OUTLINED_FUNCTION_17_31();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_9_13(v226, v227, v228, v229, v230, v231, v232, v233, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v452, &v450, v236, v238, v240, v242,
    v244,
    v248,
    v256,
    v264,
    v273,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v345,
    &v419,
    &v417,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    1112014848,
    1097859072,
    &v401,
    (uint64_t)&v399);
  return v0;
}

void sub_1AFDB4F58()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 1;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 9;
  v26 = 0x80000001B0051400;
  v27 = 0xD000000000000014;
  v28 = 0x80000001B0051420;
  v29 = 6;
  v20 = 0x617274736F746C41;
  v21 = 0xEF4C202D20737574;
  v22 = 0xD000000000000013;
  v23 = 0x80000001B0051480;
  v24 = 6;
  v25 = 0xD000000000000010;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFDB577C();
  sub_1AFDB577C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E75C28F3DF5C28FLL;
  *(_QWORD *)&v11 = 0x44160000420F0000;
  LODWORD(v9) = 1084227584;
  DWORD2(v8) = 1142292480;
  *(_QWORD *)&v8 = 0x4243000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 10, 0xC2A0000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E6147AE3E0F5C29,
    1095761920,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1091945103,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFDB577C()
{
  uint64_t v0;
  double v7;
  __n128 v8;
  __int128 v9;
  __n128 v10;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  double v23;
  __n128 v24;
  float v25;
  __n128 v26;
  __n128 v27;
  __int128 v28;
  double v29;
  __int128 v30;
  __n128 v31;
  double v32;
  double v33;
  __n128 v34;
  double v35;
  __n128 v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  double v49;
  float v50;
  __n128 v51;
  __n128 v52;
  double v53;
  double v54;
  __n128 v55;
  __n128 v56;
  __int128 v57;
  double v58;
  __int128 v59;
  double v60;
  __n128 v61;
  double v62;
  __n128 v63;
  double v64;
  double v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  __int128 v69;
  __n128 v70;
  __int128 v71;
  double v72;
  __n128 v73;
  unsigned int v74;
  __n128 *v75;
  uint64_t v76;
  float v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  _OWORD *v84;
  uint64_t v85;
  double v86;
  __n128 v87;
  float v88;
  __n128 v89;
  double v90;
  double v91;
  __n128 v92;
  double v93;
  double v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  __int128 v98;
  __int128 v99;
  __n128 v100;
  double v101;
  __int128 v102;
  __n128 v103;
  double v104;
  __n128 v105;
  __n128 v106;
  __n128 v107;
  __int128 v108;
  __n128 v109;
  __n128 *v110;
  uint64_t v111;
  float v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  _OWORD *v119;
  uint64_t v120;
  double v121;
  __n128 v122;
  float v123;
  __n128 v124;
  double v125;
  __n128 v126;
  __n128 v127;
  __n128 v128;
  __n128 v129;
  __n128 v130;
  double v131;
  __int128 v132;
  __n128 v133;
  __n128 v134;
  __int128 v135;
  double v136;
  __int128 v137;
  __n128 v138;
  __n128 v139;
  __n128 *v140;
  uint64_t v141;
  double v142;
  _OWORD *v143;
  _OWORD *v144;
  uint64_t v145;
  float v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __int128 v150;
  double v151;
  __int128 v152;
  __n128 v153;
  __n128 v154;
  _OWORD *v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  uint64_t v162;
  float v163;
  __n128 v164;
  __n128 v165;
  __int128 v166;
  double v167;
  __n128 v168;
  __n128 v169;
  __n128 v170;
  __int128 v171;
  __n128 v172;
  double v173;
  __int128 v174;
  __n128 v175;
  __n128 v176;
  __int128 v177;
  double v178;
  __int128 v179;
  __n128 v180;
  __n128 v181;
  _OWORD *v182;
  _OWORD *v183;
  _OWORD *v184;
  _OWORD *v185;
  _OWORD *v186;
  _OWORD *v187;
  _OWORD *v188;
  uint64_t v189;
  double v190;
  float v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  uint64_t v199;
  double v200;
  float v201;
  double v202;
  __n128 v203;
  __n128 v204;
  __int128 v205;
  __int128 v206;
  __n128 v207;
  __n128 v208;
  __int128 v209;
  __int128 v210;
  double v211;
  uint64_t v212;
  _OWORD *v213;
  _OWORD *v214;
  uint64_t v215;
  float v216;
  double v217;
  double v218;
  __n128 v219;
  __n128 v220;
  __int128 v221;
  __n128 v222;
  __n128 v223;
  __int128 v224;
  __int128 v225;
  double v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  uint64_t v234;
  _OWORD *v236;
  _OWORD *v237;
  uint64_t v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  __n128 v400;
  __n128 v401;
  __n128 v402;
  __n128 v403;
  __n128 v404;
  __n128 v405;
  __int128 v406;
  _OWORD v407[2];
  _OWORD v408[2];
  _OWORD v409[2];
  __n128 v410;
  __n128 v411;
  __n128 v412;
  __int128 v413;
  __n128 v414;
  __int128 v415;
  __n128 v416;
  __int128 v417;
  __n128 v418;
  __n128 v419;
  __n128 v420;
  __int128 v421;
  __n128 v422;
  __n128 v423;
  __n128 v424;
  __n128 v425;
  __n128 v426;
  __int128 v427;
  __n128 v428;
  __int128 v429;
  __n128 v430;
  __int128 v431;
  __n128 v432;
  __n128 v433;
  __n128 v434;
  __int128 v435;
  __n128 v436;
  __int128 v437;
  __n128 v438;
  __int128 v439;
  __n128 v440;
  __n128 v441;
  __n128 v442;
  __int128 v443;
  __n128 v444;
  __int128 v445;
  __n128 v446;
  __int128 v447;
  __n128 v448;
  __int128 v449;
  __n128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __n128 v464;
  __int128 v465;
  __n128 v466;
  __n128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v472 = xmmword_1B00276A0;
  v473 = xmmword_1B00276B0;
  v470 = xmmword_1B002C560;
  v471 = xmmword_1B002C570;
  v468 = xmmword_1B002B2D0;
  v469 = xmmword_1B002B2E0;
  __asm { FMOV            V3.2D, #1.0 }
  v404 = _Q3;
  v466 = _Q3;
  v467 = _Q3;
  __asm { FMOV            V0.2D, #0.5 }
  v403 = _Q0;
  v464 = _Q0;
  v465 = xmmword_1B0026E60;
  v462 = xmmword_1B002B2F0;
  v463 = xmmword_1B002B300;
  v460 = xmmword_1B0028CD0;
  v461 = xmmword_1B0028CE0;
  v458 = xmmword_1B0028CF0;
  v459 = xmmword_1B0028060;
  v456 = xmmword_1B0028D00;
  v457 = xmmword_1B0028C80;
  OUTLINED_FUNCTION_30_25(0.704536617, 1.0, v7, _Q3);
  v450 = v8;
  v451 = xmmword_1B0027030;
  v448 = v8;
  v449 = xmmword_1B0025E90;
  v446 = v8;
  v447 = xmmword_1B0027730;
  v444 = v8;
  v445 = xmmword_1B0025E90;
  v442 = v8;
  v443 = xmmword_1B0025E50;
  v440 = v8;
  v441 = (__n128)xmmword_1B0025E90;
  v438 = v8;
  v439 = xmmword_1B0026140;
  v436 = v8;
  v437 = xmmword_1B0025E90;
  v434 = v8;
  v435 = xmmword_1B0027740;
  v432 = v8;
  v433 = v8;
  v430 = v8;
  v431 = xmmword_1B0027770;
  v428 = v8;
  v429 = xmmword_1B0025E90;
  v426 = v8;
  v427 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_26_4(1.0, 1.0, 1.0, v8);
  v406 = v9;
  v421 = v9;
  v418 = v10;
  v405 = v11;
  v419 = v11;
  v416 = v10;
  v417 = v12;
  v414 = v10;
  v415 = v13;
  v412 = v10;
  v413 = v9;
  v410 = v10;
  v411 = v11;
  OUTLINED_FUNCTION_23_3(v14, v11.n128_f64[0], *(double *)&v9, v10);
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_11_4(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, 200.0, v25, 0.1, &v458, &v456, 0x3F3333333F4CCCCDLL, 1065353216, &v454, 0,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    &v436,
    &v434,
    &v432,
    &v430,
    &v428,
    &v426,
    &v424,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    1112014848,
    1097859072,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B0030470;
  v471 = xmmword_1B002EFF0;
  OUTLINED_FUNCTION_33_4((__n128)xmmword_1B002B360, (__n128)xmmword_1B002B370);
  OUTLINED_FUNCTION_8_54();
  v460 = xmmword_1B0030480;
  v461 = xmmword_1B0030490;
  OUTLINED_FUNCTION_32_23((__n128)xmmword_1B00304A0);
  v456 = xmmword_1B002F020;
  v457 = xmmword_1B00304B0;
  OUTLINED_FUNCTION_5_57(0.670098364, 0.996514976, v26);
  v443 = v406;
  v440 = v27;
  v441 = (__n128)v28;
  v438 = v27;
  v439 = xmmword_1B0026140;
  v436 = v27;
  v437 = v28;
  v434 = v27;
  v435 = xmmword_1B0027740;
  *(_QWORD *)&v29 = OUTLINED_FUNCTION_10_52(1.0, *(double *)&v28, v27).n128_u64[0];
  v429 = v30;
  *(_QWORD *)&v35 = OUTLINED_FUNCTION_15_13(v29, *(double *)&v30, v31, v32, v33, v34).n128_u64[0];
  v419 = v36;
  v416 = v37;
  v417 = v38;
  v414 = v37;
  v415 = v39;
  v412 = v37;
  v413 = v40;
  OUTLINED_FUNCTION_18_21(v35, *(double *)&v38, v37, *(double *)&v39, v36);
  OUTLINED_FUNCTION_2_59();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_11_4(v41, v42, v43, v44, v45, v46, v47, v48, v49, (__n128)xmmword_1B00287D0, 200.0, v50, 0.1, v236, &v456, 0x3F3333333F4CCCCDLL, 1065353216, v239, v244,
    &v452,
    &v450,
    &v448,
    v268,
    v276,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    v340,
    v348,
    v356,
    v364,
    v368,
    v372,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    1112014848,
    1097859072,
    v408,
    (uint64_t)v407);
  v472 = xmmword_1B002C5C0;
  v473 = xmmword_1B002B3B0;
  v470 = xmmword_1B002C5D0;
  v471 = xmmword_1B002B3D0;
  OUTLINED_FUNCTION_33_4((__n128)xmmword_1B00277F0, (__n128)xmmword_1B0026110);
  v464 = v403;
  v465 = xmmword_1B00271F0;
  OUTLINED_FUNCTION_41_5(v403.n128_f64[0], 0.5, v51);
  v458 = xmmword_1B0028F90;
  v459 = xmmword_1B002F100;
  v456 = xmmword_1B002C5F0;
  v457 = xmmword_1B0028C80;
  v454 = (__int128)v52;
  v455 = (__int128)v52;
  v53 = OUTLINED_FUNCTION_37_11(1.0, 1.0, v52);
  OUTLINED_FUNCTION_16_51(v53, v54, v55, v405);
  v442 = v56;
  v443 = v406;
  v440 = v56;
  v441 = (__n128)xmmword_1B00304C0;
  v438 = v56;
  v439 = xmmword_1B0026140;
  v436 = v56;
  v437 = v57;
  v434 = v56;
  v435 = xmmword_1B0027740;
  *(_QWORD *)&v58 = OUTLINED_FUNCTION_10_52(1.0, 1.0, v56).n128_u64[0];
  v429 = v59;
  *(_QWORD *)&v64 = OUTLINED_FUNCTION_15_13(v58, v60, v61, v62, *(double *)&v59, v63).n128_u64[0];
  OUTLINED_FUNCTION_39_1(v64, v65, v66, v67, v68);
  v415 = v69;
  v412 = v70;
  v413 = v71;
  OUTLINED_FUNCTION_17_48(v72, *(double *)&v69, v70, v73);
  OUTLINED_FUNCTION_35_12();
  OUTLINED_FUNCTION_2_59();
  OUTLINED_FUNCTION_12_8();
  v238 = v74 | 0x3F33333300000000;
  v402 = v75[163];
  v77 = *(float *)(v76 + 2228);
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_11_4(v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, 250.0, v88, v77, &v458, &v456, v238, 1061997773, &v454, 0,
    &v452,
    &v450,
    &v448,
    v269,
    v277,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    v341,
    v349,
    v357,
    v365,
    v369,
    v373,
    v376,
    v380,
    v384,
    &v410,
    v409,
    1112014848,
    1097859072,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B0028D70;
  v471 = xmmword_1B0028A50;
  v468 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_40_7((__n128)xmmword_1B0026110);
  v464 = v89;
  v465 = (__int128)v405;
  OUTLINED_FUNCTION_41_5(v90, v91, v89);
  v458 = (__int128)v92;
  v459 = xmmword_1B00278C0;
  v456 = xmmword_1B00304D0;
  v457 = xmmword_1B0028D90;
  v454 = xmmword_1B0026320;
  v455 = xmmword_1B0026330;
  v93 = OUTLINED_FUNCTION_37_11(0.970078886, 0.97049284, v92);
  OUTLINED_FUNCTION_16_51(v93, v94, v95, v96);
  v442 = v97;
  v443 = v406;
  v440 = v97;
  v441 = (__n128)xmmword_1B0026120;
  v438 = v97;
  v439 = (__int128)v97;
  v436 = v97;
  v437 = v98;
  v434 = v97;
  v435 = v406;
  OUTLINED_FUNCTION_10_52(1.0, *(double *)&v406, v97);
  v429 = v99;
  v426 = v100;
  v427 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_29_3(1.0, v101, v100);
  v421 = v102;
  v418 = v103;
  OUTLINED_FUNCTION_39_1(v104, *(double *)&v102, v103, v105, v106);
  v415 = xmmword_1B0026140;
  v412 = v107;
  v413 = v108;
  OUTLINED_FUNCTION_17_48(1.0, *(double *)&v108, v107, v109);
  OUTLINED_FUNCTION_35_12();
  OUTLINED_FUNCTION_12_8();
  v401 = v110[32];
  v112 = *(float *)(v111 + 2620);
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_19_7(v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, 700.0, v123, v112, &v458, &v456, 0x3F6666663F666666, 0, &v454, 0,
    &v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    &v436,
    &v434,
    &v432,
    &v430,
    &v428,
    &v426,
    &v424,
    &v422,
    &v420,
    &v418,
    v377,
    v381,
    v385,
    &v410,
    v409,
    1112014848,
    1097859072,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B00304E0;
  v471 = xmmword_1B0028DB0;
  v468 = xmmword_1B0028220;
  v469 = xmmword_1B0028230;
  v466 = v404;
  v467 = v404;
  v464 = v404;
  OUTLINED_FUNCTION_11_52((__n128)xmmword_1B0026FC0, v404);
  v459 = xmmword_1B00278C0;
  v456 = xmmword_1B00304D0;
  v457 = xmmword_1B0028D90;
  v454 = xmmword_1B0027D70;
  v455 = xmmword_1B0027D80;
  v125 = OUTLINED_FUNCTION_36_16(1.0, v124);
  v451 = (__int128)v405;
  v441 = OUTLINED_FUNCTION_9_45(v125, v126);
  OUTLINED_FUNCTION_34_19(v441.n128_f64[0], v127, v128);
  v434 = v129;
  v435 = xmmword_1B00304F0;
  *(_QWORD *)&v131 = OUTLINED_FUNCTION_6_93(1.0, v129, v130).n128_u64[0];
  v421 = v132;
  v418 = v133;
  v419 = v134;
  v416 = v133;
  v417 = v135;
  *(_QWORD *)&v136 = OUTLINED_FUNCTION_19_40(v131, v133).n128_u64[0];
  v413 = v137;
  v410 = v138;
  v411 = v139;
  OUTLINED_FUNCTION_12_49(v136, v138);
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_12_8();
  v400 = v140[223];
  v142 = *(double *)(v141 + 1784);
  OUTLINED_FUNCTION_19_7(v143, v144, &v468, &v466, &v464, &v462, &v460, v145, v142, v400, 900.0, v146, 0.8, &v458, &v456, 0x3F6666663F666666, 0, &v454, v245,
    v250,
    v256,
    v262,
    v270,
    v278,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    v334,
    v342,
    v350,
    v358,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    1112014848,
    1097859072,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B00304E0;
  v471 = xmmword_1B0028DB0;
  v468 = xmmword_1B0028220;
  OUTLINED_FUNCTION_31_25((__n128)xmmword_1B0028230);
  OUTLINED_FUNCTION_11_52((__n128)xmmword_1B0026FC0, v147);
  v459 = xmmword_1B00278C0;
  v456 = xmmword_1B00304D0;
  v457 = xmmword_1B0028D90;
  v454 = xmmword_1B0027D70;
  v455 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_36_16(0.9627316, v148);
  v451 = (__int128)v405;
  v448 = v149;
  v449 = xmmword_1B0025E90;
  v446 = v149;
  v447 = xmmword_1B0027730;
  v444 = v149;
  v445 = xmmword_1B0025E90;
  v442 = v149;
  v443 = v406;
  v440 = v149;
  v441 = (__n128)v406;
  v438 = v149;
  v439 = (__int128)v149;
  v436 = v149;
  v437 = xmmword_1B0025E90;
  v434 = v149;
  v435 = xmmword_1B00304F0;
  v432 = v149;
  v433 = v149;
  v430 = v149;
  v431 = xmmword_1B0027770;
  v428 = v149;
  v429 = xmmword_1B0025E90;
  v426 = v149;
  v427 = xmmword_1B0028C90;
  v424 = v149;
  v425 = v149;
  v422 = v149;
  v423 = v149;
  v420 = v149;
  v421 = v406;
  v418 = v149;
  v419 = v405;
  v416 = v149;
  v417 = v150;
  *(_QWORD *)&v151 = OUTLINED_FUNCTION_19_40(1.0, v149).n128_u64[0];
  v413 = v152;
  v410 = v153;
  v411 = v154;
  OUTLINED_FUNCTION_12_49(v151, v153);
  OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_1_60();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_20_38();
  OUTLINED_FUNCTION_18_8(v155, v156, v157, v158, v159, v160, v161, v162, v142, v400, 900.0, v163, 0.8, v237, &v456, 0x3F6666663F666666, 0, v240, v246,
    v251,
    v257,
    v263,
    v271,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v335,
    v343,
    v351,
    v359,
    v366,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    v392,
    v396,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B0028D70;
  v471 = xmmword_1B0028A50;
  v468 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_31_25((__n128)xmmword_1B0026110);
  OUTLINED_FUNCTION_11_52(v405, v164);
  v459 = xmmword_1B00278C0;
  v456 = xmmword_1B00304D0;
  v457 = xmmword_1B0028D90;
  v454 = xmmword_1B0026320;
  v455 = xmmword_1B0026330;
  v453 = 0u;
  v452 = 0u;
  v450 = v165;
  v451 = v166;
  *(_QWORD *)&v167 = OUTLINED_FUNCTION_9_45(*(double *)&v166, v165).n128_u64[0];
  v441 = (__n128)xmmword_1B0026120;
  OUTLINED_FUNCTION_34_19(v167, v168, v169);
  v434 = v170;
  v435 = v171;
  *(_QWORD *)&v173 = OUTLINED_FUNCTION_6_93(*(double *)&v171, v170, v172).n128_u64[0];
  v421 = v174;
  v418 = v175;
  v419 = v176;
  v416 = v175;
  v417 = v177;
  *(_QWORD *)&v178 = OUTLINED_FUNCTION_19_40(v173, v175).n128_u64[0];
  v413 = v179;
  v410 = v180;
  v411 = v181;
  OUTLINED_FUNCTION_12_49(v178, v180);
  OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_18_8(v182, v183, v184, v185, v186, v187, v188, v189, v190, v401, 700.0, v191, v112, &v458, &v456, 0x3F6666663F666666, 0, v241, v247,
    v252,
    v258,
    v264,
    v272,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v344,
    v352,
    v360,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    v393,
    v397,
    v407,
    (uint64_t)&v458);
  v472 = xmmword_1B002C5C0;
  v473 = xmmword_1B002B3B0;
  v470 = xmmword_1B002C5D0;
  v471 = xmmword_1B002B3D0;
  v468 = xmmword_1B00277F0;
  v469 = xmmword_1B0026110;
  v466 = v404;
  v467 = v404;
  v464 = v403;
  v465 = xmmword_1B00271F0;
  v462 = (__int128)v404;
  v463 = (__int128)v404;
  v460 = (__int128)v404;
  v461 = (__int128)v404;
  v458 = xmmword_1B0028F90;
  v459 = xmmword_1B002F100;
  v456 = xmmword_1B002C5F0;
  v457 = xmmword_1B0028C80;
  v454 = (__int128)v404;
  v455 = (__int128)v404;
  v453 = 0u;
  v452 = 0u;
  v450 = v404;
  v451 = (__int128)v405;
  v448 = v404;
  v449 = xmmword_1B0025E90;
  v446 = v404;
  v447 = xmmword_1B0027730;
  v444 = v404;
  v445 = xmmword_1B0025E90;
  v442 = v404;
  v443 = v406;
  v440 = v404;
  v441 = (__n128)xmmword_1B00304C0;
  v438 = v404;
  v439 = xmmword_1B0026140;
  v436 = v404;
  v437 = xmmword_1B0025E90;
  v434 = v404;
  v435 = xmmword_1B0027740;
  v432 = v404;
  v433 = v404;
  v430 = v404;
  v431 = xmmword_1B0027770;
  v428 = v404;
  v429 = xmmword_1B0025E90;
  v426 = v404;
  v427 = xmmword_1B0028C90;
  v424 = v404;
  v425 = v404;
  v422 = v404;
  v423 = v404;
  v420 = v404;
  v421 = v406;
  v418 = v404;
  v419 = v405;
  v416 = v404;
  v417 = xmmword_1B0025E90;
  v414 = v404;
  v415 = xmmword_1B0026140;
  v412 = v404;
  v413 = v406;
  v410 = v404;
  v411 = v405;
  v409[0] = v404;
  v409[1] = v404;
  v408[0] = v404;
  v408[1] = v404;
  v407[0] = v404;
  v407[1] = v404;
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_10_2(v192, v193, v194, v195, v196, v197, v198, v199, v200, v402, 250.0, v201, v77, &v458, &v456, 0x3F3333333F4CCCCDLL, 1061997773, v242, v248,
    v253,
    v259,
    v265,
    v273,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v345,
    v353,
    v361,
    &v422,
    &v420,
    &v418,
    &v416,
    &v414,
    &v412,
    &v410,
    v409,
    1112014848,
    1097859072,
    v407,
    (uint64_t)&v458);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B0030470;
  v471 = xmmword_1B002EFF0;
  v468 = xmmword_1B002B360;
  OUTLINED_FUNCTION_40_7((__n128)xmmword_1B002B370);
  OUTLINED_FUNCTION_8_54();
  v460 = xmmword_1B0030480;
  v461 = xmmword_1B0030490;
  OUTLINED_FUNCTION_32_23((__n128)xmmword_1B00304A0);
  v456 = xmmword_1B002F020;
  v457 = xmmword_1B00304B0;
  OUTLINED_FUNCTION_5_57(0.996514976, v202, v203);
  v443 = v406;
  v440 = v204;
  v441 = (__n128)v205;
  v438 = v204;
  v439 = xmmword_1B0026140;
  v436 = v204;
  v437 = v205;
  v434 = v204;
  v435 = xmmword_1B0027740;
  v432 = v204;
  v433 = v204;
  v430 = v204;
  v431 = xmmword_1B0027770;
  v428 = v204;
  v429 = v205;
  v426 = v204;
  v427 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_29_3(1.0, 1.0, v204);
  v421 = v206;
  v418 = v207;
  v419 = v208;
  v416 = v207;
  v417 = v209;
  v414 = v207;
  v415 = v210;
  v412 = v207;
  v413 = v206;
  OUTLINED_FUNCTION_18_21(*(double *)&v210, v211, v207, *(double *)&v206, v208);
  OUTLINED_FUNCTION_7_49();
  OUTLINED_FUNCTION_0_60();
  OUTLINED_FUNCTION_22_34();
  OUTLINED_FUNCTION_10_2(v213, v214, &v468, &v466, &v464, &v462, &v460, v215, *(double *)(v212 + 3208), (__n128)xmmword_1B00287D0, 200.0, v216, 0.1, &v458, &v456, 0x3F3333333F4CCCCDLL, 1065353216, v243, v249,
    v254,
    v260,
    v266,
    v274,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    v338,
    v346,
    v354,
    v362,
    &v422,
    v370,
    v374,
    v378,
    v382,
    v386,
    v388,
    v390,
    v394,
    v398,
    v408,
    (uint64_t)v407);
  OUTLINED_FUNCTION_4_62();
  v470 = xmmword_1B002C560;
  v471 = xmmword_1B002C570;
  v468 = xmmword_1B002B2D0;
  v469 = xmmword_1B002B2E0;
  v466 = v404;
  v467 = v404;
  OUTLINED_FUNCTION_8_54();
  v460 = xmmword_1B0028CD0;
  v461 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_32_23((__n128)xmmword_1B0028CF0);
  v456 = xmmword_1B0028D00;
  v457 = xmmword_1B0028C80;
  OUTLINED_FUNCTION_30_25(1.0, v217, v218, v219);
  v450 = v220;
  v451 = (__int128)v405;
  v448 = v220;
  v449 = xmmword_1B0025E90;
  v446 = v220;
  v447 = xmmword_1B0027730;
  v444 = v220;
  v445 = xmmword_1B0025E90;
  v442 = v220;
  v443 = v406;
  v440 = v220;
  v441 = (__n128)xmmword_1B0025E90;
  v438 = v220;
  v439 = xmmword_1B0026140;
  v436 = v220;
  v437 = xmmword_1B0025E90;
  v434 = v220;
  v435 = xmmword_1B0027740;
  v432 = v220;
  v433 = v220;
  v430 = v220;
  v431 = xmmword_1B0027770;
  v428 = v220;
  v429 = xmmword_1B0025E90;
  v426 = v220;
  v427 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_26_4(1.0, 1.0, 1.0, v220);
  v421 = v221;
  v418 = v222;
  v419 = v223;
  v416 = v222;
  v417 = v224;
  v414 = v222;
  v415 = v225;
  v412 = v222;
  v413 = v221;
  v410 = v222;
  v411 = v223;
  OUTLINED_FUNCTION_23_3(*(double *)&v224, v226, *(double *)&v225, v222);
  OUTLINED_FUNCTION_7_49();
  OUTLINED_FUNCTION_1_60();
  OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_10_2(v227, v228, v229, v230, v231, v232, v233, v234, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v458, &v456, 0x3F3333333F4CCCCDLL, 1065353216, &v454, 0,
    v255,
    v261,
    v267,
    v275,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    v339,
    v347,
    v355,
    v363,
    v367,
    v371,
    v375,
    v379,
    v383,
    v387,
    v389,
    v391,
    v395,
    v399,
    v408,
    (uint64_t)v407);
  return v0;
}

void sub_1AFDB6A40()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 9;
  v27 = 0xEF4C202D20737574;
  v28 = 0xD000000000000013;
  v29 = 0x80000001B0051480;
  v30 = 9;
  v21 = 0x617274736F746C41;
  v22 = 0xEF53202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0050E80;
  v25 = 9;
  v26 = 0x617274736F746C41;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFDB7238();
  sub_1AFDBA474();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.5
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3B03126F3F800000;
  *((_QWORD *)&v14 + 1) = 0x417000003F333333;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v36, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFDB7238()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int64x2_t v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int64x2_t v78;
  __int128 v79;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = xmmword_1B0025E50;
  v68 = _Q1;
  v69 = _Q1;
  v66 = _Q1;
  v67 = _Q1;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = _Q1;
  v60 = (int64x2_t)_Q1;
  v61 = xmmword_1B0025E90;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = _Q1;
  v21 = _Q1;
  v18 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0025EB0;
  v17 = xmmword_1B0025EC0;
  v9 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  v10 = _Q1;
  v11 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002A7B0;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v19 = xmmword_1B0025EE0;
  v16 = xmmword_1B0025EF0;
  v17 = xmmword_1B0025F00;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025F10;
  v79 = v9;
  v76 = xmmword_1B002A7C0;
  v77 = xmmword_1B0025F30;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A790;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026900;
  v67 = xmmword_1B0026910;
  v64 = xmmword_1B0025F80;
  v65 = xmmword_1B0027840;
  v62 = (int64x2_t)xmmword_1B002A7E0;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCF992720000000uLL);
  v19 = xmmword_1B0025FB0;
  v16 = xmmword_1B0025FC0;
  v17 = xmmword_1B0025FD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025FE0;
  v79 = v9;
  v76 = xmmword_1B0025FF0;
  v77 = xmmword_1B0026000;
  v74 = xmmword_1B002A7F0;
  v75 = xmmword_1B0028210;
  v72 = xmmword_1B002A800;
  v73 = xmmword_1B002A810;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026080;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B00260A0;
  v17 = xmmword_1B0026090;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A820;
  v79 = xmmword_1B00260D0;
  v76 = xmmword_1B00260E0;
  v77 = xmmword_1B00260F0;
  v74 = xmmword_1B0026100;
  v75 = xmmword_1B0026110;
  v72 = xmmword_1B002A830;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026150;
  v65 = xmmword_1B002A840;
  v62 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026180;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B00261A0;
  v17 = xmmword_1B0026190;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A850;
  v79 = xmmword_1B00261D0;
  v76 = xmmword_1B002BF40;
  v77 = xmmword_1B002BF50;
  v74 = xmmword_1B0026200;
  v75 = xmmword_1B0026210;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0027040;
  v65 = xmmword_1B002A870;
  v62 = (int64x2_t)xmmword_1B002A880;
  v63 = xmmword_1B002A890;
  v60 = (int64x2_t)xmmword_1B0026260;
  v61 = xmmword_1B0026270;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026280;
  v19 = xmmword_1B0026290;
  v16 = xmmword_1B00262A0;
  v17 = xmmword_1B0026290;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v8 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF60;
  v77 = xmmword_1B0025F70;
  v74 = xmmword_1B00262E0;
  v75 = xmmword_1B0027420;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A8B0;
  v63 = xmmword_1B002A8C0;
  v60 = (int64x2_t)xmmword_1B0026320;
  v61 = xmmword_1B0027440;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026340;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B0026350;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v77 = xmmword_1B0025F70;
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v77 = xmmword_1B0025F70;
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BF70;
  v74 = xmmword_1B00263E0;
  v75 = xmmword_1B00263F0;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B0026220;
  v65 = xmmword_1B002A8D0;
  v62 = (int64x2_t)xmmword_1B0026220;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BFB0;
  v19 = xmmword_1B002BFC0;
  v16 = xmmword_1B002BFB0;
  v17 = xmmword_1B002BFD0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = v8;
  v79 = xmmword_1B00262C0;
  v76 = xmmword_1B002BFE0;
  v77 = v9;
  v74 = v9;
  v75 = v9;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)v9;
  v63 = v9;
  v60 = (int64x2_t)xmmword_1B0026380;
  v61 = xmmword_1B0025F70;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B002BF80;
  v19 = xmmword_1B002BF90;
  v16 = xmmword_1B002BF80;
  v17 = xmmword_1B002BFA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 1.1967e-26, 0.75, 0.9, 0.85, 0.9, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v79 = xmmword_1B002A8E0;
  v76 = xmmword_1B002BFF0;
  v77 = xmmword_1B0025FA0;
  v74 = xmmword_1B002A900;
  v75 = xmmword_1B002A910;
  v72 = v9;
  v73 = xmmword_1B0026120;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A920;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v61 = xmmword_1B00264D0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026430;
  v19 = xmmword_1B0026130;
  v16 = xmmword_1B00264E0;
  v17 = xmmword_1B0026140;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.85, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B002A940;
  v79 = xmmword_1B0027B30;
  v76 = xmmword_1B002A950;
  v77 = xmmword_1B002A960;
  v74 = xmmword_1B002A970;
  v75 = xmmword_1B002A980;
  v72 = v9;
  v73 = v9;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026560;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B002A990;
  v63 = xmmword_1B002A9A0;
  v60 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v61 = xmmword_1B00265A0;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B00265B0;
  v19 = xmmword_1B00265C0;
  v16 = xmmword_1B00265D0;
  v17 = xmmword_1B00265E0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026600;
  v79 = xmmword_1B0026610;
  v76 = xmmword_1B0027140;
  v77 = xmmword_1B0027150;
  v74 = xmmword_1B0026640;
  v75 = xmmword_1B0026650;
  v72 = v9;
  v73 = xmmword_1B0026130;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B0026220;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B00277B0;
  v62 = (int64x2_t)xmmword_1B002A9C0;
  v63 = xmmword_1B002A9D0;
  v60 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v61 = xmmword_1B0026680;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026690;
  v19 = xmmword_1B00266A0;
  v16 = xmmword_1B00266B0;
  v17 = xmmword_1B00266C0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v64, &v62,
    0x3F6666663F666666,
    0,
    &v60,
    0,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B00266E0;
  v79 = xmmword_1B00266F0;
  v76 = xmmword_1B0026700;
  v77 = xmmword_1B0026710;
  v74 = xmmword_1B0026720;
  v75 = xmmword_1B0026730;
  v72 = xmmword_1B002A830;
  v73 = xmmword_1B0025E50;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = v9;
  v65 = xmmword_1B0027FF0;
  v62 = (int64x2_t)xmmword_1B0026050;
  v63 = xmmword_1B0025FA0;
  v60 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v61 = xmmword_1B0026740;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026750;
  v19 = xmmword_1B0026760;
  v16 = xmmword_1B0026770;
  v17 = xmmword_1B0026780;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v64, &v62,
    0x3F59999A3F59999ALL,
    0,
    &v60,
    665496235,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0026790;
  v79 = v9;
  v76 = xmmword_1B002A9E0;
  v77 = xmmword_1B00267B0;
  v74 = xmmword_1B0025F40;
  v75 = v9;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7D0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = xmmword_1B00267D0;
  v67 = xmmword_1B00267E0;
  v64 = xmmword_1B00267F0;
  v65 = xmmword_1B00278C0;
  v62 = (int64x2_t)xmmword_1B002AA00;
  v63 = xmmword_1B0025FA0;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = (int64x2_t)xmmword_1B0026800;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026810;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  __asm { FMOV            V0.2D, #0.25 }
  v18 = _Q0;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026820;
  v17 = xmmword_1B0025EA0;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  v78 = (int64x2_t)xmmword_1B0025DD0;
  v79 = xmmword_1B0025DE0;
  v76 = xmmword_1B0025DF0;
  v77 = xmmword_1B0025E00;
  v74 = xmmword_1B0025E10;
  v75 = xmmword_1B0025E20;
  v72 = xmmword_1B002A9F0;
  v73 = xmmword_1B002A7A0;
  v70 = v9;
  v71 = xmmword_1B0025E50;
  v68 = v9;
  v69 = v9;
  v66 = v9;
  v67 = v9;
  v64 = xmmword_1B002AA10;
  v65 = xmmword_1B0027740;
  v62 = (int64x2_t)xmmword_1B0025E80;
  v63 = v9;
  v60 = (int64x2_t)v9;
  v61 = xmmword_1B0025E90;
  v58 = v9;
  v59 = v9;
  v56 = v9;
  v57 = v9;
  v54 = v9;
  v55 = v9;
  v52 = v9;
  v53 = v9;
  v50 = v9;
  v51 = v9;
  v48 = v9;
  v49 = v9;
  v46 = v9;
  v47 = v9;
  v44 = v9;
  v45 = v9;
  v42 = v9;
  v43 = v9;
  v40 = v9;
  v41 = v9;
  v38 = v9;
  v39 = v9;
  v36 = v9;
  v37 = v9;
  v34 = v9;
  v35 = v9;
  v32 = v9;
  v33 = v9;
  v30 = v9;
  v31 = v9;
  v28 = v9;
  v29 = v9;
  v26 = v9;
  v27 = v9;
  v24 = v9;
  v25 = v9;
  v22 = v9;
  v23 = v9;
  v20 = v9;
  v21 = v9;
  v18 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026830;
  v17 = xmmword_1B0026840;
  v14 = v9;
  v15 = v9;
  v12 = v9;
  v13 = v9;
  v10 = v9;
  v11 = v9;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v78, &v76, &v74, &v72, &v70, &v68, &v66, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v64, &v62,
    0x3F8000003F000000,
    1045220557,
    &v60,
    1065353216,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    &v14,
    0,
    1097859072,
    &v12,
    (uint64_t)&v10);
  return v0;
}

uint64_t sub_1AFDBA474()
{
  uint64_t v0;
  int64x2_t v8;
  __int128 v9;
  int64x2_t v10;
  int64x2_t v11;
  int64x2_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  int64x2_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int64x2_t v82;
  __int128 v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v11 = vdupq_n_s64(0x3FD7575760000000uLL);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  __asm { FMOV            V1.2D, #1.0 }
  v74 = _Q1;
  v75 = xmmword_1B0025E50;
  v72 = _Q1;
  v73 = _Q1;
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = xmmword_1B0025E50;
  v66 = (int64x2_t)xmmword_1B0025E80;
  v67 = _Q1;
  v64 = (int64x2_t)_Q1;
  v65 = xmmword_1B0025E90;
  v62 = _Q1;
  v63 = _Q1;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v13 = _Q1;
  v10 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = _Q1;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1092616192,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = (int64x2_t)xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B00268C0;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B00268D0;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1092616192,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v80 = xmmword_1B0025F20;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B0025F40;
  v79 = v13;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = xmmword_1B0033C10;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B002B1D0;
  v69 = xmmword_1B0027840;
  v66 = (int64x2_t)xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026920;
  v19 = v13;
  v16 = xmmword_1B0027950;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026950;
  v15 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1092616192,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025FE0;
  v83 = v13;
  v80 = xmmword_1B0025FF0;
  v81 = xmmword_1B0026000;
  v78 = xmmword_1B0026010;
  v79 = xmmword_1B0026020;
  v76 = xmmword_1B0026030;
  v77 = xmmword_1B0026040;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = (int64x2_t)xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026080;
  v23 = xmmword_1B0026090;
  v20 = xmmword_1B00260A0;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027960;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1106247680,
    1101004800,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B002A820;
  v83 = xmmword_1B00260D0;
  v80 = xmmword_1B00260E0;
  v81 = xmmword_1B00260F0;
  v78 = xmmword_1B0026100;
  v79 = xmmword_1B0026110;
  v76 = xmmword_1B002A830;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026150;
  v69 = xmmword_1B002A840;
  v66 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026180;
  v23 = xmmword_1B0026190;
  v20 = xmmword_1B00261A0;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0027970;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B00269D0;
  v15 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B002A850;
  v83 = xmmword_1B00261D0;
  v80 = xmmword_1B002BF40;
  v81 = xmmword_1B002BF50;
  v78 = xmmword_1B0026200;
  v79 = xmmword_1B0026210;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0027040;
  v69 = xmmword_1B002A870;
  v66 = (int64x2_t)xmmword_1B002A880;
  v67 = xmmword_1B002A890;
  v64 = (int64x2_t)xmmword_1B0026260;
  v65 = xmmword_1B0026270;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026280;
  v23 = xmmword_1B0026290;
  v20 = xmmword_1B00262A0;
  v21 = xmmword_1B0026290;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027980;
  v17 = xmmword_1B00267B0;
  v14 = xmmword_1B0026A10;
  v15 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v12 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B002BF60;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00262E0;
  v79 = xmmword_1B0027420;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B00277B0;
  v66 = (int64x2_t)xmmword_1B002A8B0;
  v67 = xmmword_1B002A8C0;
  v64 = (int64x2_t)xmmword_1B0026320;
  v65 = xmmword_1B0027440;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026340;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026350;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A30;
  v17 = xmmword_1B0026A40;
  v14 = xmmword_1B0026A50;
  v15 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B002BF70;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0027FF0;
  v66 = (int64x2_t)xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B002BF80;
  v23 = xmmword_1B002BF90;
  v20 = xmmword_1B002BF80;
  v21 = xmmword_1B002BFA0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A70;
  v17 = xmmword_1B0026A80;
  v14 = xmmword_1B0026A90;
  v15 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B002BF70;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B00277B0;
  v66 = (int64x2_t)xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B002BFB0;
  v23 = xmmword_1B002BFC0;
  v20 = xmmword_1B002BFB0;
  v21 = xmmword_1B002BFD0;
  v18 = v13;
  v19 = v13;
  __asm { FMOV            V0.2D, #0.5 }
  v9 = _Q0;
  v16 = _Q0;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AC0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B002BF70;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B002A8D0;
  v66 = (int64x2_t)xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B002BFB0;
  v23 = xmmword_1B002BFC0;
  v20 = xmmword_1B002BFB0;
  v21 = xmmword_1B002BFD0;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AE0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v12;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B002BFE0;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0027FF0;
  v66 = (int64x2_t)v13;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B002BF80;
  v23 = xmmword_1B002BF90;
  v20 = xmmword_1B002BF80;
  v21 = xmmword_1B002BFA0;
  v18 = v13;
  v19 = v13;
  v16 = v9;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AF0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 1.1967e-26, 0.75, 0.9, 0.85, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v83 = xmmword_1B002A8E0;
  v80 = xmmword_1B002BFF0;
  v81 = xmmword_1B0025FA0;
  v78 = xmmword_1B002A900;
  v79 = xmmword_1B002A910;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B00277B0;
  v66 = (int64x2_t)xmmword_1B002A920;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v65 = xmmword_1B00264D0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00264E0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0027990;
  v17 = xmmword_1B0026C70;
  v14 = xmmword_1B0026B20;
  v15 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.85, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B002A940;
  v83 = xmmword_1B0027B30;
  v80 = xmmword_1B002A950;
  v81 = xmmword_1B002A960;
  v78 = xmmword_1B002A970;
  v79 = xmmword_1B002A980;
  v76 = v13;
  v77 = v13;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026560;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0027FF0;
  v66 = (int64x2_t)xmmword_1B002A990;
  v67 = xmmword_1B002A9A0;
  v64 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v65 = xmmword_1B00265A0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B00265B0;
  v23 = xmmword_1B00265C0;
  v20 = xmmword_1B00265D0;
  v21 = xmmword_1B00265E0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B00279A0;
  v17 = xmmword_1B0026C20;
  v14 = xmmword_1B0026B60;
  v15 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026600;
  v83 = xmmword_1B0026610;
  v80 = xmmword_1B0027140;
  v81 = xmmword_1B0027150;
  v78 = xmmword_1B0026640;
  v79 = xmmword_1B0026650;
  v76 = v13;
  v77 = xmmword_1B0026130;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026220;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B00277B0;
  v66 = (int64x2_t)xmmword_1B002A9C0;
  v67 = xmmword_1B002A9D0;
  v64 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v65 = xmmword_1B0026680;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026690;
  v23 = xmmword_1B00266A0;
  v20 = xmmword_1B00266B0;
  v21 = xmmword_1B00266C0;
  v18 = xmmword_1B0026B80;
  v19 = xmmword_1B0026B90;
  v16 = xmmword_1B00279B0;
  v17 = xmmword_1B00279C0;
  v14 = xmmword_1B0026BC0;
  v15 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00266E0;
  v83 = xmmword_1B00266F0;
  v80 = xmmword_1B0026700;
  v81 = xmmword_1B0026710;
  v78 = xmmword_1B0026720;
  v79 = xmmword_1B0026730;
  v76 = xmmword_1B002A830;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0027FF0;
  v66 = (int64x2_t)xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v65 = xmmword_1B0026740;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026750;
  v23 = xmmword_1B0026760;
  v20 = xmmword_1B0026770;
  v21 = xmmword_1B0026780;
  v18 = xmmword_1B0026BE0;
  v19 = xmmword_1B0026BF0;
  v16 = xmmword_1B00279D0;
  v17 = xmmword_1B00279E0;
  v14 = xmmword_1B0026C10;
  v15 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    665496235,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v79 = v13;
  v80 = xmmword_1B0025F20;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B0025F40;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = xmmword_1B0033C10;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B002B1D0;
  v69 = xmmword_1B0027840;
  v66 = (int64x2_t)xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026C30;
  v19 = v13;
  v16 = xmmword_1B00279F0;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026C60;
  v15 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1092616192,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = (int64x2_t)xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026C80;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026C90;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1092616192,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = v13;
  v75 = xmmword_1B0025E50;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = (int64x2_t)xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v10;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1045220557,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1092616192,
    &v16,
    (uint64_t)&v14);
  return v0;
}

void WeatherForecastDescriptionStringBuilder.feelsLikeStringBuilder.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_19_60(v0, v1, (uint64_t *)&unk_1ED1F1928);
  OUTLINED_FUNCTION_5_6();
}

void WeatherForecastDescriptionStringBuilder.feelsLikeStringBuilder.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_16_76(v0, v1, (uint64_t *)&unk_1ED1F1928);
  swift_endAccess();
  OUTLINED_FUNCTION_5_6();
}

uint64_t (*WeatherForecastDescriptionStringBuilder.feelsLikeStringBuilder.modify())()
{
  OUTLINED_FUNCTION_4_12();
  return j_j__swift_endAccess;
}

void WeatherForecastDescriptionStringBuilder.historicalFactDescriptionBuilder.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_19_60(v0, v1, &qword_1ED1F1E48);
  OUTLINED_FUNCTION_5_6();
}

void WeatherForecastDescriptionStringBuilder.historicalFactDescriptionBuilder.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_16_76(v0, v1, &qword_1ED1F1E48);
  swift_endAccess();
  OUTLINED_FUNCTION_5_6();
}

uint64_t (*WeatherForecastDescriptionStringBuilder.historicalFactDescriptionBuilder.modify())()
{
  OUTLINED_FUNCTION_4_12();
  return j__swift_endAccess;
}

void WeatherForecastDescriptionStringBuilder.__allocating_init()()
{
  OUTLINED_FUNCTION_20();
  WeatherForecastDescriptionStringBuilder.init()();
  OUTLINED_FUNCTION_0();
}

void WeatherForecastDescriptionStringBuilder.buildWeatherDescription(from:hourlyForecast:dailyForecast:weatherChanges:historicalFacts:timeZone:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, __n128 *a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 *v50;
  uint64_t v51;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v8 = v6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4458);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_104_0();
  v54 = sub_1B0005E84();
  v14 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_9();
  v17 = v16 - v15;
  __swift_project_boxed_opaque_existential_1(v6 + 7, v6[10]);
  v18 = sub_1AFAF95FC(a1, a2);
  if (v19)
  {
    v20 = v18;
    v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B00275C0;
    *(_QWORD *)(inited + 32) = v20;
    *(_QWORD *)(inited + 40) = v21;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_14_89();
    OUTLINED_FUNCTION_6_94();
    v24 = v23;
    v26 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a6->n128_u64[0] = a1;
    a6->n128_u64[1] = v20;
    a6[1].n128_u64[0] = v24;
    a6[1].n128_u64[1] = v26;
  }
  else
  {
    v51 = a1;
    v50 = a6;
    sub_1AFAF2558(a4, v7, &qword_1ED1F4458);
    if (__swift_getEnumTagSinglePayload(v7, 1, v54) == 1)
    {
      sub_1AFACB308(v7, &qword_1ED1F4458);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v7, v54);
      __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
      v27 = sub_1AFE71C3C(a3, v17, a5, 1, 0);
      if (v28)
      {
        v29 = v27;
        v30 = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F1E78);
        v31 = swift_initStackObject();
        *(_OWORD *)(v31 + 16) = xmmword_1B00275C0;
        *(_QWORD *)(v31 + 32) = v29;
        *(_QWORD *)(v31 + 40) = v30;
        *(_QWORD *)(v31 + 48) = 0;
        *(_QWORD *)(v31 + 56) = 0;
        *(_BYTE *)(v31 + 64) = 1;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_14_89();
        OUTLINED_FUNCTION_6_94();
        v33 = v32;
        v35 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_9_94();
        a6->n128_u64[0] = v29;
        a6->n128_u64[1] = a3;
        a6[1].n128_u64[0] = v33;
        a6[1].n128_u64[1] = v35;
        goto LABEL_14;
      }
      OUTLINED_FUNCTION_9_94();
    }
    OUTLINED_FUNCTION_1_2();
    v49 = a2;
    if (v6[25])
    {
      sub_1AFD8DD20((uint64_t)(v6 + 22), (uint64_t)&v55);
      v36 = v58;
      v37 = v59;
      __swift_project_boxed_opaque_existential_1(&v55, v58);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8))(&v60, v51, a2, a5, v36, v37);
      v38 = a5;
      v39 = v60;
      v40 = v61;
      v41 = v62;
      v42 = v63;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
    }
    else
    {
      v39 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v38 = a5;
    }
    v43 = v6[15];
    v44 = v6[16];
    __swift_project_boxed_opaque_existential_1(v6 + 12, v43);
    v60 = v39;
    v61 = v40;
    v62 = v41;
    v63 = v42;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v44 + 8))(&v55, v51, v49, &v60, v38, v43, v44);
    v45 = v56;
    if (v56)
    {
      v47 = v57;
      v46 = v58;
      v48 = v55;
      OUTLINED_FUNCTION_7_90();
      v50->n128_u64[0] = v48;
      v50->n128_u64[1] = v45;
      v50[1].n128_u64[0] = v47;
      v50[1].n128_u64[1] = v46;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v8 + 17, v8[20]);
      v55 = v39;
      v56 = v40;
      v57 = v41;
      v58 = v42;
      sub_1AFC4DA28(v51, v49, &v55, v38, v50);
      OUTLINED_FUNCTION_7_90();
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_2_3();
}

void WeatherForecastDescriptionStringBuilder.buildWeatherDescription(from:hourlyForecast:dailyForecast:weatherChanges:timeZone:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, __n128 *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EC440);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9();
  v15 = v14 - v13;
  v16 = sub_1B00061FC();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  WeatherForecastDescriptionStringBuilder.buildWeatherDescription(from:hourlyForecast:dailyForecast:weatherChanges:historicalFacts:timeZone:)(a1, a2, a3, a4, a5, a6);
  sub_1AFACB308(v15, &qword_1ED1EC440);
  OUTLINED_FUNCTION_2_3();
}

uint64_t WeatherForecastDescriptionStringBuilder.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1AFACB308(v0 + 176, (uint64_t *)&unk_1ED1F1928);
  sub_1AFACB308(v0 + 216, &qword_1ED1F1E48);
  return v0;
}

uint64_t WeatherForecastDescriptionStringBuilder.__deallocating_deinit()
{
  WeatherForecastDescriptionStringBuilder.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AFDBE03C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t method lookup function for WeatherForecastDescriptionStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherForecastDescriptionStringBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1AFDBE080(uint64_t TupleTypeMetadata, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v5 = (uint64_t *)TupleTypeMetadata;
  v6 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    v7 = *v6;
  }
  else
  {
    v3 = (char *)&v22;
    MEMORY[0x1E0C80A78](TupleTypeMetadata);
    OUTLINED_FUNCTION_9();
    v10 = (_QWORD *)(v9 - v8);
    if (a2)
    {
      v11 = v6;
      v12 = v10;
      v13 = a2;
      do
      {
        v14 = *v11++;
        *v12++ = v14;
        --v13;
      }
      while (v13);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v7 = TupleTypeMetadata;
  }
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  OUTLINED_FUNCTION_4_4();
  if (a2)
  {
    v15 = (int *)(v7 + 32);
    v16 = a2;
    do
    {
      if (a2 == 1)
        v17 = 0;
      else
        v17 = *v15;
      v19 = *v6++;
      v18 = v19;
      v20 = *v5++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(&v3[v17], v20);
      v15 += 4;
      --v16;
    }
    while (v16);
  }
  return sub_1B0008344();
}

void SimpleRectangularContentView.status.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SimpleRectangularContentView(0);
  sub_1AFAF2DFC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationDataStatus);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for SimpleRectangularContentView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE74048);
}

void SimpleRectangularContentView.init(status:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C78);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for SimpleRectangularContentView(0);
  sub_1AFAF2984(a1, (uint64_t)a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationDataStatus);
  OUTLINED_FUNCTION_0();
}

void SimpleRectangularContentView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  ValueMetadata *v33;
  __int128 v34;
  uint64_t v35;

  v32 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73FD0);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE73FD8);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9();
  v10 = v9 - v8;
  v11 = type metadata accessor for SimpleRectangularContentView.Content(0);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_9();
  v15 = v14 - v13;
  OUTLINED_FUNCTION_27_56();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_92_0();
  v17 = type metadata accessor for ConditionsComplicationViewModel();
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v29 - v22;
  v24 = type metadata accessor for SimpleRectangularContentView(0);
  sub_1AFAF2DFC(v1 + *(int *)(v24 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationDataStatus);
  if (__swift_getEnumTagSinglePayload(v2, 2, v17))
  {
    v25 = v31;
    sub_1AFAE2D74(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationDataStatus);
    if (qword_1EEE70148 != -1)
      swift_once();
    LOBYTE(v33) = 0;
    v34 = xmmword_1EEE72F20;
    v35 = qword_1EEE72F30;
    v26 = sub_1AFDC15AC();
    sub_1B0007E28();
    v27 = v30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v10, v6, v25);
    swift_storeEnumTagMultiPayload();
    sub_1AFADA43C(&qword_1EEE73FE8, (void (*)(uint64_t))type metadata accessor for SimpleRectangularContentView.Content);
    v33 = &type metadata for SimpleRectangularContentView.Placeholder;
    *(_QWORD *)&v34 = v26;
    OUTLINED_FUNCTION_2_30();
    sub_1B0007918();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v6, v25);
  }
  else
  {
    sub_1AFAF2984(v2, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationViewModel);
    sub_1AFAF2DFC((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationViewModel);
    *(_QWORD *)v15 = swift_getKeyPath();
    *(_BYTE *)(v15 + 8) = 0;
    sub_1AFAF2984((uint64_t)v20, v15 + *(int *)(v11 + 20), (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationViewModel);
    sub_1AFAF2DFC(v15, v10, type metadata accessor for SimpleRectangularContentView.Content);
    swift_storeEnumTagMultiPayload();
    sub_1AFADA43C(&qword_1EEE73FE8, (void (*)(uint64_t))type metadata accessor for SimpleRectangularContentView.Content);
    v28 = sub_1AFDC15AC();
    v33 = &type metadata for SimpleRectangularContentView.Placeholder;
    *(_QWORD *)&v34 = v28;
    OUTLINED_FUNCTION_2_30();
    sub_1B0007918();
    sub_1AFAE2D74(v15, type metadata accessor for SimpleRectangularContentView.Content);
    sub_1AFAE2D74((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ConditionsComplicationViewModel);
  }
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFDBE598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String_optional v12;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t (*v33)@<X0>(uint64_t@<X8>);
  uint64_t v34;
  __int128 v35;

  v2 = v1;
  v24 = a1;
  v3 = sub_1B0007A20();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SimpleRectangularContentView.Content(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(v9 + 20);
  v11 = type metadata accessor for ConditionsComplicationViewModel();
  v12 = WeatherCondition.conditionIconName(isDaytime:isFilled:)(*(_BYTE *)(v10 + *(int *)(v11 + 28)), 1);
  if (v12.value._object)
    countAndFlagsBits = v12.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0x2E78616D2E6E7573;
  if (v12.value._object)
    object = v12.value._object;
  else
    object = (void *)0xEC0000006C6C6966;
  sub_1AFAF2DFC(v1, (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SimpleRectangularContentView.Content);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v8, v16 + v15, type metadata accessor for SimpleRectangularContentView.Content);
  v17 = (uint64_t *)(v16 + ((v15 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v17 = countAndFlagsBits;
  v17[1] = (uint64_t)object;
  v17[2] = MEMORY[0x1E0DEE9D8];
  sub_1AFAF2DFC(v1, (uint64_t)v8, type metadata accessor for SimpleRectangularContentView.Content);
  v18 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v8, v18 + v15, type metadata accessor for SimpleRectangularContentView.Content);
  KeyPath = swift_getKeyPath();
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = sub_1AFDC24FC;
  v32 = v16;
  v33 = sub_1AFDC25E4;
  v34 = v18;
  v35 = xmmword_1B0038C50;
  v19 = v21;
  sub_1B0007A14();
  v25 = v2;
  sub_1B00082E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74158);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74140);
  sub_1AFB23DC0(&qword_1EEE74160, &qword_1EEE74158);
  sub_1AFDC2474();
  sub_1B0007EE8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v23);
  sub_1AFBB4D8C(KeyPath, v27, v28, v29, v30);
  swift_release();
  return swift_release();
}

uint64_t sub_1AFDBE85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  double (*v43)(_QWORD, double);
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  char v48;
  uint64_t v49;

  v33 = a2;
  v38 = a5;
  v8 = sub_1B00079D8();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SimpleRectangularContentView.Content(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74178);
  v16 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  v37 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(v11 + 20);
  v32 = a1;
  v20 = a1 + v19 + *(int *)(type metadata accessor for ConditionsComplicationViewModel() + 32);
  LOBYTE(v20) = *(double *)(v20 + *(int *)(type metadata accessor for WeatherConditionGradientModel() + 20)) > 0.0;
  sub_1AFAF2DFC(a1, (uint64_t)v14, type metadata accessor for SimpleRectangularContentView.Content);
  v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  sub_1AFAF2984((uint64_t)v14, v23 + v21, type metadata accessor for SimpleRectangularContentView.Content);
  v24 = (_QWORD *)(v23 + v22);
  *v24 = v33;
  v24[1] = a3;
  v24[2] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_1B0007C54();
  KeyPath = swift_getKeyPath();
  LOWORD(v42) = 0;
  BYTE2(v42) = v20;
  v43 = GEOLocationCoordinate2DMake;
  v44 = 0;
  v45 = 0;
  v46 = sub_1AFDC276C;
  v47 = v23;
  v48 = 0;
  v49 = v25;
  sub_1B00079B4();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74180);
  sub_1AFB23DC0(qword_1EEE74188, &qword_1EEE74180);
  v28 = v27;
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  sub_1AFACCD50(KeyPath, v42);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  KeyPath = sub_1AFDBEEDC();
  v42 = v29;
  v39 = v26;
  v40 = v28;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  v30 = v36;
  sub_1B0007EC4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v18, v30);
}

uint64_t sub_1AFDBEB5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72090);
  sub_1AFCAB5CC();
  return sub_1B0008104();
}

uint64_t sub_1AFDBEBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = a1 + *(int *)(type metadata accessor for SimpleRectangularContentView.Content(0) + 20);
  v4 = *(_QWORD *)(v3 + 8) == 0x65772D6C61636F6CLL && *(_QWORD *)(v3 + 16) == 0xED00007265687461;
  if ((v4 || (sub_1B0008FB0() & 1) != 0) && qword_1EEE70008 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_1AFAF9424();
  result = sub_1B0007D5C();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1AFDBECEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72080);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B00080E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0D18);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B0008098();
  sub_1B0007834();
  v12 = sub_1B000784C();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
  v13 = sub_1B00080C8();
  swift_release();
  sub_1AFACE0DC((uint64_t)v11, &qword_1ED1F0D18);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CDF7D0], v5);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 28), v8, v5);
  *v4 = KeyPath;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72090);
  sub_1AFD23AF4((uint64_t)v4, (uint64_t)a1 + *(int *)(v15 + 36));
  *a1 = v13;
  swift_retain();
  sub_1AFACE0DC((uint64_t)v4, &qword_1EEE72080);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1AFDBEEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = v0 + *(int *)(type metadata accessor for SimpleRectangularContentView.Content(0) + 20);
  type metadata accessor for ConditionsComplicationViewModel();
  v2 = sub_1B0005F44();
  v4 = v3;
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v5 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B00275A0;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1AFAFB1D0();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v4;
  v9 = *(_QWORD *)(v1 + 8);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = v9 == 0x65772D6C61636F6CLL && v10 == 0xED00007265687461;
  if (v11 || (sub_1B0008FB0() & 1) != 0)
  {
    if (qword_1EEE70008 != -1)
      swift_once();
    v9 = qword_1EEE920A0;
    v10 = *(_QWORD *)algn_1EEE920A8;
  }
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 72) = v9;
  *(_QWORD *)(v6 + 80) = v10;
  v12 = sub_1B00085A8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1AFDBF108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v39 = a1;
  v1 = sub_1B00079D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74168);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SimpleRectangularContentView.Content(0);
  sub_1AFC4AE54();
  v9 = v8;
  v11 = v10;
  sub_1AFC4ACEC();
  v13 = v12;
  v15 = v14;
  sub_1AFC4ADA0();
  v44 = v9;
  v45 = v11;
  v46 = v13;
  v47 = v15;
  v48 = v16;
  v49 = v17;
  sub_1B00079B4();
  v18 = sub_1AFDC2628();
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED1F46A8 != -1)
    swift_once();
  swift_beginAccess();
  v19 = (id)qword_1ED1F4470;
  sub_1B00054B8();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B002B5A0;
  sub_1AFC4AE54();
  v22 = v21;
  v24 = v23;
  v25 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  v26 = sub_1AFAFB1D0();
  *(_QWORD *)(v20 + 64) = v26;
  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  sub_1AFC4ACEC();
  *(_QWORD *)(v20 + 96) = v25;
  *(_QWORD *)(v20 + 104) = v26;
  *(_QWORD *)(v20 + 72) = v27;
  *(_QWORD *)(v20 + 80) = v28;
  sub_1AFC4ADA0();
  *(_QWORD *)(v20 + 136) = v25;
  *(_QWORD *)(v20 + 144) = v26;
  *(_QWORD *)(v20 + 112) = v29;
  *(_QWORD *)(v20 + 120) = v30;
  v31 = sub_1B00085A8();
  v33 = v32;
  swift_bridgeObjectRelease();
  v42 = v31;
  v43 = v33;
  v40 = &type metadata for SimpleRectangularContentView.TemperatureAndRangeView;
  v41 = v18;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  v34 = v38;
  sub_1B0007EC4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v34);
}

uint64_t sub_1AFDBF3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for SimpleRectangularContentView.Content(0) + 20);
  v8 = type metadata accessor for ConditionsComplicationViewModel();
  sub_1AFAF2DFC(v7 + *(int *)(v8 + 32), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WeatherConditionGradientModel);
  v9 = type metadata accessor for WeatherConditionGradientModel();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v9);
  RectangularWidgetBackground.init(model:)((uint64_t)v6, (uint64_t)&v14);
  v10 = v14;
  v11 = v15;
  sub_1B0007FD8();
  v12 = sub_1B0008014();
  swift_release();
  result = sub_1B0007AD4();
  *(_QWORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = result;
  return result;
}

void sub_1AFDBF504(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  double (*v42)@<D0>(uint64_t@<X8>);
  uint64_t v43;
  uint64_t (*v44)@<X0>(_QWORD *@<X8>);
  uint64_t v45;
  __int128 v46;

  v34 = a1;
  v30 = sub_1B00079D8();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B0007A20();
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74120);
  v25 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74128);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74130);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0;
  if (*v1 == 1)
  {
    if (qword_1EEE70010 != -1)
      swift_once();
    v10 = qword_1EEE920B0;
    v11 = *(_QWORD *)algn_1EEE920B8;
    swift_bridgeObjectRetain();
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  KeyPath = swift_getKeyPath();
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v42 = sub_1AFDC2468;
  v43 = v12;
  v44 = sub_1AFDBFA08;
  v45 = 0;
  v46 = xmmword_1B0038C50;
  sub_1B0007A14();
  sub_1B00082E4();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74138);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74140);
  sub_1AFB23DC0(&qword_1EEE74148, &qword_1EEE74138);
  v16 = v15;
  v22 = sub_1AFDC2474();
  sub_1B0007EE8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  sub_1AFBB4D8C(KeyPath, v38, v39, v40, v41);
  swift_release();
  swift_release();
  sub_1B00079B4();
  KeyPath = v13;
  v38 = v14;
  v39 = v16;
  v40 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v18 = v27;
  v19 = v26;
  sub_1B0007EF4();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v30);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v19);
  if (qword_1EEE6FFE8 != -1)
    swift_once();
  KeyPath = qword_1EEE92060;
  v38 = *(_QWORD *)algn_1EEE92068;
  v35 = v19;
  v36 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1AFAF9424();
  v21 = v31;
  v20 = (uint64_t)v32;
  sub_1B0007EC4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v21);
  if (qword_1EEE6FFF0 != -1)
    swift_once();
  KeyPath = qword_1EEE92070;
  v38 = *(_QWORD *)algn_1EEE92078;
  sub_1B00074EC();
  sub_1AFACE0DC(v20, &qword_1EEE74130);
}

double sub_1AFDBF988@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_bridgeObjectRetain();
  v6 = sub_1B0007C54();
  sub_1B0007FD8();
  v7 = sub_1B0008014();
  swift_release();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  result = 5.0;
  *(_OWORD *)(a3 + 32) = xmmword_1B0029820;
  *(_QWORD *)(a3 + 48) = 0x4000000000000000;
  return result;
}

uint64_t sub_1AFDBFA08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEE70018 != -1)
    swift_once();
  v3 = qword_1EEE920C0;
  v2 = *(_QWORD *)algn_1EEE920C8;
  *a1 = qword_1EEE920C0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v2;
  a1[4] = v3;
  a1[5] = v2;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AFDBFA6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EE928);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WeatherConditionGradientModel();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  RectangularWidgetBackground.init(model:)((uint64_t)v4, (uint64_t)&v10);
  v6 = v10;
  v7 = v11;
  sub_1B0007FD8();
  v8 = sub_1B0008014();
  swift_release();
  result = sub_1B0007AD4();
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1AFDBFB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[2];

  v21 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  sub_1B00074F8();
  v4 = *(_QWORD *)(a1 + 24);
  sub_1B00074F8();
  swift_getTupleTypeMetadata3();
  v5 = sub_1B0008338();
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CE0680], v5);
  v6 = sub_1B00081F4();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - v7;
  v9 = sub_1B00074F8();
  v19 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - v13;
  sub_1B000781C();
  v22 = v3;
  v23 = v4;
  v24 = *(_OWORD *)(a1 + 32);
  v25 = v20;
  sub_1B00081E8();
  sub_1AFDC015C();
  v15 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDFCC0], v6);
  sub_1B0007F3C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  v26[0] = v15;
  v26[1] = MEMORY[0x1E0CD9758];
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v9, v26);
  sub_1AFC5FAC8((uint64_t)v11, v9, (uint64_t)v14);
  v16 = *(void (**)(char *, uint64_t))(v19 + 8);
  v16(v11, v9);
  sub_1AFC5DB5C((uint64_t)v14, v9, v21);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v9);
}

uint64_t sub_1AFDBFDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  char v54;
  _QWORD v55[3];
  _QWORD v56[2];
  _QWORD v57[3];

  v47 = a5;
  v48 = a6;
  v45 = *(_QWORD *)(a3 - 8);
  v43 = a3;
  MEMORY[0x1E0C80A78](a1);
  v42 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B00074F8();
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v44 = (uint64_t)&v37 - v14;
  v15 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1B00074F8();
  v39 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v38 = (uint64_t)&v37 - v24;
  (*(void (**)(__n128))(a1 + 40))(v23);
  sub_1B0007F24();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, a2);
  v57[0] = a4;
  v57[1] = MEMORY[0x1E0CD90E0];
  v40 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v19, v57);
  v25 = v38;
  sub_1AFC5FAC8((uint64_t)v21, v19, v38);
  v26 = v39;
  v41 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
  v27 = v41(v21, v19);
  v28 = v42;
  (*(void (**)(uint64_t))(a1 + 56))(v27);
  v29 = v43;
  v30 = v47;
  sub_1B0007F24();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v29);
  v56[0] = v30;
  v56[1] = MEMORY[0x1E0CD90E0];
  v31 = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v10, v56);
  v32 = v44;
  sub_1AFC5FAC8((uint64_t)v12, v10, v44);
  v33 = v46;
  v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v12, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v21, v25, v19);
  v53 = 0;
  v54 = 1;
  v55[0] = v21;
  v55[1] = &v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v12, v32, v10);
  v55[2] = v12;
  v52[0] = v19;
  v52[1] = MEMORY[0x1E0CDFC10];
  v52[2] = v10;
  v49 = v40;
  v50 = MEMORY[0x1E0CDFBE8];
  v51 = v31;
  sub_1AFDBE080((uint64_t)v55, 3, (uint64_t)v52);
  v34((char *)v32, v10);
  v35 = v41;
  v41((char *)v25, v19);
  v34(v12, v10);
  return v35(v21, v19);
}

double sub_1AFDC015C()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[2];
  char v4;
  _BYTE v5[40];

  v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v4 = *(_BYTE *)(v0 + 32);
  sub_1AFDC2F60((uint64_t)v3, (uint64_t)v5);
  sub_1AFDC2FA8((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AFBB61A0);
  sub_1AFC33F20();
  sub_1AFDC2FA8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AFBB4D8C);
  sub_1AFDC2FA8((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AFBB61A0);
  sub_1AFC33F20();
  sub_1AFDC2FA8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AFBB4D8C);
  return 0.0;
}

uint64_t sub_1AFDC0210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE __dst[88];

  memcpy(__dst, v2, sizeof(__dst));
  return sub_1AFDBFB40(a1, a2);
}

__n128 sub_1AFDC0260@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v3 = sub_1B0007A98();
  sub_1AFDC02CC(v1, &v10);
  v4 = v10;
  v5 = v12;
  v6 = v13;
  v7 = v15;
  result = v11;
  v9 = v14;
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = v7;
  return result;
}

uint64_t sub_1AFDC02CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v5 = *a1;
  v4 = a1[1];
  v6 = *((_OWORD *)a1 + 1);
  v12 = *((_OWORD *)a1 + 2);
  v13 = v6;
  v7 = (_OWORD *)swift_allocObject();
  v8 = *((_OWORD *)a1 + 1);
  v7[1] = *(_OWORD *)a1;
  v7[2] = v8;
  v7[3] = *((_OWORD *)a1 + 2);
  v9 = (_OWORD *)swift_allocObject();
  v10 = *((_OWORD *)a1 + 1);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v10;
  v9[3] = *((_OWORD *)a1 + 2);
  *a2 = v5;
  a2[1] = v4;
  a2[2] = sub_1AFDC2FE0;
  a2[3] = v7;
  a2[4] = v5;
  a2[5] = v4;
  a2[6] = sub_1AFDC3020;
  a2[7] = v9;
  swift_bridgeObjectRetain_n();
  sub_1AFBB71B4((uint64_t)&v13);
  sub_1AFBB71B4((uint64_t)&v12);
  swift_bridgeObjectRetain();
  sub_1AFBB71B4((uint64_t)&v13);
  return sub_1AFBB71B4((uint64_t)&v12);
}

uint64_t sub_1AFDC03B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1AFDC0408(v3, v4, v5, v6, a2);
}

uint64_t sub_1AFDC0408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v25 = a4;
  v9 = sub_1B0007B40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B0007C60();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
  swift_storeEnumTagMultiPayload();
  v17 = (int *)type metadata accessor for SimpleRectangularContentView.RangeView(0);
  v18 = (uint64_t *)((char *)a5 + v17[5]);
  *v18 = a1;
  v18[1] = a2;
  v19 = (uint64_t *)((char *)a5 + v17[6]);
  v20 = v25;
  *v19 = a3;
  v19[1] = v20;
  v21 = v17[7];
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0CDD7A0], v13);
  sub_1B0007B34();
  sub_1B0007BB8();
  sub_1B0007BE8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v22 = sub_1B0007B1C();
  result = swift_release();
  *(uint64_t *)((char *)a5 + v21) = v22;
  return result;
}

double sub_1AFDC0598@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AFDC0610(v3, v4, v5, v6, v9);
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a2 = v9[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

uint64_t sub_1AFDC0610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a3;
  v21 = a4;
  v8 = sub_1B0007B40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B0007C60();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, *MEMORY[0x1E0CDD7A0], v12, v14);
  sub_1B0007B34();
  sub_1B0007BB8();
  sub_1B0007BE8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v17 = sub_1B0007B1C();
  result = swift_release();
  *a5 = a1;
  a5[1] = a2;
  v19 = v21;
  a5[2] = v20;
  a5[3] = v19;
  a5[4] = v17;
  return result;
}

double sub_1AFDC0758@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1AFDC0260(a1).n128_u64[0];
  return result;
}

double sub_1AFDC0790@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[2];
  char v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  _BYTE v40[7];
  _BYTE v41[7];
  _DWORD v42[3];

  v3 = sub_1B00077EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1B0007828();
  sub_1AFDC0994(v1, (uint64_t)v30);
  v24 = v30[1];
  v25 = v30[0];
  v7 = v31;
  v28 = v32;
  v27 = v33;
  v8 = v34;
  v29 = v35;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SimpleRectangularContentView.RangeView(0) + 28));
  KeyPath = swift_getKeyPath();
  v22 = swift_getKeyPath();
  v39 = 0;
  v38 = v7;
  v37 = v8;
  v36 = 0;
  v21 = swift_getKeyPath();
  v10 = v39;
  v11 = v38;
  v12 = v37;
  v13 = v36;
  swift_retain();
  sub_1AFC3421C();
  sub_1AFF06718();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)a1 = v26;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 17) = v30[0];
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)v30 + 3);
  v16 = v24;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = v11;
  *(_DWORD *)(a1 + 41) = v42[0];
  *(_DWORD *)(a1 + 44) = *(_DWORD *)((char *)v42 + 3);
  result = *(double *)&v28;
  *(_OWORD *)(a1 + 48) = v28;
  *(_QWORD *)(a1 + 64) = v27;
  *(_BYTE *)(a1 + 72) = v12;
  LODWORD(v16) = *(_DWORD *)v41;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v41[3];
  *(_DWORD *)(a1 + 73) = v16;
  v18 = KeyPath;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v18;
  v19 = v22;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = v13;
  *(_DWORD *)(a1 + 121) = *(_DWORD *)v40;
  *(_DWORD *)(a1 + 124) = *(_DWORD *)&v40[3];
  *(_QWORD *)(a1 + 128) = v21;
  *(_QWORD *)(a1 + 136) = 0x3FE6666666666666;
  *(_QWORD *)(a1 + 144) = v15;
  return result;
}

uint64_t sub_1AFDC0994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;

  if (qword_1EEE6FFF8 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BC8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B00275C0;
  v5 = type metadata accessor for SimpleRectangularContentView.RangeView(0);
  v6 = (uint64_t *)(a1 + *(int *)(v5 + 20));
  v7 = *v6;
  v8 = v6[1];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1AFAFB1D0();
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B00085A8();
  swift_bridgeObjectRelease();
  if (qword_1EEE70000 != -1)
    swift_once();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B00275C0;
  v11 = (uint64_t *)(a1 + *(int *)(v5 + 24));
  v12 = *v11;
  v13 = v11[1];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = v9;
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B00085A8();
  swift_bridgeObjectRelease();
  sub_1AFAF9424();
  v14 = sub_1B0007D5C();
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = sub_1B0007D5C();
  v23 = v22;
  v25 = v24 & 1;
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v24 & 1;
  *(_QWORD *)(a2 + 56) = v26;
  sub_1AFBB755C(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_1AFBB755C(v21, v23, v25);
  swift_bridgeObjectRetain();
  sub_1AFAED640(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1AFAED640(v14, v16, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDC0C10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1B0007828();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74340);
  return sub_1AFDC0C54(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_1AFDC0C54@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74348);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - v13;
  v24 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72090);
  sub_1AFCAB5CC();
  sub_1B0008104();
  v23 = a1;
  sub_1B0008104();
  v15 = v21;
  v16 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v16(v8, v14, v3);
  v16(v5, v11, v3);
  v17 = v22;
  v16(v22, v8, v3);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74350);
  v16(&v17[*(int *)(v18 + 48)], v5, v3);
  v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19(v11, v3);
  v19(v14, v3);
  v19(v5, v3);
  return ((uint64_t (*)(char *, uint64_t))v19)(v8, v3);
}

uint64_t sub_1AFDC0E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v2 = sub_1B0007D5C();
  v4 = v3;
  v6 = v5 & 1;
  v7 = sub_1B0007D08();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_1AFAED640(v2, v4, v6);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

void sub_1AFDC0F24(uint64_t *a1@<X8>)
{
  sub_1AFDC102C(a1);
}

uint64_t sub_1AFDC0F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v2 = sub_1B0007D5C();
  v4 = v3;
  v6 = v5 & 1;
  v7 = sub_1B0007D08();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_1AFAED640(v2, v4, v6);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

void sub_1AFDC1010(uint64_t *a1@<X8>)
{
  sub_1AFDC102C(a1);
}

void sub_1AFDC102C(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72080);
  OUTLINED_FUNCTION_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_92_0();
  v6 = sub_1B00080E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_4();
  v8 = sub_1B0008098();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E0CDF7D0], v6);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v1 + *(int *)(v4 + 28), v2, v6);
  *v1 = KeyPath;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE72090);
  sub_1AFD23AF4((uint64_t)v1, (uint64_t)a1 + *(int *)(v10 + 36));
  *a1 = v8;
  swift_retain();
  sub_1AFACE0DC((uint64_t)v1, &qword_1EEE72080);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  swift_release();
  OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AFDC1150@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC0C10(a1);
}

uint64_t sub_1AFDC1188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a6;
  v23 = a4;
  v24 = a7;
  swift_getTupleTypeMetadata3();
  v11 = sub_1B0008338();
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CE0680], v11);
  v12 = sub_1B00081A0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - v17;
  v25 = a5;
  v26 = v22;
  v27 = a1;
  v28 = a2;
  v29 = a3;
  v30 = v23;
  sub_1AFD34830();
  sub_1B0008194();
  MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDFB10], v12);
  sub_1AFC5FAC8((uint64_t)v15, v12, (uint64_t)v18);
  v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  sub_1AFC5DB5C((uint64_t)v18, v12, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v12);
}

uint64_t sub_1AFDC1320@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD v48[5];

  v36 = a5;
  v37 = a6;
  v33 = a3;
  v34 = a2;
  v35 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (uint64_t)&v31 - v10;
  v44 = v11;
  v45 = v12;
  sub_1AFAF9424();
  swift_bridgeObjectRetain();
  v13 = sub_1B0007D5C();
  v15 = v14;
  v17 = v16 & 1;
  sub_1B0007B7C();
  v18 = sub_1B0007D08();
  v20 = v19;
  v22 = v21;
  v31 = v23;
  swift_release();
  v24 = v22 & 1;
  sub_1AFAED640(v13, v15, v17);
  v25 = swift_bridgeObjectRelease();
  v34(v25);
  v26 = v32;
  v27 = v36;
  sub_1AFC5FAC8((uint64_t)v8, a4, v32);
  v28 = v35;
  v29 = *(void (**)(char *, uint64_t))(v35 + 8);
  v29(v8, a4);
  v44 = v18;
  v45 = v20;
  v46 = v24;
  v42 = 0x4018000000000000;
  v43 = 0;
  v47 = v31;
  v48[0] = &v44;
  v48[1] = &v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v8, v26, a4);
  v48[2] = v8;
  sub_1AFBB755C(v18, v20, v24);
  swift_bridgeObjectRetain();
  v41[0] = MEMORY[0x1E0CDDD78];
  v41[1] = MEMORY[0x1E0CDFC10];
  v41[2] = a4;
  v38 = MEMORY[0x1E0CDDD58];
  v39 = MEMORY[0x1E0CDFBE8];
  v40 = v27;
  sub_1AFDBE080((uint64_t)v48, 3, (uint64_t)v41);
  v29((char *)v26, a4);
  sub_1AFAED640(v18, v20, v24);
  swift_bridgeObjectRelease();
  v29(v8, a4);
  sub_1AFAED640(v44, v45, v46);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDC157C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1AFDC1188(*v2, v2[1], v2[2], v2[3], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t type metadata accessor for SimpleRectangularContentView.Content(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE740E8);
}

unint64_t sub_1AFDC15AC()
{
  unint64_t result;

  result = qword_1EEE73FE0;
  if (!qword_1EEE73FE0)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038DCC, &type metadata for SimpleRectangularContentView.Placeholder);
    atomic_store(result, (unint64_t *)&qword_1EEE73FE0);
  }
  return result;
}

uint64_t sub_1AFDC15EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for SimpleRectangularContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDC1608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_27_56();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_6_5(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SimpleRectangularContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDC1674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_19_61();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE709A0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_27_56();
    v6 = v1 + *(int *)(v2 + 20);
  }
  return OUTLINED_FUNCTION_5_4(v6, v0, v0, v5);
}

void sub_1AFDC16D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AFDC3914(319, (unint64_t *)&qword_1ED1F01C0, (void (*)(uint64_t))MEMORY[0x1E0CDA008]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ConditionsComplicationDataStatus();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_1AFDC1768()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1EEE74080;
  if (!qword_1EEE74080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEE74088);
    sub_1AFADA43C(&qword_1EEE73FE8, (void (*)(uint64_t))type metadata accessor for SimpleRectangularContentView.Content);
    v3 = v2;
    v4[2] = &type metadata for SimpleRectangularContentView.Placeholder;
    v4[3] = sub_1AFDC15AC();
    v4[0] = v3;
    v4[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74080);
  }
  return result;
}

unint64_t sub_1AFDC180C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v33 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_1AFACF5C4(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_BYTE *)v10 = *(_BYTE *)(a2 + v9);
    v12 = *(_QWORD *)(a2 + v9 + 16);
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(a2 + v9 + 8);
    *(_QWORD *)(v10 + 16) = v12;
    v13 = (int *)type metadata accessor for ConditionsComplicationViewModel();
    v14 = v13[6];
    v15 = v10 + v14;
    v16 = v11 + v14;
    v17 = sub_1B0005B84();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    *(_BYTE *)(v10 + v13[7]) = *(_BYTE *)(v11 + v13[7]);
    v19 = v13[8];
    v20 = v10 + v19;
    v21 = v11 + v19;
    v22 = sub_1B0005FB0();
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    v24 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v25 = v24[5];
    v26 = v20 + v25;
    v27 = v21 + v25;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
    *(_BYTE *)(v20 + v24[6]) = *(_BYTE *)(v21 + v24[6]);
    *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
    *(_QWORD *)(v20 + v24[8]) = *(_QWORD *)(v21 + v24[8]);
    *(_BYTE *)(v20 + v24[9]) = *(_BYTE *)(v21 + v24[9]);
    v23(v10 + v13[9], v11 + v13[9], v22);
    v28 = v13[10];
    v29 = v10 + v28;
    v30 = v11 + v28;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v32(v10 + v13[11], v11 + v13[11], v31);
    v32(v10 + v13[12], v11 + v13[12], v31);
    *(_QWORD *)(v10 + v13[13]) = *(_QWORD *)(v11 + v13[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AFDC1A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  sub_1AFACCD50(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  v6 = v4 + v5[6];
  v7 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[8];
  v9 = sub_1B0005FB0();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v4 + v5[9], v9);
  v11 = v4 + v5[10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v4 + v5[11], v12);
  v13(v4 + v5[12], v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDC1B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)v9 = *(_BYTE *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 8);
  v12 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = v11;
  *(_QWORD *)(v9 + 16) = v12;
  v13 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  v14 = v13[6];
  v15 = v9 + v14;
  v16 = v10 + v14;
  v17 = sub_1B0005B84();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  *(_BYTE *)(v9 + v13[7]) = *(_BYTE *)(v10 + v13[7]);
  v19 = v13[8];
  v20 = v9 + v19;
  v21 = v10 + v19;
  v22 = sub_1B0005FB0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v25 = v24[5];
  v26 = v20 + v25;
  v27 = v21 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(v20 + v24[6]) = *(_BYTE *)(v21 + v24[6]);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  *(_QWORD *)(v20 + v24[8]) = *(_QWORD *)(v21 + v24[8]);
  *(_BYTE *)(v20 + v24[9]) = *(_BYTE *)(v21 + v24[9]);
  v23(v9 + v13[9], v10 + v13[9], v22);
  v28 = v13[10];
  v29 = v9 + v28;
  v30 = v10 + v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v32(v29, v30, v31);
  v32(v9 + v13[11], v10 + v13[11], v31);
  v32(v9 + v13[12], v10 + v13[12], v31);
  *(_QWORD *)(v9 + v13[13]) = *(_QWORD *)(v10 + v13[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AFDC1CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1AFACF5C4(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  v14 = v13[6];
  v15 = v11 + v14;
  v16 = v12 + v14;
  v17 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_BYTE *)(v11 + v13[7]) = *(_BYTE *)(v12 + v13[7]);
  v18 = v13[8];
  v19 = v11 + v18;
  v20 = v12 + v18;
  v21 = sub_1B0005FB0();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v23 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v24 = v23[5];
  v25 = v19 + v24;
  v26 = v20 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_BYTE *)(v19 + v23[6]) = *(_BYTE *)(v20 + v23[6]);
  *(_BYTE *)(v19 + v23[7]) = *(_BYTE *)(v20 + v23[7]);
  *(_QWORD *)(v19 + v23[8]) = *(_QWORD *)(v20 + v23[8]);
  *(_BYTE *)(v19 + v23[9]) = *(_BYTE *)(v20 + v23[9]);
  v22(v11 + v13[9], v12 + v13[9], v21);
  v27 = v13[10];
  v28 = v11 + v27;
  v29 = v12 + v27;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24);
  v31(v28, v29, v30);
  v31(v11 + v13[11], v12 + v13[11], v30);
  v31(v11 + v13[12], v12 + v13[12], v30);
  *(_QWORD *)(v11 + v13[13]) = *(_QWORD *)(v12 + v13[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFDC1ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_BYTE *)v5 = *(_BYTE *)(a2 + v4);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + v4 + 8);
  v7 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  v8 = v7[6];
  v9 = v5 + v8;
  v10 = v6 + v8;
  v11 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_BYTE *)(v5 + v7[7]) = *(_BYTE *)(v6 + v7[7]);
  v12 = v7[8];
  v13 = v5 + v12;
  v14 = v6 + v12;
  v15 = sub_1B0005FB0();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v17 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v18 = v17[5];
  v19 = v13 + v18;
  v20 = v14 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_BYTE *)(v13 + v17[6]) = *(_BYTE *)(v14 + v17[6]);
  *(_BYTE *)(v13 + v17[7]) = *(_BYTE *)(v14 + v17[7]);
  *(_QWORD *)(v13 + v17[8]) = *(_QWORD *)(v14 + v17[8]);
  *(_BYTE *)(v13 + v17[9]) = *(_BYTE *)(v14 + v17[9]);
  v16(v5 + v7[9], v6 + v7[9], v15);
  v21 = v7[10];
  v22 = v5 + v21;
  v23 = v6 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(v5 + v7[11], v6 + v7[11], v24);
  v25(v5 + v7[12], v6 + v7[12], v24);
  *(_QWORD *)(v5 + v7[13]) = *(_QWORD *)(v6 + v7[13]);
  return a1;
}

uint64_t sub_1AFDC2080(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1AFACCD50(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  *(_BYTE *)v11 = *((_BYTE *)a2 + v10);
  v13 = *(uint64_t *)((char *)a2 + v10 + 16);
  *(_QWORD *)(v11 + 8) = *(uint64_t *)((char *)a2 + v10 + 8);
  *(_QWORD *)(v11 + 16) = v13;
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  v15 = v14[6];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_BYTE *)(v11 + v14[7]) = *(_BYTE *)(v12 + v14[7]);
  v19 = v14[8];
  v20 = v11 + v19;
  v21 = v12 + v19;
  v22 = sub_1B0005FB0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v25 = v24[5];
  v26 = v20 + v25;
  v27 = v21 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(v20 + v24[6]) = *(_BYTE *)(v21 + v24[6]);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  *(_QWORD *)(v20 + v24[8]) = *(_QWORD *)(v21 + v24[8]);
  *(_BYTE *)(v20 + v24[9]) = *(_BYTE *)(v21 + v24[9]);
  v23(v11 + v14[9], v12 + v14[9], v22);
  v28 = v14[10];
  v29 = v11 + v28;
  v30 = v12 + v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40);
  v32(v29, v30, v31);
  v32(v11 + v14[11], v12 + v14[11], v31);
  v32(v11 + v14[12], v12 + v14[12], v31);
  *(_QWORD *)(v11 + v14[13]) = *(_QWORD *)(v12 + v14[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AFDC224C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFDC2258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_13_35();
    OUTLINED_FUNCTION_6_5(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1AFDC22B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFDC22BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 8) = -(char)a2;
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_13_35();
    OUTLINED_FUNCTION_5_4(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_1AFDC2310()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConditionsComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SimpleRectangularContentView.Placeholder(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[32])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleRectangularContentView.Placeholder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleRectangularContentView.Placeholder()
{
  return &type metadata for SimpleRectangularContentView.Placeholder;
}

uint64_t sub_1AFDC2424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC2434()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC2444()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1AFDC2468@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDBF988(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1AFDC2474()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE74150;
  if (!qword_1EEE74150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74140);
    v2 = sub_1AFBB6E88();
    sub_1AFB23DC0(&qword_1EEE71858, &qword_1EEE71860);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74150);
  }
  return result;
}

uint64_t sub_1AFDC24FC()
{
  return sub_1AFDC2778((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD))sub_1AFDBE85C);
}

uint64_t sub_1AFDC2508()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for SimpleRectangularContentView.Content(0);
  OUTLINED_FUNCTION_13_91();
  sub_1AFACCD50(*(_QWORD *)(v0 + v1), *(_BYTE *)(v0 + v1 + 8));
  swift_bridgeObjectRelease();
  v2 = (int *)OUTLINED_FUNCTION_13_35();
  v3 = sub_1B0005B84();
  OUTLINED_FUNCTION_0_24(v3);
  v4 = sub_1B0005FB0();
  OUTLINED_FUNCTION_2_84(v4);
  OUTLINED_FUNCTION_12_91(v2[9]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_2_84(v5);
  OUTLINED_FUNCTION_12_91(v2[11]);
  OUTLINED_FUNCTION_12_91(v2[12]);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AFDC25E4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SimpleRectangularContentView.Content(0);
  return sub_1AFDBF108(a1);
}

uint64_t sub_1AFDC2620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDBF3FC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1AFDC2628()
{
  unint64_t result;

  result = qword_1EEE74170;
  if (!qword_1EEE74170)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0038ED0, &type metadata for SimpleRectangularContentView.TemperatureAndRangeView);
    atomic_store(result, (unint64_t *)&qword_1EEE74170);
  }
  return result;
}

uint64_t objectdestroy_11Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for SimpleRectangularContentView.Content(0);
  OUTLINED_FUNCTION_13_91();
  sub_1AFACCD50(*(_QWORD *)(v0 + v1), *(_BYTE *)(v0 + v1 + 8));
  swift_bridgeObjectRelease();
  v2 = (int *)OUTLINED_FUNCTION_13_35();
  v3 = sub_1B0005B84();
  OUTLINED_FUNCTION_0_24(v3);
  v4 = sub_1B0005FB0();
  OUTLINED_FUNCTION_6_95(v4);
  OUTLINED_FUNCTION_14_90(v2[9]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  OUTLINED_FUNCTION_6_95(v5);
  OUTLINED_FUNCTION_14_90(v2[11]);
  OUTLINED_FUNCTION_14_90(v2[12]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AFDC276C()
{
  return sub_1AFDC2778((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD))sub_1AFDBEB5C);
}

uint64_t sub_1AFDC2778(uint64_t (*a1)(unint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(type metadata accessor for SimpleRectangularContentView.Content(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v1 + v3, *v4, v4[1], v4[2]);
}

uint64_t sub_1AFDC27E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDBEBD8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1AFDC27E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AFDBECEC(a1);
}

void sub_1AFDC27F4()
{
  sub_1B0007540();
  OUTLINED_FUNCTION_0();
}

void sub_1AFDC2810()
{
  sub_1B0007540();
  OUTLINED_FUNCTION_0();
}

void sub_1AFDC282C(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1B00080E0();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_1B000754C();
  OUTLINED_FUNCTION_9_0();
}

uint64_t destroy for SimpleRectangularContentView.TemperatureAndRangeView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SimpleRectangularContentView.TemperatureAndRangeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SimpleRectangularContentView.TemperatureAndRangeView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SimpleRectangularContentView.TemperatureAndRangeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleRectangularContentView.TemperatureAndRangeView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleRectangularContentView.TemperatureAndRangeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleRectangularContentView.TemperatureAndRangeView()
{
  return &type metadata for SimpleRectangularContentView.TemperatureAndRangeView;
}

uint64_t sub_1AFDC2AB8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AFDC2AC0(uint64_t a1)
{
  sub_1AFBB4D8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  return swift_release();
}

uint64_t sub_1AFDC2AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1AFBB61A0(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AFDC2B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1AFBB61A0(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_1AFBB4D8C(v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v14;
  swift_retain();
  swift_release();
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v15;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t sub_1AFDC2C5C(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v4;
  sub_1AFBB4D8C(v5, v6, v7, v8, v9);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_1AFDC2CCC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AFDC2D0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SimpleRectangularContentView.TwoLineView()
{
  JUMPOUT(0x1B5E03B4CLL);
}

unint64_t sub_1AFDC2D70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_1EEE74210;
  if (!qword_1EEE74210)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74130);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74120);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74138);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74140);
    sub_1AFB23DC0(&qword_1EEE74148, &qword_1EEE74138);
    v6[4] = v3;
    v6[5] = sub_1AFDC2474();
    v6[2] = v2;
    v6[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1AFADA43C(qword_1ED1F1A18, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&qword_1EEE74210);
  }
  return result;
}

uint64_t sub_1AFDC2E88()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74158);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74140);
  sub_1AFB23DC0(&qword_1EEE74160, &qword_1EEE74158);
  sub_1AFDC2474();
  return OUTLINED_FUNCTION_2_30();
}

uint64_t sub_1AFDC2F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC2F1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC2F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1AFDBFDC0(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1AFDC2F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70C00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFDC2FA8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFDC2FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDC03B0((_QWORD *)(v1 + 16), a1);
}

uint64_t objectdestroy_26Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1AFDC3020@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDC0598((_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for SimpleRectangularContentView.RangeView(uint64_t a1)
{
  return sub_1AFAE79F4(a1, qword_1EEE74270);
}

uint64_t destroy for SimpleRectangularContentView.RangeCondensedView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for SimpleRectangularContentView.RangeCondensedView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SimpleRectangularContentView.RangeCondensedView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SimpleRectangularContentView.RangeCondensedView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleRectangularContentView.RangeCondensedView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleRectangularContentView.RangeCondensedView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleRectangularContentView.RangeCondensedView()
{
  return &type metadata for SimpleRectangularContentView.RangeCondensedView;
}

uint64_t *sub_1AFDC3234(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B00077EC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)v4 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1AFDC3340(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1B00077EC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_1AFDC33D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B00077EC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)((char *)a1 + v8);
  v13 = (_QWORD *)((char *)a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_1AFDC34B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  if (a1 != a2)
  {
    sub_1AFACE0DC((uint64_t)a1, &qword_1ED1F0C80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B00077EC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1AFDC35E0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B00077EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1AFDC369C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_1AFACE0DC((uint64_t)a1, &qword_1ED1F0C80);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F0C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B00077EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_1AFDC379C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AFDC37A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71D50);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_6_5(a1, a2, v4);
  else
    OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AFDC3818()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AFDC3824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  OUTLINED_FUNCTION_19_61();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE71D50);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    OUTLINED_FUNCTION_5_4(v1, v0, v0, v4);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
}

void sub_1AFDC3884()
{
  unint64_t v0;

  sub_1AFDC3914(319, (unint64_t *)&qword_1ED1F0C88, (void (*)(uint64_t))MEMORY[0x1E0CDB2E0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AFDC3914(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B0007294();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1AFDC3960()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AFDC3968()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1AFDC3990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_1AFDC39D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1AFDC3A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for SimpleRectangularContentView.TemperatureView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SimpleRectangularContentView.TemperatureView);
}

ValueMetadata *type metadata accessor for SimpleRectangularContentView.Metrics()
{
  return &type metadata for SimpleRectangularContentView.Metrics;
}

void sub_1AFDC3AA4()
{
  sub_1B00074F8();
  OUTLINED_FUNCTION_25_53();
  sub_1B00074F8();
  OUTLINED_FUNCTION_24_57();
  OUTLINED_FUNCTION_0_98();
  OUTLINED_FUNCTION_13_3();
}

void sub_1AFDC3B0C()
{
  OUTLINED_FUNCTION_25_53();
  sub_1B00081F4();
  OUTLINED_FUNCTION_25_53();
  sub_1B00074F8();
  OUTLINED_FUNCTION_13_3();
}

uint64_t sub_1AFDC3B3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[8];

  v3[0] = a1;
  v3[1] = MEMORY[0x1E0CD9758];
  return MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v3);
}

void sub_1AFDC3B70()
{
  sub_1AFB23DC0(&qword_1EEE74330, &qword_1EEE74338);
}

uint64_t sub_1AFDC3B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC3BD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC3BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AFDC3BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC0E50(a1);
}

uint64_t sub_1AFDC3BF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AFDC0F3C(a1);
}

uint64_t sub_1AFDC3C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AFDC1320(*(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1AFDC3C28()
{
  sub_1AFB23DC0(&qword_1EEE74358, &qword_1EEE74360);
}

unint64_t sub_1AFDC3C58()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE74368;
  if (!qword_1EEE74368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74370);
    v2 = sub_1AFDC3CDC();
    sub_1AFB23DC0(&qword_1EEE743B8, &qword_1EEE743C0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74368);
  }
  return result;
}

unint64_t sub_1AFDC3CDC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE74378;
  if (!qword_1EEE74378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74380);
    v2 = sub_1AFDC3D60();
    sub_1AFB23DC0(&qword_1ED1EE360, &qword_1ED1EE368);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74378);
  }
  return result;
}

unint64_t sub_1AFDC3D60()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEE74388;
  if (!qword_1EEE74388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE74390);
    v2 = sub_1AFDC3DE4();
    sub_1AFB23DC0(&qword_1ED1EE370, &qword_1ED1EE378);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEE74388);
  }
  return result;
}

unint64_t sub_1AFDC3DE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1EEE74398;
  if (!qword_1EEE74398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE743A0);
    sub_1AFB23DC0(&qword_1EEE743A8, &qword_1EEE743B0);
    v3 = v2;
    sub_1AFB23DC0(&qword_1ED1EE7C8, &qword_1ED1EE7D0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EEE74398);
  }
  return result;
}

void sub_1AFDC3E80()
{
  OUTLINED_FUNCTION_24_57();
  OUTLINED_FUNCTION_0_98();
  OUTLINED_FUNCTION_13_3();
}

void sub_1AFDC3EBC()
{
  OUTLINED_FUNCTION_25_53();
  sub_1B00081A0();
  JUMPOUT(0x1B5E03BF4);
}

void sub_1AFDC3EE0()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 2;
  sub_1AFDC46B4();
  sub_1AFDC7A1C();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 30, 0, 3250, 200, 30, 1, 8, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFDC46B4()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = _Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = _Q1;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v11 = _Q1;
  v16 = _Q1;
  v17 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v21 = xmmword_1B0025EE0;
  v18 = xmmword_1B0025EF0;
  v19 = xmmword_1B0025F00;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B002A7C0;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7D0;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0027840;
  v64 = (int64x2_t)xmmword_1B002A7E0;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B002A7F0;
  v77 = xmmword_1B0028210;
  v74 = xmmword_1B002A800;
  v75 = xmmword_1B002A810;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A820;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B002A840;
  v64 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A850;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B002BF40;
  v79 = xmmword_1B002BF50;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0027040;
  v67 = xmmword_1B002A870;
  v64 = (int64x2_t)xmmword_1B002A880;
  v65 = xmmword_1B002A890;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF60;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B0027420;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A8B0;
  v65 = xmmword_1B002A8C0;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0027440;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF70;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v79 = xmmword_1B0025F70;
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF70;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B002A8D0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00391A0;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 1.1967e-26, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v81 = xmmword_1B002A8E0;
  v78 = xmmword_1B002BFF0;
  v79 = xmmword_1B0025FA0;
  v76 = xmmword_1B002A900;
  v77 = xmmword_1B002A910;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A920;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A940;
  v81 = xmmword_1B0027B30;
  v78 = xmmword_1B002A950;
  v79 = xmmword_1B002A960;
  v76 = xmmword_1B002A970;
  v77 = xmmword_1B002A980;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B002A990;
  v65 = xmmword_1B002A9A0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0027140;
  v79 = xmmword_1B0027150;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026130;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A9C0;
  v65 = xmmword_1B002A9D0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00266E0;
  v81 = xmmword_1B00266F0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026790;
  v81 = v11;
  v78 = xmmword_1B002A9E0;
  v79 = xmmword_1B00267B0;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7D0;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B00278C0;
  v64 = (int64x2_t)xmmword_1B002AA00;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002AA10;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  __asm { FMOV            V0.2D, #0.25 }
  v20 = _Q0;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026820;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002AA10;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026830;
  v19 = xmmword_1B0026840;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFDC7A1C()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = (__int128)_Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V2.2D, #1.0 }
  v70 = _Q2;
  v71 = _Q2;
  v68 = _Q2;
  v69 = _Q2;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = _Q2;
  v62 = (int64x2_t)_Q2;
  v63 = xmmword_1B0025E90;
  v60 = _Q2;
  v61 = _Q2;
  v58 = _Q2;
  v59 = _Q2;
  v56 = _Q2;
  v57 = _Q2;
  v54 = _Q2;
  v55 = _Q2;
  v52 = _Q2;
  v53 = _Q2;
  v50 = _Q2;
  v51 = _Q2;
  v48 = _Q2;
  v49 = _Q2;
  v46 = _Q2;
  v47 = _Q2;
  v44 = _Q2;
  v45 = _Q2;
  v42 = _Q2;
  v43 = _Q2;
  v40 = _Q2;
  v41 = _Q2;
  v38 = _Q2;
  v39 = _Q2;
  v36 = _Q2;
  v37 = _Q2;
  v34 = _Q2;
  v35 = _Q2;
  v32 = _Q2;
  v33 = _Q2;
  v30 = _Q2;
  v31 = _Q2;
  v28 = _Q2;
  v29 = _Q2;
  v26 = _Q2;
  v27 = _Q2;
  v24 = _Q2;
  v25 = _Q2;
  v22 = _Q2;
  v23 = _Q2;
  v11 = _Q2;
  v8 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = _Q2;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B00268C0;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B00268D0;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0027840;
  v64 = (int64x2_t)xmmword_1B002A7E0;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = xmmword_1B0026920;
  v17 = v11;
  v14 = xmmword_1B0027950;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026950;
  v13 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B002A800;
  v75 = xmmword_1B002A810;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027960;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B0026980;
  v13 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1106247680,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B002A840;
  v64 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027970;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B00269D0;
  v13 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0027040;
  v67 = xmmword_1B002A870;
  v64 = (int64x2_t)xmmword_1B002A880;
  v65 = xmmword_1B002A890;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027980;
  v15 = xmmword_1B00267B0;
  v12 = xmmword_1B0026A10;
  v13 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A8B0;
  v65 = xmmword_1B002A8C0;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0027440;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A30;
  v15 = xmmword_1B0026A40;
  v12 = xmmword_1B0026A50;
  v13 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A70;
  v15 = xmmword_1B0026A80;
  v12 = xmmword_1B0026A90;
  v13 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AC0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B002A8D0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AE0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00391A0;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AF0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 0.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A920;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027990;
  v15 = xmmword_1B0026C70;
  v12 = xmmword_1B0026B20;
  v13 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B002A990;
  v65 = xmmword_1B002A9A0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B00279A0;
  v15 = xmmword_1B0026C20;
  v12 = xmmword_1B0026B60;
  v13 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026130;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A9C0;
  v65 = xmmword_1B002A9D0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = xmmword_1B0026B80;
  v17 = xmmword_1B0026B90;
  v14 = xmmword_1B00279B0;
  v15 = xmmword_1B00279C0;
  v12 = xmmword_1B0026BC0;
  v13 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00334D0;
  v81 = xmmword_1B00334E0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = xmmword_1B0026BE0;
  v17 = xmmword_1B0026BF0;
  v14 = xmmword_1B00279D0;
  v15 = xmmword_1B00279E0;
  v12 = xmmword_1B0026C10;
  v13 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v77 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B00278C0;
  v64 = (int64x2_t)xmmword_1B002AA00;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026C30;
  v17 = v11;
  v14 = xmmword_1B00279F0;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026C60;
  v13 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1106247680,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026C80;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026C90;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  return v0;
}

void Font.capHeight(in:)(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB0C8(a1, a2, MEMORY[0x1E0CA7BC0]);
}

void Font.descender(in:)()
{
  const __CTFont *v0;

  v0 = (const __CTFont *)sub_1B0007B10();
  CTFontGetDescent(v0);

  OUTLINED_FUNCTION_0_120();
}

void Font.lineHeight(in:)()
{
  const __CTFont *v0;

  v0 = (const __CTFont *)sub_1B0007B10();
  CTFontGetAscent(v0);
  CTFontGetDescent(v0);
  CTFontGetLeading(v0);

  OUTLINED_FUNCTION_0_120();
}

void Font.lineHeightNotIncludingExuberatedAmount(in:)(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB078(a1, a2, (SEL *)&selRef_wu_lineHeightNotIncludingExuberatedAmount);
}

void Font.exuberatedLineHeightAmount(in:)(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB078(a1, a2, (SEL *)&selRef_wu_exuberatedLineHeightAmount);
}

void sub_1AFDCB078(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v4;

  v4 = (void *)sub_1B0007B10();
  objc_msgSend(v4, *a3);

  OUTLINED_FUNCTION_0_120();
}

void Font.ascender(in:)(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB0C8(a1, a2, (void (*)(void))MEMORY[0x1E0CA7BA0]);
}

void Font.pointSize(in:)(uint64_t a1, uint64_t a2)
{
  sub_1AFDCB0C8(a1, a2, MEMORY[0x1E0CA7C50]);
}

void sub_1AFDCB0C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;

  v4 = (void *)sub_1B0007B10();
  a3();

  OUTLINED_FUNCTION_0_120();
}

void sub_1AFDCB0FC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 5;
  v30 = 0xD000000000000010;
  v31 = 0x80000001B0051400;
  v32 = 0xD000000000000014;
  v33 = 0x80000001B0051420;
  v34 = 10;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 5;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB000000004D202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF4D656C676E6953;
  v24 = 15;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFDCB958();
  sub_1AFDCB958();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1138819072;
  LODWORD(v5) = 1120403456;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x432A00003FB33333, v5, 0x3F570A3D3F000000, v6, 0x3F8000003F800000, 0x3E721D783F800000, 0x3F8000003F800000, 0x3EC9FB9B3F800000, 1065353216,
    0x42DC000000000000,
    v7,
    0x3F2E147B3EAE147BLL,
    0x3F8000003F800000,
    0x3DBDEECD3F800000,
    0x3F8000003F800000,
    0x3F01EF303F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFDCB958()
{
  uint64_t v0;
  double v6;
  __int128 v7;
  __int128 v8;
  __n128 v9;
  double v10;
  __n128 v11;
  __int128 v12;
  __n128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  double v24;
  __n128 v25;
  float v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  double v43;
  __n128 v44;
  float v45;
  double v46;
  double v47;
  __n128 v48;
  __n128 v49;
  double v50;
  double v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __int128 v55;
  _OWORD *v56;
  unsigned int v57;
  __n128 *v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  double v68;
  __n128 v69;
  float v70;
  float v71;
  float v72;
  float v73;
  double v74;
  double v75;
  double v76;
  __int128 v77;
  double v78;
  __n128 v79;
  double v80;
  __n128 v81;
  __n128 v82;
  __n128 v83;
  __int128 v84;
  _OWORD *v85;
  _OWORD *v86;
  __n128 *v87;
  uint64_t v88;
  float v89;
  double v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  __n128 v99;
  float v100;
  float v101;
  double v102;
  double v103;
  __n128 v104;
  double v105;
  __n128 v106;
  __n128 v107;
  double v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  _OWORD *v112;
  __n128 *v113;
  uint64_t v114;
  float v115;
  uint64_t v116;
  float v117;
  double v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _OWORD *v125;
  uint64_t v126;
  __n128 v127;
  float v128;
  float v129;
  double v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  uint64_t v138;
  float v139;
  float v140;
  double v141;
  double v142;
  double v143;
  __n128 v144;
  double v145;
  double v146;
  __n128 v147;
  double v148;
  double v149;
  double v150;
  __n128 v151;
  __n128 v152;
  __n128 v153;
  __n128 v154;
  double v155;
  _OWORD *v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  uint64_t v163;
  float v164;
  float v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  __int128 v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  uint64_t v177;
  double v178;
  float v179;
  float v180;
  __int128 v181;
  double v182;
  __n128 v183;
  double v184;
  double v185;
  double v186;
  double v187;
  double v188;
  double v189;
  __n128 v190;
  double v191;
  double v192;
  double v193;
  __n128 v194;
  __int128 v195;
  __n128 v196;
  __n128 v197;
  __n128 v198;
  __int128 v199;
  __int128 v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  uint64_t v209;
  double v210;
  __n128 v211;
  float v212;
  __int128 v213;
  double v214;
  __n128 v215;
  __n128 v216;
  __n128 v217;
  __n128 v218;
  __n128 v219;
  __int128 v220;
  __int128 v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  uint64_t v230;
  float v231;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  uint64_t v359;
  uint64_t v360;
  __n128 v361;
  __n128 v362;
  __n128 v363;
  float v364;
  __n128 v365;
  __int128 v366;
  __n128 v367;
  __n128 v368;
  __n128 v369;
  __n128 v370;
  __n128 v371;
  __n128 v372;
  __n128 v373;
  __int128 v374;
  __n128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __n128 v381;
  __n128 v382;
  __n128 v383;
  __int128 v384;
  __n128 v385;
  __n128 v386;
  __n128 v387;
  __n128 v388;
  __n128 v389;
  __n128 v390;
  __n128 v391;
  __n128 v392;
  __n128 v393;
  __int128 v394;
  __n128 v395;
  __n128 v396;
  __n128 v397;
  __int128 v398;
  __n128 v399;
  __int128 v400;
  __n128 v401;
  __n128 v402;
  __n128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __n128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __n128 v429;
  __n128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v435 = xmmword_1B0028630;
  v436 = xmmword_1B0028640;
  v433 = xmmword_1B0028650;
  v434 = xmmword_1B0028660;
  v431 = xmmword_1B0028670;
  v432 = xmmword_1B0028680;
  __asm { FMOV            V3.2D, #1.0 }
  OUTLINED_FUNCTION_30_29(0.529411793, 0.690196097, v6, _Q3);
  OUTLINED_FUNCTION_29_10((__n128)xmmword_1B00306F0, (__n128)xmmword_1B0030700);
  v425 = xmmword_1B00286A0;
  v426 = v7;
  v423 = xmmword_1B00286B0;
  v424 = xmmword_1B0025F70;
  OUTLINED_FUNCTION_36_1((__n128)xmmword_1B00286C0, (__n128)xmmword_1B00286D0);
  v419 = xmmword_1B00286E0;
  v420 = xmmword_1B00286F0;
  v417 = v8;
  v418 = v8;
  v416 = 0u;
  v415 = 0u;
  v413 = (__n128)v8;
  v414 = xmmword_1B0027030;
  OUTLINED_FUNCTION_26_10((__n128)xmmword_1B0030710, (__n128)xmmword_1B0030720);
  OUTLINED_FUNCTION_33_8((__n128)xmmword_1B0030730, (__n128)xmmword_1B0030740);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0028740, (__n128)xmmword_1B0030750);
  v405 = xmmword_1B0030760;
  v406 = xmmword_1B0030770;
  v365 = v9;
  v403 = v9;
  v404 = xmmword_1B0025E90;
  v401 = v9;
  v402 = v9;
  v399 = v9;
  v400 = xmmword_1B0025E90;
  v397 = v9;
  v398 = xmmword_1B0025E50;
  v395 = v9;
  v396 = v9;
  v393 = v9;
  v394 = xmmword_1B0027770;
  OUTLINED_FUNCTION_14_42(1.0, (__n128)xmmword_1B0025E50, v10, v9);
  v381 = v11;
  v366 = v12;
  v382 = (__n128)v12;
  v379 = xmmword_1B002AF30;
  v380 = xmmword_1B0030780;
  v377 = xmmword_1B002AF30;
  OUTLINED_FUNCTION_35_25();
  v375 = v13;
  v376 = v14;
  v373 = v13;
  v374 = v15;
  v371 = v13;
  v372 = v13;
  v369 = v13;
  v370 = v13;
  v367 = v13;
  v368 = v13;
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_17_4(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, 200.0, 35.0, 0.1, v26, &v421, &v419, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v417,
    0,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  OUTLINED_FUNCTION_6_96();
  v429 = v365;
  v430 = v365;
  OUTLINED_FUNCTION_11_85();
  v426 = v27;
  OUTLINED_FUNCTION_5_100();
  v417 = v28;
  v418 = v28;
  v416 = 0u;
  v415 = 0u;
  v413 = (__n128)v28;
  v414 = v366;
  OUTLINED_FUNCTION_26_10((__n128)xmmword_1B00307A0, (__n128)xmmword_1B00307B0);
  OUTLINED_FUNCTION_9_95((__n128)xmmword_1B00307C0);
  v405 = xmmword_1B00307D0;
  v406 = xmmword_1B0030770;
  v403 = v29;
  v404 = xmmword_1B0025E90;
  v401 = v29;
  v402 = v29;
  v399 = v29;
  v400 = xmmword_1B0025E90;
  v397 = v29;
  v398 = xmmword_1B0025E50;
  v395 = v29;
  v396 = v29;
  v393 = v29;
  v394 = xmmword_1B0027770;
  v391 = v29;
  v392 = v29;
  v389 = v29;
  v390 = v29;
  v387 = v29;
  v388 = v29;
  v385 = v29;
  v386 = v29;
  v383 = v29;
  v384 = xmmword_1B0025E50;
  v381 = v29;
  v382 = v30;
  v379 = xmmword_1B002AF30;
  v380 = xmmword_1B0030780;
  v377 = xmmword_1B002AF30;
  OUTLINED_FUNCTION_35_25();
  v375 = v31;
  v376 = v32;
  v373 = v31;
  v374 = v33;
  v371 = v31;
  v372 = v31;
  v369 = v31;
  v370 = v31;
  v367 = v31;
  v368 = v31;
  OUTLINED_FUNCTION_0_65();
  v258 = v34;
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_20_7();
  OUTLINED_FUNCTION_17_4(v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, 200.0, 35.0, 0.1, v45, &v421, &v419, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v417,
    v242,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    v258,
    v265,
    v272,
    v279,
    v286,
    v293,
    v300,
    v307,
    v314,
    v321,
    v328,
    v335,
    v338,
    v341,
    v346,
    v351,
    v354,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  v435 = xmmword_1B00288D0;
  v436 = xmmword_1B00288E0;
  v433 = xmmword_1B00288F0;
  v434 = xmmword_1B0028900;
  v431 = xmmword_1B00276E0;
  v432 = xmmword_1B0026110;
  OUTLINED_FUNCTION_30_29(0.278431386, 0.403921604, v46, v365);
  OUTLINED_FUNCTION_29_10((__n128)xmmword_1B0028A60, (__n128)xmmword_1B002F6D0);
  OUTLINED_FUNCTION_38_7((__n128)xmmword_1B0029060, (__n128)xmmword_1B0028940, v47, v48);
  OUTLINED_FUNCTION_36_1((__n128)xmmword_1B0028950, (__n128)xmmword_1B0028960);
  v419 = xmmword_1B0028970;
  v420 = xmmword_1B0028980;
  v417 = (__int128)v49;
  v418 = (__int128)v49;
  OUTLINED_FUNCTION_12_51(0.835294127, 1.0, v50, v49);
  OUTLINED_FUNCTION_26_10((__n128)xmmword_1B00307E0, (__n128)xmmword_1B00307F0);
  OUTLINED_FUNCTION_33_8((__n128)xmmword_1B0030800, (__n128)xmmword_1B0030810);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0030820, (__n128)xmmword_1B0030830);
  OUTLINED_FUNCTION_3_6((__n128)xmmword_1B0030840, (__n128)xmmword_1B0030850, v51, v52);
  v382 = v53;
  v379 = xmmword_1B0030860;
  v380 = xmmword_1B002ADC0;
  v377 = xmmword_1B0030870;
  v378 = xmmword_1B0030880;
  v375 = v54;
  v376 = v55;
  v373 = v54;
  v374 = (__int128)v53;
  OUTLINED_FUNCTION_5_59(0.876718462, 1.0, v53.n128_f64[0], v54);
  OUTLINED_FUNCTION_37_13();
  v342 = v56;
  OUTLINED_FUNCTION_2_66();
  OUTLINED_FUNCTION_19_4();
  v237 = v57 | 0x3F4CCCCD00000000;
  v363 = v58[163];
  v364 = *(float *)(v59 + 2524);
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_17_4(v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, &v421, &v419, v237, 1061997773, &v417,
    0,
    &v415,
    &v413,
    v246,
    v250,
    v254,
    v259,
    v266,
    v273,
    v280,
    v287,
    v294,
    v301,
    v308,
    v315,
    v322,
    v329,
    &v383,
    &v381,
    v342,
    v347,
    &v375,
    &v373,
    &v371,
    1112014848,
    1097859072,
    v357,
    v359);
  v435 = xmmword_1B00276A0;
  v436 = xmmword_1B00276B0;
  v433 = xmmword_1B0028A40;
  v434 = xmmword_1B0028A50;
  *(_QWORD *)&v74 = OUTLINED_FUNCTION_18_45().n128_u64[0];
  OUTLINED_FUNCTION_30_29(v74, v75, v76, v365);
  OUTLINED_FUNCTION_29_10((__n128)xmmword_1B0028A60, (__n128)xmmword_1B0028A70);
  v425 = xmmword_1B002AEA0;
  v426 = v77;
  v423 = v77;
  v424 = v77;
  OUTLINED_FUNCTION_36_1((__n128)xmmword_1B0028A90, (__n128)xmmword_1B0028AA0);
  OUTLINED_FUNCTION_28_34((__n128)xmmword_1B0028AB0);
  v417 = xmmword_1B0026320;
  v418 = xmmword_1B0026330;
  OUTLINED_FUNCTION_12_51(0.970078886, 0.97049284, v78, v79);
  OUTLINED_FUNCTION_26_10((__n128)xmmword_1B0030890, (__n128)xmmword_1B00308A0);
  OUTLINED_FUNCTION_33_8((__n128)xmmword_1B00308B0, (__n128)xmmword_1B00308C0);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B00308D0, (__n128)xmmword_1B00308E0);
  OUTLINED_FUNCTION_3_6((__n128)xmmword_1B00308F0, (__n128)xmmword_1B00277A0, v80, v81);
  v382 = v82;
  v379 = xmmword_1B0030900;
  v380 = xmmword_1B0030910;
  v377 = xmmword_1B0030900;
  v378 = xmmword_1B0026FC0;
  v375 = v83;
  v376 = v84;
  v373 = v83;
  v374 = (__int128)v82;
  OUTLINED_FUNCTION_5_59(v82.n128_f64[0], 0.900869966, 1.0, v83);
  OUTLINED_FUNCTION_37_13();
  v343 = v85;
  OUTLINED_FUNCTION_3_61();
  v247 = v86;
  OUTLINED_FUNCTION_19_4();
  v362 = v87[32];
  v89 = *(float *)(v88 + 2620);
  v90 = OUTLINED_FUNCTION_22_37();
  OUTLINED_FUNCTION_28_6(v91, v92, v93, v94, v95, v96, v97, v98, v90, v99, 800.0, v100, v89, v101, &v421, &v419, 0x3F6666663F666666, 0, &v417,
    0,
    &v415,
    &v413,
    v247,
    v251,
    v255,
    v260,
    v267,
    v274,
    v281,
    v288,
    v295,
    v302,
    v309,
    v316,
    v323,
    v330,
    &v383,
    &v381,
    v343,
    v348,
    &v417,
    &v373,
    &v371,
    1112014848,
    1097859072,
    v358,
    v360);
  v435 = xmmword_1B002AF70;
  v436 = (__int128)v365;
  v433 = xmmword_1B002AF80;
  v434 = xmmword_1B002AF90;
  v431 = xmmword_1B0028220;
  v432 = xmmword_1B0028230;
  OUTLINED_FUNCTION_30_29(0.999904573, 0.99988085, v102, v365);
  OUTLINED_FUNCTION_29_10((__n128)xmmword_1B0029110, (__n128)xmmword_1B0029120);
  OUTLINED_FUNCTION_38_7((__n128)xmmword_1B002AFB0, (__n128)xmmword_1B002AFC0, v103, v104);
  OUTLINED_FUNCTION_36_1((__n128)xmmword_1B002AFD0, (__n128)xmmword_1B002AFE0);
  OUTLINED_FUNCTION_28_34((__n128)xmmword_1B0029130);
  v417 = xmmword_1B0027D70;
  v418 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_12_51(1.0, 0.9627316, v105, v106);
  OUTLINED_FUNCTION_26_10((__n128)xmmword_1B0030920, (__n128)xmmword_1B0030930);
  OUTLINED_FUNCTION_33_8((__n128)xmmword_1B0030940, (__n128)xmmword_1B0029100);
  OUTLINED_FUNCTION_30_3((__n128)xmmword_1B0030950, (__n128)xmmword_1B00287A0);
  v405 = xmmword_1B0029140;
  v406 = xmmword_1B00277A0;
  v403 = v107;
  v404 = xmmword_1B0025E90;
  v401 = v107;
  v402 = v107;
  v399 = v107;
  v400 = xmmword_1B0025E90;
  v397 = v107;
  v398 = xmmword_1B0025E50;
  v395 = v107;
  v396 = v107;
  v393 = v107;
  v394 = xmmword_1B0027770;
  OUTLINED_FUNCTION_14_42(v107.n128_f64[0], (__n128)xmmword_1B0025E50, v108, v107);
  v381 = v109;
  v382 = v110;
  v379 = xmmword_1B0030960;
  v380 = xmmword_1B0030970;
  v377 = xmmword_1B0030980;
  OUTLINED_FUNCTION_10_57(v110, 0.98127377, 1.0, v111, v109);
  OUTLINED_FUNCTION_3_61();
  v248 = v112;
  OUTLINED_FUNCTION_19_4();
  v361 = v113[66];
  v115 = *(float *)(v114 + 640);
  v117 = *(float *)(v116 + 2528);
  v118 = OUTLINED_FUNCTION_21_17();
  OUTLINED_FUNCTION_28_6(v119, v120, v121, v122, v123, v124, v125, v126, v118, v127, v115, v128, v117, v129, &v421, &v419, 0x3F6666663F666666, 0, &v417,
    0,
    &v415,
    &v413,
    v248,
    v252,
    v256,
    v261,
    v268,
    v275,
    v282,
    v289,
    v296,
    v303,
    v310,
    v317,
    v324,
    v331,
    &v383,
    &v381,
    &v379,
    &v377,
    &v417,
    &v373,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  v433 = xmmword_1B002AF80;
  v434 = xmmword_1B002AF90;
  v431 = xmmword_1B0028220;
  v432 = xmmword_1B0028230;
  v427 = xmmword_1B0029110;
  v428 = xmmword_1B0029120;
  v425 = xmmword_1B002AFB0;
  v426 = xmmword_1B002AFC0;
  v421 = xmmword_1B002AFD0;
  v422 = xmmword_1B002AFE0;
  v419 = xmmword_1B0029130;
  v417 = xmmword_1B0027D70;
  v418 = xmmword_1B0027D80;
  v411 = xmmword_1B0030920;
  v412 = xmmword_1B0030930;
  v409 = xmmword_1B0030940;
  v410 = xmmword_1B0029100;
  v407 = xmmword_1B0030950;
  v408 = xmmword_1B00287A0;
  v405 = xmmword_1B0029140;
  v379 = xmmword_1B0030960;
  v380 = xmmword_1B0030970;
  v377 = xmmword_1B0030980;
  v435 = xmmword_1B002AF70;
  v436 = (__int128)v365;
  v429 = v365;
  v430 = v365;
  v423 = (__int128)v365;
  v424 = (__int128)v365;
  v420 = xmmword_1B0025F70;
  v416 = 0u;
  v415 = 0u;
  v413 = v365;
  v414 = v366;
  v406 = xmmword_1B00277A0;
  v403 = v365;
  v404 = xmmword_1B0025E90;
  v401 = v365;
  v402 = v365;
  v399 = v365;
  v400 = xmmword_1B0025E90;
  v397 = v365;
  v398 = xmmword_1B0025E50;
  v395 = v365;
  v396 = v365;
  v393 = v365;
  v394 = xmmword_1B0027770;
  v391 = v365;
  v392 = v365;
  v389 = v365;
  v390 = v365;
  v387 = v365;
  v388 = v365;
  v385 = v365;
  v386 = v365;
  v383 = v365;
  v384 = xmmword_1B0025E50;
  v381 = v365;
  v382 = (__n128)v366;
  v378 = xmmword_1B0026FC0;
  v375 = v365;
  v376 = xmmword_1B0025E50;
  v373 = v365;
  v374 = v366;
  v371 = v365;
  v372 = v365;
  v369 = v365;
  v370 = v365;
  v367 = v365;
  v368 = v365;
  OUTLINED_FUNCTION_2_66();
  OUTLINED_FUNCTION_32_20();
  OUTLINED_FUNCTION_23_43();
  v130 = OUTLINED_FUNCTION_21_17();
  OUTLINED_FUNCTION_29_2(v131, v132, v133, v134, v135, v136, v137, v138, v130, v361, v115, v139, v117, v140, v233, v235, v238, v240, &v417,
    v243,
    &v415,
    &v413,
    v249,
    v253,
    v257,
    v262,
    v269,
    v276,
    v283,
    v290,
    v297,
    v304,
    v311,
    v318,
    v325,
    v332,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  v435 = xmmword_1B00276A0;
  v436 = xmmword_1B00276B0;
  v433 = xmmword_1B0028A40;
  v434 = xmmword_1B0028A50;
  OUTLINED_FUNCTION_18_45();
  v429 = v365;
  v430 = v365;
  v427 = xmmword_1B0028A60;
  v428 = xmmword_1B0028A70;
  v425 = xmmword_1B002AEA0;
  v426 = (__int128)v365;
  v423 = (__int128)v365;
  v424 = (__int128)v365;
  v421 = xmmword_1B0028A90;
  v422 = xmmword_1B0028AA0;
  OUTLINED_FUNCTION_28_34((__n128)xmmword_1B0028AB0);
  v417 = xmmword_1B0026320;
  v418 = xmmword_1B0026330;
  OUTLINED_FUNCTION_36_2(0.97049284, v141, v142, v143, v144);
  v414 = v366;
  v411 = xmmword_1B0030890;
  v412 = xmmword_1B00308A0;
  v409 = xmmword_1B0030990;
  v410 = xmmword_1B00308C0;
  v407 = xmmword_1B00308D0;
  v408 = xmmword_1B00308E0;
  v405 = xmmword_1B00309A0;
  *(_QWORD *)&v148 = OUTLINED_FUNCTION_15_55((__n128)xmmword_1B00277A0, *(double *)&v366, v145, v146, v147).n128_u64[0];
  v398 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_7_53(v148, v149, v150, 1.0, v151);
  v384 = (__int128)v152;
  v381 = v153;
  v382 = v154;
  v379 = xmmword_1B0030900;
  v380 = xmmword_1B0030910;
  v377 = xmmword_1B0030900;
  OUTLINED_FUNCTION_10_57(v154, 1.0, 0.900869966, v152, v153);
  OUTLINED_FUNCTION_32_20();
  OUTLINED_FUNCTION_23_43();
  v155 = OUTLINED_FUNCTION_22_37();
  OUTLINED_FUNCTION_29_2(v156, v157, v158, v159, v160, v161, v162, v163, v155, v362, 800.0, v164, v89, v165, v234, v236, v239, v241, &v417,
    v244,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  v435 = xmmword_1B00288D0;
  v436 = xmmword_1B00288E0;
  v433 = xmmword_1B00288F0;
  v434 = xmmword_1B0028900;
  OUTLINED_FUNCTION_18_45();
  v429 = v365;
  v430 = v365;
  v427 = xmmword_1B0028A60;
  v428 = xmmword_1B002F6D0;
  v425 = xmmword_1B0029060;
  v426 = xmmword_1B0028940;
  v423 = (__int128)v365;
  v424 = (__int128)v365;
  v421 = xmmword_1B0028950;
  v422 = xmmword_1B0028960;
  v419 = xmmword_1B0028970;
  v420 = xmmword_1B0028980;
  OUTLINED_FUNCTION_19_44(1.0, v365);
  v414 = v366;
  v411 = xmmword_1B00307E0;
  v412 = xmmword_1B00307F0;
  v409 = xmmword_1B0030800;
  v410 = xmmword_1B0030810;
  v407 = xmmword_1B0030820;
  v408 = xmmword_1B0030830;
  v405 = xmmword_1B0030840;
  OUTLINED_FUNCTION_4_70((__n128)xmmword_1B0030850, v166);
  v381 = v167;
  v382 = v168;
  v379 = xmmword_1B0030860;
  v380 = xmmword_1B002ADC0;
  v377 = xmmword_1B0030870;
  v378 = xmmword_1B0030880;
  v375 = v167;
  v376 = v169;
  v373 = v167;
  v374 = (__int128)v168;
  v371 = v167;
  v372 = v167;
  v369 = v167;
  v370 = v167;
  v367 = v167;
  v368 = v167;
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_16_0(v170, v171, v172, v173, v174, v175, v176, v177, v178, v363, 400.0, v179, v364, v180, &v421, &v419, 0x3F4CCCCD3F4CCCCDLL, 1061997773, &v417,
    0,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    &v405,
    &v403,
    &v401,
    &v399,
    &v397,
    &v395,
    &v393,
    &v391,
    &v389,
    &v387,
    &v385,
    &v383,
    &v381,
    &v379,
    &v377,
    &v375,
    &v373,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  OUTLINED_FUNCTION_6_96();
  v429 = v365;
  v430 = v365;
  OUTLINED_FUNCTION_11_85();
  v426 = v181;
  *(_QWORD *)&v182 = OUTLINED_FUNCTION_5_100().n128_u64[0];
  v417 = (__int128)v183;
  v418 = (__int128)v183;
  OUTLINED_FUNCTION_36_2(v182, v184, v185, v186, v183);
  v414 = v366;
  v411 = xmmword_1B00307A0;
  v412 = xmmword_1B00307B0;
  OUTLINED_FUNCTION_9_95((__n128)xmmword_1B00307C0);
  v405 = xmmword_1B00307D0;
  *(_QWORD *)&v191 = OUTLINED_FUNCTION_15_55((__n128)xmmword_1B0030770, v187, v188, v189, v190).n128_u64[0];
  v398 = xmmword_1B0025E50;
  OUTLINED_FUNCTION_7_53(v191, v192, 1.0, v193, v194);
  v384 = v195;
  v381 = v196;
  v382 = v197;
  v379 = xmmword_1B002AF30;
  v380 = xmmword_1B0030780;
  v377 = xmmword_1B002AF30;
  OUTLINED_FUNCTION_35_25();
  v375 = v198;
  v376 = v199;
  v373 = v198;
  v374 = v200;
  v371 = v198;
  v372 = v198;
  v369 = v198;
  v370 = v198;
  v367 = v198;
  v368 = v198;
  OUTLINED_FUNCTION_0_65();
  v263 = v201;
  OUTLINED_FUNCTION_20_7();
  OUTLINED_FUNCTION_16_0(v202, v203, v204, v205, v206, v207, v208, v209, v210, v211, 200.0, 35.0, 0.1, v212, &v421, &v419, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v417,
    0,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    v263,
    v270,
    v277,
    v284,
    v291,
    v298,
    v305,
    v312,
    v319,
    v326,
    v333,
    v336,
    v339,
    v344,
    v349,
    v352,
    v355,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  OUTLINED_FUNCTION_6_96();
  v429 = v365;
  v430 = v365;
  OUTLINED_FUNCTION_11_85();
  v426 = v213;
  *(_QWORD *)&v214 = OUTLINED_FUNCTION_5_100().n128_u64[0];
  OUTLINED_FUNCTION_19_44(v214, v215);
  v414 = v366;
  v411 = xmmword_1B0030710;
  v412 = xmmword_1B0030720;
  OUTLINED_FUNCTION_9_95((__n128)xmmword_1B0030730);
  v405 = xmmword_1B0030760;
  OUTLINED_FUNCTION_4_70((__n128)xmmword_1B0030770, v216);
  v381 = v217;
  v382 = v218;
  v379 = xmmword_1B002AF30;
  v380 = xmmword_1B0030780;
  v377 = xmmword_1B002AF30;
  OUTLINED_FUNCTION_35_25();
  v375 = v219;
  v376 = v220;
  v373 = v219;
  v374 = v221;
  v371 = v219;
  v372 = v219;
  v369 = v219;
  v370 = v219;
  v367 = v219;
  v368 = v219;
  OUTLINED_FUNCTION_0_65();
  v264 = v222;
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_16_0(v223, v224, v225, v226, v227, v228, v229, v230, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, v231, &v421, &v419, 0x3F4CCCCD3F4CCCCDLL, 1065353216, &v417,
    v245,
    &v415,
    &v413,
    &v411,
    &v409,
    &v407,
    v264,
    v271,
    v278,
    v285,
    v292,
    v299,
    v306,
    v313,
    v320,
    v327,
    v334,
    v337,
    v340,
    v345,
    v350,
    v353,
    v356,
    &v371,
    1112014848,
    1097859072,
    &v369,
    (uint64_t)&v367);
  return v0;
}

void sub_1AFDCCF08()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE v36[9];

  v36[0] = 0;
  v31 = 0xD000000000000010;
  v32 = 0x80000001B0051400;
  v33 = 0xD000000000000014;
  v34 = 0x80000001B0051420;
  v35 = 6;
  v27 = 0xEB000000004D202DLL;
  v28 = 0x5F73756C756D7543;
  v29 = 0xEF4D656C676E6953;
  v30 = 10;
  v21 = 0x2073756C756D7543;
  v22 = 0xEB000000004D202DLL;
  v23 = 0x5F73756C756D7543;
  v24 = 0xEF4D656C676E6953;
  v25 = 10;
  v26 = 0x2073756C756D7543;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFDCD71C();
  sub_1AFDCD71C();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V3.2S, #3.25
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1167663104;
  LODWORD(v6) = 1128792064;
  sub_1AFB471E4((uint64_t)v36, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42DC000040400000, v6, 0x3E851EB83E570A3DLL, v7, 0x3F8000003F800000, 0x3E4CCCCD3F800000, 0x3F8000003F800000, 0x3E428F5C3F800000, 1065353216,
    0x428C000000000000,
    v8,
    0x3E570A3D3E0F5C29,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    1056964608,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t sub_1AFDCD71C()
{
  uint64_t v0;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  double v21;
  __n128 v22;
  double v23;
  double v24;
  __n128 v25;
  __n128 v26;
  double v27;
  __n128 v28;
  double v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  double v43;
  __n128 v44;
  double v45;
  __n128 v46;
  double v47;
  double v48;
  double v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __int128 v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  double v62;
  __n128 v63;
  float v64;
  float v65;
  float v66;
  double v67;
  __n128 v68;
  double v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __int128 v73;
  _OWORD *v74;
  double v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  uint64_t v83;
  __n128 v84;
  float v85;
  float v86;
  float v87;
  double v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  double v92;
  _OWORD *v93;
  _OWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  uint64_t v100;
  __n128 v101;
  float v102;
  float v103;
  float v104;
  float v105;
  float v106;
  float v107;
  double v108;
  __n128 v109;
  _OWORD *v110;
  double v111;
  _OWORD *v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _OWORD *v117;
  _OWORD *v118;
  uint64_t v119;
  __n128 v120;
  float v121;
  float v122;
  float v123;
  float v124;
  float v125;
  float v126;
  double v127;
  __n128 v128;
  _OWORD *v129;
  double v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  _OWORD *v136;
  _OWORD *v137;
  uint64_t v138;
  float v139;
  float v140;
  float v141;
  _OWORD *v142;
  _OWORD *v143;
  _OWORD *v144;
  _OWORD *v145;
  _OWORD *v146;
  _OWORD *v147;
  _OWORD *v148;
  uint64_t v149;
  double v150;
  __n128 v151;
  float v152;
  double v153;
  __n128 v154;
  __n128 v155;
  __n128 v156;
  _OWORD *v157;
  _OWORD *v158;
  _OWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  _OWORD *v162;
  _OWORD *v163;
  _OWORD *v164;
  uint64_t v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  _OWORD *v176;
  uint64_t v177;
  _OWORD *v179;
  _OWORD *v180;
  _OWORD *v181;
  _OWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  _OWORD *v198;
  _OWORD *v199;
  _OWORD *v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  _OWORD *v208;
  _OWORD *v209;
  _OWORD *v210;
  _OWORD *v211;
  _OWORD *v212;
  _OWORD *v213;
  _OWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  _OWORD *v217;
  _OWORD *v218;
  _OWORD *v219;
  _OWORD *v220;
  _OWORD *v221;
  _OWORD *v222;
  _OWORD *v223;
  _OWORD *v224;
  _OWORD *v225;
  _OWORD *v226;
  _OWORD *v227;
  _OWORD *v228;
  _OWORD *v229;
  _OWORD *v230;
  _OWORD *v231;
  _OWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  _OWORD *v235;
  _OWORD *v236;
  _OWORD *v237;
  _OWORD *v238;
  _OWORD *v239;
  _OWORD *v240;
  _OWORD *v241;
  _OWORD *v242;
  _OWORD *v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  _OWORD *v251;
  _OWORD *v252;
  _OWORD *v253;
  _OWORD *v254;
  _OWORD *v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  _OWORD *v261;
  _OWORD *v262;
  _OWORD *v263;
  _OWORD *v264;
  _OWORD *v265;
  _OWORD *v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __n128 v322;
  __int128 v323;
  __n128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __n128 v330;
  __n128 v331;
  __int128 v332;
  __n128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __n128 v342;
  __int128 v343;
  __n128 v344;
  __n128 v345;
  __n128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __n128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __n128 v362;
  __int128 v363;
  _OWORD v364[2];
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __n128 v375;
  __n128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0027F30;
  v383 = xmmword_1B00292B0;
  v384 = xmmword_1B00292C0;
  v381 = xmmword_1B00292D0;
  v382 = xmmword_1B00292E0;
  v379 = xmmword_1B0028220;
  v380 = xmmword_1B0028230;
  v377 = xmmword_1B00292F0;
  v378 = xmmword_1B0029300;
  __asm { FMOV            V2.2D, #1.0 }
  v375 = _Q2;
  v376 = _Q2;
  v373 = xmmword_1B0027B20;
  v374 = xmmword_1B0027B30;
  v371 = xmmword_1B0029320;
  v372 = xmmword_1B0029330;
  v369 = xmmword_1B0029340;
  v370 = xmmword_1B0029350;
  v367 = xmmword_1B0029360;
  v368 = xmmword_1B0029370;
  OUTLINED_FUNCTION_25_6(0.380392194, 0.509803951, _Q2);
  v362 = v6;
  v363 = xmmword_1B0027030;
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029380, (__n128)xmmword_1B0029390);
  OUTLINED_FUNCTION_28_51((__n128)xmmword_1B00293A0, (__n128)xmmword_1B00293B0);
  OUTLINED_FUNCTION_27_57((__n128)xmmword_1B00293C0, (__n128)xmmword_1B00293D0);
  v354 = xmmword_1B00293E0;
  v355 = xmmword_1B00293F0;
  v352 = v7;
  OUTLINED_FUNCTION_23_19((__n128)xmmword_1B0025E90, 0.353558868, v7);
  v346 = v8;
  v347 = xmmword_1B0025E50;
  v344 = v8;
  v345 = v8;
  v342 = v8;
  OUTLINED_FUNCTION_15_86((__n128)xmmword_1B0027770, 1.0, v8);
  v333 = v9;
  v315 = (__int128)v9;
  v330 = v10;
  v314 = (__int128)v11;
  v331 = v11;
  v328 = xmmword_1B0029400;
  v329 = xmmword_1B00287A0;
  v326 = xmmword_1B0029410;
  v327 = xmmword_1B0029420;
  v313 = (__int128)v10;
  OUTLINED_FUNCTION_14_91(1.0, 0.810572743, v10, v11, v9);
  v305 = v12;
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_18_5(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, 650.0, 35.0, 0.3, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 0, &v365,
    1067450368,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    1112014848,
    1097859072,
    &v318,
    v305);
  v383 = xmmword_1B00292B0;
  v384 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  v377 = xmmword_1B0029430;
  v378 = xmmword_1B0029440;
  v375 = (__n128)v313;
  v376 = (__n128)v313;
  v373 = xmmword_1B0027B20;
  v374 = xmmword_1B0027B30;
  *(_QWORD *)&v23 = OUTLINED_FUNCTION_11_86().n128_u64[0];
  OUTLINED_FUNCTION_25_6(v23, v24, v25);
  v362 = v26;
  v363 = v314;
  v360 = xmmword_1B0029380;
  v361 = xmmword_1B0029390;
  v358 = xmmword_1B00293A0;
  v359 = xmmword_1B00293B0;
  v356 = xmmword_1B00293C0;
  v357 = xmmword_1B00293D0;
  v354 = xmmword_1B00293E0;
  v355 = xmmword_1B00293F0;
  v352 = v26;
  OUTLINED_FUNCTION_23_19((__n128)xmmword_1B0025E90, v27, v26);
  v346 = v28;
  v347 = v315;
  v344 = v28;
  v345 = v28;
  v342 = v28;
  OUTLINED_FUNCTION_15_86((__n128)xmmword_1B0027770, v29, v28);
  v333 = v30;
  v330 = v31;
  v331 = v32;
  v328 = xmmword_1B0029400;
  v329 = xmmword_1B00287A0;
  v326 = xmmword_1B0029410;
  v327 = xmmword_1B0029450;
  OUTLINED_FUNCTION_14_91(0.810572743, 1.0, v31, v32, v30);
  v306 = v33;
  OUTLINED_FUNCTION_2_108();
  v203 = v34;
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_18_5(v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, 650.0, 35.0, 0.3, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 0, &v365,
    1067450368,
    v364,
    &v362,
    &v360,
    &v358,
    v203,
    v207,
    v211,
    v215,
    v219,
    v225,
    v231,
    v237,
    v243,
    v249,
    v255,
    v261,
    v265,
    v269,
    v273,
    v277,
    v281,
    v285,
    &v320,
    1112014848,
    1097859072,
    &v318,
    v306);
  v383 = xmmword_1B0029460;
  v384 = xmmword_1B0029470;
  v381 = xmmword_1B0029480;
  v382 = xmmword_1B0029490;
  OUTLINED_FUNCTION_9_96();
  OUTLINED_FUNCTION_6_97((__n128)xmmword_1B00294A0, (__n128)xmmword_1B00294B0);
  *(_QWORD *)&v45 = OUTLINED_FUNCTION_11_86().n128_u64[0];
  v365 = (__int128)v46;
  v366 = (__int128)v46;
  OUTLINED_FUNCTION_12_92(v45, v47, v48, v46);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B00294E0, (__n128)xmmword_1B00294F0);
  OUTLINED_FUNCTION_28_51((__n128)xmmword_1B0029500, (__n128)xmmword_1B0029510);
  OUTLINED_FUNCTION_27_57((__n128)xmmword_1B0029520, (__n128)xmmword_1B0029530);
  OUTLINED_FUNCTION_4_104((__n128)xmmword_1B0029540, (__n128)xmmword_1B0029550, v49, v50);
  v331 = v51;
  v328 = xmmword_1B0029560;
  v329 = xmmword_1B0029570;
  v326 = xmmword_1B0029580;
  v327 = xmmword_1B0029590;
  v324 = v52;
  v325 = v53;
  v322 = v52;
  v323 = (__int128)v51;
  OUTLINED_FUNCTION_19_62(0.810572863, 1.0, v51.n128_f64[0], v52);
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_18_5(v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, 0.4, v66, &v369, &v367, v183, v188, &v365,
    1067450368,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    1112014848,
    1097859072,
    &v318,
    v307);
  v383 = xmmword_1B00295A0;
  v384 = xmmword_1B00295B0;
  OUTLINED_FUNCTION_21_56();
  v379 = xmmword_1B00295C0;
  v380 = xmmword_1B00295D0;
  OUTLINED_FUNCTION_6_97((__n128)xmmword_1B00295E0, (__n128)xmmword_1B00295F0);
  v371 = xmmword_1B0029610;
  v372 = xmmword_1B0029620;
  OUTLINED_FUNCTION_30_47();
  v367 = xmmword_1B0029630;
  v368 = xmmword_1B0026A00;
  v365 = xmmword_1B0026320;
  v366 = xmmword_1B0026330;
  OUTLINED_FUNCTION_12_92(0.970078886, 0.97049284, v67, v68);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029640, (__n128)xmmword_1B0029650);
  OUTLINED_FUNCTION_28_51((__n128)xmmword_1B0029660, (__n128)xmmword_1B0029670);
  OUTLINED_FUNCTION_27_57((__n128)xmmword_1B0029680, (__n128)xmmword_1B0029690);
  OUTLINED_FUNCTION_4_104((__n128)xmmword_1B00296A0, (__n128)xmmword_1B00296B0, v69, v70);
  v331 = v71;
  v328 = xmmword_1B00296C0;
  v329 = xmmword_1B00296D0;
  v326 = xmmword_1B00296E0;
  v327 = xmmword_1B0026FC0;
  v324 = v72;
  v325 = v73;
  v322 = v72;
  v323 = (__int128)v71;
  OUTLINED_FUNCTION_19_62(v71.n128_f64[0], 0.752212405, 1.0, v72);
  OUTLINED_FUNCTION_2_108();
  v204 = v74;
  v75 = OUTLINED_FUNCTION_23_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v76, v77, v78, v79, v80, v81, v82, v83, v75, v84, 1400.0, v85, v86, v87, 0.9, 0.7, &v369, &v367,
    0x3F6666663F666666,
    0,
    &v365,
    1065353216,
    v364,
    &v362,
    &v360,
    &v358,
    v204,
    v208,
    v212,
    v216,
    v220,
    v226,
    v232,
    v238,
    v244,
    v250,
    v256,
    v262,
    v266,
    v270,
    v274,
    v278,
    v282,
    v286,
    &v320,
    1112014848,
    1097859072,
    &v318,
    v308);
  v383 = xmmword_1B00296F0;
  v384 = xmmword_1B0029700;
  v381 = xmmword_1B0029710;
  v382 = xmmword_1B0029720;
  OUTLINED_FUNCTION_9_96();
  OUTLINED_FUNCTION_6_97((__n128)xmmword_1B0029730, (__n128)xmmword_1B0029740);
  OUTLINED_FUNCTION_10_91();
  v365 = xmmword_1B0027D70;
  v366 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_12_92(1.0, 0.9627316, v88, v89);
  OUTLINED_FUNCTION_27_8((__n128)xmmword_1B0029750, (__n128)xmmword_1B0029760);
  OUTLINED_FUNCTION_28_51((__n128)xmmword_1B0029770, (__n128)xmmword_1B0029780);
  OUTLINED_FUNCTION_27_57((__n128)xmmword_1B0029790, (__n128)xmmword_1B00297A0);
  v354 = xmmword_1B00297B0;
  v355 = xmmword_1B00297C0;
  v352 = v90;
  v353 = xmmword_1B0025E90;
  v350 = (__int128)v90;
  v351 = (__int128)v90;
  v348 = (__int128)v90;
  v349 = xmmword_1B0025E90;
  v346 = v90;
  v347 = v315;
  v344 = v90;
  v345 = v90;
  v342 = v90;
  v343 = xmmword_1B0027770;
  v340 = (__int128)v90;
  v341 = (__int128)v90;
  v338 = (__int128)v90;
  v339 = (__int128)v90;
  v336 = (__int128)v90;
  v337 = (__int128)v90;
  v334 = (__int128)v90;
  v335 = (__int128)v90;
  v332 = (__int128)v90;
  v333 = (__n128)v315;
  v330 = v90;
  v331 = v91;
  v328 = xmmword_1B00297D0;
  v329 = xmmword_1B00297E0;
  v326 = xmmword_1B00297F0;
  v327 = xmmword_1B0029800;
  v324 = v90;
  v325 = v315;
  v322 = v90;
  v323 = (__int128)v91;
  v320 = (__int128)v90;
  v321 = (__int128)v90;
  v318 = (__int128)v90;
  v319 = (__int128)v90;
  v316 = (__int128)v90;
  v317 = (__int128)v90;
  v92 = OUTLINED_FUNCTION_7_91();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, v93, v94, v95, v96, v97, v98, v99, v100, v92, v101, v102, v103, v104, v105, v106, v107, v179, v181,
    v184,
    v189,
    &v365,
    1065353216,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    1112014848,
    1097859072,
    &v318,
    (uint64_t)&v316);
  v383 = xmmword_1B00296F0;
  v384 = xmmword_1B0029700;
  v381 = xmmword_1B0029710;
  v382 = xmmword_1B0029720;
  v377 = xmmword_1B0029730;
  v378 = xmmword_1B0029740;
  v365 = xmmword_1B0027D70;
  v366 = xmmword_1B0027D80;
  v360 = xmmword_1B0029750;
  v361 = xmmword_1B0029760;
  v358 = xmmword_1B0029770;
  v359 = xmmword_1B0029780;
  v356 = xmmword_1B0029790;
  v357 = xmmword_1B00297A0;
  v354 = xmmword_1B00297B0;
  v355 = xmmword_1B00297C0;
  v328 = xmmword_1B00297D0;
  v329 = xmmword_1B00297E0;
  v326 = xmmword_1B00297F0;
  v327 = xmmword_1B0029800;
  v379 = xmmword_1B0028220;
  v380 = xmmword_1B0028230;
  OUTLINED_FUNCTION_20_67();
  *(_QWORD *)&v108 = OUTLINED_FUNCTION_10_91().n128_u64[0];
  OUTLINED_FUNCTION_0_121(v108, v109);
  v221 = v110;
  OUTLINED_FUNCTION_20_11();
  v111 = OUTLINED_FUNCTION_7_91();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v112, v113, v114, v115, v116, v117, v118, v119, v111, v120, v121, v122, v123, v124, v125, v126, v180, v182,
    v185,
    v190,
    v193,
    1065353216,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    v221,
    v227,
    v233,
    v239,
    v245,
    v251,
    v257,
    v263,
    v267,
    v271,
    v275,
    v279,
    v283,
    v287,
    v289,
    v293,
    v297,
    v301,
    v309);
  v383 = xmmword_1B00295A0;
  v384 = xmmword_1B00295B0;
  v379 = xmmword_1B00295C0;
  v380 = xmmword_1B00295D0;
  v377 = xmmword_1B00295E0;
  v378 = xmmword_1B00295F0;
  v371 = xmmword_1B0029610;
  v372 = xmmword_1B0029620;
  v367 = xmmword_1B0029630;
  v368 = xmmword_1B0026A00;
  v365 = xmmword_1B0026320;
  v366 = xmmword_1B0026330;
  v360 = xmmword_1B0029640;
  v361 = xmmword_1B0029650;
  v358 = xmmword_1B0029660;
  v359 = xmmword_1B0029670;
  v356 = xmmword_1B0029680;
  v357 = xmmword_1B0029690;
  v354 = xmmword_1B00296A0;
  v355 = xmmword_1B00296B0;
  v328 = xmmword_1B00296C0;
  v329 = xmmword_1B00296D0;
  v326 = xmmword_1B00296E0;
  v327 = xmmword_1B0026FC0;
  OUTLINED_FUNCTION_21_56();
  OUTLINED_FUNCTION_20_67();
  *(_QWORD *)&v127 = OUTLINED_FUNCTION_30_47().n128_u64[0];
  OUTLINED_FUNCTION_0_121(v127, v128);
  v222 = v129;
  OUTLINED_FUNCTION_20_11();
  v130 = OUTLINED_FUNCTION_23_5();
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, v131, v132, v133, v134, v135, v136, v137, v138, v130, (__n128)xmmword_1B0026420, 1400.0, v139, v140, v141, 0.9, 0.7, &v369, &v367,
    0x3F6666663F666666,
    0,
    v194,
    1065353216,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    v222,
    v228,
    v234,
    v240,
    v246,
    v252,
    v258,
    v264,
    v268,
    v272,
    v276,
    v280,
    v284,
    v288,
    v290,
    v294,
    v298,
    v302,
    v310);
  v383 = xmmword_1B0029460;
  v384 = xmmword_1B0029470;
  OUTLINED_FUNCTION_21_56();
  v377 = xmmword_1B00294A0;
  v378 = xmmword_1B00294B0;
  v360 = xmmword_1B00294E0;
  v361 = xmmword_1B00294F0;
  v358 = xmmword_1B0029500;
  v359 = xmmword_1B0029510;
  v356 = xmmword_1B0029520;
  v357 = xmmword_1B0029530;
  v354 = xmmword_1B0029540;
  v355 = xmmword_1B0029550;
  v328 = xmmword_1B0029560;
  v329 = xmmword_1B0029570;
  v326 = xmmword_1B0029580;
  v327 = xmmword_1B0029590;
  OUTLINED_FUNCTION_9_96();
  v375 = (__n128)v313;
  v376 = (__n128)v313;
  v373 = xmmword_1B0027B20;
  v374 = xmmword_1B0027B30;
  v371 = xmmword_1B0029320;
  v372 = xmmword_1B0029330;
  v369 = xmmword_1B0029340;
  v370 = xmmword_1B0029350;
  v367 = xmmword_1B0029360;
  v368 = xmmword_1B0029370;
  v365 = v313;
  v366 = v313;
  memset(v364, 0, sizeof(v364));
  v362 = (__n128)v313;
  v363 = v314;
  v352 = (__n128)v313;
  v353 = xmmword_1B0025E90;
  v350 = v313;
  v351 = v313;
  v348 = v313;
  v349 = xmmword_1B0025E90;
  v346 = (__n128)v313;
  v347 = v315;
  v344 = (__n128)v313;
  v345 = (__n128)v313;
  v342 = (__n128)v313;
  v343 = xmmword_1B0027770;
  v340 = v313;
  v341 = v313;
  v338 = v313;
  v339 = v313;
  v336 = v313;
  v337 = v313;
  v334 = v313;
  v335 = v313;
  v332 = v313;
  v333 = (__n128)v315;
  v330 = (__n128)v313;
  v331 = (__n128)v314;
  v324 = (__n128)v313;
  v325 = v315;
  v322 = (__n128)v313;
  v323 = v314;
  v320 = v313;
  v321 = v313;
  v318 = v313;
  v319 = v313;
  v316 = v313;
  v317 = v313;
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_17_7(v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, 900.0, 150.0, 0.4, v152, &v369, &v367, v186, v191, &v365,
    1067450368,
    v364,
    &v362,
    &v360,
    &v358,
    &v356,
    &v354,
    &v352,
    &v350,
    &v348,
    &v346,
    &v344,
    &v342,
    &v340,
    &v338,
    &v336,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    &v320,
    1112014848,
    1097859072,
    &v318,
    (uint64_t)&v316);
  v377 = xmmword_1B0029430;
  v378 = xmmword_1B0029440;
  v327 = xmmword_1B0029450;
  v326 = xmmword_1B0029410;
  v383 = xmmword_1B00292B0;
  v384 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  *(_QWORD *)&v153 = OUTLINED_FUNCTION_1_106().n128_u64[0];
  OUTLINED_FUNCTION_5_101(v153, v154, v155, v156);
  v291 = v157;
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_17_7(v158, v159, v160, v161, v162, v163, v164, v165, -18.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, 0.4, &v369, &v367, v187, v192, &v365,
    1067450368,
    v195,
    v197,
    v199,
    v201,
    v205,
    v209,
    v213,
    v217,
    v223,
    v229,
    v235,
    v241,
    v247,
    v253,
    v259,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    v291,
    v295,
    v299,
    v303,
    v311);
  v383 = xmmword_1B00292B0;
  v384 = xmmword_1B00292C0;
  OUTLINED_FUNCTION_8_95();
  v377 = xmmword_1B00292F0;
  v378 = xmmword_1B0029300;
  OUTLINED_FUNCTION_1_106();
  v326 = xmmword_1B0029410;
  v327 = xmmword_1B0029420;
  OUTLINED_FUNCTION_5_101(1.0, v166, v167, v168);
  v292 = v169;
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_17_7(v170, v171, v172, v173, v174, v175, v176, v177, -90.0, (__n128)xmmword_1B00261B0, 650.0, 35.0, 0.3, 0.4, &v369, &v367, 0x3F4CCCCD3F4CCCCDLL, 0, &v365,
    1067450368,
    v196,
    v198,
    v200,
    v202,
    v206,
    v210,
    v214,
    v218,
    v224,
    v230,
    v236,
    v242,
    v248,
    v254,
    v260,
    &v334,
    &v332,
    &v330,
    &v328,
    &v326,
    &v324,
    &v322,
    v292,
    v296,
    v300,
    v304,
    v312);
  return v0;
}

uint64_t sub_1AFDCEAB8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char a12, char a13, uint64_t a14)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a12 & 1;
  *(_BYTE *)(a9 + 65) = a13;
  *(double *)(a9 + 72) = a10;
  *(double *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 88) = a14;
  return result;
}

BOOL static HourlyForecastViewStyle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  char v17;

  v2 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 72);
  v3 = *(double *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v5 = *(double *)(a2 + 56);
  v16 = *(unsigned __int8 *)(a2 + 64);
  v17 = *(_BYTE *)(a1 + 64);
  v14 = *(unsigned __int8 *)(a2 + 65);
  v15 = *(unsigned __int8 *)(a1 + 65);
  v7 = *(double *)(a2 + 72);
  v6 = *(double *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  sub_1AFB7EA60();
  if ((sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0
    || (sub_1B0008B54() & 1) == 0)
  {
    return 0;
  }
  if ((v17 & 1) != 0)
  {
    if (!v16)
      return 0;
    v8 = (v15 ^ v14) != 1 && v4 == v7;
    if (!v8 || v3 != v6)
      return 0;
    return v13 == v12;
  }
  if ((v16 & 1) != 0)
    return 0;
  result = 0;
  if (v2 == v5 && v15 == v14 && v4 == v7 && v3 == v6)
    return v13 == v12;
  return result;
}

void destroy for HourlyForecastViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for HourlyForecastViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(void **)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v10;
  return a1;
}

uint64_t assignWithCopy for HourlyForecastViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v22;
  v24 = v22;

  v25 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v25;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for HourlyForecastViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for HourlyForecastViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HourlyForecastViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastViewStyle()
{
  return &type metadata for HourlyForecastViewStyle;
}

BOOL static ForegroundEffect.RainDropsTier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ForegroundEffect.RainDropsTier.hash(into:)()
{
  return sub_1B0009010();
}

uint64_t ForegroundEffect.RainDropsTier.hashValue.getter()
{
  sub_1B0009004();
  sub_1B0009010();
  return sub_1B0009040();
}

BOOL sub_1AFDCF034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void (*v8)(char *, uint64_t);
  double v9;
  double v10;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - v5;
  sub_1B0005CA4();
  v7 = objc_msgSend((id)objc_opt_self(), sel_fahrenheit);
  sub_1B00050E0();

  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  sub_1B0005068();
  v10 = v9;
  v8(v6, v0);
  return round(v10) < 20.0;
}

BOOL static ForegroundEffect.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v3 == 3)
    return 0;
  return v2 == v3;
}

unint64_t sub_1AFDCF184()
{
  unint64_t result;

  result = qword_1EEE743C8;
  if (!qword_1EEE743C8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for ForegroundEffect.RainDropsTier, &type metadata for ForegroundEffect.RainDropsTier);
    atomic_store(result, (unint64_t *)&qword_1EEE743C8);
  }
  return result;
}

uint64_t sub_1AFDCF1C0(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_1AFDCF1D4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

uint64_t storeEnumTagSinglePayload for ForegroundEffect.RainDropsTier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AFDCF230 + 4 * byte_1B0039244[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AFDCF264 + 4 * byte_1B003923F[v4]))();
}

uint64_t sub_1AFDCF264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDCF26C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFDCF274);
  return result;
}

uint64_t sub_1AFDCF280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFDCF288);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AFDCF28C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDCF294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConditionsComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for ConditionsComplicationViewModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = a2[2];
      a1[1] = a2[1];
      a1[2] = v9;
      v10 = v7[6];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1B0005B84();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      *((_BYTE *)a1 + v7[7]) = *((_BYTE *)a2 + v7[7]);
      v15 = v7[8];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1B0005FB0();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v16, v17, v18);
      v20 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v21 = v20[5];
      v22 = &v16[v21];
      v23 = &v17[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
      v16[v20[6]] = v17[v20[6]];
      v16[v20[7]] = v17[v20[7]];
      *(_QWORD *)&v16[v20[8]] = *(_QWORD *)&v17[v20[8]];
      v16[v20[9]] = v17[v20[9]];
      v19((char *)a1 + v7[9], (char *)a2 + v7[9], v18);
      v24 = v7[10];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      v28((char *)a1 + v7[11], (char *)a2 + v7[11], v27);
      v28((char *)a1 + v7[12], (char *)a2 + v7[12], v27);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for ConditionsComplicationDataStatus(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v2 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  result = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + v2[6];
    v5 = sub_1B0005B84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v2[8];
    v7 = sub_1B0005FB0();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v6, v7);
    v8(a1 + v2[9], v7);
    v9 = a1 + v2[10];
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v9, v10);
    v11(a1 + v2[11], v10);
    v11(a1 + v2[12], v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ConditionsComplicationDataStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);

  v6 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = v6[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B0005B84();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v13 = v6[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1B0005FB0();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v18 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v19 = v18[5];
    v20 = &v14[v19];
    v21 = &v15[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v14[v18[6]] = v15[v18[6]];
    v14[v18[7]] = v15[v18[7]];
    *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
    v14[v18[9]] = v15[v18[9]];
    v17((char *)a1 + v6[9], (char *)a2 + v6[9], v16);
    v22 = v6[10];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v26((char *)a1 + v6[11], (char *)a2 + v6[11], v25);
    v26((char *)a1 + v6[12], (char *)a2 + v6[12], v25);
    *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

_QWORD *assignWithCopy for ConditionsComplicationDataStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);

  v6 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30 = v6[6];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_1B0005B84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
      *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
      v34 = v6[8];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_1B0005FB0();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24);
      v38(v35, v36, v37);
      v39 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v40 = v39[5];
      v41 = &v35[v40];
      v42 = &v36[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v35[v39[6]] = v36[v39[6]];
      v35[v39[7]] = v36[v39[7]];
      *(_QWORD *)&v35[v39[8]] = *(_QWORD *)&v36[v39[8]];
      v35[v39[9]] = v36[v39[9]];
      v38((char *)a1 + v6[9], (char *)a2 + v6[9], v37);
      v43 = v6[10];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24);
      v47(v44, v45, v46);
      v47((char *)a1 + v6[11], (char *)a2 + v6[11], v46);
      v47((char *)a1 + v6[12], (char *)a2 + v6[12], v46);
      *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFDCFB28((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v9 = v6[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1B0005B84();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1B0005FB0();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v19 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v20 = v19[5];
  v21 = &v15[v20];
  v22 = &v16[v20];
  v23 = v22[8];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v23;
  v15[v19[6]] = v16[v19[6]];
  v15[v19[7]] = v16[v19[7]];
  *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
  v15[v19[9]] = v16[v19[9]];
  v18((char *)a1 + v6[9], (char *)a2 + v6[9], v17);
  v24 = v6[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v28((char *)a1 + v6[11], (char *)a2 + v6[11], v27);
  v28((char *)a1 + v6[12], (char *)a2 + v6[12], v27);
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t sub_1AFDCFB28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConditionsComplicationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeWithTake for ConditionsComplicationDataStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  int *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);

  v6 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    v7 = v6[6];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1B0005B84();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    a1[v6[7]] = a2[v6[7]];
    v11 = v6[8];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_1B0005FB0();
    v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    v16 = (int *)type metadata accessor for WeatherConditionGradientModel();
    v17 = v16[5];
    v18 = &v12[v17];
    v19 = &v13[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v12[v16[6]] = v13[v16[6]];
    v12[v16[7]] = v13[v16[7]];
    *(_QWORD *)&v12[v16[8]] = *(_QWORD *)&v13[v16[8]];
    v12[v16[9]] = v13[v16[9]];
    v15(&a1[v6[9]], &a2[v6[9]], v14);
    v20 = v6[10];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
    v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
    v24(v21, v22, v23);
    v24(&a1[v6[11]], &a2[v6[11]], v23);
    v24(&a1[v6[12]], &a2[v6[12]], v23);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

uint64_t assignWithTake for ConditionsComplicationDataStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);

  v6 = (int *)type metadata accessor for ConditionsComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 2, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload(a2, 2, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v28 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v28;
      swift_bridgeObjectRelease();
      v29 = v6[6];
      v30 = a1 + v29;
      v31 = a2 + v29;
      v32 = sub_1B0005B84();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
      *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
      v33 = v6[8];
      v34 = a1 + v33;
      v35 = a2 + v33;
      v36 = sub_1B0005FB0();
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40);
      v37(v34, v35, v36);
      v38 = (int *)type metadata accessor for WeatherConditionGradientModel();
      v39 = v38[5];
      v40 = v34 + v39;
      v41 = v35 + v39;
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
      *(_BYTE *)(v34 + v38[6]) = *(_BYTE *)(v35 + v38[6]);
      *(_BYTE *)(v34 + v38[7]) = *(_BYTE *)(v35 + v38[7]);
      *(_QWORD *)(v34 + v38[8]) = *(_QWORD *)(v35 + v38[8]);
      *(_BYTE *)(v34 + v38[9]) = *(_BYTE *)(v35 + v38[9]);
      v37(a1 + v6[9], a2 + v6[9], v36);
      v42 = v6[10];
      v43 = a1 + v42;
      v44 = a2 + v42;
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40);
      v46(v43, v44, v45);
      v46(a1 + v6[11], a2 + v6[11], v45);
      v46(a1 + v6[12], a2 + v6[12], v45);
      *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AFDCFB28(a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v9 = v6[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1B0005B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v13 = v6[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1B0005FB0();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v18 = (int *)type metadata accessor for WeatherConditionGradientModel();
  v19 = v18[5];
  v20 = v14 + v19;
  v21 = v15 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_BYTE *)(v14 + v18[6]) = *(_BYTE *)(v15 + v18[6]);
  *(_BYTE *)(v14 + v18[7]) = *(_BYTE *)(v15 + v18[7]);
  *(_QWORD *)(v14 + v18[8]) = *(_QWORD *)(v15 + v18[8]);
  *(_BYTE *)(v14 + v18[9]) = *(_BYTE *)(v15 + v18[9]);
  v17(a1 + v6[9], a2 + v6[9], v16);
  v22 = v6[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F44B0);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
  v26(v23, v24, v25);
  v26(a1 + v6[11], a2 + v6[11], v25);
  v26(a1 + v6[12], a2 + v6[12], v25);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  __swift_storeEnumTagSinglePayload(a1, 0, 2, (uint64_t)v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionsComplicationDataStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDD0098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = type metadata accessor for ConditionsComplicationViewModel();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConditionsComplicationDataStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AFDD00E8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for ConditionsComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1AFDD0134(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConditionsComplicationViewModel();
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AFDD0164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionsComplicationViewModel();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata accessor for ConditionsComplicationDataStatus()
{
  uint64_t result;

  result = qword_1EEE74440;
  if (!qword_1EEE74440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AFDD01D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConditionsComplicationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1AFDD0228()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;

  v35 = 3;
  v30 = 0x617274736F746C41;
  v31 = 0xEF53202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0050E80;
  v34 = 9;
  v26 = 0xEF53202D20737574;
  v27 = 0xD000000000000013;
  v28 = 0x80000001B0050E80;
  v29 = 9;
  v20 = 0x617274736F746C41;
  v21 = 0xEF4C202D20737574;
  v22 = 0xD000000000000013;
  v23 = 0x80000001B0051480;
  v24 = 6;
  v25 = 0x617274736F746C41;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFD56870();
  sub_1AFC3D2CC();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1134723072;
  LODWORD(v5) = 1106247680;
  sub_1AFB471E4((uint64_t)&v35, 48, 0, 2000, 133, 10, 1, 12, 0, 0x41F00000C20C0000, 0x4270000040400000, v5, 0x3DF5C28F3DA3D70ALL, v6, 0x3F8000003F800000, 0x3E99999A3F800000, 0x3F8000003F800000, 0x3F3333333F800000, 1056964608,
    0x4248000000000000,
    v7,
    0x3D8F5C293D3851ECLL,
    0x3F8000003F800000,
    0x3F152CEC3F800000,
    0x3F8000003F800000,
    0x3F5B1FF13F800000,
    1065353216,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFDD0A2C()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;

  v36 = 0;
  v31 = 0x617274736F746C41;
  v32 = 0xEF4C202D20737574;
  v33 = 0xD000000000000013;
  v34 = 0x80000001B0051480;
  v35 = 6;
  v27 = 0xEF4C202D20737574;
  v28 = 0xD000000000000013;
  v29 = 0x80000001B0051480;
  v30 = 6;
  v21 = 0x617274736F746C41;
  v22 = 0xEF53202D20737574;
  v23 = 0xD000000000000013;
  v24 = 0x80000001B0050E80;
  v25 = 6;
  v26 = 0x617274736F746C41;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFCC88BC();
  sub_1AFCC88BC();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V1.2S, #18.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 0x4348000040C00000;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1132068864;
  *(_QWORD *)&v9 = 0x4140000040A00000;
  LODWORD(v8) = 1169915904;
  LODWORD(v6) = 1128136704;
  sub_1AFB471E4((uint64_t)&v36, 48, 0, 2000, 133, 10, 1, 6, 0xC28C000000000000, 0x41F00000C20C0000, 0x42F000003F800000, v6, 0x3ECCCCCD3E99999ALL, v7, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EA23AEF3F800000, 0x40BA08D040400000,
    0x42B4000000000000,
    v8,
    0x3E8F5C293DCCCCCDLL,
    0x3F8000003F800000,
    0x3DEDC6D93F800000,
    0x3F8000003F800000,
    0x3E9EFB2A3F800000,
    1065353216,
    0x4110000000000000,
    v9,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v10,
    v11,
    xmmword_1B0025CC0,
    _Q0,
    v12,
    1084227584,
    v13,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFDD1260()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 0;
  sub_1AFBA38EC();
  sub_1AFBA38EC();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B449BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E6B851F3E23D70ALL;
  *(_QWORD *)&v11 = 0x4489800041880000;
  LODWORD(v9) = 1084227584;
  DWORD2(v8) = 1142292480;
  *(_QWORD *)&v8 = 0x41C8000040E85937;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 48, 0, 3250, 200, 30, 1, 4, 0, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E8F5C293E3851ECLL,
    1092616192,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1090519040,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003E4CCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

uint64_t SkyGradientKeyframe.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SkyGradientKeyframe.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SkyGradientKeyframe.name.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double SkyGradientKeyframe.hour.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SkyGradientKeyframe.hour.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*SkyGradientKeyframe.hour.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double SkyGradientKeyframe.elevationDegrees.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void SkyGradientKeyframe.elevationDegrees.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*SkyGradientKeyframe.elevationDegrees.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t SkyGradientKeyframe.init(name:hour:elevationDegrees:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  return result;
}

uint64_t SkyGradientKeyframe.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_1B000901C();
    swift_bridgeObjectRetain();
    sub_1B0008614();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B000901C();
  }
  sub_1B0009034();
  return sub_1B0009034();
}

BOOL static SkyGradientKeyframe.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  char v10;
  _BOOL8 result;
  BOOL v12;

  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(double *)(a1 + 16);
  v4 = *(double *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(double *)(a2 + 16);
  v7 = *(double *)(a2 + 24);
  if (!v3)
  {
    if (v6)
      v12 = 0;
    else
      v12 = v5 == v8;
    if (v12)
      return v4 == v7;
    return 0;
  }
  if (!v6)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v6)
  {
    if (v5 == v8)
      return v4 == v7;
    return 0;
  }
  v10 = sub_1B0008FB0();
  result = 0;
  if ((v10 & 1) != 0 && v5 == v8)
    return v4 == v7;
  return result;
}

uint64_t sub_1AFDD1C90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1920298856 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005D850)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1B0008FB0();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AFDD1DC4(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 1920298856;
  return 0xD000000000000010;
}

uint64_t sub_1AFDD1E10()
{
  char *v0;

  return sub_1AFDD1DC4(*v0);
}

uint64_t sub_1AFDD1E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFDD1C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDD1E3C()
{
  sub_1AFDD1FD8();
  return sub_1B0009118();
}

uint64_t sub_1AFDD1E64()
{
  sub_1AFDD1FD8();
  return sub_1B0009124();
}

uint64_t SkyGradientKeyframe.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74458);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDD1FD8();
  sub_1B0009058();
  LOBYTE(v13) = 0;
  v9 = v11;
  sub_1B0008F08();
  if (!v9)
  {
    v13 = v8;
    v12 = 1;
    sub_1AFBEE3C0();
    OUTLINED_FUNCTION_2_110();
    v13 = v7;
    v12 = 2;
    OUTLINED_FUNCTION_2_110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1AFDD1FD8()
{
  unint64_t result;

  result = qword_1EEE74460;
  if (!qword_1EEE74460)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0039548, &type metadata for SkyGradientKeyframe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74460);
  }
  return result;
}

uint64_t SkyGradientKeyframe.hashValue.getter()
{
  sub_1B0009004();
  SkyGradientKeyframe.hash(into:)();
  return sub_1B0009040();
}

uint64_t SkyGradientKeyframe.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74468);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AFDD1FD8();
  sub_1B000904C();
  if (!v2)
  {
    LOBYTE(v11) = 0;
    v6 = sub_1B0008E84();
    v9 = v8;
    v10 = v6;
    sub_1AFBEE438();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_0_122();
    OUTLINED_FUNCTION_0_122();
    OUTLINED_FUNCTION_1_108();
    *a2 = v10;
    a2[1] = v9;
    a2[2] = v11;
    a2[3] = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDD21EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SkyGradientKeyframe.init(from:)(a1, a2);
}

uint64_t sub_1AFDD2200(_QWORD *a1)
{
  return SkyGradientKeyframe.encode(to:)(a1);
}

uint64_t sub_1AFDD221C()
{
  sub_1B0009004();
  SkyGradientKeyframe.hash(into:)();
  return sub_1B0009040();
}

double static Array<A>.sineWaveElevations(maxAngle:offset:)(double a1, double a2)
{
  double v3;
  uint64_t v4;
  double result;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v3 = a1 / 90.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE70968);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B0039380;
  result = a2 - v3 * 90.0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(double *)(v4 + 56) = result;
  v6 = a2 - v3 * 78.0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0x4000000000000000;
  *(double *)(v4 + 88) = v6;
  v7 = a2 + v3 * -45.0;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 112) = 0x4010000000000000;
  *(double *)(v4 + 120) = v7;
  v8 = v3 * 0.0 + a2;
  *(_QWORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = 0;
  *(_QWORD *)(v4 + 144) = 0x4018000000000000;
  *(double *)(v4 + 152) = v8;
  v9 = v3 * 44.0 + a2;
  *(_QWORD *)(v4 + 160) = 0;
  *(_QWORD *)(v4 + 168) = 0;
  *(_QWORD *)(v4 + 176) = 0x4020000000000000;
  *(double *)(v4 + 184) = v9;
  v10 = v3 * 78.0 + a2;
  *(_QWORD *)(v4 + 192) = 0;
  *(_QWORD *)(v4 + 200) = 0;
  *(_QWORD *)(v4 + 208) = 0x4024000000000000;
  *(double *)(v4 + 216) = v10;
  *(_QWORD *)(v4 + 224) = 0;
  *(_QWORD *)(v4 + 232) = 0;
  *(_QWORD *)(v4 + 240) = 0x4028000000000000;
  *(double *)(v4 + 248) = v3 * 90.0 + a2;
  *(_QWORD *)(v4 + 256) = 0;
  *(_QWORD *)(v4 + 264) = 0;
  *(_QWORD *)(v4 + 272) = 0x402C000000000000;
  *(double *)(v4 + 280) = v10;
  *(_QWORD *)(v4 + 288) = 0;
  *(_QWORD *)(v4 + 296) = 0;
  *(_QWORD *)(v4 + 304) = 0x4030000000000000;
  *(double *)(v4 + 312) = v9;
  *(_QWORD *)(v4 + 320) = 0;
  *(_QWORD *)(v4 + 328) = 0;
  *(_QWORD *)(v4 + 336) = 0x4032000000000000;
  *(double *)(v4 + 344) = v8;
  *(_QWORD *)(v4 + 352) = 0;
  *(_QWORD *)(v4 + 360) = 0;
  *(_QWORD *)(v4 + 368) = 0x4034000000000000;
  *(double *)(v4 + 376) = v7;
  *(_QWORD *)(v4 + 384) = 0;
  *(_QWORD *)(v4 + 392) = 0;
  *(_QWORD *)(v4 + 400) = 0x4036000000000000;
  *(double *)(v4 + 408) = v6;
  *(_QWORD *)(v4 + 416) = 0;
  *(_QWORD *)(v4 + 424) = 0;
  *(_QWORD *)(v4 + 432) = 0x4038000000000000;
  *(double *)(v4 + 440) = result;
  return result;
}

double static Array<A>.idealElevations()()
{
  return static Array<A>.sineWaveElevations(maxAngle:offset:)(90.0, 0.0);
}

void sub_1AFDD23E0()
{
  void *v0;

  static Array<A>.sineWaveElevations(maxAngle:offset:)(90.0, 0.0);
  off_1EEE74450 = v0;
}

uint64_t static Array<A>.current.getter()
{
  if (qword_1EEE70200 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_2();
  return swift_bridgeObjectRetain();
}

uint64_t static Array<A>.current.setter(void *a1)
{
  if (qword_1EEE70200 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_2();
  off_1EEE74450 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Array<A>.current.modify())()
{
  if (qword_1EEE70200 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_2();
  return j__swift_endAccess;
}

unint64_t sub_1AFDD254C()
{
  unint64_t result;

  result = qword_1EEE74470;
  if (!qword_1EEE74470)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for SkyGradientKeyframe, &type metadata for SkyGradientKeyframe);
    atomic_store(result, (unint64_t *)&qword_1EEE74470);
  }
  return result;
}

uint64_t initializeWithCopy for SkyGradientKeyframe(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SkyGradientKeyframe(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for SkyGradientKeyframe(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SkyGradientKeyframe(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SkyGradientKeyframe(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SkyGradientKeyframe()
{
  return &type metadata for SkyGradientKeyframe;
}

uint64_t storeEnumTagSinglePayload for SkyGradientKeyframe.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AFDD2758 + 4 * byte_1B0039395[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AFDD278C + 4 * byte_1B0039390[v4]))();
}

uint64_t sub_1AFDD278C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDD2794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFDD279CLL);
  return result;
}

uint64_t sub_1AFDD27A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFDD27B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AFDD27B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDD27BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SkyGradientKeyframe.CodingKeys()
{
  return &type metadata for SkyGradientKeyframe.CodingKeys;
}

unint64_t sub_1AFDD27DC()
{
  unint64_t result;

  result = qword_1EEE74478;
  if (!qword_1EEE74478)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0039520, &type metadata for SkyGradientKeyframe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74478);
  }
  return result;
}

unint64_t sub_1AFDD281C()
{
  unint64_t result;

  result = qword_1EEE74480;
  if (!qword_1EEE74480)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B0039490, &type metadata for SkyGradientKeyframe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74480);
  }
  return result;
}

unint64_t sub_1AFDD285C()
{
  unint64_t result;

  result = qword_1EEE74488;
  if (!qword_1EEE74488)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B00394B8, &type metadata for SkyGradientKeyframe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE74488);
  }
  return result;
}

void sub_1AFDD289C()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD v23[8];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _WORD v27[8];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;

  v34 = 0;
  v29 = 0x617274736F746C41;
  v30 = 0xEF53202D20737574;
  v31 = 0xD000000000000013;
  v32 = 0x80000001B0050E80;
  v33 = 6;
  v26 = 0xE500000000000000;
  strcpy((char *)v27, "Wispy_Single");
  HIBYTE(v27[6]) = 0;
  v27[7] = -5120;
  v28 = 6;
  v21 = 0x7970736957;
  v22 = 0xE500000000000000;
  strcpy((char *)v23, "Wispy_Single");
  HIBYTE(v23[6]) = 0;
  v23[7] = -5120;
  v24 = 6;
  v25 = 0x7970736957;
  strcpy((char *)v19, "Wispy_Single");
  HIBYTE(v19[6]) = 0;
  v19[7] = -5120;
  v20 = 6;
  sub_1AFB80478();
  sub_1AFB80478();
  __asm
  {
    FMOV            V0.4S, #1.0
    FMOV            V2.2S, #6.0
  }
  *((_QWORD *)&v18 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v18 = 0x4248000044BB8000;
  DWORD2(v16) = 1116471296;
  *(_QWORD *)&v16 = 0x43FA000040400000;
  *(_QWORD *)&v14 = 0x3CA3D70A3EC1C9A8;
  *((_QWORD *)&v14 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v12 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v12 = 1086324736;
  LODWORD(v10) = 1101004800;
  DWORD2(v9) = 1166843904;
  *(_QWORD *)&v9 = 0x41F0000040A00000;
  LODWORD(v8) = 1153138688;
  LODWORD(v6) = 1140457472;
  sub_1AFB471E4((uint64_t)&v34, 48, 0, 2000, 133, 10, 1, 4, 0xC2B4000000000000, 0x41F00000C20C0000, 0x428C000040400000, v6, 0x3E8000003DF5C28FLL, v7, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v8,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4000000000000000,
    v9,
    0x3D4CCCCD3CF5C28FLL,
    1097147068,
    v10,
    v11,
    _Q0,
    _Q0,
    v12,
    1084227584,
    v13,
    _Q0,
    _Q0,
    v14,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v15,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v16,
    1039516303,
    1048576000,
    v17,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v18,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x4094035940A00000);
}

void sub_1AFDD3054()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[9];

  v18[0] = 0;
  sub_1AFDD3868();
  sub_1AFDD6C10();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFDD3868()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = _Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V2.2D, #1.0 }
  v70 = _Q2;
  v71 = _Q2;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = _Q2;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = _Q2;
  v62 = (int64x2_t)_Q2;
  v63 = xmmword_1B0025E90;
  v60 = _Q2;
  v61 = _Q2;
  v58 = _Q2;
  v59 = _Q2;
  v56 = _Q2;
  v57 = _Q2;
  v54 = _Q2;
  v55 = _Q2;
  v52 = _Q2;
  v53 = _Q2;
  v50 = _Q2;
  v51 = _Q2;
  v48 = _Q2;
  v49 = _Q2;
  v46 = _Q2;
  v47 = _Q2;
  v44 = _Q2;
  v45 = _Q2;
  v42 = _Q2;
  v43 = _Q2;
  v40 = _Q2;
  v41 = _Q2;
  v38 = _Q2;
  v39 = _Q2;
  v36 = _Q2;
  v37 = _Q2;
  v34 = _Q2;
  v35 = _Q2;
  v32 = _Q2;
  v33 = _Q2;
  v30 = _Q2;
  v31 = _Q2;
  v28 = _Q2;
  v29 = _Q2;
  v26 = _Q2;
  v27 = _Q2;
  v24 = _Q2;
  v25 = _Q2;
  v22 = _Q2;
  v23 = _Q2;
  v20 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v11 = _Q2;
  v16 = _Q2;
  v17 = _Q2;
  v14 = _Q2;
  v15 = _Q2;
  v12 = _Q2;
  v13 = _Q2;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v21 = xmmword_1B0025EE0;
  v18 = xmmword_1B0025EF0;
  v19 = xmmword_1B0025F00;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B0025F50;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025F60;
  v69 = xmmword_1B0025F70;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B0026030;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)xmmword_1B0026060;
  v63 = xmmword_1B0026070;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B0026160;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026240;
  v65 = xmmword_1B0026250;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026300;
  v65 = xmmword_1B0026310;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0026330;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026370;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026440;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026450;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = v11;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B00264C0;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026560;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026570;
  v67 = xmmword_1B0026580;
  v64 = xmmword_1B0026590;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026660;
  v67 = xmmword_1B0026670;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00266E0;
  v81 = xmmword_1B00266F0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B0026060;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.8, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026790;
  v81 = v11;
  v78 = xmmword_1B00267A0;
  v79 = xmmword_1B00267B0;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B00267C0;
  v75 = xmmword_1B0025E50;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  __asm { FMOV            V0.2D, #0.25 }
  v20 = _Q0;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026820;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026830;
  v19 = xmmword_1B0026840;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFDD6C10()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  int64x2_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int64x2_t v82;
  __int128 v83;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v10 = vdupq_n_s64(0x3FD7575760000000uLL);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v12 = (__int128)_Q0;
  v74 = _Q0;
  v75 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v72 = _Q1;
  v73 = _Q1;
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = _Q1;
  v64 = (int64x2_t)_Q1;
  v65 = xmmword_1B0025E90;
  v62 = _Q1;
  v63 = _Q1;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v13 = _Q1;
  v9 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = _Q1;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B00268C0;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B00268D0;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v80 = xmmword_1B00268E0;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B00268F0;
  v79 = v13;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B00271F0;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v8 = vdupq_n_s64(0x3FCF992720000000uLL);
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026920;
  v19 = v13;
  v16 = xmmword_1B0026930;
  v17 = xmmword_1B0026940;
  v14 = xmmword_1B0026950;
  v15 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025FE0;
  v83 = v13;
  v80 = xmmword_1B0025FF0;
  v81 = xmmword_1B0026000;
  v78 = xmmword_1B0026010;
  v79 = xmmword_1B0026020;
  v76 = xmmword_1B0026030;
  v77 = xmmword_1B0026040;
  v74 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v75 = xmmword_1B0026EA0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)xmmword_1B0026060;
  v65 = xmmword_1B0026070;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026080;
  v23 = xmmword_1B0026090;
  v20 = xmmword_1B00260A0;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B0026980;
  v17 = xmmword_1B0026990;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1106247680,
    1101004800,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00260C0;
  v83 = xmmword_1B00260D0;
  v80 = xmmword_1B00260E0;
  v81 = xmmword_1B00260F0;
  v78 = xmmword_1B0026100;
  v79 = xmmword_1B0026110;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026150;
  v69 = xmmword_1B0026160;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026180;
  v23 = xmmword_1B0026190;
  v20 = xmmword_1B00261A0;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B0026970;
  v19 = v13;
  v16 = xmmword_1B00269B0;
  v17 = xmmword_1B00269C0;
  v14 = xmmword_1B00269D0;
  v15 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B00261C0;
  v83 = xmmword_1B00261D0;
  v80 = xmmword_1B00261E0;
  v81 = xmmword_1B00261F0;
  v78 = xmmword_1B0026200;
  v79 = xmmword_1B0026210;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026240;
  v67 = xmmword_1B0026250;
  v64 = (int64x2_t)xmmword_1B0026260;
  v65 = xmmword_1B0026270;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026280;
  v23 = xmmword_1B0026290;
  v20 = xmmword_1B00262A0;
  v21 = xmmword_1B0026290;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B00269F0;
  v17 = xmmword_1B0026A00;
  v14 = xmmword_1B0026A10;
  v15 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v11 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00262D0;
  v81 = xmmword_1B0025F70;
  v78 = xmmword_1B00262E0;
  v79 = xmmword_1B00262F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026300;
  v67 = xmmword_1B0026310;
  v64 = (int64x2_t)xmmword_1B0026320;
  v65 = xmmword_1B0026330;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026340;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026350;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A30;
  v17 = xmmword_1B0026A40;
  v14 = xmmword_1B0026A50;
  v15 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0026370;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026A70;
  v17 = xmmword_1B0026A80;
  v14 = xmmword_1B0026A90;
  v15 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00263C0;
  v81 = xmmword_1B00263D0;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026390;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AC0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B00263C0;
  v81 = xmmword_1B00263D0;
  v78 = xmmword_1B00263E0;
  v79 = xmmword_1B00263F0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026220;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026400;
  v20 = xmmword_1B00263A0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AE0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = v11;
  v83 = xmmword_1B00262C0;
  v80 = xmmword_1B0026440;
  v81 = v13;
  v78 = v13;
  v79 = v13;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026450;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026230;
  v66 = v13;
  v67 = v13;
  v64 = (int64x2_t)xmmword_1B0026380;
  v65 = xmmword_1B0025F70;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B0026410;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = v12;
  v17 = xmmword_1B0026AB0;
  v14 = xmmword_1B0026AF0;
  v15 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v83 = xmmword_1B0026470;
  v80 = xmmword_1B0026480;
  v81 = xmmword_1B0026490;
  v78 = xmmword_1B00264A0;
  v79 = xmmword_1B00264B0;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = v13;
  v71 = xmmword_1B0026140;
  v68 = v13;
  v69 = xmmword_1B0026230;
  v66 = xmmword_1B00264C0;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v65 = xmmword_1B00264D0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026430;
  v23 = xmmword_1B0026130;
  v20 = xmmword_1B00264E0;
  v21 = xmmword_1B0026140;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026B00;
  v17 = xmmword_1B0026B10;
  v14 = xmmword_1B0026B20;
  v15 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026500;
  v83 = xmmword_1B0026510;
  v80 = xmmword_1B0026520;
  v81 = xmmword_1B0026530;
  v78 = xmmword_1B0026540;
  v79 = xmmword_1B0026550;
  v76 = v13;
  v77 = v13;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0027030;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = xmmword_1B0026560;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026570;
  v69 = xmmword_1B0026580;
  v66 = xmmword_1B0026590;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v65 = xmmword_1B00265A0;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B00265B0;
  v23 = xmmword_1B00265C0;
  v20 = xmmword_1B00265D0;
  v21 = xmmword_1B00265E0;
  v18 = v13;
  v19 = v13;
  v16 = xmmword_1B0026B40;
  v17 = xmmword_1B0026B50;
  v14 = xmmword_1B0026B60;
  v15 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026600;
  v83 = xmmword_1B0026610;
  v80 = xmmword_1B0026620;
  v81 = xmmword_1B0026630;
  v78 = xmmword_1B0026640;
  v79 = xmmword_1B0026650;
  v76 = v13;
  v77 = xmmword_1B0026120;
  v74 = (int64x2_t)v13;
  v75 = xmmword_1B0026FC0;
  v72 = v13;
  v73 = xmmword_1B0026130;
  v70 = xmmword_1B0026220;
  v71 = xmmword_1B0026140;
  v68 = xmmword_1B0026660;
  v69 = xmmword_1B0026670;
  v66 = xmmword_1B0026170;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v65 = xmmword_1B0026680;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026690;
  v23 = xmmword_1B00266A0;
  v20 = xmmword_1B00266B0;
  v21 = xmmword_1B00266C0;
  v18 = xmmword_1B0026B80;
  v19 = xmmword_1B0026B90;
  v16 = xmmword_1B0026BA0;
  v17 = xmmword_1B0026BB0;
  v14 = xmmword_1B0026BC0;
  v15 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v68, &v66,
    0x3F6666663F666666,
    0,
    &v64,
    0,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    0,
    1097859072,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0026BD0;
  v83 = v13;
  v80 = xmmword_1B0026700;
  v81 = xmmword_1B0026710;
  v78 = xmmword_1B0026720;
  v79 = xmmword_1B0026730;
  v76 = xmmword_1B0026060;
  v77 = xmmword_1B0026040;
  v74 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v75 = xmmword_1B00271B0;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0026050;
  v67 = xmmword_1B0025FA0;
  v64 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v65 = xmmword_1B0026740;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = xmmword_1B0026750;
  v23 = xmmword_1B0026760;
  v20 = xmmword_1B0026770;
  v21 = xmmword_1B0026780;
  v18 = xmmword_1B0026BE0;
  v19 = xmmword_1B0026BF0;
  v16 = xmmword_1B0026C00;
  v17 = xmmword_1B0026A00;
  v14 = xmmword_1B0026C10;
  v15 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v68, &v66,
    0x3F59999A3F59999ALL,
    0,
    &v64,
    665496235,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1101004800,
    1101004800,
    &v16,
    (uint64_t)&v14);
  v82 = (int64x2_t)xmmword_1B0025F10;
  v83 = v13;
  v79 = v13;
  v80 = xmmword_1B00268E0;
  v81 = xmmword_1B0025F30;
  v78 = xmmword_1B00268F0;
  v76 = xmmword_1B0025F50;
  v77 = xmmword_1B0025E50;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B00271F0;
  v72 = v13;
  v73 = v13;
  v70 = xmmword_1B0026900;
  v71 = xmmword_1B0026910;
  v68 = xmmword_1B0025F80;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025F90;
  v67 = xmmword_1B0025FA0;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v8;
  v23 = xmmword_1B0025FB0;
  v20 = xmmword_1B0025FC0;
  v21 = xmmword_1B0025FD0;
  v18 = xmmword_1B0026C30;
  v19 = v13;
  v16 = xmmword_1B0026C40;
  v17 = xmmword_1B0026C50;
  v14 = xmmword_1B0026C60;
  v15 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1119092736,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026C80;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026C90;
  v15 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  v82 = v10;
  v83 = xmmword_1B0026850;
  v80 = xmmword_1B0025DF0;
  v81 = xmmword_1B0025E00;
  v78 = xmmword_1B0025E10;
  v79 = xmmword_1B0025E20;
  v76 = xmmword_1B0025E30;
  v77 = xmmword_1B0025E40;
  v74 = (int64x2_t)v12;
  v75 = xmmword_1B0026E60;
  v72 = v13;
  v73 = v13;
  v70 = v13;
  v71 = v13;
  v68 = v13;
  v69 = xmmword_1B0025E50;
  v66 = xmmword_1B0025E80;
  v67 = v13;
  v64 = (int64x2_t)v13;
  v65 = xmmword_1B0025E90;
  v62 = v13;
  v63 = v13;
  v60 = v13;
  v61 = v13;
  v58 = v13;
  v59 = v13;
  v56 = v13;
  v57 = v13;
  v54 = v13;
  v55 = v13;
  v52 = v13;
  v53 = v13;
  v50 = v13;
  v51 = v13;
  v48 = v13;
  v49 = v13;
  v46 = v13;
  v47 = v13;
  v44 = v13;
  v45 = v13;
  v42 = v13;
  v43 = v13;
  v40 = v13;
  v41 = v13;
  v38 = v13;
  v39 = v13;
  v36 = v13;
  v37 = v13;
  v34 = v13;
  v35 = v13;
  v32 = v13;
  v33 = v13;
  v30 = v13;
  v31 = v13;
  v28 = v13;
  v29 = v13;
  v26 = v13;
  v27 = v13;
  v24 = v13;
  v25 = v13;
  v22 = (__int128)v9;
  v23 = xmmword_1B0025EE0;
  v20 = xmmword_1B0025EF0;
  v21 = xmmword_1B0025F00;
  v18 = xmmword_1B0026860;
  v19 = v13;
  v16 = xmmword_1B0026870;
  v17 = xmmword_1B0026880;
  v14 = xmmword_1B0026890;
  v15 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v82, &v80, &v78, &v76, &v74, &v72, &v70, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v68, &v66,
    0x3F8000003F000000,
    1060320051,
    &v64,
    1065353216,
    &v62,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    1123680256,
    1090519040,
    &v16,
    (uint64_t)&v14);
  return v0;
}

uint64_t WeatherProviderAttributionImageCache.image(at:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_89();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = OUTLINED_FUNCTION_13_93();
  v4 = OUTLINED_FUNCTION_20_68();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = OUTLINED_FUNCTION_13_93();
  return swift_task_switch();
}

uint64_t sub_1AFDDA24C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  _QWORD *v10;
  void *v11;

  v1 = v0[9];
  v2 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16))(v0[6], v0[2], v0[4]);
  OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_10_92();
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1AFDDAD44((void **)(v3 + 16), &v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  v4 = v11;
  v5 = OUTLINED_FUNCTION_24_3();
  if (v4)
  {
    OUTLINED_FUNCTION_13_1(v5, &qword_1ED1F08E0);
    v6 = v4;
    sub_1AFDDA480(v6);

    OUTLINED_FUNCTION_7_93();
    OUTLINED_FUNCTION_40_1();
    swift_task_dealloc();
    v7 = OUTLINED_FUNCTION_12_93();
    return v8(v7);
  }
  else
  {
    v10 = (_QWORD *)swift_task_alloc();
    v0[10] = (uint64_t)v10;
    *v10 = v0;
    v10[1] = sub_1AFDDA398;
    return sub_1AFDDA760(v0[2]);
  }
}

uint64_t sub_1AFDDA398(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_1AFDDA40C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_40_1();
  swift_task_dealloc();
  v0 = OUTLINED_FUNCTION_12_93();
  return v1(v0);
}

uint64_t sub_1AFDDA450()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_99();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  return OUTLINED_FUNCTION_3_104(*(uint64_t (**)(void))(v0 + 8));
}

id sub_1AFDDA480(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  int v14;
  uint8_t *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_data, v3);
  v7 = sub_1B0005728();
  v9 = v8;

  sub_1AFAEC5C0(0, &qword_1ED1F08E0);
  sub_1AFDDB40C(v7, v9);
  v10 = sub_1AFDDB1E8(v7, v9);
  if (v10)
  {
LABEL_10:
    sub_1AFD8DDFC(v7, v9);
    return v10;
  }
  if (qword_1EEE70078 != -1)
    swift_once();
  v11 = sub_1B0006D00();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EEE72148);
  v12 = a1;
  v13 = sub_1B0006CE8();
  v14 = sub_1B00089BC();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v25 = v14;
    v15 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27 = v24;
    *(_DWORD *)v15 = 136446210;
    v16 = objc_msgSend(v12, sel_response);
    v17 = objc_msgSend(v16, sel_URL);

    if (v17)
    {
      sub_1B00056F8();

      v18 = sub_1B0005710();
      v19 = 0;
    }
    else
    {
      v18 = sub_1B0005710();
      v19 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v5, v19, 1, v18);
    v20 = sub_1B00085C0();
    v26 = sub_1AFB4AD14(v20, v21, &v27);
    sub_1B0008BB4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AFABF000, v13, (os_log_type_t)v25, "unable to create a UIImage from freshly downloaded image at url=%{public}s", v15, 0xCu);
    v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1B5E03CC0](v22, -1, -1);
    MEMORY[0x1B5E03CC0](v15, -1, -1);

    goto LABEL_10;
  }
  sub_1AFD8DDFC(v7, v9);

  return v10;
}

uint64_t sub_1AFDDA760(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1B0005710();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_1B0004FB4();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AFDDA7E8()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[5] + 16))(v0[6], v0[2], v0[4]);
  OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_10_92();
  v0[10] = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1AFDDA890;
  return sub_1B0008998();
}

uint64_t sub_1AFDDA890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;

  v5 = *(_QWORD **)v4;
  v6 = *(void **)(*(_QWORD *)v4 + 80);
  v5[12] = a1;
  v5[13] = a2;
  v5[14] = a3;
  v5[15] = v3;
  swift_task_dealloc();

  return swift_task_switch();
}

void sub_1AFDDA904()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  os_unfair_lock_s *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);

  v2 = (void *)v0[14];
  v1 = v0[15];
  v3 = v0[12];
  v4 = v0[13];
  v5 = v0[9];
  v6 = v0[3];
  v7 = objc_allocWithZone(MEMORY[0x1E0CB34F0]);
  v8 = v2;
  sub_1AFDDB40C(v3, v4);
  v9 = sub_1AFDDB25C(v8, v3, v4);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = swift_task_alloc();
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v5;
  v12 = (void **)(v10 + 16);
  v13 = (os_unfair_lock_s *)(v10 + 24);
  os_unfair_lock_lock(v13);
  sub_1AFDDAF68(v12, *(_QWORD *)(v11 + 16));
  if (v1)
  {
    os_unfair_lock_unlock(v13);
  }
  else
  {
    v14 = v0[13];
    v15 = (void *)v0[14];
    v16 = v0[12];
    v18 = v0[8];
    v17 = v0[9];
    v19 = v0[7];
    os_unfair_lock_unlock(v13);
    v20 = OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_13_1(v20, &qword_1ED1F08E0);
    sub_1AFDDA480(v9);

    sub_1AFD8DDFC(v16, v14);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    v21 = OUTLINED_FUNCTION_12_93();
    v22(v21);
  }
}

uint64_t sub_1AFDDAA68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_99();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  return OUTLINED_FUNCTION_3_104(*(uint64_t (**)(void))(v0 + 8));
}

id WeatherProviderAttributionImageCache.cachedImage(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  void **v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;

  v2 = OUTLINED_FUNCTION_89();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v26 = OUTLINED_FUNCTION_20_68();
  v9 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_19_63((uint64_t)v8);
  OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_10_92();
  v10 = *(os_unfair_lock_s **)(v0 + 16);
  v11 = (void **)&v10[4];
  v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_1AFDDAD44(v11, &v28);
  os_unfair_lock_unlock(v12);
  v14 = v28;
  if (v28)
  {
    OUTLINED_FUNCTION_13_1(v13, &qword_1ED1F08E0);
    v15 = v14;
    v16 = sub_1AFDDA480(v15);

  }
  else
  {
    if (qword_1EEE70078 != -1)
      swift_once();
    v17 = sub_1B0006D00();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EEE72148);
    OUTLINED_FUNCTION_19_63((uint64_t)v5);
    v18 = sub_1B0006CE8();
    v19 = sub_1B00089BC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v28 = (void *)v25;
      *(_DWORD *)v20 = 136446210;
      v24 = v20 + 4;
      sub_1AFDDB2D4();
      v21 = sub_1B0008F80();
      v27 = sub_1AFB4AD14(v21, v22, (uint64_t *)&v28);
      sub_1B0008BB4();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      _os_log_impl(&dword_1AFABF000, v18, v19, "There is no cached response for image at url=%{public}s", v20, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_25();
    }
    OUTLINED_FUNCTION_15_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));

    v16 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v26);
  return v16;
}

void sub_1AFDDAD44(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = (void *)sub_1B0004F9C();
  v5 = objc_msgSend(v3, sel_cachedResponseForRequest_, v4);

  *a2 = v5;
}

uint64_t WeatherProviderAttributionImageCache.saveImage(at:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AFDDADF4;
  return WeatherProviderAttributionImageCache.image(at:)(a1);
}

uint64_t sub_1AFDDADF4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_1();
  if (!v1)

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t WeatherProviderAttributionImageCache.removeImage(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  os_unfair_lock_s *v9;
  void **v10;
  os_unfair_lock_s *v11;

  v4 = OUTLINED_FUNCTION_89();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  v6 = OUTLINED_FUNCTION_20_68();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v2, a1, v4, v8);
  OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_10_92();
  v9 = *(os_unfair_lock_s **)(v1 + 16);
  v10 = (void **)&v9[4];
  v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_1AFDDAF18(v10);
  os_unfair_lock_unlock(v11);
  return OUTLINED_FUNCTION_15_3(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

void sub_1AFDDAF18(void **a1)
{
  void *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)sub_1B0004F9C();
  objc_msgSend(v1, sel_removeCachedResponseForRequest_, v2);

}

void sub_1AFDDAF68(void **a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = *a1;
  v4 = (void *)sub_1B0004F9C();
  objc_msgSend(v3, sel_storeCachedResponse_forRequest_, a2, v4);

}

uint64_t WeatherProviderAttributionImageCache.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WeatherProviderAttributionImageCache.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AFDDB000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4190);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_13_1(v5, &qword_1ED1F08D0);
  v6 = OUTLINED_FUNCTION_89();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v6);
  v7 = sub_1B0008968();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F08F8);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v1 + 16) = v8;
  return v1;
}

uint64_t sub_1AFDDB0D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AFDDB128;
  return WeatherProviderAttributionImageCache.image(at:)(a1);
}

uint64_t sub_1AFDDB128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_11_1();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_4_106(v4, *(uint64_t (**)(void))(v2 + 8));
}

id sub_1AFDDB158()
{
  return WeatherProviderAttributionImageCache.cachedImage(at:)();
}

uint64_t sub_1AFDDB178(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AFD8DFF0;
  return WeatherProviderAttributionImageCache.saveImage(at:)(a1);
}

uint64_t sub_1AFDDB1C8(uint64_t a1)
{
  return WeatherProviderAttributionImageCache.removeImage(at:)(a1);
}

id sub_1AFDDB1E8(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1B000571C();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1AFD8DDFC(a1, a2);

  return v6;
}

id sub_1AFDDB25C(void *a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v7;
  id v8;

  v7 = (void *)sub_1B000571C();
  v8 = objc_msgSend(v3, sel_initWithResponse_data_, a1, v7);
  sub_1AFD8DDFC(a2, a3);

  return v8;
}

unint64_t sub_1AFDDB2D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE73BC0;
  if (!qword_1EEE73BC0)
  {
    v1 = sub_1B0005710();
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE73BC0);
  }
  return result;
}

uint64_t dispatch thunk of WeatherProviderAttributionImageCacheType.image(at:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_89_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_102(v1, (uint64_t)sub_1AFDDB35C);
  return OUTLINED_FUNCTION_1_109(v2, v3, v4, v5);
}

uint64_t sub_1AFDDB35C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_4_106(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of WeatherProviderAttributionImageCacheType.cachedImage(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WeatherProviderAttributionImageCacheType.saveImage(at:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_89_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_102(v1, (uint64_t)sub_1AFD8DFF0);
  return OUTLINED_FUNCTION_1_109(v2, v3, v4, v5);
}

uint64_t dispatch thunk of WeatherProviderAttributionImageCacheType.removeImage(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t type metadata accessor for WeatherProviderAttributionImageCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for WeatherProviderAttributionImageCache()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AFDDB40C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_1AFDDB450()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _WORD v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35[9];

  v35[0] = 2;
  v30 = 0x617274736F746C41;
  v31 = 0xEF4C202D20737574;
  v32 = 0xD000000000000013;
  v33 = 0x80000001B0051480;
  v34 = 6;
  v26 = 0xEB000000004C202DLL;
  v27 = 0x5F73756C756D7543;
  v28 = 0xEF4C656C676E6953;
  v29 = 5;
  v20 = 0x2073756C756D7543;
  v21 = 0xEB0000000053202DLL;
  v22 = 0x5F73756C756D7543;
  v23 = 0xEF53656C676E6953;
  v24 = 5;
  v25 = 0x2073756C756D7543;
  strcpy((char *)v18, "Wispy_Single");
  HIBYTE(v18[6]) = 0;
  v18[7] = -5120;
  v19 = 6;
  sub_1AFC76528();
  sub_1AFC76528();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v13 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1164394496;
  LODWORD(v5) = 1137180672;
  sub_1AFB471E4((uint64_t)v35, 48, 0, 2000, 133, 10, 1, 4, 0, 0x41F00000C20C0000, 0x42C800003F666666, v5, 0x3E570A3D3E23D70ALL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3EB333333F800000, 0,
    0x4296000000000000,
    v7,
    0x3E2E147B3DB851ECLL,
    0x3F8000003F800000,
    0x3E9A5D8D3F800000,
    0x3F8000003F800000,
    0x3E3D0F5E3F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x4100000040A00000);
}

void sub_1AFDDBCAC()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v18 = 3;
  sub_1AFDDC4A4();
  sub_1AFDDF800();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3B03126F3E4CCCCDLL;
  *((_QWORD *)&v13 + 1) = 0x417000003F333333;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)&v18, 30, 0, 3250, 200, 30, 1, 8, 0x414000003F800000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, _Q0, *((uint64_t *)&_Q0 + 1), _Q0, *((uint64_t *)&_Q0 + 1), 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    _Q0,
    _Q0,
    v11,
    1084227584,
    v12,
    _Q0,
    _Q0,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    _Q0,
    SDWORD1(_Q0),
    SDWORD2(_Q0),
    SHIDWORD(_Q0),
    _Q0,
    0x40C0000040800000);
}

uint64_t sub_1AFDDC4A4()
{
  uint64_t v0;
  int64x2_t v9;
  int64x2_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = _Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V1.2D, #1.0 }
  v70 = _Q1;
  v71 = _Q1;
  v68 = _Q1;
  v69 = _Q1;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = _Q1;
  v62 = (int64x2_t)_Q1;
  v63 = xmmword_1B0025E90;
  v60 = _Q1;
  v61 = _Q1;
  v58 = _Q1;
  v59 = _Q1;
  v56 = _Q1;
  v57 = _Q1;
  v54 = _Q1;
  v55 = _Q1;
  v52 = _Q1;
  v53 = _Q1;
  v50 = _Q1;
  v51 = _Q1;
  v48 = _Q1;
  v49 = _Q1;
  v46 = _Q1;
  v47 = _Q1;
  v44 = _Q1;
  v45 = _Q1;
  v42 = _Q1;
  v43 = _Q1;
  v40 = _Q1;
  v41 = _Q1;
  v38 = _Q1;
  v39 = _Q1;
  v36 = _Q1;
  v37 = _Q1;
  v34 = _Q1;
  v35 = _Q1;
  v32 = _Q1;
  v33 = _Q1;
  v30 = _Q1;
  v31 = _Q1;
  v28 = _Q1;
  v29 = _Q1;
  v26 = _Q1;
  v27 = _Q1;
  v24 = _Q1;
  v25 = _Q1;
  v22 = _Q1;
  v23 = _Q1;
  v20 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v11 = _Q1;
  v16 = _Q1;
  v17 = _Q1;
  v14 = _Q1;
  v15 = _Q1;
  v12 = _Q1;
  v13 = _Q1;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF6CD7E0000000uLL);
  v21 = xmmword_1B0025EE0;
  v18 = xmmword_1B0025EF0;
  v19 = xmmword_1B0025F00;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B002A7C0;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7D0;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0027840;
  v64 = (int64x2_t)xmmword_1B002A7E0;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B002A7F0;
  v77 = xmmword_1B0028210;
  v74 = xmmword_1B002A800;
  v75 = xmmword_1B002A810;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 600.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A820;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B002A840;
  v64 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A850;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B002BF40;
  v79 = xmmword_1B002BF50;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0027040;
  v67 = xmmword_1B002A870;
  v64 = (int64x2_t)xmmword_1B002A880;
  v65 = xmmword_1B002A890;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF60;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B0027420;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A8B0;
  v65 = xmmword_1B002A8C0;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0027440;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF70;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v79 = xmmword_1B0025F70;
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v79 = xmmword_1B0025F70;
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B002BF70;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B002A8D0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00391A0;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 1.1967e-26, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9C9CC0000000uLL);
  v81 = xmmword_1B002A8E0;
  v78 = xmmword_1B002BFF0;
  v79 = xmmword_1B0025FA0;
  v76 = xmmword_1B002A900;
  v77 = xmmword_1B002A910;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A920;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B002A930, 900.0, 2.5264e-12, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B002A940;
  v81 = xmmword_1B0027B30;
  v78 = xmmword_1B002A950;
  v79 = xmmword_1B002A960;
  v76 = xmmword_1B002A970;
  v77 = xmmword_1B002A980;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B002A990;
  v65 = xmmword_1B002A9A0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B002A9B0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0027140;
  v79 = xmmword_1B0027150;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026130;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A9C0;
  v65 = xmmword_1B002A9D0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00266E0;
  v81 = xmmword_1B00266F0;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026790;
  v81 = v11;
  v78 = xmmword_1B002A9E0;
  v79 = xmmword_1B00267B0;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7D0;
  v72 = v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B00278C0;
  v64 = (int64x2_t)xmmword_1B002AA00;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B0025CE0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002AA10;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  __asm { FMOV            V0.2D, #0.25 }
  v20 = _Q0;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026820;
  v19 = xmmword_1B0025EA0;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025DD0;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7A0;
  v72 = v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002AA10;
  v67 = xmmword_1B0027740;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCFEB6B80000000uLL);
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026830;
  v19 = xmmword_1B0026840;
  v16 = v11;
  v17 = v11;
  v14 = v11;
  v15 = v11;
  v12 = v11;
  v13 = v11;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B0025ED0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFDDF800()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  int64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = (__int128)_Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V2.2D, #1.0 }
  v70 = _Q2;
  v71 = _Q2;
  v68 = _Q2;
  v69 = _Q2;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = _Q2;
  v62 = (int64x2_t)_Q2;
  v63 = xmmword_1B0025E90;
  v60 = _Q2;
  v61 = _Q2;
  v58 = _Q2;
  v59 = _Q2;
  v56 = _Q2;
  v57 = _Q2;
  v54 = _Q2;
  v55 = _Q2;
  v52 = _Q2;
  v53 = _Q2;
  v50 = _Q2;
  v51 = _Q2;
  v48 = _Q2;
  v49 = _Q2;
  v46 = _Q2;
  v47 = _Q2;
  v44 = _Q2;
  v45 = _Q2;
  v42 = _Q2;
  v43 = _Q2;
  v40 = _Q2;
  v41 = _Q2;
  v38 = _Q2;
  v39 = _Q2;
  v36 = _Q2;
  v37 = _Q2;
  v34 = _Q2;
  v35 = _Q2;
  v32 = _Q2;
  v33 = _Q2;
  v30 = _Q2;
  v31 = _Q2;
  v28 = _Q2;
  v29 = _Q2;
  v26 = _Q2;
  v27 = _Q2;
  v24 = _Q2;
  v25 = _Q2;
  v22 = _Q2;
  v23 = _Q2;
  v11 = _Q2;
  v8 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = _Q2;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B00268C0;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B00268D0;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = xmmword_1B0039650;
  v71 = v11;
  v68 = xmmword_1B0026900;
  v69 = xmmword_1B0026910;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0027840;
  v64 = (int64x2_t)xmmword_1B0025F90;
  v65 = xmmword_1B0037200;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = xmmword_1B0026920;
  v17 = v11;
  v14 = xmmword_1B0027950;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026950;
  v13 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 100.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B002A800;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027960;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B0026980;
  v13 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1106247680,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B002A840;
  v64 = vdupq_n_s64(0x3FEF9F9F80000000uLL);
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0027970;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B00269D0;
  v13 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.7, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0027040;
  v67 = xmmword_1B002A870;
  v64 = (int64x2_t)xmmword_1B002A880;
  v65 = xmmword_1B002A890;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027980;
  v15 = xmmword_1B00267B0;
  v12 = xmmword_1B0026A10;
  v13 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A8B0;
  v65 = xmmword_1B002A8C0;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0027440;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A30;
  v15 = xmmword_1B0026A40;
  v12 = xmmword_1B0026A50;
  v13 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A70;
  v15 = xmmword_1B0026A80;
  v12 = xmmword_1B0026A90;
  v13 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1000.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AC0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0039190;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B002A8D0;
  v64 = (int64x2_t)xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BFB0;
  v21 = xmmword_1B002BFC0;
  v18 = xmmword_1B002BFB0;
  v19 = xmmword_1B002BFD0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AE0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1000.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00391A0;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B002BF80;
  v21 = xmmword_1B002BF90;
  v18 = xmmword_1B002BF80;
  v19 = xmmword_1B002BFA0;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AF0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1000.0, 0.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A920;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0027990;
  v15 = xmmword_1B0026C70;
  v12 = xmmword_1B0026B20;
  v13 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026560;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B002A990;
  v65 = xmmword_1B002A9A0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B00279A0;
  v15 = xmmword_1B0026C20;
  v12 = xmmword_1B0026B60;
  v13 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.835, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026130;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0026220;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B00277B0;
  v64 = (int64x2_t)xmmword_1B002A9C0;
  v65 = xmmword_1B002A9D0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = xmmword_1B0026B80;
  v17 = xmmword_1B0026B90;
  v14 = xmmword_1B00279B0;
  v15 = xmmword_1B00279C0;
  v12 = xmmword_1B0026BC0;
  v13 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.82, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0039660;
  v81 = xmmword_1B0039670;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B002A830;
  v75 = xmmword_1B0025E50;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0027FF0;
  v64 = (int64x2_t)xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = xmmword_1B0026BE0;
  v17 = xmmword_1B0026BF0;
  v14 = xmmword_1B00279D0;
  v15 = xmmword_1B00279E0;
  v12 = xmmword_1B0026C10;
  v13 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 882.05, 1054.4, 0.304, 0.85, 0.85, 0.88, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v77 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v74 = xmmword_1B002A9F0;
  v75 = xmmword_1B002A7D0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B00278C0;
  v64 = (int64x2_t)xmmword_1B002AA00;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026C30;
  v17 = v11;
  v14 = xmmword_1B00279F0;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026C60;
  v13 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1106247680,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026C80;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026C90;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B002A790;
  v75 = xmmword_1B002A7A0;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = xmmword_1B002A7B0;
  v67 = xmmword_1B0025E50;
  v64 = (int64x2_t)xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1045220557,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1092616192,
    &v14,
    (uint64_t)&v12);
  return v0;
}

BOOL static CollisionViewMetrics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(float *)a1 == *(float *)a2
      && *(float *)(a1 + 4) == *(float *)(a2 + 4)
      && *(float *)(a1 + 8) == *(float *)(a2 + 8)
      && sub_1AFB3A93C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
}

uint64_t assignWithCopy for CollisionViewMetrics(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CollisionViewMetrics(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AFDE2E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  _WORD v34[8];
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51[9];

  v51[0] = 5;
  v46 = 0x617274736F746C41;
  v47 = 0xEF4C202D20737574;
  v48 = 0xD000000000000013;
  v49 = 0x80000001B0051480;
  v50 = 9;
  v42 = 0x80000001B0051400;
  v43 = 0xD000000000000014;
  v44 = 0x80000001B0051420;
  v45 = 6;
  v36 = 0x617274736F746C41;
  v37 = 0xEF4C202D20737574;
  v38 = 0xD000000000000013;
  v39 = 0x80000001B0051480;
  v40 = 6;
  v41 = 0xD000000000000010;
  strcpy((char *)v34, "Wispy_Single");
  HIBYTE(v34[6]) = 0;
  v34[7] = -5120;
  v35 = 6;
  v8 = sub_1AFDE3734((__n128)xmmword_1B0028060, (__n128)xmmword_1B0039700, (__n128)xmmword_1B0039710, (__n128)xmmword_1B0039720, (__n128)xmmword_1B0039730, (__n128)xmmword_1B0039740, (__n128)xmmword_1B0029080, (__n128)xmmword_1B0039750, a1, a2, a3, a4, a5, a6, a7, a8, (__n128)xmmword_1B00396F0, (__n128)xmmword_1B00396E0);
  sub_1AFDE3734((__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140, v8, v9, v10, v11, v12, v13, v14, v15, (__n128)xmmword_1B0026140, (__n128)xmmword_1B0026140);
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v33 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v33 = 0x4248000044BB8000;
  DWORD2(v31) = 1116471296;
  *(_QWORD *)&v31 = 0x43FA000040400000;
  *(_QWORD *)&v29 = 0x3CA3D70A3F800000;
  *((_QWORD *)&v29 + 1) = 0x41A000003F000000;
  *((_QWORD *)&v27 + 1) = 0x3F3D70A43F19999ALL;
  *(_QWORD *)&v27 = 0x4396000042700000;
  LODWORD(v25) = 1084227584;
  DWORD2(v24) = 1133903872;
  *(_QWORD *)&v24 = 0x4302000040A00000;
  LODWORD(v23) = 1153138688;
  LODWORD(v21) = 1140457472;
  sub_1AFB471E4((uint64_t)v51, 48, 0, 2000, 133, 10, 1, 9, 0xC2A0000000000000, 0x41F00000C20C0000, 0x428C000040400000, v21, 0x3E8000003DF5C28FLL, v22, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v23,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4140000000000000,
    v24,
    0x3F4CCCCD3F19999ALL,
    1095761920,
    v25,
    v26,
    xmmword_1B0025CC0,
    _Q0,
    v27,
    1091945103,
    v28,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v29,
    0x404000003DCCCCCDLL,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v30,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v31,
    1039516303,
    1048576000,
    v32,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v33,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40E0000040C00000);
}

uint64_t sub_1AFDE3734(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17, __n128 a18)
{
  uint64_t v18;
  double v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __int128 v30;
  __n128 v31;
  double v32;
  double v33;
  __n128 v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  double v43;
  __n128 v44;
  float v45;
  __n128 v46;
  double v47;
  double v48;
  __n128 v49;
  __n128 v50;
  double v51;
  __n128 v52;
  double v53;
  __int128 v54;
  __n128 v55;
  double v56;
  __int128 v57;
  __n128 v58;
  double v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __int128 v63;
  __n128 v64;
  _OWORD *v65;
  _OWORD *v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  uint64_t v72;
  double v73;
  float v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  double v78;
  __int128 v79;
  double v80;
  __n128 v81;
  double v82;
  __int128 v83;
  double v84;
  __n128 v85;
  double v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  __n128 v93;
  unsigned int v94;
  __n128 *v95;
  uint64_t v96;
  float v97;
  _OWORD *v98;
  _OWORD *v99;
  _OWORD *v100;
  _OWORD *v101;
  _OWORD *v102;
  _OWORD *v103;
  _OWORD *v104;
  uint64_t v105;
  double v106;
  __n128 v107;
  float v108;
  __n128 v109;
  double v110;
  double v111;
  __n128 v112;
  __n128 v113;
  __n128 v114;
  __int128 v115;
  double v116;
  __n128 v117;
  __n128 v118;
  __n128 v119;
  __n128 v120;
  __n128 v121;
  __n128 v122;
  double v123;
  __n128 v124;
  __n128 *v125;
  uint64_t v126;
  float v127;
  _OWORD *v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  _OWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  uint64_t v135;
  double v136;
  __n128 v137;
  float v138;
  __n128 v139;
  double v140;
  __n128 v141;
  __n128 v142;
  __n128 v143;
  __n128 v144;
  double v145;
  __int128 v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  __int128 v151;
  __n128 *v152;
  uint64_t v153;
  double v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t v157;
  float v158;
  __n128 v159;
  __n128 v160;
  __n128 v161;
  double v162;
  __int128 v163;
  __n128 v164;
  __n128 v165;
  __n128 v166;
  __n128 v167;
  __int128 v168;
  _OWORD *v169;
  _OWORD *v170;
  _OWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  _OWORD *v174;
  _OWORD *v175;
  uint64_t v176;
  float v177;
  __n128 v178;
  __n128 v179;
  __int128 v180;
  double v181;
  __n128 v182;
  __n128 v183;
  __n128 v184;
  __int128 v185;
  __int128 v186;
  __n128 v187;
  __n128 v188;
  __n128 v189;
  __int128 v190;
  _OWORD *v191;
  _OWORD *v192;
  _OWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  _OWORD *v196;
  _OWORD *v197;
  uint64_t v198;
  double v199;
  float v200;
  _OWORD *v201;
  _OWORD *v202;
  _OWORD *v203;
  _OWORD *v204;
  _OWORD *v205;
  _OWORD *v206;
  _OWORD *v207;
  uint64_t v208;
  double v209;
  float v210;
  __n128 v211;
  __int128 v212;
  __n128 v213;
  double v214;
  __int128 v215;
  double v216;
  __n128 v217;
  double v218;
  __n128 v219;
  __n128 v220;
  __n128 v221;
  __int128 v222;
  __n128 v223;
  double v224;
  uint64_t v225;
  _OWORD *v226;
  _OWORD *v227;
  uint64_t v228;
  float v229;
  double v230;
  double v231;
  __n128 v232;
  __n128 v233;
  __n128 v234;
  __n128 v235;
  __n128 v236;
  __int128 v237;
  double v238;
  __n128 v239;
  double v240;
  double v241;
  double v242;
  __n128 v243;
  _OWORD *v244;
  _OWORD *v245;
  _OWORD *v246;
  _OWORD *v247;
  _OWORD *v248;
  _OWORD *v249;
  _OWORD *v250;
  uint64_t v251;
  _OWORD *v253;
  _OWORD *v254;
  uint64_t v255;
  _OWORD *v256;
  _OWORD *v257;
  _OWORD *v258;
  _OWORD *v259;
  _OWORD *v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  _OWORD *v267;
  _OWORD *v268;
  _OWORD *v269;
  _OWORD *v270;
  _OWORD *v271;
  _OWORD *v272;
  _OWORD *v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  _OWORD *v277;
  _OWORD *v278;
  _OWORD *v279;
  _OWORD *v280;
  _OWORD *v281;
  _OWORD *v282;
  _OWORD *v283;
  _OWORD *v284;
  _OWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  _OWORD *v288;
  _OWORD *v289;
  _OWORD *v290;
  _OWORD *v291;
  _OWORD *v292;
  _OWORD *v293;
  _OWORD *v294;
  _OWORD *v295;
  _OWORD *v296;
  _OWORD *v297;
  _OWORD *v298;
  _OWORD *v299;
  _OWORD *v300;
  _OWORD *v301;
  _OWORD *v302;
  _OWORD *v303;
  _OWORD *v304;
  _OWORD *v305;
  _OWORD *v306;
  _OWORD *v307;
  _OWORD *v308;
  _OWORD *v309;
  _OWORD *v310;
  _OWORD *v311;
  _OWORD *v312;
  _OWORD *v313;
  _OWORD *v314;
  _OWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  _OWORD *v318;
  _OWORD *v319;
  _OWORD *v320;
  _OWORD *v321;
  _OWORD *v322;
  _OWORD *v323;
  _OWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  _OWORD *v327;
  _OWORD *v328;
  _OWORD *v329;
  _OWORD *v330;
  _OWORD *v331;
  _OWORD *v332;
  _OWORD *v333;
  _OWORD *v334;
  _OWORD *v335;
  _OWORD *v336;
  _OWORD *v337;
  _OWORD *v338;
  _OWORD *v339;
  _OWORD *v340;
  _OWORD *v341;
  _OWORD *v342;
  _OWORD *v343;
  _OWORD *v344;
  _OWORD *v345;
  _OWORD *v346;
  _OWORD *v347;
  _OWORD *v348;
  _OWORD *v349;
  _OWORD *v350;
  _OWORD *v351;
  _OWORD *v352;
  _OWORD *v353;
  _OWORD *v354;
  _OWORD *v355;
  _OWORD *v356;
  _OWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  _OWORD *v360;
  _OWORD *v361;
  _OWORD *v362;
  _OWORD *v363;
  _OWORD *v364;
  _OWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  _OWORD *v368;
  _OWORD *v369;
  _OWORD *v370;
  _OWORD *v371;
  _OWORD *v372;
  _OWORD *v373;
  _OWORD *v374;
  _OWORD *v375;
  _OWORD *v376;
  _OWORD *v377;
  _OWORD *v378;
  _OWORD *v379;
  _OWORD *v380;
  _OWORD *v381;
  _OWORD *v382;
  _OWORD *v383;
  _OWORD *v384;
  _OWORD *v385;
  _OWORD *v386;
  _OWORD *v387;
  _OWORD *v388;
  _OWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  _OWORD *v392;
  _OWORD *v393;
  _OWORD *v394;
  _OWORD *v395;
  _OWORD *v396;
  _OWORD *v397;
  _OWORD *v398;
  _OWORD *v399;
  _OWORD *v400;
  _OWORD *v401;
  _OWORD *v402;
  _OWORD *v403;
  _OWORD *v404;
  _OWORD *v405;
  _OWORD *v406;
  _OWORD *v407;
  _OWORD *v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  __n128 v420;
  __n128 v421;
  __n128 v423;
  __n128 v430;
  __n128 v431;
  __n128 v432;
  __n128 v433;
  __n128 v434;
  __n128 v435;
  __n128 v436;
  __n128 v437;
  __n128 v438;
  __n128 v439;
  __n128 v440;
  __n128 v441;
  __n128 v442;
  __n128 v443;
  __n128 v444;
  __n128 v445;
  __n128 v446;
  __int128 v447;
  __n128 v448;
  __n128 v449;
  __n128 v450;
  __n128 v451;
  _OWORD v452[2];
  _OWORD v453[2];
  __n128 v454;
  __int128 v455;
  __n128 v456;
  __int128 v457;
  __n128 v458;
  __int128 v459;
  __n128 v460;
  __n128 v461;
  __n128 v462;
  __int128 v463;
  __n128 v464;
  __int128 v465;
  __n128 v466;
  __int128 v467;
  __n128 v468;
  __n128 v469;
  __n128 v470;
  __int128 v471;
  __n128 v472;
  __int128 v473;
  __n128 v474;
  __int128 v475;
  __n128 v476;
  __int128 v477;
  __n128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __n128 v492;
  __int128 v493;
  __n128 v494;
  __n128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B0027F30;
  v500 = xmmword_1B00276A0;
  v501 = xmmword_1B00276B0;
  v498 = xmmword_1B002C560;
  v499 = xmmword_1B002C570;
  v496 = xmmword_1B002B2D0;
  v497 = xmmword_1B002B2E0;
  __asm { FMOV            V3.2D, #1.0 }
  v431 = _Q3;
  v494 = _Q3;
  v495 = _Q3;
  __asm { FMOV            V0.2D, #0.5 }
  v430 = _Q0;
  v492 = _Q0;
  v493 = xmmword_1B0026E60;
  v490 = xmmword_1B002B2F0;
  v491 = xmmword_1B002B300;
  v488 = xmmword_1B0028CD0;
  v489 = xmmword_1B0028CE0;
  v486 = xmmword_1B0028CF0;
  v487 = xmmword_1B0028060;
  v484 = xmmword_1B0028D00;
  v485 = xmmword_1B0028C80;
  OUTLINED_FUNCTION_26_53(0.704536617, 1.0, v25, _Q3);
  v478 = v26;
  v479 = xmmword_1B0027030;
  v476 = v26;
  v477 = xmmword_1B0025E90;
  v474 = v26;
  v475 = xmmword_1B0027730;
  v472 = v26;
  v473 = xmmword_1B0025E90;
  v470 = v26;
  v471 = xmmword_1B0025E50;
  v468 = v26;
  v469 = (__n128)xmmword_1B0025E90;
  v466 = v26;
  v467 = xmmword_1B0026140;
  v464 = v26;
  v465 = xmmword_1B0025E90;
  v462 = v26;
  v463 = xmmword_1B0027740;
  v460 = v26;
  v461 = v26;
  v458 = v26;
  v459 = xmmword_1B0027770;
  v456 = v26;
  v457 = xmmword_1B0025E90;
  v454 = v26;
  v455 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_30_48(1.0, 1.0, 1.0, v26);
  v433 = v27;
  v451 = v27;
  v448 = v28;
  v432 = v29;
  v449 = v29;
  v446 = v28;
  v447 = v30;
  v444 = v28;
  OUTLINED_FUNCTION_40_18(a1, v29.n128_f64[0], v27, v28);
  v441 = v31;
  OUTLINED_FUNCTION_21_57(v32, v31.n128_f64[0], v33, v34);
  OUTLINED_FUNCTION_12_8();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_11_4(v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, 200.0, v45, 0.1, &v486, &v484, 0x3F3333333F4CCCCDLL, 1065353216, &v482, 0,
    &v480,
    &v478,
    &v476,
    &v474,
    &v472,
    &v470,
    &v468,
    &v466,
    &v464,
    &v462,
    &v460,
    &v458,
    &v456,
    &v454,
    v453,
    v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    1112014848,
    1097859072,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B0030470;
  v499 = xmmword_1B002EFF0;
  OUTLINED_FUNCTION_41_16((__n128)xmmword_1B002B360, (__n128)xmmword_1B002B370);
  OUTLINED_FUNCTION_9_98();
  v488 = xmmword_1B0030480;
  v489 = xmmword_1B0030490;
  OUTLINED_FUNCTION_28_52((__n128)xmmword_1B00304A0);
  v484 = xmmword_1B002F020;
  v485 = xmmword_1B00304B0;
  v482 = (__int128)v46;
  v483 = (__int128)v46;
  v481 = 0u;
  v480 = 0u;
  v478 = v46;
  *(_QWORD *)&v47 = OUTLINED_FUNCTION_6_100(0.0, 0.996514976, v46, v432).n128_u64[0];
  OUTLINED_FUNCTION_35_26(v47, v48, v49);
  v469 = v50;
  *(_QWORD *)&v53 = OUTLINED_FUNCTION_33_38(v51, v50.n128_f64[0], v52).n128_u64[0];
  v465 = v54;
  *(_QWORD *)&v56 = OUTLINED_FUNCTION_5_103(v53, *(double *)&v54, v55).n128_u64[0];
  v457 = v57;
  OUTLINED_FUNCTION_14_92(v56, *(double *)&v57, v58, v59, v60);
  v449 = v61;
  v446 = v62;
  v447 = v63;
  v444 = v62;
  v445 = a2;
  v442 = v62;
  v443 = v64;
  v440 = v62;
  v441 = v61;
  v438 = v62;
  v439 = v62;
  v436 = v62;
  v437 = v62;
  v434 = v62;
  v435 = v62;
  OUTLINED_FUNCTION_2_111();
  OUTLINED_FUNCTION_25_54();
  OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_11_4(v65, v66, v67, v68, v69, v70, v71, v72, v73, (__n128)xmmword_1B00287D0, 200.0, v74, 0.1, v253, &v484, 0x3F3333333F4CCCCDLL, 1065353216, v256, v261,
    &v480,
    &v478,
    &v476,
    v285,
    v293,
    v301,
    v309,
    v317,
    v325,
    v333,
    v341,
    v349,
    v357,
    v365,
    v373,
    v381,
    v385,
    v389,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    1112014848,
    1097859072,
    &v436,
    (uint64_t)&v434);
  v500 = xmmword_1B002C5C0;
  v501 = xmmword_1B002B3B0;
  v498 = xmmword_1B002C5D0;
  v499 = xmmword_1B002B3D0;
  OUTLINED_FUNCTION_41_16((__n128)xmmword_1B00277F0, (__n128)xmmword_1B0026110);
  v492 = v430;
  v493 = xmmword_1B00271F0;
  OUTLINED_FUNCTION_29_7(v430.n128_f64[0], 0.5, v75);
  v486 = xmmword_1B0028F90;
  v487 = xmmword_1B002F100;
  v484 = xmmword_1B002C5F0;
  v485 = xmmword_1B0028C80;
  v482 = (__int128)v76;
  v483 = (__int128)v76;
  v481 = 0u;
  v480 = 0u;
  v478 = v76;
  OUTLINED_FUNCTION_6_100(0.0, 1.0, v76, v432);
  v470 = v77;
  v471 = (__int128)v433;
  v468 = v77;
  v469 = (__n128)xmmword_1B00304C0;
  *(_QWORD *)&v78 = OUTLINED_FUNCTION_33_38(1.0, v433.n128_f64[0], v77).n128_u64[0];
  v465 = v79;
  *(_QWORD *)&v82 = OUTLINED_FUNCTION_5_103(v78, v80, v81).n128_u64[0];
  v457 = v83;
  *(_QWORD *)&v86 = OUTLINED_FUNCTION_17_82(v82, v84, v85).n128_u64[0];
  OUTLINED_FUNCTION_22_58(v86, v87, v88, v89, v90);
  v445 = a3;
  v442 = v91;
  v443 = v92;
  OUTLINED_FUNCTION_8_97(a3.n128_f64[0], v92.n128_f64[0], v91, v93);
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_2_111();
  OUTLINED_FUNCTION_12_8();
  v255 = v94 | 0x3F33333300000000;
  v421 = v95[163];
  v97 = *(float *)(v96 + 2228);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_11_4(v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, 250.0, v108, v97, &v486, &v484, v255, 1061997773, &v482, 0,
    &v480,
    &v478,
    &v476,
    v286,
    v294,
    v302,
    v310,
    v318,
    v326,
    v334,
    v342,
    v350,
    v358,
    v366,
    v374,
    v382,
    v386,
    v390,
    v393,
    v397,
    v401,
    &v440,
    &v438,
    1112014848,
    1097859072,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B0028D70;
  v499 = xmmword_1B0028A50;
  v496 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_38_23((__n128)xmmword_1B0026110);
  v492 = v109;
  v493 = (__int128)v432;
  OUTLINED_FUNCTION_29_7(v110, v111, v109);
  v486 = (__int128)v112;
  v487 = xmmword_1B00278C0;
  v484 = xmmword_1B00304D0;
  v485 = xmmword_1B0028D90;
  v482 = xmmword_1B0026320;
  v483 = xmmword_1B0026330;
  v481 = 0u;
  v480 = 0u;
  v478 = v112;
  OUTLINED_FUNCTION_6_100(0.0, 0.97049284, v112, v113);
  v470 = v114;
  v471 = (__int128)v433;
  v468 = v114;
  v469 = (__n128)xmmword_1B0026120;
  v466 = v114;
  v467 = (__int128)v114;
  v464 = v114;
  v465 = v115;
  v462 = v114;
  v463 = (__int128)v433;
  v460 = v114;
  v461 = v114;
  v458 = v114;
  v459 = xmmword_1B0027770;
  v456 = v114;
  v457 = v115;
  *(_QWORD *)&v116 = OUTLINED_FUNCTION_17_82(1.0, v433.n128_f64[0], v114).n128_u64[0];
  OUTLINED_FUNCTION_22_58(v116, v117, v118, v119, v120);
  v445 = a4;
  v442 = v121;
  v443 = v122;
  OUTLINED_FUNCTION_8_97(v123, a4.n128_f64[0], v121, v124);
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_12_8();
  v420 = v125[32];
  v127 = *(float *)(v126 + 2620);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_19_7(v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, 700.0, v138, v127, &v486, &v484, 0x3F6666663F666666, 0, &v482, 0,
    &v480,
    &v478,
    &v476,
    &v474,
    &v472,
    &v470,
    &v468,
    &v466,
    &v464,
    &v462,
    &v460,
    &v458,
    &v456,
    &v454,
    v453,
    v452,
    &v450,
    &v448,
    v394,
    v398,
    v402,
    &v440,
    &v438,
    1112014848,
    1097859072,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B00304E0;
  v499 = xmmword_1B0028DB0;
  v496 = xmmword_1B0028220;
  v497 = xmmword_1B0028230;
  v494 = v431;
  v495 = v431;
  v492 = v431;
  OUTLINED_FUNCTION_12_94((__n128)xmmword_1B0026FC0, v431);
  v487 = xmmword_1B00278C0;
  OUTLINED_FUNCTION_36_29();
  v482 = xmmword_1B0027D70;
  v483 = xmmword_1B0027D80;
  v140 = OUTLINED_FUNCTION_37_31(1.0, v139);
  v479 = (__int128)v432;
  v469 = OUTLINED_FUNCTION_11_87(v140, v141);
  OUTLINED_FUNCTION_32_36(v469.n128_f64[0], v142, v143);
  v462 = v144;
  *(_QWORD *)&v145 = OUTLINED_FUNCTION_20_69((__n128)xmmword_1B00304F0, v144).n128_u64[0];
  v457 = v146;
  OUTLINED_FUNCTION_10_93(v145, v147);
  v451 = v148;
  v448 = v149;
  v449 = v150;
  v446 = v149;
  v447 = v151;
  v444 = v149;
  v445 = a5;
  v442 = v149;
  v443 = v148;
  v440 = v149;
  v441 = v150;
  OUTLINED_FUNCTION_13_94(a5.n128_f64[0], v149);
  OUTLINED_FUNCTION_0_123();
  OUTLINED_FUNCTION_12_8();
  v423 = v152[223];
  v154 = *(double *)(v153 + 1784);
  OUTLINED_FUNCTION_19_7(v155, v156, &v496, &v494, &v492, &v490, &v488, v157, v154, v423, 900.0, v158, 0.8, &v486, &v484, 0x3F6666663F666666, 0, &v482, v262,
    v267,
    v273,
    v279,
    v287,
    v295,
    v303,
    v311,
    v319,
    v327,
    v335,
    v343,
    v351,
    v359,
    v367,
    v375,
    v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    1112014848,
    1097859072,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B00304E0;
  v499 = xmmword_1B0028DB0;
  v496 = xmmword_1B0028220;
  OUTLINED_FUNCTION_27_58((__n128)xmmword_1B0028230);
  OUTLINED_FUNCTION_12_94((__n128)xmmword_1B0026FC0, v159);
  v487 = xmmword_1B00278C0;
  OUTLINED_FUNCTION_36_29();
  v482 = xmmword_1B0027D70;
  v483 = xmmword_1B0027D80;
  OUTLINED_FUNCTION_37_31(0.9627316, v160);
  v479 = (__int128)v432;
  v476 = v161;
  v477 = xmmword_1B0025E90;
  v474 = v161;
  v475 = xmmword_1B0027730;
  v472 = v161;
  v473 = xmmword_1B0025E90;
  v470 = v161;
  v471 = (__int128)v433;
  v468 = v161;
  v469 = v433;
  v466 = v161;
  v467 = (__int128)v161;
  v464 = v161;
  v465 = xmmword_1B0025E90;
  v462 = v161;
  *(_QWORD *)&v162 = OUTLINED_FUNCTION_20_69((__n128)xmmword_1B00304F0, v161).n128_u64[0];
  v457 = v163;
  OUTLINED_FUNCTION_10_93(v162, v164);
  v451 = v165;
  v448 = v166;
  v449 = v167;
  v446 = v166;
  v447 = v168;
  v444 = v166;
  v445 = a6;
  v442 = v166;
  v443 = v165;
  v440 = v166;
  v441 = v167;
  OUTLINED_FUNCTION_13_94(a6.n128_f64[0], v166);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_25_54();
  OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_18_8(v169, v170, v171, v172, v173, v174, v175, v176, v154, v423, 900.0, v177, 0.8, v254, &v484, 0x3F6666663F666666, 0, v257, v263,
    v268,
    v274,
    v280,
    v288,
    v296,
    v304,
    v312,
    v320,
    v328,
    v336,
    v344,
    v352,
    v360,
    v368,
    v376,
    v383,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    v409,
    v414,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B0028D70;
  v499 = xmmword_1B0028A50;
  v496 = xmmword_1B00276E0;
  OUTLINED_FUNCTION_27_58((__n128)xmmword_1B0026110);
  OUTLINED_FUNCTION_12_94(v432, v178);
  v487 = xmmword_1B00278C0;
  v484 = xmmword_1B00304D0;
  v485 = xmmword_1B0028D90;
  v482 = xmmword_1B0026320;
  v483 = xmmword_1B0026330;
  v481 = 0u;
  v480 = 0u;
  v478 = v179;
  v479 = v180;
  *(_QWORD *)&v181 = OUTLINED_FUNCTION_11_87(*(double *)&v180, v179).n128_u64[0];
  v469 = (__n128)xmmword_1B0026120;
  OUTLINED_FUNCTION_32_36(v181, v182, v183);
  v462 = v184;
  v463 = v185;
  v460 = v184;
  v461 = v184;
  v458 = v184;
  v459 = xmmword_1B0027770;
  v456 = v184;
  v457 = v186;
  OUTLINED_FUNCTION_10_93(1.0, v184);
  v451 = v187;
  v448 = v188;
  v449 = v189;
  v446 = v188;
  v447 = v190;
  v444 = v188;
  v445 = a7;
  v442 = v188;
  v443 = v187;
  v440 = v188;
  v441 = v189;
  OUTLINED_FUNCTION_13_94(a7.n128_f64[0], v188);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_123();
  OUTLINED_FUNCTION_18_70();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_18_8(v191, v192, v193, v194, v195, v196, v197, v198, v199, v420, 700.0, v200, v127, &v486, &v484, 0x3F6666663F666666, 0, v258, v264,
    v269,
    v275,
    v281,
    v289,
    v297,
    v305,
    v313,
    v321,
    v329,
    v337,
    v345,
    v353,
    v361,
    v369,
    v377,
    v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    v410,
    v415,
    &v436,
    (uint64_t)&v434);
  v500 = xmmword_1B002C5C0;
  v501 = xmmword_1B002B3B0;
  v498 = xmmword_1B002C5D0;
  v499 = xmmword_1B002B3D0;
  v496 = xmmword_1B00277F0;
  v497 = xmmword_1B0026110;
  v494 = v431;
  v495 = v431;
  v492 = v430;
  v493 = xmmword_1B00271F0;
  v490 = (__int128)v431;
  v491 = (__int128)v431;
  v488 = (__int128)v431;
  v489 = (__int128)v431;
  v486 = xmmword_1B0028F90;
  v487 = xmmword_1B002F100;
  v484 = xmmword_1B002C5F0;
  v485 = xmmword_1B0028C80;
  v482 = (__int128)v431;
  v483 = (__int128)v431;
  v481 = 0u;
  v480 = 0u;
  v478 = v431;
  v479 = (__int128)v432;
  v476 = v431;
  v477 = xmmword_1B0025E90;
  v474 = v431;
  v475 = xmmword_1B0027730;
  v472 = v431;
  v473 = xmmword_1B0025E90;
  v470 = v431;
  v471 = (__int128)v433;
  v468 = v431;
  v469 = (__n128)xmmword_1B00304C0;
  v466 = v431;
  v467 = xmmword_1B0026140;
  v464 = v431;
  v465 = xmmword_1B0025E90;
  v462 = v431;
  v463 = xmmword_1B0027740;
  v460 = v431;
  v461 = v431;
  v458 = v431;
  v459 = xmmword_1B0027770;
  v456 = v431;
  v457 = xmmword_1B0025E90;
  v454 = v431;
  v455 = xmmword_1B0028C90;
  v453[0] = v431;
  v453[1] = v431;
  v452[0] = v431;
  v452[1] = v431;
  v450 = v431;
  v451 = v433;
  v448 = v431;
  v449 = v432;
  v446 = v431;
  v447 = xmmword_1B0025E90;
  v444 = v431;
  v445 = a8;
  v442 = v431;
  v443 = v433;
  v440 = v431;
  v441 = v432;
  v438 = v431;
  v439 = v431;
  v436 = v431;
  v437 = v431;
  v434 = v431;
  v435 = v431;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_0_123();
  OUTLINED_FUNCTION_18_70();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_10_2(v201, v202, v203, v204, v205, v206, v207, v208, v209, v421, 250.0, v210, v97, &v486, &v484, 0x3F3333333F4CCCCDLL, 1061997773, v259, v265,
    v270,
    v276,
    v282,
    v290,
    v298,
    v306,
    v314,
    v322,
    v330,
    v338,
    v346,
    v354,
    v362,
    v370,
    v378,
    v452,
    &v450,
    &v448,
    &v446,
    &v444,
    &v442,
    &v440,
    &v438,
    v411,
    v416,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B0030470;
  v499 = xmmword_1B002EFF0;
  v496 = xmmword_1B002B360;
  OUTLINED_FUNCTION_38_23((__n128)xmmword_1B002B370);
  OUTLINED_FUNCTION_9_98();
  v488 = xmmword_1B0030480;
  v489 = xmmword_1B0030490;
  OUTLINED_FUNCTION_28_52((__n128)xmmword_1B00304A0);
  v484 = xmmword_1B002F020;
  v485 = xmmword_1B00304B0;
  v482 = (__int128)v211;
  v483 = (__int128)v211;
  v481 = 0u;
  v480 = 0u;
  v478 = v211;
  v479 = (__int128)v432;
  v476 = v211;
  v477 = xmmword_1B0025E90;
  v474 = v211;
  v475 = xmmword_1B0027730;
  v472 = v211;
  v473 = xmmword_1B0025E90;
  OUTLINED_FUNCTION_35_26(1.0, 1.0, v211);
  v469 = (__n128)v212;
  v466 = v213;
  v467 = xmmword_1B0026140;
  v464 = v213;
  v465 = v212;
  *(_QWORD *)&v214 = OUTLINED_FUNCTION_5_103(*(double *)&v212, 1.0, v213).n128_u64[0];
  v457 = v215;
  OUTLINED_FUNCTION_14_92(v214, v216, v217, v218, v219);
  v449 = v220;
  v446 = v221;
  v447 = v222;
  v444 = v221;
  v445 = a17;
  v442 = v221;
  v443 = v223;
  OUTLINED_FUNCTION_8_97(a17.n128_f64[0], v224, v221, v220);
  OUTLINED_FUNCTION_7_94();
  OUTLINED_FUNCTION_0_123();
  OUTLINED_FUNCTION_18_70();
  OUTLINED_FUNCTION_10_2(v226, v227, &v496, &v494, &v492, &v490, &v488, v228, *(double *)(v225 + 3208), (__n128)xmmword_1B00287D0, 200.0, v229, 0.1, &v486, &v484, 0x3F3333333F4CCCCDLL, 1065353216, v260, v266,
    v271,
    v277,
    v283,
    v291,
    v299,
    v307,
    v315,
    v323,
    v331,
    v339,
    v347,
    v355,
    v363,
    v371,
    v379,
    v452,
    v387,
    v391,
    v395,
    v399,
    v403,
    v405,
    v407,
    v412,
    v417,
    &v436,
    (uint64_t)&v434);
  OUTLINED_FUNCTION_7_5();
  v498 = xmmword_1B002C560;
  v499 = xmmword_1B002C570;
  v496 = xmmword_1B002B2D0;
  v497 = xmmword_1B002B2E0;
  v494 = v431;
  v495 = v431;
  OUTLINED_FUNCTION_9_98();
  v488 = xmmword_1B0028CD0;
  v489 = xmmword_1B0028CE0;
  OUTLINED_FUNCTION_28_52((__n128)xmmword_1B0028CF0);
  v484 = xmmword_1B0028D00;
  v485 = xmmword_1B0028C80;
  OUTLINED_FUNCTION_26_53(1.0, v230, v231, v232);
  v478 = v233;
  v479 = (__int128)v432;
  v476 = v233;
  v477 = xmmword_1B0025E90;
  v474 = v233;
  v475 = xmmword_1B0027730;
  v472 = v233;
  v473 = xmmword_1B0025E90;
  v470 = v233;
  v471 = (__int128)v433;
  v468 = v233;
  v469 = (__n128)xmmword_1B0025E90;
  v466 = v233;
  v467 = xmmword_1B0026140;
  v464 = v233;
  v465 = xmmword_1B0025E90;
  v462 = v233;
  v463 = xmmword_1B0027740;
  v460 = v233;
  v461 = v233;
  v458 = v233;
  v459 = xmmword_1B0027770;
  v456 = v233;
  v457 = xmmword_1B0025E90;
  v454 = v233;
  v455 = xmmword_1B0028C90;
  OUTLINED_FUNCTION_30_48(1.0, 1.0, v433.n128_f64[0], v233);
  v451 = v234;
  v448 = v235;
  v449 = v236;
  v446 = v235;
  v447 = v237;
  v444 = v235;
  OUTLINED_FUNCTION_40_18(a18, v238, v234, v235);
  v441 = v239;
  OUTLINED_FUNCTION_21_57(v240, v241, v242, v243);
  OUTLINED_FUNCTION_7_94();
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_10_2(v244, v245, v246, v247, v248, v249, v250, v251, -90.0, (__n128)xmmword_1B00287D0, 200.0, 35.0, 0.1, &v486, &v484, 0x3F3333333F4CCCCDLL, 1065353216, &v482, 0,
    v272,
    v278,
    v284,
    v292,
    v300,
    v308,
    v316,
    v324,
    v332,
    v340,
    v348,
    v356,
    v364,
    v372,
    v380,
    v384,
    v388,
    v392,
    v396,
    v400,
    v404,
    v406,
    v408,
    v413,
    v418,
    &v436,
    (uint64_t)&v434);
  return v18;
}

void sub_1AFDE4A4C()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18[9];

  v18[0] = 2;
  sub_1AFDD3868();
  sub_1AFDE5260();
  __asm { FMOV            V0.4S, #1.0 }
  *((_QWORD *)&v17 + 1) = 0x3E4CCCCD3DA3D70ALL;
  *(_QWORD *)&v17 = 0x4248000044BB8000;
  DWORD2(v15) = 1116471296;
  *(_QWORD *)&v15 = 0x43FA000040400000;
  *(_QWORD *)&v13 = 0x3AC49BA63F800000;
  *((_QWORD *)&v13 + 1) = 0x417000003E4CCCCDLL;
  *((_QWORD *)&v11 + 1) = 0x3E99999A3E19999ALL;
  *(_QWORD *)&v11 = 0x4348000040C00000;
  LODWORD(v9) = 1101004800;
  DWORD2(v8) = 1132068864;
  *(_QWORD *)&v8 = 0x4140000040A00000;
  LODWORD(v7) = 1153138688;
  LODWORD(v5) = 1140457472;
  sub_1AFB471E4((uint64_t)v18, 30, 0, 3250, 200, 30, 1, 4, 0x4140000000000000, 0x41F00000C20C0000, 0x428C000040400000, v5, 0x3E8000003DF5C28FLL, v6, 0x3F8000003F800000, 1065353216, 0x3F8000003F800000, 0x3F3333333F800000, 0,
    0x4248000000000000,
    v7,
    0x3E4CCCCD3DA3D70ALL,
    0x3F8000003F800000,
    1065353216,
    0x3F8000003F800000,
    0x3F0000003F800000,
    0,
    0x4110000000000000,
    v8,
    0x3E4CCCCD3DE147AELL,
    1097859072,
    v9,
    v10,
    xmmword_1B0025CC0,
    _Q0,
    v11,
    1084227584,
    v12,
    xmmword_1B0025CC0,
    xmmword_1B0025D40,
    v13,
    0x4040000000000000,
    1140457472,
    0x3E4CCCCD3DCCCCCDLL,
    v14,
    _Q0,
    *((uint64_t *)&_Q0 + 1),
    xmmword_1B0026E40,
    v15,
    1039516303,
    1048576000,
    v16,
    _Q0,
    SDWORD1(_Q0),
    *((uint64_t *)&_Q0 + 1),
    _Q0,
    v17,
    1065353216,
    1065353216,
    1065353216,
    1056964608,
    xmmword_1B0026E10,
    0x40C0000040800000);
}

uint64_t sub_1AFDE5260()
{
  uint64_t v0;
  int64x2_t v8;
  int64x2_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int64x2_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int64x2_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  int64x2_t v80;
  __int128 v81;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F3C30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B0025DC0;
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  __asm { FMOV            V0.2D, #0.5 }
  v10 = (__int128)_Q0;
  v72 = _Q0;
  v73 = xmmword_1B0026E60;
  __asm { FMOV            V2.2D, #1.0 }
  v70 = _Q2;
  v71 = _Q2;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = _Q2;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = _Q2;
  v62 = (int64x2_t)_Q2;
  v63 = xmmword_1B0025E90;
  v60 = _Q2;
  v61 = _Q2;
  v58 = _Q2;
  v59 = _Q2;
  v56 = _Q2;
  v57 = _Q2;
  v54 = _Q2;
  v55 = _Q2;
  v52 = _Q2;
  v53 = _Q2;
  v50 = _Q2;
  v51 = _Q2;
  v48 = _Q2;
  v49 = _Q2;
  v46 = _Q2;
  v47 = _Q2;
  v44 = _Q2;
  v45 = _Q2;
  v42 = _Q2;
  v43 = _Q2;
  v40 = _Q2;
  v41 = _Q2;
  v38 = _Q2;
  v39 = _Q2;
  v36 = _Q2;
  v37 = _Q2;
  v34 = _Q2;
  v35 = _Q2;
  v32 = _Q2;
  v33 = _Q2;
  v30 = _Q2;
  v31 = _Q2;
  v28 = _Q2;
  v29 = _Q2;
  v26 = _Q2;
  v27 = _Q2;
  v24 = _Q2;
  v25 = _Q2;
  v22 = _Q2;
  v23 = _Q2;
  v11 = _Q2;
  v8 = vdupq_n_s64(0x3FCF82F740000000uLL);
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = _Q2;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 32, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B00268C0;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B00268D0;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 1248, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v77 = v11;
  v74 = xmmword_1B0025F50;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025F60;
  v69 = xmmword_1B0025F70;
  v66 = xmmword_1B0025F80;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = vdupq_n_s64(0x3FCF992720000000uLL);
  v21 = xmmword_1B0025FB0;
  v18 = xmmword_1B0025FC0;
  v19 = xmmword_1B0025FD0;
  v16 = xmmword_1B0026920;
  v17 = v11;
  v14 = xmmword_1B0026930;
  v15 = xmmword_1B0026940;
  v12 = xmmword_1B0026950;
  v13 = xmmword_1B0026960;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 2464, -12.0, (__n128)xmmword_1B00268B0, 150.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025FE0;
  v81 = v11;
  v78 = xmmword_1B0025FF0;
  v79 = xmmword_1B0026000;
  v76 = xmmword_1B0026010;
  v77 = xmmword_1B0026020;
  v74 = xmmword_1B0026030;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE88B6D00000000uLL);
  v73 = xmmword_1B0026EA0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)xmmword_1B0026060;
  v63 = xmmword_1B0026070;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026080;
  v21 = xmmword_1B0026090;
  v18 = xmmword_1B00260A0;
  v19 = xmmword_1B0026090;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B0026980;
  v15 = xmmword_1B0026990;
  v12 = xmmword_1B0026980;
  v13 = xmmword_1B00269A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 3680, -6.0, (__n128)xmmword_1B00260B0, 800.0, 1000.0, 0.8, 0.85, 0.6, 0.45, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1106247680,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00260C0;
  v81 = xmmword_1B00260D0;
  v78 = xmmword_1B00260E0;
  v79 = xmmword_1B00260F0;
  v76 = xmmword_1B0026100;
  v77 = xmmword_1B0026110;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026150;
  v67 = xmmword_1B0026160;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026180;
  v21 = xmmword_1B0026190;
  v18 = xmmword_1B00261A0;
  v19 = xmmword_1B0026190;
  v16 = xmmword_1B0026970;
  v17 = v11;
  v14 = xmmword_1B00269B0;
  v15 = xmmword_1B00269C0;
  v12 = xmmword_1B00269D0;
  v13 = xmmword_1B00269E0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 4896, 0.0, (__n128)xmmword_1B00261B0, 600.0, 1600.0, 0.8, 0.9, 0.9, 0.75, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B00261C0;
  v81 = xmmword_1B00261D0;
  v78 = xmmword_1B00261E0;
  v79 = xmmword_1B00261F0;
  v76 = xmmword_1B0026200;
  v77 = xmmword_1B0026210;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026240;
  v65 = xmmword_1B0026250;
  v62 = (int64x2_t)xmmword_1B0026260;
  v63 = xmmword_1B0026270;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026280;
  v21 = xmmword_1B0026290;
  v18 = xmmword_1B00262A0;
  v19 = xmmword_1B0026290;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B00269F0;
  v15 = xmmword_1B0026A00;
  v12 = xmmword_1B0026A10;
  v13 = xmmword_1B0026A20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 6112, 6.0, (__n128)xmmword_1B00262B0, 750.0, 800.0, 0.725, 0.9, 0.89, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v9 = vdupq_n_s64(0x3FECBCBCC0000000uLL);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00262D0;
  v79 = xmmword_1B0025F70;
  v76 = xmmword_1B00262E0;
  v77 = xmmword_1B00262F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026300;
  v65 = xmmword_1B0026310;
  v62 = (int64x2_t)xmmword_1B0026320;
  v63 = xmmword_1B0026330;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026340;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026350;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A30;
  v15 = xmmword_1B0026A40;
  v12 = xmmword_1B0026A50;
  v13 = xmmword_1B0026A60;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 7328, 12.0, (__n128)xmmword_1B0026360, 900.0, 0.0, 0.65, 0.9, 0.88, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026370;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026A70;
  v15 = xmmword_1B0026A80;
  v12 = xmmword_1B0026A90;
  v13 = xmmword_1B0026AA0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 8544, 18.0, (__n128)xmmword_1B00263B0, 1350.0, 20.0, 0.75, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026390;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AC0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(0, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 9760, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B00263C0;
  v79 = xmmword_1B00263D0;
  v76 = xmmword_1B00263E0;
  v77 = xmmword_1B00263F0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026220;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026400;
  v18 = xmmword_1B00263A0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AE0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 10976, 30.0, (__n128)xmmword_1B0026420, 1300.0, 0.0, 0.8, 0.9, 0.9, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = v9;
  v81 = xmmword_1B00262C0;
  v78 = xmmword_1B0026440;
  v79 = v11;
  v76 = v11;
  v77 = v11;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026450;
  v66 = xmmword_1B0026220;
  v67 = xmmword_1B0026230;
  v64 = v11;
  v65 = v11;
  v62 = (int64x2_t)xmmword_1B0026380;
  v63 = xmmword_1B0025F70;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B0026410;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = v10;
  v15 = xmmword_1B0026AB0;
  v12 = xmmword_1B0026AF0;
  v13 = xmmword_1B0026AD0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 12192, 18.0, (__n128)xmmword_1B0026460, 1350.0, 20.0, 0.75, 0.9, 0.85, 0.9, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = vdupq_n_s64(0x3FEC9CDC00000000uLL);
  v81 = xmmword_1B0026470;
  v78 = xmmword_1B0026480;
  v79 = xmmword_1B0026490;
  v76 = xmmword_1B00264A0;
  v77 = xmmword_1B00264B0;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = v11;
  v69 = xmmword_1B0026140;
  v66 = v11;
  v67 = xmmword_1B0026230;
  v64 = xmmword_1B00264C0;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FED73E5C0000000uLL);
  v63 = xmmword_1B00264D0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026430;
  v21 = xmmword_1B0026130;
  v18 = xmmword_1B00264E0;
  v19 = xmmword_1B0026140;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026B00;
  v15 = xmmword_1B0026B10;
  v12 = xmmword_1B0026B20;
  v13 = xmmword_1B0026B30;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 13408, 12.0, (__n128)xmmword_1B00264F0, 900.0, 0.0, 0.7, 0.9, 0.9, 0.85, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026500;
  v81 = xmmword_1B0026510;
  v78 = xmmword_1B0026520;
  v79 = xmmword_1B0026530;
  v76 = xmmword_1B0026540;
  v77 = xmmword_1B0026550;
  v74 = v11;
  v75 = v11;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0027030;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026560;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026570;
  v67 = xmmword_1B0026580;
  v64 = xmmword_1B0026590;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEDEF5480000000uLL);
  v63 = xmmword_1B00265A0;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B00265B0;
  v21 = xmmword_1B00265C0;
  v18 = xmmword_1B00265D0;
  v19 = xmmword_1B00265E0;
  v16 = v11;
  v17 = v11;
  v14 = xmmword_1B0026B40;
  v15 = xmmword_1B0026B50;
  v12 = xmmword_1B0026B60;
  v13 = xmmword_1B0026B70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 14624, 6.0, (__n128)xmmword_1B00265F0, 750.0, 635.0, 0.75, 0.9, 0.875, 0.825, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026600;
  v81 = xmmword_1B0026610;
  v78 = xmmword_1B0026620;
  v79 = xmmword_1B0026630;
  v76 = xmmword_1B0026640;
  v77 = xmmword_1B0026650;
  v74 = v11;
  v75 = xmmword_1B0026120;
  v72 = (int64x2_t)v11;
  v73 = xmmword_1B0026FC0;
  v70 = v11;
  v71 = xmmword_1B0026130;
  v68 = xmmword_1B0026220;
  v69 = xmmword_1B0026140;
  v66 = xmmword_1B0026660;
  v67 = xmmword_1B0026670;
  v64 = xmmword_1B0026170;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEE6AC340000000uLL);
  v63 = xmmword_1B0026680;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026690;
  v21 = xmmword_1B00266A0;
  v18 = xmmword_1B00266B0;
  v19 = xmmword_1B00266C0;
  v16 = xmmword_1B0026B80;
  v17 = xmmword_1B0026B90;
  v14 = xmmword_1B0026BA0;
  v15 = xmmword_1B0026BB0;
  v12 = xmmword_1B0026BC0;
  v13 = xmmword_1B0026A00;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 15840, 0.0, (__n128)xmmword_1B00266D0, 600.0, 1270.0, 0.8, 0.9, 0.85, 0.8, &v66, &v64,
    0x3F6666663F666666,
    0,
    &v62,
    0,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    0,
    1097859072,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0026BD0;
  v81 = v11;
  v78 = xmmword_1B0026700;
  v79 = xmmword_1B0026710;
  v76 = xmmword_1B0026720;
  v77 = xmmword_1B0026730;
  v74 = xmmword_1B0026060;
  v75 = xmmword_1B0026040;
  v72 = vdupq_n_s64(0x3FE8F90420000000uLL);
  v73 = xmmword_1B00271B0;
  v70 = v11;
  v71 = v11;
  v68 = v11;
  v69 = v11;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0026050;
  v65 = xmmword_1B0025FA0;
  v62 = vdupq_n_s64(0x3FEF23CF40000000uLL);
  v63 = xmmword_1B0026740;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026750;
  v21 = xmmword_1B0026760;
  v18 = xmmword_1B0026770;
  v19 = xmmword_1B0026780;
  v16 = xmmword_1B0026BE0;
  v17 = xmmword_1B0026BF0;
  v14 = xmmword_1B0026C00;
  v15 = xmmword_1B0026A00;
  v12 = xmmword_1B0026C10;
  v13 = xmmword_1B0026C20;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 17056, -6.0, (__n128)xmmword_1B00261B0, 600.0, 1054.4, 0.304, 0.85, 0.85, 0.8, &v66, &v64,
    0x3F59999A3F59999ALL,
    0,
    &v62,
    665496235,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1101004800,
    1101004800,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0025F10;
  v81 = v11;
  v77 = v11;
  v78 = xmmword_1B0025F20;
  v79 = xmmword_1B0025F30;
  v76 = xmmword_1B0025F40;
  v74 = xmmword_1B00267C0;
  v75 = xmmword_1B0025E50;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B00271F0;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B00267D0;
  v69 = xmmword_1B00267E0;
  v66 = xmmword_1B00267F0;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025F90;
  v65 = xmmword_1B0025FA0;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = (int64x2_t)xmmword_1B0026800;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0026810;
  v19 = xmmword_1B0025EA0;
  v16 = xmmword_1B0026C30;
  v17 = v11;
  v14 = xmmword_1B0026C40;
  v15 = xmmword_1B0026C50;
  v12 = xmmword_1B0026C60;
  v13 = xmmword_1B0026C70;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 18272, -12.0, (__n128)xmmword_1B00268B0, 300.0, 300.0, 0.1, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F4CCCCD3F4CCCCDLL,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1119092736,
    1106247680,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026C80;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026C90;
  v13 = xmmword_1B00267B0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 19488, -60.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  v80 = (int64x2_t)xmmword_1B0027230;
  v81 = xmmword_1B0025DE0;
  v78 = xmmword_1B0025DF0;
  v79 = xmmword_1B0025E00;
  v76 = xmmword_1B0025E10;
  v77 = xmmword_1B0025E20;
  v74 = xmmword_1B0025E30;
  v75 = xmmword_1B0025E40;
  v72 = (int64x2_t)v10;
  v73 = xmmword_1B0026E60;
  v70 = v11;
  v71 = v11;
  v68 = xmmword_1B0025E60;
  v69 = xmmword_1B0025E70;
  v66 = v11;
  v67 = xmmword_1B0025E50;
  v64 = xmmword_1B0025E80;
  v65 = v11;
  v62 = (int64x2_t)v11;
  v63 = xmmword_1B0025E90;
  v60 = v11;
  v61 = v11;
  v58 = v11;
  v59 = v11;
  v56 = v11;
  v57 = v11;
  v54 = v11;
  v55 = v11;
  v52 = v11;
  v53 = v11;
  v50 = v11;
  v51 = v11;
  v48 = v11;
  v49 = v11;
  v46 = v11;
  v47 = v11;
  v44 = v11;
  v45 = v11;
  v42 = v11;
  v43 = v11;
  v40 = v11;
  v41 = v11;
  v38 = v11;
  v39 = v11;
  v36 = v11;
  v37 = v11;
  v34 = v11;
  v35 = v11;
  v32 = v11;
  v33 = v11;
  v30 = v11;
  v31 = v11;
  v28 = v11;
  v29 = v11;
  v26 = v11;
  v27 = v11;
  v24 = v11;
  v25 = v11;
  v22 = v11;
  v23 = v11;
  v20 = v8;
  v21 = xmmword_1B0025EA0;
  v18 = xmmword_1B0025EB0;
  v19 = xmmword_1B0025EC0;
  v16 = xmmword_1B0026860;
  v17 = v11;
  v14 = xmmword_1B0026870;
  v15 = xmmword_1B0026880;
  v12 = xmmword_1B0026890;
  v13 = xmmword_1B00268A0;
  WeatherConditionLightingKeyframe.init(elevationDegrees:isPM:sunAngle:sunLightIntensity:fillLightIntensity:ambientLightIntensity:sunLightColor:ambientLightColor:fillLightColor:fringeColor:cloudFFGColor:cloudFGColor:cloudBGColor:cloudBBGColor:cloudBlanketColor:cloudFFGBrightness:cloudFGBrightness:cloudBGBrightness:cloudBBGBrightness:cloudBlanketBrightness:starOpacity:sunSpikeBallColor:bloomIntensity:noiseRandomColorStart:noiseRandomColorEnd:rainFGRandomColorStart:rainFGRandomColorEnd:rainBGRandomColorStart:rainBGRandomColorEnd:snowFGRandomColorStart:snowFGRandomColorEnd:snowBGRandomColorStart:snowBGRandomColorEnd:hailRandomColorStart:hailRandomColorEnd:foregroundParticlesRandomColorStart:foregroundParticlesRandomColorEnd:sleetFGRandomColorStart:sleetFGRandomColorEnd:sleetBGRandomColorStart:sleetBGRandomColorEnd:collisionRandomColorStart:collisionRandomColorEnd:windRandomColorStart:windRandomColorEnd:moonLightColor:moonLightIntensity:moonLightRadius:moonColor:moonColorAtHorizon:)(1, &v80, &v78, &v76, &v74, &v72, &v70, &v68, v0 + 20704, -90.0, (__n128)xmmword_1B00268B0, 150.0, 170.0, 0.12583, 0.8, 0.8, 0.7, &v66, &v64,
    0x3F8000003F000000,
    1060320051,
    &v62,
    1065353216,
    &v60,
    &v58,
    &v56,
    &v54,
    &v52,
    &v50,
    &v48,
    &v46,
    &v44,
    &v42,
    &v40,
    &v38,
    &v36,
    &v34,
    &v32,
    &v30,
    &v28,
    &v26,
    &v24,
    &v22,
    &v20,
    &v18,
    &v16,
    1123680256,
    1090519040,
    &v14,
    (uint64_t)&v12);
  return v0;
}

uint64_t sub_1AFDE884C()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;

  result = OUTLINED_FUNCTION_0_124();
  *v0 = v2;
  return result;
}

uint64_t sub_1AFDE886C()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;

  result = OUTLINED_FUNCTION_0_124();
  *v0 = v2;
  return result;
}

uint64_t *sub_1AFDE888C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(unint64_t, unint64_t, uint64_t);

  v6 = sub_1B0007480();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = v13 + v11;
  v15 = ((v14 + (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 17) & ~v12)) & ~v12) + v13;
  v16 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  v17 = (*(_DWORD *)(v7 + 80) | v11) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    v21 = *((unsigned __int8 *)a2 + v8);
    if (v21 >= 2)
    {
      if (v8 <= 3)
        v22 = v8;
      else
        v22 = 4;
      __asm { BR              X13 }
    }
    v23 = v8 + 1;
    v24 = ~v12;
    if (v21 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v25 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v25 = 0;
    }
    *((_BYTE *)a1 + v8) = v25;
    v26 = ((unint64_t)a1 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = ((unint64_t)a2 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = *(_QWORD *)v27;
    v29 = *(_BYTE *)(v27 + 8);
    sub_1AFACF5C4(*(_QWORD *)v27, v29);
    *(_QWORD *)v26 = v28;
    *(_BYTE *)(v26 + 8) = v29;
    v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    v30((v26 + v12 + 9) & v24, (v27 + v12 + 9) & v24, v9);
    v30((v14 + ((v26 + v12 + 9) & v24)) & v24, (v14 + ((v27 + v12 + 9) & v24)) & v24, v9);
  }
  return a1;
}

_QWORD *sub_1AFDE8A94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, unint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = sub_1B0007480();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 0;
      swift_retain();
    }
  }
  v13 = *(_QWORD *)(*(_QWORD *)(sub_1B0007480() - 8) + 64);
  if (v13 <= 8)
    v13 = 8;
  v14 = v13 + 8;
  v15 = ((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_1AFACF5C4(*(_QWORD *)v16, v18);
  v19 = *(_QWORD *)v15;
  v20 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v18;
  sub_1AFACCD50(v19, v20);
  v21 = *(_QWORD *)(a3 + 16);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 + 9 + v15) & ~v23;
  v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v22 + 24);
  v25(v24, (v23 + 9 + v16) & ~v23, v21);
  v25((*(_QWORD *)(v22 + 64) + v23 + v24) & ~v23, (*(_QWORD *)(v22 + 64) + v23 + ((v23 + 9 + v16) & ~v23)) & ~v23, v21);
  return a1;
}

_QWORD *sub_1AFDE8CEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B0007480();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = ((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v14;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 9 + v12) & ~v17;
  v19 = (v17 + 9 + v13) & ~v17;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  v20(v18, v19, v15);
  v20((*(_QWORD *)(v16 + 64) + v17 + v18) & ~v17, (*(_QWORD *)(v16 + 64) + v17 + v19) & ~v17, v15);
  return a1;
}

_QWORD *sub_1AFDE8E64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v6 = sub_1B0007480();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      v13 = 1;
    }
    else
    {
      v13 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(sub_1B0007480() - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = v14 + 8;
  v16 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_BYTE *)(v17 + 8);
  v19 = *(_QWORD *)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  sub_1AFACCD50(v19, v20);
  v21 = *(_QWORD *)(a3 + 16);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 + 9 + v16) & ~v23;
  v25 = (v23 + 9 + v17) & ~v23;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  v26(v24, v25, v21);
  v26((*(_QWORD *)(v22 + 64) + v23 + v24) & ~v23, (*(_QWORD *)(v22 + 64) + v23 + v25) & ~v23, v21);
  return a1;
}

uint64_t sub_1AFDE90AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  v6 = sub_1B0007480();
  v7 = 8;
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) > 8uLL)
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v11)
    goto LABEL_26;
  v13 = ((*(_QWORD *)(v9 + 64) + v12 + (((v7 & 0xFFFFFFFFFFFFFFF8) + v12 + 17) & ~v12)) & ~v12) + *(_QWORD *)(v9 + 64);
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_26:
      if (v10 > 0xFE)
        return __swift_getEnumTagSinglePayload((((a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8) + v12 + 9) & ~v12, v10, v8);
      v20 = *(unsigned __int8 *)(a1 + v7);
      if (v20 >= 2)
        return (v20 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_26;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v19 = v13;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_1AFDE9260(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1B0007480() - 8) + 64);
  if (v8 <= 8)
    v8 = 8;
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= 0xFEu)
    v10 = 254;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + (((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_1AFDE94EC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1AFDE94D8);
}

void sub_1AFDE94FC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1AFDE94D8);
}

void sub_1AFDE9504()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1AFDE94D8);
}

uint64_t InterpolatedMoonDataProvider.__allocating_init(interpolationProvider:moonDataProvider:moonStringBuilder:startOfDayCalculator:)(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  InterpolatedMoonDataProvider.init(interpolationProvider:moonDataProvider:moonStringBuilder:startOfDayCalculator:)(a1, a2, a3, a4);
  return v8;
}

uint64_t InterpolatedMoonDataProvider.init(interpolationProvider:moonDataProvider:moonStringBuilder:startOfDayCalculator:)(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4)
{
  uint64_t v4;

  sub_1AFAFB284(a1, v4 + 16);
  sub_1AFAFB284(a2, v4 + 56);
  sub_1AFAFB284(a3, v4 + 96);
  sub_1AFAFB284(a4, v4 + 136);
  return v4;
}

void InterpolatedMoonDataProvider.makeMoonDataForCurrentDate(location:selectedDate:currentWeatherDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t, uint64_t);
  void (*v31)(char *, char *);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int v81;
  char *v82;

  v71 = a7;
  v66 = a5;
  v67 = a6;
  v81 = a4;
  v75 = a3;
  v76 = a2;
  v77 = a8;
  v10 = OUTLINED_FUNCTION_6_98();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  MEMORY[0x1E0C80A78](v10);
  v68 = v11;
  v79 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_38();
  v80 = v13;
  MEMORY[0x1E0C80A78](v14);
  v78 = (uint64_t)&v64 - v15;
  v16 = sub_1B0005B84();
  v73 = *(_QWORD *)(v16 - 8);
  v74 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = OUTLINED_FUNCTION_11_0();
  v19 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  OUTLINED_FUNCTION_8_98();
  v65 = v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v64 - v22;
  v64 = v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v64 - v26;
  v29 = v8[20];
  v28 = v8[21];
  __swift_project_boxed_opaque_existential_1(v8 + 17, v29);
  sub_1B00068D4();
  v30 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v28 + 8);
  v82 = v27;
  v30(v76, v18, v29, v28);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v18, v74);
  v76 = v19;
  v31 = *(void (**)(char *, char *))(v19 + 16);
  v32 = v72;
  v33 = v23;
  v31(v23, v75);
  v34 = v8[10];
  v35 = v8[11];
  __swift_project_boxed_opaque_existential_1(v8 + 7, v34);
  sub_1B00068A4();
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v23, v34, v35);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(*(id *)(v36 + 16), sel_illuminatedFraction);
    v40 = v39;
    GEOCelestialEphemeris.moonPhaseAngle.getter((uint64_t)v38);
    v42 = v41;
    v43 = CelestialEphemeris.radiusVector.getter();
    v74 = v37;
    v44 = CelestialEphemeris.librationPositionAngle.getter();
    if (v81 == 8)
      v81 = MoonPhase.init(illuminatedFraction:phaseAngle:)(v40, v42);
    OUTLINED_FUNCTION_7_95(v66, v78);
    OUTLINED_FUNCTION_7_95(v67, v80);
    v73 = sub_1AFDE9A00(a1, (uint64_t)v82);
    v67 = v45;
    LODWORD(v66) = v46;
    v47 = v65;
    ((void (*)(uint64_t, char *, uint64_t))v31)(v65, v33, v32);
    v48 = v69;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
    v75 = v33;
    v50 = a1;
    v51 = v70;
    v49(v79, v50, v70);
    v52 = v76;
    v53 = (*(unsigned __int8 *)(v76 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    v54 = (v64 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    v55 = (*(unsigned __int8 *)(v48 + 80) + v54 + 8) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = v8;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v52 + 32))(v56 + v53, v47, v32);
    *(_QWORD *)(v56 + v54) = v71;
    v57 = v56 + v55;
    v58 = *(void (**)(unint64_t, char *, uint64_t))(v48 + 32);
    v59 = (uint64_t)v82;
    v33 = v75;
    v58(v57, v79, v51);
    swift_retain();
    swift_bridgeObjectRetain();
    v60 = v77;
    InterpolatedMoonData.init(illuminatedFraction:moonPhase:distance:moonrise:moonset:nextFullMoonDuration:librationPositionAngle:isMoonRisen:)(v81, v78, v80, v73, v67, v66, (uint64_t)sub_1AFDE9C30, v56, v77, v40, v43, v44);
    swift_release();
    v61 = 0;
  }
  else
  {
    v61 = 1;
    v52 = v76;
    v60 = v77;
    v59 = (uint64_t)v82;
  }
  v62 = *(void (**)(char *, uint64_t))(v52 + 8);
  v62(v33, v32);
  v62((char *)v59, v32);
  v63 = type metadata accessor for InterpolatedMoonData();
  __swift_storeEnumTagSinglePayload(v60, v61, 1, v63);
  OUTLINED_FUNCTION_28_3();
}

uint64_t sub_1AFDE9A00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = sub_1B0005B84();
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B00058D8();
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v24 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v3[10];
  v14 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v15);
  sub_1B00068D4();
  v25 = a1;
  sub_1B00068A4();
  v16 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v14 + 40);
  v26 = a2;
  v16(a2, v8, v15, v14);
  v17 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 = v6;
  v17(v8, v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_1AFACE0DC((uint64_t)v11, &qword_1ED1F4BA0);
    return 0;
  }
  else
  {
    v19 = v24;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v11, v12);
    v20 = v3[15];
    v21 = v3[16];
    __swift_project_boxed_opaque_existential_1(v3 + 12, v20);
    sub_1B00068D4();
    v18 = (*(uint64_t (**)(char *, uint64_t, char *, uint64_t, uint64_t))(v21 + 8))(v19, v26, v8, v20, v21);
    v17(v8, v27);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v12);
  }
  return v18;
}

uint64_t sub_1AFDE9C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_1B00068E0();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = sub_1B00058D8();
  v48 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MoonRiseSet();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1B0005B84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AFDEA7DC(a1, a2);
  if (v19 != 2)
    return v19 & 1;
  sub_1B00068D4();
  sub_1B00068A4();
  sub_1AFDEAD8C(a1, (uint64_t)v15, (uint64_t)v18, v20, v21);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v9) == 1)
  {
    sub_1AFACE0DC((uint64_t)v18, &qword_1ED1F2EE8);
    if (qword_1EEE70088 != -1)
      swift_once();
    v22 = sub_1B0006D00();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EEE72178);
    v23 = v48;
    v25 = v43;
    v24 = v44;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v48 + 16))(v43, a1, v44);
    v27 = v45;
    v26 = v46;
    v28 = v47;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v46 + 16))(v45, a3, v47);
    v29 = sub_1B0006CE8();
    v30 = sub_1B00089BC();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v50 = v42;
      *(_DWORD *)v32 = 136446723;
      sub_1AFAF86C8((unint64_t *)&qword_1EEE718D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v41 = v31;
      v33 = sub_1B0008F80();
      v49 = sub_1AFB4AD14(v33, v34, &v50);
      sub_1B0008BB4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v25, v24);
      *(_WORD *)(v32 + 12) = 2160;
      v49 = 1752392040;
      sub_1B0008BB4();
      *(_WORD *)(v32 + 22) = 2081;
      sub_1AFAF86C8(&qword_1EEE74580, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC9268], MEMORY[0x1E0DC9288]);
      v35 = sub_1B0008F80();
      v49 = sub_1AFB4AD14(v35, v36, &v50);
      sub_1B0008BB4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v27, v28);
      _os_log_impl(&dword_1AFABF000, v29, (os_log_type_t)v41, "Failed to find nextMoonEvent for date: %{public}s,  location: %{private,mask.hash}s", (uint8_t *)v32, 0x20u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x1B5E03CC0](v37, -1, -1);
      MEMORY[0x1B5E03CC0](v32, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v25, v24);
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v27, v28);
    }

    return 1;
  }
  else
  {
    sub_1AFADA740((uint64_t)v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    v38 = swift_getEnumCaseMultiPayload() == 1;
    sub_1AFAE2D74((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
    sub_1AFAE2D74((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
  }
  return v38;
}

void InterpolatedMoonDataProvider.makeInterpolatedMoonData(location:selectedDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t);
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(double *__return_ptr, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  uint64_t v54;
  _BYTE v55[4];
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t);
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _QWORD *v76;
  uint64_t v77;
  unsigned int v78;
  _BYTE *v79;
  double v80[4];
  char v81;

  v65 = a6;
  v60 = a5;
  v58 = a4;
  v78 = a3;
  v77 = a7;
  v64 = OUTLINED_FUNCTION_6_98();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = v9;
  v72 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F4BA0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_38();
  v73 = v11;
  MEMORY[0x1E0C80A78](v12);
  v71 = &v55[-v13];
  v67 = OUTLINED_FUNCTION_11_0();
  v74 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  OUTLINED_FUNCTION_8_98();
  v59 = v14;
  MEMORY[0x1E0C80A78](v15);
  v79 = &v55[-v16];
  v57 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = &v55[-v19];
  v75 = &v55[-v19];
  v21 = sub_1B0005B84();
  MEMORY[0x1E0C80A78](v21);
  v22 = sub_1B0005B18();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = &v55[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v26);
  v28 = &v55[-v27];
  v66 = a1;
  sub_1B00068D4();
  sub_1B0005A34();
  OUTLINED_FUNCTION_9_99();
  sub_1B00068D4();
  sub_1B0005A34();
  sub_1B0005A28();
  v29 = *(void (**)(_BYTE *, uint64_t))(v23 + 8);
  v70 = v22;
  v68 = v29;
  v29(v25, v22);
  OUTLINED_FUNCTION_9_99();
  v30 = 1;
  v31 = v79;
  v69 = v28;
  sub_1B00057B8();
  v32 = v76[5];
  v33 = v76[6];
  v34 = v78;
  __swift_project_boxed_opaque_existential_1(v76 + 2, v32);
  v35 = v66;
  sub_1B00068A4();
  v36 = *(void (**)(double *__return_ptr, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t))(v33 + 8);
  v61 = a2;
  v37 = a2;
  v38 = v67;
  v36(v80, v37, v20, v31, v34, v32, v33);
  if ((v81 & 1) == 0)
  {
    v39 = v74;
    v40 = v80[0];
    v42 = v80[2];
    v41 = v80[3];
    if (v34 == 8)
      LODWORD(v34) = MoonPhase.init(illuminatedFraction:phaseAngle:)(v80[0], v80[1]);
    v78 = v34;
    OUTLINED_FUNCTION_7_95(v58, (uint64_t)v71);
    OUTLINED_FUNCTION_7_95(v60, v73);
    v43 = v76;
    v60 = sub_1AFDE9A00(v35, (uint64_t)v75);
    v58 = v44;
    v56 = v45;
    v46 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v59, v61, v38);
    v47 = v63;
    v48 = v64;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v72, v35, v64);
    v49 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v50 = (v57 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    v51 = (*(unsigned __int8 *)(v47 + 80) + v50 + 8) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = v43;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v52 + v49, v46, v38);
    *(_QWORD *)(v52 + v50) = v65;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v47 + 32))(v52 + v51, v72, v48);
    swift_retain();
    swift_bridgeObjectRetain();
    InterpolatedMoonData.init(illuminatedFraction:moonPhase:distance:moonrise:moonset:nextFullMoonDuration:librationPositionAngle:isMoonRisen:)(v78, (uint64_t)v71, v73, v60, v58, v56, (uint64_t)sub_1AFDE9C30, v52, v77, v40, v42, v41);
    v30 = 0;
  }
  v53 = *(void (**)(_BYTE *, uint64_t))(v74 + 8);
  v53(v79, v38);
  v53(v75, v38);
  v68(v69, v70);
  v54 = type metadata accessor for InterpolatedMoonData();
  __swift_storeEnumTagSinglePayload(v77, v30, 1, v54);
  OUTLINED_FUNCTION_28_3();
}

uint64_t sub_1AFDEA5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _BYTE v9[8];

  swift_weakInit();
  v7 = sub_1AFDEA69C((uint64_t)v9, a2, a3, a4);
  swift_weakDestroy();
  return v7;
}

uint64_t sub_1AFDEA62C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_11_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_6_98() - 8) + 80);
  return sub_1AFDEA5C4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_1AFDEA69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v7 = sub_1AFDE9C34(a2, a3, a4);
    swift_release();
    return v7 & 1;
  }
  else
  {
    if (qword_1EEE70088 != -1)
      swift_once();
    v9 = sub_1B0006D00();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EEE72178);
    v10 = sub_1B0006CE8();
    v11 = sub_1B00089BC();
    if (os_log_type_enabled(v10, v11))
    {
      v8 = 2;
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1AFABF000, v10, v11, "Failed to determine moonrise or moonset for the day", v12, 2u);
      MEMORY[0x1B5E03CC0](v12, -1, -1);

    }
    else
    {

      return 2;
    }
  }
  return v8;
}

void sub_1AFDEA7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74588);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MoonTimeEvent();
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v51 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v50 = (uint64_t)&v49 - v10;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v13);
  v55 = (uint64_t)&v49 - v14;
  MEMORY[0x1E0C80A78](v15);
  v59 = (uint64_t)&v49 - v16;
  MEMORY[0x1E0C80A78](v17);
  v56 = (uint64_t)&v49 - v18;
  v60 = type metadata accessor for MoonRiseSet();
  MEMORY[0x1E0C80A78](v60);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v49 - v23;
  v25 = *(_QWORD *)(a2 + 16);
  if (v25)
  {
    v52 = a2;
    v53 = a1;
    v26 = a2 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v58 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1AFADA740(v26, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      sub_1AFADA740((uint64_t)v24, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      swift_getEnumCaseMultiPayload();
      v28 = sub_1B00058D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v6, v20, v28);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      sub_1AFAE2D74((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
      {
        sub_1AFACE0DC((uint64_t)v6, &qword_1EEE74588);
      }
      else
      {
        v29 = v56;
        sub_1AFC757F4((uint64_t)v6, v56, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        sub_1AFC757F4(v29, v59, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_1AFD0B558(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v31 = *(_QWORD *)(v27 + 16);
        v30 = *(_QWORD *)(v27 + 24);
        if (v31 >= v30 >> 1)
          v27 = sub_1AFD0B558(v30 > 1, v31 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v31 + 1;
        sub_1AFC757F4(v59, v27+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      }
      v26 += v58;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a1 = v53;
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v32 = *(_QWORD *)(v27 + 16);
  if (!v32)
    goto LABEL_25;
  v33 = sub_1B00058D8();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v34(v55, a1, v33);
  swift_storeEnumTagMultiPayload();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v27 = sub_1AFD0B558(0, v32 + 1, 1, v27);
  v36 = *(_QWORD *)(v27 + 16);
  v35 = *(_QWORD *)(v27 + 24);
  if (v36 >= v35 >> 1)
    v27 = sub_1AFD0B558(v35 > 1, v36 + 1, 1, v27);
  *(_QWORD *)(v27 + 16) = v36 + 1;
  v37 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v38 = *(_QWORD *)(v57 + 72);
  sub_1AFC757F4(v55, v27 + v37 + v38 * v36, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
  v61 = v27;
  sub_1AFDEB470(&v61);
  v39 = (uint64_t)v54;
  v34((uint64_t)v54, a1, v33);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v40 = sub_1AFF6F648();
  v42 = v41;
  sub_1AFAE2D74(v39, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
  swift_bridgeObjectRelease();
  v43 = v61;
  if ((v42 & 1) != 0)
    goto LABEL_25;
  v44 = *(_QWORD *)(v61 + 16);
  if (v44 < 2)
    goto LABEL_25;
  v45 = v40 - 1;
  if (v40 < 1)
    goto LABEL_24;
  if (v45 >= v44)
  {
    __break(1u);
  }
  else
  {
    v46 = v50;
    sub_1AFADA740(v61 + v37 + v45 * v38, v50, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
    v47 = sub_1AFCE72C4();
    sub_1AFAE2D74(v46, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
    if (v47 != 2)
      goto LABEL_25;
    if (*(_QWORD *)(v43 + 16) >= 2uLL)
    {
LABEL_24:
      v48 = v51;
      sub_1AFADA740(v43 + v37 + v38, v51, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      sub_1AFCE72C4();
      sub_1AFAE2D74(v48, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
LABEL_25:
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1AFDEAD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);

  v80 = a1;
  v90 = a3;
  v89 = type metadata accessor for MoonRiseSet();
  v76 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v75 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v74 = (char *)&v72 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F07F8);
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for DayMoonData();
  MEMORY[0x1E0C80A78](v84);
  v82 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  MEMORY[0x1E0C80A78](v15);
  v78 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v79 = (uint64_t)&v72 - v18;
  MEMORY[0x1E0C80A78](v19);
  v88 = (char *)&v72 - v20;
  v21 = sub_1B00058D8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v94 = (char *)&v72 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v72 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v72 - v31;
  v73 = sub_1B0005B18();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v34 = (char *)&v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0005A34();
  v35 = v5[20];
  v36 = v5[21];
  v87 = v5;
  __swift_project_boxed_opaque_existential_1(v5 + 17, v35);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8);
  v86 = a2;
  v38 = v36;
  v39 = v89;
  v37(v80, a2, v35, v38);
  v93 = v32;
  v91 = v34;
  v40 = v90;
  sub_1B00057B8();
  v41 = (uint64_t)v88;
  v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  v83 = v29;
  v95 = v22;
  v96 = v42;
  v42(v29, v21);
  __swift_storeEnumTagSinglePayload(v40, 1, 1, v39);
  sub_1AFAF869C(v40, v41, &qword_1ED1F2EE8);
  if (__swift_getEnumTagSinglePayload(v41, 1, v39) == 1)
  {
    v43 = 0;
    v81 = v87 + 7;
    while (1)
    {
      sub_1AFACE0DC(v41, &qword_1ED1F2EE8);
      if (v43 == 30)
        break;
      v44 = v87[10];
      v45 = v87[11];
      __swift_project_boxed_opaque_existential_1(v81, v44);
      v46 = v85;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double, double))(v45 + 48))(v93, v86, v44, v45, a4, a5);
      v47 = (uint64_t)v46;
      v48 = (uint64_t)v46;
      v49 = v84;
      v50 = __swift_getEnumTagSinglePayload(v48, 1, v84) == 1;
      v92 = v43;
      v51 = v47;
      if (v50)
      {
        sub_1AFACE0DC(v47, &qword_1ED1F07F8);
        v52 = v89;
        v53 = v90;
        v41 = (uint64_t)v88;
      }
      else
      {
        v54 = v82;
        sub_1AFC757F4(v51, v82, (uint64_t (*)(_QWORD))type metadata accessor for DayMoonData);
        (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v80, v21);
        v55 = *(_QWORD *)(v54 + *(int *)(v49 + 28));
        v56 = *(_QWORD *)(v55 + 16);
        if (v56)
        {
          v57 = v76;
          v58 = v55 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
          v77 = v55;
          swift_bridgeObjectRetain();
          v59 = *(_QWORD *)(v57 + 72);
          v60 = (uint64_t)v75;
          v61 = (uint64_t)v74;
          while (1)
          {
            sub_1AFADA740(v58, v61, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
            sub_1AFADA740(v61, v60, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
            (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v24, v60, v21);
            sub_1AFAF86C8((unint64_t *)&qword_1ED1F4078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
            v62 = sub_1B000850C();
            v96(v24, v21);
            if ((v62 & 1) == 0)
              break;
            sub_1AFAE2D74(v61, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
            v58 += v59;
            if (!--v56)
            {
              v63 = 1;
              v64 = v89;
              v53 = v90;
              v65 = v78;
              goto LABEL_14;
            }
          }
          v65 = v78;
          sub_1AFC757F4(v61, v78, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
          v63 = 0;
          v64 = v89;
          v53 = v90;
LABEL_14:
          v41 = (uint64_t)v88;
        }
        else
        {
          swift_bridgeObjectRetain();
          v63 = 1;
          v64 = v89;
          v53 = v90;
          v65 = v78;
          v41 = (uint64_t)v88;
        }
        __swift_storeEnumTagSinglePayload(v65, v63, 1, v64);
        v96(v94, v21);
        swift_bridgeObjectRelease();
        if (__swift_getEnumTagSinglePayload(v65, 1, v64) == 1)
        {
          sub_1AFACE0DC(v65, &qword_1ED1F2EE8);
          v66 = 1;
          v67 = v79;
        }
        else
        {
          v68 = v65;
          v67 = v79;
          sub_1AFC757F4(v68, v79, (uint64_t (*)(_QWORD))type metadata accessor for MoonRiseSet);
          v66 = 0;
        }
        __swift_storeEnumTagSinglePayload(v67, v66, 1, v64);
        sub_1AFAE2D74(v82, (uint64_t (*)(_QWORD))type metadata accessor for DayMoonData);
        v52 = v64;
        sub_1AFACE0DC(v53, &qword_1ED1F2EE8);
        sub_1AFDEB5D4(v67, v53);
      }
      v69 = v83;
      v70 = v93;
      sub_1B00057B8();
      v96(v70, v21);
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v70, v69, v21);
      v43 = v92 + 1;
      sub_1AFAF869C(v53, v41, &qword_1ED1F2EE8);
      if (__swift_getEnumTagSinglePayload(v41, 1, v52) != 1)
        goto LABEL_20;
    }
  }
  else
  {
LABEL_20:
    sub_1AFACE0DC(v41, &qword_1ED1F2EE8);
  }
  v96(v93, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v91, v73);
}

void sub_1AFDEB470(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for MoonTimeEvent() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1AFEF7BA4(v3);
  v4 = *(_QWORD *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1AFDEB61C(v5);
  *a1 = v3;
}

uint64_t InterpolatedMoonDataProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return v0;
}

uint64_t InterpolatedMoonDataProvider.__deallocating_deinit()
{
  InterpolatedMoonDataProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_1AFDEB548(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  InterpolatedMoonDataProvider.makeMoonDataForCurrentDate(location:selectedDate:currentWeatherDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1AFDEB568(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  InterpolatedMoonDataProvider.makeInterpolatedMoonData(location:selectedDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of InterpolatedMoonDataProviderType.makeMoonDataForCurrentDate(location:selectedDate:currentWeatherDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t dispatch thunk of InterpolatedMoonDataProviderType.makeInterpolatedMoonData(location:selectedDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t type metadata accessor for InterpolatedMoonDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for InterpolatedMoonDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InterpolatedMoonDataProvider.__allocating_init(interpolationProvider:moonDataProvider:moonStringBuilder:startOfDayCalculator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1AFDEB5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1F2EE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AFDEB61C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  BOOL v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  _QWORD *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(char *, uint64_t);
  void (*v207)(char *, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v208 = sub_1B00058D8();
  v204 = *(_QWORD *)(v208 - 8);
  MEMORY[0x1E0C80A78](v208);
  v202 = (char *)&v173 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v201 = (char *)&v173 - v4;
  MEMORY[0x1E0C80A78](v5);
  v192 = (char *)&v173 - v6;
  MEMORY[0x1E0C80A78](v7);
  v191 = (char *)&v173 - v8;
  MEMORY[0x1E0C80A78](v9);
  v181 = (char *)&v173 - v10;
  MEMORY[0x1E0C80A78](v11);
  v180 = (char *)&v173 - v12;
  v197 = type metadata accessor for MoonTimeEvent();
  v195 = *(_QWORD *)(v197 - 8);
  MEMORY[0x1E0C80A78](v197);
  v186 = (uint64_t)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v210 = (uint64_t)&v173 - v15;
  MEMORY[0x1E0C80A78](v16);
  v200 = (uint64_t)&v173 - v17;
  MEMORY[0x1E0C80A78](v18);
  v199 = (uint64_t)&v173 - v19;
  MEMORY[0x1E0C80A78](v20);
  v198 = (uint64_t)&v173 - v21;
  MEMORY[0x1E0C80A78](v22);
  v214 = (uint64_t)&v173 - v23;
  MEMORY[0x1E0C80A78](v24);
  v190 = (uint64_t)&v173 - v25;
  MEMORY[0x1E0C80A78](v26);
  v189 = (uint64_t)&v173 - v27;
  MEMORY[0x1E0C80A78](v28);
  v188 = (uint64_t)&v173 - v29;
  MEMORY[0x1E0C80A78](v30);
  v187 = (uint64_t)&v173 - v31;
  MEMORY[0x1E0C80A78](v32);
  v179 = (uint64_t)&v173 - v33;
  MEMORY[0x1E0C80A78](v34);
  v178 = (uint64_t)&v173 - v35;
  MEMORY[0x1E0C80A78](v36);
  v177 = (uint64_t)&v173 - v37;
  MEMORY[0x1E0C80A78](v38);
  v182 = (uint64_t)&v173 - v39;
  v40 = a1[1];
  v41 = sub_1B0008F74();
  if (v41 >= v40)
  {
    if ((v40 & 0x8000000000000000) == 0)
    {
      if (v40)
        sub_1AFDEC3C4(0, v40, 1, a1);
      return;
    }
    goto LABEL_140;
  }
  v176 = v41;
  v174 = sub_1AFC912B8(v40 / 2);
  v194 = v42;
  v175 = v40;
  if (v40 <= 0)
  {
    v44 = (char *)MEMORY[0x1E0DEE9D8];
    v110 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
    if (v110 < 2)
    {
LABEL_115:
      swift_bridgeObjectRelease();
      if (v175 >= -1)
      {
        *(_QWORD *)(v174 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_145;
    }
    v165 = *a1;
    while (1)
    {
      v166 = v110 - 2;
      if (v110 < 2)
        break;
      if (!v165)
        goto LABEL_149;
      v167 = v44;
      v168 = *(_QWORD *)&v44[16 * v166 + 32];
      v169 = *(_QWORD *)&v44[16 * v110 + 24];
      v170 = v196;
      sub_1AFDEC708(v165 + *(_QWORD *)(v195 + 72) * v168, v165 + *(_QWORD *)(v195 + 72) * *(_QWORD *)&v44[16 * v110 + 16], (char *)(v165 + *(_QWORD *)(v195 + 72) * v169), v194);
      if (v170)
        goto LABEL_101;
      if (v169 < v168)
        goto LABEL_135;
      v196 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v167 = sub_1AFC92F64();
      if (v166 >= *((_QWORD *)v167 + 2))
        goto LABEL_136;
      v171 = &v167[16 * v166 + 32];
      *(_QWORD *)v171 = v168;
      *((_QWORD *)v171 + 1) = v169;
      v172 = *((_QWORD *)v167 + 2);
      if (v110 > v172)
        goto LABEL_137;
      memmove(&v167[16 * v110 + 16], &v167[16 * v110 + 32], 16 * (v172 - v110));
      v44 = v167;
      *((_QWORD *)v167 + 2) = v172 - 1;
      v110 = v172 - 1;
      if (v172 <= 2)
        goto LABEL_115;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  v43 = 0;
  v44 = (char *)MEMORY[0x1E0DEE9D8];
  v203 = a1;
  while (1)
  {
    v45 = a1;
    v46 = v43;
    v47 = v43 + 1;
    v185 = v44;
    if (v43 + 1 < v40)
    {
      v183 = *v45;
      v48 = v183;
      v49 = *(_QWORD *)(v195 + 72);
      v213 = v49;
      v50 = v182;
      sub_1AFADA740(v183 + v49 * v47, v182, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v51 = v177;
      sub_1AFADA740(v48 + v49 * v46, v177, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v52 = v178;
      sub_1AFADA740(v50, v178, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v212 = v40;
      v53 = v204;
      v54 = *(void (**)(char *, uint64_t, uint64_t))(v204 + 32);
      v55 = v180;
      v56 = v52;
      v57 = v208;
      v54(v180, v56, v208);
      v58 = v179;
      sub_1AFADA740(v51, v179, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v59 = v181;
      v207 = v54;
      v54(v181, v58, v57);
      LODWORD(v211) = sub_1B0005860();
      v60 = *(void (**)(char *, uint64_t))(v53 + 8);
      v61 = v59;
      v40 = v212;
      v62 = v213;
      v60(v61, v57);
      v206 = v60;
      v60(v55, v57);
      sub_1AFAE2D74(v51, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      sub_1AFAE2D74(v182, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v193 = v46;
      v74 = v46 + 2;
      if (v46 + 2 < v40)
      {
        v205 = v62 * v47;
        v63 = v183;
        v184 = v62 * v74;
        while (1)
        {
          v209 = v74;
          v64 = v187;
          sub_1AFADA740(v63 + v184, v187, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          v65 = v188;
          sub_1AFADA740(v63 + v205, v188, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          v66 = v189;
          sub_1AFADA740(v64, v189, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          v67 = v191;
          v68 = v66;
          v69 = v207;
          v70 = v208;
          v207(v191, v68, v208);
          v71 = v190;
          sub_1AFADA740(v65, v190, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          v72 = v192;
          v69(v192, v71, v70);
          LODWORD(v71) = sub_1B0005860();
          v73 = v206;
          v206(v72, v70);
          v73(v67, v70);
          sub_1AFAE2D74(v65, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          sub_1AFAE2D74(v64, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
          if (((v211 ^ v71) & 1) != 0)
            break;
          v74 = v209 + 1;
          v40 = v212;
          v62 = v213;
          v63 += v213;
          if (v209 + 1 >= v212)
          {
            v74 = v212;
            goto LABEL_12;
          }
        }
        v74 = v209;
        v40 = v212;
        v62 = v213;
      }
LABEL_12:
      a1 = v203;
      v75 = v193;
      if ((v211 & 1) != 0)
      {
        if (v74 < v193)
          goto LABEL_142;
        if (v193 < v74)
        {
          v76 = 0;
          v77 = v62 * (v74 - 1);
          v78 = v74 * v62;
          v79 = v193 * v62;
          do
          {
            if (v75 != v74 + v76 - 1)
            {
              v80 = v183;
              if (!v183)
                goto LABEL_148;
              v81 = v183 + v79;
              v82 = v183 + v77;
              sub_1AFC757F4(v183 + v79, v186, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              if (v79 < v77 || v81 >= v80 + v78)
              {
                swift_arrayInitWithTakeFrontToBack();
                v62 = v213;
              }
              else
              {
                v62 = v213;
                if (v79 != v77)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1AFC757F4(v186, v82, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
            }
            ++v75;
            --v76;
            v77 -= v62;
            v78 -= v62;
            v79 += v62;
          }
          while (v75 < v74 + v76);
          a1 = v203;
          v75 = v193;
          v40 = v212;
        }
      }
    }
    else
    {
      v74 = v43 + 1;
      v75 = v43;
      a1 = v45;
    }
    if (v74 < v40)
    {
      if (__OFSUB__(v74, v75))
        goto LABEL_139;
      if (v74 - v75 < v176)
      {
        if (__OFADD__(v75, v176))
          goto LABEL_143;
        if (v75 + v176 >= v40)
          v84 = v40;
        else
          v84 = v75 + v176;
        if (v84 < v75)
          goto LABEL_144;
        if (v74 != v84)
        {
          v193 = v75;
          v85 = *(_QWORD *)(v195 + 72);
          v86 = v85 * (v74 - 1);
          v205 = v85;
          v87 = v74 * v85;
          v184 = v84;
          do
          {
            v88 = 0;
            v89 = v193;
            v209 = v74;
            v206 = (void (*)(char *, uint64_t))v87;
            v207 = (void (*)(char *, uint64_t, uint64_t))v86;
            while (1)
            {
              v213 = v89;
              v90 = v203;
              v91 = *v203;
              v212 = v87 + v88;
              v92 = v87 + v88 + v91;
              v93 = v214;
              sub_1AFADA740(v92, v214, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              v211 = v86 + v88;
              v94 = v198;
              sub_1AFADA740(v86 + v88 + v91, v198, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              v95 = v199;
              sub_1AFADA740(v93, v199, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              v96 = v204;
              v97 = *(void (**)(char *, uint64_t, uint64_t))(v204 + 32);
              v98 = v201;
              v99 = v95;
              v100 = v208;
              v97(v201, v99, v208);
              v101 = v200;
              sub_1AFADA740(v94, v200, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              v102 = v202;
              v97(v202, v101, v100);
              LOBYTE(v97) = sub_1B0005860();
              v103 = *(void (**)(char *, uint64_t))(v96 + 8);
              v103(v102, v100);
              v103(v98, v100);
              sub_1AFAE2D74(v94, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              sub_1AFAE2D74(v214, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              if ((v97 & 1) == 0)
                break;
              v104 = *v90;
              if (!*v90)
                goto LABEL_146;
              v87 = (uint64_t)v206;
              v86 = (uint64_t)v207;
              v105 = (uint64_t)v207 + v104 + v88;
              sub_1AFC757F4((uint64_t)v206 + v104 + v88, v210, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              swift_arrayInitWithTakeFrontToBack();
              sub_1AFC757F4(v210, v105, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
              v88 -= v205;
              v89 = v213 + 1;
              v106 = v209;
              if (v209 == v213 + 1)
                goto LABEL_45;
            }
            v106 = v209;
            v87 = (uint64_t)v206;
            v86 = (uint64_t)v207;
LABEL_45:
            v74 = v106 + 1;
            v86 += v205;
            v87 += v205;
          }
          while (v74 != v184);
          v74 = v184;
          a1 = v203;
          v75 = v193;
        }
      }
    }
    if (v74 < v75)
      goto LABEL_138;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v209 = v74;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v44 = v185;
    else
      v44 = sub_1AFC92E70(0, *((_QWORD *)v185 + 2) + 1, 1, v185);
    v109 = *((_QWORD *)v44 + 2);
    v108 = *((_QWORD *)v44 + 3);
    v110 = v109 + 1;
    if (v109 >= v108 >> 1)
      v44 = sub_1AFC92E70((char *)(v108 > 1), v109 + 1, 1, v44);
    *((_QWORD *)v44 + 2) = v110;
    v111 = v44 + 32;
    v112 = &v44[16 * v109 + 32];
    v113 = v209;
    *(_QWORD *)v112 = v75;
    *((_QWORD *)v112 + 1) = v113;
    if (v109)
      break;
    v110 = 1;
LABEL_95:
    v40 = a1[1];
    v43 = v209;
    if (v209 >= v40)
      goto LABEL_104;
  }
  while (1)
  {
    v114 = v110 - 1;
    if (v110 >= 4)
    {
      v119 = &v111[16 * v110];
      v120 = *((_QWORD *)v119 - 8);
      v121 = *((_QWORD *)v119 - 7);
      v125 = __OFSUB__(v121, v120);
      v122 = v121 - v120;
      if (v125)
        goto LABEL_123;
      v124 = *((_QWORD *)v119 - 6);
      v123 = *((_QWORD *)v119 - 5);
      v125 = __OFSUB__(v123, v124);
      v117 = v123 - v124;
      v118 = v125;
      if (v125)
        goto LABEL_124;
      v126 = v110 - 2;
      v127 = &v111[16 * v110 - 32];
      v129 = *(_QWORD *)v127;
      v128 = *((_QWORD *)v127 + 1);
      v125 = __OFSUB__(v128, v129);
      v130 = v128 - v129;
      if (v125)
        goto LABEL_125;
      v125 = __OFADD__(v117, v130);
      v131 = v117 + v130;
      if (v125)
        goto LABEL_127;
      if (v131 >= v122)
      {
        v149 = &v111[16 * v114];
        v151 = *(_QWORD *)v149;
        v150 = *((_QWORD *)v149 + 1);
        v125 = __OFSUB__(v150, v151);
        v152 = v150 - v151;
        if (v125)
          goto LABEL_133;
        v142 = v117 < v152;
        goto LABEL_84;
      }
    }
    else
    {
      if (v110 != 3)
      {
        v143 = *((_QWORD *)v44 + 4);
        v144 = *((_QWORD *)v44 + 5);
        v125 = __OFSUB__(v144, v143);
        v136 = v144 - v143;
        v137 = v125;
        goto LABEL_78;
      }
      v116 = *((_QWORD *)v44 + 4);
      v115 = *((_QWORD *)v44 + 5);
      v125 = __OFSUB__(v115, v116);
      v117 = v115 - v116;
      v118 = v125;
    }
    if ((v118 & 1) != 0)
      goto LABEL_126;
    v126 = v110 - 2;
    v132 = &v111[16 * v110 - 32];
    v134 = *(_QWORD *)v132;
    v133 = *((_QWORD *)v132 + 1);
    v135 = __OFSUB__(v133, v134);
    v136 = v133 - v134;
    v137 = v135;
    if (v135)
      goto LABEL_128;
    v138 = &v111[16 * v114];
    v140 = *(_QWORD *)v138;
    v139 = *((_QWORD *)v138 + 1);
    v125 = __OFSUB__(v139, v140);
    v141 = v139 - v140;
    if (v125)
      goto LABEL_130;
    if (__OFADD__(v136, v141))
      goto LABEL_132;
    if (v136 + v141 >= v117)
    {
      v142 = v117 < v141;
LABEL_84:
      if (v142)
        v114 = v126;
      goto LABEL_86;
    }
LABEL_78:
    if ((v137 & 1) != 0)
      goto LABEL_129;
    v145 = &v111[16 * v114];
    v147 = *(_QWORD *)v145;
    v146 = *((_QWORD *)v145 + 1);
    v125 = __OFSUB__(v146, v147);
    v148 = v146 - v147;
    if (v125)
      goto LABEL_131;
    if (v148 < v136)
      goto LABEL_95;
LABEL_86:
    v153 = v114 - 1;
    if (v114 - 1 >= v110)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    v154 = *a1;
    if (!*a1)
      goto LABEL_147;
    v155 = v44;
    v156 = a1;
    v157 = v111;
    v158 = &v111[16 * v153];
    v159 = *(_QWORD *)v158;
    v160 = v157;
    v161 = &v157[16 * v114];
    v162 = *((_QWORD *)v161 + 1);
    v163 = v196;
    sub_1AFDEC708(v154 + *(_QWORD *)(v195 + 72) * *(_QWORD *)v158, v154 + *(_QWORD *)(v195 + 72) * *(_QWORD *)v161, (char *)(v154 + *(_QWORD *)(v195 + 72) * v162), v194);
    if (v163)
      break;
    if (v162 < v159)
      goto LABEL_120;
    if (v114 > *((_QWORD *)v155 + 2))
      goto LABEL_121;
    *(_QWORD *)v158 = v159;
    *(_QWORD *)&v160[16 * v153 + 8] = v162;
    v164 = *((_QWORD *)v155 + 2);
    if (v114 >= v164)
      goto LABEL_122;
    v111 = v160;
    v196 = 0;
    v110 = v164 - 1;
    memmove(v161, v161 + 16, 16 * (v164 - 1 - v114));
    v44 = v155;
    *((_QWORD *)v155 + 2) = v164 - 1;
    a1 = v156;
    if (v164 <= 2)
      goto LABEL_95;
  }
LABEL_101:
  swift_bridgeObjectRelease();
  if (v175 < -1)
    goto LABEL_141;
  *(_QWORD *)(v174 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1AFDEC3C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v45 = a1;
  v7 = sub_1B00058D8();
  v8 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v52 = v8;
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v43 - v11;
  v46 = type metadata accessor for MoonTimeEvent();
  MEMORY[0x1E0C80A78](v46);
  v57 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (uint64_t)&v43 - v14;
  MEMORY[0x1E0C80A78](v15);
  v47 = (uint64_t)&v43 - v16;
  MEMORY[0x1E0C80A78](v17);
  v62 = (uint64_t)&v43 - v18;
  MEMORY[0x1E0C80A78](v19);
  v61 = (uint64_t)&v43 - v21;
  v56 = a3;
  v44 = a2;
  if (a3 != a2)
  {
    v22 = *(_QWORD *)(v20 + 72);
    v23 = v22 * (v56 - 1);
    v53 = v22;
    v24 = v22 * v56;
    v25 = v52;
    while (2)
    {
      v26 = 0;
      v60 = v45;
      v54 = v24;
      v55 = v23;
      do
      {
        v27 = *a4;
        v59 = v24 + v26;
        v28 = v61;
        sub_1AFADA740(v24 + v26 + v27, v61, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        v58 = v23 + v26;
        v29 = v62;
        sub_1AFADA740(v23 + v26 + v27, v62, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        v30 = v47;
        sub_1AFADA740(v28, v47, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
        v32 = v49;
        v33 = v30;
        v34 = v51;
        v31(v49, v33, v51);
        v35 = v48;
        sub_1AFADA740(v29, v48, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        v36 = v50;
        v31(v50, v35, v34);
        LOBYTE(v31) = sub_1B0005860();
        v37 = a4;
        v38 = *(void (**)(char *, uint64_t))(v25 + 8);
        v38(v36, v34);
        v39 = v32;
        v40 = v34;
        v24 = v54;
        v23 = v55;
        v38(v39, v40);
        a4 = v37;
        sub_1AFAE2D74(v62, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        sub_1AFAE2D74(v61, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        if ((v31 & 1) == 0)
          break;
        v41 = *v37;
        if (!*v37)
        {
          __break(1u);
          return;
        }
        v42 = v41 + v23 + v26;
        sub_1AFC757F4(v41 + v24 + v26, v57, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        swift_arrayInitWithTakeFrontToBack();
        sub_1AFC757F4(v57, v42, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
        v26 -= v53;
        ++v60;
        a4 = v37;
      }
      while (v56 != v60);
      v23 += v53;
      v24 += v53;
      if (++v56 != v44)
        continue;
      break;
    }
  }
}

void sub_1AFDEC708(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  unint64_t v55;
  unint64_t v56;
  unint64_t v58;
  BOOL v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  BOOL v76;
  int64_t v78;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;

  v8 = sub_1B00058D8();
  v9 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  v97 = v9;
  MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v89 = (char *)&v80 - v12;
  MEMORY[0x1E0C80A78](v13);
  v94 = (char *)&v80 - v14;
  MEMORY[0x1E0C80A78](v15);
  v92 = (unint64_t)&v80 - v16;
  v93 = type metadata accessor for MoonTimeEvent();
  MEMORY[0x1E0C80A78](v93);
  v88 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v87 = (uint64_t)&v80 - v19;
  MEMORY[0x1E0C80A78](v20);
  v86 = (char *)&v80 - v21;
  MEMORY[0x1E0C80A78](v22);
  v85 = (uint64_t)&v80 - v23;
  MEMORY[0x1E0C80A78](v24);
  v91 = (unint64_t)&v80 - v25;
  MEMORY[0x1E0C80A78](v26);
  v84 = (uint64_t)&v80 - v27;
  MEMORY[0x1E0C80A78](v28);
  v83 = (uint64_t)&v80 - v29;
  MEMORY[0x1E0C80A78](v30);
  v82 = (char *)&v80 - v32;
  v33 = *(_QWORD *)(v31 + 72);
  if (!v33)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v34 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v33 == -1)
    goto LABEL_77;
  v36 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v33 == -1)
    goto LABEL_78;
  v38 = v34 / v33;
  v39 = (uint64_t)v36 / v33;
  v95 = *(_QWORD *)(v31 + 72);
  if (v34 / v33 >= (uint64_t)v36 / v33)
  {
    sub_1AFBA7E70(a2, (uint64_t)v36 / v33);
    v41 = a4 + v39 * v33;
    if (v39 * v33 < 1 || a1 >= a2)
      goto LABEL_71;
    v84 = -v33;
    v81 = a4;
    v98 = a1;
    v62 = (uint64_t)v86;
    while (1)
    {
      v100 = a2;
      v99 = v41;
      v94 = a3;
      v63 = v84;
      v92 = v41 + v84;
      v64 = v85;
      sub_1AFADA740(v92, v85, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v91 = a2 + v63;
      sub_1AFADA740(a2 + v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v65 = v87;
      sub_1AFADA740(v64, v87, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v66 = v97;
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
      v68 = v89;
      v69 = v65;
      v70 = v96;
      v67(v89, v69, v96);
      v71 = v88;
      sub_1AFADA740(v62, v88, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v72 = v90;
      v67(v90, v71, v70);
      a3 = &v94[v63];
      v73 = v94;
      LOBYTE(v71) = sub_1B0005860();
      v74 = *(void (**)(char *, uint64_t))(v66 + 8);
      v74(v72, v70);
      v74(v68, v70);
      sub_1AFAE2D74(v62, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      sub_1AFAE2D74(v64, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      if ((v71 & 1) != 0)
      {
        v41 = v99;
        if ((unint64_t)v73 >= v100 && (unint64_t)a3 < v100)
        {
          v33 = v95;
          if (v73 != (char *)v100)
          {
            a2 = v91;
            goto LABEL_63;
          }
          a2 = v91;
LABEL_66:
          a4 = v81;
          goto LABEL_67;
        }
        a2 = v91;
      }
      else
      {
        v76 = (unint64_t)v73 < v99 || (unint64_t)a3 >= v99;
        a2 = v100;
        if (!v76)
        {
          v33 = v95;
          if (v73 == (char *)v99)
          {
            v41 = v92;
          }
          else
          {
            v41 = v92;
LABEL_63:
            swift_arrayInitWithTakeBackToFront();
          }
          goto LABEL_66;
        }
        v41 = v92;
      }
      swift_arrayInitWithTakeFrontToBack();
      a4 = v81;
      v33 = v95;
LABEL_67:
      if (v41 <= a4 || a2 <= v98)
        goto LABEL_71;
    }
  }
  sub_1AFBA7E70(a1, v34 / v33);
  v40 = v38 * v33;
  v41 = a4 + v38 * v33;
  if (v40 >= 1 && a2 < (unint64_t)a3)
  {
    v90 = a3;
    v99 = v41;
    v43 = (uint64_t)v82;
    v44 = v92;
    v45 = v94;
    do
    {
      v100 = a2;
      v98 = a1;
      sub_1AFADA740(a2, v43, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v46 = v83;
      sub_1AFADA740(a4, v83, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v47 = v84;
      sub_1AFADA740(v43, v84, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v48 = v97;
      v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32);
      v50 = v47;
      v51 = v96;
      v49(v44, v50, v96);
      v52 = a4;
      v53 = v91;
      sub_1AFADA740(v46, v91, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      v49((uint64_t)v45, v53, v51);
      a4 = v52;
      LOBYTE(v52) = sub_1B0005860();
      v54 = *(void (**)(char *, uint64_t))(v48 + 8);
      v54(v45, v51);
      v54((char *)v44, v51);
      sub_1AFAE2D74(v46, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      sub_1AFAE2D74(v43, (uint64_t (*)(_QWORD))type metadata accessor for MoonTimeEvent);
      if ((v52 & 1) != 0)
      {
        v33 = v95;
        v55 = v100 + v95;
        v56 = v98;
        if (v98 < v100 || v98 >= v55)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v98 != v100)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v58 = v100;
        v33 = v95;
        v56 = v98;
        if (v98 < a4 || v98 >= a4 + v95)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v98 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v55 = v58;
        a4 += v33;
      }
      v41 = v99;
      a1 = v56 + v33;
      v60 = a4 >= v99 || v55 >= (unint64_t)v90;
      a2 = v55;
    }
    while (!v60);
  }
LABEL_71:
  v78 = v41 - a4;
  if (v33 != -1 || v78 != 0x8000000000000000)
  {
    sub_1AFBA7E70(a4, v78 / v33);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t BoundEntity.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFDECDA0 + 4 * word_1B0039940[*v0]))(0x6172656D6143, 0xE600000000000000);
}

uint64_t sub_1AFDECDA0()
{
  return 1313423693;
}

uint64_t sub_1AFDECDB0()
{
  return 0x786F62796B53;
}

uint64_t sub_1AFDECDC0()
{
  return 0x47426E696152;
}

uint64_t sub_1AFDECDDC()
{
  return 0x47466E696152;
}

unint64_t sub_1AFDECDF8()
{
  return 0xD000000000000013;
}

uint64_t sub_1AFDECF5C()
{
  return 0x6E7553746867694CLL;
}

uint64_t sub_1AFDECF74()
{
  return 0x6C6946746867694CLL;
}

uint64_t sub_1AFDECF94()
{
  return 0x626D41746867694CLL;
}

uint64_t sub_1AFDECFB4()
{
  return 1852796749;
}

uint64_t sub_1AFDECFC4()
{
  return 0x65676E697246;
}

uint64_t sub_1AFDECFD4()
{
  return 0x737961526E7553;
}

uint64_t sub_1AFDED018()
{
  return 0x656B6970536E7553;
}

uint64_t sub_1AFDED038()
{
  return 1818845512;
}

uint64_t sub_1AFDED048()
{
  return 0x47467465656C53;
}

void sub_1AFDED05C()
{
  JUMPOUT(0x1AFDED06CLL);
}

uint64_t sub_1AFDED074()
{
  return 1684957527;
}

void sub_1AFDED084()
{
  JUMPOUT(0x1AFDED098);
}

uint64_t sub_1AFDED0A0()
{
  return OUTLINED_FUNCTION_1_111();
}

uint64_t sub_1AFDED0B4()
{
  return OUTLINED_FUNCTION_1_111();
}

uint64_t sub_1AFDED0C8()
{
  return OUTLINED_FUNCTION_1_111();
}

uint64_t sub_1AFDED0DC()
{
  return OUTLINED_FUNCTION_3_105(0x6F43u);
}

uint64_t sub_1AFDED114()
{
  return 0x726564696C6C6F43;
}

uint64_t sub_1AFDED130()
{
  return OUTLINED_FUNCTION_0_125();
}

uint64_t sub_1AFDED144()
{
  return OUTLINED_FUNCTION_0_125();
}

uint64_t sub_1AFDED158()
{
  return OUTLINED_FUNCTION_0_125();
}

uint64_t sub_1AFDED16C()
{
  return OUTLINED_FUNCTION_0_125();
}

uint64_t sub_1AFDED180()
{
  return OUTLINED_FUNCTION_0_125();
}

uint64_t BoundPropertyName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFDED1D4 + 4 * word_1B003999E[*v0]))(0x6F506172656D6163, 0xEE006E6F69746973);
}

uint64_t sub_1AFDED1D4()
{
  return 0x6F526172656D6163;
}

uint64_t sub_1AFDEE424()
{
  return 0x53736972496E7573;
}

unint64_t sub_1AFDEE44C()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFDEE464()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFDEE47C()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFDEE494()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1AFDEE4B0()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1AFDEE4CC()
{
  return 0xD000000000000011;
}

uint64_t sub_1AFDEE4E4()
{
  return 0x53737961526E7573;
}

unint64_t sub_1AFDEE528()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE558()
{
  return 0xD000000000000013;
}

uint64_t sub_1AFDEE570()
{
  return OUTLINED_FUNCTION_2_112(0x7573u);
}

unint64_t sub_1AFDEE588()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFDEE5A0()
{
  return 0xD000000000000018;
}

uint64_t sub_1AFDEE5B8()
{
  return 0x6566694C6E696172;
}

unint64_t sub_1AFDEE61C()
{
  return 0xD000000000000011;
}

void sub_1AFDEE634()
{
  JUMPOUT(0x1AFDEE650);
}

unint64_t sub_1AFDEE658()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE664()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE670()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE67C()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE688()
{
  return 0xD000000000000014;
}

unint64_t sub_1AFDEE694()
{
  return 0xD000000000000014;
}

uint64_t sub_1AFDEE6BC()
{
  return OUTLINED_FUNCTION_3_105(0x6F63u);
}

unint64_t sub_1AFDEE6E0()
{
  return 0xD000000000000011;
}

unint64_t sub_1AFDEE6F8()
{
  return 0xD000000000000010;
}

unint64_t sub_1AFDEE710()
{
  return 0xD000000000000019;
}

unint64_t sub_1AFDEE728()
{
  return 0xD000000000000017;
}

void sub_1AFDEE740()
{
  JUMPOUT(0x1AFDEE754);
}

void sub_1AFDEE760()
{
  JUMPOUT(0x1AFDEE7B0);
}

WeatherUI::BoundEntity_optional __swiftcall BoundEntity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  WeatherUI::BoundEntity_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1B0008FC8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 29;
  switch(v3)
  {
    case 0:
      goto LABEL_31;
    case 1:
      v5 = 1;
      goto LABEL_31;
    case 2:
      v5 = 2;
      goto LABEL_31;
    case 3:
      v5 = 3;
      goto LABEL_31;
    case 4:
      v5 = 4;
      goto LABEL_31;
    case 5:
      v5 = 5;
      goto LABEL_31;
    case 6:
      v5 = 6;
      goto LABEL_31;
    case 7:
      v5 = 7;
      goto LABEL_31;
    case 8:
      v5 = 8;
      goto LABEL_31;
    case 9:
      v5 = 9;
      goto LABEL_31;
    case 10:
      v5 = 10;
      goto LABEL_31;
    case 11:
      v5 = 11;
      goto LABEL_31;
    case 12:
      v5 = 12;
      goto LABEL_31;
    case 13:
      v5 = 13;
      goto LABEL_31;
    case 14:
      v5 = 14;
      goto LABEL_31;
    case 15:
      v5 = 15;
      goto LABEL_31;
    case 16:
      v5 = 16;
      goto LABEL_31;
    case 17:
      v5 = 17;
      goto LABEL_31;
    case 18:
      v5 = 18;
      goto LABEL_31;
    case 19:
      v5 = 19;
      goto LABEL_31;
    case 20:
      v5 = 20;
      goto LABEL_31;
    case 21:
      v5 = 21;
      goto LABEL_31;
    case 22:
      v5 = 22;
      goto LABEL_31;
    case 23:
      v5 = 23;
      goto LABEL_31;
    case 24:
      v5 = 24;
      goto LABEL_31;
    case 25:
      v5 = 25;
      goto LABEL_31;
    case 26:
      v5 = 26;
      goto LABEL_31;
    case 27:
      v5 = 27;
      goto LABEL_31;
    case 28:
      v5 = 28;
LABEL_31:
      v6 = v5;
      break;
    case 29:
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    case 34:
      v6 = 34;
      break;
    case 35:
      v6 = 35;
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    case 46:
      v6 = 46;
      break;
    default:
      v6 = 47;
      break;
  }
  *v2 = v6;
  return result;
}

void *static BoundEntity.allCases.getter()
{
  return &unk_1E6084748;
}

uint64_t sub_1AFDEE9D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFC0BB28(*a1, *a2);
}

void sub_1AFDEE9E0()
{
  unsigned __int8 *v0;

  sub_1AFD77560(*v0);
}

uint64_t sub_1AFDEE9E8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AFDF058C(a1, *v1);
}

void sub_1AFDEE9F0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AFD77768(a1, *v1);
}

WeatherUI::BoundEntity_optional sub_1AFDEE9F8(Swift::String *a1)
{
  return BoundEntity.init(rawValue:)(*a1);
}

uint64_t sub_1AFDEEA04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BoundEntity.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AFDEEA28(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6084748;
}

WeatherUI::BoundPropertyName_optional __swiftcall BoundPropertyName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  WeatherUI::BoundPropertyName_optional result;
  char v9;
  unint64_t v10;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1EFEB8);
  v3 = swift_allocObject();
  v4 = sub_1AFCA36BC(v3, 238);
  *(_QWORD *)v5 = "cameraPosition";
  *(_QWORD *)(v5 + 8) = 14;
  *(_BYTE *)(v5 + 16) = 2;
  *(_QWORD *)(v5 + 24) = "cameraRotation";
  *(_QWORD *)(v5 + 32) = 14;
  *(_BYTE *)(v5 + 40) = 2;
  *(_QWORD *)(v5 + 48) = "cameraFocalLength";
  *(_QWORD *)(v5 + 56) = 17;
  *(_BYTE *)(v5 + 64) = 2;
  *(_QWORD *)(v5 + 72) = "cameraOrthographicScale";
  *(_QWORD *)(v5 + 80) = 23;
  *(_BYTE *)(v5 + 88) = 2;
  *(_QWORD *)(v5 + 96) = "bloomIntensity";
  *(_QWORD *)(v5 + 104) = 14;
  *(_BYTE *)(v5 + 112) = 2;
  *(_QWORD *)(v5 + 120) = "filmOffset";
  *(_QWORD *)(v5 + 128) = 10;
  *(_BYTE *)(v5 + 136) = 2;
  *(_QWORD *)(v5 + 144) = "lightningNumberOfBranches";
  *(_QWORD *)(v5 + 152) = 25;
  *(_BYTE *)(v5 + 160) = 2;
  *(_QWORD *)(v5 + 168) = "lightningRoughness";
  *(_QWORD *)(v5 + 176) = 18;
  *(_BYTE *)(v5 + 184) = 2;
  *(_QWORD *)(v5 + 192) = "lightningBranchSpread";
  *(_QWORD *)(v5 + 200) = 21;
  *(_BYTE *)(v5 + 208) = 2;
  *(_QWORD *)(v5 + 216) = "lightningThickness";
  *(_QWORD *)(v5 + 224) = 18;
  *(_BYTE *)(v5 + 232) = 2;
  *(_QWORD *)(v5 + 240) = "lightningBoltThicknessMultiplyer";
  *(_QWORD *)(v5 + 248) = 32;
  *(_BYTE *)(v5 + 256) = 2;
  *(_QWORD *)(v5 + 264) = "lightningFrequencyAnim";
  *(_QWORD *)(v5 + 272) = 22;
  *(_BYTE *)(v5 + 280) = 2;
  *(_QWORD *)(v5 + 288) = "lightningGlow";
  *(_QWORD *)(v5 + 296) = 13;
  *(_BYTE *)(v5 + 304) = 2;
  *(_QWORD *)(v5 + 312) = "lightningGrowLength";
  *(_QWORD *)(v5 + 320) = 19;
  *(_BYTE *)(v5 + 328) = 2;
  *(_QWORD *)(v5 + 336) = "lightningFlashLength";
  *(_QWORD *)(v5 + 344) = 20;
  *(_BYTE *)(v5 + 352) = 2;
  *(_QWORD *)(v5 + 360) = "lightningFadeLength";
  *(_QWORD *)(v5 + 368) = 19;
  *(_BYTE *)(v5 + 376) = 2;
  *(_QWORD *)(v5 + 384) = "lightningBranchFadeLength";
  *(_QWORD *)(v5 + 392) = 25;
  *(_BYTE *)(v5 + 400) = 2;
  *(_QWORD *)(v5 + 408) = "lightningScreenFlashFadeLength";
  *(_QWORD *)(v5 + 416) = 30;
  *(_BYTE *)(v5 + 424) = 2;
  *(_QWORD *)(v5 + 432) = "lightningScreenFlashProbability";
  *(_QWORD *)(v5 + 440) = 31;
  *(_BYTE *)(v5 + 448) = 2;
  *(_QWORD *)(v5 + 456) = "lightningScreenFlashBrightness";
  *(_QWORD *)(v5 + 464) = 30;
  *(_BYTE *)(v5 + 472) = 2;
  *(_QWORD *)(v5 + 480) = "lightningCloudFlashBrightness";
  *(_QWORD *)(v5 + 488) = 29;
  *(_BYTE *)(v5 + 496) = 2;
  *(_QWORD *)(v5 + 504) = "lightningCloudFlashProbability";
  *(_QWORD *)(v5 + 512) = 30;
  *(_BYTE *)(v5 + 520) = 2;
  *(_QWORD *)(v5 + 528) = "lightningDrawSpaceWidth";
  *(_QWORD *)(v5 + 536) = 23;
  *(_BYTE *)(v5 + 544) = 2;
  *(_QWORD *)(v5 + 552) = "lightningUseRespawn";
  *(_QWORD *)(v5 + 560) = 19;
  *(_BYTE *)(v5 + 568) = 2;
  *(_QWORD *)(v5 + 576) = "lightningRespawnSeed";
  *(_QWORD *)(v5 + 584) = 20;
  *(_BYTE *)(v5 + 592) = 2;
  *(_QWORD *)(v5 + 600) = "lightningFadeProgress";
  *(_QWORD *)(v5 + 608) = 21;
  *(_BYTE *)(v5 + 616) = 2;
  *(_QWORD *)(v5 + 624) = "moonElevation";
  *(_QWORD *)(v5 + 632) = 13;
  *(_BYTE *)(v5 + 640) = 2;
  *(_QWORD *)(v5 + 648) = "moonImage";
  *(_QWORD *)(v5 + 656) = 9;
  *(_BYTE *)(v5 + 664) = 2;
  *(_QWORD *)(v5 + 672) = "moonRiseToSet";
  *(_QWORD *)(v5 + 680) = 13;
  *(_BYTE *)(v5 + 688) = 2;
  *(_QWORD *)(v5 + 696) = "moonAngle";
  *(_QWORD *)(v5 + 704) = 9;
  *(_BYTE *)(v5 + 712) = 2;
  *(_QWORD *)(v5 + 720) = "moonScaleRange";
  *(_QWORD *)(v5 + 728) = 14;
  *(_BYTE *)(v5 + 736) = 2;
  *(_QWORD *)(v5 + 744) = "moonColor";
  *(_QWORD *)(v5 + 752) = 9;
  *(_BYTE *)(v5 + 760) = 2;
  *(_QWORD *)(v5 + 768) = "moonColorAtHorizon";
  *(_QWORD *)(v5 + 776) = 18;
  *(_BYTE *)(v5 + 784) = 2;
  *(_QWORD *)(v5 + 792) = "moonLightRadius";
  *(_QWORD *)(v5 + 800) = 15;
  *(_BYTE *)(v5 + 808) = 2;
  *(_QWORD *)(v5 + 816) = "moonPhaseAngle";
  *(_QWORD *)(v5 + 824) = 14;
  *(_BYTE *)(v5 + 832) = 2;
  *(_QWORD *)(v5 + 840) = "moonLightIntensity";
  *(_QWORD *)(v5 + 848) = 18;
  *(_BYTE *)(v5 + 856) = 2;
  *(_QWORD *)(v5 + 864) = "moonLightColor";
  *(_QWORD *)(v5 + 872) = 14;
  *(_BYTE *)(v5 + 880) = 2;
  *(_QWORD *)(v5 + 888) = "gradientTop";
  *(_QWORD *)(v5 + 896) = 11;
  *(_BYTE *)(v5 + 904) = 2;
  *(_QWORD *)(v5 + 912) = "gradientMiddle";
  *(_QWORD *)(v5 + 920) = 14;
  *(_BYTE *)(v5 + 928) = 2;
  *(_QWORD *)(v5 + 936) = "gradientBottom";
  *(_QWORD *)(v5 + 944) = 14;
  *(_BYTE *)(v5 + 952) = 2;
  *(_QWORD *)(v5 + 960) = "rainFGParticleCount";
  *(_QWORD *)(v5 + 968) = 19;
  *(_BYTE *)(v5 + 976) = 2;
  *(_QWORD *)(v5 + 984) = "rainFGParticleVelocity";
  *(_QWORD *)(v5 + 992) = 22;
  *(_BYTE *)(v5 + 1000) = 2;
  *(_QWORD *)(v5 + 1008) = "rainFGMinMaxSize";
  *(_QWORD *)(v5 + 1016) = 16;
  *(_BYTE *)(v5 + 1024) = 2;
  *(_QWORD *)(v5 + 1032) = "rainFGRandomColorStart";
  *(_QWORD *)(v5 + 1040) = 22;
  *(_BYTE *)(v5 + 1048) = 2;
  *(_QWORD *)(v5 + 1056) = "rainFGRandomColorEnd";
  *(_QWORD *)(v5 + 1064) = 20;
  *(_BYTE *)(v5 + 1072) = 2;
  *(_QWORD *)(v5 + 1080) = "rainFGSpread";
  *(_QWORD *)(v5 + 1088) = 12;
  *(_BYTE *)(v5 + 1096) = 2;
  *(_QWORD *)(v5 + 1104) = "rainFGNoiseFieldIntensity";
  *(_QWORD *)(v5 + 1112) = 25;
  *(_BYTE *)(v5 + 1120) = 2;
  *(_QWORD *)(v5 + 1128) = "rainFGNoiseFieldScale";
  *(_QWORD *)(v5 + 1136) = 21;
  *(_BYTE *)(v5 + 1144) = 2;
  *(_QWORD *)(v5 + 1152) = "rainBGParticleCount";
  *(_QWORD *)(v5 + 1160) = 19;
  *(_BYTE *)(v5 + 1168) = 2;
  *(_QWORD *)(v5 + 1176) = "rainBGParticleVelocity";
  *(_QWORD *)(v5 + 1184) = 22;
  *(_BYTE *)(v5 + 1192) = 2;
  *(_QWORD *)(v5 + 1200) = "rainBGMinMaxSize";
  *(_QWORD *)(v5 + 1208) = 16;
  *(_BYTE *)(v5 + 1216) = 2;
  *(_QWORD *)(v5 + 1224) = "rainBGRandomColorStart";
  *(_QWORD *)(v5 + 1232) = 22;
  *(_BYTE *)(v5 + 1240) = 2;
  *(_QWORD *)(v5 + 1248) = "rainBGRandomColorEnd";
  *(_QWORD *)(v5 + 1256) = 20;
  *(_BYTE *)(v5 + 1264) = 2;
  *(_QWORD *)(v5 + 1272) = "rainBGSpread";
  *(_QWORD *)(v5 + 1280) = 12;
  *(_BYTE *)(v5 + 1288) = 2;
  *(_QWORD *)(v5 + 1296) = "rainBGNoiseFieldIntensity";
  *(_QWORD *)(v5 + 1304) = 25;
  *(_BYTE *)(v5 + 1312) = 2;
  *(_QWORD *)(v5 + 1320) = "rainBGNoiseFieldScale";
  *(_QWORD *)(v5 + 1328) = 21;
  *(_BYTE *)(v5 + 1336) = 2;
  *(_QWORD *)(v5 + 1344) = "blowingSpeed";
  *(_QWORD *)(v5 + 1352) = 12;
  *(_BYTE *)(v5 + 1360) = 2;
  *(_QWORD *)(v5 + 1368) = "blowingAmount";
  *(_QWORD *)(v5 + 1376) = 13;
  *(_BYTE *)(v5 + 1384) = 2;
  *(_QWORD *)(v5 + 1392) = "snowFGParticleCount";
  *(_QWORD *)(v5 + 1400) = 19;
  *(_BYTE *)(v5 + 1408) = 2;
  *(_QWORD *)(v5 + 1416) = "snowFGParticleVelocity";
  *(_QWORD *)(v5 + 1424) = 22;
  *(_BYTE *)(v5 + 1432) = 2;
  *(_QWORD *)(v5 + 1440) = "snowFGMinMaxSize";
  *(_QWORD *)(v5 + 1448) = 16;
  *(_BYTE *)(v5 + 1456) = 2;
  *(_QWORD *)(v5 + 1464) = "snowFGNoiseFieldIntensity";
  *(_QWORD *)(v5 + 1472) = 25;
  *(_BYTE *)(v5 + 1480) = 2;
  *(_QWORD *)(v5 + 1488) = "snowFGNoiseFieldScale";
  *(_QWORD *)(v5 + 1496) = 21;
  *(_BYTE *)(v5 + 1504) = 2;
  *(_QWORD *)(v5 + 1512) = "snowFGSpread";
  *(_QWORD *)(v5 + 1520) = 12;
  *(_BYTE *)(v5 + 1528) = 2;
  *(_QWORD *)(v5 + 1536) = "snowFGRandomColorStart";
  *(_QWORD *)(v5 + 1544) = 22;
  *(_BYTE *)(v5 + 1552) = 2;
  *(_QWORD *)(v5 + 1560) = "snowFGRandomColorEnd";
  *(_QWORD *)(v5 + 1568) = 20;
  *(_BYTE *)(v5 + 1576) = 2;
  *(_QWORD *)(v5 + 1584) = "snowBGParticleCount";
  *(_QWORD *)(v5 + 1592) = 19;
  *(_BYTE *)(v5 + 1600) = 2;
  *(_QWORD *)(v5 + 1608) = "snowBGParticleVelocity";
  *(_QWORD *)(v5 + 1616) = 22;
  *(_BYTE *)(v5 + 1624) = 2;
  *(_QWORD *)(v5 + 1632) = "snowBGMinMaxSize";
  *(_QWORD *)(v5 + 1640) = 16;
  *(_BYTE *)(v5 + 1648) = 2;
  *(_QWORD *)(v5 + 1656) = "snowBGNoiseFieldIntensity";
  *(_QWORD *)(v5 + 1664) = 25;
  *(_BYTE *)(v5 + 1672) = 2;
  *(_QWORD *)(v5 + 1680) = "snowBGNoiseFieldScale";
  *(_QWORD *)(v5 + 1688) = 21;
  *(_BYTE *)(v5 + 1696) = 2;
  *(_QWORD *)(v5 + 1704) = "snowBGSpread";
  *(_QWORD *)(v5 + 1712) = 12;
  *(_BYTE *)(v5 + 1720) = 2;
  *(_QWORD *)(v5 + 1728) = "snowBGRandomColorStart";
  *(_QWORD *)(v5 + 1736) = 22;
  *(_BYTE *)(v5 + 1744) = 2;
  *(_QWORD *)(v5 + 1752) = "snowBGRandomColorEnd";
  *(_QWORD *)(v5 + 1760) = 20;
  *(_BYTE *)(v5 + 1768) = 2;
  *(_QWORD *)(v5 + 1776) = "useSnowFast";
  *(_QWORD *)(v5 + 1784) = 11;
  *(_BYTE *)(v5 + 1792) = 2;
  *(_QWORD *)(v5 + 1800) = "starOpacity";
  *(_QWORD *)(v5 + 1808) = 11;
  *(_QWORD *)(v5 + 1824) = "starSize";
  *(_QWORD *)(v5 + 1848) = "starSpeed";
  *(_QWORD *)(v5 + 1872) = "starParticleCount";
  *(_QWORD *)(v5 + 1896) = "starBrightSize";
  *(_QWORD *)(v5 + 1920) = "starBrightParticleCount";
  *(_QWORD *)(v5 + 1944) = "starBrightTwinkleAmount";
  *(_QWORD *)(v5 + 1968) = "starBrightTwinkleSpeed";
  *(_QWORD *)(v5 + 1992) = "starTwinkleSpeed";
  *(_QWORD *)(v5 + 2184) = "lightAmbientColor";
  *(_QWORD *)(v5 + 2280) = "sunAngle";
  *(_QWORD *)(v5 + 2376) = "noiseParticleCount";
  *(_QWORD *)(v5 + 2472) = "noiseAngleVelocity";
  *(_QWORD *)(v5 + 2568) = "hailColorStart";
  *(_QWORD *)(v5 + 2664) = "sleetFGMinMaxSize";
  *(_QWORD *)(v5 + 2760) = "sleetBGParticleVelocity";
  *(_QWORD *)(v5 + 2856) = "windParticleAmount";
  *(_QWORD *)(v5 + 2952) = "windMinMaxX";
  *(_QWORD *)(v5 + 3048) = "fringeVelocity";
  *(_QWORD *)(v5 + 3144) = "fringeScaleAmplitude";
  *(_QWORD *)(v5 + 3240) = "cloudBBGColor";
  *(_QWORD *)(v5 + 3336) = "cloudBBGOffsetY";
  *(_QWORD *)(v5 + 3432) = "cloudBBGEmitterScale";
  *(_QWORD *)(v5 + 3648) = "cloudBGEmitterScale";
  *(_BYTE *)(v5 + 3640) = 2;
  *(_QWORD *)(v5 + 3624) = "cloudBGParticleCount";
  *(_QWORD *)(v5 + 3608) = 18;
  *(_BYTE *)(v5 + 3616) = 2;
  *(_QWORD *)(v5 + 3632) = 20;
  *(_BYTE *)(v5 + 1816) = 2;
  *(_QWORD *)(v5 + 3600) = "cloudBGUseLighting";
  *(_QWORD *)(v5 + 3584) = 14;
  *(_BYTE *)(v5 + 3592) = 2;
  *(_QWORD *)(v5 + 3552) = "cloudBGOffsetY";
  *(_QWORD *)(v5 + 3560) = 14;
  *(_BYTE *)(v5 + 3568) = 2;
  *(_QWORD *)(v5 + 3576) = "cloudBGOffsetZ";
  *(_BYTE *)(v5 + 3520) = 2;
  *(_QWORD *)(v5 + 3528) = "cloudBGScale";
  *(_QWORD *)(v5 + 3536) = 12;
  *(_BYTE *)(v5 + 3544) = 2;
  *(_QWORD *)(v5 + 3488) = 17;
  *(_BYTE *)(v5 + 3496) = 2;
  *(_QWORD *)(v5 + 3504) = "cloudBGVelocity";
  *(_QWORD *)(v5 + 3512) = 15;
  *(_QWORD *)(v5 + 3480) = "cloudBGBrightness";
  *(_QWORD *)(v5 + 3464) = 12;
  *(_BYTE *)(v5 + 3472) = 2;
  *(_QWORD *)(v5 + 1832) = 8;
  *(_QWORD *)(v5 + 3456) = "cloudBGColor";
  *(_QWORD *)(v5 + 3440) = 20;
  *(_BYTE *)(v5 + 3448) = 2;
  *(_QWORD *)(v5 + 3408) = "cloudBBGParticleCount";
  *(_BYTE *)(v5 + 3400) = 2;
  *(_QWORD *)(v5 + 3416) = 21;
  *(_BYTE *)(v5 + 3424) = 2;
  *(_QWORD *)(v5 + 3384) = "cloudBBGUseLighting";
  *(_QWORD *)(v5 + 3368) = 15;
  *(_BYTE *)(v5 + 3376) = 2;
  *(_QWORD *)(v5 + 3392) = 19;
  *(_BYTE *)(v5 + 1840) = 2;
  *(_QWORD *)(v5 + 3360) = "cloudBBGOffsetZ";
  *(_QWORD *)(v5 + 3344) = 15;
  *(_BYTE *)(v5 + 3352) = 2;
  *(_QWORD *)(v5 + 3312) = "cloudBBGScale";
  *(_BYTE *)(v5 + 3304) = 2;
  *(_QWORD *)(v5 + 3320) = 13;
  *(_BYTE *)(v5 + 3328) = 2;
  *(_QWORD *)(v5 + 3288) = "cloudBBGVelocity";
  *(_QWORD *)(v5 + 3272) = 18;
  *(_BYTE *)(v5 + 3280) = 2;
  *(_QWORD *)(v5 + 3296) = 16;
  *(_QWORD *)(v5 + 1856) = 9;
  *(_QWORD *)(v5 + 3264) = "cloudBBGBrightness";
  *(_QWORD *)(v5 + 3248) = 13;
  *(_BYTE *)(v5 + 3256) = 2;
  *(_QWORD *)(v5 + 3216) = "fringeColor";
  *(_BYTE *)(v5 + 3208) = 2;
  *(_QWORD *)(v5 + 3224) = 11;
  *(_BYTE *)(v5 + 3232) = 2;
  *(_QWORD *)(v5 + 3192) = "fringeAngularVelocity";
  *(_QWORD *)(v5 + 3176) = 13;
  *(_BYTE *)(v5 + 3184) = 2;
  *(_QWORD *)(v5 + 3200) = 21;
  *(_BYTE *)(v5 + 1864) = 2;
  *(_QWORD *)(v5 + 3168) = "fringeOffsetY";
  *(_QWORD *)(v5 + 3152) = 20;
  *(_BYTE *)(v5 + 3160) = 2;
  *(_QWORD *)(v5 + 3120) = "fringeScaleFrequency";
  *(_BYTE *)(v5 + 3112) = 2;
  *(_QWORD *)(v5 + 3128) = 20;
  *(_BYTE *)(v5 + 3136) = 2;
  *(_QWORD *)(v5 + 3096) = "fringeEmitterScale";
  *(_QWORD *)(v5 + 3080) = 11;
  *(_BYTE *)(v5 + 3088) = 2;
  *(_QWORD *)(v5 + 3104) = 18;
  *(_QWORD *)(v5 + 1880) = 17;
  *(_QWORD *)(v5 + 3072) = "fringeScale";
  *(_QWORD *)(v5 + 3056) = 14;
  *(_BYTE *)(v5 + 3064) = 2;
  *(_QWORD *)(v5 + 3024) = "fringeParticleCount";
  *(_BYTE *)(v5 + 3016) = 2;
  *(_QWORD *)(v5 + 3032) = 19;
  *(_BYTE *)(v5 + 3040) = 2;
  *(_QWORD *)(v5 + 3000) = "windSize";
  *(_QWORD *)(v5 + 2984) = 11;
  *(_BYTE *)(v5 + 2992) = 2;
  *(_QWORD *)(v5 + 3008) = 8;
  *(_BYTE *)(v5 + 1888) = 2;
  *(_QWORD *)(v5 + 2976) = "windMinMaxY";
  *(_QWORD *)(v5 + 2960) = 11;
  *(_BYTE *)(v5 + 2968) = 2;
  *(_QWORD *)(v5 + 2928) = "windRandomColorEnd";
  *(_BYTE *)(v5 + 2920) = 2;
  *(_QWORD *)(v5 + 2936) = 18;
  *(_BYTE *)(v5 + 2944) = 2;
  *(_QWORD *)(v5 + 2904) = "windRandomColorStart";
  *(_QWORD *)(v5 + 2888) = 20;
  *(_BYTE *)(v5 + 2896) = 2;
  *(_QWORD *)(v5 + 2912) = 20;
  *(_QWORD *)(v5 + 1904) = 14;
  *(_QWORD *)(v5 + 2880) = "windParticleVelocity";
  *(_QWORD *)(v5 + 2864) = 18;
  *(_BYTE *)(v5 + 2872) = 2;
  *(_QWORD *)(v5 + 2832) = "sleetBGRandomColorEnd";
  *(_BYTE *)(v5 + 2824) = 2;
  *(_QWORD *)(v5 + 2840) = 21;
  *(_BYTE *)(v5 + 2848) = 2;
  *(_QWORD *)(v5 + 2808) = "sleetBGRandomColorStart";
  *(_QWORD *)(v5 + 2792) = 17;
  *(_BYTE *)(v5 + 2800) = 2;
  *(_QWORD *)(v5 + 2816) = 23;
  *(_BYTE *)(v5 + 1912) = 2;
  *(_QWORD *)(v5 + 2784) = "sleetBGMinMaxSize";
  *(_QWORD *)(v5 + 2768) = 23;
  *(_BYTE *)(v5 + 2776) = 2;
  *(_QWORD *)(v5 + 2736) = "sleetBGParticleCount";
  *(_BYTE *)(v5 + 2728) = 2;
  *(_QWORD *)(v5 + 2744) = 20;
  *(_BYTE *)(v5 + 2752) = 2;
  *(_QWORD *)(v5 + 2712) = "sleetFGRandomColorEnd";
  *(_QWORD *)(v5 + 2696) = 23;
  *(_BYTE *)(v5 + 2704) = 2;
  *(_QWORD *)(v5 + 2720) = 21;
  *(_QWORD *)(v5 + 1928) = 23;
  *(_QWORD *)(v5 + 2688) = "sleetFGRandomColorStart";
  *(_QWORD *)(v5 + 2672) = 17;
  *(_BYTE *)(v5 + 2680) = 2;
  *(_QWORD *)(v5 + 2640) = "sleetFGParticleVelocity";
  *(_BYTE *)(v5 + 2632) = 2;
  *(_QWORD *)(v5 + 2648) = 23;
  *(_BYTE *)(v5 + 2656) = 2;
  *(_QWORD *)(v5 + 2616) = "sleetFGParticleCount";
  *(_QWORD *)(v5 + 2600) = 12;
  *(_BYTE *)(v5 + 2608) = 2;
  *(_QWORD *)(v5 + 2624) = 20;
  *(_BYTE *)(v5 + 1936) = 2;
  *(_QWORD *)(v5 + 2592) = "hailColorEnd";
  *(_QWORD *)(v5 + 2576) = 14;
  *(_BYTE *)(v5 + 2584) = 2;
  *(_QWORD *)(v5 + 2544) = "hailMinMaxSize";
  *(_BYTE *)(v5 + 2536) = 2;
  *(_QWORD *)(v5 + 2552) = 14;
  *(_BYTE *)(v5 + 2560) = 2;
  *(_QWORD *)(v5 + 2520) = "hailParticleVelocity";
  *(_QWORD *)(v5 + 2504) = 17;
  *(_BYTE *)(v5 + 2512) = 2;
  *(_QWORD *)(v5 + 2528) = 20;
  *(_QWORD *)(v5 + 1952) = 23;
  *(_QWORD *)(v5 + 2496) = "hailParticleCount";
  *(_QWORD *)(v5 + 2480) = 18;
  *(_BYTE *)(v5 + 2488) = 2;
  *(_QWORD *)(v5 + 2448) = "noiseRandomColorEnd";
  *(_BYTE *)(v5 + 2440) = 2;
  *(_QWORD *)(v5 + 2456) = 19;
  *(_BYTE *)(v5 + 2464) = 2;
  *(_QWORD *)(v5 + 2424) = "noiseRandomColorStart";
  *(_QWORD *)(v5 + 2408) = 15;
  *(_BYTE *)(v5 + 2416) = 2;
  *(_QWORD *)(v5 + 2432) = 21;
  *(_BYTE *)(v5 + 1960) = 2;
  *(_QWORD *)(v5 + 2400) = "noiseMinMaxSize";
  *(_QWORD *)(v5 + 2384) = 18;
  *(_BYTE *)(v5 + 2392) = 2;
  *(_QWORD *)(v5 + 2352) = "noiseParticleVelocity";
  *(_BYTE *)(v5 + 2344) = 2;
  *(_QWORD *)(v5 + 2360) = 21;
  *(_BYTE *)(v5 + 2368) = 2;
  *(_QWORD *)(v5 + 2328) = "sunRayStartPosition";
  *(_QWORD *)(v5 + 2312) = 11;
  *(_BYTE *)(v5 + 2320) = 2;
  *(_QWORD *)(v5 + 2336) = 19;
  *(_QWORD *)(v5 + 1976) = 22;
  *(_QWORD *)(v5 + 2304) = "sunRayAngle";
  *(_QWORD *)(v5 + 2288) = 8;
  *(_BYTE *)(v5 + 2296) = 2;
  *(_QWORD *)(v5 + 2256) = "lightAmbientIntensity";
  *(_BYTE *)(v5 + 2248) = 2;
  *(_QWORD *)(v5 + 2264) = 21;
  *(_BYTE *)(v5 + 2272) = 2;
  *(_QWORD *)(v5 + 2232) = "lightSunIntensity";
  *(_QWORD *)(v5 + 2216) = 18;
  *(_BYTE *)(v5 + 2224) = 2;
  *(_QWORD *)(v5 + 2240) = 17;
  *(_BYTE *)(v5 + 1984) = 2;
  *(_QWORD *)(v5 + 2208) = "lightFillIntensity";
  *(_QWORD *)(v5 + 2192) = 17;
  *(_BYTE *)(v5 + 2200) = 2;
  *(_QWORD *)(v5 + 2160) = "lightSunColor";
  *(_BYTE *)(v5 + 2152) = 2;
  *(_QWORD *)(v5 + 2168) = 13;
  *(_BYTE *)(v5 + 2176) = 2;
  *(_QWORD *)(v5 + 2136) = "lightFillColor";
  *(_QWORD *)(v5 + 2120) = 20;
  *(_BYTE *)(v5 + 2128) = 2;
  *(_QWORD *)(v5 + 2144) = 14;
  *(_QWORD *)(v5 + 2000) = 16;
  *(_QWORD *)(v5 + 2112) = "particleEmitterWidth";
  *(_QWORD *)(v5 + 2096) = 21;
  *(_BYTE *)(v5 + 2104) = 2;
  *(_QWORD *)(v5 + 2064) = "FallAngle";
  *(_QWORD *)(v5 + 2072) = 9;
  *(_BYTE *)(v5 + 2080) = 2;
  *(_QWORD *)(v5 + 2088) = "particleEmitterOffset";
  *(_BYTE *)(v5 + 2032) = 2;
  *(_QWORD *)(v5 + 2040) = "starCloudParticleCount";
  *(_QWORD *)(v5 + 2048) = 22;
  *(_BYTE *)(v5 + 2056) = 2;
  *(_BYTE *)(v5 + 2008) = 2;
  *(_QWORD *)(v5 + 2016) = "starTwinkleAmount";
  *(_QWORD *)(v5 + 2024) = 17;
  *(_QWORD *)(v5 + 3656) = 19;
  *(_BYTE *)(v5 + 3664) = 2;
  *(_QWORD *)(v5 + 3672) = "cloudFGColor";
  *(_QWORD *)(v5 + 3680) = 12;
  *(_BYTE *)(v5 + 3688) = 2;
  *(_QWORD *)(v5 + 3696) = "cloudFGBrightness";
  *(_QWORD *)(v5 + 3704) = 17;
  *(_BYTE *)(v5 + 3712) = 2;
  *(_QWORD *)(v5 + 3720) = "cloudFGVelocity";
  *(_QWORD *)(v5 + 3728) = 15;
  *(_BYTE *)(v5 + 3736) = 2;
  *(_QWORD *)(v5 + 3744) = "cloudFGScale";
  *(_QWORD *)(v5 + 3752) = 12;
  *(_BYTE *)(v5 + 3760) = 2;
  *(_QWORD *)(v5 + 3768) = "cloudFGOffsetY";
  *(_QWORD *)(v5 + 3776) = 14;
  *(_BYTE *)(v5 + 3784) = 2;
  *(_QWORD *)(v5 + 3792) = "cloudFGOffsetZ";
  *(_QWORD *)(v5 + 3800) = 14;
  *(_BYTE *)(v5 + 3808) = 2;
  *(_QWORD *)(v5 + 3816) = "cloudFGUseLighting";
  *(_QWORD *)(v5 + 3824) = 18;
  *(_BYTE *)(v5 + 3832) = 2;
  *(_QWORD *)(v5 + 3840) = "cloudFGParticleCount";
  *(_QWORD *)(v5 + 3848) = 20;
  *(_BYTE *)(v5 + 3856) = 2;
  *(_QWORD *)(v5 + 3864) = "cloudFGEmitterScale";
  *(_QWORD *)(v5 + 3872) = 19;
  *(_BYTE *)(v5 + 3880) = 2;
  *(_QWORD *)(v5 + 3888) = "cloudFFGColor";
  *(_QWORD *)(v5 + 3896) = 13;
  *(_BYTE *)(v5 + 3904) = 2;
  *(_QWORD *)(v5 + 3912) = "cloudFFGBrightness";
  *(_QWORD *)(v5 + 3920) = 18;
  *(_BYTE *)(v5 + 3928) = 2;
  *(_QWORD *)(v5 + 3936) = "cloudFFGVelocity";
  *(_QWORD *)(v5 + 3944) = 16;
  *(_BYTE *)(v5 + 3952) = 2;
  *(_QWORD *)(v5 + 3960) = "cloudFFGScale";
  *(_QWORD *)(v5 + 3968) = 13;
  *(_BYTE *)(v5 + 3976) = 2;
  *(_QWORD *)(v5 + 3984) = "cloudFFGOffsetY";
  *(_QWORD *)(v5 + 3992) = 15;
  *(_BYTE *)(v5 + 4000) = 2;
  *(_QWORD *)(v5 + 4008) = "cloudFFGOffsetZ";
  *(_QWORD *)(v5 + 4016) = 15;
  *(_BYTE *)(v5 + 4024) = 2;
  *(_QWORD *)(v5 + 4032) = "cloudFFGUseLighting";
  *(_QWORD *)(v5 + 4040) = 19;
  *(_BYTE *)(v5 + 4048) = 2;
  *(_QWORD *)(v5 + 4056) = "cloudFFGParticleCount";
  *(_QWORD *)(v5 + 4064) = 21;
  *(_BYTE *)(v5 + 4072) = 2;
  *(_QWORD *)(v5 + 4080) = "cloudFFGEmitterScale";
  *(_QWORD *)(v5 + 4088) = 20;
  *(_BYTE *)(v5 + 4096) = 2;
  *(_QWORD *)(v5 + 4104) = "cloudBlanketColor";
  *(_QWORD *)(v5 + 4112) = 17;
  *(_BYTE *)(v5 + 4120) = 2;
  *(_QWORD *)(v5 + 4128) = "cloudBlanketBrightness";
  *(_QWORD *)(v5 + 4136) = 22;
  *(_BYTE *)(v5 + 4144) = 2;
  *(_QWORD *)(v5 + 4152) = "cloudBlanketVelocity";
  *(_QWORD *)(v5 + 4160) = 20;
  *(_BYTE *)(v5 + 4168) = 2;
  *(_QWORD *)(v5 + 4176) = "cloudBlanketScale";
  *(_QWORD *)(v5 + 4184) = 17;
  *(_BYTE *)(v5 + 4192) = 2;
  *(_QWORD *)(v5 + 4200) = "cloudBlanketOffsetY";
  *(_QWORD *)(v5 + 4208) = 19;
  *(_BYTE *)(v5 + 4216) = 2;
  *(_QWORD *)(v5 + 4224) = "cloudBlanketOffsetZ";
  *(_QWORD *)(v5 + 4232) = 19;
  *(_BYTE *)(v5 + 4240) = 2;
  *(_QWORD *)(v5 + 4248) = "cloudBlanketUseLighting";
  *(_QWORD *)(v5 + 4256) = 23;
  *(_BYTE *)(v5 + 4264) = 2;
  *(_QWORD *)(v5 + 4272) = "foregroundParticlesSize";
  *(_QWORD *)(v5 + 4280) = 23;
  *(_BYTE *)(v5 + 4288) = 2;
  *(_QWORD *)(v5 + 4296) = "foregroundParticlesParticleVelocity";
  *(_QWORD *)(v5 + 4304) = 35;
  *(_BYTE *)(v5 + 4312) = 2;
  *(_QWORD *)(v5 + 4320) = "foregroundParticlesParticleCount";
  *(_QWORD *)(v5 + 4328) = 32;
  *(_BYTE *)(v5 + 4336) = 2;
  *(_QWORD *)(v5 + 4344) = "foregroundParticlesSpread";
  *(_QWORD *)(v5 + 4352) = 25;
  *(_BYTE *)(v5 + 4360) = 2;
  *(_QWORD *)(v5 + 4368) = "foregroundParticlesRandomColorStart";
  *(_QWORD *)(v5 + 4376) = 35;
  *(_BYTE *)(v5 + 4384) = 2;
  *(_QWORD *)(v5 + 4392) = "foregroundParticlesRandomColorEnd";
  *(_QWORD *)(v5 + 4400) = 33;
  *(_BYTE *)(v5 + 4408) = 2;
  *(_QWORD *)(v5 + 4416) = "foregroundParticlesNoiseFieldIntensity";
  *(_QWORD *)(v5 + 4424) = 38;
  *(_BYTE *)(v5 + 4432) = 2;
  *(_QWORD *)(v5 + 4440) = "foregroundParticlesNoiseFieldScale";
  *(_QWORD *)(v5 + 4448) = 34;
  *(_BYTE *)(v5 + 4456) = 2;
  *(_QWORD *)(v5 + 4464) = "foregroundParticlesLife";
  *(_QWORD *)(v5 + 4472) = 23;
  *(_BYTE *)(v5 + 4480) = 2;
  *(_QWORD *)(v5 + 4488) = "foregroundParticlesAngleVelocity";
  *(_QWORD *)(v5 + 4496) = 32;
  *(_BYTE *)(v5 + 4504) = 2;
  *(_QWORD *)(v5 + 4512) = "foregroundParticlesImage";
  *(_QWORD *)(v5 + 4520) = 24;
  *(_BYTE *)(v5 + 4528) = 2;
  *(_QWORD *)(v5 + 4536) = "sunFlareOverAllScale";
  *(_QWORD *)(v5 + 4544) = 20;
  *(_BYTE *)(v5 + 4552) = 2;
  *(_QWORD *)(v5 + 4560) = "sunIrisScaleFrequency";
  *(_QWORD *)(v5 + 4568) = 21;
  *(_BYTE *)(v5 + 4576) = 2;
  *(_QWORD *)(v5 + 4584) = "sunIrisScaleAmplitude";
  *(_QWORD *)(v5 + 4592) = 21;
  *(_BYTE *)(v5 + 4600) = 2;
  *(_QWORD *)(v5 + 4608) = "sunIrisRotationFrequency";
  *(_QWORD *)(v5 + 4616) = 24;
  *(_BYTE *)(v5 + 4624) = 2;
  *(_QWORD *)(v5 + 4632) = "sunIrisRotationAmplitude";
  *(_QWORD *)(v5 + 4640) = 24;
  *(_BYTE *)(v5 + 4648) = 2;
  *(_QWORD *)(v5 + 4656) = "sunIrisLength";
  *(_QWORD *)(v5 + 4664) = 13;
  *(_BYTE *)(v5 + 4672) = 2;
  *(_QWORD *)(v5 + 4680) = "sunIrisParticleCount";
  *(_QWORD *)(v5 + 4688) = 20;
  *(_BYTE *)(v5 + 4696) = 2;
  *(_QWORD *)(v5 + 4704) = "sunIrisOpacity";
  *(_QWORD *)(v5 + 4712) = 14;
  *(_BYTE *)(v5 + 4720) = 2;
  *(_QWORD *)(v5 + 4728) = "sunIrisSize";
  *(_QWORD *)(v5 + 4736) = 11;
  *(_BYTE *)(v5 + 4744) = 2;
  *(_QWORD *)(v5 + 4752) = "sunSpikeBallScale";
  *(_QWORD *)(v5 + 4760) = 17;
  *(_BYTE *)(v5 + 4768) = 2;
  *(_QWORD *)(v5 + 4776) = "sunSpikeBallColor";
  *(_QWORD *)(v5 + 4784) = 17;
  *(_BYTE *)(v5 + 4792) = 2;
  *(_QWORD *)(v5 + 4800) = "sunSpikeBallAngle";
  *(_QWORD *)(v5 + 4808) = 17;
  *(_BYTE *)(v5 + 4816) = 2;
  *(_QWORD *)(v5 + 4824) = "sunSpikeBallRotationFrequency";
  *(_QWORD *)(v5 + 4832) = 29;
  *(_BYTE *)(v5 + 4840) = 2;
  *(_QWORD *)(v5 + 4848) = "sunSpikeBallRotationAmplitude";
  *(_QWORD *)(v5 + 4856) = 29;
  *(_BYTE *)(v5 + 4864) = 2;
  *(_QWORD *)(v5 + 4872) = "sunSpikeBallImage";
  *(_QWORD *)(v5 + 4880) = 17;
  *(_BYTE *)(v5 + 4888) = 2;
  *(_QWORD *)(v5 + 4896) = "sunRaysSpread";
  *(_QWORD *)(v5 + 4904) = 13;
  *(_BYTE *)(v5 + 4912) = 2;
  *(_QWORD *)(v5 + 4920) = "sunRaysColor";
  *(_QWORD *)(v5 + 4928) = 12;
  *(_BYTE *)(v5 + 4936) = 2;
  *(_QWORD *)(v5 + 4944) = "sunRaysParticleCount";
  *(_QWORD *)(v5 + 4952) = 20;
  *(_BYTE *)(v5 + 4960) = 2;
  *(_QWORD *)(v5 + 4968) = "sunRaysLength";
  *(_QWORD *)(v5 + 4976) = 13;
  *(_BYTE *)(v5 + 4984) = 2;
  *(_QWORD *)(v5 + 4992) = "sunRaysCenterOffset";
  *(_QWORD *)(v5 + 5000) = 19;
  *(_BYTE *)(v5 + 5008) = 2;
  *(_QWORD *)(v5 + 5016) = "sunRainbowScale";
  *(_QWORD *)(v5 + 5024) = 15;
  *(_BYTE *)(v5 + 5032) = 2;
  *(_QWORD *)(v5 + 5040) = "sunRainbowOpacity";
  *(_QWORD *)(v5 + 5048) = 17;
  *(_BYTE *)(v5 + 5056) = 2;
  *(_QWORD *)(v5 + 5064) = "sunRainbowSunPathOpacity";
  *(_QWORD *)(v5 + 5072) = 24;
  *(_BYTE *)(v5 + 5080) = 2;
  *(_QWORD *)(v5 + 5088) = "rainLife";
  *(_QWORD *)(v5 + 5096) = 8;
  *(_BYTE *)(v5 + 5104) = 2;
  *(_QWORD *)(v5 + 5112) = "snowLife";
  *(_QWORD *)(v5 + 5120) = 8;
  *(_BYTE *)(v5 + 5128) = 2;
  *(_QWORD *)(v5 + 5136) = "sleetLife";
  *(_QWORD *)(v5 + 5144) = 9;
  *(_BYTE *)(v5 + 5152) = 2;
  *(_QWORD *)(v5 + 5160) = "hailLife";
  *(_QWORD *)(v5 + 5168) = 8;
  *(_BYTE *)(v5 + 5176) = 2;
  *(_QWORD *)(v5 + 5184) = "noiseLife";
  *(_QWORD *)(v5 + 5192) = 9;
  *(_BYTE *)(v5 + 5200) = 2;
  *(_QWORD *)(v5 + 5208) = "starCloudsOpacity";
  *(_QWORD *)(v5 + 5216) = 17;
  *(_BYTE *)(v5 + 5224) = 2;
  *(_QWORD *)(v5 + 5232) = "scaleFactor";
  *(_QWORD *)(v5 + 5240) = 11;
  *(_BYTE *)(v5 + 5248) = 2;
  *(_QWORD *)(v5 + 5256) = "colliderACoordinates";
  *(_QWORD *)(v5 + 5264) = 20;
  *(_BYTE *)(v5 + 5272) = 2;
  *(_QWORD *)(v5 + 5280) = "colliderBCoordinates";
  *(_QWORD *)(v5 + 5288) = 20;
  *(_BYTE *)(v5 + 5296) = 2;
  *(_QWORD *)(v5 + 5304) = "colliderCCoordinates";
  *(_QWORD *)(v5 + 5312) = 20;
  *(_BYTE *)(v5 + 5320) = 2;
  *(_QWORD *)(v5 + 5328) = "colliderDCoordinates";
  *(_QWORD *)(v5 + 5336) = 20;
  *(_BYTE *)(v5 + 5344) = 2;
  *(_QWORD *)(v5 + 5352) = "colliderECoordinates";
  *(_QWORD *)(v5 + 5360) = 20;
  *(_BYTE *)(v5 + 5368) = 2;
  *(_QWORD *)(v5 + 5376) = "colliderFCoordinates";
  *(_QWORD *)(v5 + 5384) = 20;
  *(_BYTE *)(v5 + 5392) = 2;
  *(_QWORD *)(v5 + 5400) = "colliderCornerRadius";
  *(_QWORD *)(v5 + 5408) = 20;
  *(_BYTE *)(v5 + 5416) = 2;
  *(_QWORD *)(v5 + 5424) = "collisionSize";
  *(_QWORD *)(v5 + 5432) = 13;
  *(_BYTE *)(v5 + 5440) = 2;
  *(_QWORD *)(v5 + 5448) = "collisionLife";
  *(_QWORD *)(v5 + 5456) = 13;
  *(_BYTE *)(v5 + 5464) = 2;
  *(_QWORD *)(v5 + 5472) = "collisionVelocity";
  *(_QWORD *)(v5 + 5480) = 17;
  *(_BYTE *)(v5 + 5488) = 2;
  *(_QWORD *)(v5 + 5496) = "collisionGravity";
  *(_QWORD *)(v5 + 5504) = 16;
  *(_BYTE *)(v5 + 5512) = 2;
  *(_QWORD *)(v5 + 5520) = "collisionRandomColorStart";
  *(_QWORD *)(v5 + 5528) = 25;
  *(_BYTE *)(v5 + 5536) = 2;
  *(_QWORD *)(v5 + 5544) = "collisionRandomColorEnd";
  *(_QWORD *)(v5 + 5552) = 23;
  *(_BYTE *)(v5 + 5560) = 2;
  *(_QWORD *)(v5 + 5568) = "collisionOccursProbability";
  *(_QWORD *)(v5 + 5576) = 26;
  *(_BYTE *)(v5 + 5584) = 2;
  *(_QWORD *)(v5 + 5592) = "SunIrisSeed";
  *(_QWORD *)(v5 + 5600) = 11;
  *(_BYTE *)(v5 + 5608) = 2;
  *(_QWORD *)(v5 + 5616) = "CloudBBGSeed";
  *(_QWORD *)(v5 + 5624) = 12;
  *(_BYTE *)(v5 + 5632) = 2;
  *(_QWORD *)(v5 + 5640) = "CloudBGSeed";
  *(_QWORD *)(v5 + 5648) = 11;
  *(_BYTE *)(v5 + 5656) = 2;
  *(_QWORD *)(v5 + 5664) = "CloudFGSeed";
  *(_QWORD *)(v5 + 5672) = 11;
  *(_BYTE *)(v5 + 5680) = 2;
  *(_QWORD *)(v5 + 5688) = "CloudFFGSeed";
  *(_QWORD *)(v5 + 5696) = 12;
  *(_BYTE *)(v5 + 5704) = 2;
  GEOLocationCoordinate2DMake(v4, v6);
  v7 = sub_1B0008E60();
  swift_bridgeObjectRelease();
  result.value = swift_bridgeObjectRelease();
  if (v7 < 0x80)
    goto LABEL_4;
  if ((v7 & 0xFFFFFFFFFFFFFFC0) == 0x80)
  {
    LOBYTE(v7) = v7 | 0x80;
LABEL_4:
    v9 = v7;
    goto LABEL_5;
  }
  v10 = v7 - 192;
  v9 = -36;
  LOBYTE(v7) = -64;
  switch(v10)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      LOBYTE(v7) = -63;
      goto LABEL_4;
    case 2uLL:
      LOBYTE(v7) = -62;
      goto LABEL_4;
    case 3uLL:
      LOBYTE(v7) = -61;
      goto LABEL_4;
    case 4uLL:
      LOBYTE(v7) = -60;
      goto LABEL_4;
    case 5uLL:
      LOBYTE(v7) = -59;
      goto LABEL_4;
    case 6uLL:
      LOBYTE(v7) = -58;
      goto LABEL_4;
    case 7uLL:
      LOBYTE(v7) = -57;
      goto LABEL_4;
    case 8uLL:
      LOBYTE(v7) = -56;
      goto LABEL_4;
    case 9uLL:
      LOBYTE(v7) = -55;
      goto LABEL_4;
    case 0xAuLL:
      LOBYTE(v7) = -54;
      goto LABEL_4;
    case 0xBuLL:
      LOBYTE(v7) = -53;
      goto LABEL_4;
    case 0xCuLL:
      LOBYTE(v7) = -52;
      goto LABEL_4;
    case 0xDuLL:
      LOBYTE(v7) = -51;
      goto LABEL_4;
    case 0xEuLL:
      LOBYTE(v7) = -50;
      goto LABEL_4;
    case 0xFuLL:
      LOBYTE(v7) = -49;
      goto LABEL_4;
    case 0x10uLL:
      LOBYTE(v7) = -48;
      goto LABEL_4;
    case 0x11uLL:
      LOBYTE(v7) = -47;
      goto LABEL_4;
    case 0x12uLL:
      LOBYTE(v7) = -46;
      goto LABEL_4;
    case 0x13uLL:
      LOBYTE(v7) = -45;
      goto LABEL_4;
    case 0x14uLL:
      LOBYTE(v7) = -44;
      goto LABEL_4;
    case 0x15uLL:
      LOBYTE(v7) = -43;
      goto LABEL_4;
    case 0x16uLL:
      LOBYTE(v7) = -42;
      goto LABEL_4;
    case 0x17uLL:
      LOBYTE(v7) = -41;
      goto LABEL_4;
    case 0x18uLL:
      LOBYTE(v7) = -40;
      goto LABEL_4;
    case 0x19uLL:
      LOBYTE(v7) = -39;
      goto LABEL_4;
    case 0x1AuLL:
      LOBYTE(v7) = -38;
      goto LABEL_4;
    case 0x1BuLL:
      LOBYTE(v7) = -37;
      goto LABEL_4;
    case 0x1CuLL:
      break;
    case 0x1DuLL:
      v9 = -35;
      break;
    case 0x1EuLL:
      v9 = -34;
      break;
    case 0x1FuLL:
      v9 = -33;
      break;
    case 0x20uLL:
      v9 = -32;
      break;
    case 0x21uLL:
      v9 = -31;
      break;
    case 0x22uLL:
      v9 = -30;
      break;
    case 0x23uLL:
      v9 = -29;
      break;
    case 0x24uLL:
      v9 = -28;
      break;
    case 0x25uLL:
      v9 = -27;
      break;
    case 0x26uLL:
      v9 = -26;
      break;
    case 0x27uLL:
      v9 = -25;
      break;
    case 0x28uLL:
      v9 = -24;
      break;
    case 0x29uLL:
      v9 = -23;
      break;
    case 0x2AuLL:
      v9 = -22;
      break;
    case 0x2BuLL:
      v9 = -21;
      break;
    case 0x2CuLL:
      v9 = -20;
      break;
    case 0x2DuLL:
      v9 = -19;
      break;
    default:
      v9 = -18;
      break;
  }
LABEL_5:
  *v2 = v9;
  return result;
}

uint64_t sub_1AFDEFF24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AFC0BB1C(*a1, *a2);
}

void sub_1AFDEFF30()
{
  unsigned __int8 *v0;

  sub_1AFD77580(*v0);
}

uint64_t sub_1AFDEFF38(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AFDF0580(a1, *v1);
}

void sub_1AFDEFF40(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AFD77774(a1, *v1);
}

WeatherUI::BoundPropertyName_optional sub_1AFDEFF48(Swift::String *a1)
{
  return BoundPropertyName.init(rawValue:)(*a1);
}

uint64_t sub_1AFDEFF54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BoundPropertyName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1AFDEFF7C()
{
  unint64_t result;

  result = qword_1EEE74590;
  if (!qword_1EEE74590)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for BoundEntity, &type metadata for BoundEntity);
    atomic_store(result, (unint64_t *)&qword_1EEE74590);
  }
  return result;
}

unint64_t sub_1AFDEFFBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE74598;
  if (!qword_1EEE74598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE745A0);
    result = MEMORY[0x1B5E03BF4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE74598);
  }
  return result;
}

unint64_t sub_1AFDF0004()
{
  unint64_t result;

  result = qword_1EEE745A8;
  if (!qword_1EEE745A8)
  {
    result = MEMORY[0x1B5E03BF4](&protocol conformance descriptor for BoundPropertyName, &type metadata for BoundPropertyName);
    atomic_store(result, (unint64_t *)&qword_1EEE745A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BoundEntity(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD2)
  {
    if (a2 + 46 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 46) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 47;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2F;
  v5 = v6 - 47;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BoundEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 46 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 46) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD1)
    return ((uint64_t (*)(void))((char *)&loc_1AFDF0114 + 4 * byte_1B0039BDC[v4]))();
  *a1 = a2 + 46;
  return ((uint64_t (*)(void))((char *)sub_1AFDF0148 + 4 * byte_1B0039BD7[v4]))();
}

uint64_t sub_1AFDF0148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDF0150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFDF0158);
  return result;
}

uint64_t sub_1AFDF0164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFDF016CLL);
  *(_BYTE *)result = a2 + 46;
  return result;
}

uint64_t sub_1AFDF0170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDF0178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BoundEntity()
{
  return &type metadata for BoundEntity;
}

uint64_t getEnumTagSinglePayload for BoundPropertyName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x13)
  {
    if (a2 + 237 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 237) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 238;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xEE;
  v5 = v6 - 238;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BoundPropertyName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 237 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 237) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x13)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x12)
    return ((uint64_t (*)(void))((char *)&loc_1AFDF0268 + 4 * byte_1B0039BE6[v4]))();
  *a1 = a2 - 19;
  return ((uint64_t (*)(void))((char *)sub_1AFDF029C + 4 * byte_1B0039BE1[v4]))();
}

uint64_t sub_1AFDF029C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDF02A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AFDF02ACLL);
  return result;
}

uint64_t sub_1AFDF02B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AFDF02C0);
  *(_BYTE *)result = a2 - 19;
  return result;
}

uint64_t sub_1AFDF02C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AFDF02CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BoundPropertyName()
{
  return &type metadata for BoundPropertyName;
}

uint64_t sub_1AFDF02E8()
{
  return sub_1B0008614();
}

uint64_t sub_1AFDF0304()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1AFDF0350()
{
  sub_1B0008614();
  return swift_bridgeObjectRelease();
}

void sub_1AFDF038C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AFDF03CC()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

void sub_1AFDF0480(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AFDF04C0()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1AFDF0520(uint64_t a1, uint64_t a2)
{
  return sub_1AFDF0598(a1, a2, (void (*)(void))SkyGradientTableType.rawValue.getter);
}

uint64_t sub_1AFDF052C()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1AFDF0580(uint64_t a1, uint64_t a2)
{
  return sub_1AFDF0598(a1, a2, (void (*)(void))BoundPropertyName.rawValue.getter);
}

uint64_t sub_1AFDF058C(uint64_t a1, uint64_t a2)
{
  return sub_1AFDF0598(a1, a2, (void (*)(void))BoundEntity.rawValue.getter);
}

uint64_t sub_1AFDF0598(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  OUTLINED_FUNCTION_89_5();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AFDF05D0()
{
  sub_1B0008614();
  return swift_bridgeObjectRelease();
}

void sub_1AFDF05FC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AFDF0634()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1AFDF06FC()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

void sub_1AFDF073C()
{
  sub_1B0009010();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFDF0760()
{
  OUTLINED_FUNCTION_82_4();
  return OUTLINED_FUNCTION_37_0();
}

double static WeatherConditionBackgroundConfig.currentVersion.getter()
{
  return 2.7;
}

double WeatherConditionBackgroundConfig.version.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void WeatherConditionBackgroundConfig.version.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.version.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WeatherConditionBackgroundConfig.targetSizeClass.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_118_2(a1);
}

_BYTE *WeatherConditionBackgroundConfig.targetSizeClass.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.targetSizeClass.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void WeatherConditionBackgroundConfig.scaleFactor.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.scaleFactor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.preferredFramesPerSecond.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t WeatherConditionBackgroundConfig.preferredFramesPerSecond.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.preferredFramesPerSecond.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cameraPosition.getter()
{
  __n128 *v0;

  return v0[2];
}

void WeatherConditionBackgroundConfig.cameraPosition.setter(__n128 a1)
{
  __n128 *v1;

  v1[2] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cameraPosition.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.customListCameraPosition.getter()
{
  __n128 *v0;

  return v0[3];
}

void WeatherConditionBackgroundConfig.customListCameraPosition.setter(__n128 a1)
{
  __n128 *v1;

  v1[3] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.customListCameraPosition.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cameraFocalLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 64);
}

void WeatherConditionBackgroundConfig.cameraFocalLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 64) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cameraFocalLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.customListCameraFocalLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 68);
}

void WeatherConditionBackgroundConfig.customListCameraFocalLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 68) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.customListCameraFocalLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.customListFilmOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void WeatherConditionBackgroundConfig.customListFilmOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.customListFilmOffset.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cameraOrthographicScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 80);
}

void WeatherConditionBackgroundConfig.cameraOrthographicScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 80) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cameraOrthographicScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.bloomIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 84);
}

void WeatherConditionBackgroundConfig.bloomIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 84) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.bloomIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.particleFallAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 88);
}

void WeatherConditionBackgroundConfig.particleFallAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 88) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.particleFallAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.particleEmitterOffset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 92);
}

void WeatherConditionBackgroundConfig.particleEmitterOffset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 92) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.particleEmitterOffset.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.particleEmitterWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 96);
}

void WeatherConditionBackgroundConfig.particleEmitterWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 96) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.particleEmitterWidth.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 100);
}

void WeatherConditionBackgroundConfig.rainLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 100) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainFGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 104);
}

void WeatherConditionBackgroundConfig.rainFGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 104) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainFGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 108);
}

void WeatherConditionBackgroundConfig.rainFGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 108) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.rainFGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void WeatherConditionBackgroundConfig.rainFGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.rainFGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[8];
}

void WeatherConditionBackgroundConfig.rainFGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[8] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.rainFGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[9];
}

void WeatherConditionBackgroundConfig.rainFGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[9] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainFGSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 160);
}

void WeatherConditionBackgroundConfig.rainFGSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 160) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainFGNoiseFieldIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 164);
}

void WeatherConditionBackgroundConfig.rainFGNoiseFieldIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 164) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGNoiseFieldIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainFGNoiseFieldScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 168);
}

void WeatherConditionBackgroundConfig.rainFGNoiseFieldScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 168) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainFGNoiseFieldScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainBGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 172);
}

void WeatherConditionBackgroundConfig.rainBGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 172) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainBGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 176);
}

void WeatherConditionBackgroundConfig.rainBGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 176) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.rainBGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 184);
}

void WeatherConditionBackgroundConfig.rainBGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 184) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.rainBGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[12];
}

void WeatherConditionBackgroundConfig.rainBGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[12] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.rainBGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[13];
}

void WeatherConditionBackgroundConfig.rainBGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[13] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainBGSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 224);
}

void WeatherConditionBackgroundConfig.rainBGSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 224) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainBGNoiseFieldIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 228);
}

void WeatherConditionBackgroundConfig.rainBGNoiseFieldIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 228) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGNoiseFieldIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.rainBGNoiseFieldScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 232);
}

void WeatherConditionBackgroundConfig.rainBGNoiseFieldScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 232) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.rainBGNoiseFieldScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 236);
}

void WeatherConditionBackgroundConfig.snowLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 236) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowBGSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 240);
}

void WeatherConditionBackgroundConfig.snowBGSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 240) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowFGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 244);
}

void WeatherConditionBackgroundConfig.snowFGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 244) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowFGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 248);
}

void WeatherConditionBackgroundConfig.snowFGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 248) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.snowFGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 256);
}

void WeatherConditionBackgroundConfig.snowFGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 256) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowFGNoiseFieldIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 264);
}

void WeatherConditionBackgroundConfig.snowFGNoiseFieldIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 264) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGNoiseFieldIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowFGNoiseFieldScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 268);
}

void WeatherConditionBackgroundConfig.snowFGNoiseFieldScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 268) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGNoiseFieldScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowFGSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 272);
}

void WeatherConditionBackgroundConfig.snowFGSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 272) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.snowFGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[18];
}

void WeatherConditionBackgroundConfig.snowFGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[18] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.snowFGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[19];
}

void WeatherConditionBackgroundConfig.snowFGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[19] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowFGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowBGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 320);
}

void WeatherConditionBackgroundConfig.snowBGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 320) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowBGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 324);
}

void WeatherConditionBackgroundConfig.snowBGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 324) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.snowBGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 328);
}

void WeatherConditionBackgroundConfig.snowBGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 328) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowBGNoiseFieldIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 336);
}

void WeatherConditionBackgroundConfig.snowBGNoiseFieldIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 336) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGNoiseFieldIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.snowBGNoiseFieldScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 340);
}

void WeatherConditionBackgroundConfig.snowBGNoiseFieldScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 340) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGNoiseFieldScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.snowBGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[22];
}

void WeatherConditionBackgroundConfig.snowBGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[22] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.snowBGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[23];
}

void WeatherConditionBackgroundConfig.snowBGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[23] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.snowBGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.useSnowFast.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 384);
}

uint64_t WeatherConditionBackgroundConfig.useSnowFast.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 384) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.useSnowFast.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 388);
}

void WeatherConditionBackgroundConfig.starOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 388) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starOpacity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 392);
}

void WeatherConditionBackgroundConfig.starSpeed.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 392) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starSpeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.starParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 400);
}

uint64_t WeatherConditionBackgroundConfig.starParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 400) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.starParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.starBrightParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 408);
}

uint64_t WeatherConditionBackgroundConfig.starBrightParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 408) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.starBrightParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starBrightTwinkleAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 416);
}

void WeatherConditionBackgroundConfig.starBrightTwinkleAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 416) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starBrightTwinkleAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starBrightTwinkleSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 420);
}

void WeatherConditionBackgroundConfig.starBrightTwinkleSpeed.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 420) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starBrightTwinkleSpeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.starCloudParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 424);
}

uint64_t WeatherConditionBackgroundConfig.starCloudParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 424) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.starCloudParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starCloudsOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 432);
}

void WeatherConditionBackgroundConfig.starCloudsOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 432) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starCloudsOpacity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.hailLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 436);
}

void WeatherConditionBackgroundConfig.hailLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 436) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.hailParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 440);
}

void WeatherConditionBackgroundConfig.hailParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 440) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.hailParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 444);
}

void WeatherConditionBackgroundConfig.hailParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 444) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.hailParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void WeatherConditionBackgroundConfig.hailParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.hailRandomColorStart.getter()
{
  __n128 *v0;

  return v0[29];
}

void WeatherConditionBackgroundConfig.hailRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[29] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.hailRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[30];
}

void WeatherConditionBackgroundConfig.hailRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[30] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.hailRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sleetLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 496);
}

void WeatherConditionBackgroundConfig.sleetLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 496) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sleetFGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 500);
}

void WeatherConditionBackgroundConfig.sleetFGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 500) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetFGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sleetFGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 504);
}

void WeatherConditionBackgroundConfig.sleetFGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 504) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetFGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.sleetFGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void WeatherConditionBackgroundConfig.sleetFGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetFGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sleetFGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[33];
}

void WeatherConditionBackgroundConfig.sleetFGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[33] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetFGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sleetFGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[34];
}

void WeatherConditionBackgroundConfig.sleetFGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[34] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetFGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sleetBGParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 560);
}

void WeatherConditionBackgroundConfig.sleetBGParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 560) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetBGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sleetBGParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 564);
}

void WeatherConditionBackgroundConfig.sleetBGParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 564) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetBGParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.sleetBGParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 568);
}

void WeatherConditionBackgroundConfig.sleetBGParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 568) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetBGParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sleetBGRandomColorStart.getter()
{
  __n128 *v0;

  return v0[36];
}

void WeatherConditionBackgroundConfig.sleetBGRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[36] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetBGRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sleetBGRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[37];
}

void WeatherConditionBackgroundConfig.sleetBGRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[37] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sleetBGRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.windParticleAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 608);
}

void WeatherConditionBackgroundConfig.windParticleAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 608) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windParticleAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.windParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 612);
}

void WeatherConditionBackgroundConfig.windParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 612) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.windRandomColorStart.getter()
{
  __n128 *v0;

  return v0[39];
}

void WeatherConditionBackgroundConfig.windRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[39] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.windRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[40];
}

void WeatherConditionBackgroundConfig.windRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[40] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.windXRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 656);
}

void WeatherConditionBackgroundConfig.windXRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 656) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windXRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.windYRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 664);
}

void WeatherConditionBackgroundConfig.windYRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 664) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windYRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.windSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 672);
}

void WeatherConditionBackgroundConfig.windSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 672) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.windSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudBBGColor.getter()
{
  __n128 *v0;

  return v0[43];
}

void WeatherConditionBackgroundConfig.cloudBBGColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[43] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBBGBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 704);
}

void WeatherConditionBackgroundConfig.cloudBBGBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 704) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudBBGVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 712);
}

void WeatherConditionBackgroundConfig.cloudBBGVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 712) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudBBGScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 720);
}

void WeatherConditionBackgroundConfig.cloudBBGScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 720) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBBGOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 728);
}

void WeatherConditionBackgroundConfig.cloudBBGOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 728) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBBGOffsetZ.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 732);
}

void WeatherConditionBackgroundConfig.cloudBBGOffsetZ.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 732) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGOffsetZ.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGUseLighting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 736);
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGUseLighting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 736) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGUseLighting.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 744);
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 744) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudBBGEmitterScale.getter()
{
  __n128 *v0;

  return v0[47];
}

void WeatherConditionBackgroundConfig.cloudBBGEmitterScale.setter(__n128 a1)
{
  __n128 *v1;

  v1[47] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGEmitterScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGAssetType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_55_4(*(_QWORD *)(v1 + 776), a1);
  return OUTLINED_FUNCTION_43_11();
}

void WeatherConditionBackgroundConfig.cloudBBGAssetType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  OUTLINED_FUNCTION_57_8(a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  *(_OWORD *)(v1 + 768) = v4;
  *(_OWORD *)(v1 + 784) = v3;
  *(_QWORD *)(v1 + 800) = v2;
  OUTLINED_FUNCTION_6();
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGAssetType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudBGColor.getter()
{
  __n128 *v0;

  return v0[51];
}

void WeatherConditionBackgroundConfig.cloudBGColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[51] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBGBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 832);
}

void WeatherConditionBackgroundConfig.cloudBGBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 832) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudBGVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 840);
}

void WeatherConditionBackgroundConfig.cloudBGVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 840) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudBGScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 848);
}

void WeatherConditionBackgroundConfig.cloudBGScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 848) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBGOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 856);
}

void WeatherConditionBackgroundConfig.cloudBGOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 856) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBGOffsetZ.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 860);
}

void WeatherConditionBackgroundConfig.cloudBGOffsetZ.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 860) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGOffsetZ.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBGUseLighting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 864);
}

uint64_t WeatherConditionBackgroundConfig.cloudBGUseLighting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 864) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGUseLighting.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBGParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 872);
}

uint64_t WeatherConditionBackgroundConfig.cloudBGParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 872) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudBGEmitterScale.getter()
{
  __n128 *v0;

  return v0[55];
}

void WeatherConditionBackgroundConfig.cloudBGEmitterScale.setter(__n128 a1)
{
  __n128 *v1;

  v1[55] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGEmitterScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBGAssetType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_55_4(*(_QWORD *)(v1 + 904), a1);
  return OUTLINED_FUNCTION_43_11();
}

void WeatherConditionBackgroundConfig.cloudBGAssetType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  OUTLINED_FUNCTION_57_8(a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  *(_OWORD *)(v1 + 896) = v4;
  *(_OWORD *)(v1 + 912) = v3;
  *(_QWORD *)(v1 + 928) = v2;
  OUTLINED_FUNCTION_6();
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGAssetType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudFGColor.getter()
{
  __n128 *v0;

  return v0[59];
}

void WeatherConditionBackgroundConfig.cloudFGColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[59] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFGBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 960);
}

void WeatherConditionBackgroundConfig.cloudFGBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 960) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudFGVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 968);
}

void WeatherConditionBackgroundConfig.cloudFGVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 968) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudFGScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 976);
}

void WeatherConditionBackgroundConfig.cloudFGScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 976) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFGOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 984);
}

void WeatherConditionBackgroundConfig.cloudFGOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 984) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFGOffsetZ.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 988);
}

void WeatherConditionBackgroundConfig.cloudFGOffsetZ.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 988) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGOffsetZ.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFGUseLighting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 992);
}

uint64_t WeatherConditionBackgroundConfig.cloudFGUseLighting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 992) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGUseLighting.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFGParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1000);
}

uint64_t WeatherConditionBackgroundConfig.cloudFGParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1000) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudFGEmitterScale.getter()
{
  __n128 *v0;

  return v0[63];
}

void WeatherConditionBackgroundConfig.cloudFGEmitterScale.setter(__n128 a1)
{
  __n128 *v1;

  v1[63] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGEmitterScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFGAssetType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_55_4(*(_QWORD *)(v1 + 1032), a1);
  return OUTLINED_FUNCTION_43_11();
}

__n128 WeatherConditionBackgroundConfig.cloudFGAssetType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  OUTLINED_FUNCTION_57_8(a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  *(_OWORD *)(v1 + 1024) = v5;
  *(_OWORD *)(v1 + 1040) = v4;
  *(_QWORD *)(v1 + 1056) = v2;
  OUTLINED_FUNCTION_6();
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGAssetType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudFFGColor.getter()
{
  __n128 *v0;

  return v0[67];
}

void WeatherConditionBackgroundConfig.cloudFFGColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[67] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFFGBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1088);
}

void WeatherConditionBackgroundConfig.cloudFFGBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1088) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudFFGVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1096);
}

void WeatherConditionBackgroundConfig.cloudFFGVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1096) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.cloudFFGScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1104);
}

void WeatherConditionBackgroundConfig.cloudFFGScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1104) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFFGOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1112);
}

void WeatherConditionBackgroundConfig.cloudFFGOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1112) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudFFGOffsetZ.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1116);
}

void WeatherConditionBackgroundConfig.cloudFFGOffsetZ.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1116) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGOffsetZ.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGUseLighting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1120);
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGUseLighting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1120) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGUseLighting.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1128);
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1128) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudFFGEmitterScale.getter()
{
  __n128 *v0;

  return v0[71];
}

void WeatherConditionBackgroundConfig.cloudFFGEmitterScale.setter(__n128 a1)
{
  __n128 *v1;

  v1[71] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGEmitterScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGAssetType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_55_4(*(_QWORD *)(v1 + 1160), a1);
  return OUTLINED_FUNCTION_43_11();
}

__n128 WeatherConditionBackgroundConfig.cloudFFGAssetType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  OUTLINED_FUNCTION_57_8(a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  *(_OWORD *)(v1 + 1152) = v5;
  *(_OWORD *)(v1 + 1168) = v4;
  *(_QWORD *)(v1 + 1184) = v2;
  OUTLINED_FUNCTION_6();
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGAssetType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.cloudBlanketColor.getter()
{
  __n128 *v0;

  return v0[75];
}

void WeatherConditionBackgroundConfig.cloudBlanketColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[75] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBlanketBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1216);
}

void WeatherConditionBackgroundConfig.cloudBlanketBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1216) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBlanketVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1220);
}

void WeatherConditionBackgroundConfig.cloudBlanketVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1220) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBlanketScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1224);
}

void WeatherConditionBackgroundConfig.cloudBlanketScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1224) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBlanketOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1228);
}

void WeatherConditionBackgroundConfig.cloudBlanketOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1228) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.cloudBlanketOffsetZ.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1232);
}

void WeatherConditionBackgroundConfig.cloudBlanketOffsetZ.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1232) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketOffsetZ.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBlanketUseLighting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1236);
}

uint64_t WeatherConditionBackgroundConfig.cloudBlanketUseLighting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1236) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketUseLighting.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBlanketAssetType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_55_4(*(_QWORD *)(v1 + 1248), a1);
  return OUTLINED_FUNCTION_43_11();
}

void WeatherConditionBackgroundConfig.cloudBlanketAssetType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  OUTLINED_FUNCTION_57_8(a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0();
  *(_OWORD *)(v1 + 1240) = v4;
  *(_OWORD *)(v1 + 1256) = v3;
  *(_QWORD *)(v1 + 1272) = v2;
  OUTLINED_FUNCTION_6();
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketAssetType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBlanketShouldOffsetOnRotation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1280);
}

uint64_t WeatherConditionBackgroundConfig.cloudBlanketShouldOffsetOnRotation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1280) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBlanketShouldOffsetOnRotation.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.foregroundParticlesSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1288);
}

void WeatherConditionBackgroundConfig.foregroundParticlesSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1288) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1296);
}

void WeatherConditionBackgroundConfig.foregroundParticlesParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1296) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1300);
}

void WeatherConditionBackgroundConfig.foregroundParticlesParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1300) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1304);
}

void WeatherConditionBackgroundConfig.foregroundParticlesSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1304) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.foregroundParticlesRandomColorStart.getter()
{
  __n128 *v0;

  return v0[82];
}

void WeatherConditionBackgroundConfig.foregroundParticlesRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[82] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.foregroundParticlesRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[83];
}

void WeatherConditionBackgroundConfig.foregroundParticlesRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[83] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1344);
}

void WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1344) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1348);
}

void WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1348) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesNoiseFieldScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.foregroundParticlesLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1352);
}

void WeatherConditionBackgroundConfig.foregroundParticlesLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1352) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.foregroundParticlesAngleVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1360);
}

void WeatherConditionBackgroundConfig.foregroundParticlesAngleVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1360) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesAngleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.foregroundParticlesImage.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1368);
}

uint64_t WeatherConditionBackgroundConfig.foregroundParticlesImage.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1368) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.foregroundParticlesImage.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.lightFillColor.getter()
{
  __n128 *v0;

  return v0[86];
}

void WeatherConditionBackgroundConfig.lightFillColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[86] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.lightFillColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.lightSunColor.getter()
{
  __n128 *v0;

  return v0[87];
}

void WeatherConditionBackgroundConfig.lightSunColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[87] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.lightSunColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.lightAmbientColor.getter()
{
  __n128 *v0;

  return v0[88];
}

void WeatherConditionBackgroundConfig.lightAmbientColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[88] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.lightAmbientColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.fadeMaskYPointRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1424);
}

void WeatherConditionBackgroundConfig.fadeMaskYPointRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1424) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fadeMaskYPointRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.useVFXBuiltInTransparency.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1432);
}

uint64_t WeatherConditionBackgroundConfig.useVFXBuiltInTransparency.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1432) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.useVFXBuiltInTransparency.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.timeScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1436);
}

void WeatherConditionBackgroundConfig.timeScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1436) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.timeScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonElevation.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1440);
}

void WeatherConditionBackgroundConfig.moonElevation.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1440) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonElevation.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonRiseToSet.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1444);
}

void WeatherConditionBackgroundConfig.moonRiseToSet.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1444) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonRiseToSet.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1448);
}

void WeatherConditionBackgroundConfig.moonAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1448) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.moonScaleRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1456);
}

void WeatherConditionBackgroundConfig.moonScaleRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1456) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonScaleRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.moonColor.getter()
{
  __n128 *v0;

  return v0[92];
}

void WeatherConditionBackgroundConfig.moonColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[92] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.moonColorAtHorizon.getter()
{
  __n128 *v0;

  return v0[93];
}

void WeatherConditionBackgroundConfig.moonColorAtHorizon.setter(__n128 a1)
{
  __n128 *v1;

  v1[93] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonColorAtHorizon.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonLightRadius.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1504);
}

void WeatherConditionBackgroundConfig.moonLightRadius.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1504) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonLightRadius.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonPhaseAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1508);
}

void WeatherConditionBackgroundConfig.moonPhaseAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1508) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonPhaseAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.moonImageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1512);
  swift_bridgeObjectRetain();
  return v1;
}

void WeatherConditionBackgroundConfig.moonImageName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 1512) = a1;
  *(_QWORD *)(v2 + 1520) = a2;
  OUTLINED_FUNCTION_9_0();
}

uint64_t (*WeatherConditionBackgroundConfig.moonImageName.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.moonLightIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1528);
}

void WeatherConditionBackgroundConfig.moonLightIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1528) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonLightIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.moonLightColor.getter()
{
  __n128 *v0;

  return v0[96];
}

void WeatherConditionBackgroundConfig.moonLightColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[96] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.moonLightColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.noiseLife.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1552);
}

void WeatherConditionBackgroundConfig.noiseLife.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1552) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.noiseParticleVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1556);
}

void WeatherConditionBackgroundConfig.noiseParticleVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1556) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseParticleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.noiseParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1560);
}

void WeatherConditionBackgroundConfig.noiseParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1560) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.noiseParticleSizeRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1568);
}

void WeatherConditionBackgroundConfig.noiseParticleSizeRange.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1568) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseParticleSizeRange.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.noiseRandomColorStart.getter()
{
  __n128 *v0;

  return v0[99];
}

void WeatherConditionBackgroundConfig.noiseRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[99] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.noiseRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[100];
}

void WeatherConditionBackgroundConfig.noiseRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[100] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.noiseAngleVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1616);
}

void WeatherConditionBackgroundConfig.noiseAngleVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1616) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.noiseAngleVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.backgroundParallax3DMaxAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1624);
}

void WeatherConditionBackgroundConfig.backgroundParallax3DMaxAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1624) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.backgroundParallax3DMaxAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.use3DParallax.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1628);
}

uint64_t WeatherConditionBackgroundConfig.use3DParallax.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1628) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.use3DParallax.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WeatherConditionBackgroundConfig.layers.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v2 = v1[1629];
  v3 = v1[1630];
  v4 = v1[1631];
  v5 = v1[1632];
  v6 = v1[1633];
  v7 = v1[1634];
  v8 = v1[1635];
  v9 = v1[1636];
  v10 = v1[1637];
  v11 = v1[1638];
  v12 = v1[1639];
  v13 = v1[1640];
  v14 = v1[1641];
  v15 = v1[1642];
  v16 = v1[1643];
  v17 = v1[1644];
  v18 = v1[1645];
  v19 = v1[1646];
  v20 = v1[1647];
  v21 = v1[1648];
  v22 = v1[1649];
  v23 = v1[1650];
  v24 = v1[1651];
  v25 = v1[1652];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  a1[14] = v16;
  a1[15] = v17;
  a1[16] = v18;
  a1[17] = v19;
  a1[18] = v20;
  a1[19] = v21;
  a1[20] = v22;
  a1[21] = v23;
  a1[22] = v24;
  a1[23] = v25;
  OUTLINED_FUNCTION_100_3();
}

void WeatherConditionBackgroundConfig.layers.setter(char *a1)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  v11 = a1[9];
  v12 = a1[10];
  v13 = a1[11];
  v14 = a1[12];
  v15 = a1[13];
  v16 = a1[14];
  v17 = a1[15];
  v18 = a1[16];
  v19 = a1[17];
  v20 = a1[18];
  v21 = a1[19];
  v22 = a1[20];
  v23 = a1[21];
  v24 = a1[22];
  v25 = a1[23];
  v1[1629] = v2;
  v1[1630] = v3;
  v1[1631] = v4;
  v1[1632] = v5;
  v1[1633] = v6;
  v1[1634] = v7;
  v1[1635] = v8;
  v1[1636] = v9;
  v1[1637] = v10;
  v1[1638] = v11;
  v1[1639] = v12;
  v1[1640] = v13;
  v1[1641] = v14;
  v1[1642] = v15;
  v1[1643] = v16;
  v1[1644] = v17;
  v1[1645] = v18;
  v1[1646] = v19;
  v1[1647] = v20;
  v1[1648] = v21;
  v1[1649] = v22;
  v1[1650] = v23;
  v1[1651] = v24;
  v1[1652] = v25;
  OUTLINED_FUNCTION_100_3();
}

uint64_t (*WeatherConditionBackgroundConfig.layers.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void sub_1AFDF209C(uint64_t a1@<X8>)
{
  double v2;
  double v3;

  v2 = sub_1AFB36844(&unk_1E6084798);
  v3 = sub_1AFB36844(&unk_1E60847C0);
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 1066611507;
  *(double *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 3;
  *(_OWORD *)(a1 + 24) = xmmword_1B0025700;
  *(_OWORD *)(a1 + 40) = xmmword_1B0025710;
  *(_OWORD *)(a1 + 56) = xmmword_1B0025720;
  *(double *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 80) = 0x3E800000453B8000;
}

void *WeatherConditionBackgroundConfig.lightningConfig.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_9_64(a1, (const void *)(v1 + 1656));
}

void *WeatherConditionBackgroundConfig.lightningConfig.setter(const void *a1)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_9_64((void *)(v1 + 1656), a1);
}

uint64_t (*WeatherConditionBackgroundConfig.lightningConfig.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.hazeEffect.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[109];
  *a1 = result;
  return result;
}

__n128 WeatherConditionBackgroundConfig.hazeEffect.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[109] = *a1;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.hazeEffect.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WeatherConditionBackgroundConfig.gradientTableType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_118_2(a1);
}

_BYTE *WeatherConditionBackgroundConfig.gradientTableType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1760) = *result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.gradientTableType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sunAngle.getter()
{
  __n128 *v0;

  return v0[111];
}

void WeatherConditionBackgroundConfig.sunAngle.setter(__n128 a1)
{
  __n128 *v1;

  v1[111] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fillLightIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1792);
}

void WeatherConditionBackgroundConfig.fillLightIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1792) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fillLightIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunLightIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1796);
}

void WeatherConditionBackgroundConfig.sunLightIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1796) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunLightIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.ambientLightIntensity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1800);
}

void WeatherConditionBackgroundConfig.ambientLightIntensity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1800) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.ambientLightIntensity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRayAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1804);
}

void WeatherConditionBackgroundConfig.sunRayAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1804) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRayAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sunRayStartPosition.getter()
{
  __n128 *v0;

  return v0[113];
}

void WeatherConditionBackgroundConfig.sunRayStartPosition.setter(__n128 a1)
{
  __n128 *v1;

  v1[113] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRayStartPosition.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.sunRayPositionFollowsTimeOfDay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1824);
}

uint64_t WeatherConditionBackgroundConfig.sunRayPositionFollowsTimeOfDay.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1824) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRayPositionFollowsTimeOfDay.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRaysCenterOffset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1828);
}

void WeatherConditionBackgroundConfig.sunRaysCenterOffset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1828) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRaysCenterOffset.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunFlareOverAllScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1832);
}

void WeatherConditionBackgroundConfig.sunFlareOverAllScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1832) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunFlareOverAllScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisScaleFrequency.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1836);
}

void WeatherConditionBackgroundConfig.sunIrisScaleFrequency.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1836) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisScaleFrequency.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisScaleAmplitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1840);
}

void WeatherConditionBackgroundConfig.sunIrisScaleAmplitude.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1840) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisScaleAmplitude.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisRotationFrequency.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1844);
}

void WeatherConditionBackgroundConfig.sunIrisRotationFrequency.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1844) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisRotationFrequency.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisRotationAmplitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1848);
}

void WeatherConditionBackgroundConfig.sunIrisRotationAmplitude.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1848) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisRotationAmplitude.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1852);
}

void WeatherConditionBackgroundConfig.sunIrisLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1852) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.sunIrisParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1856);
}

uint64_t WeatherConditionBackgroundConfig.sunIrisParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1856) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunIrisOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1864);
}

void WeatherConditionBackgroundConfig.sunIrisOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1864) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisOpacity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.sunIrisSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1872);
}

void WeatherConditionBackgroundConfig.sunIrisSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1872) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunSpikeBallScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1880);
}

void WeatherConditionBackgroundConfig.sunSpikeBallScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1880) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sunSpikeBallColor.getter()
{
  __n128 *v0;

  return v0[118];
}

void WeatherConditionBackgroundConfig.sunSpikeBallColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[118] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunSpikeBallAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1904);
}

void WeatherConditionBackgroundConfig.sunSpikeBallAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1904) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallAngle.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunSpikeBallRotationFrequency.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1908);
}

void WeatherConditionBackgroundConfig.sunSpikeBallRotationFrequency.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1908) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallRotationFrequency.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunSpikeBallRotationAmplitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1912);
}

void WeatherConditionBackgroundConfig.sunSpikeBallRotationAmplitude.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1912) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallRotationAmplitude.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.sunSpikeBallImage.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1920);
}

uint64_t WeatherConditionBackgroundConfig.sunSpikeBallImage.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1920) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.sunSpikeBallImage.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRaysSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1928);
}

void WeatherConditionBackgroundConfig.sunRaysSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1928) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRaysSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.sunRaysColor.getter()
{
  __n128 *v0;

  return v0[121];
}

void WeatherConditionBackgroundConfig.sunRaysColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[121] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRaysColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRaysParticleCount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1952);
}

void WeatherConditionBackgroundConfig.sunRaysParticleCount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1952) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRaysParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.sunRaysLength.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 1960);
}

void WeatherConditionBackgroundConfig.sunRaysLength.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 1960) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRaysLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRainbowScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1968);
}

void WeatherConditionBackgroundConfig.sunRainbowScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1968) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRainbowScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRainbowOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1972);
}

void WeatherConditionBackgroundConfig.sunRainbowOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1972) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRainbowOpacity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.sunRainbowSunPathOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1976);
}

void WeatherConditionBackgroundConfig.sunRainbowSunPathOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1976) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.sunRainbowSunPathOpacity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.blowingSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1980);
}

void WeatherConditionBackgroundConfig.blowingSpeed.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1980) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.blowingSpeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.blowingAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1984);
}

void WeatherConditionBackgroundConfig.blowingAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1984) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.blowingAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starTwinkleSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1988);
}

void WeatherConditionBackgroundConfig.starTwinkleSpeed.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1988) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starTwinkleSpeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.starTwinkleAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 1992);
}

void WeatherConditionBackgroundConfig.starTwinkleAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 1992) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starTwinkleAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.starSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 2000);
}

void WeatherConditionBackgroundConfig.starSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 2000) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.starBrightSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 2008);
}

void WeatherConditionBackgroundConfig.starBrightSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 2008) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.starBrightSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderACoordinates.getter()
{
  __n128 *v0;

  return v0[126];
}

void WeatherConditionBackgroundConfig.colliderACoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[126] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderACoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderBCoordinates.getter()
{
  __n128 *v0;

  return v0[127];
}

void WeatherConditionBackgroundConfig.colliderBCoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[127] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderBCoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderCCoordinates.getter()
{
  __n128 *v0;

  return v0[128];
}

void WeatherConditionBackgroundConfig.colliderCCoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[128] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderCCoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderDCoordinates.getter()
{
  __n128 *v0;

  return v0[129];
}

void WeatherConditionBackgroundConfig.colliderDCoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[129] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderDCoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderECoordinates.getter()
{
  __n128 *v0;

  return v0[130];
}

void WeatherConditionBackgroundConfig.colliderECoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[130] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderECoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.colliderFCoordinates.getter()
{
  __n128 *v0;

  return v0[131];
}

void WeatherConditionBackgroundConfig.colliderFCoordinates.setter(__n128 a1)
{
  __n128 *v1;

  v1[131] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderFCoordinates.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.colliderCornerRadius.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2112);
}

void WeatherConditionBackgroundConfig.colliderCornerRadius.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2112) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.colliderCornerRadius.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.collisionSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 2120);
}

void WeatherConditionBackgroundConfig.collisionSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 2120) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionSize.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.collisionLife.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 2128);
}

void WeatherConditionBackgroundConfig.collisionLife.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 2128) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionLife.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.collisionVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 2136);
}

void WeatherConditionBackgroundConfig.collisionVelocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 2136) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.collisionGravity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2144);
}

void WeatherConditionBackgroundConfig.collisionGravity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2144) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionGravity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.collisionRandomColorStart.getter()
{
  __n128 *v0;

  return v0[135];
}

void WeatherConditionBackgroundConfig.collisionRandomColorStart.setter(__n128 a1)
{
  __n128 *v1;

  v1[135] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionRandomColorStart.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.collisionRandomColorEnd.getter()
{
  __n128 *v0;

  return v0[136];
}

void WeatherConditionBackgroundConfig.collisionRandomColorEnd.setter(__n128 a1)
{
  __n128 *v1;

  v1[136] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionRandomColorEnd.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.collisionOccurrenceProbability.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2192);
}

void WeatherConditionBackgroundConfig.collisionOccurrenceProbability.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2192) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.collisionOccurrenceProbability.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.fringeParticleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2200);
}

uint64_t WeatherConditionBackgroundConfig.fringeParticleCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2200) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeParticleCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2208);
}

void WeatherConditionBackgroundConfig.fringeVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2208) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2212);
}

void WeatherConditionBackgroundConfig.fringeScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2212) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.fringeEmitterScale.getter()
{
  __n128 *v0;

  return v0[139];
}

void WeatherConditionBackgroundConfig.fringeEmitterScale.setter(__n128 a1)
{
  __n128 *v1;

  v1[139] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeEmitterScale.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeScaleFrequency.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2240);
}

void WeatherConditionBackgroundConfig.fringeScaleFrequency.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2240) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeScaleFrequency.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeScaleAmplitude.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2244);
}

void WeatherConditionBackgroundConfig.fringeScaleAmplitude.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2244) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeScaleAmplitude.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeOffsetY.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2248);
}

void WeatherConditionBackgroundConfig.fringeOffsetY.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2248) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeOffsetY.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.fringeAngularVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 2252);
}

void WeatherConditionBackgroundConfig.fringeAngularVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 2252) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeAngularVelocity.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

__n128 WeatherConditionBackgroundConfig.fringeColor.getter()
{
  __n128 *v0;

  return v0[141];
}

void WeatherConditionBackgroundConfig.fringeColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[141] = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.fringeColor.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.sunIrisSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2272);
}

uint64_t WeatherConditionBackgroundConfig.sunIrisSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2272) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.sunIrisSeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2280);
}

uint64_t WeatherConditionBackgroundConfig.cloudBBGSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2280) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBBGSeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudBGSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2288);
}

uint64_t WeatherConditionBackgroundConfig.cloudBGSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2288) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudBGSeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFGSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2296);
}

uint64_t WeatherConditionBackgroundConfig.cloudFGSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2296) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFGSeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2304);
}

uint64_t WeatherConditionBackgroundConfig.cloudFFGSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2304) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.cloudFFGSeed.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.lightingKeyframes.getter()
{
  return swift_bridgeObjectRetain();
}

void WeatherConditionBackgroundConfig.lightingKeyframes.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 2312) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*WeatherConditionBackgroundConfig.lightingKeyframes.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.moonLightingKeyframes.getter()
{
  return swift_bridgeObjectRetain();
}

void WeatherConditionBackgroundConfig.moonLightingKeyframes.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 2320) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*WeatherConditionBackgroundConfig.moonLightingKeyframes.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.rainEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.snowEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t WeatherConditionBackgroundConfig.Layers.snowEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.snowEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.fogEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t WeatherConditionBackgroundConfig.Layers.fogEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.fogEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.lightningEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t WeatherConditionBackgroundConfig.Layers.lightningEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.lightningEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.lightningCloudFlashEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t WeatherConditionBackgroundConfig.Layers.lightningCloudFlashEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.lightningCloudFlashEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.starsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t WeatherConditionBackgroundConfig.Layers.starsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.starsEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.shootingStarEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t WeatherConditionBackgroundConfig.Layers.shootingStarEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.shootingStarEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunRaysEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunRaysEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.sunRaysEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunSpikeBallEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunSpikeBallEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.sunSpikeBallEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunRainbowEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunRainbowEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.sunRainbowEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunIrisEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t WeatherConditionBackgroundConfig.Layers.sunIrisEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.sunIrisEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.moonEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t WeatherConditionBackgroundConfig.Layers.moonEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 11) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.moonEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.hailEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t WeatherConditionBackgroundConfig.Layers.hailEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 12) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.hailEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.sleetEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t WeatherConditionBackgroundConfig.Layers.sleetEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 13) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.sleetEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.windEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 14);
}

uint64_t WeatherConditionBackgroundConfig.Layers.windEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 14) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.windEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.fringeEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 15);
}

uint64_t WeatherConditionBackgroundConfig.Layers.fringeEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 15) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.fringeEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.foregroundParticlesEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t WeatherConditionBackgroundConfig.Layers.foregroundParticlesEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.foregroundParticlesEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WeatherConditionBackgroundConfig.Layers.cloudLayers.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  v2 = v1[18];
  v3 = v1[19];
  v4 = v1[20];
  v5 = v1[21];
  v6 = v1[22];
  *a1 = v1[17];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
}

_BYTE *WeatherConditionBackgroundConfig.Layers.cloudLayers.setter(_BYTE *result)
{
  _BYTE *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  v2 = result[1];
  v3 = result[2];
  v4 = result[3];
  v5 = result[4];
  v6 = result[5];
  v1[17] = *result;
  v1[18] = v2;
  v1[19] = v3;
  v1[20] = v4;
  v1[21] = v5;
  v1[22] = v6;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.cloudLayers.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

void WeatherConditionBackgroundConfig.Layers.collisionType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_118_2(a1);
}

_BYTE *WeatherConditionBackgroundConfig.Layers.collisionType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 23) = *result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.collisionType.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.anyEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.blanketEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.blanketEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.blanketEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.bbgEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.bbgEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.bbgEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.bgEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.bgEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.bgEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.fgEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.fgEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.fgEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.ffgEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.ffgEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.Layers.CloudLayers.ffgEnabled.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CloudLayers.hash(into:)()
{
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  return sub_1B000901C();
}

BOOL static WeatherConditionBackgroundConfig.Layers.CloudLayers.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a1[2] ^ a2[2] | a1[3] ^ a2[3] | a1[4] ^ a2[4] | a2[5] ^ a1[5]) & 1) == 0;
}

uint64_t sub_1AFDF2E64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6C62616E45796E61 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4574656B6E616C62 && a2 == 0xEE0064656C62616ELL;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C62616E45676262 && a2 == 0xEA00000000006465;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656C62616E456762 && a2 == 0xE900000000000064;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656C62616E456766 && a2 == 0xE900000000000064;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6C62616E45676666 && a2 == 0xEA00000000006465)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1B0008FB0();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1AFDF30F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFDF3128 + 4 * byte_1B003A227[a1]))(0x6C62616E45796E61, 0xEA00000000006465);
}

uint64_t sub_1AFDF3128()
{
  return 0x4574656B6E616C62;
}

uint64_t sub_1AFDF314C()
{
  return 0x6C62616E45676262;
}

uint64_t sub_1AFDF3160()
{
  return 0x656C62616E456762;
}

uint64_t sub_1AFDF3194()
{
  return 0x6C62616E45676666;
}

uint64_t sub_1AFDF31B0()
{
  unsigned __int8 *v0;

  return sub_1AFDF30F0(*v0);
}

uint64_t sub_1AFDF31B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFDF2E64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDF31DC()
{
  sub_1AFDF33A0();
  return sub_1B0009118();
}

uint64_t sub_1AFDF3204()
{
  sub_1AFDF33A0();
  return sub_1B0009124();
}

void WeatherConditionBackgroundConfig.Layers.CloudLayers.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_16_2();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE745B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1AFDF33A0();
  sub_1B0009058();
  OUTLINED_FUNCTION_48_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_46_8(5);
    OUTLINED_FUNCTION_48_0();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_4();
}

unint64_t sub_1AFDF33A0()
{
  unint64_t result;

  result = qword_1EEE745B8;
  if (!qword_1EEE745B8)
  {
    result = MEMORY[0x1B5E03BF4](&unk_1B003B110, &type metadata for WeatherConditionBackgroundConfig.Layers.CloudLayers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE745B8);
  }
  return result;
}

void WeatherConditionBackgroundConfig.Layers.CloudLayers.hashValue.getter()
{
  OUTLINED_FUNCTION_95_3();
  OUTLINED_FUNCTION_94_5();
  WeatherConditionBackgroundConfig.Layers.CloudLayers.hash(into:)();
  sub_1B0009040();
  OUTLINED_FUNCTION_6_2();
}

void WeatherConditionBackgroundConfig.Layers.CloudLayers.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  OUTLINED_FUNCTION_16_2();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE745C0);
  OUTLINED_FUNCTION_86_5();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_9();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_85_4();
  sub_1AFDF33A0();
  OUTLINED_FUNCTION_63_4();
  if (!v0)
  {
    v10 = OUTLINED_FUNCTION_38_24();
    v11 = OUTLINED_FUNCTION_38_24();
    v15 = OUTLINED_FUNCTION_38_24();
    v14 = OUTLINED_FUNCTION_38_24();
    v13 = OUTLINED_FUNCTION_38_24();
    v12 = OUTLINED_FUNCTION_38_24();
    OUTLINED_FUNCTION_35_0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v5 = v10 & 1;
    v5[1] = v11 & 1;
    v5[2] = v15 & 1;
    v5[3] = v14 & 1;
    v5[4] = v13 & 1;
    v5[5] = v12 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_4();
}

void sub_1AFDF35E0()
{
  WeatherConditionBackgroundConfig.Layers.CloudLayers.init(from:)();
}

void sub_1AFDF35F4()
{
  WeatherConditionBackgroundConfig.Layers.CloudLayers.encode(to:)();
}

uint64_t sub_1AFDF3610()
{
  sub_1B0009004();
  WeatherConditionBackgroundConfig.Layers.CloudLayers.hash(into:)();
  return sub_1B0009040();
}

WeatherUI::WeatherConditionBackgroundConfig::Layers::CollisionType_optional __swiftcall WeatherConditionBackgroundConfig.Layers.CollisionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  WeatherUI::WeatherConditionBackgroundConfig::Layers::CollisionType_optional result;

  v2 = v1;
  v3 = sub_1B0008E60();
  OUTLINED_FUNCTION_20_0();
  v4 = 4;
  if (v3 < 4)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_9_0();
  return result;
}

void *static WeatherConditionBackgroundConfig.Layers.CollisionType.allCases.getter()
{
  return &unk_1E6084988;
}

uint64_t WeatherConditionBackgroundConfig.Layers.CollisionType.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aNone_7[8 * *v0];
}

void sub_1AFDF36F0(char *a1, char *a2)
{
  sub_1AFC0BBB4(*a1, *a2);
}

void sub_1AFDF36FC()
{
  sub_1AFD77554();
}

uint64_t sub_1AFDF3704()
{
  return sub_1AFDF05D0();
}

void sub_1AFDF370C()
{
  sub_1AFD7775C();
}

WeatherUI::WeatherConditionBackgroundConfig::Layers::CollisionType_optional sub_1AFDF3714(Swift::String *a1)
{
  return WeatherConditionBackgroundConfig.Layers.CollisionType.init(rawValue:)(*a1);
}

void sub_1AFDF3720(uint64_t *a1@<X8>)
{
  *a1 = WeatherConditionBackgroundConfig.Layers.CollisionType.rawValue.getter();
  a1[1] = 0xE400000000000000;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1AFDF3744()
{
  sub_1AFE09EF0();
  return sub_1B0008764();
}

uint64_t sub_1AFDF37A0()
{
  sub_1AFE09EF0();
  return sub_1B0008758();
}

void sub_1AFDF37EC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6084988;
}

uint64_t WeatherConditionBackgroundConfig.Layers.hash(into:)()
{
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  sub_1B000901C();
  WeatherConditionBackgroundConfig.Layers.CloudLayers.hash(into:)();
  return sub_1AFDF05D0();
}

void static WeatherConditionBackgroundConfig.Layers.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;
  char v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned __int8 v15[6];
  unsigned __int8 v16[6];

  if (*a1 == *a2
    && ((a1[1] ^ a2[1]) & 1) == 0
    && ((a1[2] ^ a2[2]) & 1) == 0
    && ((a1[3] ^ a2[3]) & 1) == 0
    && ((a1[4] ^ a2[4]) & 1) == 0
    && ((a1[5] ^ a2[5]) & 1) == 0
    && ((a1[6] ^ a2[6]) & 1) == 0
    && ((a1[7] ^ a2[7]) & 1) == 0
    && ((a1[8] ^ a2[8]) & 1) == 0
    && ((a1[9] ^ a2[9]) & 1) == 0
    && ((a1[10] ^ a2[10]) & 1) == 0
    && ((a1[11] ^ a2[11]) & 1) == 0
    && ((a1[12] ^ a2[12]) & 1) == 0
    && ((a1[13] ^ a2[13]) & 1) == 0
    && ((a1[14] ^ a2[14]) & 1) == 0
    && ((a1[15] ^ a2[15]) & 1) == 0
    && ((a1[16] ^ a2[16]) & 1) == 0)
  {
    v2 = a1[23];
    v3 = a2[23];
    v4 = a2[22];
    v5 = a2[21];
    v6 = a2[20];
    v7 = a2[19];
    v8 = a2[18];
    v9 = a2[17];
    v10 = a1[22];
    v11 = a1[21];
    v12 = a1[20];
    v13 = a1[19];
    v14 = a1[18];
    v16[0] = a1[17];
    v16[1] = v14;
    v16[2] = v13;
    v16[3] = v12;
    v16[4] = v11;
    v16[5] = v10;
    v15[0] = v9;
    v15[1] = v8;
    v15[2] = v7;
    v15[3] = v6;
    v15[4] = v5;
    v15[5] = v4;
    if (static WeatherConditionBackgroundConfig.Layers.CloudLayers.== infix(_:_:)(v16, v15))
      sub_1AFC0BBB4(v2, v3);
  }
}

uint64_t sub_1AFDF3B50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v18;

  v2 = a1 == 0x62616E456E696172 && a2 == 0xEB0000000064656CLL;
  if (v2 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x62616E45776F6E73 && a2 == 0xEB0000000064656CLL;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C62616E45676F66 && a2 == 0xEA00000000006465;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005F0F0 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B005F110 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x616E457372617473 && a2 == 0xEC00000064656C62;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005F130 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x45737961526E7573 && a2 == 0xEE0064656C62616ELL;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001B005F150 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F170 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            v10 = a1 == 0x45736972496E7573 && a2 == 0xEE0064656C62616ELL;
            if (v10 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              v11 = a1 == 0x62616E456E6F6F6DLL && a2 == 0xEB0000000064656CLL;
              if (v11 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                v12 = a1 == 0x62616E456C696168 && a2 == 0xEB0000000064656CLL;
                if (v12 || (sub_1B0008FB0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  v13 = a1 == 0x616E457465656C73 && a2 == 0xEC00000064656C62;
                  if (v13 || (sub_1B0008FB0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 13;
                  }
                  else
                  {
                    v14 = a1 == 0x62616E45646E6977 && a2 == 0xEB0000000064656CLL;
                    if (v14 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 14;
                    }
                    else
                    {
                      v15 = a1 == 0x6E4565676E697266 && a2 == 0xED000064656C6261;
                      if (v15 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B005F190 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else
                      {
                        v16 = a1 == 0x79614C64756F6C63 && a2 == 0xEB00000000737265;
                        if (v16 || (sub_1B0008FB0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 17;
                        }
                        else if (a1 == 0x6F6973696C6C6F63 && a2 == 0xED0000657079546ELL)
                        {
                          swift_bridgeObjectRelease();
                          return 18;
                        }
                        else
                        {
                          v18 = sub_1B0008FB0();
                          swift_bridgeObjectRelease();
                          if ((v18 & 1) != 0)
                            return 18;
                          else
                            return 19;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AFDF4388(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFDF43C4 + 4 * byte_1B003A22D[a1]))(0x62616E456E696172, 0xEB0000000064656CLL);
}

uint64_t sub_1AFDF43C4()
{
  return 0x62616E45776F6E73;
}

uint64_t sub_1AFDF44EC()
{
  return 0x6E4565676E697266;
}

void sub_1AFDF4510()
{
  JUMPOUT(0x1AFDF4524);
}

uint64_t sub_1AFDF4530()
{
  return 0x79614C64756F6C63;
}

uint64_t sub_1AFDF4550()
{
  return 0x6F6973696C6C6F63;
}

uint64_t sub_1AFDF4574()
{
  unsigned __int8 *v0;

  return sub_1AFDF4388(*v0);
}

uint64_t sub_1AFDF457C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFDF3B50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDF45A0()
{
  sub_1AFE07620();
  return sub_1B0009118();
}

uint64_t sub_1AFDF45C8()
{
  sub_1AFE07620();
  return sub_1B0009124();
}

void WeatherConditionBackgroundConfig.Layers.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_16_2();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE745C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AFE07620();
  sub_1B0009058();
  sub_1B0008F38();
  if (!v0)
  {
    OUTLINED_FUNCTION_46_8(1);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(2);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(3);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(4);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(5);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(6);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(7);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(8);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(9);
    OUTLINED_FUNCTION_44_11();
    OUTLINED_FUNCTION_46_8(10);
    sub_1B0008F38();
    OUTLINED_FUNCTION_46_8(11);
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_46_8(12);
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_46_8(13);
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_46_8(14);
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_46_8(15);
    OUTLINED_FUNCTION_47_9();
    OUTLINED_FUNCTION_46_8(16);
    OUTLINED_FUNCTION_47_9();
    sub_1AFE0765C();
    OUTLINED_FUNCTION_83_4();
    sub_1AFE07698();
    OUTLINED_FUNCTION_83_4();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  OUTLINED_FUNCTION_4();
}

uint64_t WeatherConditionBackgroundConfig.Layers.hashValue.getter()
{
  OUTLINED_FUNCTION_95_3();
  OUTLINED_FUNCTION_94_5();
  WeatherConditionBackgroundConfig.Layers.hash(into:)();
  return sub_1B0009040();
}

void WeatherConditionBackgroundConfig.Layers.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  OUTLINED_FUNCTION_16_2();
  v20 = v19;
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE745E8);
  OUTLINED_FUNCTION_86_5();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_85_4();
  sub_1AFE07620();
  OUTLINED_FUNCTION_63_4();
  if (!v16)
  {
    v24 = OUTLINED_FUNCTION_27_59();
    v25 = OUTLINED_FUNCTION_21_58(1);
    v40 = OUTLINED_FUNCTION_21_58(2);
    v39 = OUTLINED_FUNCTION_21_58(3);
    v38 = OUTLINED_FUNCTION_21_58(4);
    v37 = OUTLINED_FUNCTION_21_58(5);
    v36 = OUTLINED_FUNCTION_21_58(6);
    v35 = OUTLINED_FUNCTION_21_58(7);
    v34 = OUTLINED_FUNCTION_21_58(8);
    v33 = OUTLINED_FUNCTION_21_58(9);
    v32 = OUTLINED_FUNCTION_21_58(10);
    v31 = OUTLINED_FUNCTION_21_58(11);
    v30 = OUTLINED_FUNCTION_21_58(12);
    v29 = OUTLINED_FUNCTION_21_58(13);
    v28 = OUTLINED_FUNCTION_21_58(14);
    v27 = OUTLINED_FUNCTION_21_58(15);
    v26 = OUTLINED_FUNCTION_21_58(16);
    sub_1AFE076D4();
    OUTLINED_FUNCTION_79_6();
    sub_1AFE07710();
    OUTLINED_FUNCTION_79_6();
    OUTLINED_FUNCTION_35_0(v17, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    *v22 = v24 & 1;
    v22[1] = v25 & 1;
    v22[2] = v40 & 1;
    v22[3] = v39 & 1;
    v22[4] = v38 & 1;
    v22[5] = v37 & 1;
    v22[6] = v36 & 1;
    v22[7] = v35 & 1;
    v22[8] = v34 & 1;
    v22[9] = v33 & 1;
    v22[10] = v32 & 1;
    v22[11] = v31 & 1;
    v22[12] = v30 & 1;
    v22[13] = v29 & 1;
    v22[14] = v28 & 1;
    v22[15] = v27 & 1;
    v22[16] = v26 & 1;
    v22[17] = 0;
    v22[18] = a12;
    v22[19] = a13;
    v22[20] = a14;
    v22[21] = a15;
    v22[22] = a16;
    v22[23] = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(v20);
  OUTLINED_FUNCTION_4();
}

void sub_1AFDF4E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  WeatherConditionBackgroundConfig.Layers.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SBYTE3(vars8), SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AFDF4E28()
{
  WeatherConditionBackgroundConfig.Layers.encode(to:)();
}

uint64_t sub_1AFDF4E44()
{
  sub_1B0009004();
  WeatherConditionBackgroundConfig.Layers.hash(into:)();
  return sub_1B0009040();
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.useRespawn.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.totalStrikeLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void WeatherConditionBackgroundConfig.LightningConfig.totalStrikeLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.totalStrikeLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.LightningConfig.strikeInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void WeatherConditionBackgroundConfig.LightningConfig.strikeInterval.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.strikeInterval.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.LightningConfig.branchCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WeatherConditionBackgroundConfig.LightningConfig.branchCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.branchCount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.roughness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

void WeatherConditionBackgroundConfig.LightningConfig.roughness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 24) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.roughness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.thickness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 28);
}

void WeatherConditionBackgroundConfig.LightningConfig.thickness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 28) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.thickness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.flashThicknessMultipler.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void WeatherConditionBackgroundConfig.LightningConfig.flashThicknessMultipler.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.flashThicknessMultipler.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.drawSpaceWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void WeatherConditionBackgroundConfig.LightningConfig.drawSpaceWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 36) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.drawSpaceWidth.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.branchSpread.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

void WeatherConditionBackgroundConfig.LightningConfig.branchSpread.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 40) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.branchSpread.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.branchFadeAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

void WeatherConditionBackgroundConfig.LightningConfig.branchFadeAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 44) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.branchFadeAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.growAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void WeatherConditionBackgroundConfig.LightningConfig.growAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.growAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.flashAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 52);
}

void WeatherConditionBackgroundConfig.LightningConfig.flashAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 52) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.flashAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.fadeAmount.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 56);
}

void WeatherConditionBackgroundConfig.LightningConfig.fadeAmount.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 56) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.fadeAmount.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.glow.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 60);
}

void WeatherConditionBackgroundConfig.LightningConfig.glow.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 60) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.glow.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.screenFlashFadeLength.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 64);
}

void WeatherConditionBackgroundConfig.LightningConfig.screenFlashFadeLength.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 64) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.screenFlashFadeLength.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.screenFlashProbability.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 68);
}

void WeatherConditionBackgroundConfig.LightningConfig.screenFlashProbability.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 68) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.screenFlashProbability.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

double WeatherConditionBackgroundConfig.LightningConfig.screenFlashBrightness.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void WeatherConditionBackgroundConfig.LightningConfig.screenFlashBrightness.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.screenFlashBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.cloudFlashBrightness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 80);
}

void WeatherConditionBackgroundConfig.LightningConfig.cloudFlashBrightness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 80) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.cloudFlashBrightness.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

float WeatherConditionBackgroundConfig.LightningConfig.cloudFlashProbability.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 84);
}

void WeatherConditionBackgroundConfig.LightningConfig.cloudFlashProbability.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 84) = a1;
}

uint64_t (*WeatherConditionBackgroundConfig.LightningConfig.cloudFlashProbability.modify())(_QWORD, double)
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherConditionBackgroundConfig.LightningConfig.hash(into:)()
{
  sub_1B000901C();
  sub_1B0009028();
  sub_1AFBEE350();
  sub_1B0009010();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  sub_1B0009028();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_15_15();
  sub_1AFBEE350();
  OUTLINED_FUNCTION_15_15();
  return OUTLINED_FUNCTION_15_15();
}

BOOL static WeatherConditionBackgroundConfig.LightningConfig.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  float v18;
  BOOL v19;
  uint64_t v21;
  BOOL v22;
  float v23;
  float v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (*a1 != *a2 || *((float *)a1 + 1) != *((float *)a2 + 1))
    return 0;
  v4 = 0;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a2 + 1);
  v8 = *(float32x4_t *)(a1 + 40);
  v9 = *(float32x4_t *)(a1 + 24);
  v10 = *(float32x4_t *)(a2 + 40);
  v11 = *(float32x4_t *)(a2 + 24);
  v12 = *(float32x4_t *)(a1 + 56);
  v13 = *(float32x4_t *)(a2 + 56);
  v14 = 1;
  v15 = *((_QWORD *)a2 + 2);
  do
  {
    while (1)
    {
      v16 = v4 + 1;
      if (v14)
        break;
      v14 = 0;
      result = 0;
      v4 = 1;
      if (v16 == 2)
        return result;
    }
    v35 = v5;
    v17 = *(float *)((unint64_t)&v35 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v4 & 1)));
    v36 = v7;
    v18 = *(float *)((unint64_t)&v36 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v4 & 1)));
    v14 = v17 == v18;
    v4 = 1;
  }
  while (v16 != 2);
  result = 0;
  if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(v9, v11), (int16x8_t)vceqq_f32(v8, v10))), 7uLL))) & 1) != 0)
  {
    v19 = (~vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vcltzq_s32(vshlq_n_s32(vceqq_f32(v12, v13), 0x1FuLL)), (int8x16_t)xmmword_1B003B250)) & 0xF) == 0&& v17 == v18;
    if (v19 && v6 == v15)
    {
      OUTLINED_FUNCTION_35_27();
      do
      {
        while (1)
        {
          v29 = v21 + 1;
          if (v22)
            break;
          v22 = 0;
          result = 0;
          v21 = 1;
          if (v29 == 2)
            return result;
        }
        v33 = v25;
        v30 = *(float *)((unint64_t)&v33 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v21 & 1)));
        v34 = v28;
        v31 = *(float *)((unint64_t)&v34 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v21 & 1)));
        v22 = v30 == v31;
        v21 = 1;
      }
      while (v29 != 2);
      v32 = v30 == v31;
      if (v24 != v27)
        v32 = 0;
      return v23 == v26 && v32;
    }
  }
  return result;
}

uint64_t sub_1AFDF54AC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v16;

  v3 = a1 == 0x6170736552657375 && a2 == 0xEA00000000006E77;
  if (v3 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B005F1B0 || (sub_1B0008FB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E49656B69727473 && a2 == 0xEE006C6176726574;
    if (v6 || (sub_1B0008FB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6F4368636E617262 && a2 == 0xEB00000000746E75;
      if (v7 || (sub_1B0008FB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x73656E6867756F72 && a2 == 0xE900000000000073;
        if (v8 || (sub_1B0008FB0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x73656E6B63696874 && a2 == 0xE900000000000073;
          if (v9 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x80000001B005F1D0 || (sub_1B0008FB0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x6361705377617264 && a2 == 0xEE00687464695765;
            if (v10 || (sub_1B0008FB0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x705368636E617262 && a2 == 0xEC00000064616572;
              if (v11 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x80000001B005F1F0 || (sub_1B0008FB0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v12 = a1 == 0x756F6D41776F7267 && a2 == 0xEA0000000000746ELL;
                if (v12 || (sub_1B0008FB0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  v13 = a1 == 0x6F6D416873616C66 && a2 == 0xEB00000000746E75;
                  if (v13 || (sub_1B0008FB0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 11;
                  }
                  else
                  {
                    v14 = a1 == 0x756F6D4165646166 && a2 == 0xEA0000000000746ELL;
                    if (v14 || (sub_1B0008FB0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 12;
                    }
                    else
                    {
                      v15 = a1 == 2003790951 && a2 == 0xE400000000000000;
                      if (v15 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 13;
                      }
                      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F210 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else if (a1 == 0xD000000000000016 && a2 == 0x80000001B005F230 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F250 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B005F270 || (sub_1B0008FB0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 17;
                      }
                      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B005F290)
                      {
                        swift_bridgeObjectRelease();
                        return 18;
                      }
                      else
                      {
                        v16 = sub_1B0008FB0();
                        swift_bridgeObjectRelease();
                        if ((v16 & 1) != 0)
                          return 18;
                        else
                          return 19;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AFDF5C58()
{
  return 19;
}

uint64_t sub_1AFDF5C60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AFDF5C9C + 4 * byte_1B003A240[a1]))(0x6170736552657375, 0xEA00000000006E77);
}

unint64_t sub_1AFDF5C9C()
{
  return 0xD000000000000011;
}

void sub_1AFDF5E50()
{
  sub_1AFE00C88();
}

uint64_t sub_1AFDF5E68()
{
  unsigned __int8 *v0;

  return sub_1AFDF5C60(*v0);
}

uint64_t sub_1AFDF5E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AFDF54AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AFDF5E94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AFDF5C58();
  *a1 = result;
  return result;
}

uint64_t sub_1AFDF5EB8()
{
  sub_1AFE0774C();
  return sub_1B0009118();
}

uint64_t sub_1AFDF5EE0()
{
  sub_1AFE0774C();
  return sub_1B0009124();
}

void WeatherConditionBackgroundConfig.LightningConfig.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_30_15();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74600);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_9();
  v7 = v6 - v5;
  v8 = v2[3];
  v9 = v2;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1AFE0774C();
  sub_1B0009058();
  sub_1B0008F38();
  if (!v0)
  {
    OUTLINED_FUNCTION_53_7(1);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_27_43();
    OUTLINED_FUNCTION_87_4(&qword_1EEE70F00, v12, MEMORY[0x1E0DEDD30]);
    OUTLINED_FUNCTION_99_4();
    sub_1B0008F5C();
    OUTLINED_FUNCTION_53_7(4);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(5);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(6);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(7);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(8);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(9);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(10);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(11);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(12);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(13);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(14);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(15);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_99_4();
    OUTLINED_FUNCTION_53_7(17);
    OUTLINED_FUNCTION_10_94();
    OUTLINED_FUNCTION_53_7(18);
    OUTLINED_FUNCTION_10_94();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v11);
  OUTLINED_FUNCTION_21_11();
}

void WeatherConditionBackgroundConfig.LightningConfig.hashValue.getter()
{
  OUTLINED_FUNCTION_94_5();
  WeatherConditionBackgroundConfig.LightningConfig.hash(into:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_2();
}

void WeatherConditionBackgroundConfig.LightningConfig.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;

  OUTLINED_FUNCTION_30_15();
  v20 = v19;
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE74610);
  OUTLINED_FUNCTION_86_5();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_34();
  sub_1AFB36844(&unk_1E60849B0);
  sub_1AFB36844(&unk_1E60849D8);
  OUTLINED_FUNCTION_85_4();
  sub_1AFE0774C();
  OUTLINED_FUNCTION_63_4();
  if (!v18)
  {
    LOBYTE(a18) = 0;
    v24 = OUTLINED_FUNCTION_27_59();
    OUTLINED_FUNCTION_22_59(1);
    v26 = v25;
    OUTLINED_FUNCTION_27_43();
    OUTLINED_FUNCTION_87_4(&qword_1EEE70F20, v27, MEMORY[0x1E0DEDD40]);
    OUTLINED_FUNCTION_109_4();
    OUTLINED_FUNCTION_80();
    v28 = a18;
    LOBYTE(a18) = 3;
    v57 = sub_1B0008ED8();
    OUTLINED_FUNCTION_22_59(4);
    v30 = v29;
    OUTLINED_FUNCTION_22_59(5);
    v32 = v31;
    OUTLINED_FUNCTION_22_59(6);
    v34 = v33;
    OUTLINED_FUNCTION_22_59(7);
    v36 = v35;
    OUTLINED_FUNCTION_22_59(8);
    v38 = v37;
    OUTLINED_FUNCTION_22_59(9);
    v40 = v39;
    OUTLINED_FUNCTION_22_59(10);
    v56 = v41;
    OUTLINED_FUNCTION_22_59(11);
    v55 = v42;
    OUTLINED_FUNCTION_22_59(12);
    v54 = v43;
    OUTLINED_FUNCTION_22_59(13);
    v53 = v44;
    OUTLINED_FUNCTION_22_59(14);
    v52 = v45;
    OUTLINED_FUNCTION_22_59(15);
    v51 = v46;
    OUTLINED_FUNCTION_109_4();
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_22_59(17);
    v50 = v47;
    OUTLINED_FUNCTION_22_59(18);
    v49 = v48;
    OUTLINED_FUNCTION_1_59();
    *(_BYTE *)v22 = v24 & 1;
    *(_DWORD *)(v22 + 4) = v26;
    *(_QWORD *)(v22 + 8) = v28;
    *(_QWORD *)(v22 + 16) = v57;
    *(_DWORD *)(v22 + 24) = v30;
    *(_DWORD *)(v22 + 28) = v32;
    *(_DWORD *)(v22 + 32) = v34;
    *(_DWORD *)(v22 + 36) = v36;
    *(_DWORD *)(v22 + 40) = v38;
    *(_DWORD *)(v22 + 44) = v40;
    *(_DWORD *)(v22 + 48) = v56;
    *(_DWORD *)(v22 + 52) = v55;
    *(_DWORD *)(v22 + 56) = v54;
    *(_DWORD *)(v22 + 60) = v53;
    *(_DWORD *)(v22 + 64) = v52;
    *(_DWORD *)(v22 + 68) = v51;
    *(_QWORD *)(v22 + 72) = a18;
    *(_DWORD *)(v22 + 80) = v50;
    *(_DWORD *)(v22 + 84) = v49;
  }
  __swift_destroy_boxed_opaque_existential_1(v20);
  OUTLINED_FUNCTION_21_11();
}

#error "1AFDF6610: call analysis failed (funcsize=5)"

void sub_1AFDF661C()
{
  WeatherConditionBackgroundConfig.LightningConfig.encode(to:)();
}

uint64_t sub_1AFDF6638()
{
  sub_1B0009004();
  WeatherConditionBackgroundConfig.LightningConfig.hash(into:)();
  return sub_1B0009040();
}

void static WeatherConditionBackgroundConfig.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  float32x4_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  char v26;
  float v27;
  float v28;
  uint64_t v29;
  char v30;
  char v31;
  float v32;
  float v33;
  BOOL v34;
  char v36;
  float v37;
  float v38;
  int v39;
  BOOL v40;
  int v41;
  BOOL v42;
  char v43;
  float v44;
  float v45;
  uint64_t v46;
  char v47;
  char v48;
  float v49;
  float v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  float v55;
  float v56;
  char v58;
  float v59;
  float v60;
  uint64_t v61;
  char v62;
  char v63;
  float v64;
  float v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  char v70;
  float v71;
  float v72;
  BOOL v73;
  char v75;
  float v76;
  float v77;
  BOOL v78;
  BOOL v79;
  uint64_t v81;
  char v82;
  char v83;
  float v84;
  float v85;
  uint64_t v86;
  char v87;
  char v88;
  float v89;
  float v90;
  BOOL v91;
  char v93;
  float v94;
  float v95;
  BOOL v96;
  uint64_t v98;
  char v99;
  char v100;
  float v101;
  float v102;
  uint64_t v103;
  char v104;
  char v105;
  float v106;
  float v107;
  float32x4_t v109;
  float32x4_t v110;
  char v111;
  float v112;
  float v113;
  uint64_t v114;
  char v115;
  char v116;
  float v117;
  float v118;
  uint64_t v119;
  char v120;
  char v121;
  float v122;
  float v123;
  BOOL v124;
  BOOL v125;
  char v127;
  float v128;
  float v129;
  uint64_t v130;
  char v131;
  char v132;
  float v133;
  float v134;
  uint64_t v135;
  char v136;
  char v137;
  float v138;
  float v139;
  BOOL v140;
  char v142;
  float v143;
  float v144;
  uint64_t v145;
  char v146;
  char v147;
  float v148;
  float v149;
  uint64_t v150;
  char v151;
  char v152;
  float v153;
  float v154;
  BOOL v155;
  uint64_t v157;
  char v158;
  char v159;
  float v160;
  float v161;
  uint64_t v162;
  char v163;
  char v164;
  float v165;
  float v166;
  char v167;
  float v168;
  float v169;
  char v170;
  float v171;
  float v172;
  char v173;
  float v174;
  float v175;
  uint64_t v176;
  char v177;
  char v178;
  float v179;
  float v180;
  char v182;
  float v183;
  float v184;
  char v185;
  char v186;
  int v187;
  BOOL v188;
  BOOL v189;
  BOOL v190;
  uint64_t v192;
  char v193;
  char v194;
  float v195;
  float v196;
  uint64_t v197;
  char v198;
  char v199;
  float v200;
  float v201;
  char v203;
  float v204;
  float v205;
  char v206;
  char v207;
  int v208;
  BOOL v209;
  BOOL v210;
  BOOL v211;
  uint64_t v213;
  char v214;
  char v215;
  float v216;
  float v217;
  uint64_t v218;
  char v219;
  char v220;
  float v221;
  float v222;
  char v224;
  float v225;
  float v226;
  char v227;
  char v228;
  int v229;
  BOOL v230;
  BOOL v231;
  BOOL v232;
  uint64_t v234;
  char v235;
  char v236;
  float v237;
  float v238;
  uint64_t v239;
  char v240;
  char v241;
  float v242;
  float v243;
  char v245;
  float v246;
  float v247;
  char v248;
  char v249;
  int v250;
  BOOL v251;
  BOOL v252;
  BOOL v253;
  uint64_t v255;
  char v256;
  char v257;
  float v258;
  float v259;
  uint64_t v260;
  char v261;
  char v262;
  float v263;
  float v264;
  char v265;
  float v266;
  float v267;
  BOOL v268;
  BOOL v269;
  uint64_t v271;
  char v272;
  char v273;
  float v274;
  float v275;
  uint64_t v276;
  char v277;
  char v278;
  float v279;
  float v280;
  BOOL v281;
  BOOL v282;
  char v284;
  float v285;
  float v286;
  uint64_t v288;
  char v289;
  char v290;
  float v291;
  float v292;
  uint64_t v293;
  char v294;
  char v295;
  float v296;
  float v297;
  uint64_t v298;
  char v299;
  char v300;
  float v301;
  float v302;
  char v303;
  char v304;
  float v305;
  float v306;
  char v307;
  float v308;
  float v309;
  uint64_t v310;
  char v311;
  char v312;
  float v313;
  float v314;
  uint64_t v315;
  char v316;
  char v317;
  float v318;
  float v319;
  BOOL v320;
  BOOL v322;
  uint64_t v323;
  char v324;
  char v325;
  float v326;
  float v327;
  BOOL v328;
  BOOL v329;
  char v331;
  float v332;
  float v333;
  uint64_t v334;
  char v335;
  char v336;
  float v337;
  float v338;
  uint64_t v339;
  char v340;
  char v341;
  float v342;
  float v343;
  char v344;
  float v345;
  float v346;
  unsigned __int8 *v348;
  unsigned __int8 *v349;
  char v350;
  float *v351;
  float *v352;
  uint64_t v353;
  char v354;
  char v355;
  float v356;
  float v357;
  BOOL v358;
  BOOL v359;
  BOOL v360;
  uint64_t v362;
  char v363;
  char v364;
  float v365;
  float v366;
  float32x4_t v368;
  float32x4_t v369;
  char v371;
  float v372;
  float v373;
  uint64_t v375;
  char v376;
  char v377;
  float v378;
  float v379;
  BOOL v380;
  BOOL v381;
  BOOL v382;
  BOOL v383;
  uint64_t v385;
  char v386;
  char v387;
  float v388;
  float v389;
  char v391;
  char v392;
  char v393;
  float v394;
  float v395;
  BOOL v396;
  char v398;
  float v399;
  float v400;
  char v401;
  float v402;
  float v403;
  uint64_t v404;
  char v405;
  char v406;
  float v407;
  float v408;
  uint64_t v409;
  char v410;
  char v411;
  float v412;
  float v413;
  uint64_t v414;
  char v415;
  char v416;
  float v417;
  float v418;
  uint64_t v419;
  char v420;
  char v421;
  float v422;
  float v423;
  uint64_t v424;
  char v425;
  char v426;
  float v427;
  float v428;
  uint64_t v429;
  char v430;
  char v431;
  float v432;
  float v433;
  char v435;
  float v436;
  float v437;
  char v438;
  float v439;
  float v440;
  char v441;
  float v442;
  float v443;
  uint64_t v445;
  char v446;
  char v447;
  float v448;
  float v449;
  uint64_t v450;
  char v451;
  char v452;
  float v453;
  float v454;
  BOOL v455;
  BOOL v456;
  BOOL v457;
  uint64_t v459;
  char v460;
  char v461;
  float v462;
  float v463;
  BOOL v464;
  BOOL v465;
  BOOL v466;
  uint64_t v468;
  char v469;
  char v470;
  char v471;
  float v472;
  float v473;
  BOOL v474;
  char v475;
  uint64_t v476;
  uint64_t v477;
  float v478;
  float v479;
  float v480;
  float v481;
  unsigned int v482;
  unsigned int v483;
  uint64_t v484;
  float32x4_t v485;
  uint64_t v486;
  float v487;
  float v488;
  float v489;
  float v490;
  float v491;
  float v492;
  float v493;
  float v494;
  float v495;
  float v496;
  float v497;
  float v498;
  float v499;
  float v500;
  float v501;
  float v502;
  float v503;
  float v504;
  uint64_t v505;
  float32x4_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  int v510;
  float v511;
  float v512;
  float v513;
  float v514;
  uint64_t v515;
  uint64_t v516;
  float32x4_t v517;
  float v518;
  float v519;
  float v520;
  uint64_t v521;
  uint64_t v522;
  int v523;
  uint64_t v524;
  float v525;
  float v526;
  float v527;
  uint64_t v528;
  float v529;
  float v530;
  float v531;
  float v532;
  float v533;
  float v534;
  float v535;
  float v536;
  float v537;
  float v538;
  uint64_t v539;
  float v540;
  float v541;
  unint64_t v542;
  float v543;
  float v544;
  float v545;
  float v546;
  uint64_t v547;
  float v548;
  uint64_t v549;
  unint64_t v550;
  float v551;
  float v552;
  float v553;
  float v554;
  float v555;
  uint64_t v556;
  float v557;
  uint64_t v558;
  unint64_t v559;
  float v560;
  float v561;
  float v562;
  float v563;
  float32x4_t v564;
  float v565;
  uint64_t v566;
  float32x4_t v567;
  uint64_t v568;
  float v569;
  unint64_t v570;
  float v571;
  float v572;
  float v573;
  int v574;
  unint64_t v575;
  int v576;
  float v577;
  float v578;
  float v579;
  float v580;
  float v581;
  uint64_t v582;
  float v583;
  uint64_t v584;
  float v585;
  float v586;
  float v587;
  int v588;
  int v589;
  float v590;
  float v591;
  float v592;
  int v593;
  float v594;
  float v595;
  uint64_t v596;
  float v597;
  float v598;
  float v599;
  float v600;
  uint64_t v601;
  uint64_t v602;
  int v603;
  float v604;
  float v605;
  float v606;
  float v607;
  float v608;
  float v609;
  float v610;
  int v611;
  uint64_t v612;
  uint64_t v613;
  float v614;
  int v615;
  unsigned int v616;
  float v617;
  float v618;
  float v619;
  float v620;
  int v621;
  __int32 v622;
  __int32 v623;
  uint64_t v624;
  float32x4_t v625;
  uint64_t v626;
  float v627;
  float v628;
  float v629;
  float v630;
  uint64_t v631;
  float v632;
  float v633;
  float v634;
  float v635;
  float v636;
  float v637;
  float v638;
  float v639;
  float v640;
  float v641;
  float v642;
  float v643;
  float v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  float v648;
  float v649;
  float v650;
  float v651;
  float v652;
  float v653;
  float v654;
  float v655;
  float v656;
  float v657;
  float v658;
  float v659;
  float v660;
  float v661;
  float v662;
  float v663;
  float v664;
  float v665;
  float32x4_t v666;
  float32x4_t v667;
  float v668;
  float v669;
  float v670;
  float v671;
  float v672;
  uint64_t v673;
  double v674;
  char v675;
  double v676;
  uint64_t v677;
  unsigned __int8 v678[88];
  unsigned __int8 v679[96];

  OUTLINED_FUNCTION_62();
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = v2;
  v4 = (float32x4_t *)v1;
  v676 = *(double *)v1;
  v5 = v2 + 1629;
  v675 = *(_BYTE *)(v1 + 8);
  v677 = v2 + 384;
  v674 = *(double *)(v1 + 16);
  v6 = v1 + 1629;
  v673 = *(_QWORD *)(v1 + 24);
  v672 = *(float *)(v1 + 64);
  v671 = *(float *)(v1 + 68);
  v670 = *(float *)(v1 + 80);
  v668 = *(float *)(v1 + 100);
  v669 = *(float *)(v1 + 104);
  v665 = *(float *)(v1 + 108);
  v663 = *(float *)(v1 + 160);
  v661 = *(float *)(v1 + 224);
  v660 = *(float *)(v1 + 248);
  v657 = *(float *)(v1 + 264);
  v656 = *(float *)(v1 + 268);
  v655 = *(float *)(v1 + 272);
  v651 = *(float *)(v1 + 320);
  v650 = *(float *)(v1 + 324);
  v520 = *(float *)(v1 + 336);
  v523 = *(unsigned __int8 *)(v1 + 384);
  v524 = *(_QWORD *)(v1 + 388);
  v521 = *(_QWORD *)(v1 + 400);
  v522 = *(_QWORD *)(v1 + 408);
  v528 = *(_QWORD *)(v1 + 424);
  v549 = *(_QWORD *)(v1 + 744);
  v558 = *(_QWORD *)(v1 + 872);
  v568 = *(_QWORD *)(v1 + 1000);
  v582 = *(_QWORD *)(v1 + 1128);
  v588 = *(unsigned __int8 *)(v1 + 1236);
  v589 = *(unsigned __int8 *)(v1 + 1280);
  v596 = *(_QWORD *)(v1 + 1368);
  v603 = *(unsigned __int8 *)(v1 + 1432);
  v613 = *(_QWORD *)(v1 + 1512);
  v612 = *(_QWORD *)(v1 + 1520);
  v615 = *(unsigned __int8 *)(v1 + 1628);
  v511 = *(float *)(v1 + 340);
  v516 = *(_QWORD *)(v1 + 416);
  v517 = *(float32x4_t *)(v1 + 432);
  v525 = *(float *)(v1 + 496);
  v526 = *(float *)(v1 + 500);
  v527 = *(float *)(v1 + 504);
  v531 = *(float *)(v1 + 560);
  v532 = *(float *)(v1 + 564);
  v533 = *(float *)(v1 + 608);
  v534 = *(float *)(v1 + 612);
  v540 = *(float *)(v1 + 704);
  v544 = *(float *)(v1 + 728);
  v545 = *(float *)(v1 + 732);
  v548 = *(float *)(v1 + 832);
  v553 = *(float *)(v1 + 856);
  v554 = *(float *)(v1 + 860);
  v557 = *(float *)(v1 + 960);
  v562 = *(float *)(v1 + 984);
  v563 = *(float *)(v1 + 988);
  v569 = *(float *)(v1 + 1088);
  v577 = *(float *)(v1 + 1112);
  v578 = *(float *)(v1 + 1116);
  v583 = *(float *)(v1 + 1232);
  v585 = *(float *)(v1 + 1296);
  v586 = *(float *)(v1 + 1300);
  v587 = *(float *)(v1 + 1304);
  v590 = *(float *)(v1 + 1344);
  v591 = *(float *)(v1 + 1348);
  v592 = *(float *)(v1 + 1352);
  v605 = *(float *)(v1 + 1504);
  v606 = *(float *)(v1 + 1508);
  v607 = *(float *)(v1 + 1528);
  v608 = *(float *)(v1 + 1552);
  v609 = *(float *)(v1 + 1556);
  v610 = *(float *)(v1 + 1560);
  v667 = *(float32x4_t *)(v1 + 84);
  v614 = *(float *)(v1 + 1624);
  OUTLINED_FUNCTION_9_64(v678, (const void *)(v1 + 1656));
  v616 = v4[110].u8[0];
  v617 = v4[112].f32[0];
  v618 = v4[112].f32[1];
  v619 = v4[112].f32[2];
  v620 = v4[112].f32[3];
  v621 = *(unsigned __int8 *)(v6 + 195);
  v625 = *(float32x4_t *)(v6 + 199);
  v624 = *(_QWORD *)(v6 + 215);
  v622 = v4[115].i32[3];
  v626 = v4[116].i64[0];
  v623 = v4[116].i32[2];
  v627 = v4[117].f32[2];
  v628 = v4[119].f32[0];
  v629 = v4[119].f32[1];
  v630 = v4[119].f32[2];
  v631 = v4[120].i64[0];
  v632 = v4[120].f32[2];
  v633 = v4[122].f32[0];
  v635 = v4[123].f32[0];
  v634 = v4[124].f32[2];
  v645 = v4[137].i64[1];
  v646 = v4[142].i64[0];
  v647 = v4[144].i64[1];
  v7 = *(_QWORD *)(v3 + 24);
  v510 = *(unsigned __int8 *)(v3 + 384);
  v508 = *(_QWORD *)(v3 + 400);
  v509 = *(_QWORD *)(v3 + 408);
  v515 = *(_QWORD *)(v3 + 424);
  v539 = *(_QWORD *)(v3 + 744);
  v542 = *(_QWORD *)(v3 + 800);
  v547 = *(_QWORD *)(v3 + 872);
  v550 = *(_QWORD *)(v3 + 928);
  v556 = *(_QWORD *)(v3 + 1000);
  v559 = *(_QWORD *)(v3 + 1056);
  v566 = *(_QWORD *)(v3 + 1128);
  v570 = *(_QWORD *)(v3 + 1184);
  v574 = *(unsigned __int8 *)(v3 + 1236);
  v575 = *(_QWORD *)(v3 + 1272);
  v576 = *(unsigned __int8 *)(v3 + 1280);
  v584 = *(_QWORD *)(v3 + 1368);
  v593 = *(unsigned __int8 *)(v3 + 1432);
  v602 = *(_QWORD *)(v3 + 1512);
  v601 = *(_QWORD *)(v3 + 1520);
  v611 = *(unsigned __int8 *)(v3 + 1628);
  v636 = v4[132].f32[0];
  v637 = v4[134].f32[0];
  v638 = v4[137].f32[0];
  v639 = v4[138].f32[0];
  v640 = v4[138].f32[1];
  v641 = v4[140].f32[0];
  v642 = v4[140].f32[1];
  v643 = v4[140].f32[2];
  v644 = v4[140].f32[3];
  v567 = v4[76];
  v507 = *(_QWORD *)(v677 + 4);
  v8 = *(double *)v3;
  v9 = *(double *)(v3 + 16);
  v11 = *(float *)(v3 + 64);
  v10 = *(float *)(v3 + 68);
  v12 = *(float *)(v3 + 80);
  v666 = *(float32x4_t *)(v3 + 84);
  v14 = *(float *)(v3 + 100);
  v13 = *(float *)(v3 + 104);
  v664 = *(float *)(v3 + 108);
  v662 = *(float *)(v3 + 160);
  v659 = *(float *)(v3 + 224);
  v658 = *(float *)(v3 + 248);
  v652 = *(float *)(v3 + 264);
  v653 = *(float *)(v3 + 268);
  v654 = *(float *)(v3 + 272);
  v648 = *(float *)(v3 + 320);
  v649 = *(float *)(v3 + 324);
  v503 = *(float *)(v3 + 336);
  v504 = *(float *)(v3 + 340);
  v505 = *(_QWORD *)(v3 + 416);
  v506 = *(float32x4_t *)(v3 + 432);
  v512 = *(float *)(v3 + 496);
  v513 = *(float *)(v3 + 500);
  v514 = *(float *)(v3 + 504);
  v518 = *(float *)(v3 + 560);
  v519 = *(float *)(v3 + 564);
  v529 = *(float *)(v3 + 608);
  v530 = *(float *)(v3 + 612);
  v535 = *(float *)(v3 + 704);
  v536 = *(float *)(v3 + 728);
  v537 = *(float *)(v3 + 732);
  v538 = *(float *)(v3 + 832);
  v541 = *(float *)(v3 + 856);
  v543 = *(float *)(v3 + 860);
  v546 = *(float *)(v3 + 960);
  v551 = *(float *)(v3 + 984);
  v552 = *(float *)(v3 + 988);
  v555 = *(float *)(v3 + 1088);
  v560 = *(float *)(v3 + 1112);
  v561 = *(float *)(v3 + 1116);
  v564 = *(float32x4_t *)(v3 + 1216);
  v565 = *(float *)(v3 + 1232);
  v571 = *(float *)(v3 + 1296);
  v572 = *(float *)(v3 + 1300);
  v573 = *(float *)(v3 + 1304);
  v579 = *(float *)(v3 + 1344);
  v580 = *(float *)(v3 + 1348);
  v581 = *(float *)(v3 + 1352);
  v594 = *(float *)(v3 + 1504);
  v595 = *(float *)(v3 + 1508);
  v597 = *(float *)(v3 + 1528);
  v598 = *(float *)(v3 + 1552);
  v599 = *(float *)(v3 + 1556);
  v600 = *(float *)(v3 + 1560);
  v604 = *(float *)(v3 + 1624);
  OUTLINED_FUNCTION_9_64(v679, (const void *)(v3 + 1656));
  if (v676 != v8)
    goto LABEL_38;
  v15 = *(unsigned __int8 *)(v3 + 1760);
  v478 = *(float *)(v3 + 1792);
  v479 = *(float *)(v3 + 1796);
  v480 = *(float *)(v3 + 1800);
  v481 = *(float *)(v3 + 1804);
  v16 = *(unsigned __int8 *)(v5 + 195);
  v484 = *(_QWORD *)(v5 + 215);
  v485 = *(float32x4_t *)(v5 + 199);
  v482 = *(_DWORD *)(v3 + 1852);
  v486 = *(_QWORD *)(v3 + 1856);
  v483 = *(_DWORD *)(v3 + 1864);
  v487 = *(float *)(v3 + 1880);
  v488 = *(float *)(v3 + 1904);
  v489 = *(float *)(v3 + 1908);
  v17 = *(_QWORD *)(v3 + 1920);
  v490 = *(float *)(v3 + 1912);
  v491 = *(float *)(v3 + 1928);
  v492 = *(float *)(v3 + 1952);
  v493 = *(float *)(v3 + 1992);
  v494 = *(float *)(v3 + 1968);
  v18 = *(_QWORD *)(v3 + 2200);
  v19 = *(_QWORD *)(v3 + 2272);
  v20 = *(_QWORD *)(v3 + 2312);
  v495 = *(float *)(v3 + 2112);
  v496 = *(float *)(v3 + 2144);
  v497 = *(float *)(v3 + 2192);
  v498 = *(float *)(v3 + 2208);
  v499 = *(float *)(v3 + 2212);
  v500 = *(float *)(v3 + 2240);
  v501 = *(float *)(v3 + 2244);
  v502 = *(float *)(v3 + 2248);
  v21 = *(float *)(v3 + 2252);
  sub_1AFAD3884(v675);
  if ((v22 & 1) == 0)
    goto LABEL_38;
  v23 = v674 == v9 && v673 == v7;
  if (!v23)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v25 & 1) == 0)
    goto LABEL_11;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v24 == 2)
      break;
    while (1)
    {
      ++v24;
      if ((v26 & 1) != 0)
        break;
LABEL_11:
      if (v24 == 2)
        goto LABEL_38;
      v26 = 0;
    }
  }
  if (v27 != v28)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v30 & 1) == 0)
    goto LABEL_19;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v29 == 2)
      break;
    while (1)
    {
      ++v29;
      if ((v31 & 1) != 0)
        break;
LABEL_19:
      if (v29 == 2)
        goto LABEL_38;
      v31 = 0;
    }
  }
  v34 = v32 == v33 && v672 == v11;
  if (!v34 || v671 != v10)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v36 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  v39 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vcltzq_s32(vshlq_n_s32(vceqq_f32(v667, v666), 0x1FuLL)), (int8x16_t)xmmword_1B003B250));
  v40 = v37 == v38 && v670 == v12;
  v41 = ~v39 & 0xF;
  v42 = v40 && v41 == 0;
  if (!v42 || v668 != v14 || v669 != v13 || v665 != v664)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v43 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v44 != v45)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v47 & 1) == 0)
    goto LABEL_62;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v46 == 3)
      break;
    while (1)
    {
      ++v46;
      if ((v48 & 1) != 0)
        break;
LABEL_62:
      if (v46 == 3)
        goto LABEL_38;
      v48 = 0;
    }
  }
  if (v49 != v50)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v52 & 1) == 0)
    goto LABEL_70;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v51 == 3)
      break;
    while (1)
    {
      ++v51;
      if ((v53 & 1) != 0)
        break;
LABEL_70:
      if (v51 == 3)
        goto LABEL_38;
      v53 = 0;
    }
  }
  OUTLINED_FUNCTION_76_4();
  if ((v54 & 1) == 0)
    goto LABEL_38;
  if (v55 != v56 || v663 != v662)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v58 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v59 != v60)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v62 & 1) == 0)
    goto LABEL_92;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v61 == 3)
      break;
    while (1)
    {
      ++v61;
      if ((v63 & 1) != 0)
        break;
LABEL_92:
      if (v61 == 3)
        goto LABEL_38;
      v63 = 0;
    }
  }
  if (v64 != v65)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v67 & 1) == 0)
    goto LABEL_100;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v66 == 3)
      break;
    while (1)
    {
      ++v66;
      if ((v68 & 1) != 0)
        break;
LABEL_100:
      if (v66 == 3)
        goto LABEL_38;
      v68 = 0;
    }
  }
  OUTLINED_FUNCTION_96_3();
  if ((v70 & 1) == 0 || (v69 & 1) == 0)
    goto LABEL_38;
  v73 = v71 == v72 && v661 == v659;
  if (!v73 || v660 != v658)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v75 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  v78 = v76 == v77 && v657 == v652;
  v79 = v78 && v656 == v653;
  if (!v79 || v655 != v654)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v82 & 1) == 0)
    goto LABEL_136;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v81 == 3)
      break;
    while (1)
    {
      ++v81;
      if ((v83 & 1) != 0)
        break;
LABEL_136:
      if (v81 == 3)
        goto LABEL_38;
      v83 = 0;
    }
  }
  if (v84 != v85)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v87 & 1) == 0)
    goto LABEL_144;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v86 == 3)
      break;
    while (1)
    {
      ++v86;
      if ((v88 & 1) != 0)
        break;
LABEL_144:
      if (v86 == 3)
        goto LABEL_38;
      v88 = 0;
    }
  }
  v91 = v89 == v90 && v651 == v648;
  if (!v91 || v650 != v649)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v93 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  v96 = v94 == v95 && v520 == v503;
  if (!v96 || v511 != v504)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v99 & 1) == 0)
    goto LABEL_175;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v98 == 3)
      break;
    while (1)
    {
      ++v98;
      if ((v100 & 1) != 0)
        break;
LABEL_175:
      if (v98 == 3)
        goto LABEL_38;
      v100 = 0;
    }
  }
  if (v101 != v102)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v104 & 1) == 0)
    goto LABEL_183;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v103 == 3)
      break;
    while (1)
    {
      ++v103;
      if ((v105 & 1) != 0)
        break;
LABEL_183:
      if (v103 == 3)
        goto LABEL_38;
      v105 = 0;
    }
  }
  if (v106 != v107 || v523 != v510)
    goto LABEL_38;
  v109.i64[0] = v524;
  v109.i64[1] = v516;
  v110.i64[0] = v507;
  v110.i64[1] = v505;
  *(int8x8_t *)v109.f32 = vand_s8(vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(v109, v110), (int16x8_t)vceqq_f32(v517, v506))), 7uLL)), (int8x8_t)0x8040201008040201);
  v109.i8[0] = vaddv_s8(*(int8x8_t *)v109.f32);
  if (v109.i32[0] != 255 || v521 != v508 || v522 != v509 || v528 != v515)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v111 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v112 != v113)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v115 & 1) == 0)
    goto LABEL_208;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v114 == 3)
      break;
    while (1)
    {
      ++v114;
      if ((v116 & 1) != 0)
        break;
LABEL_208:
      if (v114 == 3)
        goto LABEL_38;
      v116 = 0;
    }
  }
  if (v117 != v118)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v120 & 1) == 0)
    goto LABEL_216;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v119 == 3)
      break;
    while (1)
    {
      ++v119;
      if ((v121 & 1) != 0)
        break;
LABEL_216:
      if (v119 == 3)
        goto LABEL_38;
      v121 = 0;
    }
  }
  v124 = v122 == v123 && v525 == v512;
  v125 = v124 && v526 == v513;
  if (!v125 || v527 != v514)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v127 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v128 != v129)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v131 & 1) == 0)
    goto LABEL_243;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v130 == 3)
      break;
    while (1)
    {
      ++v130;
      if ((v132 & 1) != 0)
        break;
LABEL_243:
      if (v130 == 3)
        goto LABEL_38;
      v132 = 0;
    }
  }
  if (v133 != v134)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v136 & 1) == 0)
    goto LABEL_251;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v135 == 3)
      break;
    while (1)
    {
      ++v135;
      if ((v137 & 1) != 0)
        break;
LABEL_251:
      if (v135 == 3)
        goto LABEL_38;
      v137 = 0;
    }
  }
  v140 = v138 == v139 && v531 == v518;
  if (!v140 || v532 != v519)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v142 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v143 != v144)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v146 & 1) == 0)
    goto LABEL_275;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v145 == 3)
      break;
    while (1)
    {
      ++v145;
      if ((v147 & 1) != 0)
        break;
LABEL_275:
      if (v145 == 3)
        goto LABEL_38;
      v147 = 0;
    }
  }
  if (v148 != v149)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v151 & 1) == 0)
    goto LABEL_283;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v150 == 3)
      break;
    while (1)
    {
      ++v150;
      if ((v152 & 1) != 0)
        break;
LABEL_283:
      if (v150 == 3)
        goto LABEL_38;
      v152 = 0;
    }
  }
  v155 = v153 == v154 && v533 == v529;
  if (!v155 || v534 != v530)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v158 & 1) == 0)
    goto LABEL_298;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v157 == 3)
      break;
    while (1)
    {
      ++v157;
      if ((v159 & 1) != 0)
        break;
LABEL_298:
      if (v157 == 3)
        goto LABEL_38;
      v159 = 0;
    }
  }
  if (v160 != v161)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v163 & 1) == 0)
    goto LABEL_306;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v162 == 3)
      break;
    while (1)
    {
      ++v162;
      if ((v164 & 1) != 0)
        break;
LABEL_306:
      if (v162 == 3)
        goto LABEL_38;
      v164 = 0;
    }
  }
  if (v165 != v166)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v167 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v168 != v169)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v170 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v171 != v172)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v173 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v174 != v175)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v177 & 1) == 0)
    goto LABEL_341;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v176 == 3)
      break;
    while (1)
    {
      ++v176;
      if ((v178 & 1) != 0)
        break;
LABEL_341:
      if (v176 == 3)
        goto LABEL_38;
      v178 = 0;
    }
  }
  if (v179 != v180 || v540 != v535)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v182 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v183 != v184)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v185 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_127_1();
  v188 = v186 && v544 == v536;
  v189 = v188 && v545 == v537;
  v190 = v189 && v187 == 0;
  if (!v190 || v549 != v539)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v193 & 1) == 0)
    goto LABEL_384;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v192 == 2)
      break;
    while (1)
    {
      ++v192;
      if ((v194 & 1) != 0)
        break;
LABEL_384:
      if (v192 == 2)
        goto LABEL_38;
      v194 = 0;
    }
  }
  if (v195 != v196 || !OUTLINED_FUNCTION_39_20(v542))
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v198 & 1) == 0)
    goto LABEL_393;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v197 == 3)
      break;
    while (1)
    {
      ++v197;
      if ((v199 & 1) != 0)
        break;
LABEL_393:
      if (v197 == 3)
        goto LABEL_38;
      v199 = 0;
    }
  }
  if (v200 != v201 || v548 != v538)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v203 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v204 != v205)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v206 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_127_1();
  v209 = v207 && v553 == v541;
  v210 = v209 && v554 == v543;
  v211 = v210 && v208 == 0;
  if (!v211 || v558 != v547)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v214 & 1) == 0)
    goto LABEL_436;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v213 == 2)
      break;
    while (1)
    {
      ++v213;
      if ((v215 & 1) != 0)
        break;
LABEL_436:
      if (v213 == 2)
        goto LABEL_38;
      v215 = 0;
    }
  }
  if (v216 != v217 || !OUTLINED_FUNCTION_39_20(v550))
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v219 & 1) == 0)
    goto LABEL_445;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v218 == 3)
      break;
    while (1)
    {
      ++v218;
      if ((v220 & 1) != 0)
        break;
LABEL_445:
      if (v218 == 3)
        goto LABEL_38;
      v220 = 0;
    }
  }
  if (v221 != v222 || v557 != v546)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v224 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v225 != v226)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v227 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_127_1();
  v230 = v228 && v562 == v551;
  v231 = v230 && v563 == v552;
  v232 = v231 && v229 == 0;
  if (!v232 || v568 != v556)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v235 & 1) == 0)
    goto LABEL_488;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v234 == 2)
      break;
    while (1)
    {
      ++v234;
      if ((v236 & 1) != 0)
        break;
LABEL_488:
      if (v234 == 2)
        goto LABEL_38;
      v236 = 0;
    }
  }
  if (v237 != v238 || !OUTLINED_FUNCTION_39_20(v559))
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v240 & 1) == 0)
    goto LABEL_497;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v239 == 3)
      break;
    while (1)
    {
      ++v239;
      if ((v241 & 1) != 0)
        break;
LABEL_497:
      if (v239 == 3)
        goto LABEL_38;
      v241 = 0;
    }
  }
  if (v242 != v243 || v569 != v555)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v245 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v246 != v247)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v248 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_127_1();
  v251 = v249 && v577 == v560;
  v252 = v251 && v578 == v561;
  v253 = v252 && v250 == 0;
  if (!v253 || v582 != v566)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v256 & 1) == 0)
    goto LABEL_540;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v255 == 2)
      break;
    while (1)
    {
      ++v255;
      if ((v257 & 1) != 0)
        break;
LABEL_540:
      if (v255 == 2)
        goto LABEL_38;
      v257 = 0;
    }
  }
  if (v258 != v259 || !OUTLINED_FUNCTION_39_20(v570))
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v261 & 1) == 0)
    goto LABEL_549;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v260 == 3)
      break;
    while (1)
    {
      ++v260;
      if ((v262 & 1) != 0)
        break;
LABEL_549:
      if (v260 == 3)
        goto LABEL_38;
      v262 = 0;
    }
  }
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vceqq_f32(v567, v564))), 0xFuLL))) & 1) != 0
    || v583 != v565
    || v263 != v264
    || ((v588 ^ v574) & 1) != 0
    || !OUTLINED_FUNCTION_39_20(v575)
    || ((v589 ^ v576) & 1) != 0)
  {
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v265 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  v268 = v266 == v267 && v585 == v571;
  v269 = v268 && v586 == v572;
  if (!v269 || v587 != v573)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v272 & 1) == 0)
    goto LABEL_581;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v271 == 3)
      break;
    while (1)
    {
      ++v271;
      if ((v273 & 1) != 0)
        break;
LABEL_581:
      if (v271 == 3)
        goto LABEL_38;
      v273 = 0;
    }
  }
  if (v274 != v275)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v277 & 1) == 0)
    goto LABEL_589;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v276 == 3)
      break;
    while (1)
    {
      ++v276;
      if ((v278 & 1) != 0)
        break;
LABEL_589:
      if (v276 == 3)
        goto LABEL_38;
      v278 = 0;
    }
  }
  v281 = v279 == v280 && v590 == v579;
  v282 = v281 && v591 == v580;
  if (!v282 || v592 != v581)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v284 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v285 != v286 || v596 != v584)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v289 & 1) == 0)
    goto LABEL_620;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v288 == 3)
      break;
    while (1)
    {
      ++v288;
      if ((v290 & 1) != 0)
        break;
LABEL_620:
      if (v288 == 3)
        goto LABEL_38;
      v290 = 0;
    }
  }
  if (v291 != v292)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v294 & 1) == 0)
    goto LABEL_628;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v293 == 3)
      break;
    while (1)
    {
      ++v293;
      if ((v295 & 1) != 0)
        break;
LABEL_628:
      if (v293 == 3)
        goto LABEL_38;
      v295 = 0;
    }
  }
  if (v296 != v297)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v299 & 1) == 0)
    goto LABEL_636;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v298 == 3)
      break;
    while (1)
    {
      ++v298;
      if ((v300 & 1) != 0)
        break;
LABEL_636:
      if (v298 == 3)
        goto LABEL_38;
      v300 = 0;
    }
  }
  if (v301 != v302)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v303 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_76_4();
  if ((v304 & 1) == 0 || v305 != v306 || ((v603 ^ v593) & 1) != 0)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v307 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v308 != v309)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v311 & 1) == 0)
    goto LABEL_664;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v310 == 3)
      break;
    while (1)
    {
      ++v310;
      if ((v312 & 1) != 0)
        break;
LABEL_664:
      if (v310 == 3)
        goto LABEL_38;
      v312 = 0;
    }
  }
  if (v313 != v314)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v316 & 1) == 0)
    goto LABEL_672;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v315 == 3)
      break;
    while (1)
    {
      ++v315;
      if ((v317 & 1) != 0)
        break;
LABEL_672:
      if (v315 == 3)
        goto LABEL_38;
      v317 = 0;
    }
  }
  v320 = v318 == v319 && v605 == v594;
  if (!v320 || v606 != v595)
    goto LABEL_38;
  v322 = v613 == v602 && v612 == v601;
  if (!v322 && (sub_1B0008FB0() & 1) == 0 || v607 != v597)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v324 & 1) == 0)
    goto LABEL_693;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v323 == 3)
      break;
    while (1)
    {
      ++v323;
      if ((v325 & 1) != 0)
        break;
LABEL_693:
      if (v323 == 3)
        goto LABEL_38;
      v325 = 0;
    }
  }
  v328 = v326 == v327 && v608 == v598;
  v329 = v328 && v609 == v599;
  if (!v329 || v610 != v600)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v331 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v332 != v333)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v335 & 1) == 0)
    goto LABEL_720;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v334 == 3)
      break;
    while (1)
    {
      ++v334;
      if ((v336 & 1) != 0)
        break;
LABEL_720:
      if (v334 == 3)
        goto LABEL_38;
      v336 = 0;
    }
  }
  if (v337 != v338)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v340 & 1) == 0)
    goto LABEL_728;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v339 == 3)
      break;
    while (1)
    {
      ++v339;
      if ((v341 & 1) != 0)
        break;
LABEL_728:
      if (v339 == 3)
        goto LABEL_38;
      v341 = 0;
    }
  }
  if (v342 != v343)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v344 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v345 != v346 || v614 != v604)
    goto LABEL_38;
  if (((v615 ^ v611) & 1) != 0)
    goto LABEL_38;
  v348 = (unsigned __int8 *)OUTLINED_FUNCTION_125_2();
  static WeatherConditionBackgroundConfig.Layers.== infix(_:_:)(v348, v349);
  if ((v350 & 1) == 0)
    goto LABEL_38;
  if (!static WeatherConditionBackgroundConfig.LightningConfig.== infix(_:_:)(v678, v679))
    goto LABEL_38;
  v351 = (float *)OUTLINED_FUNCTION_125_2();
  if (!static HazeEffect.== infix(_:_:)(v351, v352) || (sub_1AFC0BA8C(v616, v15) & 1) == 0)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v354 & 1) == 0)
    goto LABEL_754;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v353 == 2)
      break;
    while (1)
    {
      ++v353;
      if ((v355 & 1) != 0)
        break;
LABEL_754:
      if (v353 == 2)
        goto LABEL_38;
      v355 = 0;
    }
  }
  v358 = v356 == v357 && v617 == v478;
  v359 = v358 && v618 == v479;
  v360 = v359 && v619 == v480;
  if (!v360 || v620 != v481)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v363 & 1) == 0)
    goto LABEL_775;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v362 == 2)
      break;
    while (1)
    {
      ++v362;
      if ((v364 & 1) != 0)
        break;
LABEL_775:
      if (v362 == 2)
        goto LABEL_38;
      v364 = 0;
    }
  }
  if (v365 != v366 || v621 != v16)
    goto LABEL_38;
  v368.i64[0] = v624;
  v368.i64[1] = __PAIR64__(v623, v622);
  v369.i64[0] = v484;
  v369.i64[1] = __PAIR64__(v483, v482);
  *(int8x8_t *)v368.f32 = vand_s8(vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(v625, v485), (int16x8_t)vceqq_f32(v368, v369))), 7uLL)), (int8x8_t)0x8040201008040201);
  v368.i8[0] = vaddv_s8(*(int8x8_t *)v368.f32);
  if (v368.i32[0] != 255 || v626 != v486)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v371 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v372 != v373 || v627 != v487)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v376 & 1) == 0)
    goto LABEL_805;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v375 == 3)
      break;
    while (1)
    {
      ++v375;
      if ((v377 & 1) != 0)
        break;
LABEL_805:
      if (v375 == 3)
        goto LABEL_38;
      v377 = 0;
    }
  }
  v380 = v378 == v379 && v628 == v488;
  v381 = v380 && v629 == v489;
  v382 = v381 && v630 == v490;
  v383 = v382 && v631 == v17;
  if (!v383 || v632 != v491)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v386 & 1) == 0)
    goto LABEL_829;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v385 == 3)
      break;
    while (1)
    {
      ++v385;
      if ((v387 & 1) != 0)
        break;
LABEL_829:
      if (v385 == 3)
        goto LABEL_38;
      v387 = 0;
    }
  }
  if (v388 != v389 || v633 != v492)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v391 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  OUTLINED_FUNCTION_96_3();
  if ((v393 & 1) == 0 || (v392 & 1) == 0)
    goto LABEL_38;
  v396 = v394 == v395 && v635 == v494;
  if (!v396 || v634 != v493)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v398 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v399 != v400)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v401 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v402 != v403)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v405 & 1) == 0)
    goto LABEL_877;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v404 == 3)
      break;
    while (1)
    {
      ++v404;
      if ((v406 & 1) != 0)
        break;
LABEL_877:
      if (v404 == 3)
        goto LABEL_38;
      v406 = 0;
    }
  }
  if (v407 != v408)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v410 & 1) == 0)
    goto LABEL_885;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v409 == 3)
      break;
    while (1)
    {
      ++v409;
      if ((v411 & 1) != 0)
        break;
LABEL_885:
      if (v409 == 3)
        goto LABEL_38;
      v411 = 0;
    }
  }
  if (v412 != v413)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v415 & 1) == 0)
    goto LABEL_893;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v414 == 3)
      break;
    while (1)
    {
      ++v414;
      if ((v416 & 1) != 0)
        break;
LABEL_893:
      if (v414 == 3)
        goto LABEL_38;
      v416 = 0;
    }
  }
  if (v417 != v418)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v420 & 1) == 0)
    goto LABEL_901;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v419 == 3)
      break;
    while (1)
    {
      ++v419;
      if ((v421 & 1) != 0)
        break;
LABEL_901:
      if (v419 == 3)
        goto LABEL_38;
      v421 = 0;
    }
  }
  if (v422 != v423)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v425 & 1) == 0)
    goto LABEL_909;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v424 == 3)
      break;
    while (1)
    {
      ++v424;
      if ((v426 & 1) != 0)
        break;
LABEL_909:
      if (v424 == 3)
        goto LABEL_38;
      v426 = 0;
    }
  }
  if (v427 != v428)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v430 & 1) == 0)
    goto LABEL_917;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v429 == 3)
      break;
    while (1)
    {
      ++v429;
      if ((v431 & 1) != 0)
        break;
LABEL_917:
      if (v429 == 3)
        goto LABEL_38;
      v431 = 0;
    }
  }
  if (v432 != v433 || v636 != v495)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v435 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v436 != v437)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v438 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v439 != v440)
    goto LABEL_38;
  OUTLINED_FUNCTION_35_27();
  do
  {
    while ((v441 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_58();
      if (v23)
        goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_83();
    OUTLINED_FUNCTION_11_88();
  }
  while (!v23);
  if (v442 != v443 || v637 != v496)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v446 & 1) == 0)
    goto LABEL_960;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v445 == 3)
      break;
    while (1)
    {
      ++v445;
      if ((v447 & 1) != 0)
        break;
LABEL_960:
      if (v445 == 3)
        goto LABEL_38;
      v447 = 0;
    }
  }
  if (v448 != v449)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v451 & 1) == 0)
    goto LABEL_968;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v450 == 3)
      break;
    while (1)
    {
      ++v450;
      if ((v452 & 1) != 0)
        break;
LABEL_968:
      if (v450 == 3)
        goto LABEL_38;
      v452 = 0;
    }
  }
  v455 = v453 == v454 && v638 == v497;
  v456 = v455 && v645 == v18;
  v457 = v456 && v639 == v498;
  if (!v457 || v640 != v499)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v460 & 1) == 0)
    goto LABEL_989;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v459 == 2)
      break;
    while (1)
    {
      ++v459;
      if ((v461 & 1) != 0)
        break;
LABEL_989:
      if (v459 == 2)
        goto LABEL_38;
      v461 = 0;
    }
  }
  v464 = v462 == v463 && v641 == v500;
  v465 = v464 && v642 == v501;
  v466 = v465 && v643 == v502;
  if (!v466 || v644 != v21)
    goto LABEL_38;
  OUTLINED_FUNCTION_30_49();
  if ((v469 & 1) == 0)
    goto LABEL_1010;
  while (1)
  {
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_14_93();
    OUTLINED_FUNCTION_13_95();
    if (v468 == 3)
      break;
    while (1)
    {
      ++v468;
      if ((v470 & 1) != 0)
        break;
LABEL_1010:
      if (v468 == 3)
        goto LABEL_38;
      v470 = 0;
    }
  }
  OUTLINED_FUNCTION_76_4();
  if ((v471 & 1) != 0
    && (v472 == v473 ? (v474 = v646 == v19) : (v474 = 0), v474 && (sub_1AFC61F14(v647, v20), (v475 & 1) != 0)))
  {
    OUTLINED_FUNCTION_49_0();
    sub_1AFC61F14(v476, v477);
  }
  else
  {
LABEL_38:
    OUTLINED_FUNCTION_49_0();
  }
}

