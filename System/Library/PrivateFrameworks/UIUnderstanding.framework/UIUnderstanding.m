void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t type metadata accessor for FocusElementInput()
{
  return objc_opt_self();
}

uint64_t sub_2496CE820()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FocusElementOutput()
{
  return objc_opt_self();
}

uint64_t sub_2496CE864()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FocusElement()
{
  return objc_opt_self();
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879CE8);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879CF0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2496CE8E0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2496CE900(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879CF8);
}

void type metadata accessor for CIContextOption(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D00);
}

void type metadata accessor for IOSurfacePropertyKey(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D08);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2496CE970(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2496CE990(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D10);
}

uint64_t sub_2496CE9D0(uint64_t a1, uint64_t a2)
{
  return sub_2496CEB2C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2496CE9F0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_24972CBA0();
  *a2 = 0;
  return result;
}

uint64_t sub_2496CEA64(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_24972CBAC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2496CEAE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_24972CBB8();
  v2 = sub_24972CB94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2496CEB20(uint64_t a1, uint64_t a2)
{
  return sub_2496CEB2C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2496CEB2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24972CBB8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2496CEB68()
{
  sub_24972CBB8();
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496CEBA8()
{
  uint64_t v0;

  sub_24972CBB8();
  sub_24972D2B4();
  sub_24972CC24();
  v0 = sub_24972D2D8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2496CEC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24972CBB8();
  v2 = v1;
  if (v0 == sub_24972CBB8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2496CECA8()
{
  sub_2496CED84(&qword_257879D58, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E844);
  sub_2496CED84(&qword_257879D60, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E640);
  return sub_24972D104();
}

uint64_t sub_2496CED2C()
{
  return sub_2496CED84(&qword_257879D18, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E608);
}

uint64_t sub_2496CED58()
{
  return sub_2496CED84(&qword_257879D20, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E5E0);
}

uint64_t sub_2496CED84(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BCF7648](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2496CEDC4()
{
  sub_2496CED84(&qword_257879D48, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E800);
  sub_2496CED84(&qword_257879D50, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E754);
  return sub_24972D104();
}

uint64_t sub_2496CEE48()
{
  return sub_2496CED84(&qword_257879D28, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E718);
}

uint64_t sub_2496CEE74()
{
  return sub_2496CED84(&qword_257879D30, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E6EC);
}

uint64_t sub_2496CEEA0()
{
  return sub_2496CED84(&qword_257879D38, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E788);
}

uint64_t sub_2496CEECC()
{
  return sub_2496CED84(&qword_257879D40, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E670);
}

uint64_t sub_2496CEEF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24972CB94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2496CEF3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24972CBB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2496CEF64()
{
  sub_2496CED84(&qword_257879DA0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972EA18);
  sub_2496CED84(&qword_257879DA8, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972E96C);
  return sub_24972D104();
}

void type metadata accessor for vImageConverter(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D68);
}

uint64_t initializeBufferWithCopyOfBuffer for CenterNetPrediction.ClickabilityBox(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2496CF040(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2496CF09C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for vImage_CGImageFormat(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D70);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D78);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879D80);
}

uint64_t sub_2496CF134()
{
  return sub_2496CED84(&qword_257879D88, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972E930);
}

uint64_t sub_2496CF160()
{
  return sub_2496CED84(&qword_257879D90, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972E904);
}

uint64_t sub_2496CF18C()
{
  return sub_2496CED84(&qword_257879D98, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972E9A0);
}

void type metadata accessor for CGColorRenderingIntent(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879DB0);
}

void type metadata accessor for CGBitmapInfo(uint64_t a1)
{
  sub_2496CF1F4(a1, &qword_257879DB8);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_2496CF1F4(a1, (unint64_t *)&unk_257879DC0);
}

void sub_2496CF1F4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

id sub_2496CF2D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  BOOL v3;
  _QWORD *v6;

  v3 = a1 == 0x705F6E6565726373 && a2 == 0xEA0000000000736FLL;
  if (v3 || (sub_24972D1DC() & 1) != 0)
  {
    v6 = v2 + 2;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0x6C5F6E6565726373 && a2 == 0xEC0000006C656261 || (sub_24972D1DC() & 1) != 0)
  {
    v6 = v2 + 3;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0x725F6E6565726373 && a2 == 0xEB000000006E6E63 || (sub_24972D1DC() & 1) != 0)
  {
    v6 = v2 + 4;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0x5F676E6964646170 && a2 == 0xEC0000006B73616DLL || (sub_24972D1DC() & 1) != 0)
  {
    v6 = v2 + 5;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_2496CF500()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerPortraitInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerPortraitOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerPortrait()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerSquareInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerSquareOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TwinEmbeddingTransformerSquare()
{
  return objc_opt_self();
}

BOOL sub_2496CF924(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2496CF938()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

uint64_t sub_2496CF97C()
{
  return sub_24972D2C0();
}

uint64_t sub_2496CF9A4()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

uint64_t *sub_2496CF9E4@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_2496CF9FC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2496CFA08()
{
  return 1;
}

uint64_t sub_2496CFA10()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

uint64_t sub_2496CFA50()
{
  return sub_24972D2C0();
}

uint64_t sub_2496CFA74()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

void sub_2496CFAC0(_QWORD *inited, void *a2, void *a3, id a4)
{
  uint64_t v4;
  int v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  _QWORD v37[2];

  v37[1] = *MEMORY[0x24BDAC8D0];
  v9 = *(unsigned __int8 *)(v4 + 40);
  if (v9 != 2)
  {
    if (v9 != 1)
      goto LABEL_13;
    v4 = *(_QWORD *)(v4 + 16);
    if (!v4)
      goto LABEL_13;
    type metadata accessor for TwinEmbeddingTransformerPortraitInput();
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = inited;
    v10[5] = a4;
    v11 = objc_allocWithZone(MEMORY[0x24BDC0018]);
    v12 = a2;
    v13 = a3;
    v14 = inited;
    v15 = a4;
    swift_retain();
    v16 = objc_msgSend(v11, sel_init);
    v17 = *(void **)(v4 + 16);
    v37[0] = 0;
    v18 = objc_msgSend(v17, sel_predictionFromFeatures_options_error_, v10, v16, v37);
    a2 = (void *)v37[0];
    if (!v18)
    {
LABEL_14:
      v36 = a2;
      sub_24972C8AC();

      swift_willThrow();
      swift_release();
      swift_release();

      return;
    }
    a3 = v18;
    type metadata accessor for TwinEmbeddingTransformerPortraitOutput();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = a3;
    v19 = a2;
    swift_release();

    v20 = (void *)sub_24972CB94();
    a4 = objc_msgSend(a3, sel_featureValueForName_, v20);

    if (!a4)
    {
      __break(1u);
      goto LABEL_16;
    }
    v21 = objc_msgSend(a4, sel_multiArrayValue);

    if (v21)
    {
LABEL_12:
      swift_release();
      swift_release();
      return;
    }
    __break(1u);
  }
  v22 = *(_QWORD *)(v4 + 24);
  if (!v22)
  {
LABEL_13:
    sub_2496D1C4C();
    swift_allocError();
    swift_willThrow();
    return;
  }
  type metadata accessor for TwinEmbeddingTransformerSquareInput();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a2;
  v23[3] = a3;
  v23[4] = inited;
  v23[5] = a4;
  v24 = objc_allocWithZone(MEMORY[0x24BDC0018]);
  v25 = a2;
  v26 = a3;
  v27 = inited;
  v28 = a4;
  swift_retain();
  v16 = objc_msgSend(v24, sel_init);
  v29 = *(void **)(v22 + 16);
  v37[0] = 0;
  v30 = objc_msgSend(v29, sel_predictionFromFeatures_options_error_, v23, v16, v37);
  a2 = (void *)v37[0];
  if (!v30)
    goto LABEL_14;
  v31 = v30;
  type metadata accessor for TwinEmbeddingTransformerSquareOutput();
  *(_QWORD *)(swift_initStackObject() + 16) = v31;
  v32 = a2;
  swift_release();

  v33 = (void *)sub_24972CB94();
  v34 = objc_msgSend(v31, sel_featureValueForName_, v33);

  if (v34)
  {
    v35 = objc_msgSend(v34, sel_multiArrayValue);

    if (v35)
      goto LABEL_12;
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_2496CFE28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(v1 + 40) || (v2 = *(_QWORD *)(v1 + 32)) == 0)
  {
    sub_2496D1C4C();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v4 = (void *)objc_opt_self();
  v22[0] = 0;
  v5 = a1;
  swift_retain();
  v6 = objc_msgSend(v4, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v5, 224, 224, 32, 0, v22);
  if (!v6)
  {
    v20 = v22[0];
    sub_24972C8AC();

    swift_willThrow();
    swift_release();

    return;
  }
  v7 = v6;
  v8 = v22[0];

  v9 = objc_msgSend(v7, sel_imageBufferValue);
  if (v9)
  {
    type metadata accessor for BiEncoderCNNInput();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;

    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
    v12 = *(void **)(v2 + 16);
    v22[0] = 0;
    v13 = objc_msgSend(v12, sel_predictionFromFeatures_options_error_, v10, v11, v22);
    v14 = v22[0];
    if (!v13)
    {
      v21 = v22[0];
      sub_24972C8AC();

      swift_willThrow();
      swift_release();
      swift_release();

      return;
    }
    v15 = v13;
    type metadata accessor for BiEncoderCNNOutput();
    *(_QWORD *)(swift_initStackObject() + 16) = v15;
    v16 = v14;
    swift_release();

    v17 = (void *)sub_24972CB94();
    v18 = objc_msgSend(v15, sel_featureValueForName_, v17);

    if (v18)
    {
      v19 = objc_msgSend(v18, sel_multiArrayValue);

      if (v19)
      {
        swift_release();
        swift_release();
        return;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t sub_2496D00F4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScreenSimilarity()
{
  return objc_opt_self();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenSimilarityModelType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSimilarityModelType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2496D0230 + 4 * byte_24972EC45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2496D0264 + 4 * byte_24972EC40[v4]))();
}

uint64_t sub_2496D0264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D026C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496D0274);
  return result;
}

uint64_t sub_2496D0280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496D0288);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2496D028C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D0294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D02A0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2496D02AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScreenSimilarityModelType()
{
  return &type metadata for ScreenSimilarityModelType;
}

unint64_t sub_2496D02C8()
{
  unint64_t result;

  result = qword_257879E30;
  if (!qword_257879E30)
  {
    result = MEMORY[0x24BCF7648](&unk_24972ED54, &type metadata for ScreenSimilarityModelType);
    atomic_store(result, (unint64_t *)&qword_257879E30);
  }
  return result;
}

id sub_2496D030C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2496D1B4C();
  v4 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_24972C8AC();

    swift_willThrow();
  }
  return v5;
}

void sub_2496D03F4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double MinX;
  double MinY;
  double Width;
  double Height;
  double v27;
  double v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  double v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58[4];
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v54 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E58);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E48);
  v57 = *(_QWORD *)(v14 - 8);
  v15 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v56 = (char *)&v52 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v52 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v53 = (char *)&v52 - v22;
  v59.origin.x = a1;
  v59.origin.y = a2;
  v59.size.width = a3;
  v59.size.height = a4;
  MinX = CGRectGetMinX(v59);
  v60.origin.x = a1;
  v60.origin.y = a2;
  v60.size.width = a3;
  v60.size.height = a4;
  MinY = CGRectGetMinY(v60);
  v61.origin.x = a1;
  v61.origin.y = a2;
  v61.size.width = a3;
  v61.size.height = a4;
  Width = CGRectGetWidth(v61);
  v62.origin.x = a1;
  v62.origin.y = a2;
  v62.size.width = a3;
  v62.size.height = a4;
  Height = CGRectGetHeight(v62);
  v27 = (MinX + MinX + Width) * 0.5 * a5;
  if (v27 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v28 = (MinY + MinY + Height) * 0.5 * v54;
  if ((*(_QWORD *)&v27 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v28 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_20;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v30 = (uint64_t)v27;
  v31 = (uint64_t)v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E60);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24972EE40;
  *(_QWORD *)(v32 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E68);
  *(_QWORD *)(v32 + 64) = sub_2496D1BCC(&qword_257879E70, &qword_257879E68, MEMORY[0x24BDBFF08]);
  *(_QWORD *)(v32 + 32) = 0;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E78);
  *(_QWORD *)(v32 + 96) = v33;
  v34 = sub_2496D1BCC(&qword_257879E80, &qword_257879E78, MEMORY[0x24BDBFE28]);
  *(_QWORD *)(v32 + 72) = v31;
  *(_QWORD *)(v32 + 80) = v31;
  *(_QWORD *)(v32 + 136) = v33;
  *(_QWORD *)(v32 + 144) = v34;
  *(_QWORD *)(v32 + 104) = v34;
  *(_QWORD *)(v32 + 112) = v30;
  *(_QWORD *)(v32 + 120) = v30;
  v35 = sub_2496D1BCC(&qword_257879E88, &qword_257879E48, MEMORY[0x24BDBFD50]);
  v36 = v11;
  v37 = v53;
  v54 = *(double *)&v35;
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v38 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v38(v21, v37, v14);
  sub_2496D1BCC(&qword_257879E90, &qword_257879E48, MEMORY[0x24BDBFD58]);
  sub_24972CC78();
  v39 = &v13[*(int *)(v36 + 36)];
  sub_2496D1BCC(&qword_257879E98, &qword_257879E48, MEMORY[0x24BDBFD60]);
  v40 = *(_QWORD *)v39;
  sub_24972CD98();
  v41 = (char *)MEMORY[0x24BEE4AF8];
  if (v40 != v58[0])
  {
    v42 = v56;
    do
    {
      v43 = (void (*)(uint64_t *, _QWORD))sub_24972CDB0();
      ((void (*)(char *))v38)(v42);
      v43(v58, 0);
      v38(v21, v13, v14);
      sub_24972CDA4();
      v44 = v57;
      v45 = *(void (**)(char *, uint64_t))(v57 + 8);
      v45(v21, v14);
      v46 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      v47 = v55;
      v46(v55, v42, v14);
      sub_24972CA44();
      v48 = v58[0];
      v45(v47, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_24970A52C(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      v50 = *((_QWORD *)v41 + 2);
      v49 = *((_QWORD *)v41 + 3);
      if (v50 >= v49 >> 1)
        v41 = sub_24970A52C((char *)(v49 > 1), v50 + 1, 1, v41);
      *((_QWORD *)v41 + 2) = v50 + 1;
      *(_DWORD *)&v41[4 * v50 + 32] = v48;
      v51 = *(_QWORD *)v39;
      sub_24972CD98();
    }
    while (v51 != v58[0]);
  }
  sub_2496D1C0C((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v14);
}

uint64_t sub_2496D0930(void **p_ivar_lyt, uint64_t a2, void *a3, void *a4, void *a5)
{
  CGFloat MinX;
  double v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  double *v19;
  char v20;
  void **v21;
  char *v22;
  double *v23;
  double v24;
  double v25;
  CGRect *v26;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  void **v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  void **v90;
  double v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  void *v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  __int128 v101;
  void *v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v97 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v94 = v13;
  sub_24972C9F0();
  v14 = sub_24972C9D8();
  if (*(_QWORD *)(v14 + 16) < 3uLL)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  MinX = *(double *)(v14 + 48);
  swift_bridgeObjectRelease();
  v15 = sub_24972C9D8();
  if (*(_QWORD *)(v15 + 16) < 4uLL)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v6 = *(double *)(v15 + 56);
  swift_bridgeObjectRelease();
  v95 = a4;
  v89 = v10;
  v88 = v11;
  if ((unint64_t)p_ivar_lyt >> 62)
  {
LABEL_31:
    v92 = (unint64_t)p_ivar_lyt & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v98 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v92 = (unint64_t)p_ivar_lyt & 0xFFFFFFFFFFFFFF8;
  v98 = *(_QWORD *)(((unint64_t)p_ivar_lyt & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v16 = 0;
  v91 = (double)*(uint64_t *)&MinX;
  v6 = (double)*(uint64_t *)&v6;
  v93 = (unint64_t)p_ivar_lyt & 0xC000000000000001;
  v87 = p_ivar_lyt;
  v90 = p_ivar_lyt + 4;
  p_ivar_lyt = &ElementDetectionTV.ivar_lyt;
  v96 = a3;
  v101 = xmmword_24972EE50;
  do
  {
    if (v16 >= v98)
    {
      sub_2496D1B4C();
      v37 = 0;
      v38 = p_ivar_lyt;
      v39 = v95;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = v101;
        *(_QWORD *)(v40 + 32) = sub_24972CD80();
        *(_QWORD *)(v40 + 40) = sub_24972CD80();
        *(_QWORD *)(v40 + 48) = sub_24972CD80();
        v102 = (void *)v40;
        sub_24972CCE4();
        v41 = (void *)sub_24972CEC4();
        v42 = (void *)sub_24972CCCC();
        swift_bridgeObjectRelease();
        objc_msgSend(v39, (SEL)v38 + 2632, v41, v42);

        ++v37;
      }
      while (v37 != 14);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v101;
      *(_QWORD *)(v43 + 32) = sub_24972CD80();
      *(_QWORD *)(v43 + 40) = sub_24972CD80();
      *(_QWORD *)(v43 + 48) = sub_24972CD80();
      v102 = (void *)v43;
      sub_24972CCE4();
      v44 = (void *)sub_24972CEC4();
      v45 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      v46 = v97;
      objc_msgSend(v97, (SEL)v38 + 2632, v44, v45);

      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v101;
      *(_QWORD *)(v47 + 32) = sub_24972CD80();
      *(_QWORD *)(v47 + 40) = sub_24972CD80();
      *(_QWORD *)(v47 + 48) = sub_24972CD80();
      v102 = (void *)v47;
      sub_24972CCE4();
      v48 = (void *)sub_24972CEC4();
      v49 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, (SEL)v38 + 2632, v48, v49);

      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v101;
      *(_QWORD *)(v50 + 32) = sub_24972CD80();
      *(_QWORD *)(v50 + 40) = sub_24972CD80();
      *(_QWORD *)(v50 + 48) = sub_24972CD80();
      v102 = (void *)v50;
      sub_24972CCE4();
      v51 = (void *)sub_24972CEC4();
      v52 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, (SEL)v38 + 2632, v51, v52);

      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v101;
      *(_QWORD *)(v53 + 32) = sub_24972CD80();
      *(_QWORD *)(v53 + 40) = sub_24972CD80();
      *(_QWORD *)(v53 + 48) = sub_24972CD80();
      v102 = (void *)v53;
      sub_24972CCE4();
      v54 = (void *)sub_24972CEC4();
      v55 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, (SEL)v38 + 2632, v54, v55);

      v56 = 0;
      p_ivar_lyt = v38;
      a3 = v96;
      do
      {
        v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = v101;
        *(_QWORD *)(v57 + 32) = sub_24972CD80();
        *(_QWORD *)(v57 + 40) = sub_24972CD80();
        *(_QWORD *)(v57 + 48) = sub_24972CD80();
        v102 = (void *)v57;
        sub_24972CCE4();
        v58 = (void *)sub_24972CEC4();
        v59 = (void *)sub_24972CCCC();
        swift_bridgeObjectRelease();
        objc_msgSend(a3, (SEL)p_ivar_lyt + 2632, v58, v59);

        ++v56;
      }
      while (v56 != 128);
    }
    else
    {
      if (v93)
      {
        v17 = (char *)MEMORY[0x24BCF6CE8](v16, v87);
      }
      else
      {
        if ((unint64_t)v16 >= *(_QWORD *)(v92 + 16))
        {
          __break(1u);
          goto LABEL_29;
        }
        v17 = v90[v16];
      }
      v18 = v17;
      v19 = (double *)&v17[OBJC_IVAR___UIObjectCompat_normalizedSquaredRect];
      swift_beginAccess();
      v20 = *((_BYTE *)v19 + 32);
      v100 = v18;
      if ((v20 & 1) != 0)
      {
        v21 = (void **)&v18[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v22 = (char *)*v21;
        v23 = (double *)((char *)*v21 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
        swift_beginAccess();
        v24 = *v23;
        v25 = v23[1];
        v26 = (CGRect *)&v22[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        x = v26->origin.x;
        y = v26->origin.y;
        width = v26->size.width;
        height = v26->size.height;
        v31 = v22;
        v103.origin.x = x;
        v103.origin.y = y;
        v103.size.width = width;
        v103.size.height = height;
        v32 = CGRectGetMinX(v103) / v24;
        v33 = CGRectGetMinY(*v26) / v25;
        v34 = CGRectGetWidth(*v26) / v24;
        v35 = CGRectGetHeight(*v26);

        v36 = v35 / v25;
      }
      else
      {
        v34 = v19[2];
        v36 = v19[3];
        v32 = *v19;
        v33 = v19[1];
      }
      sub_2496D03F4(v32, v33, v34, v36, v6, v91);
      v99 = v60;
      v61 = *(_QWORD *)(v60 + 16);
      v62 = v96;
      if (v61)
      {
        v63 = 0;
        do
        {
          v64 = v63 + 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
          v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = v101;
          *(_QWORD *)(v65 + 32) = sub_24972CD80();
          *(_QWORD *)(v65 + 40) = sub_24972CD80();
          *(_QWORD *)(v65 + 48) = sub_24972CD80();
          v102 = (void *)v65;
          sub_24972CCE4();
          v66 = (void *)sub_24972CD44();
          sub_2496D1B4C();
          v67 = (void *)sub_24972CCCC();
          swift_bridgeObjectRelease();
          objc_msgSend(v62, (SEL)p_ivar_lyt[351], v66, v67);

          v63 = v64;
        }
        while (v61 != v64);
      }
      swift_bridgeObjectRelease();
      v104.origin.x = v32;
      v104.origin.y = v33;
      v104.size.width = v34;
      v104.size.height = v36;
      MinX = CGRectGetMinX(v104);
      v105.origin.x = v32;
      v105.origin.y = v33;
      v105.size.width = v34;
      v105.size.height = v36;
      CGRectGetMinY(v105);
      v106.origin.x = v32;
      v106.origin.y = v33;
      v106.size.width = v34;
      v106.size.height = v36;
      CGRectGetMaxX(v106);
      v107.origin.x = v32;
      v107.origin.y = v33;
      v107.size.width = v34;
      v107.size.height = v36;
      CGRectGetMaxY(v107);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v101;
      *(_QWORD *)(v68 + 32) = sub_24972CD80();
      *(_QWORD *)(v68 + 40) = sub_24972CD80();
      *(_QWORD *)(v68 + 48) = sub_24972CD80();
      v102 = (void *)v68;
      sub_24972CCE4();
      v69 = (void *)sub_24972C978();
      sub_2496D1B4C();
      v70 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      v71 = v97;
      objc_msgSend(v97, (SEL)p_ivar_lyt[351], v69, v70);

      v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = v101;
      *(_QWORD *)(v72 + 32) = sub_24972CD80();
      *(_QWORD *)(v72 + 40) = sub_24972CD80();
      *(_QWORD *)(v72 + 48) = sub_24972CD80();
      v102 = (void *)v72;
      sub_24972CCE4();
      v73 = (void *)sub_24972C978();
      v74 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v71, (SEL)p_ivar_lyt[351], v73, v74);

      v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v101;
      *(_QWORD *)(v75 + 32) = sub_24972CD80();
      *(_QWORD *)(v75 + 40) = sub_24972CD80();
      *(_QWORD *)(v75 + 48) = sub_24972CD80();
      v102 = (void *)v75;
      sub_24972CCE4();
      v76 = (void *)sub_24972C978();
      v77 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v71, (SEL)p_ivar_lyt[351], v76, v77);

      v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = v101;
      *(_QWORD *)(v78 + 32) = sub_24972CD80();
      *(_QWORD *)(v78 + 40) = sub_24972CD80();
      *(_QWORD *)(v78 + 48) = sub_24972CD80();
      v102 = (void *)v78;
      sub_24972CCE4();
      v79 = (void *)sub_24972C978();
      v80 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      objc_msgSend(v71, (SEL)p_ivar_lyt[351], v79, v80);

      swift_beginAccess();
      v81 = 0;
      v82 = v95;
      do
      {
        v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = v101;
        *(_QWORD *)(v85 + 32) = sub_24972CD80();
        *(_QWORD *)(v85 + 40) = sub_24972CD80();
        *(_QWORD *)(v85 + 48) = sub_24972CD80();
        v102 = (void *)v85;
        sub_24972CCE4();
        a3 = v102;
        v83 = (void *)sub_24972CEC4();
        v84 = (void *)sub_24972CCCC();
        swift_bridgeObjectRelease();
        objc_msgSend(v82, (SEL)p_ivar_lyt[351], v83, v84);
        ++v81;

      }
      while (v81 != 14);

    }
    ++v16;
  }
  while (v16 != 64);
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v94, v89);
}

void sub_2496D15A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  id v17;
  void *v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24972EE60;
  sub_2496D1B4C();
  *(_QWORD *)(v3 + 32) = sub_24972CED0();
  *(_QWORD *)(v3 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 65);
  sub_24972CCE4();
  v4 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v5 = sub_2496D030C(v3, 65568);
  if (!v1)
  {
    v6 = __OFADD__(a1, 1);
    v7 = a1 + 1;
    if (v6)
    {
      __break(1u);
    }
    else if ((v7 & 0x8000000000000000) == 0)
    {
      if (!v7)
      {
        do
        {
LABEL_9:
          v13 = v7 + 1;
          v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = xmmword_24972EE60;
          *(_QWORD *)(v14 + 32) = sub_24972CD80();
          *(_QWORD *)(v14 + 40) = sub_24972CD80();
          sub_24972CCE4();
          v15 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
          LODWORD(v16) = -8388608;
          v17 = objc_msgSend(v15, sel_initWithFloat_, v16);
          v18 = (void *)sub_24972CCCC();
          swift_bridgeObjectRelease();
          objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v17, v18);

          v7 = v13;
        }
        while (v13 != 65);
        return;
      }
      v8 = 0;
      do
      {
        v9 = v8 + 1;
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_24972EE60;
        *(_QWORD *)(v10 + 32) = sub_24972CD80();
        *(_QWORD *)(v10 + 40) = sub_24972CD80();
        sub_24972CCE4();
        v11 = (void *)sub_24972CEC4();
        v12 = (void *)sub_24972CCCC();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v11, v12);

        v8 = v9;
      }
      while (v7 != v9);
      if (v7 <= 65)
      {
        if (v7 == 65)
          return;
        goto LABEL_9;
      }
LABEL_13:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t sub_2496D181C(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void **v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24972EE50;
  sub_2496D1B4C();
  *(_QWORD *)(v5 + 32) = sub_24972CED0();
  *(_QWORD *)(v5 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 64);
  *(_QWORD *)(v5 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 128);
  sub_24972CCE4();
  objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v6 = sub_2496D030C(v5, 65568);
  if (!v2)
  {
    v5 = (uint64_t)v6;
    v14 = a1;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_24972EE50;
    *(_QWORD *)(v7 + 32) = sub_24972CED0();
    *(_QWORD *)(v7 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 64);
    *(_QWORD *)(v7 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 4);
    sub_24972CCE4();
    objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v8 = sub_2496D030C(v7, 65568);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24972EE50;
    *(_QWORD *)(v9 + 32) = sub_24972CED0();
    *(_QWORD *)(v9 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 64);
    *(_QWORD *)(v9 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 14);
    sub_24972CCE4();
    v10 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v11 = sub_2496D030C(v9, 65568);
    sub_2496D0930(v14, a2, (void *)v5, v11, v8);
    if ((unint64_t)v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_24972D0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = *(_QWORD *)(((unint64_t)v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_2496D15A8(v12);
  }
  return v5;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF7630]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_2496D1B4C()
{
  unint64_t result;

  result = qword_257879E40;
  if (!qword_257879E40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257879E40);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF763C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2496D1BCC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BCF7648](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2496D1C0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2496D1C4C()
{
  unint64_t result;

  result = qword_257879EA0;
  if (!qword_257879EA0)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EE00, &type metadata for ScreenSimilarityError);
    atomic_store(result, (unint64_t *)&qword_257879EA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenSimilarityError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ScreenSimilarityError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496D1D24 + 4 * byte_24972EC4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2496D1D44 + 4 * byte_24972EC4F[v4]))();
}

_BYTE *sub_2496D1D24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2496D1D44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496D1D4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496D1D54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496D1D5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496D1D64(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_2496D1D70()
{
  return 0;
}

ValueMetadata *type metadata accessor for ScreenSimilarityError()
{
  return &type metadata for ScreenSimilarityError;
}

unint64_t sub_2496D1D8C()
{
  unint64_t result;

  result = qword_257879EA8;
  if (!qword_257879EA8)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EDD8, &type metadata for ScreenSimilarityError);
    atomic_store(result, (unint64_t *)&qword_257879EA8);
  }
  return result;
}

uint64_t ClickabilityDetection.clickable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable);
}

uint64_t ClickabilityDetection.clickType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType);
}

double ClickabilityDetection.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence);
}

id ClickabilityDetection.__allocating_init(clickable:clickType:confidence:)(char a1, uint64_t a2, double a3)
{
  objc_class *v3;
  _BYTE *v7;
  objc_super v9;

  v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = a2;
  *(double *)&v7[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id ClickabilityDetection.init(clickable:clickType:confidence:)(char a1, uint64_t a2, double a3)
{
  _BYTE *v3;
  objc_super v5;

  v3[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = a2;
  *(double *)&v3[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for ClickabilityDetection();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for ClickabilityDetection()
{
  return objc_opt_self();
}

void *ClickabilityDetection.__allocating_init(from:)(_QWORD *a1)
{
  return sub_2496D2524(a1);
}

uint64_t sub_2496D1F94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879EC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496D2724();
  sub_24972D2FC();
  v8[15] = 0;
  sub_24972D170();
  if (!v1)
  {
    v8[14] = 1;
    sub_24972D17C();
    v8[13] = 2;
    sub_24972D194();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2496D20E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249721AC4(*a1, *a2);
}

uint64_t sub_2496D20F4()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496D2198()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496D2218()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496D22B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496D2964();
  *a1 = result;
  return result;
}

void sub_2496D22E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xE900000000000065;
  v3 = *v1;
  v4 = 0xEA00000000006563;
  v5 = 0x6E656469666E6F63;
  if (v3 != 1)
  {
    v5 = 0x7079546B63696C63;
    v4 = 0xE900000000000065;
  }
  v6 = v3 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C62616B63696C63;
  if (!v6)
    v2 = v4;
  *a1 = v7;
  a1[1] = v2;
}

uint64_t sub_2496D2348()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656469666E6F63;
  if (*v0 != 1)
    v1 = 0x7079546B63696C63;
  if (*v0)
    return v1;
  else
    return 0x6C62616B63696C63;
}

uint64_t sub_2496D23A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496D2964();
  *a1 = result;
  return result;
}

uint64_t sub_2496D23CC()
{
  return 0;
}

void sub_2496D23D8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2496D23E4()
{
  sub_2496D2724();
  return sub_24972D308();
}

uint64_t sub_2496D240C()
{
  sub_2496D2724();
  return sub_24972D314();
}

id ClickabilityDetection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ClickabilityDetection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ClickabilityDetection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClickabilityDetection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_2496D24DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_2496D2524(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2496D2504(_QWORD *a1)
{
  return sub_2496D1F94(a1);
}

void *sub_2496D2524(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  _BYTE *v14;
  uint64_t v15;
  objc_super v16;
  char v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879EF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496D2724();
  sub_24972D2F0();
  if (!v1)
  {
    LOBYTE(v18) = 0;
    v8 = sub_24972D134();
    v17 = 2;
    sub_2496D29CC();
    sub_24972D14C();
    v9 = v18;
    LOBYTE(v18) = 1;
    sub_24972D140();
    v12 = v11;
    v13 = (objc_class *)type metadata accessor for ClickabilityDetection();
    v14 = objc_allocWithZone(v13);
    v14[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = v8 & 1;
    *(_QWORD *)&v14[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = v9;
    *(_QWORD *)&v14[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = v12;
    v16.receiver = v14;
    v16.super_class = v13;
    v7 = objc_msgSendSuper2(&v16, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2496D2724()
{
  unint64_t result;

  result = qword_257879ED0;
  if (!qword_257879ED0)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EFF4, &type metadata for ClickabilityDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879ED0);
  }
  return result;
}

uint64_t method lookup function for ClickabilityDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClickabilityDetection.__allocating_init(clickable:clickType:confidence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ClickabilityDetection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ClickabilityDetection.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t storeEnumTagSinglePayload for ClickabilityDetection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2496D280C + 4 * byte_24972EE75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2496D2840 + 4 * byte_24972EE70[v4]))();
}

uint64_t sub_2496D2840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D2848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496D2850);
  return result;
}

uint64_t sub_2496D285C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496D2864);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2496D2868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D2870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClickabilityDetection.CodingKeys()
{
  return &type metadata for ClickabilityDetection.CodingKeys;
}

unint64_t sub_2496D2890()
{
  unint64_t result;

  result = qword_257879ED8;
  if (!qword_257879ED8)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EFCC, &type metadata for ClickabilityDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879ED8);
  }
  return result;
}

unint64_t sub_2496D28D8()
{
  unint64_t result;

  result = qword_257879EE0;
  if (!qword_257879EE0)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EF04, &type metadata for ClickabilityDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879EE0);
  }
  return result;
}

unint64_t sub_2496D2920()
{
  unint64_t result;

  result = qword_257879EE8;
  if (!qword_257879EE8)
  {
    result = MEMORY[0x24BCF7648](&unk_24972EF2C, &type metadata for ClickabilityDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879EE8);
  }
  return result;
}

uint64_t sub_2496D2964()
{
  unint64_t v0;

  v0 = sub_24972D110();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_2496D29CC()
{
  unint64_t result;

  result = qword_257879EF8;
  if (!qword_257879EF8)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ClickabilityType, &type metadata for ClickabilityType);
    atomic_store(result, (unint64_t *)&qword_257879EF8);
  }
  return result;
}

uint64_t type metadata accessor for IconClassificationInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for IconClassificationOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for IconClassification()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilityPortraitInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilityPortraitOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilityPortrait()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilitySquareInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilitySquareOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClickabilitySquare()
{
  return objc_opt_self();
}

uint64_t sub_2496D3234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  int v25;
  id v26;
  void *v27;
  id v28;
  uint64_t result;
  int v30;
  _QWORD v31[2];

  v3 = v1;
  v5 = sub_24972C9C0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 32) = a1;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  v11 = objc_allocWithZone((Class)type metadata accessor for UIUDetector());
  v12 = UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(a1, 0, 0, v9, v10);
  if (v2)
  {
    type metadata accessor for TwinTransformerEmbeddingGenerator();
    swift_deallocPartialClassInstance();
    return v3;
  }
  *(_QWORD *)(v3 + 24) = v12;
  sub_24972C9B4();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + OBJC_IVAR____TtC15UIUnderstanding33TwinTransformerEmbeddingGenerator_log, v8, v5);
  switch(a1)
  {
    case 0:
      if (qword_257879BF8 != -1)
        swift_once();
      v15 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v14 = (id)qword_25787EBE8;
      }
      else
      {
        v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v22 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v21;
        v14 = v21;

        v15 = 0;
      }
      v23 = v15;
      v24 = sub_249704170(1);
      v25 = 1051595899;
      goto LABEL_26;
    case 2:
      if (qword_257879BF8 != -1)
        swift_once();
      v13 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v14 = (id)qword_25787EBE8;
      }
      else
      {
        v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v18 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v17;
        v14 = v17;

        v13 = 0;
      }
      v19 = v13;
      v20 = 0;
LABEL_25:
      v24 = sub_249704634(v20);
      v25 = 1055957975;
LABEL_26:
      v30 = v25;

      *(_QWORD *)(v3 + 16) = v24;
      *(_DWORD *)(v3 + 40) = v30;
      return v3;
    case 1:
      if (qword_257879BF8 != -1)
        swift_once();
      v16 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v14 = (id)qword_25787EBE8;
      }
      else
      {
        v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v27 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v26;
        v14 = v26;

        v16 = 0;
      }
      v28 = v16;
      v20 = 1;
      goto LABEL_25;
  }
  v31[1] = a1;
  result = sub_24972D218();
  __break(1u);
  return result;
}

uint64_t sub_2496D35AC(CGImage *a1, uint64_t a2)
{
  CGImage *v2;
  CGImage *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  void ***v50;
  _QWORD *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  void ***v61;
  unint64_t *v62;
  CGImage *v63;
  uint64_t v64;
  char *v65;

  v3 = v2;
  v63 = a1;
  v5 = type metadata accessor for UIUDetectorResult();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v61 = (void ***)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v62 = (unint64_t *)((char *)&v61 - v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F18);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v61 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v61 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v61 - v20;
  sub_2496D3F68(a2, (uint64_t)&v61 - v20);
  sub_2496D3F68((uint64_t)v21, (uint64_t)v19);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v64 = v5;
  LODWORD(a2) = v22(v19, 1, v5);
  sub_2496D3FB0((uint64_t)v19);
  if ((_DWORD)a2 == 1)
  {
    v23 = (uint64_t)v65;
    UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(v63, 0, 1, 0, 0, 0, v16, 0.2);
    v24 = v23;
    sub_2496D3FB0((uint64_t)v21);
    if (v23)
      return (uint64_t)v21;
    v63 = v3;
    v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
    v26 = v64;
    v25(v16, 0, 1, v64);
    sub_2496D3FF0((uint64_t)v16, (uint64_t)v21);
  }
  else
  {
    v63 = v3;
    v24 = (uint64_t)v65;
    v26 = v64;
  }
  sub_2496D3F68((uint64_t)v21, (uint64_t)v13);
  if (v22(v13, 1, v26) == 1)
  {
    sub_2496D3FB0((uint64_t)v21);
    v27 = (uint64_t)v13;
LABEL_41:
    sub_2496D3FB0(v27);
    return 0;
  }
  v65 = v21;
  v28 = v62;
  sub_2496D4038((uint64_t)v13, (uint64_t)v62);
  v29 = *v28;
  v30 = *v28 >> 62;
  if (v30)
  {
    swift_bridgeObjectRetain();
    v60 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v60 < 1)
      goto LABEL_40;
  }
  else if (*(uint64_t *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_40:
    sub_2496D407C((uint64_t)v28);
    v27 = (uint64_t)v65;
    goto LABEL_41;
  }
  v31 = (char *)v28 + *(int *)(v26 + 20);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  sub_2496D40B8();
  if (sub_24972CA2C() < 1)
    goto LABEL_40;
  if (!v30)
  {
    v33 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_2496D4104((uint64_t)v28, (uint64_t)v61);
    if (v33 > 0x40)
    {
      v34 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v35 = v24;
      goto LABEL_16;
    }
LABEL_22:
    v35 = v24;
    v38 = v64;
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  v36 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  sub_2496D4104((uint64_t)v28, (uint64_t)v61);
  if (v36 < 65)
    goto LABEL_22;
  swift_bridgeObjectRetain();
  result = sub_24972D0BC();
  if ((result & 0x8000000000000000) == 0)
  {
    v35 = v24;
    swift_bridgeObjectRetain();
    v34 = sub_24972D0BC();
    swift_bridgeObjectRelease();
LABEL_16:
    v38 = v64;
    if (v34 < 64)
    {
      __break(1u);
    }
    else
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        type metadata accessor for UIObject();
        v39 = 0;
        do
        {
          v40 = v39 + 1;
          sub_24972CFCC();
          v39 = v40;
        }
        while (v40 != 64);
      }
      v28 = (unint64_t *)v32;
      if (v30)
      {
        swift_bridgeObjectRetain();
        v32 = sub_24972D0C8();
        v41 = v42;
        v30 = v43;
        v45 = v44;
        swift_bridgeObjectRelease_n();
        v29 = v45;
        if ((v45 & 1) == 0)
        {
LABEL_24:
          v46 = sub_2496F1174(v32, v41, v30, v29);
          goto LABEL_30;
        }
      }
      else
      {
        v32 = v29 & 0xFFFFFFFFFFFFFF8;
        v41 = (v29 & 0xFFFFFFFFFFFFFF8) + 32;
        v29 = 129;
      }
      v64 = v41;
      sub_24972D20C();
      swift_unknownObjectRetain_n();
      v47 = swift_dynamicCastClass();
      if (!v47)
      {
        swift_unknownObjectRelease();
        v47 = MEMORY[0x24BEE4AF8];
      }
      v48 = *(_QWORD *)(v47 + 16);
      swift_release();
      if (!__OFSUB__(v29 >> 1, v30))
      {
        if (v48 == (v29 >> 1) - v30)
        {
          v46 = swift_dynamicCastClass();
          if (!v46)
          {
            swift_unknownObjectRelease();
            v49 = (void **)MEMORY[0x24BEE4AF8];
            goto LABEL_32;
          }
LABEL_30:
          v49 = (void **)v46;
LABEL_32:
          swift_unknownObjectRelease();
          v50 = v61;
          sub_2496D407C((uint64_t)v61);
          (*(void (**)(char *, char *, unint64_t *))(*(v28 - 1) + 16))((char *)v50 + *(int *)(v38 + 20), v31, v28);
          *v50 = v49;
LABEL_33:
          v21 = (char *)*((_QWORD *)v63 + 2);
          if (v21[40] - 1 > 1)
          {
            sub_2496D1C4C();
            swift_allocError();
            swift_willThrow();
          }
          else
          {
            v51 = (_QWORD *)sub_2496D181C(*v61, (uint64_t)v61 + *(int *)(v38 + 20));
            if (!v35)
            {
              v55 = v51;
              v56 = v52;
              v57 = v53;
              v58 = v54;
              sub_2496CFAC0(v51, v52, v53, v54);
              v21 = v59;

              sub_2496D407C((uint64_t)v61);
              sub_2496D407C((uint64_t)v62);
              sub_2496D3FB0((uint64_t)v65);
              return (uint64_t)v21;
            }
          }
          sub_2496D407C((uint64_t)v61);
          sub_2496D407C((uint64_t)v62);
          sub_2496D3FB0((uint64_t)v65);
          return (uint64_t)v21;
        }
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_45:
    swift_unknownObjectRelease();
    v41 = v64;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_2496D3BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const __CFData *v4;
  CGDataProvider *v5;
  CGImage *v6;
  CGImage *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint8_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v4 = (const __CFData *)sub_24972C924();
  v5 = CGDataProviderCreateWithCFData(v4);

  if (!v5)
  {
    v9 = sub_24972C9A8();
    v10 = sub_24972CDF8();
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2496CB000, v9, (os_log_type_t)v10, "-W- Couldn't convert image data to CGImage in Screen Similarity detector", v11, 2u);
      MEMORY[0x24BCF76F0](v11, -1, -1);
    }

    return 0;
  }
  v6 = CGImageCreateWithPNGDataProvider(v5, 0, 0, kCGRenderingIntentDefault);
  if (!v6)
  {
    v12 = sub_24972C9A8();
    v13 = sub_24972CDF8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_2496CB000, v12, v13, "-W- Couldn't create CGImage in Screen Similarity detector", v14, 2u);
      MEMORY[0x24BCF76F0](v14, -1, -1);
    }

    return 0;
  }
  v7 = v6;
  v8 = sub_2496D35AC(v6, a3);

  return v8;
}

uint64_t sub_2496D3D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding33TwinTransformerEmbeddingGenerator_log;
  v2 = sub_24972C9C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2496D3D88()
{
  return type metadata accessor for TwinTransformerEmbeddingGenerator();
}

uint64_t type metadata accessor for TwinTransformerEmbeddingGenerator()
{
  uint64_t result;

  result = qword_257879F00;
  if (!qword_257879F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2496D3DCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C9C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2496D3E70@<X0>(CGImage *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  int v8;

  v6 = *v3;
  result = sub_2496D35AC(a1, a2);
  if (!v4)
  {
    if (result)
    {
      v8 = *(_DWORD *)(v6 + 40);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = v8;
    }
    else
    {
      sub_2496D3F24();
      swift_allocError();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2496D3EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  int v9;

  v7 = *v4;
  result = sub_2496D3BA0(a1, a2, a3);
  if (!v5)
  {
    if (result)
      v9 = *(_DWORD *)(v7 + 40);
    else
      v9 = 0;
    *(_QWORD *)a4 = result;
    *(_DWORD *)(a4 + 8) = v9;
  }
  return result;
}

unint64_t sub_2496D3F24()
{
  unint64_t result;

  result = qword_257879F10;
  if (!qword_257879F10)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F2E0, &type metadata for TwinTransformerEmbeddingGeneratorError);
    atomic_store(result, (unint64_t *)&qword_257879F10);
  }
  return result;
}

uint64_t sub_2496D3F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496D3FB0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2496D3FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496D4038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UIUDetectorResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496D407C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UIUDetectorResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2496D40B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257879F20;
  if (!qword_257879F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257879E50);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BDBFCD0], v1);
    atomic_store(result, (unint64_t *)&qword_257879F20);
  }
  return result;
}

uint64_t sub_2496D4104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UIUDetectorResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for TwinTransformerEmbeddingGeneratorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496D4188 + 4 * asc_24972F1E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2496D41A8 + 4 * byte_24972F1E5[v4]))();
}

_BYTE *sub_2496D4188(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2496D41A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496D41B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496D41B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496D41C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496D41C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TwinTransformerEmbeddingGeneratorError()
{
  return &type metadata for TwinTransformerEmbeddingGeneratorError;
}

unint64_t sub_2496D41E8()
{
  unint64_t result;

  result = qword_257879F28;
  if (!qword_257879F28)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F2B8, &type metadata for TwinTransformerEmbeddingGeneratorError);
    atomic_store(result, (unint64_t *)&qword_257879F28);
  }
  return result;
}

float CenterNetPrediction.heat.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void sub_2496D4234(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v2;
  v5 = v2;

}

id sub_2496D4288()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 24);
}

void sub_2496D42B8(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

uint64_t (*sub_2496D42FC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CenterNetPrediction.classIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

void CenterNetPrediction.detectionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

uint64_t CenterNetPrediction.__allocating_init(heat:bbox:classIndex:detectionType:)(uint64_t a1, uint64_t a2, char *a3, float a4)
{
  uint64_t result;
  char v9;

  result = swift_allocObject();
  v9 = *a3;
  *(float *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = a1;
  *(_QWORD *)(result + 32) = a2;
  *(_BYTE *)(result + 40) = v9;
  return result;
}

uint64_t CenterNetPrediction.init(heat:bbox:classIndex:detectionType:)(uint64_t a1, uint64_t a2, char *a3, float a4)
{
  uint64_t v4;
  char v5;

  v5 = *a3;
  *(float *)(v4 + 16) = a4;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_BYTE *)(v4 + 40) = v5;
  return v4;
}

uint64_t static CenterNetPrediction.fromCenterNetPredictions<A>(pred:thresholds:imageSize:)(__n128 a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t MetatypeMetadata;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  double v28;
  _BOOL4 v29;
  float64x2_t v30;
  _BOOL4 v31;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  float v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  float v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  float v58;
  uint64_t v59;
  float v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  objc_class *v69;
  char *v70;
  double *v71;
  char *v72;
  uint64_t v73;
  double *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  float64x2_t *v79;
  float64x2_t v80;
  char *v81;
  uint64_t v82;
  uint64_t result;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  float64x2_t v87;
  int64_t v88;
  double v89;
  _BOOL4 v90;
  int64_t v91;
  _BOOL4 v92;
  int64_t v93;
  _BOOL4 v94;
  int v95;
  __n128 v96;
  __n128 v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  unint64_t v112;
  objc_super v113;
  int v114;
  unint64_t v115;
  uint64_t v116;

  v107 = a7;
  v98 = a6;
  v97 = a2;
  v96 = a1;
  v102 = a4;
  v101 = sub_24972CF0C();
  v100 = *(_QWORD *)(v101 - 8);
  v8 = MEMORY[0x24BDAC7A8](v101);
  v10 = (char *)&v84 - v9;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v106 = (char *)&v84 - v15;
  MetatypeMetadata = swift_getMetatypeMetadata();
  if (MetatypeMetadata == __swift_instantiateConcreteTypeFromMangledName(&qword_257879F30))
  {
    v95 = 0;
    goto LABEL_8;
  }
  if (MetatypeMetadata == __swift_instantiateConcreteTypeFromMangledName(&qword_257879F38))
  {
    v17 = 2;
    goto LABEL_7;
  }
  if (MetatypeMetadata == __swift_instantiateConcreteTypeFromMangledName(&qword_257879F40))
  {
    v17 = 3;
LABEL_7:
    v95 = v17;
LABEL_8:
    __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    v18 = sub_24972C9D8();
    if (*(_QWORD *)(v18 + 16))
    {
      v19 = *(_QWORD *)(v18 + 32);
      swift_bridgeObjectRelease();
      v20 = v19 - 4;
      if (__OFSUB__(v19, 4))
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v21 = sub_24972C9D8();
      if (*(_QWORD *)(v21 + 16) < 2uLL)
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v22 = *(_QWORD *)(v21 + 40);
      swift_bridgeObjectRelease();
      v23 = sub_24972C9D8();
      if (*(_QWORD *)(v23 + 16) < 3uLL)
      {
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      v108 = *(_QWORD *)(v23 + 48);
      swift_bridgeObjectRelease();
      v116 = MEMORY[0x24BEE4AF8];
      if (v22 < 0)
      {
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      if (!v22)
        return MEMORY[0x24BEE4AF8];
      v24 = v108;
      if (v108 < 0)
        goto LABEL_77;
      v105 = v14;
      v25 = v22;
      v26 = 0;
      v93 = v20 + 1;
      v27 = __OFADD__(v20, 1);
      v94 = v27;
      v89 = (double)v108;
      v28 = (double)v22;
      v91 = v20 + 2;
      v29 = __OFADD__(v20, 2);
      v92 = v29;
      v88 = v20 + 3;
      *(_QWORD *)&v30.f64[0] = v96.n128_u64[0];
      *(_QWORD *)&v30.f64[1] = v97.n128_u64[0];
      v87 = v30;
      v31 = __OFADD__(v20, 3);
      v90 = v31;
      __asm { FMOV            V1.2D, #1.0 }
      v86 = _Q1;
      v103 = a5;
      v109 = v11;
      v37 = MEMORY[0x24BEE4AF8];
      v104 = v10;
      v85 = v22;
      v110 = xmmword_24972EE40;
      while (v26 != v25)
      {
        if (v24)
        {
          if (v20 < 0)
            goto LABEL_71;
          v38 = 0;
          while (v38 != v24)
          {
            if (v20)
            {
              v115 = v37;
              sub_2496D59EC(0, v20, 0);
              v39 = 0;
              v37 = v115;
              do
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
                v40 = swift_allocObject();
                *(_OWORD *)(v40 + 16) = v110;
                *(_QWORD *)(v40 + 32) = v39;
                *(_QWORD *)(v40 + 40) = v26;
                *(_QWORD *)(v40 + 48) = v38;
                sub_2496D40B8();
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v41 = v114;
                v115 = v37;
                v43 = *(_QWORD *)(v37 + 16);
                v42 = *(_QWORD *)(v37 + 24);
                v44 = v43 + 1;
                if (v43 >= v42 >> 1)
                {
                  sub_2496D59EC(v42 > 1, v43 + 1, 1);
                  v37 = v115;
                }
                ++v39;
                *(_QWORD *)(v37 + 16) = v44;
                *(_DWORD *)(v37 + 4 * v43 + 32) = v41;
              }
              while (v20 != v39);
              a5 = v103;
            }
            else
            {
              v44 = *(_QWORD *)(v37 + 16);
              if (!v44)
                goto LABEL_66;
            }
            v45 = 0;
            v46 = 0;
            do
            {
              if (v46 >= v44)
              {
                __break(1u);
                return MEMORY[0x24BEE4AF8];
              }
              if (*(float *)(v37 + 32 + 4 * v46) < *(float *)(v37 + 4 * v45 + 32))
                v46 = v45;
              ++v45;
            }
            while (v44 != v45);
            if (v46 >= v44)
              goto LABEL_66;
            v47 = *(float *)(v37 + 4 * v46 + 32);
            swift_bridgeObjectRelease();
            v115 = v46;
            v48 = v104;
            sub_24972CC9C();
            v49 = v109;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v48, 1, a5) == 1)
            {
              (*(void (**)(char *, uint64_t))(v100 + 8))(v48, v101);
            }
            else
            {
              v50 = v106;
              (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v106, v48, a5);
              v51 = (uint64_t)v105;
              (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v105, v50, a5);
              v52 = v102;
              if (*(_QWORD *)(v102 + 16))
              {
                v53 = sub_2496D588C(v51, a5, v98);
                if ((v54 & 1) != 0)
                  v55 = *(float *)(*(_QWORD *)(v52 + 56) + 4 * v53);
                else
                  v55 = 0.3;
                v49 = v109;
              }
              else
              {
                v55 = 0.3;
              }
              v56 = *(void (**)(char *, uint64_t))(v49 + 8);
              v56(v105, a5);
              if (v55 <= v47)
              {
                v99 = v56;
                __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
                v57 = swift_allocObject();
                *(_OWORD *)(v57 + 16) = v110;
                *(_QWORD *)(v57 + 32) = v20;
                *(_QWORD *)(v57 + 40) = v26;
                *(_QWORD *)(v57 + 48) = v38;
                sub_2496D40B8();
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v58 = *(float *)&v115;
                v59 = swift_allocObject();
                *(_OWORD *)(v59 + 16) = v110;
                if (v94)
                  goto LABEL_67;
                *(_QWORD *)(v59 + 32) = v93;
                *(_QWORD *)(v59 + 40) = v26;
                *(_QWORD *)(v59 + 48) = v38;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v60 = *(float *)&v115;
                v61 = swift_allocObject();
                *(_OWORD *)(v61 + 16) = v110;
                if (v92)
                  goto LABEL_68;
                *(_QWORD *)(v61 + 32) = v91;
                *(_QWORD *)(v61 + 40) = v26;
                *(_QWORD *)(v61 + 48) = v38;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v62 = *(float *)&v115;
                v63 = swift_allocObject();
                *(_OWORD *)(v63 + 16) = v110;
                if (v90)
                  goto LABEL_69;
                v64 = ((double)v38 + v60) / v89;
                v65 = (double)v26 + v58;
                v66 = v62;
                *(_QWORD *)(v63 + 32) = v88;
                *(_QWORD *)(v63 + 40) = v26;
                *(_QWORD *)(v63 + 48) = v38;
                v67 = v65 / v28;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v68 = *(float *)&v115;
                v69 = (objc_class *)type metadata accessor for BoundingBox();
                v70 = (char *)objc_allocWithZone(v69);
                v71 = (double *)&v70[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                *v71 = v64 - v68 * 0.5;
                v71[1] = v67 - v66 * 0.5;
                v71[2] = v68;
                v71[3] = v66;
                *(_OWORD *)&v70[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize] = v86;
                v113.receiver = v70;
                v113.super_class = v69;
                v72 = (char *)objc_msgSendSuper2(&v113, sel_init);
                type metadata accessor for CenterNetPrediction();
                v73 = swift_allocObject();
                *(float *)(v73 + 16) = v47;
                *(_QWORD *)(v73 + 24) = v72;
                *(_QWORD *)(v73 + 32) = v46;
                *(_BYTE *)(v73 + 40) = v95;
                v74 = (double *)&v72[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                swift_beginAccess();
                v75 = *v74 * v96.n128_f64[0];
                v76 = v74[1] * v97.n128_f64[0];
                v77 = v74[2] * v96.n128_f64[0];
                v78 = v74[3] * v97.n128_f64[0];
                v79 = (float64x2_t *)&v72[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
                swift_beginAccess();
                v80 = vmulq_f64(*v79, v87);
                *v74 = v75;
                v74[1] = v76;
                v74[2] = v77;
                v74[3] = v78;
                *v79 = v80;
                v81 = v72;
                v82 = swift_retain();
                MEMORY[0x24BCF69D0](v82);
                if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_24972CCF0();
                sub_24972CD08();
                sub_24972CCE4();

                swift_release();
                a5 = v103;
                v56 = v99;
              }
              v56(v106, a5);
            }
            ++v38;
            v24 = v108;
            v37 = MEMORY[0x24BEE4AF8];
            if (v38 == v108)
              goto LABEL_25;
          }
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          break;
        }
LABEL_25:
        ++v26;
        v25 = v85;
        if (v26 == v85)
          return v116;
      }
      __break(1u);
LABEL_71:
      __break(1u);
    }
    __break(1u);
    goto LABEL_73;
  }
LABEL_78:
  v111 = 0;
  v112 = 0xE000000000000000;
  sub_24972CFB4();
  swift_bridgeObjectRelease();
  result = sub_24972D080();
  __break(1u);
  return result;
}

uint64_t Array<A>.argmax()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_24972CD14();
  MEMORY[0x24BCF7648](MEMORY[0x24BEE12C8], v1);
  sub_24972CC84();
  v2 = sub_24972D0B0();
  MEMORY[0x24BCF7648](MEMORY[0x24BEE2FC0], v2);
  sub_24972CC90();
  swift_bridgeObjectRelease();
  return a1;
}

double CGRect.init(xCoord:yCoord:width:height:)(double a1, double a2, double a3)
{
  return a1 - a3 * 0.5;
}

id sub_2496D4E34()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  id v7;

  v1 = sub_2496F3A14(*(_QWORD *)(v0 + 32));
  if ((v2 & 1) != 0)
    v3 = -1;
  else
    v3 = v1;
  v4 = *(float *)(v0 + 16);
  swift_beginAccess();
  v5 = *(void **)(v0 + 24);
  v6 = objc_allocWithZone((Class)type metadata accessor for UIObject());
  v7 = v5;
  return UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(v3, 0, 0, v7, v4, MEMORY[0x24BEE4AF8], 0, 0);
}

id sub_2496D4ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  Swift::Bool v7;
  objc_class *v8;
  _BYTE *v9;
  id v10;
  void *v11;
  objc_super v13;

  v3 = *(float *)(v1 + 16);
  v4 = sub_24972174C(*(_QWORD *)(v1 + 32));
  if ((v5 & 1) != 0)
    v6 = -1;
  else
    v6 = v4;
  v7 = ClickabilityType.isClickable()();
  v8 = (objc_class *)type metadata accessor for ClickabilityDetection();
  v9 = objc_allocWithZone(v8);
  v9[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = v7;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = v6;
  *(double *)&v9[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = v3;
  v13.receiver = v9;
  v13.super_class = v8;
  v10 = objc_msgSendSuper2(&v13, sel_init);
  swift_beginAccess();
  v11 = *(void **)(v1 + 24);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 1;
  return v11;
}

uint64_t CenterNetPrediction.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CenterNetPrediction.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

Swift::Float __swiftcall CGRect.iou(other:)(__C::CGRect other)
{
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat y;
  CGFloat x;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  double v12;
  double v13;
  Swift::Float result;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGFloat width;
  CGFloat v22;
  CGFloat height;
  CGFloat r1;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v5 = v1;
  y = other.origin.y;
  x = other.origin.x;
  v25.origin.x = v1;
  v20 = v2;
  width = other.size.width;
  v25.origin.y = v2;
  v22 = v3;
  height = other.size.height;
  v25.size.width = v3;
  r1 = v4;
  v25.size.height = v4;
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  v26 = CGRectUnion(v25, v31);
  v8 = v26.origin.x;
  v9 = v26.origin.y;
  v10 = v26.size.width;
  v11 = v26.size.height;
  v12 = CGRectGetHeight(v26);
  v27.origin.x = v8;
  v27.origin.y = v9;
  v27.size.width = v10;
  v27.size.height = v11;
  v13 = v12 * CGRectGetWidth(v27);
  result = 0.0;
  if (v13 != 0.0)
  {
    v28.origin.x = v5;
    v28.origin.y = v20;
    v32.size.width = width;
    v28.size.width = v22;
    v32.size.height = height;
    v28.size.height = r1;
    v32.origin.x = x;
    v32.origin.y = y;
    v29 = CGRectIntersection(v28, v32);
    v15 = v29.origin.x;
    v16 = v29.origin.y;
    v17 = v29.size.width;
    v18 = v29.size.height;
    v19 = CGRectGetHeight(v29);
    v30.origin.x = v15;
    v30.origin.y = v16;
    v30.size.width = v17;
    v30.size.height = v18;
    return v19 * CGRectGetWidth(v30) / v13;
  }
  return result;
}

uint64_t sub_2496D5104@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v25 - v14;
  v16 = *a1;
  v17 = *(int *)(v13 + 48);
  v19 = v18 + v17;
  v20 = (char *)a2 + v17;
  v21 = *a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v18 + v17, v20, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v15, v19, a3);
  sub_24972CD20();
  LOBYTE(v19) = sub_24972CB70();
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, a3);
  result = ((uint64_t (*)(char *, uint64_t))v22)(v15, a3);
  if ((v19 & 1) != 0)
    v24 = v21;
  else
    v24 = v16;
  *v26 = v24;
  return result;
}

uint64_t BinaryFloatingPoint.clip(toRange:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24972D230();
  sub_24972CB7C();
  sub_24972D23C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

uint64_t BinaryFloatingPoint.lerp(from:toRange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];

  v16[0] = a2;
  v16[1] = a4;
  v5 = *(_QWORD *)(a3 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v16 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  sub_24972D0A4();
  sub_24972CB7C();
  sub_24972D0A4();
  sub_24972CB4C();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, a3);
  v14(v11, a3);
  sub_24972D0A4();
  sub_24972CD8C();
  v14(v8, a3);
  sub_24972D098();
  v14(v11, a3);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, a3);
}

uint64_t BinaryFloatingPoint.clerp(from:toRange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BinaryFloatingPoint.lerp(from:toRange:)(v6, v9, v10, (uint64_t)v8);
  BinaryFloatingPoint.clip(toRange:)(a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a3);
}

uint64_t BinaryFloatingPoint.ema<A>(toRange:amount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a6;
  v35 = a7;
  v36 = a5;
  v28 = a2;
  v34 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v30 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v28 - v15;
  v31 = *(_QWORD *)(a3 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v32 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v28 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v29 = (char *)&v28 - v22;
  swift_getAssociatedConformanceWitness();
  sub_24972D224();
  sub_24972D1D0();
  sub_24972D0A4();
  v23 = v30;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, a4);
  sub_24972CB28();
  v24 = v29;
  sub_24972CD8C();
  v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v25(v21, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v16, v28, a4);
  v26 = v32;
  sub_24972CB28();
  sub_24972CD8C();
  v25(v26, a3);
  sub_24972D098();
  v25(v21, a3);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, a3);
}

unint64_t sub_2496D588C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24972CB58();
  return sub_2496D58D4(a1, v6, a2, a3);
}

unint64_t sub_2496D58D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  char v16;
  _QWORD v18[2];

  v5 = v4;
  v18[0] = a1;
  v18[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v5 + 32);
  v12 = v11 & ~v10;
  if (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v15(v9, *(_QWORD *)(v5 + 48) + v14 * v12, a3);
      v16 = sub_24972CB88();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t sub_2496D59EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971B4F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for CenterNetPrediction()
{
  return objc_opt_self();
}

uint64_t sub_2496D5A28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_2496D5104(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_2496D5A44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971B650(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5A60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971B65C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5A7C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971B914(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5A98(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971BA7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5AB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24971BBE0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2496D5AD0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971BDC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5AEC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24971BF3C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2496D5B08(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971EE6C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2496D5B80(v6);
  return sub_24972D02C();
}

uint64_t sub_2496D5B80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float v16;
  float v17;
  float v18;
  float v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *__dst;
  uint64_t v96;

  v2 = v1;
  v4 = a1[1];
  result = sub_24972D1B8();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_129;
    if (v4)
      return sub_2496D61EC(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_137;
  v7 = result;
  v90 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v96 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_95:
      v82 = v10;
      if (v13 >= 2)
      {
        v83 = *v90;
        do
        {
          v84 = v13 - 2;
          if (v13 < 2)
            goto LABEL_124;
          if (!v83)
            goto LABEL_136;
          v85 = v82;
          v86 = *(_QWORD *)&v82[16 * v84 + 32];
          v87 = *(_QWORD *)&v82[16 * v13 + 24];
          sub_2496D6254((char *)(v83 + 8 * v86), (char *)(v83 + 8 * *(_QWORD *)&v82[16 * v13 + 16]), v83 + 8 * v87, __dst);
          if (v2)
            break;
          if (v87 < v86)
            goto LABEL_125;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v85 = sub_24971DDC8((uint64_t)v85);
          if (v84 >= *((_QWORD *)v85 + 2))
            goto LABEL_126;
          v88 = &v85[16 * v84 + 32];
          *(_QWORD *)v88 = v86;
          *((_QWORD *)v88 + 1) = v87;
          v89 = *((_QWORD *)v85 + 2);
          if (v13 > v89)
            goto LABEL_127;
          memmove(&v85[16 * v13 + 16], &v85[16 * v13 + 32], 16 * (v89 - v13));
          v82 = v85;
          *((_QWORD *)v85 + 2) = v89 - 1;
          v13 = v89 - 1;
        }
        while (v89 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_24972CCE4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for CenterNetPrediction();
    v9 = sub_24972CCFC();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v96 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v91 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v92 = v7;
  v93 = v4;
  v94 = *a1;
  while (1)
  {
    v14 = v11++;
    if (v11 < v4)
    {
      v15 = *(_QWORD *)(v12 + 8 * v11);
      v16 = *(float *)(v15 + 16);
      v17 = *(float *)(*(_QWORD *)(v12 + 8 * v14) + 16);
      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v18 = *(float *)(v15 + 16);
        while (1)
        {
          v19 = v18;
          v18 = *(float *)(*(_QWORD *)(v12 + 8 * v11) + 16);
          if (v17 < v16 == v19 >= v18)
            break;
          if (v4 == ++v11)
          {
            v11 = v4;
            break;
          }
        }
      }
      if (v17 < v16)
      {
        if (v11 < v14)
          goto LABEL_130;
        if (v14 < v11)
        {
          v20 = (uint64_t *)(v91 + 8 * v11);
          v21 = v11;
          v22 = v14;
          v23 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v12)
                goto LABEL_135;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_45;
    if (__OFSUB__(v11, v14))
      goto LABEL_128;
    if (v11 - v14 >= v7)
      goto LABEL_45;
    v25 = v14 + v7;
    if (__OFADD__(v14, v7))
      goto LABEL_131;
    if (v25 >= v4)
      v25 = v4;
    if (v25 < v14)
      break;
    if (v11 != v25)
    {
      v26 = (_QWORD *)(v91 + 8 * v11);
      do
      {
        v27 = *(_QWORD *)(v12 + 8 * v11);
        v28 = v14;
        v29 = v26;
        do
        {
          v30 = *v29;
          if (*(float *)(*v29 + 16) >= *(float *)(v27 + 16))
            break;
          if (!v12)
            goto LABEL_133;
          *v29 = v27;
          v29[1] = v30;
          --v29;
          ++v28;
        }
        while (v11 != v28);
        ++v11;
        ++v26;
      }
      while (v11 != v25);
      v11 = v25;
    }
LABEL_45:
    if (v11 < v14)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24971DB80(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v32 = *((_QWORD *)v10 + 2);
    v31 = *((_QWORD *)v10 + 3);
    v13 = v32 + 1;
    v12 = v94;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_24971DB80((char *)(v31 > 1), v32 + 1, 1, v10);
      v12 = v94;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v13;
    v33 = v10 + 32;
    v34 = &v10[16 * v32 + 32];
    *(_QWORD *)v34 = v14;
    *((_QWORD *)v34 + 1) = v11;
    if (v32)
    {
      while (1)
      {
        v35 = v13 - 1;
        if (v13 >= 4)
        {
          v40 = &v33[16 * v13];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_112;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_113;
          v47 = v13 - 2;
          v48 = &v33[16 * v13 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_115;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_118;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_122;
            v63 = v38 < v73;
            goto LABEL_82;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v64 = *((_QWORD *)v10 + 4);
            v65 = *((_QWORD *)v10 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_76;
          }
          v37 = *((_QWORD *)v10 + 4);
          v36 = *((_QWORD *)v10 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_114;
        v47 = v13 - 2;
        v53 = &v33[16 * v13 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_117;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_120;
        if (__OFADD__(v57, v62))
          goto LABEL_121;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_82:
          if (v63)
            v35 = v47;
          goto LABEL_84;
        }
LABEL_76:
        if ((v58 & 1) != 0)
          goto LABEL_116;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_119;
        if (v69 < v57)
          goto LABEL_14;
LABEL_84:
        v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v12)
          goto LABEL_134;
        v75 = v10;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_2496D6254((char *)(v12 + 8 * *(_QWORD *)v76), (char *)(v12 + 8 * *(_QWORD *)v78), v12 + 8 * v79, __dst);
        if (v1)
          goto LABEL_92;
        if (v79 < v77)
          goto LABEL_109;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_110;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_111;
        v10 = v75;
        v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v12 = v94;
        if (v80 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v7 = v92;
    v4 = v93;
    if (v11 >= v93)
    {
      v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  result = sub_24972D074();
  __break(1u);
  return result;
}

uint64_t sub_2496D61EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(float *)(*v8 + 16) >= *(float *)(v6 + 16))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2496D6254(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*(float *)(v20 + 16) >= *(float *)(*((_QWORD *)v16 - 1) + 16))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(float *)(*(_QWORD *)v4 + 16) >= *(float *)(*(_QWORD *)v6 + 16))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24971DC78(&v24, &v23, &v22);
    return 1;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2496D64D0(unint64_t a1, uint64_t a2, float a3)
{
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  CGFloat *v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  char *v20;
  char *v21;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  double v33;
  float v34;
  CGFloat r2;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  uint64_t v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v43 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
LABEL_22:
    v4 = sub_24972D0BC();
  else
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_beginAccess();
  if (v4)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x24BCF6CE8](i, a1);
        v7 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_18:
          __break(1u);
          return v43;
        }
      }
      else
      {
        if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_22;
        }
        v6 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
        v7 = i + 1;
        if (__OFADD__(i, 1))
          goto LABEL_18;
      }
      swift_beginAccess();
      v8 = *(char **)(v6 + 24);
      v9 = *(char **)(a2 + 24);
      v10 = (CGFloat *)&v8[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[2];
      v14 = v10[3];
      v15 = (CGFloat *)&v9[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v16 = *v15;
      v17 = v15[1];
      v19 = v15[2];
      v18 = v15[3];
      v20 = v8;
      v21 = v9;
      v41 = v12;
      v42 = v11;
      v44.origin.x = v11;
      v44.origin.y = v12;
      v39 = v14;
      v40 = v13;
      v44.size.width = v13;
      v44.size.height = v14;
      v50.origin.x = v16;
      v50.origin.y = v17;
      v50.size.width = v19;
      r2 = v18;
      v50.size.height = v18;
      v45 = CGRectUnion(v44, v50);
      x = v45.origin.x;
      y = v45.origin.y;
      width = v45.size.width;
      height = v45.size.height;
      v26 = CGRectGetHeight(v45);
      v46.origin.x = x;
      v46.origin.y = y;
      v46.size.width = width;
      v46.size.height = height;
      v27 = v26 * CGRectGetWidth(v46);
      if (v27 == 0.0)
      {

        if (a3 >= 0.0)
          goto LABEL_5;
      }
      else
      {
        v47.origin.y = v41;
        v47.origin.x = v42;
        v47.size.height = v39;
        v47.size.width = v40;
        v51.origin.x = v16;
        v51.origin.y = v17;
        v51.size.width = v19;
        v51.size.height = r2;
        v48 = CGRectIntersection(v47, v51);
        v28 = v48.origin.x;
        v29 = v48.origin.y;
        v30 = v48.size.width;
        v31 = v48.size.height;
        v32 = CGRectGetHeight(v48);
        v49.origin.x = v28;
        v49.origin.y = v29;
        v49.size.width = v30;
        v49.size.height = v31;
        v33 = CGRectGetWidth(v49);

        v34 = v32 * v33 / v27;
        if (v34 <= a3)
          goto LABEL_5;
      }
      if (*(_QWORD *)(v6 + 32) == *(_QWORD *)(a2 + 32))
      {
        swift_release();
        goto LABEL_6;
      }
LABEL_5:
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
LABEL_6:
      if (v7 == v4)
        return v43;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t _s15UIUnderstanding19CenterNetPredictionC24nonMaximalSuppressionIOU5boxes9thresholdSayACGAG_SftFZ_0(unint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = a1;
  v20 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_20;
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      v18 = v4;
      sub_2496D5B08(&v18);
      v5 = v18;
      v19 = v18;
      if (v18 < 0 || (v18 & 0x4000000000000000) != 0)
        break;
      if (*(uint64_t *)(v18 + 16) < 1)
        goto LABEL_24;
      while (1)
      {
LABEL_7:
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v5 & 0x8000000000000000) != 0
          || (v5 & 0x4000000000000000) != 0)
        {
          sub_2496F72FC(v5);
        }
        v3 = v5 & 0xFFFFFFFFFFFFFF8;
        v6 = *(_QWORD *)(v3 + 16);
        if (!v6)
          break;
        v7 = v6 - 1;
        v10 = *(_QWORD *)(v3 + 32);
        v8 = v3 + 32;
        v9 = v10;
        memmove((void *)v8, (const void *)(v8 + 8), 8 * (v6 - 1));
        *(_QWORD *)(v8 - 16) = v7;
        sub_24972CCE4();
        v11 = swift_retain();
        MEMORY[0x24BCF69D0](v11);
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_24972CCF0();
        sub_24972CD08();
        sub_24972CCE4();
        v12 = swift_bridgeObjectRetain();
        v5 = sub_2496D64D0(v12, v9, a2);
        swift_bridgeObjectRelease_n();
        swift_release();
        v19 = v5;
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          v13 = sub_24972D0BC();
          swift_bridgeObjectRelease();
          if (v13 <= 0)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            return v20;
          }
        }
        else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
        {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      v14 = sub_24972D0BC();
      swift_bridgeObjectRelease();
      if (v14 < 1)
        goto LABEL_22;
      v15 = swift_bridgeObjectRetain();
      v4 = (uint64_t)sub_2496F115C(v15);
      swift_bridgeObjectRelease();
    }
    swift_retain();
    v16 = sub_24972D0BC();
    swift_release();
    if (v16 >= 1)
      goto LABEL_7;
LABEL_24:
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  return v3;
}

id sub_2496D6A48@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for CenterNetPrediction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CenterNetPrediction.bbox.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CenterNetPrediction.bbox.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CenterNetPrediction.bbox.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CenterNetPrediction.__allocating_init(heat:bbox:classIndex:detectionType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CenterNetPrediction.convertToUIObject()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CenterNetPrediction.convertToClickabilityDetection()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

void destroy for CenterNetPrediction.ClickabilityBox(id *a1)
{

}

uint64_t initializeWithCopy for CenterNetPrediction.ClickabilityBox(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for CenterNetPrediction.ClickabilityBox(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_OWORD *)(a2 + 16);
  v11 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CenterNetPrediction.ClickabilityBox(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CenterNetPrediction.ClickabilityBox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CenterNetPrediction.ClickabilityBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CenterNetPrediction.ClickabilityBox()
{
  return &type metadata for CenterNetPrediction.ClickabilityBox;
}

uint64_t type metadata accessor for ElementMindNetSquareInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementMindNetSquareOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementMindNetSquare()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BiEncoderCNNInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BiEncoderCNNOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BiEncoderCNN()
{
  return objc_opt_self();
}

uint64_t UIDetection.label.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
}

uint64_t sub_2496D7294()
{
  return UIType.toString()()._countAndFlagsBits;
}

double UIDetection.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
}

uint64_t sub_2496D733C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2496D7408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496D7464(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2496D74CC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id UIDetection.__allocating_init(label:confidence:text:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  objc_super v12;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label] = a1;
  *(double *)&v9[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence] = a4;
  swift_beginAccess();
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  swift_bridgeObjectRelease();
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id UIDetection.init(label:confidence:text:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char *v7;
  objc_super v9;

  v7 = &v4[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label] = a1;
  *(double *)&v4[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence] = a4;
  swift_beginAccess();
  *(_QWORD *)v7 = a2;
  *((_QWORD *)v7 + 1) = a3;
  swift_bridgeObjectRelease();
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for UIDetection();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for UIDetection()
{
  return objc_opt_self();
}

void *UIDetection.__allocating_init(from:)(_QWORD *a1)
{
  return sub_2496D7D44(a1);
}

uint64_t sub_2496D7748(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496D7F58();
  sub_24972D2FC();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
  v12 = 0;
  sub_2496D7F9C();
  sub_24972D1A0();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v11) = 1;
  sub_24972D17C();
  v10 = v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
  swift_beginAccess();
  if (!*(_QWORD *)(v10 + 8))
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = 2;
  swift_bridgeObjectRetain();
  sub_24972D164();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496D7900(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249721D24(*a1, *a2);
}

uint64_t sub_2496D790C()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496D79A4()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496D7A18()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496D7AAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496D7CFC();
  *a1 = result;
  return result;
}

void sub_2496D7AD8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEA00000000006563;
  v5 = 0x6E656469666E6F63;
  if (v2 != 1)
  {
    v5 = 1954047348;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C6562616CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2496D7B30()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656469666E6F63;
  if (*v0 != 1)
    v1 = 1954047348;
  if (*v0)
    return v1;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_2496D7B84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496D7CFC();
  *a1 = result;
  return result;
}

uint64_t sub_2496D7BA8()
{
  sub_2496D7F58();
  return sub_24972D308();
}

uint64_t sub_2496D7BD0()
{
  sub_2496D7F58();
  return sub_24972D314();
}

id UIDetection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIDetection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIDetection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIDetection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_2496D7CB4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_2496D7D44(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2496D7CDC(_QWORD *a1)
{
  return sub_2496D7748(a1);
}

uint64_t sub_2496D7CFC()
{
  unint64_t v0;

  v0 = sub_24972D110();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void *sub_2496D7D44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  objc_super v19;
  uint64_t v20;
  char v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496D7F58();
  sub_24972D2F0();
  if (!v1)
  {
    v21 = 0;
    sub_2496D82A4();
    sub_24972D14C();
    v8 = v20;
    LOBYTE(v20) = 1;
    sub_24972D140();
    v10 = v9;
    LOBYTE(v20) = 2;
    v12 = sub_24972D11C();
    v17 = v13;
    v18 = (Class)type metadata accessor for UIDetection();
    v14 = (char *)objc_allocWithZone(v18);
    v15 = (uint64_t *)&v14[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text];
    *v15 = 0;
    v15[1] = 0;
    *(_QWORD *)&v14[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label] = v8;
    *(_QWORD *)&v14[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence] = v10;
    swift_beginAccess();
    v16 = v17;
    *v15 = v12;
    v15[1] = v16;
    swift_bridgeObjectRelease();
    v19.receiver = v14;
    v19.super_class = v18;
    v7 = objc_msgSendSuper2(&v19, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_2496D7F58()
{
  unint64_t result;

  result = qword_257879F70;
  if (!qword_257879F70)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F614, &type metadata for UIDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879F70);
  }
  return result;
}

unint64_t sub_2496D7F9C()
{
  unint64_t result;

  result = qword_257879F78;
  if (!qword_257879F78)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for UIType, &type metadata for UIType);
    atomic_store(result, (unint64_t *)&qword_257879F78);
  }
  return result;
}

uint64_t sub_2496D7FE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for UIDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIDetection.labelString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of UIDetection.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UIDetection.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UIDetection.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UIDetection.__allocating_init(label:confidence:text:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of UIDetection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of UIDetection.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t storeEnumTagSinglePayload for UIDetection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2496D814C + 4 * byte_24972F49D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2496D8180 + 4 * asc_24972F498[v4]))();
}

uint64_t sub_2496D8180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D8188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496D8190);
  return result;
}

uint64_t sub_2496D819C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496D81A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2496D81A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496D81B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIDetection.CodingKeys()
{
  return &type metadata for UIDetection.CodingKeys;
}

unint64_t sub_2496D81D0()
{
  unint64_t result;

  result = qword_257879F80;
  if (!qword_257879F80)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F5EC, &type metadata for UIDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879F80);
  }
  return result;
}

unint64_t sub_2496D8218()
{
  unint64_t result;

  result = qword_257879F88;
  if (!qword_257879F88)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F524, &type metadata for UIDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879F88);
  }
  return result;
}

unint64_t sub_2496D8260()
{
  unint64_t result;

  result = qword_257879F90;
  if (!qword_257879F90)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F54C, &type metadata for UIDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257879F90);
  }
  return result;
}

unint64_t sub_2496D82A4()
{
  unint64_t result;

  result = qword_257879FA0;
  if (!qword_257879FA0)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for UIType, &type metadata for UIType);
    atomic_store(result, (unint64_t *)&qword_257879FA0);
  }
  return result;
}

uint64_t sub_2496D82E8()
{
  uint64_t v0;

  v0 = sub_24972C9C0();
  __swift_allocate_value_buffer(v0, qword_25787EAC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25787EAC8);
  return sub_24972C9B4();
}

uint64_t sub_2496D8368()
{
  uint64_t v0;

  v0 = sub_24972C960();
  __swift_allocate_value_buffer(v0, qword_25787EAE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25787EAE0);
  return sub_24972C954();
}

uint64_t sub_2496D83B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v37 = a1;
  v1 = sub_24972C9C0();
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24972C8B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879FA8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v35 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v38 = (uint64_t)&v35 - v15;
  v35 = (id)objc_opt_self();
  v16 = objc_msgSend(v35, sel_defaultManager);
  v17 = (void *)sub_24972CB94();
  v18 = objc_msgSend(v16, sel_containerURLForSecurityApplicationGroupIdentifier_, v17);

  if (v18)
  {
    sub_24972C8DC();

    v19 = sub_24972C900();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 0, 1, v19);
  }
  else
  {
    v19 = sub_24972C900();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
  }
  v20 = v38;
  sub_2496D969C((uint64_t)v14, v38);
  sub_2496D96E4(v20, (uint64_t)v11);
  sub_24972C900();
  v21 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v19) == 1)
  {
    sub_2496D972C((uint64_t)v11);
    if (qword_257879B90 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v1, (uint64_t)qword_25787EAC8);
    v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v3, v22, v1);
    v24 = sub_24972C9A8();
    v25 = sub_24972CDF8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_2496CB000, v24, v25, "couldnt get app container", v26, 2u);
      MEMORY[0x24BCF76F0](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
    v27 = objc_msgSend(v35, sel_defaultManager);
    v28 = objc_msgSend(v27, sel_temporaryDirectory);

    sub_24972C8DC();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v37, v11, v19);
    v39 = 0xD000000000000013;
    v40 = 0x80000002497326F0;
    v29 = *MEMORY[0x24BDCD7A0];
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v30(v7, v29, v4);
    sub_2496D9784();
    sub_24972C8F4();
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v7, v4);
    swift_bridgeObjectRelease();
    if (qword_257879B98 != -1)
      swift_once();
    v32 = sub_24972C960();
    __swift_project_value_buffer(v32, (uint64_t)qword_25787EAE0);
    v39 = sub_24972C930();
    v40 = v33;
    v30(v7, v29, v4);
    sub_24972C8F4();
    v31(v7, v4);
    swift_bridgeObjectRelease();
  }
  return sub_2496D972C(v38);
}

uint64_t sub_2496D8834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  id v16;
  void *v17;
  unsigned int v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  os_log_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  os_log_t v41;
  _QWORD *v42;
  void *v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55[5];

  v48 = a1;
  v49 = a2;
  v51 = a3;
  v55[3] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_24972C9C0();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24972C8B8();
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24972C900();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIDeduplicator();
  sub_2496D83B0((uint64_t)v11);
  v54 = 0;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_defaultManager);
  sub_24972C8E8();
  v14 = (void *)sub_24972CB94();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_fileExistsAtPath_isDirectory_, v14, &v54);

  if (!v15 || (v54 & 1) == 0)
  {
    v16 = objc_msgSend(v12, sel_defaultManager);
    v17 = (void *)sub_24972C8C4();
    v55[0] = 0;
    v18 = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, v55);

    v19 = v55[0];
    if (!v18)
    {
      v20 = v19;
      v21 = (void *)sub_24972C8AC();

      swift_willThrow();
      if (qword_257879B90 != -1)
        swift_once();
      v22 = v47;
      v23 = __swift_project_value_buffer(v47, (uint64_t)qword_25787EAC8);
      v25 = v45;
      v24 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v23, v22);
      v26 = v21;
      v27 = v21;
      v28 = sub_24972C9A8();
      v29 = sub_24972CDF8();
      v44 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v42 = (_QWORD *)swift_slowAlloc();
        v43 = (void *)swift_slowAlloc();
        v55[0] = v43;
        *(_DWORD *)v30 = 136315394;
        v40 = v30 + 4;
        swift_beginAccess();
        sub_2496CED84(&qword_257879FD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v41 = v28;
        v31 = sub_24972D1C4();
        v52 = sub_2496F0B1C(v31, v32, (uint64_t *)v55);
        sub_24972CF18();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2112;
        v33 = v21;
        v34 = _swift_stdlib_bridgeErrorToNSError();
        v52 = v34;
        sub_24972CF18();
        v35 = v42;
        *v42 = v34;

        v36 = v41;
        _os_log_impl(&dword_2496CB000, v41, (os_log_type_t)v44, "Failed to create directory %s with error: %@", (uint8_t *)v30, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257879FD8);
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v35, -1, -1);
        v37 = v43;
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v37, -1, -1);
        MEMORY[0x24BCF76F0](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v22);
      }
    }
  }
  v52 = v48;
  v53 = v49;
  swift_beginAccess();
  v38 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v7, *MEMORY[0x24BDCD7A0], v5);
  sub_2496D9784();
  sub_24972C8F4();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v51, v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t _s15UIUnderstanding14UIDeduplicatorC24debugSaveImageToLocation06targetE08filenameySo10CGImageRefa_SStFZ_0(CGImage *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const __CFURL *v14;
  __CFString *v15;
  CGImageDestination *v16;
  uint64_t v18;

  v6 = sub_24972C99C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24972C900();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIDeduplicator();
  sub_2496D8834(a2, a3, (uint64_t)v13);
  v14 = (const __CFURL *)sub_24972C8C4();
  sub_24972C990();
  sub_24972C984();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = (__CFString *)sub_24972CB94();
  swift_bridgeObjectRelease();
  v16 = CGImageDestinationCreateWithURL(v14, v15, 1uLL, 0);

  if (v16)
  {
    CGImageDestinationAddImage(v16, a1, 0);
    CGImageDestinationFinalize(v16);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t _s15UIUnderstanding14UIDeduplicatorC26debugSaveCGRectsToLocation11targetRects8filenameySaySo6CGRectVG_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v48)(char *, uint64_t);
  _QWORD v49[2];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58[4];

  v57 = sub_24972C9C0();
  v54 = *(_QWORD *)(v57 - 8);
  v6 = MEMORY[0x24BDAC7A8](v57);
  v53 = (unint64_t)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v49 - v8;
  v10 = sub_24972CBF4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v52 = sub_24972C900();
  v55 = *(_QWORD *)(v52 - 8);
  v15 = MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v49 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v49 - v20;
  type metadata accessor for UIDeduplicator();
  v56 = v21;
  sub_2496D8834(a2, a3, (uint64_t)v21);
  sub_24972C84C();
  swift_allocObject();
  v22 = sub_24972C840();
  v58[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879FB8);
  sub_2496D9808();
  v51 = v22;
  v23 = sub_24972C834();
  v25 = v24;
  v26 = v9;
  sub_24972CBE8();
  v27 = sub_24972CBC4();
  if (v28)
  {
    v29 = v25;
    v58[0] = v27;
    v58[1] = v28;
    sub_24972CBE8();
    sub_2496D9784();
    v30 = v56;
    sub_24972CF48();
    sub_2496D9884(v23, v29);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v52);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v53 = v25;
    if (qword_257879B90 != -1)
      swift_once();
    v31 = v57;
    v32 = __swift_project_value_buffer(v57, (uint64_t)qword_25787EAC8);
    v33 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v26, v32, v31);
    v34 = v55;
    v35 = v19;
    v36 = v19;
    v37 = v56;
    v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v36, v56, v52);
    v39 = sub_24972C9A8();
    v40 = sub_24972CDF8();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v50 = v26;
      v42 = (uint8_t *)v41;
      v43 = swift_slowAlloc();
      v58[0] = v43;
      *(_DWORD *)v42 = 136315138;
      v49[1] = v42 + 4;
      sub_2496CED84(&qword_257879FD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v44 = sub_24972D1C4();
      v58[2] = sub_2496F0B1C(v44, v45, v58);
      sub_24972CF18();
      swift_bridgeObjectRelease();
      v46 = *(void (**)(char *, uint64_t))(v34 + 8);
      v46(v35, v38);
      _os_log_impl(&dword_2496CB000, v39, v40, "Failed to write CGRects %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BCF76F0](v43, -1, -1);
      MEMORY[0x24BCF76F0](v42, -1, -1);
      sub_2496D9884(v23, v53);

      swift_release();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v57);
      return ((uint64_t (*)(char *, uint64_t))v46)(v56, v38);
    }
    else
    {
      sub_2496D9884(v23, v53);

      swift_release();
      v48 = *(void (**)(char *, uint64_t))(v34 + 8);
      v48(v35, v38);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v57);
      return ((uint64_t (*)(char *, uint64_t))v48)(v37, v38);
    }
  }
}

uint64_t sub_2496D969C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496D96E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496D972C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879FA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_2496D9784()
{
  unint64_t result;

  result = qword_257879FB0;
  if (!qword_257879FB0)
  {
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257879FB0);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_2496D9808()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257879FC0;
  if (!qword_257879FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257879FB8);
    v2 = sub_2496CED84(&qword_257879FC8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257879FC0);
  }
  return result;
}

uint64_t sub_2496D9884(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2496D98C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v0;
  v3 = sub_24972C9C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257879BF8 != -1)
    swift_once();
  v7 = (void *)qword_25787EBE8;
  if (qword_25787EBE8)
  {
    v8 = (id)qword_25787EBE8;
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
    v10 = (void *)qword_25787EBE8;
    qword_25787EBE8 = (uint64_t)v9;
    v8 = v9;

    v7 = 0;
  }
  v11 = v7;
  v12 = sub_249704170(0);
  if (v1)
  {

    type metadata accessor for BiCNNEmbeddingGenerator();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = v12;

    *(_QWORD *)(v2 + 16) = v13;
    sub_24972C9B4();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v2 + OBJC_IVAR____TtC15UIUnderstanding23BiCNNEmbeddingGenerator_log, v6, v3);
  }
  return v2;
}

uint64_t sub_2496D9A54()
{
  const __CFData *v0;
  CGDataProvider *v1;
  CGImageRef v2;
  CGImageRef v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint8_t *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v0 = (const __CFData *)sub_24972C924();
  v1 = CGDataProviderCreateWithCFData(v0);

  if (!v1)
  {
    v6 = sub_24972C9A8();
    v7 = sub_24972CDF8();
    if (os_log_type_enabled(v6, (os_log_type_t)v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_2496CB000, v6, (os_log_type_t)v7, "-W- Couldn't convert image data to CGImage in Screen Similarity detector", v8, 2u);
      MEMORY[0x24BCF76F0](v8, -1, -1);
    }

    return 0;
  }
  v2 = CGImageCreateWithPNGDataProvider(v1, 0, 0, kCGRenderingIntentDefault);
  if (!v2)
  {
    v9 = sub_24972C9A8();
    v10 = sub_24972CDF8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2496CB000, v9, v10, "-W- Couldn't create CGImage in Screen Similarity detector", v11, 2u);
      MEMORY[0x24BCF76F0](v11, -1, -1);
    }

    return 0;
  }
  v3 = v2;
  sub_2496CFE28(v2);
  v5 = v4;

  return v5;
}

void sub_2496D9BD8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v7 = type metadata accessor for UIUDetectorResult();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7) != 1)
  {
    v8 = sub_24972C9A8();
    v9 = sub_24972CDF8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_2496CB000, v8, v9, "Ignoring non-nil uiuDetectorResult passed to BiCNNEmbedding generator.", v10, 2u);
      MEMORY[0x24BCF76F0](v10, -1, -1);
    }

  }
  sub_2496CFE28(a1);
  if (!v3)
  {
    *(_QWORD *)a3 = v11;
    *(_DWORD *)(a3 + 8) = 1049179980;
  }
}

uint64_t sub_2496D9CE0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  int v10;

  v5 = type metadata accessor for UIUDetectorResult();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 1, v5) != 1)
  {
    v6 = sub_24972C9A8();
    v7 = sub_24972CDF8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_2496CB000, v6, v7, "Ignoring non-nil uiuDetectorResult passed to BiCNNEmbedding generator.", v8, 2u);
      MEMORY[0x24BCF76F0](v8, -1, -1);
    }

  }
  result = sub_2496D9A54();
  if (!v2)
  {
    if (result)
      v10 = 1049179980;
    else
      v10 = 0;
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v10;
  }
  return result;
}

uint64_t sub_2496D9DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding23BiCNNEmbeddingGenerator_log;
  v2 = sub_24972C9C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2496D9E50()
{
  return type metadata accessor for BiCNNEmbeddingGenerator();
}

uint64_t type metadata accessor for BiCNNEmbeddingGenerator()
{
  uint64_t result;

  result = qword_257879FE0;
  if (!qword_257879FE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2496D9E94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C9C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2496D9F10(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2496D9BD8(a1, a2, a3);
}

uint64_t sub_2496D9F30@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_2496D9CE0(a1, a2);
}

uint64_t ScreenShot.imageID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ScreenShotCompat_imageID);
  swift_bridgeObjectRetain();
  return v1;
}

id ScreenShot.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___ScreenShotCompat_image);
}

uint64_t ScreenShot.__allocating_init(id:image:fingerprinter:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_2496DA2A8(a1, a2, a3, a4);
}

id ScreenShot.__allocating_init(id:image:detectorResult:groupingInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR___ScreenShotCompat_imageID];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  *(_QWORD *)&v11[OBJC_IVAR___ScreenShotCompat_image] = a3;
  sub_2496D4104(a4, (uint64_t)&v11[OBJC_IVAR___ScreenShotCompat_detections]);
  *(_QWORD *)&v11[OBJC_IVAR___ScreenShotCompat_groupingInfo] = a5;
  v15.receiver = v11;
  v15.super_class = v5;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_2496D407C(a4);
  return v13;
}

id ScreenShot.init(id:image:detectorResult:groupingInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v8;
  id v9;
  objc_super v11;

  v8 = &v5[OBJC_IVAR___ScreenShotCompat_imageID];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v5[OBJC_IVAR___ScreenShotCompat_image] = a3;
  sub_2496D4104(a4, (uint64_t)&v5[OBJC_IVAR___ScreenShotCompat_detections]);
  *(_QWORD *)&v5[OBJC_IVAR___ScreenShotCompat_groupingInfo] = a5;
  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for ScreenShot();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_2496D407C(a4);
  return v9;
}

id ScreenShot.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ScreenShot.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ScreenShot.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenShot();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ScreenGroup.screenGroupID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScreenGroup.externalID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2496DA2A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t i;
  char *v27;
  char *v28;
  char *v29;
  Swift::String v30;
  char *v31;
  Swift::String *v32;
  unint64_t v33;
  CGImage *v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  CGImage *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  objc_super v53;
  uint64_t v54;

  v5 = v4;
  v54 = a2;
  v48 = a1;
  v8 = type metadata accessor for UIUDetectorResult();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v41 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t *)((char *)&v41 - v15);
  if (a4)
  {
    v16 = a4;
  }
  else
  {
    type metadata accessor for UIFingerprinter();
    v22 = swift_allocObject();
    v16 = UIFingerprinter.init(platform:)(1);
    if (v5)
    {
      swift_bridgeObjectRelease();

      return v22;
    }
  }
  v44 = v16;
  swift_retain();
  UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)((CGImage *)a3, 1, 1, 0, 0, 1, v14, 0.2);
  v46 = v11;
  v47 = a4;
  v45 = (CGImage *)a3;
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_24972F6C0;
    v51 = 0;
    v52 = 0xE000000000000000;
    sub_24972CFB4();
    sub_24972CC48();
    v50 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A020);
    sub_24972D05C();
    v18 = v51;
    v19 = v52;
    *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v19;
    sub_24972D29C();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    v20 = v49;
    sub_2496D40B8();
    v21 = MEMORY[0x24BEE4AF8];
    sub_24972CA20();

    *v20 = v21;
LABEL_21:
    v33 = swift_bridgeObjectRetain();
    v34 = v45;
    v35 = sub_2496E8724(v33, v45);
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v46;
    sub_2496D4104((uint64_t)v20, (uint64_t)v46);
    v37 = (objc_class *)type metadata accessor for ScreenShot();
    v38 = (char *)objc_allocWithZone(v37);
    v39 = &v38[OBJC_IVAR___ScreenShotCompat_imageID];
    v40 = v54;
    *(_QWORD *)v39 = v48;
    *((_QWORD *)v39 + 1) = v40;
    *(_QWORD *)&v38[OBJC_IVAR___ScreenShotCompat_image] = v34;
    sub_2496D4104(v36, (uint64_t)&v38[OBJC_IVAR___ScreenShotCompat_detections]);
    *(_QWORD *)&v38[OBJC_IVAR___ScreenShotCompat_groupingInfo] = v35;
    v53.receiver = v38;
    v53.super_class = v37;
    v22 = (uint64_t)objc_msgSendSuper2(&v53, sel_init);
    sub_2496D407C(v36);
    swift_release();
    swift_release();
    sub_2496D407C((uint64_t)v20);
    return v22;
  }
  v42 = v14;
  v43 = 0;
  v23 = *(_QWORD *)v14;
  if (!(*(_QWORD *)v14 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_9;
LABEL_20:
    swift_bridgeObjectRelease();
    v20 = v49;
    sub_2496D4038((uint64_t)v42, (uint64_t)v49);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  result = sub_24972D0BC();
  v24 = result;
  if (!result)
    goto LABEL_20;
LABEL_9:
  if (v24 >= 1)
  {
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v27 = (char *)MEMORY[0x24BCF6CE8](i, v23);
      else
        v27 = (char *)*(id *)(v23 + 8 * i + 32);
      v28 = v27;
      v29 = &v27[OBJC_IVAR___UIObjectCompat_iconDetection];
      swift_beginAccess();
      if (*(_QWORD *)v29)
      {
        v30 = IconLabel.toString()();
        v31 = &v28[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        v32 = (Swift::String *)(*(_QWORD *)v31 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        *v32 = v30;

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ScreenShot()
{
  uint64_t result;

  result = qword_25787A008;
  if (!qword_25787A008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2496DA790()
{
  return type metadata accessor for ScreenShot();
}

uint64_t sub_2496DA798()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UIUDetectorResult();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScreenShot()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenShot.__allocating_init(id:image:detectorResult:groupingInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for ScreenGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScreenGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScreenGroup(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v6 = v4;

  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScreenGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenGroup()
{
  return &type metadata for ScreenGroup;
}

uint64_t type metadata accessor for ElementMindNetPortraitInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementMindNetPortraitOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementMindNetPortrait()
{
  return objc_opt_self();
}

UIUnderstanding::ScreenEmbedding __swiftcall ScreenEmbedding.init(_:threshold:)(MLMultiArray _, Swift::Float threshold)
{
  uint64_t v2;
  UIUnderstanding::ScreenEmbedding result;

  *(MLMultiArray *)v2 = _;
  *(Swift::Float *)(v2 + 8) = threshold;
  result.array = _;
  result.threshold = threshold;
  return result;
}

Swift::Bool __swiftcall ScreenEmbedding.compare(with:threshold:)(UIUnderstanding::ScreenEmbedding with, Swift::Float_optional *threshold)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  float v6;
  uint64_t *v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  v3 = *(_QWORD *)with.array.super.isa;
  v4 = *((_DWORD *)with.array.super.isa + 2);
  v5 = *((_DWORD *)v2 + 2);
  if (((unint64_t)threshold & 0x100000000) != 0)
    v6 = *((float *)v2 + 2);
  else
    v6 = *(float *)&threshold;
  v11 = *v2;
  v12 = v5;
  v9 = v3;
  v10 = v4;
  v7 = &v9;
  return ScreenEmbedding.euclideanDistance(with:)(*(UIUnderstanding::ScreenEmbedding *)(&v4 - 2)) < v6;
}

BOOL sub_2496DAE08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

float ScreenEmbedding.threshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void ScreenEmbedding.threshold.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*ScreenEmbedding.threshold.modify())()
{
  return nullsub_1;
}

uint64_t ScreenEmbedding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v13;
  char *v14;
  char *v15;
  unint64_t v16;
  void *v17;
  char *v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  int v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_25787A028);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496DBC28();
  sub_24972D2F0();
  if (!v2)
  {
    LOBYTE(v40) = 0;
    sub_2496DBC6C();
    sub_24972D14C();
    v35 = a2;
    sub_2496DBF18((uint64_t)&v41);
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_25787A040);
    v39 = 1;
    sub_2496DC1C8((unint64_t *)&qword_25787A048, (uint64_t *)&qword_25787A040, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    sub_24972D14C();
    v34 = v10;
    v11 = v40;
    v39 = 2;
    sub_24972D14C();
    v38 = v11;
    v13 = v40;
    if (v34)
    {
      v33 = v6;
      v14 = v38;
      v15 = (char *)MEMORY[0x24BEE4AF8];
      v16 = 0x24BDD1000uLL;
      v36 = (char *)*((_QWORD *)v38 + 2);
      v37 = v40;
      if (v36)
      {
        v40 = (char *)MEMORY[0x24BEE4AF8];
        sub_24972D038();
        v17 = 0;
        do
        {
          v18 = (char *)v17 + 1;
          objc_msgSend(objc_allocWithZone(*(Class *)(v16 + 1760)), sel_initWithInteger_, *(_QWORD *)&v14[8 * (_QWORD)v17 + 32]);
          sub_24972D020();
          sub_24972D044();
          v16 = 0x24BDD1000;
          v14 = v38;
          sub_24972D050();
          sub_24972D02C();
          v17 = v18;
        }
        while (v36 != v18);
        v36 = v40;
        swift_bridgeObjectRelease();
        v13 = v37;
        v15 = (char *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        swift_bridgeObjectRelease();
        v36 = (char *)MEMORY[0x24BEE4AF8];
      }
      v38 = (char *)*((_QWORD *)v13 + 2);
      if (v38)
      {
        v40 = v15;
        sub_24972D038();
        v20 = 0;
        do
        {
          v21 = v20 + 1;
          objc_msgSend(objc_allocWithZone(*(Class *)(v16 + 1760)), (SEL)&stru_251AAE040.size + 2, *(_QWORD *)&v37[8 * (_QWORD)v20 + 32]);
          sub_24972D020();
          sub_24972D044();
          v16 = 0x24BDD1000;
          sub_24972D050();
          sub_24972D02C();
          v20 = v21;
        }
        while (v38 != v21);
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_25787A058);
      v39 = 3;
      sub_2496DC1C8((unint64_t *)&qword_25787A060, (uint64_t *)&qword_25787A058, MEMORY[0x24BEE1520], MEMORY[0x24BEE4AC0]);
      sub_24972D14C();
      v22 = v35;
      if ((BYTE4(v40) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2496DC140();
        swift_allocError();
        *v23 = 1;
LABEL_19:
        swift_willThrow();
        sub_2496D9884(v41, v42);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      v24 = (int)v40;
      v38 = (char *)objc_allocWithZone(MEMORY[0x24BDBFFF0]);
      sub_2496DC224(0, (unint64_t *)&qword_257879E40);
      v25 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      v26 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      v40 = 0;
      v27 = objc_msgSend(v38, sel_initWithDataPointer_shape_dataType_strides_deallocator_error_, v34, v25, 65568, v26, 0, &v40);

      if (!v27)
      {
        v31 = v40;
        sub_24972C8AC();

        goto LABEL_19;
      }
      v28 = v41;
      v29 = v42;
      v30 = v40;
      sub_2496D9884(v28, v29);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
      *(_QWORD *)v22 = v27;
      *(_DWORD *)(v22 + 8) = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2496DC140();
      swift_allocError();
      *v19 = 0;
      swift_willThrow();
      sub_2496D9884(v41, v42);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ScreenEmbedding.encode(to:)(_QWORD *a1)
{
  id *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[4];
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A068);
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *v1;
  sub_24972CDC8();
  v7 = v47;
  v8 = v48;
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496DBC28();
  v10 = v8;
  v11 = v7;
  sub_24972D2FC();
  v47 = v7;
  v48 = v10;
  v46 = 0;
  sub_2496DC184();
  v12 = v6;
  sub_24972D1A0();
  v13 = v2;
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
    v14 = v11;
    return sub_2496D9884(v14, v10);
  }
  v16 = objc_msgSend(v44, sel_shape);
  v38[3] = sub_2496DC224(0, (unint64_t *)&qword_257879E40);
  v17 = sub_24972CCD8();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    v43 = v11;
    if (v18)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  v43 = v11;
  if (!v18)
    goto LABEL_16;
LABEL_6:
  v39 = 0;
  v40 = v10;
  v41 = v12;
  v42 = v4;
  v47 = MEMORY[0x24BEE4AF8];
  v12 = (char *)&v47;
  sub_2496D5A60(0, v18 & ~(v18 >> 63), 0);
  if (v18 < 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  v19 = 0;
  v20 = v47;
  do
  {
    if ((v17 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x24BCF6CE8](v19, v17);
    else
      v21 = *(id *)(v17 + 8 * v19 + 32);
    v22 = v21;
    v23 = sub_24972CD74();

    v47 = v20;
    v25 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_2496D5A60(v24 > 1, v25 + 1, 1);
      v20 = v47;
    }
    ++v19;
    *(_QWORD *)(v20 + 16) = v25 + 1;
    *(_QWORD *)(v20 + 8 * v25 + 32) = v23;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
  v12 = v41;
  v4 = v42;
  v13 = v39;
  v10 = v40;
LABEL_17:
  v47 = v20;
  v46 = 1;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A040);
  v27 = sub_2496DC1C8(&qword_25787A078, &qword_25787A040, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  sub_24972D1A0();
  v28 = v44;
  if (v13)
  {
LABEL_33:
    sub_2496D9884(v43, v10);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v12, v4);
  }
  v38[1] = v27;
  v38[2] = v26;
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v28, sel_strides);
  v9 = sub_24972CCD8();

  if (!(v9 >> 62))
  {
    v30 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_20;
LABEL_31:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x24BEE4AF8];
    goto LABEL_32;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  v30 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (!v30)
    goto LABEL_31;
LABEL_20:
  v39 = 0;
  v40 = v10;
  v41 = v12;
  v42 = v4;
  v47 = MEMORY[0x24BEE4AF8];
  result = sub_2496D5A60(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    v31 = 0;
    v32 = v47;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x24BCF6CE8](v31, v9);
      else
        v33 = *(id *)(v9 + 8 * v31 + 32);
      v34 = v33;
      v35 = sub_24972CD74();

      v47 = v32;
      v37 = *(_QWORD *)(v32 + 16);
      v36 = *(_QWORD *)(v32 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_2496D5A60(v36 > 1, v37 + 1, 1);
        v32 = v47;
      }
      ++v31;
      *(_QWORD *)(v32 + 16) = v37 + 1;
      *(_QWORD *)(v32 + 8 * v37 + 32) = v35;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
    v12 = v41;
    v4 = v42;
    v13 = v39;
    v10 = v40;
LABEL_32:
    v47 = v32;
    v46 = 2;
    sub_24972D1A0();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v47) = 3;
      sub_24972D188();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v4);
      v14 = v43;
      return sub_2496D9884(v14, v10);
    }
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_2496DB94C@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!__src)
    goto LABEL_8;
  if ((unint64_t)(a2 - 0x2000000000000000) >> 62 == 3)
  {
    v5 = 4 * a2;
    if (4 * a2)
    {
      if (v5 <= 14)
      {
        __src = sub_2496DC7F4((_BYTE *)__src, (_BYTE *)(__src + v5));
        v7 = v8 & 0xFFFFFFFFFFFFFFLL;
      }
      else
      {
        sub_24972C894();
        swift_allocObject();
        v6 = sub_24972C864();
        if ((unint64_t)v5 >= 0x7FFFFFFF)
        {
          sub_24972C918();
          __src = swift_allocObject();
          *(_QWORD *)(__src + 16) = 0;
          *(_QWORD *)(__src + 24) = v5;
          v7 = v6 | 0x8000000000000000;
        }
        else
        {
          __src = a2 << 34;
          v7 = v6 | 0x4000000000000000;
        }
      }
      goto LABEL_11;
    }
    __src = 0;
LABEL_8:
    v7 = 0xC000000000000000;
LABEL_11:
    *a3 = __src;
    a3[1] = v7;
    return __src;
  }
  __break(1u);
  return __src;
}

uint64_t sub_2496DBA38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2496DBA6C + 4 * byte_24972F7B0[*v0]))(0x7479427961727261, 0xEA00000000007365);
}

uint64_t sub_2496DBA6C()
{
  return 0x6570616873;
}

uint64_t sub_2496DBA80()
{
  return 0x656469727473;
}

uint64_t sub_2496DBA94()
{
  return 0x6C6F687365726874;
}

uint64_t sub_2496DBAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2496DC8B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2496DBAD4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2496DBAE0()
{
  sub_2496DBC28();
  return sub_24972D308();
}

uint64_t sub_2496DBB08()
{
  sub_2496DBC28();
  return sub_24972D314();
}

Swift::Float __swiftcall ScreenEmbedding.euclideanDistance(with:)(UIUnderstanding::ScreenEmbedding with)
{
  void **v1;
  void *v2;
  void *v3;
  unint64_t v4;
  Swift::Float result;
  unint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  id v10;
  float v11;
  float v12;
  id v13;
  float v14;
  float v15;

  v2 = *(void **)with.array.super.isa;
  v3 = *v1;
  v4 = (unint64_t)objc_msgSend(*(id *)with.array.super.isa, sel_count, *(double *)&with.threshold);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v4;
    if (v4)
    {
      v7 = 0;
      v8 = 0.0;
      do
      {
        v9 = v7 + 1;
        v10 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v7);
        objc_msgSend(v10, sel_floatValue);
        v12 = v11;

        v13 = objc_msgSend(v3, sel_objectAtIndexedSubscript_, v7);
        objc_msgSend(v13, sel_floatValue);
        v15 = v14;

        v8 = v8 + (float)((float)(v12 - v15) * (float)(v12 - v15));
        v7 = v9;
      }
      while (v6 != v9);
    }
    else
    {
      v8 = 0.0;
    }
    return sqrtf(v8);
  }
  return result;
}

unint64_t sub_2496DBC28()
{
  unint64_t result;

  result = qword_25787A030;
  if (!qword_25787A030)
  {
    result = MEMORY[0x24BCF7648](&unk_24972FA20, &type metadata for ScreenEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A030);
  }
  return result;
}

unint64_t sub_2496DBC6C()
{
  unint64_t result;

  result = qword_25787A038;
  if (!qword_25787A038)
  {
    result = MEMORY[0x24BCF7648](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25787A038);
  }
  return result;
}

uint64_t ScreenEmbedding.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_24972CEF4();

  return sub_24972D2CC();
}

uint64_t static ScreenEmbedding.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;

  v2 = *(float *)(a1 + 8);
  v3 = *(float *)(a2 + 8);
  sub_2496DC224(0, &qword_25787A080);
  return sub_24972CEE8() & (v2 == v3);
}

uint64_t ScreenEmbedding.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_24972D2B4();
  v2 = v1;
  sub_24972CEF4();

  sub_24972D2CC();
  return sub_24972D2D8();
}

uint64_t sub_2496DBDD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScreenEmbedding.init(from:)(a1, a2);
}

uint64_t sub_2496DBDE4(_QWORD *a1)
{
  return ScreenEmbedding.encode(to:)(a1);
}

uint64_t sub_2496DBDFC()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_24972CEF4();

  return sub_24972D2CC();
}

uint64_t sub_2496DBE4C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_24972D2B4();
  v2 = v1;
  sub_24972CEF4();

  sub_24972D2CC();
  return sub_24972D2D8();
}

uint64_t sub_2496DBEB0(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;

  v2 = *(float *)(a1 + 8);
  v3 = *(float *)(a2 + 8);
  sub_2496DC224(0, &qword_25787A080);
  return sub_24972CEE8() & (v2 == v3);
}

void sub_2496DBF18(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t *sub_2496DBF70()
{
  uint64_t v1;

  return &v1;
}

unint64_t sub_2496DC140()
{
  unint64_t result;

  result = qword_25787A050;
  if (!qword_25787A050)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F9E0, &type metadata for ScreenEmbeddingError);
    atomic_store(result, (unint64_t *)&qword_25787A050);
  }
  return result;
}

unint64_t sub_2496DC184()
{
  unint64_t result;

  result = qword_25787A070;
  if (!qword_25787A070)
  {
    result = MEMORY[0x24BCF7648](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25787A070);
  }
  return result;
}

uint64_t sub_2496DC1C8(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x24BCF7648](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2496DC224(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2496DC260()
{
  unint64_t result;

  result = qword_25787A088;
  if (!qword_25787A088)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ScreenEmbedding, &type metadata for ScreenEmbedding);
    atomic_store(result, (unint64_t *)&qword_25787A088);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScreenEmbedding(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for ScreenEmbedding(id *a1)
{

}

uint64_t assignWithCopy for ScreenEmbedding(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ScreenEmbedding(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenEmbedding(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 12))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenEmbedding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenEmbedding()
{
  return &type metadata for ScreenEmbedding;
}

uint64_t getEnumTagSinglePayload for ScreenEmbeddingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenEmbeddingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2496DC4EC + 4 * byte_24972F7B9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2496DC520 + 4 * byte_24972F7B4[v4]))();
}

uint64_t sub_2496DC520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DC528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496DC530);
  return result;
}

uint64_t sub_2496DC53C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496DC544);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2496DC548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DC550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2496DC55C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenEmbeddingError()
{
  return &type metadata for ScreenEmbeddingError;
}

uint64_t getEnumTagSinglePayload for DetectionResultType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenEmbedding.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2496DC654 + 4 * byte_24972F7C3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2496DC688 + 4 * byte_24972F7BE[v4]))();
}

uint64_t sub_2496DC688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DC690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496DC698);
  return result;
}

uint64_t sub_2496DC6A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496DC6ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2496DC6B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DC6B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenEmbedding.CodingKeys()
{
  return &type metadata for ScreenEmbedding.CodingKeys;
}

unint64_t sub_2496DC6D8()
{
  unint64_t result;

  result = qword_25787A090;
  if (!qword_25787A090)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F950, &type metadata for ScreenEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A090);
  }
  return result;
}

unint64_t sub_2496DC720()
{
  unint64_t result;

  result = qword_25787A098;
  if (!qword_25787A098)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F9B8, &type metadata for ScreenEmbeddingError);
    atomic_store(result, (unint64_t *)&qword_25787A098);
  }
  return result;
}

unint64_t sub_2496DC768()
{
  unint64_t result;

  result = qword_25787A0A0;
  if (!qword_25787A0A0)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F8C0, &type metadata for ScreenEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A0A0);
  }
  return result;
}

unint64_t sub_2496DC7B0()
{
  unint64_t result;

  result = qword_25787A0A8;
  if (!qword_25787A0A8)
  {
    result = MEMORY[0x24BCF7648](&unk_24972F8E8, &type metadata for ScreenEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A0A8);
  }
  return result;
}

uint64_t sub_2496DC7F4(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_2496DC8B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7479427961727261 && a2 == 0xEA00000000007365;
  if (v2 || (sub_24972D1DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570616873 && a2 == 0xE500000000000000 || (sub_24972D1DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656469727473 && a2 == 0xE600000000000000 || (sub_24972D1DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_24972D1DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2496DCA78(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v7;
  void *v8;
  id v9;
  _BYTE *v10;
  id v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  double Width;
  int64_t Height;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  double v39;
  int64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __int128 v57;
  __int128 v58;
  void *v59;
  __int128 v60;
  __int128 v61;
  void *v62;

  v4 = v2;
  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TemplateGraph()), sel_init);
  v7 = MTLCreateSystemDefaultDevice();
  if (!v7)
  {
    sub_2496DD78C();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();

    goto LABEL_6;
  }
  v8 = v7;
  v9 = sub_2496DDBDC(a1, v7);
  if (v3)
  {

    swift_unknownObjectRelease();
LABEL_6:

    type metadata accessor for TemplateFinder();
    swift_deallocPartialClassInstance();
    return v4;
  }
  sub_2496DED60(v9, &v57);
  v12 = sub_2496DDBDC(a2, v8);
  sub_2496DED60(v12, &v60);
  v13 = v57;
  v14 = v58;
  v16 = v59;
  v15 = (void *)v60;
  v17 = v58;
  *(_OWORD *)(v4 + 64) = v57;
  *(_OWORD *)(v4 + 80) = v17;
  *(_QWORD *)(v4 + 96) = v16;
  v48 = (void *)*((_QWORD *)&v60 + 1);
  v50 = v15;
  v18 = v62;
  v44 = (void *)*((_QWORD *)&v61 + 1);
  v46 = (void *)v61;
  v19 = v60;
  v20 = v61;
  *(_QWORD *)(v4 + 136) = v62;
  *(_OWORD *)(v4 + 120) = v20;
  *(_OWORD *)(v4 + 104) = v19;
  *(_QWORD *)(v4 + 24) = v8;
  v42 = *(void **)(v4 + 16);
  v56 = (id)v13;
  v55 = *((id *)&v13 + 1);
  v54 = (id)v14;
  v53 = *((id *)&v14 + 1);
  v52 = v16;
  v51 = v50;
  v49 = v48;
  v47 = v46;
  v45 = v44;
  v43 = v18;
  swift_unknownObjectRetain();
  v21 = v42;
  v22 = (void *)sub_24972CB94();
  v23 = objc_msgSend(v21, sel_placeholderWithShape_dataType_name_, 0, 268435488, v22);

  *(_QWORD *)(v4 + 56) = v23;
  v24 = *(id *)(v4 + 16);
  v25 = (void *)sub_24972CB94();
  v26 = objc_msgSend(v24, sel_placeholderWithShape_dataType_name_, 0, 268435488, v25);

  *(_QWORD *)(v4 + 48) = v26;
  v27 = *(void **)(v4 + 56);
  v28 = *(id *)(v4 + 16);
  v29 = v26;
  v30 = v27;
  Width = (double)(uint64_t)CGImageGetWidth((CGImageRef)a2);
  Height = CGImageGetHeight((CGImageRef)a2);
  v33 = sub_2496DE318((uint64_t)v29, (uint64_t)v30, Width, (double)Height);

  *(_QWORD *)(v4 + 40) = v33;
  v34 = *(void **)(v4 + 48);
  v35 = *(void **)(v4 + 56);
  v36 = *(id *)(v4 + 16);
  v37 = v34;
  v38 = v35;
  v39 = (double)(uint64_t)CGImageGetWidth((CGImageRef)a2);
  v40 = CGImageGetHeight((CGImageRef)a2);
  v41 = sub_2496DE58C((uint64_t)v37, (uint64_t)v38, v39, (double)v40, 2.0);

  swift_unknownObjectRelease();
  *(_QWORD *)(v4 + 32) = v41;
  return v4;
}

void sub_2496DCE94(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  int64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  char v10;
  char v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  int v43[4];
  char v44[8];
  __int128 v45;
  uint64_t v46;
  id v47;

  v4 = sub_2496DD210();
  if (!v2)
  {
    v5 = v4;
    v6 = sub_2496DEF60(v5);
    v7 = sub_2496DD1B8(v6);
    if ((v7 & 0x100000000) != 0 || ((~(_DWORD)v7 & 0x7F800000) == 0 ? (v8 = (v7 & 0x7FFFFF) == 0) : (v8 = 1), !v8))
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    v9 = sub_2497199AC(v6, *(float *)&v7);
    v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_42:
      if (qword_257879BA0 != -1)
        swift_once();
      v35 = &xmmword_25787EB10;
      *(_OWORD *)v43 = *(__int128 *)((char *)&xmmword_25787EB10 + 8);
      v36 = qword_25787EB28;
      goto LABEL_45;
    }
    v12 = objc_msgSend(*(id *)(v1 + 112), sel_integerValue);
    v13 = objc_msgSend(*(id *)(v1 + 120), sel_integerValue);
    v14 = objc_msgSend(*(id *)(v1 + 72), sel_integerValue);
    if (v14)
    {
      v15 = (uint64_t)v14;
      if (v9 == 0x8000000000000000 && v14 == (id)-1)
        goto LABEL_54;
      v16 = (uint64_t)objc_msgSend(*(id *)(v1 + 72), sel_integerValue);
      if (v16)
      {
        if (v9 == 0x8000000000000000 && v16 == -1)
          goto LABEL_55;
        v17 = v9 % v15;
        if ((uint64_t)v12 >= 0)
          v18 = (uint64_t)v12;
        else
          v18 = (uint64_t)v12 + 1;
        v19 = v17 - (v18 >> 1);
        if (!__OFSUB__(v17, v18 >> 1))
        {
          v20 = v9 / v16;
          if ((uint64_t)v13 >= 0)
            v21 = (uint64_t)v13;
          else
            v21 = (uint64_t)v13 + 1;
          v22 = v20 - (v21 >> 1);
          if (!__OFSUB__(v20, v21 >> 1))
          {
            if ((uint64_t)v13 <= (uint64_t)v12)
              v23 = (uint64_t)v12;
            else
              v23 = (uint64_t)v13;
            v24 = (double)v23 * 20.0 / 100.0;
            if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
            {
              if (v24 > -9.22337204e18)
              {
                if (v24 < 9.22337204e18)
                {
                  v25 = v22;
                  v26 = v19;
                  v27 = (uint64_t)v24;
                  if ((uint64_t)objc_msgSend(*(id *)(v1 + 112), sel_integerValue) <= (uint64_t)v24
                    || (v26 & 0x8000000000000000) == 0)
                  {
LABEL_34:
                    v42 = v26;
                    if ((uint64_t)objc_msgSend(*(id *)(v1 + 120), sel_integerValue) <= v27
                      || (v25 & 0x8000000000000000) == 0)
                    {
                      goto LABEL_39;
                    }
                    if (!__OFSUB__(0, v27))
                    {
                      if (-v27 < v25)
                        v25 = 0;
LABEL_39:
                      v28 = *(void **)(v1 + 72);
                      v29 = *(void **)(v1 + 80);
                      v39 = *(void **)(v1 + 88);
                      v40 = *(void **)(v1 + 96);
                      v47 = *(id *)(v1 + 64);
                      v30 = v28;
                      v31 = v29;
                      v32 = v39;
                      v33 = v40;
                      v41 = v25;
                      v34 = sub_2496DF080(v42, v25, 5, v30, v31);

                      if ((v34 & 1) != 0)
                      {
                        v35 = (__int128 *)v44;
                        sub_249709AB4(v42, v41, (uint64_t)v44);
                        *(_OWORD *)v43 = v45;
                        v36 = v46;
LABEL_45:
                        v37 = *(_QWORD *)v35;
                        v38 = *((_QWORD *)v35 + 4);

                        *(_QWORD *)a1 = v37;
                        *(_OWORD *)(a1 + 8) = *(_OWORD *)v43;
                        *(_QWORD *)(a1 + 24) = v36;
                        *(_QWORD *)(a1 + 32) = v38;
                        return;
                      }
                      goto LABEL_42;
                    }
LABEL_57:
                    __break(1u);
                    return;
                  }
                  if (!__OFSUB__(0, v27))
                  {
                    if (-v27 < v26)
                      v26 = 0;
                    goto LABEL_34;
                  }
LABEL_56:
                  __break(1u);
                  goto LABEL_57;
                }
                goto LABEL_53;
              }
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
}

unint64_t sub_2496DD1B8(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v2 < v5)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

void *sub_2496DD210()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void **v14;
  void *v15;
  void *v16;
  uint64_t inited;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  _BYTE *v36;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);
  v4 = *(void **)(v0 + 96);
  v5 = *(void **)(v0 + 104);
  v6 = *(void **)(v0 + 112);
  v7 = *(void **)(v0 + 120);
  v8 = *(void **)(v0 + 128);
  v41 = *(id *)(v0 + 64);
  v40 = v1;
  v44 = v2;
  v43 = v3;
  v42 = v4;
  v9 = v5;
  v10 = v6;
  v11 = v7;
  v12 = v8;
  v13 = v39;
  if ((uint64_t)objc_msgSend(v11, sel_integerValue) > 750
    || (uint64_t)objc_msgSend(v10, sel_integerValue) >= 751
    || (uint64_t)objc_msgSend(v44, sel_integerValue) > 750)
  {

LABEL_5:
    v14 = (void **)(v0 + 32);
    goto LABEL_6;
  }
  v38 = (uint64_t)objc_msgSend(v40, sel_integerValue);

  if (v38 > 750)
    goto LABEL_5;

  v14 = (void **)(v0 + 40);
LABEL_6:
  v15 = *v14;
  v16 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A0B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24972FA80;
  v18 = *(void **)(v0 + 48);
  *(_QWORD *)(inited + 32) = v18;
  v19 = *(void **)(v0 + 96);
  *(_QWORD *)(inited + 40) = v19;
  v20 = *(void **)(v0 + 56);
  *(_QWORD *)(inited + 48) = v20;
  v21 = *(void **)(v0 + 136);
  *(_QWORD *)(inited + 56) = v21;
  v22 = v15;
  v23 = v16;
  v24 = v18;
  v25 = v19;
  v26 = v20;
  v27 = v21;
  sub_24971FB7C(inited);
  sub_2496DC224(0, (unint64_t *)&qword_25787A0C0);
  sub_2496DC224(0, &qword_25787A0C8);
  sub_2496DD734();
  v28 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24972FA90;
  *(_QWORD *)(v29 + 32) = v22;
  sub_24972CCE4();
  v30 = v22;
  v31 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v23, sel_runWithFeeds_targetTensors_targetOperations_, v28, v31, 0);

  v33 = sub_24972CB40();
  v34 = v30;
  v35 = sub_2496DD584(v34, v33);

  swift_bridgeObjectRelease();
  if (!v35)
  {
    sub_2496DD78C();
    swift_allocError();
    *v36 = 6;
    swift_willThrow();
  }

  return v35;
}

void *sub_2496DD584(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_249720758((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_24972D068();

  if (!v4)
    return 0;
  sub_2496DC224(0, &qword_25787A0C8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_2496DD658()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  swift_unknownObjectRelease();
  v1 = *(void **)(v0 + 64);
  v2 = *(void **)(v0 + 72);
  v3 = *(void **)(v0 + 80);
  v4 = *(void **)(v0 + 88);

  v5 = *(void **)(v0 + 104);
  v6 = *(void **)(v0 + 112);
  v7 = *(void **)(v0 + 120);
  v8 = *(void **)(v0 + 128);

  return v0;
}

uint64_t sub_2496DD6F4()
{
  sub_2496DD658();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TemplateFinder()
{
  return objc_opt_self();
}

unint64_t sub_2496DD734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A0D0;
  if (!qword_25787A0D0)
  {
    v1 = sub_2496DC224(255, (unint64_t *)&qword_25787A0C0);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25787A0D0);
  }
  return result;
}

unint64_t sub_2496DD78C()
{
  unint64_t result;

  result = qword_25787A0E0;
  if (!qword_25787A0E0)
  {
    result = MEMORY[0x24BCF7648](&unk_24972FBB0, &type metadata for MetalGraphError);
    atomic_store(result, (unint64_t *)&qword_25787A0E0);
  }
  return result;
}

uint64_t sub_2496DD7D0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char v14;
  id v15;
  uint64_t result;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v2 = sub_24972C81C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v28 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v28 - v11;
  MEMORY[0x24BDAC7A8](v10);
  CGColorSpaceCreateDeviceRGB();
  sub_24972CEA0();
  sub_2496DDDB8((uint64_t)&v35, (uint64_t)v42);
  if (*((_QWORD *)&v42[0] + 1) == 1)
  {
    sub_2496DD78C();
    swift_allocError();
    v14 = 2;
LABEL_5:
    *v13 = v14;
    swift_willThrow();
    return (uint64_t)v9;
  }
  v44 = v42[0];
  v45 = v42[1];
  v46 = v43;
  v15 = a1;
  sub_24972CE94();
  sub_2496DDDB8((uint64_t)&v36, (uint64_t)v37);
  if (*((_QWORD *)&v37[0] + 1) == 1)
  {
    sub_2496DD78C();
    swift_allocError();
    v14 = 3;
    goto LABEL_5;
  }
  v39 = v37[0];
  v40 = v37[1];
  v41 = v38;
  v17 = v15;
  sub_24972C810();
  v18 = (void *)v47;
  v47 = sub_24972CE10();
  if (!v18)
  {
    if (((v20 | v19) & 0x8000000000000000) == 0)
    {
      v22 = v21;
      v29 = v19;
      v30 = v20;
      v31 = sub_24972CE34();
      v32 = v23;
      v33 = v24;
      v34 = v25;
      type metadata accessor for vImageConverter(0);
      sub_24972C810();
      v26 = (void *)sub_24972CE7C();
      v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      v27(v12, v2);
      sub_24972C810();
      v28 = v22;
      sub_24972CE88();
      v27(v9, v2);

      sub_24972C810();
      v9 = (char *)sub_24972CE1C();
      v27(v6, v2);
      MEMORY[0x24BCF6B38](v47, v29, v30, v28);
      MEMORY[0x24BCF6B38](v31, v32, v33, v34);
      return (uint64_t)v9;
    }
    __break(1u);
  }

  result = sub_24972D080();
  __break(1u);
  return result;
}

id sub_2496DDBDC(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v17;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_2496DD7D0(a1);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDDB48]), sel_initWithDevice_, a2);
    v18[0] = 0;
    v7 = objc_msgSend(v6, sel_newTextureWithCGImage_options_error_, v5, 0, v18);
    a2 = v18[0];
    if (v7)
    {
      v8 = v7;
      v9 = objc_allocWithZone(MEMORY[0x24BDDE368]);
      v10 = a2;
      v11 = objc_msgSend(v9, sel_initWithTexture_featureChannels_, v8, 3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_24972FA90;
      *(_QWORD *)(v12 + 32) = v11;
      v18[0] = (id)v12;
      sub_24972CCE4();
      v13 = objc_allocWithZone(MEMORY[0x24BDDE580]);
      sub_2496DC224(0, &qword_25787A0E8);
      v14 = v11;
      v15 = (void *)sub_24972CCCC();
      swift_bridgeObjectRelease();
      a2 = objc_msgSend(v13, sel_initWithMPSImageBatch_, v15);

      swift_unknownObjectRelease();
    }
    else
    {
      v17 = v18[0];
      sub_24972C8AC();

      swift_willThrow();
    }
  }
  return a2;
}

uint64_t sub_2496DDDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25787A0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2496DDE00(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24972FA90;
  sub_2496D1B4C();
  *(_QWORD *)(v4 + 32) = sub_24972CED0();
  sub_24972CCE4();
  v5 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v1, sel_reductionSumWithTensor_axes_name_, a1, v5, 0);

  v7 = objc_msgSend(v2, sel_reductionSumWithTensor_axes_name_, v6, 0, 0);
  v8 = objc_msgSend(v2, sel_shapeOfTensor_name_, v6, 0);
  v9 = objc_msgSend(v2, sel_castTensor_toType_name_, v8, 268435488, 0);
  v10 = objc_msgSend(v2, sel_reductionProductWithTensor_axes_name_, v9, 0, 0);
  v11 = objc_msgSend(v2, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v7, v10, 0);
  v12 = objc_msgSend(v2, sel_subtractionWithPrimaryTensor_secondaryTensor_name_, v6, v11, 0);

  return v12;
}

void sub_2496DDFE0(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24972FA90;
  sub_2496D1B4C();
  *(_QWORD *)(v8 + 32) = sub_24972CED0();
  sub_24972CCE4();
  v9 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v3, sel_reductionSumWithTensor_axes_name_, a1, v9, 0);

  v11 = objc_msgSend(v3, sel_reductionSumWithTensor_axes_name_, v10, 0, 0);
  v12 = objc_msgSend(v4, sel_shapeOfTensor_name_, v10, 0);
  v13 = objc_msgSend(v4, sel_castTensor_toType_name_, v12, 268435488, 0);
  v14 = objc_msgSend(v4, sel_reductionProductWithTensor_axes_name_, v13, 0, 0);
  v21 = v11;
  v15 = objc_msgSend(v4, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v11, v14, 0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24972FB00;
  *(_QWORD *)(v16 + 32) = sub_24972CED0();
  *(_QWORD *)(v16 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a2);
  *(_QWORD *)(v16 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a3);
  *(_QWORD *)(v16 + 56) = sub_24972CED0();
  sub_24972CCE4();
  v17 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithKernelSizes_paddingStyle_, v17, 2);

  if (v18)
  {
    v19 = objc_msgSend(v4, sel_avgPooling4DWithSourceTensor_descriptor_name_, v10, v18, 0);
    v20 = objc_msgSend(v4, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v19, v15, 0);
    objc_msgSend(v4, sel_subtractionWithPrimaryTensor_secondaryTensor_name_, v10, v20, 0);

  }
  else
  {
    __break(1u);
  }
}

id sub_2496DE318(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v4;
  void *v5;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;

  v5 = v4;
  sub_2496DDFE0(a1, a3, a4);
  v8 = v7;
  v9 = sub_2496DDE00(a2);
  v22 = objc_msgSend(v5, sel_squareWithTensor_name_, v9, 0);
  v10 = objc_msgSend(v5, sel_reductionSumWithTensor_axes_name_);
  v20 = objc_msgSend(v5, sel_squareWithTensor_name_, v8, 0);
  v11 = objc_msgSend(v5, sel_reductionSumWithTensor_axes_name_);
  v21 = v10;
  v12 = objc_msgSend(v5, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v10, v11, 0);
  v13 = objc_msgSend(v5, sel_squareRootWithTensor_name_, v12, 0);
  v14 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v9, 1, 3, 0);
  v15 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v14, 2, 3, 0);
  result = objc_msgSend((id)objc_opt_self(), sel_descriptorWithStrideInX_strideInY_dilationRateInX_dilationRateInY_groups_paddingStyle_dataLayout_weightsLayout_, 1, 1, 1, 1, 1, 2, 1, 2);
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend(v5, sel_convolution2DWithSourceTensor_weightsTensor_descriptor_name_, v8, v15, result, 0);

    v19 = objc_msgSend(v5, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v18, v13, 0);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2496DE58C(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  void *v5;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v11 = objc_msgSend(v5, sel_shapeOfTensor_name_, a1, 0);
  v12 = objc_msgSend(v5, sel_constantWithScalar_dataType_, 536870944, a5);
  v13 = objc_msgSend(v5, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v11, v12, 0);
  v14 = objc_msgSend(v5, sel_sliceTensor_dimension_start_length_name_, v13, 0, 1, 2, 0);
  v15 = objc_msgSend(v5, sel_resizeBilinearWithTensor_sizeTensor_centerResult_alignCorners_layout_name_, a1, v14, 0, 1, 1, 0);

  v16 = objc_msgSend(v5, sel_shapeOfTensor_name_, a2, 0);
  v17 = objc_msgSend(v5, sel_constantWithScalar_dataType_, 536870944, a5);
  v18 = objc_msgSend(v5, sel_divisionWithPrimaryTensor_secondaryTensor_name_, v16, v17, 0);
  v19 = objc_msgSend(v5, sel_sliceTensor_dimension_start_length_name_, v18, 0, 1, 2, 0);
  v20 = objc_msgSend(v5, sel_resizeBilinearWithTensor_sizeTensor_centerResult_alignCorners_layout_name_, a2, v19, 0, 1, 1, 0);

  v21 = sub_2496DE318((uint64_t)v15, (uint64_t)v20, a3, a4);
  v22 = objc_msgSend(v5, sel_shapeOfTensor_name_, v21, 0);
  v23 = objc_msgSend(v5, sel_constantWithScalar_dataType_, 536870944, a5);
  v24 = objc_msgSend(v5, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v22, v23, 0);
  v25 = objc_msgSend(v5, sel_sliceTensor_dimension_start_length_name_, v24, 0, 1, 2, 0);
  v26 = objc_msgSend(v5, sel_resizeBilinearWithTensor_sizeTensor_centerResult_alignCorners_layout_name_, v21, v25, 0, 1, 1, 0);

  return v26;
}

id sub_2496DE8EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TemplateGraph();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TemplateGraph()
{
  return objc_opt_self();
}

void destroy for ImageTensor(id *a1)
{

}

_QWORD *initializeWithCopy for ImageTensor(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return a1;
}

uint64_t assignWithCopy for ImageTensor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  return a1;
}

uint64_t assignWithTake for ImageTensor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImageTensor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageTensor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageTensor()
{
  return &type metadata for ImageTensor;
}

uint64_t sub_2496DEB6C(unint64_t a1, int32x2_t a2)
{
  uint64_t result;
  __int32 *v4;
  unint64_t v5;
  __int32 v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_24972D074();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  result = sub_24972CCFC();
  *(_QWORD *)(result + 16) = a1;
  v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    v5 = 0;
    v6 = a2.i32[0];
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2.i32[0];
  v7 = vdupq_lane_s32(a2, 0);
  v8 = (int32x4_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_2496DEC5C(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_24972D074();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_24972CCFC();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

__n128 sub_2496DED44()
{
  __n128 result;

  __asm { FMOV            V0.2D, #-1.0 }
  xmmword_25787EB10 = (__int128)result;
  qword_25787EB28 = 0;
  qword_25787EB30 = 0;
  qword_25787EB20 = 0;
  return result;
}

void sub_2496DED60(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v6 = objc_msgSend(a1, sel_shape);
  v7 = sub_2496D1B4C();
  v8 = sub_24972CCD8();

  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x24BCF6CE8](2, v8);
  }
  else
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
      __break(1u);
      goto LABEL_16;
    }
    v9 = *(id *)(v8 + 48);
  }
  v6 = v9;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a1, sel_shape);
  v2 = sub_24972CCD8();

  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v11 = (id)MEMORY[0x24BCF6CE8](1, v2);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_18;
  }
  v11 = *(id *)(v2 + 40);
LABEL_7:
  v10 = v11;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a1, sel_shape);
  v3 = sub_24972CCD8();

  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v13 = (id)MEMORY[0x24BCF6CE8](3, v3);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(id *)(v3 + 56);
LABEL_10:
  v12 = v13;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(a1, sel_shape);
  v7 = sub_24972CCD8();

  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_20:
    v15 = (id)MEMORY[0x24BCF6CE8](0, v7);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v7 + 32);
LABEL_13:
    v16 = v15;
    swift_bridgeObjectRelease();
    *a2 = v16;
    a2[1] = v6;
    a2[2] = v10;
    a2[3] = v12;
    a2[4] = a1;
    return;
  }
  __break(1u);
}

int64_t sub_2496DEF60(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  int64_t result;
  int32x2_t v6;
  int64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(a1, sel_mpsndarray);
  v3 = (uint64_t)objc_msgSend(v2, sel_lengthOfDimension_, 0);
  v4 = (uint64_t)objc_msgSend(v2, sel_lengthOfDimension_, 1);
  result = (int64_t)objc_msgSend(v2, sel_lengthOfDimension_, 2);
  v7 = v4 * result;
  if ((unsigned __int128)(v4 * (__int128)result) >> 64 != (v4 * result) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  result = v7 * v3;
  if ((unsigned __int128)(v7 * (__int128)v3) >> 64 != (v7 * v3) >> 63)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6.i32[0] = 0;
  v8 = sub_2496DEB6C(result, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = (uint64_t)sub_24970A52C(0, *(_QWORD *)(v8 + 16), 0, (char *)v8);
  swift_bridgeObjectRetain();
  objc_msgSend(v2, sel_readBytes_strideBytes_, v8 + 32, 0);
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_2496DF080(uint64_t result, uint64_t a2, uint64_t a3, id a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  id v15;
  BOOL v16;

  v9 = result;
  if ((result & 0x8000000000000000) == 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      result = (uint64_t)objc_msgSend(a4, sel_integerValue);
      if (result > v9)
      {
        result = (uint64_t)objc_msgSend(a5, sel_integerValue);
        if (result > a2)
          return 1;
        v10 = a2 + a3;
        if (!__OFADD__(a2, a3))
        {
LABEL_9:
          if ((v10 & 0x8000000000000000) == 0)
          {
            result = (uint64_t)objc_msgSend(a4, sel_integerValue);
            if (result > v9)
            {
              result = (uint64_t)objc_msgSend(a5, sel_integerValue);
              if (v10 < result)
                return 1;
            }
          }
          goto LABEL_14;
        }
        __break(1u);
      }
    }
    v10 = a2 + a3;
    if (__OFADD__(a2, a3))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    goto LABEL_9;
  }
  v10 = a2 + a3;
  if (__OFADD__(a2, a3))
  {
LABEL_44:
    __break(1u);
    return result;
  }
LABEL_14:
  v11 = v9 + a3;
  if (__OFADD__(v9, a3))
  {
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      result = (uint64_t)objc_msgSend(a4, sel_integerValue);
      if (v11 < result)
      {
        result = (uint64_t)objc_msgSend(a5, sel_integerValue);
        if (result > a2)
          return 1;
      }
    }
    if ((v10 & 0x8000000000000000) == 0)
    {
      result = (uint64_t)objc_msgSend(a4, sel_integerValue);
      if (v11 < result)
      {
        result = (uint64_t)objc_msgSend(a5, sel_integerValue);
        if (v10 < result)
          return 1;
      }
    }
  }
  v12 = a2 - a3;
  if (__OFSUB__(a2, a3))
    goto LABEL_41;
  if ((v9 & 0x8000000000000000) == 0 && (v12 & 0x8000000000000000) == 0)
  {
    result = (uint64_t)objc_msgSend(a4, sel_integerValue);
    if (result > v9)
    {
      result = (uint64_t)objc_msgSend(a5, sel_integerValue);
      if (v12 < result)
        return 1;
    }
  }
  v13 = __OFSUB__(v9, a3);
  v14 = v9 - a3;
  if (v13)
    goto LABEL_42;
  if (v14 < 0)
    return 0;
  if (a2 < 0 || v14 >= (uint64_t)objc_msgSend(a4, sel_integerValue))
  {
    if (v12 < 0)
      return 0;
    return v14 < (uint64_t)objc_msgSend(a4, sel_integerValue) && v12 < (uint64_t)objc_msgSend(a5, sel_integerValue);
  }
  v15 = objc_msgSend(a5, sel_integerValue);
  v16 = (uint64_t)v15 <= a2;
  result = (uint64_t)v15 > a2;
  if (v16 && (v12 & 0x8000000000000000) == 0)
    return v14 < (uint64_t)objc_msgSend(a4, sel_integerValue) && v12 < (uint64_t)objc_msgSend(a5, sel_integerValue);
  return result;
}

uint64_t getEnumTagSinglePayload for MetalGraphError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalGraphError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2496DF360 + 4 * byte_24972FB25[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2496DF394 + 4 * asc_24972FB20[v4]))();
}

uint64_t sub_2496DF394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DF39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496DF3A4);
  return result;
}

uint64_t sub_2496DF3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496DF3B8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2496DF3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496DF3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetalGraphError()
{
  return &type metadata for MetalGraphError;
}

unint64_t sub_2496DF3E4()
{
  unint64_t result;

  result = qword_25787A100;
  if (!qword_25787A100)
  {
    result = MEMORY[0x24BCF7648](&unk_24972FB88, &type metadata for MetalGraphError);
    atomic_store(result, (unint64_t *)&qword_25787A100);
  }
  return result;
}

uint64_t UIFingerprinter.__allocating_init(shape:)(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for UIFingerprinter();
  v2 = swift_allocObject();
  UIFingerprinter.init(platform:)(a1 != 2);
  return v2;
}

void sub_2496DF484()
{
  qword_25787EB38 = (uint64_t)&unk_251AA7228;
}

uint64_t UIFingerprinter.__allocating_init(platform:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  UIFingerprinter.init(platform:)(a1);
  return v2;
}

uint64_t UIFingerprinter.init(platform:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  float v12;
  id v13;
  uint64_t v14;

  v3 = v1;
  *(_QWORD *)(v1 + 32) = a1;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  v7 = objc_allocWithZone((Class)type metadata accessor for UIUDetector());
  v8 = UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(a1, 0, 0, v5, v6);
  if (v2)
  {
    type metadata accessor for UIFingerprinter();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = (void *)v8;
    *(_QWORD *)(v3 + 16) = v8;
    type metadata accessor for UIUGrouper();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v3 + 24) = v10;
    type metadata accessor for TwinTransformerEmbeddingGenerator();
    swift_allocObject();
    *(_QWORD *)(v3 + 40) = sub_2496D3234(a1);
    v12 = 0.47;
    if (!a1)
      v12 = 0.34;
    *(float *)(v3 + 48) = v12;
    v13 = v9;
    UIUDetector.preloadIconModel()();
    if (v14)
      swift_release();

  }
  return v3;
}

uint64_t sub_2496DF650(void *a1, char *a2, uint64_t a3)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void **v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v28;

  v4 = a2;
  v28 = MEMORY[0x24BEE4AF8];
  v5 = &a2[OBJC_IVAR___UIObjectCompat_children];
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (!(*(_QWORD *)v5 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
LABEL_16:
    v15 = &v4[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v16 = *(_QWORD *)v15;
    v17 = (void **)&v4[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v18 = *v17;
    v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
    swift_beginAccess();
    v21 = *v19;
    v20 = v19[1];
    objc_allocWithZone((Class)type metadata accessor for UIFingerprintingDetectionInfo());
    swift_bridgeObjectRetain();
    v22 = v4;
    swift_bridgeObjectRetain();
    v23 = a1;
    v24 = v18;
    v25 = sub_2496E542C(v22, a3, v23, v21, v20, v14);

    return (uint64_t)v25;
  }
  swift_bridgeObjectRetain();
  result = sub_24972D0BC();
  v7 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v7 >= 1)
  {
    v26 = v4;
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x24BCF6CE8](i, v6);
      else
        v11 = *(id *)(v6 + 8 * i + 32);
      v10 = v11;
      v12 = (void *)sub_2496DF650(a1, v11, a3);
      if (v12)
      {
        v13 = v12;
        MEMORY[0x24BCF69D0]();
        if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_24972CCF0();
        sub_24972CD08();
        sub_24972CCE4();

        v10 = v13;
      }

    }
    swift_bridgeObjectRelease();
    v14 = v28;
    v4 = v26;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

BOOL sub_2496DF8DC(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  void **v5;
  char *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  CGFloat *v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  char *v15;
  char *v16;
  double MidX;
  CGRect *v18;
  double v19;
  float v20;
  float v21;
  void **v22;
  char *v23;
  void **v24;
  void *v25;
  CGFloat *v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  char *v31;
  char *v32;
  double v33;
  CGRect *v34;
  double v35;
  float v36;
  CGRect v38;
  CGRect v39;

  v4 = *a2;
  v5 = (void **)(*(_QWORD *)(*a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
               + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v6 = (char *)*v5;
  v7 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  v8 = (void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
               + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v9 = *v8;
  v10 = (CGFloat *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = v6;
  v16 = v9;
  v38.origin.x = v11;
  v38.origin.y = v12;
  v38.size.width = v13;
  v38.size.height = v14;
  MidX = CGRectGetMidX(v38);
  v18 = (CGRect *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v19 = CGRectGetMidX(*v18);

  v20 = MidX - v19;
  v21 = fabsf(v20);
  v22 = (void **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v23 = (char *)*v22;
  v24 = (void **)(*(_QWORD *)(a3 + v7) + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v25 = *v24;
  v26 = (CGFloat *)&v23[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v27 = *v26;
  v28 = v26[1];
  v29 = v26[2];
  v30 = v26[3];
  v31 = v23;
  v32 = v25;
  v39.origin.x = v27;
  v39.origin.y = v28;
  v39.size.width = v29;
  v39.size.height = v30;
  v33 = CGRectGetMidX(v39);
  v34 = (CGRect *)&v32[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v35 = CGRectGetMidX(*v34);

  v36 = v33 - v35;
  return v21 < fabsf(v36);
}

uint64_t sub_2496DFB1C(uint64_t a1, uint64_t a2, CGImage *a3, unint64_t a4, CGImage *a5, unint64_t a6)
{
  uint64_t v6;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t i;
  Swift::String v26;
  char *v27;
  Swift::String *v28;
  char *v29;
  char *v30;
  char *v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t j;
  char *v40;
  char *v41;
  char *v42;
  Swift::String v43;
  char *v44;
  Swift::String *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  void *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double Width;
  double v62;
  uint64_t v63;
  double v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  char *v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unint64_t *v90;
  void *v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t *v95;
  CGImage *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  CGImage *v100;
  void *v101;
  uint64_t v102;
  unint64_t v103;
  CGPoint v104;
  CGPoint v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;

  v100 = a5;
  v99 = a2;
  v98 = a1;
  v10 = 0;
  v11 = type metadata accessor for UIUDetectorResult();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v95 = (unint64_t *)((char *)&v89 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (unint64_t *)((char *)&v89 - v19);
  if (!a4)
  {
    v94 = v14;
    v97 = v6;
    v96 = a3;
    v21 = v18;
    UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(a3, 1, 1, 0, 0, 1, v18, 0.2);
    v93 = v11;
    v92 = a6;
    v90 = v20;
    v91 = 0;
    v89 = v21;
    v22 = *(_QWORD *)v21;
    if (*(_QWORD *)v21 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_24972D0BC();
      v23 = result;
      if (!result)
        goto LABEL_16;
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v23)
        goto LABEL_16;
    }
    if (v23 < 1)
    {
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    for (i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
        v29 = (char *)MEMORY[0x24BCF6CE8](i, v22);
      else
        v29 = (char *)*(id *)(v22 + 8 * i + 32);
      v30 = v29;
      v31 = &v29[OBJC_IVAR___UIObjectCompat_iconDetection];
      swift_beginAccess();
      if (*(_QWORD *)v31)
      {
        v26 = IconLabel.toString()();
        v27 = &v30[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        v28 = (Swift::String *)(*(_QWORD *)v27 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        *v28 = v26;

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v32 = v90;
    sub_2496D4038((uint64_t)v89, (uint64_t)v90);
    a4 = *v32;
    v10 = v91;
    swift_bridgeObjectRetain();
    sub_2496D407C((uint64_t)v32);
    swift_bridgeObjectRelease();
    v6 = v97;
    a3 = v96;
    v14 = v94;
    a6 = v92;
    if (v92)
      goto LABEL_3;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (a6)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    goto LABEL_33;
  }
LABEL_17:
  v96 = a3;
  v97 = v6;
  UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(v100, 1, 1, 0, 0, 1, v14, 0.2);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_24972F6C0;
    v102 = 0;
    v103 = 0xE000000000000000;
    sub_24972CFB4();
    sub_24972CC48();
    v101 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A020);
    sub_24972D05C();
    v34 = v102;
    v35 = v103;
    *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 40) = v35;
    sub_24972D29C();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    v36 = v95;
    sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
    a6 = MEMORY[0x24BEE4AF8];
    sub_24972CA20();

    *v36 = a6;
LABEL_32:
    swift_bridgeObjectRetain();
    sub_2496D407C((uint64_t)v36);
    swift_bridgeObjectRelease();
    a3 = v96;
LABEL_33:
    v46 = sub_2496E8724(a4, a3);
    swift_bridgeObjectRelease();
    v47 = sub_2496E8724(a6, v100);
    swift_bridgeObjectRelease();
    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_24972D0BC();
      v48 = result;
      if (result)
        goto LABEL_35;
    }
    else
    {
      v48 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v48)
      {
LABEL_35:
        if (v48 < 1)
        {
          __break(1u);
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        v49 = (double)v98;
        v50 = (double)v99;
        v100 = (CGImage *)(v46 & 0xC000000000000001);
        v51 = 0;
        if ((v46 & 0xC000000000000001) != 0)
        {
          v52 = 0;
          v53 = 1.79769313e308;
          do
          {
            v54 = MEMORY[0x24BCF6CE8](v52, v46);
            v55 = (_QWORD *)(*(_QWORD *)(v54 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                           + OBJC_IVAR___UIObjectCompat_boundingBox);
            swift_beginAccess();
            v56 = *v55 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
            swift_beginAccess();
            v57 = *(double *)v56;
            v58 = *(double *)(v56 + 8);
            v59 = *(double *)(v56 + 16);
            v60 = *(double *)(v56 + 24);
            v106.origin.x = *(CGFloat *)v56;
            v106.origin.y = v58;
            v106.size.width = v59;
            v106.size.height = v60;
            v104.x = v49;
            v104.y = v50;
            if (!CGRectContainsPoint(v106, v104))
              goto LABEL_38;
            v107.origin.x = v57;
            v107.origin.y = v58;
            v107.size.width = v59;
            v107.size.height = v60;
            Width = CGRectGetWidth(v107);
            v108.origin.x = v57;
            v108.origin.y = v58;
            v108.size.width = v59;
            v108.size.height = v60;
            v62 = Width * CGRectGetHeight(v108);
            if (v62 < v53)
            {

              v51 = (void *)v54;
              v53 = v62;
            }
            else
            {
LABEL_38:
              swift_unknownObjectRelease();
            }
            ++v52;
          }
          while (v48 != v52);
        }
        else
        {
          v63 = 0;
          v64 = 1.79769313e308;
          do
          {
            v65 = *(char **)(v46 + 8 * v63 + 32);
            v66 = (_QWORD *)(*(_QWORD *)&v65[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                           + OBJC_IVAR___UIObjectCompat_boundingBox);
            swift_beginAccess();
            v67 = *v66 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
            swift_beginAccess();
            v68 = *(double *)v67;
            v69 = *(double *)(v67 + 8);
            v70 = *(double *)(v67 + 16);
            v71 = *(double *)(v67 + 24);
            v72 = v65;
            v109.origin.x = v68;
            v109.origin.y = v69;
            v109.size.width = v70;
            v109.size.height = v71;
            v105.x = v49;
            v105.y = v50;
            if (!CGRectContainsPoint(v109, v105))
              goto LABEL_44;
            v110.origin.x = v68;
            v110.origin.y = v69;
            v110.size.width = v70;
            v110.size.height = v71;
            v73 = CGRectGetWidth(v110);
            v111.origin.x = v68;
            v111.origin.y = v69;
            v111.size.width = v70;
            v111.size.height = v71;
            v74 = v73 * CGRectGetHeight(v111);
            if (v74 < v64)
            {

              v51 = v72;
              v64 = v74;
            }
            else
            {
LABEL_44:

            }
            ++v63;
          }
          while (v48 != v63);
        }
        swift_bridgeObjectRelease();
        if (v51)
        {
          v75 = sub_2496E4CF4(v51, v47);

        }
        else
        {
          v75 = 0;
        }
        if (v100)
        {
          swift_bridgeObjectRetain();
          v76 = 0;
          do
          {
            v77 = MEMORY[0x24BCF6CE8](v76++, v46);
            v78 = *(void **)(v77 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection);
            *(_QWORD *)(v77 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection) = 0;
            swift_unknownObjectRelease();

          }
          while (v48 != v76);
        }
        else
        {
          v79 = (uint64_t *)(v46 + 32);
          swift_bridgeObjectRetain();
          do
          {
            v80 = *v79++;
            v81 = *(void **)(v80 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection);
            *(_QWORD *)(v80 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection) = 0;

            --v48;
          }
          while (v48);
        }
LABEL_61:
        swift_bridgeObjectRelease_n();
        if (v47 >> 62)
        {
          swift_bridgeObjectRetain();
          result = sub_24972D0BC();
          v82 = result;
          if (result)
          {
LABEL_63:
            if (v82 >= 1)
            {
              if ((v47 & 0xC000000000000001) != 0)
              {
                v83 = 0;
                do
                {
                  v84 = MEMORY[0x24BCF6CE8](v83++, v47);
                  v85 = *(void **)(v84 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection);
                  *(_QWORD *)(v84 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection) = 0;
                  swift_unknownObjectRelease();

                }
                while (v82 != v83);
              }
              else
              {
                v86 = (uint64_t *)(v47 + 32);
                do
                {
                  v87 = *v86++;
                  v88 = *(void **)(v87 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection);
                  *(_QWORD *)(v87 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection) = 0;

                  --v82;
                }
                while (v82);
              }
              goto LABEL_70;
            }
            goto LABEL_74;
          }
        }
        else
        {
          v82 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
          result = swift_bridgeObjectRetain();
          if (v82)
            goto LABEL_63;
        }
LABEL_70:
        swift_bridgeObjectRelease_n();
        return v75;
      }
    }
    v75 = 0;
    goto LABEL_61;
  }
  v94 = v14;
  v37 = *(_QWORD *)v14;
  if (!(*(_QWORD *)v14 >> 62))
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v38)
      goto LABEL_21;
LABEL_31:
    swift_bridgeObjectRelease();
    v36 = v95;
    sub_2496D4038((uint64_t)v94, (uint64_t)v95);
    a6 = *v36;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  result = sub_24972D0BC();
  v38 = result;
  if (!result)
    goto LABEL_31;
LABEL_21:
  if (v38 >= 1)
  {
    for (j = 0; j != v38; ++j)
    {
      if ((v37 & 0xC000000000000001) != 0)
        v40 = (char *)MEMORY[0x24BCF6CE8](j, v37);
      else
        v40 = (char *)*(id *)(v37 + 8 * j + 32);
      v41 = v40;
      v42 = &v40[OBJC_IVAR___UIObjectCompat_iconDetection];
      swift_beginAccess();
      if (*(_QWORD *)v42)
      {
        v43 = IconLabel.toString()();
        v44 = &v41[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        v45 = (Swift::String *)(*(_QWORD *)v44 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        *v45 = v43;

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    goto LABEL_31;
  }
LABEL_76:
  __break(1u);
  return result;
}

uint64_t UIFingerprinter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t UIFingerprinter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIFingerprinter()
{
  return objc_opt_self();
}

uint64_t sub_2496E075C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24971EEA8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2496E07C4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2496E07C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  double *v32;
  double *v33;
  uint64_t v34;
  double v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t i;
  uint64_t v96;
  uint64_t v97;
  double v98;
  char v99;
  uint64_t v100;
  char v101;
  char v102;
  __int128 v103;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double *__dst;

  v3 = a1[1];
  result = sub_24972D1B8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if ((unint64_t)v3 >= 2)
    {
      v92 = *a1;
      v93 = *a1 + 32;
      v94 = -1;
      for (i = 1; i != v3; ++i)
      {
        v96 = v93;
        v97 = v94;
        do
        {
          v98 = *(double *)(v96 + 8);
          if (*(double *)(v96 - 24) >= v98)
            break;
          if (!v92)
            goto LABEL_145;
          v99 = *(_BYTE *)v96;
          v100 = *(_QWORD *)(v96 + 16);
          v101 = *(_BYTE *)(v96 + 24);
          v102 = *(_BYTE *)(v96 + 25);
          v103 = *(_OWORD *)(v96 - 16);
          *(_OWORD *)v96 = *(_OWORD *)(v96 - 32);
          *(_OWORD *)(v96 + 16) = v103;
          *(double *)(v96 - 24) = v98;
          *(_QWORD *)(v96 - 16) = v100;
          *(_BYTE *)(v96 - 8) = v101;
          *(_BYTE *)(v96 - 7) = v102;
          *(_BYTE *)(v96 - 32) = v99;
          v96 -= 32;
        }
        while (!__CFADD__(v97++, 1));
        --v94;
        v93 += 32;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_150;
  v6 = result;
  v113 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_107:
      v105 = v12;
      v116 = v9;
      if (v13 >= 2)
      {
        v106 = *v113;
        do
        {
          v107 = v13 - 2;
          if (v13 < 2)
            goto LABEL_136;
          if (!v106)
            goto LABEL_149;
          v108 = v105;
          v109 = *(_QWORD *)&v105[16 * v107 + 32];
          v110 = *(_QWORD *)&v105[16 * v13 + 24];
          sub_2496E1254((double *)(v106 + 32 * v109), (double *)(v106 + 32 * *(_QWORD *)&v105[16 * v13 + 16]), v106 + 32 * v110, __dst);
          if (v1)
            break;
          if (v110 < v109)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_24971DDC8((uint64_t)v108);
          if (v107 >= *((_QWORD *)v108 + 2))
            goto LABEL_138;
          v111 = &v108[16 * v107 + 32];
          *(_QWORD *)v111 = v109;
          *((_QWORD *)v111 + 1) = v110;
          v112 = *((_QWORD *)v108 + 2);
          if (v13 > v112)
            goto LABEL_139;
          memmove(&v108[16 * v13 + 16], &v108[16 * v13 + 32], 16 * (v112 - v13));
          v105 = v108;
          *((_QWORD *)v108 + 2) = v112 - 1;
          v13 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v116 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_24972CCFC();
    *(_QWORD *)(v8 + 16) = v7;
    v116 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v114 = *a1 + 72;
  v115 = *a1 + 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v117 = v6;
  v118 = v3;
  v119 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v115 + 32 * v10);
      v16 = 32 * v14;
      v17 = *(double *)(v115 + 32 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (double *)(v114 + 32 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_142;
        if (v14 < v10)
        {
          v19 = 32 * v10 - 32;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_148;
              v24 = (_OWORD *)(v11 + v16);
              v25 = (_OWORD *)(v11 + v19);
              v26 = *(_BYTE *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 8);
              v28 = *(_QWORD *)(v11 + v16 + 16);
              v29 = *(_BYTE *)(v11 + v16 + 24);
              v30 = *(_BYTE *)(v11 + v16 + 25);
              if (v16 != v19 || v24 >= v25 + 2)
              {
                v22 = v25[1];
                *v24 = *v25;
                v24[1] = v22;
              }
              v23 = v11 + v19;
              *(_BYTE *)v23 = v26;
              *(_QWORD *)(v23 + 8) = v27;
              *(_QWORD *)(v23 + 16) = v28;
              *(_BYTE *)(v23 + 24) = v29;
              *(_BYTE *)(v23 + 25) = v30;
            }
            ++v21;
            v19 -= 32;
            v16 += 32;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v10, v14))
      goto LABEL_140;
    if (v10 - v14 >= v6)
      goto LABEL_50;
    v31 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_143;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = (double *)(v11 + 32 * v10);
      do
      {
        v33 = v32;
        v34 = v14;
        do
        {
          v35 = v33[1];
          if (*(v33 - 3) >= v35)
            break;
          if (!v11)
            goto LABEL_146;
          v36 = *(_BYTE *)v33;
          v37 = *((_QWORD *)v33 + 2);
          v38 = *((_BYTE *)v33 + 24);
          v39 = *((_BYTE *)v33 + 25);
          v40 = *((_OWORD *)v33 - 1);
          *(_OWORD *)v33 = *((_OWORD *)v33 - 2);
          *((_OWORD *)v33 + 1) = v40;
          *(v33 - 3) = v35;
          *((_QWORD *)v33 - 2) = v37;
          *((_BYTE *)v33 - 8) = v38;
          *((_BYTE *)v33 - 7) = v39;
          *((_BYTE *)v33 - 32) = v36;
          v33 -= 4;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v32 += 4;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_50:
    if (v10 < v14)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24971DB80(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v42 = *((_QWORD *)v12 + 2);
    v41 = *((_QWORD *)v12 + 3);
    v13 = v42 + 1;
    v11 = v119;
    if (v42 >= v41 >> 1)
    {
      v91 = sub_24971DB80((char *)(v41 > 1), v42 + 1, 1, v12);
      v11 = v119;
      v12 = v91;
    }
    *((_QWORD *)v12 + 2) = v13;
    v43 = v12 + 32;
    v44 = &v12[16 * v42 + 32];
    *(_QWORD *)v44 = v14;
    *((_QWORD *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        v45 = v13 - 1;
        if (v13 >= 4)
        {
          v50 = &v43[16 * v13];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_124;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_125;
          v57 = v13 - 2;
          v58 = &v43[16 * v13 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_127;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_130;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_134;
            v73 = v48 < v83;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v74 = *((_QWORD *)v12 + 4);
            v75 = *((_QWORD *)v12 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_81;
          }
          v47 = *((_QWORD *)v12 + 4);
          v46 = *((_QWORD *)v12 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_126;
        v57 = v13 - 2;
        v63 = &v43[16 * v13 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_129;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_132;
        if (__OFADD__(v67, v72))
          goto LABEL_133;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_87:
          if (v73)
            v45 = v57;
          goto LABEL_89;
        }
LABEL_81:
        if ((v68 & 1) != 0)
          goto LABEL_128;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_131;
        if (v79 < v67)
          goto LABEL_15;
LABEL_89:
        v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11)
          goto LABEL_147;
        v85 = v12;
        v86 = &v43[16 * v84];
        v87 = *(_QWORD *)v86;
        v88 = &v43[16 * v45];
        v89 = *((_QWORD *)v88 + 1);
        sub_2496E1254((double *)(v11 + 32 * *(_QWORD *)v86), (double *)(v11 + 32 * *(_QWORD *)v88), v11 + 32 * v89, __dst);
        if (v1)
          goto LABEL_97;
        if (v89 < v87)
          goto LABEL_121;
        if (v45 > *((_QWORD *)v85 + 2))
          goto LABEL_122;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v43[16 * v84 + 8] = v89;
        v90 = *((_QWORD *)v85 + 2);
        if (v45 >= v90)
          goto LABEL_123;
        v12 = v85;
        v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((_QWORD *)v85 + 2) = v90 - 1;
        v11 = v119;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v117;
    v3 = v118;
    if (v10 >= v118)
    {
      v9 = v116;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_24972D074();
  __break(1u);
  return result;
}

uint64_t sub_2496E0EF4(uint64_t *__src, id *a2, unint64_t a3, uint64_t *__dst, void *a5)
{
  uint64_t *v5;
  id *v7;
  id *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id *v16;
  uint64_t *v17;
  void *v18;
  id v19;
  id v20;
  BOOL v21;
  BOOL v22;
  id *v23;
  id *v24;
  uint64_t *v25;
  id *v26;
  id *v27;
  unint64_t v28;
  uint64_t *v29;
  void *v30;
  id v31;
  id v32;
  BOOL v33;
  BOOL v34;
  id *v35;
  uint64_t *v36;
  uint64_t result;
  uint64_t *v38;
  id *v39;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t *v44;
  uint64_t *v45;
  id *v46;

  v5 = __dst;
  v7 = a2;
  v8 = (id *)__src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v46 = (id *)__src;
  v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != (uint64_t *)a2 || &a2[v14] <= (id *)__dst)
        memmove(__dst, a2, 8 * v14);
      v25 = &v5[v14];
      v44 = v25;
      v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        v26 = (id *)(a3 - 8);
        v27 = v7;
        v38 = v5;
        v39 = v8;
        while (1)
        {
          v28 = (unint64_t)v25;
          v29 = v25 - 1;
          v43 = (id)*(v25 - 1);
          v30 = *--v27;
          v42 = v30;
          v31 = v43;
          v32 = v30;
          v33 = sub_2496DF8DC(&v43, (uint64_t *)&v42, (uint64_t)a5);
          if (v41)
            break;
          v34 = v33;
          v41 = 0;
          v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7)
              *v26 = *v27;
            v46 = v27;
            v36 = v38;
            v25 = (uint64_t *)v28;
            if (v27 <= v39)
              goto LABEL_48;
          }
          else
          {
            v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (id *)v28)
              *v26 = (id)*v29;
            v27 = v7;
            v25 = v29;
            v36 = v38;
            if (v7 <= v39)
              goto LABEL_48;
          }
          --v26;
          v7 = v27;
          if (v25 <= v36)
            goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
      memmove(__dst, __src, 8 * v11);
    v15 = &v5[v11];
    v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        v16 = v8;
        v43 = *v7;
        v17 = v5;
        v42 = (void *)*v5;
        v18 = v42;
        v19 = v43;
        v20 = v18;
        v21 = sub_2496DF8DC(&v43, (uint64_t *)&v42, (uint64_t)a5);
        if (v41)
          break;
        v22 = v21;

        if (v22)
        {
          v23 = v7 + 1;
          v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7)
            *v16 = *v7;
          v5 = v17;
        }
        else
        {
          v24 = v16;
          if (v16 != (id *)v17)
            *v16 = (id)*v17;
          v5 = v17 + 1;
          v45 = v17 + 1;
          v23 = v7;
        }
        v41 = 0;
        v8 = v24 + 1;
        v46 = v8;
        if (v5 < v15)
        {
          v7 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_24971DC78(&v46, &v45, &v44);

    return 1;
  }

  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2496E1254(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  __int128 v19;
  uint64_t v20;
  double *v21;
  double *v22;
  double *v23;
  double *v24;
  __int128 v25;
  __int128 v26;
  uint64_t result;
  double *v28;
  double *v29;
  double *v30;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v29 = __dst;
  v30 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -31)
    {
      v20 = 4 * v13;
      if (__dst != a2 || &a2[v20] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v21 = &v4[v20];
      v28 = &v4[v20];
      v30 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 32) <= 0xFFFFFFFFFFFFFFC0)
      {
        v22 = (double *)(a3 - 32);
        do
        {
          v23 = v22 + 4;
          if (*(v6 - 3) >= *(v21 - 3))
          {
            v28 = v21 - 4;
            if (v23 < v21 || v22 >= v21 || v23 != v21)
            {
              v26 = *((_OWORD *)v21 - 1);
              *(_OWORD *)v22 = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 1) = v26;
            }
            v24 = v6;
            v21 -= 4;
            if (v6 <= v7)
              break;
          }
          else
          {
            v24 = v6 - 4;
            if (v23 != v6 || v22 >= v6)
            {
              v25 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v22 = *(_OWORD *)v24;
              *((_OWORD *)v22 + 1) = v25;
            }
            v30 = v6 - 4;
            if (v24 <= v7)
              break;
          }
          v22 -= 4;
          v6 = v24;
        }
        while (v21 > v4);
      }
LABEL_44:
      sub_24971DD24((void **)&v30, (const void **)&v29, &v28);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14 * 8);
    v15 = &v4[v14];
    v28 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      v16 = v4;
      while (1)
      {
        if (v16[1] >= v6[1])
        {
          v4 = v16 + 4;
          v18 = v16;
          v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          v17 = v6 + 4;
          v18 = v6;
          if (v7 == v6 && v7 < v17)
            goto LABEL_22;
        }
        v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v29 = v4;
        v30 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

double sub_2496E14DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;

  v3 = (_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v4 = *v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
  swift_beginAccess();
  v5 = 0.0;
  if (*(_QWORD *)(v4 + 8))
  {
    v6 = (_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                  + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    v7 = *v6 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    if (*(_QWORD *)(v7 + 8))
    {
      sub_2496D9784();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_24972CF30();
      v10 = v9;
      v11 = sub_24972CF30();
      sub_2496FE27C(v8, v10, v11, v12);
      v5 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v5;
}

uint64_t sub_2496E1718(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A108);
    sub_2496D1BCC((unint64_t *)&qword_25787A110, &qword_25787A108, MEMORY[0x24BEE12B0]);
    v20 = sub_24972CB64();
    swift_bridgeObjectRelease();
    return v20;
  }
  swift_bridgeObjectRetain();
  v2 = sub_24972D0BC();
  if (!v2)
    goto LABEL_22;
LABEL_3:
  v21 = MEMORY[0x24BEE4AF8];
  result = sub_2496D5A7C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = (_QWORD *)(MEMORY[0x24BCF6CE8](v4, a1) + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v6 = (uint64_t *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        if (v6[1])
        {
          v7 = *v6;
          v8 = v6[1];
        }
        else
        {
          v7 = 0;
          v8 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v10 = *(_QWORD *)(v21 + 16);
        v9 = *(_QWORD *)(v21 + 24);
        if (v10 >= v9 >> 1)
          sub_2496D5A7C(v9 > 1, v10 + 1, 1);
        ++v4;
        *(_QWORD *)(v21 + 16) = v10 + 1;
        v11 = v21 + 16 * v10;
        *(_QWORD *)(v11 + 32) = v7;
        *(_QWORD *)(v11 + 40) = v8;
      }
      while (v2 != v4);
    }
    else
    {
      v12 = 0;
      do
      {
        v13 = (_QWORD *)(*(_QWORD *)(a1 + 8 * v12 + 32) + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v14 = (uint64_t *)(*v13 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        if (v14[1])
        {
          v15 = *v14;
          v16 = v14[1];
        }
        else
        {
          v15 = 0;
          v16 = 0xE000000000000000;
        }
        v18 = *(_QWORD *)(v21 + 16);
        v17 = *(_QWORD *)(v21 + 24);
        swift_bridgeObjectRetain();
        if (v18 >= v17 >> 1)
          sub_2496D5A7C(v17 > 1, v18 + 1, 1);
        ++v12;
        *(_QWORD *)(v21 + 16) = v18 + 1;
        v19 = v21 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v15;
        *(_QWORD *)(v19 + 40) = v16;
      }
      while (v2 != v12);
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

double sub_2496E19EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  double v62;
  uint64_t v63;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;

  v3 = sub_2496E76CC(a1);
  v5 = v4;
  v77 = v6;
  v78 = v7;
  v8 = sub_2496E76CC(a2);
  v75 = v10;
  v76 = v9;
  v12 = v11;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v74 = v13;
  if (v13 < 1)
    goto LABEL_10;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v22 < 1)
      goto LABEL_10;
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_10;
  }
  sub_2496E1718(v3);
  sub_2496E1718(v8);
  sub_2496D9784();
  v14 = sub_24972CF30();
  v67 = v12;
  v16 = v15;
  v17 = sub_24972CF30();
  sub_2496FE27C(v14, v16, v17, v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v67;
  swift_bridgeObjectRelease();
  if (v20 > 0.8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v20 + 1.0;
  }
LABEL_10:
  if (v5 && v76)
  {
    v23 = &v5[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v24 = *(_QWORD *)v23 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    v25 = *(_QWORD *)(v24 + 8);
    v26 = &v76[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v27 = *(_QWORD *)v26 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    if (v25 && *(_QWORD *)(v27 + 8) != 0)
    {
      sub_2496D9784();
      v68 = v5;
      v65 = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = sub_24972CF30();
      v71 = v5;
      v31 = v30;
      v32 = sub_24972CF30();
      sub_2496FE27C(v29, v31, v32, v33);
      v21 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v5 = v71;
      swift_bridgeObjectRelease();
      if (v21 > 0.8)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_34:
        v47 = v78;
        goto LABEL_35;
      }
    }
  }
  if (v78 && v75)
  {
    v35 = &v78[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v36 = *(_QWORD *)v35 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    v37 = *(_QWORD *)(v36 + 8);
    v38 = &v75[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v39 = *(_QWORD *)v38 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    if (v37 && *(_QWORD *)(v39 + 8) != 0)
    {
      sub_2496D9784();
      v69 = v78;
      v66 = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = sub_24972CF30();
      v72 = v5;
      v43 = v42;
      v44 = sub_24972CF30();
      sub_2496FE27C(v41, v43, v44, v45);
      v21 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v5 = v72;
      swift_bridgeObjectRelease();
      if (v21 > 0.8)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v47 = v77;
LABEL_35:

        return v21;
      }
    }
  }
  if (v77 && v12)
  {
    v48 = &v77[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v49 = *(_QWORD *)v48 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    v50 = *(_QWORD *)(v49 + 8);
    v51 = &v12[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v52 = *(_QWORD *)v51 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    if (v50 && *(_QWORD *)(v52 + 8) != 0)
    {
      sub_2496D9784();
      v70 = v12;
      v73 = v77;
      v54 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = sub_24972CF30();
      v56 = v5;
      v58 = v57;
      v59 = sub_24972CF30();
      v60 = v54;
      sub_2496FE27C(v55, v58, v59, v61);
      v21 = v62;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v12 = v70;
      v5 = v56;
      swift_bridgeObjectRelease();
      if (v21 > 0.8)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_34;
      }
    }
  }
  if (v74)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v63 = sub_24972D0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (!v63)
      return 0.1;
  }
  return 0.0;
}

void sub_2496E2480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void **v9;
  char *v10;
  void **v11;
  void *v12;
  CGFloat *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char *v18;
  char *v19;
  char *v20;
  double MidX;
  CGRect *v22;
  double v23;
  float v24;
  float v25;
  void **v26;
  char *v27;
  void **v28;
  void *v29;
  CGFloat *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  char *v35;
  char *v36;
  double v37;
  CGRect *v38;
  double v39;
  float v40;
  void *v41;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  CGRect v50;
  CGRect v51;

  if (a3 != a2)
  {
    v45 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
    v47 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(char **)(v47 + 8 * a3);
    v7 = a1;
    v44 = v5;
    v48 = a3;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = (void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v10 = (char *)*v9;
      v11 = (void **)(*(_QWORD *)(a5 + v45) + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v12 = *v11;
      v13 = (CGFloat *)&v10[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v49 = v6;
      v18 = v8;
      v19 = v10;
      v20 = v12;
      v50.origin.x = v14;
      v50.origin.y = v15;
      v50.size.width = v16;
      v50.size.height = v17;
      MidX = CGRectGetMidX(v50);
      v22 = (CGRect *)&v20[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v23 = CGRectGetMidX(*v22);

      v24 = MidX - v23;
      v25 = fabsf(v24);
      v26 = (void **)(*(_QWORD *)&v18[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v27 = (char *)*v26;
      v28 = (void **)(*(_QWORD *)(a5 + v45) + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v29 = *v28;
      v30 = (CGFloat *)&v27[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v31 = *v30;
      v32 = v30[1];
      v33 = v30[2];
      v34 = v30[3];
      v35 = v27;
      v36 = v29;
      v51.origin.x = v31;
      v51.origin.y = v32;
      v51.size.width = v33;
      v51.size.height = v34;
      v37 = CGRectGetMidX(v51);
      v38 = (CGRect *)&v36[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v39 = CGRectGetMidX(*v38);

      v40 = v37 - v39;
      if (v25 >= fabsf(v40))
      {
LABEL_4:
        a3 = v48 + 1;
        v5 = v44 + 8;
        if (v48 + 1 == a2)
          return;
        goto LABEL_5;
      }
      if (!v47)
        break;
      v41 = *(void **)v5;
      v6 = *(char **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v41;
      v5 -= 8;
      if (v48 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_2496E277C(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void **v22;
  void *v23;
  void *v24;
  void **v25;
  char *v26;
  void **v27;
  void *v28;
  CGFloat *v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  char *v34;
  char *v35;
  double MidX;
  CGRect *v37;
  double v38;
  float v39;
  float v40;
  void **v41;
  char *v42;
  void **v43;
  void *v44;
  CGFloat *v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  char *v50;
  char *v51;
  double v52;
  CGRect *v53;
  double v54;
  float v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  void **v66;
  char *v67;
  void **v68;
  void *v69;
  CGFloat *v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  char *v75;
  char *v76;
  char *v77;
  double v78;
  CGRect *v79;
  double v80;
  float v81;
  float v82;
  void **v83;
  char *v84;
  void **v85;
  void *v86;
  CGFloat *v87;
  CGFloat v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  char *v92;
  char *v93;
  double v94;
  CGRect *v95;
  double v96;
  float v97;
  void *v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  char v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t *v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *__dst;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id __srca;
  char *__srcb;
  uint64_t *__src;
  char *v180;
  void *v181;
  void *v182;
  uint64_t v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;

  v3 = v2;
  swift_getObjectType();
  v6 = a1[1];
  v180 = a2;
  v7 = sub_24972D1B8();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_137;
    if (v6)
    {
      v11 = v180;
      sub_2496E2480(0, v6, 1, a1, (uint64_t)v11);

    }
    else
    {

    }
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_145;
  v161 = v7;
  v157 = a1;
  if (v6 < 2)
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
    v183 = MEMORY[0x24BEE4AF8];
    __dst = (uint64_t *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v101 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_102:
      v164 = (uint64_t)v12;
      if (v101 >= 2)
      {
        v150 = (uint64_t *)*v157;
        __src = (uint64_t *)*v157;
        do
        {
          v151 = v101 - 2;
          if (v101 < 2)
            goto LABEL_131;
          if (!v150)
            goto LABEL_144;
          v152 = *(_QWORD *)(v164 + 32 + 16 * v151);
          v153 = *(_QWORD *)(v164 + 32 + 16 * (v101 - 1) + 8);
          sub_2496E0EF4(&v150[v152], (id *)&v150[*(_QWORD *)(v164 + 32 + 16 * (v101 - 1))], (unint64_t)&v150[v153], __dst, v180);
          if (v3)
            break;
          if (v153 < v152)
            goto LABEL_133;
          v154 = (char *)v164;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v154 = sub_24971DDC8(v164);
          if (v151 >= *((_QWORD *)v154 + 2))
            goto LABEL_134;
          v155 = &v154[16 * v151 + 32];
          *(_QWORD *)v155 = v152;
          *((_QWORD *)v155 + 1) = v153;
          v156 = *((_QWORD *)v154 + 2);
          if (v101 > v156)
            goto LABEL_135;
          memmove(&v154[16 * v101 + 16], &v154[16 * v101 + 32], 16 * (v156 - v101));
          v164 = (uint64_t)v154;
          *((_QWORD *)v154 + 2) = v156 - 1;
          v101 = v156 - 1;
          v150 = __src;
        }
        while (v156 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      goto LABEL_114;
    }
  }
  else
  {
    v9 = v8 >> 1;
    v10 = sub_24972CCFC();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    __dst = (uint64_t *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v183 = v10;
  }
  v13 = 0;
  v14 = *a1;
  v172 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  v158 = *a1 + 16;
  v159 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v15 = v6;
  v167 = v6;
  v173 = *a1;
  while (1)
  {
    v16 = v13 + 1;
    v168 = v13;
    if (v13 + 1 >= v15)
      goto LABEL_30;
    v162 = v12;
    v17 = *(void **)(v14 + 8 * v16);
    v181 = *(void **)(v14 + 8 * v13);
    v18 = v181;
    v182 = v17;
    v19 = v17;
    v20 = v18;
    v21 = v3;
    v165 = sub_2496DF8DC(&v182, (uint64_t *)&v181, (uint64_t)v180);
    if (v3)
    {
      swift_bridgeObjectRelease();

LABEL_114:
      *(_QWORD *)((v183 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_24972CCE4();

      swift_bridgeObjectRelease();
      return;
    }

    v16 = v13 + 2;
    if (v13 + 2 < v15)
    {
      v22 = (void **)(v158 + 8 * v13);
      while (1)
      {
        v174 = v16;
        v24 = *(v22 - 1);
        v23 = *v22;
        v25 = (void **)(*(_QWORD *)((char *)*v22
                                  + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v26 = (char *)*v25;
        v27 = (void **)(*(_QWORD *)&v180[v172] + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v28 = *v27;
        v29 = (CGFloat *)&v26[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v30 = *v29;
        v31 = v29[1];
        v32 = v29[2];
        v33 = v29[3];
        __srca = v23;
        v170 = v24;
        v34 = v26;
        v35 = v28;
        v184.origin.x = v30;
        v184.origin.y = v31;
        v184.size.width = v32;
        v184.size.height = v33;
        MidX = CGRectGetMidX(v184);
        v37 = (CGRect *)&v35[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v38 = CGRectGetMidX(*v37);

        v39 = MidX - v38;
        v40 = fabsf(v39);
        v41 = (void **)(*(_QWORD *)&v170[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v42 = (char *)*v41;
        v43 = (void **)(*(_QWORD *)&v180[v172] + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v44 = *v43;
        v45 = (CGFloat *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v46 = *v45;
        v47 = v45[1];
        v48 = v45[2];
        v49 = v45[3];
        v50 = v42;
        v51 = v44;
        v185.origin.x = v46;
        v185.origin.y = v47;
        v185.size.width = v48;
        v185.size.height = v49;
        v52 = CGRectGetMidX(v185);
        v53 = (CGRect *)&v51[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v54 = CGRectGetMidX(*v53);

        v55 = v52 - v54;
        if (v165 == v40 >= fabsf(v55))
          break;
        v16 = v174 + 1;
        ++v22;
        v15 = v167;
        if (v167 == v174 + 1)
        {
          v16 = v167;
          v3 = v21;
          v14 = v173;
          goto LABEL_21;
        }
      }
      v3 = v21;
      v15 = v167;
      v14 = v173;
      v16 = v174;
    }
LABEL_21:
    v12 = v162;
    if (v165)
    {
      if (v16 < v13)
        goto LABEL_140;
      if (v13 < v16)
      {
        v56 = (uint64_t *)(v159 + 8 * v16);
        v57 = v16;
        v58 = v13;
        v59 = (uint64_t *)(v14 + 8 * v13);
        do
        {
          if (v58 != --v57)
          {
            if (!v14)
              goto LABEL_143;
            v60 = *v59;
            *v59 = *v56;
            *v56 = v60;
          }
          ++v58;
          --v56;
          ++v59;
        }
        while (v58 < v57);
      }
    }
LABEL_30:
    if (v16 >= v15)
      goto LABEL_48;
    if (__OFSUB__(v16, v13))
      goto LABEL_136;
    if (v16 - v13 >= v161)
      goto LABEL_48;
    if (__OFADD__(v13, v161))
      goto LABEL_138;
    v61 = v13 + v161 >= v15 ? v15 : v13 + v161;
    if (v61 < v13)
      break;
    if (v16 != v61)
    {
      v163 = v12;
      v166 = v61;
      v160 = v3;
      v62 = v159 + 8 * v16;
      do
      {
        v64 = *(char **)(v14 + 8 * v16);
        v171 = v62;
        v175 = v16;
        while (1)
        {
          v65 = *(void **)v62;
          v66 = (void **)(*(_QWORD *)&v64[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v67 = (char *)*v66;
          v68 = (void **)(*(_QWORD *)&v180[v172] + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v69 = *v68;
          v70 = (CGFloat *)&v67[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v71 = *v70;
          v72 = v70[1];
          v73 = v70[2];
          v74 = v70[3];
          __srcb = v64;
          v75 = v65;
          v76 = v67;
          v77 = v69;
          v186.origin.x = v71;
          v186.origin.y = v72;
          v186.size.width = v73;
          v186.size.height = v74;
          v78 = CGRectGetMidX(v186);
          v79 = (CGRect *)&v77[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v80 = CGRectGetMidX(*v79);

          v81 = v78 - v80;
          v82 = fabsf(v81);
          v83 = (void **)(*(_QWORD *)&v75[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v84 = (char *)*v83;
          v85 = (void **)(*(_QWORD *)&v180[v172] + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v86 = *v85;
          v87 = (CGFloat *)&v84[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v88 = *v87;
          v89 = v87[1];
          v90 = v87[2];
          v91 = v87[3];
          v92 = v84;
          v93 = v86;
          v187.origin.x = v88;
          v187.origin.y = v89;
          v187.size.width = v90;
          v187.size.height = v91;
          v94 = CGRectGetMidX(v187);
          v95 = (CGRect *)&v93[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v96 = CGRectGetMidX(*v95);

          v97 = v94 - v96;
          if (v82 >= fabsf(v97))
            break;
          v14 = v173;
          v63 = v175;
          if (!v173)
            goto LABEL_141;
          v98 = *(void **)v62;
          v64 = *(char **)(v62 + 8);
          *(_QWORD *)v62 = v64;
          *(_QWORD *)(v62 + 8) = v98;
          v62 -= 8;
          if (v175 == ++v13)
            goto LABEL_41;
        }
        v14 = v173;
        v63 = v175;
LABEL_41:
        v16 = v63 + 1;
        v62 = v171 + 8;
        v13 = v168;
      }
      while (v16 != v166);
      v16 = v166;
      v3 = v160;
      v12 = v163;
    }
LABEL_48:
    if (v16 < v13)
      goto LABEL_132;
    v176 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_24971DB80(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v100 = *((_QWORD *)v12 + 2);
    v99 = *((_QWORD *)v12 + 3);
    v101 = v100 + 1;
    if (v100 >= v99 >> 1)
      v12 = sub_24971DB80((char *)(v99 > 1), v100 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v101;
    v102 = &v12[16 * v100 + 32];
    *(_QWORD *)v102 = v13;
    *((_QWORD *)v102 + 1) = v176;
    if (v100)
    {
      v103 = v12 + 32;
      while (1)
      {
        v104 = v101 - 1;
        if (v101 >= 4)
        {
          v109 = &v103[16 * v101];
          v110 = *((_QWORD *)v109 - 8);
          v111 = *((_QWORD *)v109 - 7);
          v115 = __OFSUB__(v111, v110);
          v112 = v111 - v110;
          if (v115)
            goto LABEL_120;
          v114 = *((_QWORD *)v109 - 6);
          v113 = *((_QWORD *)v109 - 5);
          v115 = __OFSUB__(v113, v114);
          v107 = v113 - v114;
          v108 = v115;
          if (v115)
            goto LABEL_121;
          v116 = v101 - 2;
          v117 = &v103[16 * v101 - 32];
          v119 = *(_QWORD *)v117;
          v118 = *((_QWORD *)v117 + 1);
          v115 = __OFSUB__(v118, v119);
          v120 = v118 - v119;
          if (v115)
            goto LABEL_123;
          v115 = __OFADD__(v107, v120);
          v121 = v107 + v120;
          if (v115)
            goto LABEL_126;
          if (v121 >= v112)
          {
            v139 = &v103[16 * v104];
            v141 = *(_QWORD *)v139;
            v140 = *((_QWORD *)v139 + 1);
            v115 = __OFSUB__(v140, v141);
            v142 = v140 - v141;
            if (v115)
              goto LABEL_130;
            v132 = v107 < v142;
            goto LABEL_86;
          }
        }
        else
        {
          if (v101 != 3)
          {
            v133 = *((_QWORD *)v12 + 4);
            v134 = *((_QWORD *)v12 + 5);
            v115 = __OFSUB__(v134, v133);
            v126 = v134 - v133;
            v127 = v115;
            goto LABEL_80;
          }
          v106 = *((_QWORD *)v12 + 4);
          v105 = *((_QWORD *)v12 + 5);
          v115 = __OFSUB__(v105, v106);
          v107 = v105 - v106;
          v108 = v115;
        }
        if ((v108 & 1) != 0)
          goto LABEL_122;
        v116 = v101 - 2;
        v122 = &v103[16 * v101 - 32];
        v124 = *(_QWORD *)v122;
        v123 = *((_QWORD *)v122 + 1);
        v125 = __OFSUB__(v123, v124);
        v126 = v123 - v124;
        v127 = v125;
        if (v125)
          goto LABEL_125;
        v128 = &v103[16 * v104];
        v130 = *(_QWORD *)v128;
        v129 = *((_QWORD *)v128 + 1);
        v115 = __OFSUB__(v129, v130);
        v131 = v129 - v130;
        if (v115)
          goto LABEL_128;
        if (__OFADD__(v126, v131))
          goto LABEL_129;
        if (v126 + v131 >= v107)
        {
          v132 = v107 < v131;
LABEL_86:
          if (v132)
            v104 = v116;
          goto LABEL_88;
        }
LABEL_80:
        if ((v127 & 1) != 0)
          goto LABEL_124;
        v135 = &v103[16 * v104];
        v137 = *(_QWORD *)v135;
        v136 = *((_QWORD *)v135 + 1);
        v115 = __OFSUB__(v136, v137);
        v138 = v136 - v137;
        if (v115)
          goto LABEL_127;
        if (v138 < v126)
          goto LABEL_97;
LABEL_88:
        v143 = v104 - 1;
        if (v104 - 1 >= v101)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v14)
          goto LABEL_142;
        v144 = &v103[16 * v143];
        v145 = *(_QWORD *)v144;
        v146 = v104;
        v147 = &v103[16 * v104];
        v148 = *((_QWORD *)v147 + 1);
        sub_2496E0EF4((uint64_t *)(v14 + 8 * *(_QWORD *)v144), (id *)(v14 + 8 * *(_QWORD *)v147), v14 + 8 * v148, __dst, v180);
        if (v3)
          goto LABEL_113;
        if (v148 < v145)
          goto LABEL_117;
        if (v146 > *((_QWORD *)v12 + 2))
          goto LABEL_118;
        *(_QWORD *)v144 = v145;
        *(_QWORD *)&v12[16 * v143 + 40] = v148;
        v149 = *((_QWORD *)v12 + 2);
        if (v146 >= v149)
          goto LABEL_119;
        v101 = v149 - 1;
        memmove(v147, v147 + 16, 16 * (v149 - 1 - v146));
        v103 = v12 + 32;
        *((_QWORD *)v12 + 2) = v149 - 1;
        v14 = v173;
        if (v149 <= 2)
          goto LABEL_97;
      }
    }
    v101 = 1;
LABEL_97:
    v15 = v167;
    v13 = v176;
    if (v176 >= v167)
      goto LABEL_102;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:

  __break(1u);
LABEL_142:

  __break(1u);
LABEL_143:

  __break(1u);
LABEL_144:

  __break(1u);
LABEL_145:

  sub_24972D074();
  __break(1u);
}

void sub_2496E33D4(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971FA68();
  v6 = *(_QWORD *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  v7 = v4;
  sub_2496E277C(v8, v7);

  sub_24972D02C();
}

uint64_t sub_2496E3470(uint64_t a1, void *a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  _QWORD *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  void *v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t i;
  char *v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t j;
  char *v48;
  void *v49;
  _QWORD *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  BOOL v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  double v64;
  double v65;
  uint64_t result;
  id *v67;
  id *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];
  uint64_t v75[4];

  v3 = (unint64_t *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children);
  swift_beginAccess();
  v4 = *v3;
  if ((*v3 & 0x8000000000000000) != 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v39 = a2;
    v5 = (uint64_t)sub_2496F13D8(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v6 = a2;
  }
  v75[0] = v5;
  v7 = a2;
  sub_2496E33D4(v75, v7);
  v68 = (id *)v3;
  swift_bridgeObjectRelease();

  v8 = v75[0];
  v9 = (unint64_t *)&v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
  swift_beginAccess();
  v67 = (id *)v9;
  v10 = *v9;
  if ((v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v40 = v7;
    v11 = (uint64_t)sub_2496F13D8(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v12 = v7;
  }
  v74[0] = v11;
  v13 = v7;
  sub_2496E33D4(v74, (void *)v13);
  swift_bridgeObjectRelease();

  v14 = v74[0];
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v15 = sub_24972D0BC();
    swift_release();
  }
  else
  {
    v15 = *(_QWORD *)(v8 + 16);
  }
  v69 = v14;
  if (v15)
  {
    v73 = MEMORY[0x24BEE4AF8];
    sub_2496D5A7C(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_58;
    }
    v16 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v17 = (char *)MEMORY[0x24BCF6CE8](v16, v8);
      else
        v17 = (char *)*(id *)(v8 + 8 * v16 + 32);
      v18 = v17;
      v19 = (_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v19 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10
        && (v20 = (uint64_t *)(*v19 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text),
            swift_beginAccess(),
            (v21 = v20[1]) != 0))
      {
        v22 = *v20;
        swift_bridgeObjectRetain();
      }
      else
      {
        v22 = 0;
        v21 = 0xE000000000000000;
      }

      v24 = *(_QWORD *)(v73 + 16);
      v23 = *(_QWORD *)(v73 + 24);
      if (v24 >= v23 >> 1)
        sub_2496D5A7C(v23 > 1, v24 + 1, 1);
      ++v16;
      *(_QWORD *)(v73 + 16) = v24 + 1;
      v25 = v73 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v22;
      *(_QWORD *)(v25 + 40) = v21;
    }
    while (v15 != v16);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A108);
  sub_2496D1BCC((unint64_t *)&qword_25787A110, &qword_25787A108, MEMORY[0x24BEE12B0]);
  sub_24972CB64();
  v13 = v26;
  swift_bridgeObjectRelease();
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v27 = sub_24972D0BC();
    swift_release();
    if (!v27)
      goto LABEL_43;
  }
  else
  {
    v27 = *(_QWORD *)(v14 + 16);
    if (!v27)
      goto LABEL_43;
  }
  v72 = MEMORY[0x24BEE4AF8];
  sub_2496D5A7C(0, v27 & ~(v27 >> 63), 0);
  if (v27 < 0)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v28 = 0;
  v29 = v14 & 0xC000000000000001;
  do
  {
    if (v29)
      v30 = (char *)MEMORY[0x24BCF6CE8](v28, v14);
    else
      v30 = (char *)*(id *)(v14 + 8 * v28 + 32);
    v31 = v30;
    v32 = (_QWORD *)(*(_QWORD *)&v30[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v32 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10
      && (v33 = (uint64_t *)(*v32 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text),
          swift_beginAccess(),
          (v34 = v33[1]) != 0))
    {
      v35 = *v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = 0;
      v34 = 0xE000000000000000;
    }

    v37 = *(_QWORD *)(v72 + 16);
    v36 = *(_QWORD *)(v72 + 24);
    if (v37 >= v36 >> 1)
      sub_2496D5A7C(v36 > 1, v37 + 1, 1);
    ++v28;
    *(_QWORD *)(v72 + 16) = v37 + 1;
    v38 = v72 + 16 * v37;
    *(_QWORD *)(v38 + 32) = v35;
    *(_QWORD *)(v38 + 40) = v34;
    v14 = v69;
  }
  while (v27 != v28);
LABEL_43:
  swift_release();
  sub_24972CB64();
  swift_bridgeObjectRelease();
  if (sub_24972CC30() > 1 || sub_24972CC30() > 1)
    goto LABEL_94;
  v13 = (unint64_t)*v68;
  v71 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)*v68 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    v41 = sub_24972D0BC();
    if (v41)
      goto LABEL_47;
LABEL_60:
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x24BEE4AF8];
    goto LABEL_61;
  }
  v41 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v41)
    goto LABEL_60;
LABEL_47:
  if (v41 < 1)
  {
    __break(1u);
    goto LABEL_91;
  }
  for (i = 0; i != v41; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v43 = (char *)MEMORY[0x24BCF6CE8](i, v13);
    else
      v43 = (char *)*(id *)(v13 + 8 * i + 32);
    v44 = v43;
    v45 = (_QWORD *)(*(_QWORD *)&v43[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if ((*(_QWORD *)(*v45 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) | 2) == 6)
    {
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v41 = v71;
LABEL_61:
  v13 = (unint64_t)*v67;
  v70 = MEMORY[0x24BEE4AF8];
  if (!((unint64_t)*v67 >> 62))
  {
    v46 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46)
      goto LABEL_63;
LABEL_75:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BEE4AF8];
    if (v41 < 0)
      goto LABEL_88;
    goto LABEL_76;
  }
  swift_bridgeObjectRetain();
  v46 = sub_24972D0BC();
  if (!v46)
    goto LABEL_75;
LABEL_63:
  if (v46 < 1)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  for (j = 0; j != v46; ++j)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v48 = (char *)MEMORY[0x24BCF6CE8](j, v13);
    else
      v48 = (char *)*(id *)(v13 + 8 * j + 32);
    v49 = v48;
    v50 = (_QWORD *)(*(_QWORD *)&v48[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if ((*(_QWORD *)(*v50 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) | 2) == 6)
    {
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v13 = v70;
  if (v41 < 0)
  {
LABEL_88:
    swift_bridgeObjectRetain();
    v57 = sub_24972D0BC();
    swift_release();
    if (v57 <= 0)
      goto LABEL_93;
    goto LABEL_78;
  }
LABEL_76:
  if ((v41 & 0x4000000000000000) != 0)
    goto LABEL_88;
  if (*(uint64_t *)(v41 + 16) <= 0)
    goto LABEL_93;
LABEL_78:
  if ((v13 & 0x8000000000000000) == 0 && (v13 & 0x4000000000000000) == 0)
  {
    if (*(uint64_t *)(v13 + 16) >= 1)
      goto LABEL_81;
LABEL_93:
    swift_release();
    swift_release();
LABEL_94:
    sub_2496D9784();
    v59 = sub_24972CF30();
    v61 = v60;
    v62 = sub_24972CF30();
    sub_2496FE27C(v59, v61, v62, v63);
    v65 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v65 > 0.8;
  }
LABEL_92:
  swift_bridgeObjectRetain();
  v58 = sub_24972D0BC();
  swift_release();
  if (v58 < 1)
    goto LABEL_93;
LABEL_81:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 0xC000000000000001) != 0)
  {
    v51 = (id)MEMORY[0x24BCF6CE8](0, v41);
  }
  else
  {
    if (!*(_QWORD *)(v41 + 16))
    {
      __break(1u);
      goto LABEL_99;
    }
    v51 = *(id *)(v41 + 32);
  }
  v52 = v51;
  swift_release();
  if ((v13 & 0xC000000000000001) != 0)
  {
    v53 = (id)MEMORY[0x24BCF6CE8](0, v13);
    goto LABEL_87;
  }
  if (*(_QWORD *)(v13 + 16))
  {
    v53 = *(id *)(v13 + 32);
LABEL_87:
    v54 = v53;
    swift_release();
    sub_2496EE46C((uint64_t)v52, (uint64_t)v54);
    v56 = v55;

    return v56;
  }
LABEL_99:
  __break(1u);

  swift_release();
  __break(1u);

  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2496E3F08(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children);
  swift_beginAccess();
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v12 != 1)
      goto LABEL_9;
  }
  else if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_9;
  }
  result = swift_beginAccess();
  v6 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    v7 = (char *)MEMORY[0x24BCF6CE8](0);
LABEL_6:
    v8 = v7;
    swift_endAccess();
    v9 = (_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                  + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    v10 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);

    if (v10 == 4)
    {
      sub_2496EE46C(a1, a2);
      return v11 & 1;
    }
LABEL_9:
    sub_2496E14DC(a1, a2);
    return v11 & 1;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = (char *)*(id *)(v6 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_2496E4084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t result;
  char v14;
  void *v15;

  v2 = a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType + 8) & 1) != 0
    || (*(_BYTE *)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType + 8) & 1) != 0
    || (v3 = *(_QWORD *)v2,
        *(_QWORD *)v2 != *(_QWORD *)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType))
    || (v4 = *(void **)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection)) == 0
    || (v5 = *(void **)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection)) == 0)
  {
    v10 = 0;
    return v10 & 1;
  }
  v6 = qword_257879BA8;
  v7 = v5;
  v8 = v4;
  if (v6 == -1)
  {
LABEL_7:
    if ((sub_2496F4358(v3, qword_25787EB38) & 1) != 0)
    {
      sub_2496E14DC((uint64_t)v8, (uint64_t)v7);
      v10 = v9;
      v12 = v11;

    }
    else
    {
      switch(v3)
      {
        case 2:
          v14 = sub_2496E3470((uint64_t)v8, v7);
          break;
        case 14:
          v14 = sub_2496E3F08((uint64_t)v8, (uint64_t)v7);
          break;
        case 7:
          sub_2496E14DC((uint64_t)v8, (uint64_t)v7);
          break;
        default:

          v10 = 0;
          goto LABEL_19;
      }
      v10 = v14;
      v12 = v15;

    }
    v7 = v12;
LABEL_19:

    return v10 & 1;
  }
  result = swift_once();
  if ((*(_BYTE *)(v2 + 8) & 1) == 0)
  {
    v3 = *(_QWORD *)v2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

double sub_2496E41EC(uint64_t a1, char *a2)
{
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  double v12;
  char *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  void **v28;
  void *v29;
  void **v30;
  void *v31;
  id v32;
  id v33;
  float v34;
  uint64_t v35;
  _QWORD *v36;
  void **v37;
  void *v38;
  void **v39;
  void *v40;
  id v41;
  id v42;
  float v43;
  uint64_t v44;
  _QWORD *v45;
  void **v46;
  void *v47;
  void **v48;
  void *v49;
  id v50;
  id v51;
  float v52;
  _QWORD *v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  double v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  double v65;

  v4 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  v5 = *(char **)&a2[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection];
  v6 = (_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v7 = *(_QWORD *)(*v6 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
  v8 = &v5[OBJC_IVAR___UIObjectCompat_detection];
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)v8 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
  v10 = v5;
  if (v7 == v9 || (sub_2496E7FC0(a1), v12 = 0.0, (v14 & 1) != 0) && (sub_2496E7FC0((uint64_t)a2), (v15 & 1) != 0))
  {
    v11 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v11 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
    {
      v12 = sub_2496E14DC(a1, (uint64_t)a2);
      v5 = v13;

    }
    else
    {
      v12 = 0.0;
    }
    sub_2496E7FC0(a1);
    if ((v16 & 1) != 0)
    {
      sub_2496E7FC0((uint64_t)a2);
      if ((v17 & 1) != 0)
      {
        v12 = sub_2496EE46C(a1, (uint64_t)a2);
        v19 = v18;

        v5 = v19;
      }
    }
    v20 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v20 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 6)
    {
      v12 = sub_2496EE46C(a1, (uint64_t)a2);
      v22 = v21;

      v5 = v22;
    }
    v23 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v23 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 11)
    {
      v12 = sub_2496E19EC(a1, (uint64_t)a2);
      v25 = v24;

      v5 = v25;
    }
    v26 = *(_QWORD *)(a1 + v4);
    v27 = (_QWORD *)(v26 + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v27 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 3)
    {
      v28 = (void **)(v26 + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v29 = *v28;
      v30 = (void **)(*(_QWORD *)&a2[v4] + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v31 = *v30;
      v32 = v29;
      v33 = v31;
      v34 = sub_24970EA78((uint64_t)v33);

      v5 = 0;
      v12 = (float)(1.0 - v34);
    }
    v35 = *(_QWORD *)(a1 + v4);
    v36 = (_QWORD *)(v35 + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v36 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 8)
    {
      v37 = (void **)(v35 + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v38 = *v37;
      v39 = (void **)(*(_QWORD *)&a2[v4] + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v40 = *v39;
      v41 = v38;
      v42 = v40;
      v43 = sub_24970EA78((uint64_t)v42);

      v5 = 0;
      v12 = (float)(1.0 - v43);
    }
    v44 = *(_QWORD *)(a1 + v4);
    v45 = (_QWORD *)(v44 + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v45 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 5)
    {
      v46 = (void **)(v44 + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v47 = *v46;
      v48 = (void **)(*(_QWORD *)&a2[v4] + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v49 = *v48;
      v50 = v47;
      v51 = v49;
      v52 = sub_24970EA78((uint64_t)v51);

      v5 = 0;
      v12 = (float)(1.0 - v52);
    }
    v53 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v53 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 7)
    {
      v12 = sub_2496E14DC(a1, (uint64_t)a2);
      v55 = v54;

      v5 = v55;
    }
    v56 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v56 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 2)
    {
      sub_2496E3470(a1, a2);
      v12 = v57;
      v59 = v58;

      v5 = v59;
    }
    if (qword_257879BA8 != -1)
      swift_once();
    v60 = qword_25787EB38;
    v61 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if ((sub_2496F4358(*(_QWORD *)(*v61 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label), v60) & 1) != 0)
    {
      v12 = sub_2496E14DC(a1, (uint64_t)a2);
      v63 = v62;

      v5 = v63;
    }
    v64 = (_QWORD *)(*(_QWORD *)(a1 + v4) + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v64 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 14)
    {
      sub_2496E3F08(a1, (uint64_t)a2);
      v12 = v65;

    }
    sub_2496E4084(a1, (uint64_t)a2);
  }
  return v12;
}

void sub_2496E4814(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  double v17;
  float v18;
  void **v19;
  char *v20;
  void **v21;
  char *v22;
  void **v23;
  void *v24;
  CGFloat *v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  char *v35;
  char *v36;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v41;
  double v42;
  float v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  CGRect *v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CGFloat r2;
  CGFloat r2_8;
  CGFloat r2_8a;
  CGFloat r2_16;
  CGFloat r2_16a;
  CGFloat r2_24;
  CGFloat r2_24a;
  CGFloat v70;
  CGFloat v71;
  char *v72;
  CGFloat r1;
  float r1a;
  char *r1_8;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return;
  v5 = *(char **)(a1 + 48);
  v6 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  swift_bridgeObjectRetain();
  v7 = v5;
  if (v2 == 1)
    goto LABEL_21;
  v76 = -(uint64_t)v2;
  v8 = a1 + 57;
  v9 = 1;
  v61 = v6;
  v62 = a2;
  v59 = a1 + 57;
  v60 = v2;
  while (2)
  {
    if (v9 <= v2)
      v10 = v2;
    else
      v10 = v9;
    v77 = -(uint64_t)v10;
    v78 = v5;
    v11 = v8 + 32 * v9++;
    while (1)
    {
      if (v77 + v9 == 1)
      {
        __break(1u);
        return;
      }
      v5 = *(char **)(v11 - 9);
      v19 = (void **)(*(_QWORD *)(a2 + v6) + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      if (v5)
      {
        v20 = (char *)*v19;
        v21 = (void **)&v5[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        if (v78)
          break;
      }
LABEL_12:
      ++v9;
      v11 += 32;
      if (v76 + v9 == 1)
        goto LABEL_21;
    }
    v22 = (char *)*v21;
    v23 = (void **)&v78[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v24 = *v23;
    v25 = (CGFloat *)&v22[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v26 = *v25;
    v27 = v25[1];
    v28 = v25[2];
    v29 = v25[3];
    v30 = (CGFloat *)&v20[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v31 = *v30;
    v32 = v30[1];
    v33 = v30[2];
    v34 = v30[3];
    v72 = v5;
    v35 = v20;
    r1_8 = v22;
    v36 = v24;
    r1 = v26;
    v82.origin.x = v26;
    r2_24 = v28;
    v70 = v27;
    v82.origin.y = v27;
    v82.size.width = v28;
    r2_8 = v31;
    r2_16 = v29;
    v82.size.height = v29;
    v92.origin.x = v31;
    v92.origin.y = v32;
    v92.size.width = v33;
    v92.size.height = v34;
    v83 = CGRectUnion(v82, v92);
    x = v83.origin.x;
    y = v83.origin.y;
    width = v83.size.width;
    height = v83.size.height;
    v41 = CGRectGetHeight(v83);
    v84.origin.x = x;
    v84.origin.y = y;
    v84.size.width = width;
    v84.size.height = height;
    v42 = v41 * CGRectGetWidth(v84);
    v43 = 0.0;
    if (v42 != 0.0)
    {
      v85.origin.x = r1;
      v85.size.width = r2_24;
      v85.origin.y = v70;
      v93.origin.x = r2_8;
      v85.size.height = r2_16;
      v93.origin.y = v32;
      v93.size.width = v33;
      v93.size.height = v34;
      v86 = CGRectIntersection(v85, v93);
      v44 = v86.origin.x;
      v45 = v86.origin.y;
      v46 = v86.size.width;
      v47 = v86.size.height;
      v48 = CGRectGetHeight(v86);
      v87.origin.x = v44;
      v87.origin.y = v45;
      v87.size.width = v46;
      v87.size.height = v47;
      v43 = v48 * CGRectGetWidth(v87) / v42;
    }
    r1a = v43;
    v49 = (CGRect *)&v36[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v88 = *v49;
    v94.origin.x = *v30;
    v50 = v30[1];
    v51 = v30[2];
    v52 = v30[3];
    r2_24a = v88.origin.y;
    v71 = v49->origin.x;
    r2_8a = v88.size.height;
    r2_16a = v88.size.width;
    r2 = *v30;
    v94.origin.y = v50;
    v94.size.width = v51;
    v94.size.height = v52;
    v89 = CGRectUnion(*v49, v94);
    v53 = v89.origin.x;
    v54 = v89.origin.y;
    v55 = v89.size.width;
    v56 = v89.size.height;
    v57 = CGRectGetHeight(v89);
    v90.origin.x = v53;
    v90.origin.y = v54;
    v90.size.width = v55;
    v90.size.height = v56;
    v58 = v57 * CGRectGetWidth(v90);
    if (v58 != 0.0)
    {
      v79.origin.y = r2_24a;
      v79.origin.x = v71;
      v79.size.height = r2_8a;
      v79.size.width = r2_16a;
      v91.origin.x = r2;
      v91.origin.y = v50;
      v91.size.width = v51;
      v91.size.height = v52;
      v80 = CGRectIntersection(v79, v91);
      v12 = v80.origin.x;
      v13 = v80.origin.y;
      v14 = v80.size.width;
      v15 = v80.size.height;
      v16 = CGRectGetHeight(v80);
      v81.origin.x = v12;
      v81.origin.y = v13;
      v81.size.width = v14;
      v81.size.height = v15;
      v17 = CGRectGetWidth(v81);

      v18 = v16 * v17 / v58;
      if (r1a > v18)
        goto LABEL_20;
      goto LABEL_11;
    }

    if (r1a <= 0.0)
    {
LABEL_11:

      v6 = v61;
      a2 = v62;
      goto LABEL_12;
    }
LABEL_20:

    v6 = v61;
    a2 = v62;
    v8 = v59;
    v2 = v60;
    if (v76 + v9)
      continue;
    break;
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

uint64_t sub_2496E4CF4(void *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  __int16 v9;
  double v10;
  char *v11;
  char v12;
  double v13;
  __int16 v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  void *v30;
  char v31;
  id v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  double v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  double v43;
  char v44;
  void *v45;
  char v46;
  char v47;
  id v48;
  char isUniquelyReferenced_nonNull_native;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t result;
  uint64_t v55;
  _QWORD *v57;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
    if (v3)
      goto LABEL_3;
LABEL_17:
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_17;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if ((a2 & 0xC000000000000001) != 0)
      v7 = (char *)MEMORY[0x24BCF6CE8](v4, a2);
    else
      v7 = (char *)*(id *)(a2 + 8 * v4 + 32);
    v6 = v7;
    v10 = sub_2496E41EC((uint64_t)a1, v7);
    v11 = v8;
    if ((v12 & 1) != 0)
    {
      v13 = v10;
      v14 = v9;

      v15 = *(void **)&v6[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection];
      v16 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_24970A95C(0, v5[2] + 1, 1, v5);
      v18 = v5[2];
      v17 = v5[3];
      v19 = v5;
      if (v18 >= v17 >> 1)
        v19 = sub_24970A95C((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
      v19[2] = v18 + 1;
      v5 = v19;
      v20 = &v19[4 * v18];
      *((_BYTE *)v20 + 32) = 1;
      *((double *)v20 + 5) = v13;
      v20[6] = v15;
      *((_BYTE *)v20 + 56) = v14 & 1;
      *((_BYTE *)v20 + 57) = HIBYTE(v14) & 1;

    }
    else
    {

      v6 = v11;
    }
    ++v4;

  }
  while (v3 != v4);
LABEL_18:
  swift_bridgeObjectRelease();
  if (!v5[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v57 = v5;
  swift_bridgeObjectRetain_n();
  sub_2496E075C((uint64_t *)&v57);
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v57;
  v55 = (uint64_t)v57;
  if ((*((_BYTE *)a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType + 8) & 1) != 0)
  {
LABEL_35:
    v36 = *(_QWORD *)(v21 + 16);
    if (v36)
    {
      v37 = *(double *)(v21 + 40);
      swift_retain();
      v38 = (char *)(v21 + 57);
      v39 = MEMORY[0x24BEE4AF8];
      do
      {
        v43 = *(double *)(v38 - 17);
        if (vabdd_f64(v43, v37) < 0.01)
        {
          v44 = *(v38 - 25);
          v45 = *(void **)(v38 - 9);
          v46 = *(v38 - 1);
          v47 = *v38;
          v48 = v45;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v57 = (_QWORD *)v39;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2496D5A98(0, *(_QWORD *)(v39 + 16) + 1, 1);
            v39 = (uint64_t)v57;
          }
          v41 = *(_QWORD *)(v39 + 16);
          v40 = *(_QWORD *)(v39 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_2496D5A98(v40 > 1, v41 + 1, 1);
            v39 = (uint64_t)v57;
          }
          *(_QWORD *)(v39 + 16) = v41 + 1;
          v42 = v39 + 32 * v41;
          *(_BYTE *)(v42 + 32) = v44;
          *(double *)(v42 + 40) = v43;
          *(_QWORD *)(v42 + 48) = v45;
          *(_BYTE *)(v42 + 56) = v46;
          *(_BYTE *)(v42 + 57) = v47;
        }
        v38 += 32;
        --v36;
      }
      while (v36);
      swift_release();
      if (*(_QWORD *)(v39 + 16) >= 2uLL)
      {
        swift_release();
        v50 = a1;
        sub_2496E4814(v39, (uint64_t)v50);
        v52 = v51;
        swift_release();
        swift_bridgeObjectRelease();

        if (v52 == 1)
          return 0;
        else
          return v52;
      }
      swift_release();
      swift_bridgeObjectRelease();
      v34 = *(void **)(v55 + 48);
      v53 = v34;
      goto LABEL_49;
    }
    goto LABEL_52;
  }
  v22 = v57[2];
  if (!v22)
  {
    v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_31;
    goto LABEL_34;
  }
  swift_retain();
  v23 = (_BYTE *)(v21 + 57);
  v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if (*v23 == 1)
    {
      v28 = *(v23 - 25);
      v29 = *(_QWORD *)(v23 - 17);
      v30 = *(void **)(v23 - 9);
      v31 = *(v23 - 1);
      v32 = v30;
      v33 = swift_isUniquelyReferenced_nonNull_native();
      v57 = v24;
      if ((v33 & 1) == 0)
      {
        sub_2496D5A98(0, v24[2] + 1, 1);
        v24 = v57;
      }
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_2496D5A98(v25 > 1, v26 + 1, 1);
        v24 = v57;
      }
      v24[2] = v26 + 1;
      v27 = &v24[4 * v26];
      *((_BYTE *)v27 + 32) = v28;
      v27[5] = v29;
      v27[6] = v30;
      *((_BYTE *)v27 + 56) = v31;
      *((_BYTE *)v27 + 57) = 1;
    }
    v23 += 32;
    --v22;
  }
  while (v22);
  v21 = v55;
  swift_release();
  if (!v24[2])
  {
LABEL_34:
    swift_release();
    goto LABEL_35;
  }
LABEL_31:
  swift_release();
  swift_bridgeObjectRelease();
  if (v24[2])
  {
    v34 = (void *)v24[6];
    v35 = v34;
LABEL_49:
    swift_release();
    return (uint64_t)v34;
  }
LABEL_53:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t method lookup function for UIFingerprinter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIFingerprinter.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of UIFingerprinter.getBestMatchFromCoordinates(x:y:originalImage:originalDetections:newImage:newDetections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

id UIFingerprintingDetectionInfo.__allocating_init(detection:detectionsInScreen:label:screenshot:boundingBox:text:children:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v16;
  id v17;

  v16 = objc_allocWithZone(v8);
  v17 = sub_2496E542C(a1, a2, a4, a6, a7, a8);

  return v17;
}

id UIFingerprintingDetectionInfo.init(detection:detectionsInScreen:label:screenshot:boundingBox:text:children:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v11;

  v11 = sub_2496E542C(a1, a2, a4, a6, a7, a8);

  return v11;
}

id UIFingerprintingDetectionInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIFingerprintingDetectionInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIFingerprintingDetectionInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2496E542C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v21;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_bridgeObjectRelease();
  v13 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detectionsInScreen;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detectionsInScreen] = MEMORY[0x24BEE4AF8];
  v15 = &v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection] = 0;
  v16 = &v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
  *(_QWORD *)&v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children] = v14;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection] = a1;
  *(_QWORD *)&v7[v13] = a2;
  v17 = v7;
  v18 = a1;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_screenshot] = a3;
  swift_beginAccess();
  *(_QWORD *)v16 = a6;
  v19 = a3;

  swift_bridgeObjectRelease();
  v21.receiver = v17;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t type metadata accessor for UIFingerprintingDetectionInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for UIFingerprintingDetectionInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIFingerprintingDetectionInfo.__allocating_init(detection:detectionsInScreen:label:screenshot:boundingBox:text:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void destroy for UIFingerprintingSimilarityInfo(uint64_t a1)
{

}

uint64_t initializeWithCopy for UIFingerprintingSimilarityInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for UIFingerprintingSimilarityInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UIFingerprintingSimilarityInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIFingerprintingSimilarityInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UIFingerprintingSimilarityInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIFingerprintingSimilarityInfo()
{
  return &type metadata for UIFingerprintingSimilarityInfo;
}

uint64_t sub_2496E5750()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIFingerprintingUtils()
{
  return objc_opt_self();
}

uint64_t sub_2496E5780(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971FA68();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2496E57F8(v6);
  return sub_24972D02C();
}

void sub_2496E57F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void **v15;
  char *v16;
  void **v17;
  void *v18;
  CGFloat *v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  double MinY;
  CGRect *v29;
  double v30;
  uint64_t v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double MinX;
  double v37;
  void **v38;
  void *v39;
  char *v40;
  void **v41;
  char *v42;
  void **v43;
  void *v44;
  CGFloat *v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  double v54;
  CGRect *v55;
  double v56;
  uint64_t v57;
  CGFloat v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void **v124;
  char *v125;
  void **v126;
  void *v127;
  CGFloat *v128;
  CGFloat v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  double v137;
  CGRect *v138;
  double v139;
  uint64_t v140;
  CGFloat v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  double v146;
  double v147;
  double v148;
  char *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  void **__dst;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_24972D1B8();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
      goto LABEL_273;
    v161 = v5;
    v157 = a1;
    if (v4 < 2)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v171 = MEMORY[0x24BEE4AF8];
      __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        v72 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v72 < 2)
          goto LABEL_182;
        goto LABEL_170;
      }
    }
    else
    {
      v7 = v6 >> 1;
      type metadata accessor for UIObject();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v171 = v8;
    }
    v10 = 0;
    v11 = *a1;
    v159 = *a1 + 16;
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v158 = *a1 - 8;
    v165 = v4;
    v170 = *a1;
LABEL_13:
    v12 = v10 + 1;
    v166 = v9;
    v162 = v10;
    if (v10 + 1 < v4)
    {
      v13 = *(char **)(v11 + 8 * v12);
      v14 = *(char **)(v11 + 8 * v10);
      v15 = (void **)&v13[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v16 = (char *)*v15;
      v17 = (void **)&v14[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v18 = *v17;
      v19 = (CGFloat *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      v24 = v13;
      v25 = v14;
      v26 = v16;
      v27 = v18;
      v172.origin.x = v20;
      v172.origin.y = v21;
      v172.size.width = v22;
      v172.size.height = v23;
      MinY = CGRectGetMinY(v172);
      if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        goto LABEL_245;
      if (MinY <= -9.22337204e18)
      {
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        __break(1u);
LABEL_253:
        __break(1u);
LABEL_254:
        __break(1u);
LABEL_255:
        __break(1u);
LABEL_256:
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        sub_24972D074();
        __break(1u);
        return;
      }
      if (MinY >= 9.22337204e18)
        goto LABEL_247;
      v29 = (CGRect *)&v27[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v30 = CGRectGetMinY(*v29);
      if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
        goto LABEL_248;
      if (v30 <= -9.22337204e18)
        goto LABEL_249;
      if (v30 >= 9.22337204e18)
        goto LABEL_250;
      v31 = (uint64_t)MinY - (uint64_t)v30;
      if (__OFSUB__((uint64_t)MinY, (uint64_t)v30))
        goto LABEL_251;
      v10 = v162;
      if (v31 < 0)
      {
        v86 = __OFSUB__(0, v31);
        v31 = (uint64_t)v30 - (uint64_t)MinY;
        if (v86)
          goto LABEL_268;
      }
      v32 = *v19;
      v33 = *((_QWORD *)v19 + 1);
      v34 = *((_QWORD *)v19 + 2);
      v35 = *((_QWORD *)v19 + 3);
      if (v31 > 19)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v32);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_254;
        if (MinX <= -9.22337204e18)
          goto LABEL_256;
        if (MinX >= 9.22337204e18)
          goto LABEL_258;
        v37 = CGRectGetMinX(*v29);

        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
          goto LABEL_260;
        v4 = v165;
        v9 = v166;
        if (v37 <= -9.22337204e18)
          goto LABEL_262;
        if (v37 >= 9.22337204e18)
          goto LABEL_264;
      }
      else
      {
        MinX = CGRectGetMinY(*(CGRect *)&v32);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_253;
        if (MinX <= -9.22337204e18)
          goto LABEL_255;
        if (MinX >= 9.22337204e18)
          goto LABEL_257;
        v37 = CGRectGetMinY(*v29);

        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
          goto LABEL_259;
        v4 = v165;
        v9 = v166;
        if (v37 <= -9.22337204e18)
          goto LABEL_261;
        if (v37 >= 9.22337204e18)
          goto LABEL_263;
      }
      v168 = (uint64_t)MinX;
      v163 = (uint64_t)v37;

      v12 = v162 + 2;
      if (v162 + 2 < v4)
      {
        v38 = (void **)(v159 + 8 * v162);
        while (1)
        {
          v40 = (char *)*(v38 - 1);
          v39 = *v38;
          v41 = (void **)((char *)*v38 + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v42 = (char *)*v41;
          v43 = (void **)&v40[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v44 = *v43;
          v45 = (CGFloat *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v46 = *v45;
          v47 = v45[1];
          v48 = v45[2];
          v49 = v45[3];
          v50 = v39;
          v51 = v40;
          v52 = v42;
          v53 = v44;
          v173.origin.x = v46;
          v173.origin.y = v47;
          v173.size.width = v48;
          v173.size.height = v49;
          v54 = CGRectGetMinY(v173);
          if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
            goto LABEL_208;
          if (v54 <= -9.22337204e18)
            goto LABEL_209;
          if (v54 >= 9.22337204e18)
            goto LABEL_210;
          v55 = (CGRect *)&v53[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v56 = CGRectGetMinY(*v55);
          if ((~*(_QWORD *)&v56 & 0x7FF0000000000000) == 0)
            goto LABEL_211;
          if (v56 <= -9.22337204e18)
            goto LABEL_212;
          if (v56 >= 9.22337204e18)
            goto LABEL_213;
          v57 = (uint64_t)v54 - (uint64_t)v56;
          if (__OFSUB__((uint64_t)v54, (uint64_t)v56))
            goto LABEL_214;
          if (v57 < 0)
          {
            v86 = __OFSUB__(0, v57);
            v57 = (uint64_t)v56 - (uint64_t)v54;
            if (v86)
              goto LABEL_238;
          }
          v58 = *v45;
          v59 = *((_QWORD *)v45 + 1);
          v60 = *((_QWORD *)v45 + 2);
          v61 = *((_QWORD *)v45 + 3);
          if (v57 > 19)
          {
            v62 = CGRectGetMinX(*(CGRect *)&v58);
            if ((~*(_QWORD *)&v62 & 0x7FF0000000000000) == 0)
              goto LABEL_225;
            if (v62 <= -9.22337204e18)
              goto LABEL_227;
            if (v62 >= 9.22337204e18)
              goto LABEL_230;
            v63 = CGRectGetMinX(*v55);

            if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
              goto LABEL_232;
            if (v63 <= -9.22337204e18)
              goto LABEL_234;
            if (v63 >= 9.22337204e18)
              goto LABEL_235;
          }
          else
          {
            v62 = CGRectGetMinY(*(CGRect *)&v58);
            if ((~*(_QWORD *)&v62 & 0x7FF0000000000000) == 0)
              goto LABEL_226;
            if (v62 <= -9.22337204e18)
              goto LABEL_228;
            if (v62 >= 9.22337204e18)
              goto LABEL_229;
            v63 = CGRectGetMinY(*v55);

            if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
              goto LABEL_231;
            if (v63 <= -9.22337204e18)
              goto LABEL_233;
            if (v63 >= 9.22337204e18)
              goto LABEL_236;
          }

          v9 = v166;
          if (v163 >= v168 != (uint64_t)v63 >= (uint64_t)v62)
            break;
          ++v12;
          ++v38;
          v4 = v165;
          if (v165 == v12)
          {
            v12 = v165;
            goto LABEL_66;
          }
        }
        v4 = v165;
LABEL_66:
        v10 = v162;
      }
      v11 = v170;
      if (v163 >= v168)
      {
        if (v12 < v10)
          goto LABEL_267;
        if (v10 < v12)
        {
          v64 = (uint64_t *)(v158 + 8 * v12);
          v65 = v12;
          v66 = v10;
          v67 = (uint64_t *)(v170 + 8 * v10);
          do
          {
            if (v66 != --v65)
            {
              if (!v170)
                goto LABEL_271;
              v68 = *v67;
              *v67 = *v64;
              *v64 = v68;
            }
            ++v66;
            --v64;
            ++v67;
          }
          while (v66 < v65);
        }
      }
    }
    if (v12 >= v4)
      goto LABEL_84;
    if (__OFSUB__(v12, v10))
      goto LABEL_252;
    if (v12 - v10 >= v161)
      goto LABEL_84;
    if (__OFADD__(v10, v161))
      goto LABEL_265;
    if (v10 + v161 >= v4)
      v69 = v4;
    else
      v69 = v10 + v161;
    if (v69 < v10)
      goto LABEL_266;
    if (v12 == v69)
    {
LABEL_84:
      if (v12 < v10)
        goto LABEL_243;
      goto LABEL_85;
    }
    v120 = v158 + 8 * v12;
    v160 = v69;
LABEL_137:
    v122 = *(char **)(v11 + 8 * v12);
    v164 = v120;
    v169 = v12;
    while (1)
    {
      v123 = *(char **)v120;
      v124 = (void **)&v122[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v125 = (char *)*v124;
      v126 = (void **)&v123[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v127 = *v126;
      v128 = (CGFloat *)&v125[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v129 = *v128;
      v130 = v128[1];
      v131 = v128[2];
      v132 = v128[3];
      v133 = v122;
      v134 = v123;
      v135 = v125;
      v136 = v127;
      v174.origin.x = v129;
      v174.origin.y = v130;
      v174.size.width = v131;
      v174.size.height = v132;
      v137 = CGRectGetMinY(v174);
      if ((~*(_QWORD *)&v137 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
LABEL_223:
        __break(1u);
LABEL_224:
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
LABEL_229:
        __break(1u);
LABEL_230:
        __break(1u);
LABEL_231:
        __break(1u);
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
        goto LABEL_239;
      }
      if (v137 <= -9.22337204e18)
        goto LABEL_185;
      if (v137 >= 9.22337204e18)
        goto LABEL_186;
      v138 = (CGRect *)&v136[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v139 = CGRectGetMinY(*v138);
      if ((~*(_QWORD *)&v139 & 0x7FF0000000000000) == 0)
        goto LABEL_187;
      if (v139 <= -9.22337204e18)
        goto LABEL_188;
      if (v139 >= 9.22337204e18)
        goto LABEL_189;
      v140 = (uint64_t)v137 - (uint64_t)v139;
      if (__OFSUB__((uint64_t)v137, (uint64_t)v139))
        goto LABEL_190;
      if (v140 < 0)
      {
        v86 = __OFSUB__(0, v140);
        v140 = (uint64_t)v139 - (uint64_t)v137;
        if (v86)
          goto LABEL_207;
      }
      v141 = *v128;
      v142 = *((_QWORD *)v128 + 1);
      v143 = *((_QWORD *)v128 + 2);
      v144 = *((_QWORD *)v128 + 3);
      if (v140 > 19)
      {
        v147 = CGRectGetMinX(*(CGRect *)&v141);
        if ((~*(_QWORD *)&v147 & 0x7FF0000000000000) == 0)
          goto LABEL_192;
        if (v147 <= -9.22337204e18)
          goto LABEL_194;
        if (v147 >= 9.22337204e18)
          goto LABEL_196;
        v148 = CGRectGetMinX(*v138);

        if ((~*(_QWORD *)&v148 & 0x7FF0000000000000) == 0)
          goto LABEL_198;
        if (v148 <= -9.22337204e18)
          goto LABEL_200;
        if (v148 >= 9.22337204e18)
          goto LABEL_202;

        if ((uint64_t)v148 < (uint64_t)v147)
        {
LABEL_135:
          v121 = v169;
          v11 = v170;
LABEL_136:
          v12 = v121 + 1;
          v10 = v162;
          v120 = v164 + 8;
          if (v12 != v160)
            goto LABEL_137;
          v12 = v160;
          v9 = v166;
          if (v160 < v162)
            goto LABEL_243;
LABEL_85:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_24971DB80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v71 = *((_QWORD *)v9 + 2);
          v70 = *((_QWORD *)v9 + 3);
          v72 = v71 + 1;
          v11 = v170;
          if (v71 >= v70 >> 1)
          {
            v150 = sub_24971DB80((char *)(v70 > 1), v71 + 1, 1, v9);
            v11 = v170;
            v9 = v150;
          }
          *((_QWORD *)v9 + 2) = v72;
          v73 = v9 + 32;
          v74 = &v9[16 * v71 + 32];
          *(_QWORD *)v74 = v162;
          *((_QWORD *)v74 + 1) = v12;
          if (v71)
          {
            while (2)
            {
              v75 = v72 - 1;
              if (v72 >= 4)
              {
                v80 = &v73[16 * v72];
                v81 = *((_QWORD *)v80 - 8);
                v82 = *((_QWORD *)v80 - 7);
                v86 = __OFSUB__(v82, v81);
                v83 = v82 - v81;
                if (v86)
                  goto LABEL_215;
                v85 = *((_QWORD *)v80 - 6);
                v84 = *((_QWORD *)v80 - 5);
                v86 = __OFSUB__(v84, v85);
                v78 = v84 - v85;
                v79 = v86;
                if (v86)
                  goto LABEL_216;
                v87 = v72 - 2;
                v88 = &v73[16 * v72 - 32];
                v90 = *(_QWORD *)v88;
                v89 = *((_QWORD *)v88 + 1);
                v86 = __OFSUB__(v89, v90);
                v91 = v89 - v90;
                if (v86)
                  goto LABEL_218;
                v86 = __OFADD__(v78, v91);
                v92 = v78 + v91;
                if (v86)
                  goto LABEL_221;
                if (v92 >= v83)
                {
                  v110 = &v73[16 * v75];
                  v112 = *(_QWORD *)v110;
                  v111 = *((_QWORD *)v110 + 1);
                  v86 = __OFSUB__(v111, v112);
                  v113 = v111 - v112;
                  if (v86)
                    goto LABEL_237;
                  v103 = v78 < v113;
                }
                else
                {
LABEL_103:
                  if ((v79 & 1) != 0)
                    goto LABEL_217;
                  v87 = v72 - 2;
                  v93 = &v73[16 * v72 - 32];
                  v95 = *(_QWORD *)v93;
                  v94 = *((_QWORD *)v93 + 1);
                  v96 = __OFSUB__(v94, v95);
                  v97 = v94 - v95;
                  v98 = v96;
                  if (v96)
                    goto LABEL_220;
                  v99 = &v73[16 * v75];
                  v101 = *(_QWORD *)v99;
                  v100 = *((_QWORD *)v99 + 1);
                  v86 = __OFSUB__(v100, v101);
                  v102 = v100 - v101;
                  if (v86)
                    goto LABEL_223;
                  if (__OFADD__(v97, v102))
                    goto LABEL_224;
                  if (v97 + v102 < v78)
                    goto LABEL_115;
                  v103 = v78 < v102;
                }
                if (v103)
                  v75 = v87;
              }
              else
              {
                if (v72 == 3)
                {
                  v77 = *((_QWORD *)v9 + 4);
                  v76 = *((_QWORD *)v9 + 5);
                  v86 = __OFSUB__(v76, v77);
                  v78 = v76 - v77;
                  v79 = v86;
                  goto LABEL_103;
                }
                v104 = *((_QWORD *)v9 + 4);
                v105 = *((_QWORD *)v9 + 5);
                v86 = __OFSUB__(v105, v104);
                v97 = v105 - v104;
                v98 = v86;
LABEL_115:
                if ((v98 & 1) != 0)
                  goto LABEL_219;
                v106 = &v73[16 * v75];
                v108 = *(_QWORD *)v106;
                v107 = *((_QWORD *)v106 + 1);
                v86 = __OFSUB__(v107, v108);
                v109 = v107 - v108;
                if (v86)
                  goto LABEL_222;
                if (v109 < v97)
                  goto LABEL_132;
              }
              v114 = v75 - 1;
              if (v75 - 1 >= v72)
                goto LABEL_203;
              if (!v11)
                goto LABEL_270;
              v115 = &v73[16 * v114];
              v116 = *(_QWORD *)v115;
              v117 = &v73[16 * v75];
              v118 = *((_QWORD *)v117 + 1);
              sub_2496E6B4C((void **)(v11 + 8 * *(_QWORD *)v115), (void **)(v11 + 8 * *(_QWORD *)v117), v11 + 8 * v118, __dst);
              if (v1)
                goto LABEL_182;
              if (v118 < v116)
                goto LABEL_204;
              if (v75 > *((_QWORD *)v9 + 2))
                goto LABEL_205;
              *(_QWORD *)v115 = v116;
              *(_QWORD *)&v73[16 * v114 + 8] = v118;
              v119 = *((_QWORD *)v9 + 2);
              if (v75 >= v119)
                goto LABEL_206;
              v72 = v119 - 1;
              memmove(&v73[16 * v75], v117 + 16, 16 * (v119 - 1 - v75));
              *((_QWORD *)v9 + 2) = v119 - 1;
              v11 = v170;
              if (v119 <= 2)
                goto LABEL_132;
              continue;
            }
          }
          v72 = 1;
LABEL_132:
          v4 = v165;
          v10 = v12;
          if (v12 >= v165)
          {
            v2 = v1;
            if (v72 < 2)
            {
LABEL_182:
              swift_bridgeObjectRelease();
              *(_QWORD *)((v171 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_24972CCE4();
              swift_bridgeObjectRelease();
              return;
            }
LABEL_170:
            v151 = *v157;
            while (1)
            {
              v152 = v72 - 2;
              if (v72 < 2)
                break;
              if (!v151)
                goto LABEL_272;
              v153 = *(_QWORD *)&v9[16 * v152 + 32];
              v154 = *(_QWORD *)&v9[16 * v72 + 24];
              sub_2496E6B4C((void **)(v151 + 8 * v153), (void **)(v151 + 8 * *(_QWORD *)&v9[16 * v72 + 16]), v151 + 8 * v154, __dst);
              if (v2)
                goto LABEL_182;
              if (v154 < v153)
                goto LABEL_240;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24971DDC8((uint64_t)v9);
              if (v152 >= *((_QWORD *)v9 + 2))
                goto LABEL_241;
              v155 = &v9[16 * v152 + 32];
              *(_QWORD *)v155 = v153;
              *((_QWORD *)v155 + 1) = v154;
              v156 = *((_QWORD *)v9 + 2);
              if (v72 > v156)
                goto LABEL_242;
              memmove(&v9[16 * v72 + 16], &v9[16 * v72 + 32], 16 * (v156 - v72));
              *((_QWORD *)v9 + 2) = v156 - 1;
              v72 = v156 - 1;
              if (v156 <= 2)
                goto LABEL_182;
            }
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
            goto LABEL_246;
          }
          goto LABEL_13;
        }
      }
      else
      {
        v145 = CGRectGetMinY(*(CGRect *)&v141);
        if ((~*(_QWORD *)&v145 & 0x7FF0000000000000) == 0)
          goto LABEL_191;
        if (v145 <= -9.22337204e18)
          goto LABEL_193;
        if (v145 >= 9.22337204e18)
          goto LABEL_195;
        v146 = CGRectGetMinY(*v138);

        if ((~*(_QWORD *)&v146 & 0x7FF0000000000000) == 0)
          goto LABEL_197;
        if (v146 <= -9.22337204e18)
          goto LABEL_199;
        if (v146 >= 9.22337204e18)
          goto LABEL_201;

        if ((uint64_t)v146 < (uint64_t)v145)
          goto LABEL_135;
      }
      v121 = v169;
      v11 = v170;
      if (!v170)
        goto LABEL_269;
      v149 = *(char **)v120;
      v122 = *(char **)(v120 + 8);
      *(_QWORD *)v120 = v122;
      *(_QWORD *)(v120 + 8) = v149;
      v120 -= 8;
      if (v169 == ++v10)
        goto LABEL_136;
    }
  }
  if (v4 < 0)
    goto LABEL_244;
  if (v4)
    sub_2496E677C(0, v4, 1, a1);
}

void sub_2496E677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void **v9;
  char *v10;
  void **v11;
  void *v12;
  CGFloat *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double MinY;
  CGRect *v23;
  double v24;
  uint64_t v25;
  BOOL v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double MinX;
  double v34;
  char *v35;
  uint64_t v38;
  uint64_t v39;
  CGRect v40;

  if (a3 != a2)
  {
    v4 = a3;
    v39 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(char **)(v39 + 8 * v4);
    v7 = a1;
    v38 = v5;
    while (1)
    {
      v8 = *(char **)v5;
      v9 = (void **)&v6[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v10 = (char *)*v9;
      v11 = (void **)&v8[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v12 = *v11;
      v13 = (CGFloat *)&v10[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v18 = v6;
      v19 = v8;
      v20 = v10;
      v21 = v12;
      v40.origin.x = v14;
      v40.origin.y = v15;
      v40.size.width = v16;
      v40.size.height = v17;
      MinY = CGRectGetMinY(v40);
      if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        break;
      if (MinY <= -9.22337204e18)
        goto LABEL_35;
      if (MinY >= 9.22337204e18)
        goto LABEL_36;
      v23 = (CGRect *)&v21[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v24 = CGRectGetMinY(*v23);
      if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
        goto LABEL_37;
      if (v24 <= -9.22337204e18)
        goto LABEL_38;
      if (v24 >= 9.22337204e18)
        goto LABEL_39;
      v25 = (uint64_t)MinY - (uint64_t)v24;
      if (__OFSUB__((uint64_t)MinY, (uint64_t)v24))
        goto LABEL_40;
      if (v25 < 0)
      {
        v26 = __OFSUB__(0, v25);
        v25 = (uint64_t)v24 - (uint64_t)MinY;
        if (v26)
          goto LABEL_53;
      }
      v27 = *v13;
      v28 = *((_QWORD *)v13 + 1);
      v29 = *((_QWORD *)v13 + 2);
      v30 = *((_QWORD *)v13 + 3);
      if (v25 > 19)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v27);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_42;
        if (MinX <= -9.22337204e18)
          goto LABEL_44;
        if (MinX >= 9.22337204e18)
          goto LABEL_46;
        v34 = CGRectGetMinX(*v23);

        if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
          goto LABEL_48;
        if (v34 <= -9.22337204e18)
          goto LABEL_50;
        if (v34 >= 9.22337204e18)
          goto LABEL_52;

        if ((uint64_t)v34 < (uint64_t)MinX)
          goto LABEL_4;
      }
      else
      {
        v31 = CGRectGetMinY(*(CGRect *)&v27);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          goto LABEL_41;
        if (v31 <= -9.22337204e18)
          goto LABEL_43;
        if (v31 >= 9.22337204e18)
          goto LABEL_45;
        v32 = CGRectGetMinY(*v23);

        if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
          goto LABEL_47;
        if (v32 <= -9.22337204e18)
          goto LABEL_49;
        if (v32 >= 9.22337204e18)
          goto LABEL_51;

        if ((uint64_t)v32 < (uint64_t)v31)
        {
LABEL_4:
          ++v4;
          v5 = v38 + 8;
          if (v4 == a2)
            return;
          goto LABEL_5;
        }
      }
      if (!v39)
        goto LABEL_54;
      v35 = *(char **)v5;
      v6 = *(char **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v35;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
  }
}

uint64_t sub_2496E6B4C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  unint64_t v5;
  void **v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void **v16;
  char *v17;
  void **v18;
  char *v19;
  void **v20;
  void *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  double v31;
  CGRect *v32;
  double v33;
  uint64_t v34;
  BOOL v35;
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  void **v42;
  void **v43;
  unint64_t v44;
  double v45;
  double v46;
  void **v47;
  BOOL v48;
  void **v49;
  void **v50;
  char *v51;
  char *v52;
  char *v53;
  void **v54;
  char *v55;
  void **v56;
  void *v57;
  CGFloat *v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  double MinY;
  CGRect *v68;
  double v69;
  uint64_t v70;
  CGFloat v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double MinX;
  double v76;
  void **v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t result;
  void **v81;
  unint64_t v82;
  void **v83;
  void **v84;
  void **v85;
  void **v86;
  void **v87;
  void **v88;
  void **v89;
  void **v90;
  CGRect v91;
  CGRect v92;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v90 = __src;
  v89 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v49 = &v4[v13];
      v88 = v49;
      v90 = v6;
      if (v7 >= v6 || v11 < 8)
      {
LABEL_88:
        sub_24971DC78(&v90, &v89, &v88);
        return 1;
      }
      v50 = v6;
      v87 = v7;
      v81 = v4;
      while (1)
      {
        v83 = v49;
        v85 = v6;
        v52 = (char *)*--v49;
        v51 = v52;
        v53 = (char *)*--v50;
        v54 = (void **)&v51[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v55 = (char *)*v54;
        v56 = (void **)&v53[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v57 = *v56;
        v58 = (CGFloat *)&v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v59 = *v58;
        v60 = v58[1];
        v61 = v58[2];
        v62 = v58[3];
        v63 = v51;
        v64 = v53;
        v65 = v55;
        v66 = v57;
        v92.origin.x = v59;
        v92.origin.y = v60;
        v92.size.width = v61;
        v92.size.height = v62;
        MinY = CGRectGetMinY(v92);
        if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
          break;
        if (MinY <= -9.22337204e18)
          goto LABEL_90;
        if (MinY >= 9.22337204e18)
          goto LABEL_91;
        v68 = (CGRect *)&v66[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v69 = CGRectGetMinY(*v68);
        if ((~*(_QWORD *)&v69 & 0x7FF0000000000000) == 0)
          goto LABEL_92;
        if (v69 <= -9.22337204e18)
          goto LABEL_93;
        if (v69 >= 9.22337204e18)
          goto LABEL_94;
        v70 = (uint64_t)MinY - (uint64_t)v69;
        if (__OFSUB__((uint64_t)MinY, (uint64_t)v69))
          goto LABEL_95;
        if (v70 < 0)
        {
          v35 = __OFSUB__(0, v70);
          v70 = (uint64_t)v69 - (uint64_t)MinY;
          if (v35)
            goto LABEL_115;
        }
        v71 = *v58;
        v72 = *((_QWORD *)v58 + 1);
        v73 = *((_QWORD *)v58 + 2);
        v74 = *((_QWORD *)v58 + 3);
        if (v70 > 19)
        {
          MinX = CGRectGetMinX(*(CGRect *)&v71);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_104;
          if (MinX <= -9.22337204e18)
            goto LABEL_106;
          if (MinX >= 9.22337204e18)
            goto LABEL_108;
          v76 = CGRectGetMinX(*v68);

          if ((~*(_QWORD *)&v76 & 0x7FF0000000000000) == 0)
            goto LABEL_110;
          if (v76 <= -9.22337204e18)
            goto LABEL_112;
          if (v76 >= 9.22337204e18)
            goto LABEL_114;
        }
        else
        {
          MinX = CGRectGetMinY(*(CGRect *)&v71);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_103;
          if (MinX <= -9.22337204e18)
            goto LABEL_105;
          if (MinX >= 9.22337204e18)
            goto LABEL_107;
          v76 = CGRectGetMinY(*v68);

          if ((~*(_QWORD *)&v76 & 0x7FF0000000000000) == 0)
            goto LABEL_109;
          if (v76 <= -9.22337204e18)
            goto LABEL_111;
          if (v76 >= 9.22337204e18)
            goto LABEL_113;
        }

        v77 = (void **)(v5 - 8);
        if ((uint64_t)v76 >= (uint64_t)MinX)
        {
          v79 = (unint64_t)v87;
          v78 = (unint64_t)v81;
          if ((void **)v5 != v85 || v77 >= v85)
            *v77 = *v50;
          v90 = v50;
          v49 = v83;
        }
        else
        {
          v88 = v49;
          v78 = (unint64_t)v81;
          v50 = v85;
          v79 = (unint64_t)v87;
          if (v5 < (unint64_t)v83 || v77 >= v83 || (void **)v5 != v83)
            *v77 = *v49;
        }
        if ((unint64_t)v50 > v79)
        {
          v6 = v50;
          v5 -= 8;
          if ((unint64_t)v49 > v78)
            continue;
        }
        goto LABEL_88;
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v84 = &v4[v10];
    v88 = v84;
    if ((unint64_t)v6 < v5 && v8 >= 8)
    {
      v82 = v5;
      while (1)
      {
        v86 = v7;
        v14 = v6;
        v15 = *v6;
        v16 = v4;
        v17 = (char *)*v4;
        v18 = (void **)((char *)*v6 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v19 = (char *)*v18;
        v20 = (void **)&v17[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v21 = *v20;
        v22 = (CGFloat *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        v27 = v15;
        v28 = v17;
        v29 = v19;
        v30 = v21;
        v91.origin.x = v23;
        v91.origin.y = v24;
        v91.size.width = v25;
        v91.size.height = v26;
        v31 = CGRectGetMinY(v91);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          goto LABEL_96;
        if (v31 <= -9.22337204e18)
          goto LABEL_97;
        if (v31 >= 9.22337204e18)
          goto LABEL_98;
        v32 = (CGRect *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v33 = CGRectGetMinY(*v32);
        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_99;
        if (v33 <= -9.22337204e18)
          goto LABEL_100;
        if (v33 >= 9.22337204e18)
          goto LABEL_101;
        v34 = (uint64_t)v31 - (uint64_t)v33;
        if (__OFSUB__((uint64_t)v31, (uint64_t)v33))
          goto LABEL_102;
        if (v34 < 0)
        {
          v35 = __OFSUB__(0, v34);
          v34 = (uint64_t)v33 - (uint64_t)v31;
          if (v35)
            goto LABEL_128;
        }
        v36 = *v22;
        v37 = *((_QWORD *)v22 + 1);
        v38 = *((_QWORD *)v22 + 2);
        v39 = *((_QWORD *)v22 + 3);
        if (v34 > 19)
        {
          v45 = CGRectGetMinX(*(CGRect *)&v36);
          if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
            goto LABEL_117;
          if (v45 <= -9.22337204e18)
            goto LABEL_119;
          if (v45 >= 9.22337204e18)
            goto LABEL_120;
          v46 = CGRectGetMinX(*v32);

          if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
            goto LABEL_123;
          if (v46 <= -9.22337204e18)
            goto LABEL_125;
          if (v46 >= 9.22337204e18)
            goto LABEL_127;

          if ((uint64_t)v46 < (uint64_t)v45)
          {
LABEL_41:
            v47 = v16;
            v43 = v86;
            v48 = v86 == v16;
            v44 = v82;
            if (!v48)
              *v86 = *v47;
            v4 = v47 + 1;
            v89 = v4;
            v42 = v14;
            goto LABEL_44;
          }
        }
        else
        {
          v40 = CGRectGetMinY(*(CGRect *)&v36);
          if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
            goto LABEL_116;
          if (v40 <= -9.22337204e18)
            goto LABEL_118;
          if (v40 >= 9.22337204e18)
            goto LABEL_121;
          v41 = CGRectGetMinY(*v32);

          if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) == 0)
            goto LABEL_122;
          if (v41 <= -9.22337204e18)
            goto LABEL_124;
          if (v41 >= 9.22337204e18)
            goto LABEL_126;

          if ((uint64_t)v41 < (uint64_t)v40)
            goto LABEL_41;
        }
        v42 = v14 + 1;
        v43 = v86;
        v4 = v16;
        v44 = v82;
        if (v86 < v14 || v86 >= v42 || v86 != v14)
          *v86 = *v14;
LABEL_44:
        v7 = v43 + 1;
        if (v4 < v84)
        {
          v6 = v42;
          if ((unint64_t)v42 < v44)
            continue;
        }
        v90 = v7;
        goto LABEL_88;
      }
    }
    goto LABEL_88;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

BOOL sub_2496E73D8(uint64_t a1, uint64_t a2, char a3)
{
  void **v5;
  char *v6;
  void **v7;
  void *v8;
  double *v9;
  double v10;
  double v11;
  CGRect *v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char *v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  CGRect *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v43;
  double v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v5 = (void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
               + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v6 = (char *)*v5;
  v7 = (void **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
               + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v8 = *v7;
  v9 = (double *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  swift_beginAccess();
  v11 = *v9;
  v10 = v9[1];
  v12 = (CGRect *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  x = v12->origin.x;
  y = v12->origin.y;
  width = v12->size.width;
  height = v12->size.height;
  v17 = v6;
  v18 = v8;
  v45.origin.x = x;
  v45.origin.y = y;
  v45.size.width = width;
  v45.size.height = height;
  v19 = CGRectGetMinX(v45) / v11;
  v20 = CGRectGetMinY(*v12) / v10;
  v21 = CGRectGetWidth(*v12) / v11;
  v22 = CGRectGetHeight(*v12);
  v23 = (double *)&v18[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  v24 = v22 / v10;
  swift_beginAccess();
  v26 = *v23;
  v25 = v23[1];
  v27 = (CGRect *)&v18[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v44 = CGRectGetMinX(*v27) / v26;
  v28 = CGRectGetMinY(*v27) / v25;
  v29 = CGRectGetWidth(*v27) / v26;
  v30 = CGRectGetHeight(*v27);
  v31 = 1.2;
  if ((a3 & 1) == 0)
    v31 = 1.5;
  v43 = v31;
  v32 = v30 / v25;
  v46.origin.x = v19;
  v46.origin.y = v20;
  v46.size.width = v21;
  v46.size.height = v24;
  v33 = CGRectGetHeight(v46);
  v47.origin.x = v19;
  v47.origin.y = v20;
  v47.size.width = v21;
  v47.size.height = v24;
  v34 = CGRectGetWidth(v47);
  v48.origin.x = v44;
  v48.origin.y = v28;
  v48.size.width = v29;
  v48.size.height = v32;
  v35 = CGRectGetHeight(v48);
  v49.origin.x = v44;
  v49.origin.y = v28;
  v49.size.width = v29;
  v49.size.height = v32;
  v36 = CGRectGetWidth(v49);

  v37 = v35 / v36;
  if (v33 / v34 > v35 / v36)
    v38 = v33 / v34;
  else
    v38 = v35 / v36;
  if (v37 >= v33 / v34)
    v37 = v33 / v34;
  if (v43 < v38 / v37)
    return 0;
  v39 = 3.0;
  if ((a3 & 1) != 0)
    v39 = 2.0;
  v40 = v33 * v34;
  v41 = v33 * v34 > v35 * v36 ? v33 * v34 : v35 * v36;
  if (v35 * v36 < v40)
    v40 = v35 * v36;
  return v39 >= v41 / v40;
}

uint64_t sub_2496E76CC(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t i;
  char *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id *v17;
  id v18;
  id v19;
  id v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  id v30;
  double MaxY;
  CGRect *v32;
  double v33;
  double v34;
  double MinY;
  double v36;
  double v37;
  CGRect *v38;
  double MinX;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char *v45;
  CGRect *v46;
  double v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  CGRect *v52;
  double v53;
  char *v54;
  CGRect *v55;
  double v56;
  char *v57;
  CGRect *v58;
  double v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  CGRect *v64;
  double v65;
  char *v66;
  CGRect *v67;
  double v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  void *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  CGRect v82;

  v1 = *(char **)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection);
  v81 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detectionsInScreen);
  v80 = MEMORY[0x24BEE4AF8];
  if (v2 >> 62)
  {
    v11 = v1;
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v4 = v1;
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
LABEL_118:
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v5 = v1;
      for (i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0)
          v7 = (char *)MEMORY[0x24BCF6CE8](i, v2);
        else
          v7 = (char *)*(id *)(v2 + 8 * i + 32);
        v8 = v7;
        v9 = &v7[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v9 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          sub_24972D020();
          sub_24972D044();
          sub_24972D050();
          sub_24972D02C();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v10 = v80;
      v1 = v5;
      if (v80 < 0)
        goto LABEL_111;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_111;
LABEL_16:
  if ((v10 & 0x4000000000000000) != 0)
    goto LABEL_111;
  v12 = *(_QWORD *)(v10 + 16);
  v74 = v1;
  if (!v12)
    goto LABEL_112;
  do
  {
    if (v12 < 1)
      goto LABEL_118;
    v13 = (id *)&v1[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v76 = 0;
    v77 = 0;
    v75 = 0;
    v14 = 0;
    v78 = v12;
    while (1)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v15 = (char *)MEMORY[0x24BCF6CE8](v14, v10);
      else
        v15 = (char *)*(id *)(v10 + 8 * v14 + 32);
      v16 = v15;
      v17 = (id *)&v15[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v18 = *v13;
      v19 = *v17;
      v20 = v18;
      v21 = sub_24970E640((uint64_t)v20, 0.7);

      if (v21)
      {
        v16 = v16;
        MEMORY[0x24BCF69D0]();
        v22 = v78;
        if (*(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_24972CCF0();
        sub_24972CD08();
        sub_24972CCE4();
        goto LABEL_80;
      }
      v23 = *v13;
      v24 = *v17;
      v25 = (uint64_t)*v13 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v26 = *(double *)v25;
      v27 = *(double *)(v25 + 8);
      v28 = *(double *)(v25 + 16);
      v29 = *(double *)(v25 + 24);
      v30 = v23;
      v1 = (char *)v24;
      v82.origin.x = v26;
      v82.origin.y = v27;
      v82.size.width = v28;
      v82.size.height = v29;
      MaxY = CGRectGetMaxY(v82);
      v32 = (CGRect *)&v1[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v33 = CGRectGetMaxY(*v32);
      if (v33 >= MaxY)
        v34 = MaxY;
      else
        v34 = v33;
      MinY = CGRectGetMinY(*(CGRect *)v25);
      v36 = CGRectGetMinY(*v32);

      if (MinY > v36)
        v37 = MinY;
      else
        v37 = v36;
      if (v34 - v37 > 0.0)
      {
        v38 = (CGRect *)((char *)*v13 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        MinX = CGRectGetMinX(*v38);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_92;
        if (MinX <= -9.22337204e18)
          goto LABEL_93;
        if (MinX >= 9.22337204e18)
          goto LABEL_94;
        v1 = (char *)(uint64_t)MinX;
        v40 = *v17;
        sub_24970E178();
        v42 = v41;

        v43 = (uint64_t)&v1[-v42];
        if (__OFSUB__(v1, v42))
          goto LABEL_95;
        if (v43 < 0)
        {
          v44 = __OFSUB__(0, v43);
          v43 = v42 - (_QWORD)v1;
          if (v44)
            goto LABEL_110;
        }
        if (v43 <= 19)
        {
          v45 = v16;

          v75 = v16;
        }
      }
      v46 = (CGRect *)((char *)*v13 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v47 = CGRectGetMinY(*v46);
      if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
        break;
      if (v47 <= -9.22337204e18)
        goto LABEL_85;
      if (v47 >= 9.22337204e18)
        goto LABEL_86;
      v1 = (char *)(uint64_t)v47;
      v48 = *v17;
      sub_24970E18C();
      v50 = v49;

      v51 = (uint64_t)&v1[-v50];
      if (__OFSUB__(v1, v50))
        goto LABEL_87;
      if (v51 < 0)
      {
        v44 = __OFSUB__(0, v51);
        v51 = v50 - (_QWORD)v1;
        if (v44)
          goto LABEL_96;
      }
      if (v51 <= 19)
      {
        if (!v76)
          goto LABEL_58;
        v52 = (CGRect *)((char *)*v17 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v53 = CGRectGetMinX(*v52);
        if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) == 0)
          goto LABEL_98;
        if (v53 <= -9.22337204e18)
          goto LABEL_99;
        if (v53 >= 9.22337204e18)
          goto LABEL_100;
        v54 = &v76[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v55 = (CGRect *)(*(_QWORD *)v54 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v56 = CGRectGetMinX(*v55);
        if ((~*(_QWORD *)&v56 & 0x7FF0000000000000) == 0)
          goto LABEL_101;
        if (v56 <= -9.22337204e18)
          goto LABEL_102;
        if (v56 >= 9.22337204e18)
          goto LABEL_103;
        if ((uint64_t)v53 < (uint64_t)v56)
        {

LABEL_58:
          v57 = v16;
          v76 = v16;
        }
      }
      v58 = (CGRect *)((char *)*v17 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v59 = CGRectGetMinY(*v58);
      if ((~*(_QWORD *)&v59 & 0x7FF0000000000000) == 0)
        goto LABEL_88;
      if (v59 <= -9.22337204e18)
        goto LABEL_89;
      if (v59 >= 9.22337204e18)
        goto LABEL_90;
      v1 = (char *)(uint64_t)v59;
      v60 = *v13;
      sub_24970E18C();
      v62 = v61;

      v63 = (uint64_t)&v1[-v62];
      if (__OFSUB__(v1, v62))
        goto LABEL_91;
      if (v63 < 0)
      {
        v44 = __OFSUB__(0, v63);
        v63 = v62 - (_QWORD)v1;
        if (v44)
          goto LABEL_97;
      }
      if (v63 > 19)
      {
        v22 = v78;
      }
      else
      {
        if (!v77)
        {
          v77 = v16;
          v22 = v78;
          goto LABEL_81;
        }
        v64 = (CGRect *)((char *)*v17 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v65 = CGRectGetMinX(*v64);
        if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) == 0)
          goto LABEL_104;
        if (v65 <= -9.22337204e18)
          goto LABEL_105;
        if (v65 >= 9.22337204e18)
          goto LABEL_106;
        v66 = &v77[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v67 = (CGRect *)(*(_QWORD *)v66 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v68 = CGRectGetMinX(*v67);
        if ((~*(_QWORD *)&v68 & 0x7FF0000000000000) == 0)
          goto LABEL_107;
        if (v68 <= -9.22337204e18)
          goto LABEL_108;
        if (v68 >= 9.22337204e18)
          goto LABEL_109;
        v69 = v77;
        v22 = v78;
        if ((uint64_t)v65 >= (uint64_t)v68)
          v70 = v16;
        else
          v70 = v77;
        if ((uint64_t)v65 < (uint64_t)v68)
          v69 = v16;
        v77 = v69;
        v16 = v70;
      }
LABEL_80:

LABEL_81:
      if (v22 == ++v14)
        goto LABEL_112;
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    swift_bridgeObjectRetain();
    v12 = sub_24972D0BC();
    swift_release();
    v74 = v1;
  }
  while (v12);
LABEL_112:
  swift_release();
  if ((v81 & 0x8000000000000000) != 0 || (v81 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v71 = (uint64_t)sub_2496F1168(v81);
    swift_bridgeObjectRelease();
  }
  else
  {
    v71 = v81 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v79 = v71;
  sub_2496E5780(&v79);
  swift_bridgeObjectRelease();

  v72 = v79;
  swift_bridgeObjectRelease();
  return v72;
}

void sub_2496E7FC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  CGRect *v5;
  double Width;
  _QWORD *v7;
  CGRect *v8;
  double Height;

  v2 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  v3 = (_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  if (*(_QWORD *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 6)
  {
    CGImageGetWidth(*(CGImageRef *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_screenshot));
    v4 = (_QWORD *)(*(_QWORD *)(a1 + v2) + OBJC_IVAR___UIObjectCompat_boundingBox);
    swift_beginAccess();
    v5 = (CGRect *)(*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    Width = CGRectGetWidth(*v5);
    if ((~*(_QWORD *)&Width & 0x7FF0000000000000) != 0)
    {
      if (Width > -9.22337204e18)
      {
        if (Width < 9.22337204e18)
        {
          v7 = (_QWORD *)(*(_QWORD *)(a1 + v2) + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v8 = (CGRect *)(*v7 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          Height = CGRectGetHeight(*v8);
          if ((~*(_QWORD *)&Height & 0x7FF0000000000000) != 0)
          {
            if (Height > -9.22337204e18)
            {
              if (Height < 9.22337204e18)
                return;
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

id sub_2496E81CC(char *a1, unint64_t a2)
{
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void **v10;
  void *v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  id v23;
  char *v24;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v29;
  double v30;
  float v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  double v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  void *v43;
  char *v44;
  uint64_t v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat *v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  id v55;
  char *v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double v61;
  double v62;
  float v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  _QWORD *v70;
  char *v72;
  CGFloat r2;
  CGFloat r2a;
  CGFloat r2_8;
  CGFloat r2_8a;
  CGFloat r2_16;
  CGFloat r2_16a;
  CGFloat r2_24;
  CGFloat r2_24a;
  CGFloat v81;
  CGFloat v82;
  void **v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;

  if (a2 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_24972D0BC())
  {
    v5 = (void **)&a1[OBJC_IVAR___UIObjectCompat_boundingBox];
    v83 = (void **)&a1[OBJC_IVAR___UIObjectCompat_boundingBox];
    v72 = &a1[OBJC_IVAR___UIObjectCompat_detection];
    if ((a2 & 0xC000000000000001) != 0)
    {
      swift_beginAccess();
      swift_beginAccess();
      v6 = 0;
      while (1)
      {
        v7 = MEMORY[0x24BCF6CE8](v6, a2);
        v8 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v9 = (id)v7;
        a1 = (char *)OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
        v10 = (void **)(*(_QWORD *)(v7 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v11 = *v10;
        v12 = (char *)*v83;
        v13 = (uint64_t)*v10 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v14 = *(double *)v13;
        v15 = *(double *)(v13 + 8);
        v16 = *(double *)(v13 + 16);
        v17 = *(double *)(v13 + 24);
        v18 = (CGFloat *)&v12[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v19 = *v18;
        v20 = v18[1];
        v21 = v18[2];
        v22 = v18[3];
        v23 = v11;
        v24 = v12;
        r2_24 = v15;
        v81 = v14;
        v84.origin.x = v14;
        v84.origin.y = v15;
        r2_8 = v17;
        r2_16 = v16;
        v84.size.width = v16;
        v84.size.height = v17;
        r2 = v19;
        v96.origin.x = v19;
        v96.origin.y = v20;
        v96.size.width = v21;
        v96.size.height = v22;
        v85 = CGRectUnion(v84, v96);
        x = v85.origin.x;
        y = v85.origin.y;
        width = v85.size.width;
        height = v85.size.height;
        v29 = CGRectGetHeight(v85);
        v86.origin.x = x;
        v86.origin.y = y;
        v86.size.width = width;
        v86.size.height = height;
        v30 = v29 * CGRectGetWidth(v86);
        if (v30 == 0.0)
        {

          v31 = 0.0;
        }
        else
        {
          v87.origin.y = r2_24;
          v87.origin.x = v81;
          v87.size.height = r2_8;
          v87.size.width = r2_16;
          v97.origin.x = r2;
          v97.origin.y = v20;
          v97.size.width = v21;
          v97.size.height = v22;
          v88 = CGRectIntersection(v87, v97);
          v32 = v88.origin.x;
          v33 = v88.origin.y;
          v34 = v88.size.width;
          v35 = v88.size.height;
          v36 = CGRectGetHeight(v88);
          v89.origin.x = v32;
          v89.origin.y = v33;
          v89.size.width = v34;
          v89.size.height = v35;
          v37 = CGRectGetWidth(v89);

          v31 = v36 * v37 / v30;
        }
        v38 = (_QWORD *)(*(_QWORD *)&a1[(_QWORD)v9] + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (v31 == 1.0
          && *(_QWORD *)(*v38 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == *(_QWORD *)(*(_QWORD *)v72 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label))
        {
          goto LABEL_21;
        }
        swift_unknownObjectRelease();
        ++v6;
        if (v8 == v4)
          goto LABEL_25;
      }
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      swift_beginAccess();
      v39 = 0;
      while (1)
      {
        v40 = v39 + 1;
        if (__OFADD__(v39, 1))
          break;
        a1 = *(char **)(a2 + 8 * v39 + 32);
        v41 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
        v42 = (void **)(*(_QWORD *)&a1[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v43 = *v42;
        v44 = (char *)*v5;
        v45 = (uint64_t)*v42 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v46 = *(double *)v45;
        v47 = *(double *)(v45 + 8);
        v48 = *(double *)(v45 + 16);
        v49 = *(double *)(v45 + 24);
        v50 = (CGFloat *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v51 = *v50;
        v52 = v50[1];
        v53 = v50[2];
        v54 = v50[3];
        v9 = a1;
        v55 = v43;
        v56 = v44;
        r2_24a = v47;
        v82 = v46;
        v90.origin.x = v46;
        v90.origin.y = v47;
        r2_8a = v49;
        r2_16a = v48;
        v90.size.width = v48;
        v90.size.height = v49;
        r2a = v51;
        v98.origin.x = v51;
        v98.origin.y = v52;
        v98.size.width = v53;
        v98.size.height = v54;
        v91 = CGRectUnion(v90, v98);
        v57 = v91.origin.x;
        v58 = v91.origin.y;
        v59 = v91.size.width;
        v60 = v91.size.height;
        v61 = CGRectGetHeight(v91);
        v92.origin.x = v57;
        v92.origin.y = v58;
        v92.size.width = v59;
        v92.size.height = v60;
        v62 = v61 * CGRectGetWidth(v92);
        if (v62 == 0.0)
        {

          v63 = 0.0;
        }
        else
        {
          v93.origin.y = r2_24a;
          v93.origin.x = v82;
          v93.size.height = r2_8a;
          v93.size.width = r2_16a;
          v99.origin.x = r2a;
          v99.origin.y = v52;
          v99.size.width = v53;
          v99.size.height = v54;
          v94 = CGRectIntersection(v93, v99);
          v64 = v94.origin.x;
          v65 = v94.origin.y;
          v66 = v94.size.width;
          v67 = v94.size.height;
          v68 = CGRectGetHeight(v94);
          v95.origin.x = v64;
          v95.origin.y = v65;
          v95.size.width = v66;
          v95.size.height = v67;
          v69 = CGRectGetWidth(v95);

          v63 = v68 * v69 / v62;
        }
        v70 = (_QWORD *)(*(_QWORD *)&a1[v41] + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (v63 == 1.0
          && *(_QWORD *)(*v70 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == *(_QWORD *)(*(_QWORD *)v72 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label))
        {
LABEL_21:
          swift_bridgeObjectRelease();
          return v9;
        }

        ++v39;
        v5 = v83;
        if (v40 == v4)
          goto LABEL_25;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
LABEL_25:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2496E8724(unint64_t a1, CGImage *a2)
{
  unint64_t v4;
  size_t Width;
  size_t Height;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t i;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t j;
  char *v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t k;
  _QWORD *v29;
  uint64_t m;
  char *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  char *v38;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;

  v4 = sub_249716F18(a1);
  Width = CGImageGetWidth(a2);
  Height = CGImageGetHeight(a2);
  v7 = sub_24971179C(v4, Width, Height);
  result = swift_bridgeObjectRelease();
  v57 = MEMORY[0x24BEE4AF8];
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_24972D0BC();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_15;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_84;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v12 = (char *)MEMORY[0x24BCF6CE8](i, v7);
    else
      v12 = (char *)*(id *)(v7 + 8 * i + 32);
    v11 = v12;
    v13 = (void *)sub_2496DF650(a2, v12, a1);
    if (v13)
    {
      v14 = v13;
      MEMORY[0x24BCF69D0]();
      if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      sub_24972CD08();
      sub_24972CCE4();

      v11 = v14;
    }

  }
  swift_bridgeObjectRelease();
  v15 = v57;
LABEL_16:
  v56 = MEMORY[0x24BEE4AF8];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_24972D0BC();
    v16 = result;
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  if (!v16)
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_41;
    goto LABEL_31;
  }
  if (v16 < 1)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  for (j = 0; j != v16; ++j)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (char *)MEMORY[0x24BCF6CE8](j, v15);
    else
      v18 = (char *)*(id *)(v15 + 8 * j + 32);
    v19 = v18;
    v20 = (_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_detection);
    swift_beginAccess();
    if (*(_QWORD *)(*v20 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 14)
    {
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v21 = v56;
  if (v56 < 0)
  {
LABEL_41:
    swift_retain();
    result = sub_24972D0BC();
    v22 = result;
    if (!result)
      goto LABEL_42;
    goto LABEL_33;
  }
LABEL_31:
  if ((v21 & 0x4000000000000000) != 0)
    goto LABEL_41;
  v22 = *(_QWORD *)(v21 + 16);
  result = swift_retain();
  if (!v22)
  {
LABEL_42:
    swift_release_n();
    goto LABEL_43;
  }
LABEL_33:
  if (v22 < 1)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v23 = 0;
  do
  {
    if ((v21 & 0xC000000000000001) != 0)
      v24 = (id)MEMORY[0x24BCF6CE8](v23, v21);
    else
      v24 = *(id *)(v21 + 8 * v23 + 32);
    v25 = v24;
    ++v23;
    swift_beginAccess();
    v26 = swift_bridgeObjectRetain();
    sub_249710704(v26);

  }
  while (v22 != v23);
  swift_release_n();
  v15 = v57;
LABEL_43:
  v55 = MEMORY[0x24BEE4AF8];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_24972D0BC();
    v27 = result;
    if (result)
    {
LABEL_45:
      if (v27 >= 1)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          for (k = 0; k != v27; ++k)
          {
            v29 = (_QWORD *)(*(_QWORD *)(MEMORY[0x24BCF6CE8](k, v15)
                                       + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                           + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(_QWORD *)(*v29 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 14)
            {
              sub_24972D020();
              sub_24972D044();
              sub_24972D050();
              sub_24972D02C();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
        else
        {
          for (m = 0; m != v27; ++m)
          {
            v31 = *(char **)(v15 + 8 * m + 32);
            v32 = (_QWORD *)(*(_QWORD *)&v31[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                           + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(_QWORD *)(*v32 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 14)
            {
              v33 = v31;
              sub_24972D020();
              sub_24972D044();
              sub_24972D050();
              sub_24972D02C();
            }
          }
        }
        goto LABEL_57;
      }
LABEL_86:
      __break(1u);
      return result;
    }
  }
  else
  {
    v27 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v27)
      goto LABEL_45;
  }
LABEL_57:
  swift_bridgeObjectRelease();
  v34 = v55;
  if (v55 < 0 || (v55 & 0x4000000000000000) != 0)
    goto LABEL_81;
  v35 = *(_QWORD *)(v55 + 16);
  while (v35)
  {
    v36 = 0;
    v53 = v34 & 0xC000000000000001;
    v49 = v34 + 32;
    v51 = v34;
    v52 = v15;
    v50 = v35;
    while (1)
    {
      if (v53)
      {
        v38 = (char *)MEMORY[0x24BCF6CE8](v36, v34);
      }
      else
      {
        if (v36 >= *(_QWORD *)(v34 + 16))
          goto LABEL_80;
        v38 = (char *)*(id *)(v49 + 8 * v36);
      }
      v37 = v38;
      if (__OFADD__(v36++, 1))
        break;
      v40 = &v38[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
      swift_beginAccess();
      v41 = *(_QWORD *)v40;
      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        v42 = sub_24972D0BC();
        if (!v42)
          goto LABEL_62;
      }
      else
      {
        v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v42)
          goto LABEL_62;
      }
      if (v42 < 1)
        goto LABEL_79;
      v54 = v36;
      v43 = 0;
      do
      {
        if ((v41 & 0xC000000000000001) != 0)
          v44 = (char *)MEMORY[0x24BCF6CE8](v43, v41);
        else
          v44 = (char *)*(id *)(v41 + 8 * v43 + 32);
        v45 = v44;
        ++v43;
        v46 = *(void **)&v44[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection];
        *(_QWORD *)&v44[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection] = v37;
        v47 = v37;

        v48 = &v45[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType];
        *(_QWORD *)v48 = 14;
        v48[8] = 0;

      }
      while (v42 != v43);
      v37 = v47;
      v34 = v51;
      v15 = v52;
      v35 = v50;
      v36 = v54;
LABEL_62:

      swift_bridgeObjectRelease();
      if (v36 == v35)
        goto LABEL_82;
    }
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    swift_bridgeObjectRetain();
    v35 = sub_24972D0BC();
    swift_release();
  }
LABEL_82:
  swift_release();
  sub_2496EC4CC(v15);
  sub_2496ECF00(v15);
  sub_2496ED5E8(v15);
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t sub_2496E8E5C(uint64_t *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971FA68();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_24972D02C();
}

void sub_2496E8ED8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void **v15;
  char *v16;
  void **v17;
  void *v18;
  CGFloat *v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  double MinY;
  CGRect *v29;
  double v30;
  uint64_t v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double MinX;
  double v37;
  void **v38;
  void *v39;
  char *v40;
  void **v41;
  char *v42;
  void **v43;
  void *v44;
  CGFloat *v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  double v54;
  CGRect *v55;
  double v56;
  uint64_t v57;
  CGFloat v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void **v124;
  char *v125;
  void **v126;
  void *v127;
  CGFloat *v128;
  CGFloat v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  double v137;
  CGRect *v138;
  double v139;
  uint64_t v140;
  CGFloat v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  double v146;
  double v147;
  double v148;
  char *v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  void **__dst;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_24972D1B8();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
      goto LABEL_273;
    v161 = v5;
    v157 = a1;
    if (v4 < 2)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v171 = MEMORY[0x24BEE4AF8];
      __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        v72 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v72 < 2)
          goto LABEL_182;
        goto LABEL_170;
      }
    }
    else
    {
      v7 = v6 >> 1;
      type metadata accessor for UIFingerprintingDetectionInfo();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v171 = v8;
    }
    v10 = 0;
    v11 = *a1;
    v159 = *a1 + 16;
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v158 = *a1 - 8;
    v165 = v4;
    v170 = *a1;
LABEL_13:
    v12 = v10 + 1;
    v166 = v9;
    v162 = v10;
    if (v10 + 1 < v4)
    {
      v13 = *(char **)(v11 + 8 * v12);
      v14 = *(char **)(v11 + 8 * v10);
      v15 = (void **)(*(_QWORD *)&v13[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v16 = (char *)*v15;
      v17 = (void **)(*(_QWORD *)&v14[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v18 = *v17;
      v19 = (CGFloat *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      v24 = v13;
      v25 = v14;
      v26 = v16;
      v27 = v18;
      v172.origin.x = v20;
      v172.origin.y = v21;
      v172.size.width = v22;
      v172.size.height = v23;
      MinY = CGRectGetMinY(v172);
      if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        goto LABEL_245;
      if (MinY <= -9.22337204e18)
      {
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        __break(1u);
LABEL_253:
        __break(1u);
LABEL_254:
        __break(1u);
LABEL_255:
        __break(1u);
LABEL_256:
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        sub_24972D074();
        __break(1u);
        return;
      }
      if (MinY >= 9.22337204e18)
        goto LABEL_247;
      v29 = (CGRect *)&v27[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v30 = CGRectGetMinY(*v29);
      if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
        goto LABEL_248;
      if (v30 <= -9.22337204e18)
        goto LABEL_249;
      if (v30 >= 9.22337204e18)
        goto LABEL_250;
      v31 = (uint64_t)MinY - (uint64_t)v30;
      if (__OFSUB__((uint64_t)MinY, (uint64_t)v30))
        goto LABEL_251;
      v10 = v162;
      if (v31 < 0)
      {
        v86 = __OFSUB__(0, v31);
        v31 = (uint64_t)v30 - (uint64_t)MinY;
        if (v86)
          goto LABEL_268;
      }
      v32 = *v19;
      v33 = *((_QWORD *)v19 + 1);
      v34 = *((_QWORD *)v19 + 2);
      v35 = *((_QWORD *)v19 + 3);
      if (v31 > 19)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v32);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_254;
        if (MinX <= -9.22337204e18)
          goto LABEL_256;
        if (MinX >= 9.22337204e18)
          goto LABEL_258;
        v37 = CGRectGetMinX(*v29);

        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
          goto LABEL_260;
        v4 = v165;
        v9 = v166;
        if (v37 <= -9.22337204e18)
          goto LABEL_262;
        if (v37 >= 9.22337204e18)
          goto LABEL_264;
      }
      else
      {
        MinX = CGRectGetMinY(*(CGRect *)&v32);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_253;
        if (MinX <= -9.22337204e18)
          goto LABEL_255;
        if (MinX >= 9.22337204e18)
          goto LABEL_257;
        v37 = CGRectGetMinY(*v29);

        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
          goto LABEL_259;
        v4 = v165;
        v9 = v166;
        if (v37 <= -9.22337204e18)
          goto LABEL_261;
        if (v37 >= 9.22337204e18)
          goto LABEL_263;
      }
      v168 = (uint64_t)MinX;
      v163 = (uint64_t)v37;

      v12 = v162 + 2;
      if (v162 + 2 < v4)
      {
        v38 = (void **)(v159 + 8 * v162);
        while (1)
        {
          v40 = (char *)*(v38 - 1);
          v39 = *v38;
          v41 = (void **)(*(_QWORD *)((char *)*v38
                                    + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v42 = (char *)*v41;
          v43 = (void **)(*(_QWORD *)&v40[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v44 = *v43;
          v45 = (CGFloat *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v46 = *v45;
          v47 = v45[1];
          v48 = v45[2];
          v49 = v45[3];
          v50 = v39;
          v51 = v40;
          v52 = v42;
          v53 = v44;
          v173.origin.x = v46;
          v173.origin.y = v47;
          v173.size.width = v48;
          v173.size.height = v49;
          v54 = CGRectGetMinY(v173);
          if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
            goto LABEL_208;
          if (v54 <= -9.22337204e18)
            goto LABEL_209;
          if (v54 >= 9.22337204e18)
            goto LABEL_210;
          v55 = (CGRect *)&v53[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v56 = CGRectGetMinY(*v55);
          if ((~*(_QWORD *)&v56 & 0x7FF0000000000000) == 0)
            goto LABEL_211;
          if (v56 <= -9.22337204e18)
            goto LABEL_212;
          if (v56 >= 9.22337204e18)
            goto LABEL_213;
          v57 = (uint64_t)v54 - (uint64_t)v56;
          if (__OFSUB__((uint64_t)v54, (uint64_t)v56))
            goto LABEL_214;
          if (v57 < 0)
          {
            v86 = __OFSUB__(0, v57);
            v57 = (uint64_t)v56 - (uint64_t)v54;
            if (v86)
              goto LABEL_238;
          }
          v58 = *v45;
          v59 = *((_QWORD *)v45 + 1);
          v60 = *((_QWORD *)v45 + 2);
          v61 = *((_QWORD *)v45 + 3);
          if (v57 > 19)
          {
            v62 = CGRectGetMinX(*(CGRect *)&v58);
            if ((~*(_QWORD *)&v62 & 0x7FF0000000000000) == 0)
              goto LABEL_225;
            if (v62 <= -9.22337204e18)
              goto LABEL_227;
            if (v62 >= 9.22337204e18)
              goto LABEL_230;
            v63 = CGRectGetMinX(*v55);

            if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
              goto LABEL_232;
            if (v63 <= -9.22337204e18)
              goto LABEL_234;
            if (v63 >= 9.22337204e18)
              goto LABEL_235;
          }
          else
          {
            v62 = CGRectGetMinY(*(CGRect *)&v58);
            if ((~*(_QWORD *)&v62 & 0x7FF0000000000000) == 0)
              goto LABEL_226;
            if (v62 <= -9.22337204e18)
              goto LABEL_228;
            if (v62 >= 9.22337204e18)
              goto LABEL_229;
            v63 = CGRectGetMinY(*v55);

            if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
              goto LABEL_231;
            if (v63 <= -9.22337204e18)
              goto LABEL_233;
            if (v63 >= 9.22337204e18)
              goto LABEL_236;
          }

          v9 = v166;
          if (v163 >= v168 != (uint64_t)v63 >= (uint64_t)v62)
            break;
          ++v12;
          ++v38;
          v4 = v165;
          if (v165 == v12)
          {
            v12 = v165;
            goto LABEL_66;
          }
        }
        v4 = v165;
LABEL_66:
        v10 = v162;
      }
      v11 = v170;
      if (v163 >= v168)
      {
        if (v12 < v10)
          goto LABEL_267;
        if (v10 < v12)
        {
          v64 = (uint64_t *)(v158 + 8 * v12);
          v65 = v12;
          v66 = v10;
          v67 = (uint64_t *)(v170 + 8 * v10);
          do
          {
            if (v66 != --v65)
            {
              if (!v170)
                goto LABEL_271;
              v68 = *v67;
              *v67 = *v64;
              *v64 = v68;
            }
            ++v66;
            --v64;
            ++v67;
          }
          while (v66 < v65);
        }
      }
    }
    if (v12 >= v4)
      goto LABEL_84;
    if (__OFSUB__(v12, v10))
      goto LABEL_252;
    if (v12 - v10 >= v161)
      goto LABEL_84;
    if (__OFADD__(v10, v161))
      goto LABEL_265;
    if (v10 + v161 >= v4)
      v69 = v4;
    else
      v69 = v10 + v161;
    if (v69 < v10)
      goto LABEL_266;
    if (v12 == v69)
    {
LABEL_84:
      if (v12 < v10)
        goto LABEL_243;
      goto LABEL_85;
    }
    v120 = v158 + 8 * v12;
    v160 = v69;
LABEL_137:
    v122 = *(char **)(v11 + 8 * v12);
    v164 = v120;
    v169 = v12;
    while (1)
    {
      v123 = *(char **)v120;
      v124 = (void **)(*(_QWORD *)&v122[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v125 = (char *)*v124;
      v126 = (void **)(*(_QWORD *)&v123[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v127 = *v126;
      v128 = (CGFloat *)&v125[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v129 = *v128;
      v130 = v128[1];
      v131 = v128[2];
      v132 = v128[3];
      v133 = v122;
      v134 = v123;
      v135 = v125;
      v136 = v127;
      v174.origin.x = v129;
      v174.origin.y = v130;
      v174.size.width = v131;
      v174.size.height = v132;
      v137 = CGRectGetMinY(v174);
      if ((~*(_QWORD *)&v137 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
LABEL_223:
        __break(1u);
LABEL_224:
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
LABEL_229:
        __break(1u);
LABEL_230:
        __break(1u);
LABEL_231:
        __break(1u);
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
        goto LABEL_239;
      }
      if (v137 <= -9.22337204e18)
        goto LABEL_185;
      if (v137 >= 9.22337204e18)
        goto LABEL_186;
      v138 = (CGRect *)&v136[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v139 = CGRectGetMinY(*v138);
      if ((~*(_QWORD *)&v139 & 0x7FF0000000000000) == 0)
        goto LABEL_187;
      if (v139 <= -9.22337204e18)
        goto LABEL_188;
      if (v139 >= 9.22337204e18)
        goto LABEL_189;
      v140 = (uint64_t)v137 - (uint64_t)v139;
      if (__OFSUB__((uint64_t)v137, (uint64_t)v139))
        goto LABEL_190;
      if (v140 < 0)
      {
        v86 = __OFSUB__(0, v140);
        v140 = (uint64_t)v139 - (uint64_t)v137;
        if (v86)
          goto LABEL_207;
      }
      v141 = *v128;
      v142 = *((_QWORD *)v128 + 1);
      v143 = *((_QWORD *)v128 + 2);
      v144 = *((_QWORD *)v128 + 3);
      if (v140 > 19)
      {
        v147 = CGRectGetMinX(*(CGRect *)&v141);
        if ((~*(_QWORD *)&v147 & 0x7FF0000000000000) == 0)
          goto LABEL_192;
        if (v147 <= -9.22337204e18)
          goto LABEL_194;
        if (v147 >= 9.22337204e18)
          goto LABEL_196;
        v148 = CGRectGetMinX(*v138);

        if ((~*(_QWORD *)&v148 & 0x7FF0000000000000) == 0)
          goto LABEL_198;
        if (v148 <= -9.22337204e18)
          goto LABEL_200;
        if (v148 >= 9.22337204e18)
          goto LABEL_202;

        if ((uint64_t)v148 < (uint64_t)v147)
        {
LABEL_135:
          v121 = v169;
          v11 = v170;
LABEL_136:
          v12 = v121 + 1;
          v10 = v162;
          v120 = v164 + 8;
          if (v12 != v160)
            goto LABEL_137;
          v12 = v160;
          v9 = v166;
          if (v160 < v162)
            goto LABEL_243;
LABEL_85:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_24971DB80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          v71 = *((_QWORD *)v9 + 2);
          v70 = *((_QWORD *)v9 + 3);
          v72 = v71 + 1;
          v11 = v170;
          if (v71 >= v70 >> 1)
          {
            v150 = sub_24971DB80((char *)(v70 > 1), v71 + 1, 1, v9);
            v11 = v170;
            v9 = v150;
          }
          *((_QWORD *)v9 + 2) = v72;
          v73 = v9 + 32;
          v74 = &v9[16 * v71 + 32];
          *(_QWORD *)v74 = v162;
          *((_QWORD *)v74 + 1) = v12;
          if (v71)
          {
            while (2)
            {
              v75 = v72 - 1;
              if (v72 >= 4)
              {
                v80 = &v73[16 * v72];
                v81 = *((_QWORD *)v80 - 8);
                v82 = *((_QWORD *)v80 - 7);
                v86 = __OFSUB__(v82, v81);
                v83 = v82 - v81;
                if (v86)
                  goto LABEL_215;
                v85 = *((_QWORD *)v80 - 6);
                v84 = *((_QWORD *)v80 - 5);
                v86 = __OFSUB__(v84, v85);
                v78 = v84 - v85;
                v79 = v86;
                if (v86)
                  goto LABEL_216;
                v87 = v72 - 2;
                v88 = &v73[16 * v72 - 32];
                v90 = *(_QWORD *)v88;
                v89 = *((_QWORD *)v88 + 1);
                v86 = __OFSUB__(v89, v90);
                v91 = v89 - v90;
                if (v86)
                  goto LABEL_218;
                v86 = __OFADD__(v78, v91);
                v92 = v78 + v91;
                if (v86)
                  goto LABEL_221;
                if (v92 >= v83)
                {
                  v110 = &v73[16 * v75];
                  v112 = *(_QWORD *)v110;
                  v111 = *((_QWORD *)v110 + 1);
                  v86 = __OFSUB__(v111, v112);
                  v113 = v111 - v112;
                  if (v86)
                    goto LABEL_237;
                  v103 = v78 < v113;
                }
                else
                {
LABEL_103:
                  if ((v79 & 1) != 0)
                    goto LABEL_217;
                  v87 = v72 - 2;
                  v93 = &v73[16 * v72 - 32];
                  v95 = *(_QWORD *)v93;
                  v94 = *((_QWORD *)v93 + 1);
                  v96 = __OFSUB__(v94, v95);
                  v97 = v94 - v95;
                  v98 = v96;
                  if (v96)
                    goto LABEL_220;
                  v99 = &v73[16 * v75];
                  v101 = *(_QWORD *)v99;
                  v100 = *((_QWORD *)v99 + 1);
                  v86 = __OFSUB__(v100, v101);
                  v102 = v100 - v101;
                  if (v86)
                    goto LABEL_223;
                  if (__OFADD__(v97, v102))
                    goto LABEL_224;
                  if (v97 + v102 < v78)
                    goto LABEL_115;
                  v103 = v78 < v102;
                }
                if (v103)
                  v75 = v87;
              }
              else
              {
                if (v72 == 3)
                {
                  v77 = *((_QWORD *)v9 + 4);
                  v76 = *((_QWORD *)v9 + 5);
                  v86 = __OFSUB__(v76, v77);
                  v78 = v76 - v77;
                  v79 = v86;
                  goto LABEL_103;
                }
                v104 = *((_QWORD *)v9 + 4);
                v105 = *((_QWORD *)v9 + 5);
                v86 = __OFSUB__(v105, v104);
                v97 = v105 - v104;
                v98 = v86;
LABEL_115:
                if ((v98 & 1) != 0)
                  goto LABEL_219;
                v106 = &v73[16 * v75];
                v108 = *(_QWORD *)v106;
                v107 = *((_QWORD *)v106 + 1);
                v86 = __OFSUB__(v107, v108);
                v109 = v107 - v108;
                if (v86)
                  goto LABEL_222;
                if (v109 < v97)
                  goto LABEL_132;
              }
              v114 = v75 - 1;
              if (v75 - 1 >= v72)
                goto LABEL_203;
              if (!v11)
                goto LABEL_270;
              v115 = &v73[16 * v114];
              v116 = *(_QWORD *)v115;
              v117 = &v73[16 * v75];
              v118 = *((_QWORD *)v117 + 1);
              sub_2496EB450((void **)(v11 + 8 * *(_QWORD *)v115), (void **)(v11 + 8 * *(_QWORD *)v117), v11 + 8 * v118, __dst);
              if (v1)
                goto LABEL_182;
              if (v118 < v116)
                goto LABEL_204;
              if (v75 > *((_QWORD *)v9 + 2))
                goto LABEL_205;
              *(_QWORD *)v115 = v116;
              *(_QWORD *)&v73[16 * v114 + 8] = v118;
              v119 = *((_QWORD *)v9 + 2);
              if (v75 >= v119)
                goto LABEL_206;
              v72 = v119 - 1;
              memmove(&v73[16 * v75], v117 + 16, 16 * (v119 - 1 - v75));
              *((_QWORD *)v9 + 2) = v119 - 1;
              v11 = v170;
              if (v119 <= 2)
                goto LABEL_132;
              continue;
            }
          }
          v72 = 1;
LABEL_132:
          v4 = v165;
          v10 = v12;
          if (v12 >= v165)
          {
            v2 = v1;
            if (v72 < 2)
            {
LABEL_182:
              swift_bridgeObjectRelease();
              *(_QWORD *)((v171 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_24972CCE4();
              swift_bridgeObjectRelease();
              return;
            }
LABEL_170:
            v151 = *v157;
            while (1)
            {
              v152 = v72 - 2;
              if (v72 < 2)
                break;
              if (!v151)
                goto LABEL_272;
              v153 = *(_QWORD *)&v9[16 * v152 + 32];
              v154 = *(_QWORD *)&v9[16 * v72 + 24];
              sub_2496EB450((void **)(v151 + 8 * v153), (void **)(v151 + 8 * *(_QWORD *)&v9[16 * v72 + 16]), v151 + 8 * v154, __dst);
              if (v2)
                goto LABEL_182;
              if (v154 < v153)
                goto LABEL_240;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24971DDC8((uint64_t)v9);
              if (v152 >= *((_QWORD *)v9 + 2))
                goto LABEL_241;
              v155 = &v9[16 * v152 + 32];
              *(_QWORD *)v155 = v153;
              *((_QWORD *)v155 + 1) = v154;
              v156 = *((_QWORD *)v9 + 2);
              if (v72 > v156)
                goto LABEL_242;
              memmove(&v9[16 * v72 + 16], &v9[16 * v72 + 32], 16 * (v156 - v72));
              *((_QWORD *)v9 + 2) = v156 - 1;
              v72 = v156 - 1;
              if (v156 <= 2)
                goto LABEL_182;
            }
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
            goto LABEL_246;
          }
          goto LABEL_13;
        }
      }
      else
      {
        v145 = CGRectGetMinY(*(CGRect *)&v141);
        if ((~*(_QWORD *)&v145 & 0x7FF0000000000000) == 0)
          goto LABEL_191;
        if (v145 <= -9.22337204e18)
          goto LABEL_193;
        if (v145 >= 9.22337204e18)
          goto LABEL_195;
        v146 = CGRectGetMinY(*v138);

        if ((~*(_QWORD *)&v146 & 0x7FF0000000000000) == 0)
          goto LABEL_197;
        if (v146 <= -9.22337204e18)
          goto LABEL_199;
        if (v146 >= 9.22337204e18)
          goto LABEL_201;

        if ((uint64_t)v146 < (uint64_t)v145)
          goto LABEL_135;
      }
      v121 = v169;
      v11 = v170;
      if (!v170)
        goto LABEL_269;
      v149 = *(char **)v120;
      v122 = *(char **)(v120 + 8);
      *(_QWORD *)v120 = v122;
      *(_QWORD *)(v120 + 8) = v149;
      v120 -= 8;
      if (v169 == ++v10)
        goto LABEL_136;
    }
  }
  if (v4 < 0)
    goto LABEL_244;
  if (v4)
    sub_2496EAD18(0, v4, 1, a1);
}

void sub_2496E9EA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  char *v22;
  char *v23;
  id v24;
  double Width;
  double Height;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  id v35;
  double v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  void **v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void **v45;
  char *v46;
  CGRect *v47;
  CGFloat x;
  CGFloat y;
  CGFloat v50;
  CGFloat v51;
  id v52;
  char *v53;
  char *v54;
  double v55;
  double v56;
  uint64_t v57;
  void **v58;
  void *v59;
  uint64_t v60;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  id v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  char v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void **v133;
  char *v134;
  CGRect *v135;
  CGFloat v136;
  CGFloat v137;
  CGFloat v138;
  CGFloat v139;
  char *v140;
  char *v141;
  char *v142;
  double v143;
  double v144;
  uint64_t v145;
  void **v146;
  void *v147;
  uint64_t v148;
  CGFloat v149;
  CGFloat v150;
  CGFloat v151;
  CGFloat v152;
  id v153;
  double v154;
  double v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void **__dst;
  uint64_t v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_24972D1B8();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
      goto LABEL_227;
    v168 = v5;
    v164 = a1;
    if (v4 < 2)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v178 = MEMORY[0x24BEE4AF8];
      __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        v77 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v77 < 2)
          goto LABEL_154;
        goto LABEL_142;
      }
    }
    else
    {
      v7 = v6 >> 1;
      type metadata accessor for UIFingerprintingDetectionInfo();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v178 = v8;
    }
    v10 = 0;
    v11 = *a1;
    v166 = *a1 + 16;
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v165 = *a1 - 8;
    v176 = v4;
    while (1)
    {
      v12 = v10 + 1;
      if (v10 + 1 < v4)
      {
        v169 = v9;
        v13 = *(char **)(v11 + 8 * v12);
        v14 = *(void **)(v11 + 8 * v10);
        v15 = (void **)(*(_QWORD *)&v13[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v16 = *v15;
        v17 = (uint64_t)*v15 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v18 = *(double *)v17;
        v19 = *(double *)(v17 + 8);
        v20 = *(double *)(v17 + 16);
        v21 = *(double *)(v17 + 24);
        v22 = v13;
        v23 = v14;
        v24 = v16;
        v179.origin.x = v18;
        v179.origin.y = v19;
        v179.size.width = v20;
        v179.size.height = v21;
        Width = CGRectGetWidth(v179);
        if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
          goto LABEL_205;
        if (Width <= -9.22337204e18)
        {
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
LABEL_227:
          sub_24972D074();
          __break(1u);
          return;
        }
        if (Width >= 9.22337204e18)
          goto LABEL_207;
        Height = CGRectGetHeight(*(CGRect *)v17);

        if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
          goto LABEL_208;
        if (Height <= -9.22337204e18)
          goto LABEL_209;
        if (Height >= 9.22337204e18)
          goto LABEL_210;
        v27 = (uint64_t)Width * (uint64_t)Height;
        if ((unsigned __int128)((uint64_t)Width * (__int128)(uint64_t)Height) >> 64 != v27 >> 63)
          goto LABEL_211;
        v28 = (void **)(*(_QWORD *)&v23[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v29 = *v28;
        v30 = (uint64_t)*v28 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v31 = *(double *)v30;
        v32 = *(double *)(v30 + 8);
        v33 = *(double *)(v30 + 16);
        v34 = *(double *)(v30 + 24);
        v35 = v29;
        v180.origin.x = v31;
        v180.origin.y = v32;
        v180.size.width = v33;
        v180.size.height = v34;
        v36 = CGRectGetWidth(v180);
        if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
          goto LABEL_212;
        if (v36 <= -9.22337204e18)
          goto LABEL_213;
        if (v36 >= 9.22337204e18)
          goto LABEL_214;
        v37 = CGRectGetHeight(*(CGRect *)v30);

        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
          goto LABEL_215;
        if (v37 <= -9.22337204e18)
          goto LABEL_216;
        if (v37 >= 9.22337204e18)
          goto LABEL_217;
        v38 = (uint64_t)v36 * (uint64_t)v37;
        if ((unsigned __int128)((uint64_t)v36 * (__int128)(uint64_t)v37) >> 64 != v38 >> 63)
          goto LABEL_218;
        v39 = (double)v27;
        v40 = (double)v38;
        v12 = v10 + 2;
        v4 = v176;
        if (v10 + 2 < v176)
        {
          v171 = v10;
          v173 = v11;
          v41 = (void **)(v166 + 8 * v10);
          while (1)
          {
            v42 = v12;
            v44 = *(v41 - 1);
            v43 = *v41;
            v45 = (void **)(*(_QWORD *)((char *)*v41
                                      + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                          + OBJC_IVAR___UIObjectCompat_boundingBox);
            swift_beginAccess();
            v46 = (char *)*v45;
            v47 = (CGRect *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            x = v47->origin.x;
            y = v47->origin.y;
            v50 = v47->size.width;
            v51 = v47->size.height;
            v52 = v43;
            v53 = v44;
            v54 = v46;
            v181.origin.x = x;
            v181.origin.y = y;
            v181.size.width = v50;
            v181.size.height = v51;
            v55 = CGRectGetWidth(v181);
            if ((~*(_QWORD *)&v55 & 0x7FF0000000000000) == 0)
              goto LABEL_174;
            if (v55 <= -9.22337204e18)
              goto LABEL_175;
            if (v55 >= 9.22337204e18)
              goto LABEL_176;
            v56 = CGRectGetHeight(*v47);

            if ((~*(_QWORD *)&v56 & 0x7FF0000000000000) == 0)
              goto LABEL_177;
            if (v56 <= -9.22337204e18)
              goto LABEL_178;
            if (v56 >= 9.22337204e18)
              goto LABEL_179;
            v57 = (uint64_t)v55 * (uint64_t)v56;
            if ((unsigned __int128)((uint64_t)v55 * (__int128)(uint64_t)v56) >> 64 != v57 >> 63)
              goto LABEL_180;
            v58 = (void **)(*(_QWORD *)&v53[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                          + OBJC_IVAR___UIObjectCompat_boundingBox);
            swift_beginAccess();
            v59 = *v58;
            v60 = (uint64_t)*v58 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
            swift_beginAccess();
            v61 = *(double *)v60;
            v62 = *(double *)(v60 + 8);
            v63 = *(double *)(v60 + 16);
            v64 = *(double *)(v60 + 24);
            v65 = v59;
            v182.origin.x = v61;
            v182.origin.y = v62;
            v182.size.width = v63;
            v182.size.height = v64;
            v66 = CGRectGetWidth(v182);
            if ((~*(_QWORD *)&v66 & 0x7FF0000000000000) == 0)
              goto LABEL_181;
            if (v66 <= -9.22337204e18)
              goto LABEL_182;
            if (v66 >= 9.22337204e18)
              goto LABEL_183;
            v67 = CGRectGetHeight(*(CGRect *)v60);

            if ((~*(_QWORD *)&v67 & 0x7FF0000000000000) == 0)
              goto LABEL_184;
            if (v67 <= -9.22337204e18)
              goto LABEL_185;
            if (v67 >= 9.22337204e18)
              goto LABEL_186;
            v68 = (uint64_t)v66 * (uint64_t)v67;
            if ((unsigned __int128)((uint64_t)v66 * (__int128)(uint64_t)v67) >> 64 != v68 >> 63)
              goto LABEL_187;
            if (v39 < v40 == (double)v57 >= (double)v68)
              break;
            v12 = v42 + 1;
            ++v41;
            if (v176 == v42 + 1)
            {
              v4 = v176;
              v12 = v176;
              goto LABEL_48;
            }
          }
          v4 = v176;
          v12 = v42;
LABEL_48:
          v10 = v171;
          v11 = v173;
        }
        v9 = v169;
        if (v39 < v40)
        {
          if (v12 < v10)
            goto LABEL_222;
          if (v10 < v12)
          {
            v69 = (uint64_t *)(v165 + 8 * v12);
            v70 = v12;
            v71 = v10;
            v72 = (uint64_t *)(v11 + 8 * v10);
            do
            {
              if (v71 != --v70)
              {
                if (!v11)
                  goto LABEL_225;
                v73 = *v72;
                *v72 = *v69;
                *v69 = v73;
              }
              ++v71;
              --v69;
              ++v72;
            }
            while (v71 < v70);
          }
        }
      }
      if (v12 >= v4)
        goto LABEL_66;
      if (__OFSUB__(v12, v10))
        goto LABEL_219;
      if (v12 - v10 >= v168)
        goto LABEL_66;
      if (__OFADD__(v10, v168))
        goto LABEL_220;
      if (v10 + v168 >= v4)
        v74 = v4;
      else
        v74 = v10 + v168;
      if (v74 < v10)
        goto LABEL_221;
      if (v12 == v74)
      {
LABEL_66:
        if (v12 < v10)
          goto LABEL_203;
        goto LABEL_67;
      }
      v170 = v9;
      v172 = v10;
      v128 = v165 + 8 * v12;
      v167 = v74;
      do
      {
        v129 = *(char **)(v11 + 8 * v12);
        v175 = v128;
        while (1)
        {
          v130 = v11;
          v131 = v12;
          v132 = *(void **)v128;
          v133 = (void **)(*(_QWORD *)&v129[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                         + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v134 = (char *)*v133;
          v135 = (CGRect *)&v134[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v136 = v135->origin.x;
          v137 = v135->origin.y;
          v138 = v135->size.width;
          v139 = v135->size.height;
          v140 = v129;
          v141 = v132;
          v142 = v134;
          v183.origin.x = v136;
          v183.origin.y = v137;
          v183.size.width = v138;
          v183.size.height = v139;
          v143 = CGRectGetWidth(v183);
          if ((~*(_QWORD *)&v143 & 0x7FF0000000000000) == 0)
          {
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
            goto LABEL_199;
          }
          if (v143 <= -9.22337204e18)
            goto LABEL_157;
          if (v143 >= 9.22337204e18)
            goto LABEL_158;
          v144 = CGRectGetHeight(*v135);

          if ((~*(_QWORD *)&v144 & 0x7FF0000000000000) == 0)
            goto LABEL_159;
          if (v144 <= -9.22337204e18)
            goto LABEL_160;
          if (v144 >= 9.22337204e18)
            goto LABEL_161;
          v145 = (uint64_t)v143 * (uint64_t)v144;
          if ((unsigned __int128)((uint64_t)v143 * (__int128)(uint64_t)v144) >> 64 != v145 >> 63)
            goto LABEL_162;
          v146 = (void **)(*(_QWORD *)&v141[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                         + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v147 = *v146;
          v148 = (uint64_t)*v146 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v149 = *(double *)v148;
          v150 = *(double *)(v148 + 8);
          v151 = *(double *)(v148 + 16);
          v152 = *(double *)(v148 + 24);
          v153 = v147;
          v184.origin.x = v149;
          v184.origin.y = v150;
          v184.size.width = v151;
          v184.size.height = v152;
          v154 = CGRectGetWidth(v184);
          if ((~*(_QWORD *)&v154 & 0x7FF0000000000000) == 0)
            goto LABEL_163;
          if (v154 <= -9.22337204e18)
            goto LABEL_164;
          if (v154 >= 9.22337204e18)
            goto LABEL_165;
          v155 = CGRectGetHeight(*(CGRect *)v148);

          if ((~*(_QWORD *)&v155 & 0x7FF0000000000000) == 0)
            goto LABEL_166;
          if (v155 <= -9.22337204e18)
            goto LABEL_167;
          if (v155 >= 9.22337204e18)
            goto LABEL_168;
          v156 = (uint64_t)v154 * (uint64_t)v155;
          if ((unsigned __int128)((uint64_t)v154 * (__int128)(uint64_t)v155) >> 64 != v156 >> 63)
            goto LABEL_169;
          if ((double)v145 >= (double)v156)
            break;
          if (!v130)
            goto LABEL_223;
          v12 = v131;
          v11 = v130;
          v157 = *(void **)v128;
          v129 = *(char **)(v128 + 8);
          *(_QWORD *)v128 = v129;
          *(_QWORD *)(v128 + 8) = v157;
          v128 -= 8;
          if (v12 == ++v10)
            goto LABEL_118;
        }
        v12 = v131;
        v11 = v130;
LABEL_118:
        ++v12;
        v10 = v172;
        v128 = v175 + 8;
      }
      while (v12 != v167);
      v12 = v167;
      v9 = v170;
      if (v167 < v172)
        goto LABEL_203;
LABEL_67:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_24971DB80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v76 = *((_QWORD *)v9 + 2);
      v75 = *((_QWORD *)v9 + 3);
      v77 = v76 + 1;
      if (v76 >= v75 >> 1)
        v9 = sub_24971DB80((char *)(v75 > 1), v76 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v77;
      v78 = v9 + 32;
      v79 = &v9[16 * v76 + 32];
      *(_QWORD *)v79 = v10;
      *((_QWORD *)v79 + 1) = v12;
      v174 = v12;
      if (v76)
      {
        while (2)
        {
          v80 = v77 - 1;
          if (v77 >= 4)
          {
            v85 = &v78[16 * v77];
            v86 = *((_QWORD *)v85 - 8);
            v87 = *((_QWORD *)v85 - 7);
            v91 = __OFSUB__(v87, v86);
            v88 = v87 - v86;
            if (v91)
              goto LABEL_188;
            v90 = *((_QWORD *)v85 - 6);
            v89 = *((_QWORD *)v85 - 5);
            v91 = __OFSUB__(v89, v90);
            v83 = v89 - v90;
            v84 = v91;
            if (v91)
              goto LABEL_189;
            v92 = v77 - 2;
            v93 = &v78[16 * v77 - 32];
            v95 = *(_QWORD *)v93;
            v94 = *((_QWORD *)v93 + 1);
            v91 = __OFSUB__(v94, v95);
            v96 = v94 - v95;
            if (v91)
              goto LABEL_191;
            v91 = __OFADD__(v83, v96);
            v97 = v83 + v96;
            if (v91)
              goto LABEL_194;
            if (v97 >= v88)
            {
              v115 = &v78[16 * v80];
              v117 = *(_QWORD *)v115;
              v116 = *((_QWORD *)v115 + 1);
              v91 = __OFSUB__(v116, v117);
              v118 = v116 - v117;
              if (v91)
                goto LABEL_198;
              v108 = v83 < v118;
            }
            else
            {
LABEL_85:
              if ((v84 & 1) != 0)
                goto LABEL_190;
              v92 = v77 - 2;
              v98 = &v78[16 * v77 - 32];
              v100 = *(_QWORD *)v98;
              v99 = *((_QWORD *)v98 + 1);
              v101 = __OFSUB__(v99, v100);
              v102 = v99 - v100;
              v103 = v101;
              if (v101)
                goto LABEL_193;
              v104 = &v78[16 * v80];
              v106 = *(_QWORD *)v104;
              v105 = *((_QWORD *)v104 + 1);
              v91 = __OFSUB__(v105, v106);
              v107 = v105 - v106;
              if (v91)
                goto LABEL_196;
              if (__OFADD__(v102, v107))
                goto LABEL_197;
              if (v102 + v107 < v83)
                goto LABEL_97;
              v108 = v83 < v107;
            }
            if (v108)
              v80 = v92;
          }
          else
          {
            if (v77 == 3)
            {
              v82 = *((_QWORD *)v9 + 4);
              v81 = *((_QWORD *)v9 + 5);
              v91 = __OFSUB__(v81, v82);
              v83 = v81 - v82;
              v84 = v91;
              goto LABEL_85;
            }
            v109 = *((_QWORD *)v9 + 4);
            v110 = *((_QWORD *)v9 + 5);
            v91 = __OFSUB__(v110, v109);
            v102 = v110 - v109;
            v103 = v91;
LABEL_97:
            if ((v103 & 1) != 0)
              goto LABEL_192;
            v111 = &v78[16 * v80];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v91 = __OFSUB__(v112, v113);
            v114 = v112 - v113;
            if (v91)
              goto LABEL_195;
            if (v114 < v102)
              goto LABEL_114;
          }
          v119 = v80 - 1;
          if (v80 - 1 >= v77)
            goto LABEL_170;
          v120 = v11;
          if (!v11)
            goto LABEL_224;
          v121 = v9;
          v122 = &v78[16 * v119];
          v123 = *(_QWORD *)v122;
          v124 = &v78[16 * v80];
          v125 = *((_QWORD *)v124 + 1);
          v126 = v120;
          sub_2496EBD0C((void **)(v120 + 8 * *(_QWORD *)v122), (void **)(v120 + 8 * *(_QWORD *)v124), v120 + 8 * v125, __dst);
          if (v1)
            goto LABEL_154;
          if (v125 < v123)
            goto LABEL_171;
          if (v80 > *((_QWORD *)v121 + 2))
            goto LABEL_172;
          *(_QWORD *)v122 = v123;
          *(_QWORD *)&v78[16 * v119 + 8] = v125;
          v127 = *((_QWORD *)v121 + 2);
          if (v80 >= v127)
            goto LABEL_173;
          v9 = v121;
          v77 = v127 - 1;
          memmove(&v78[16 * v80], v124 + 16, 16 * (v127 - 1 - v80));
          *((_QWORD *)v121 + 2) = v127 - 1;
          v11 = v126;
          if (v127 <= 2)
            goto LABEL_114;
          continue;
        }
      }
      v77 = 1;
LABEL_114:
      v10 = v174;
      v4 = v176;
      if (v174 >= v176)
      {
        v2 = v1;
        if (v77 < 2)
        {
LABEL_154:
          swift_bridgeObjectRelease();
          *(_QWORD *)((v178 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_24972CCE4();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_142:
        v158 = *v164;
        while (1)
        {
          v159 = v77 - 2;
          if (v77 < 2)
            break;
          if (!v158)
            goto LABEL_226;
          v160 = *(_QWORD *)&v9[16 * v159 + 32];
          v161 = *(_QWORD *)&v9[16 * v77 + 24];
          sub_2496EBD0C((void **)(v158 + 8 * v160), (void **)(v158 + 8 * *(_QWORD *)&v9[16 * v77 + 16]), v158 + 8 * v161, __dst);
          if (v2)
            goto LABEL_154;
          if (v161 < v160)
            goto LABEL_200;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_24971DDC8((uint64_t)v9);
          if (v159 >= *((_QWORD *)v9 + 2))
            goto LABEL_201;
          v162 = &v9[16 * v159 + 32];
          *(_QWORD *)v162 = v160;
          *((_QWORD *)v162 + 1) = v161;
          v163 = *((_QWORD *)v9 + 2);
          if (v77 > v163)
            goto LABEL_202;
          memmove(&v9[16 * v77 + 16], &v9[16 * v77 + 32], 16 * (v163 - v77));
          *((_QWORD *)v9 + 2) = v163 - 1;
          v77 = v163 - 1;
          if (v163 <= 2)
            goto LABEL_154;
        }
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
        goto LABEL_206;
      }
    }
  }
  if (v4 < 0)
    goto LABEL_204;
  if (v4)
    sub_2496EB100(0, v4, 1, a1);
}

void sub_2496EAD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void **v9;
  char *v10;
  void **v11;
  void *v12;
  CGFloat *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double MinY;
  CGRect *v23;
  double v24;
  uint64_t v25;
  BOOL v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double MinX;
  double v34;
  char *v35;
  uint64_t v38;
  uint64_t v39;
  CGRect v40;

  if (a3 != a2)
  {
    v4 = a3;
    v39 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(char **)(v39 + 8 * v4);
    v7 = a1;
    v38 = v5;
    while (1)
    {
      v8 = *(char **)v5;
      v9 = (void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v10 = (char *)*v9;
      v11 = (void **)(*(_QWORD *)&v8[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v12 = *v11;
      v13 = (CGFloat *)&v10[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v18 = v6;
      v19 = v8;
      v20 = v10;
      v21 = v12;
      v40.origin.x = v14;
      v40.origin.y = v15;
      v40.size.width = v16;
      v40.size.height = v17;
      MinY = CGRectGetMinY(v40);
      if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        break;
      if (MinY <= -9.22337204e18)
        goto LABEL_35;
      if (MinY >= 9.22337204e18)
        goto LABEL_36;
      v23 = (CGRect *)&v21[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v24 = CGRectGetMinY(*v23);
      if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
        goto LABEL_37;
      if (v24 <= -9.22337204e18)
        goto LABEL_38;
      if (v24 >= 9.22337204e18)
        goto LABEL_39;
      v25 = (uint64_t)MinY - (uint64_t)v24;
      if (__OFSUB__((uint64_t)MinY, (uint64_t)v24))
        goto LABEL_40;
      if (v25 < 0)
      {
        v26 = __OFSUB__(0, v25);
        v25 = (uint64_t)v24 - (uint64_t)MinY;
        if (v26)
          goto LABEL_53;
      }
      v27 = *v13;
      v28 = *((_QWORD *)v13 + 1);
      v29 = *((_QWORD *)v13 + 2);
      v30 = *((_QWORD *)v13 + 3);
      if (v25 > 19)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v27);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_42;
        if (MinX <= -9.22337204e18)
          goto LABEL_44;
        if (MinX >= 9.22337204e18)
          goto LABEL_46;
        v34 = CGRectGetMinX(*v23);

        if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
          goto LABEL_48;
        if (v34 <= -9.22337204e18)
          goto LABEL_50;
        if (v34 >= 9.22337204e18)
          goto LABEL_52;

        if ((uint64_t)v34 < (uint64_t)MinX)
          goto LABEL_4;
      }
      else
      {
        v31 = CGRectGetMinY(*(CGRect *)&v27);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          goto LABEL_41;
        if (v31 <= -9.22337204e18)
          goto LABEL_43;
        if (v31 >= 9.22337204e18)
          goto LABEL_45;
        v32 = CGRectGetMinY(*v23);

        if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
          goto LABEL_47;
        if (v32 <= -9.22337204e18)
          goto LABEL_49;
        if (v32 >= 9.22337204e18)
          goto LABEL_51;

        if ((uint64_t)v32 < (uint64_t)v31)
        {
LABEL_4:
          ++v4;
          v5 = v38 + 8;
          if (v4 == a2)
            return;
          goto LABEL_5;
        }
      }
      if (!v39)
        goto LABEL_54;
      v35 = *(char **)v5;
      v6 = *(char **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v35;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
  }
}

void sub_2496EB100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  char *v16;
  char *v17;
  id v18;
  double Width;
  double Height;
  uint64_t v21;
  void **v22;
  char *v23;
  CGRect *v24;
  CGFloat x;
  CGFloat y;
  CGFloat v27;
  CGFloat v28;
  char *v29;
  double v30;
  double v31;
  uint64_t v32;
  void *v33;
  uint64_t v36;
  uint64_t v37;
  CGRect v38;
  CGRect v39;

  if (a3 != a2)
  {
    v4 = a3;
    v37 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(char **)(v37 + 8 * v4);
    v7 = a1;
    v36 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = (void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                   + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v10 = *v9;
      v11 = (uint64_t)*v9 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v12 = *(double *)v11;
      v13 = *(double *)(v11 + 8);
      v14 = *(double *)(v11 + 16);
      v15 = *(double *)(v11 + 24);
      v16 = v6;
      v17 = v8;
      v18 = v10;
      v38.origin.x = v12;
      v38.origin.y = v13;
      v38.size.width = v14;
      v38.size.height = v15;
      Width = CGRectGetWidth(v38);
      if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
        break;
      if (Width <= -9.22337204e18)
        goto LABEL_25;
      if (Width >= 9.22337204e18)
        goto LABEL_26;
      Height = CGRectGetHeight(*(CGRect *)v11);

      if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
        goto LABEL_27;
      if (Height <= -9.22337204e18)
        goto LABEL_28;
      if (Height >= 9.22337204e18)
        goto LABEL_29;
      v21 = (uint64_t)Width * (uint64_t)Height;
      if ((unsigned __int128)((uint64_t)Width * (__int128)(uint64_t)Height) >> 64 != v21 >> 63)
        goto LABEL_30;
      v22 = (void **)(*(_QWORD *)&v17[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v23 = (char *)*v22;
      v24 = (CGRect *)&v23[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      x = v24->origin.x;
      y = v24->origin.y;
      v27 = v24->size.width;
      v28 = v24->size.height;
      v29 = v23;
      v39.origin.x = x;
      v39.origin.y = y;
      v39.size.width = v27;
      v39.size.height = v28;
      v30 = CGRectGetWidth(v39);
      if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
        goto LABEL_31;
      if (v30 <= -9.22337204e18)
        goto LABEL_32;
      if (v30 >= 9.22337204e18)
        goto LABEL_33;
      v31 = CGRectGetHeight(*v24);

      if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
        goto LABEL_34;
      if (v31 <= -9.22337204e18)
        goto LABEL_35;
      if (v31 >= 9.22337204e18)
        goto LABEL_36;
      v32 = (uint64_t)v30 * (uint64_t)v31;
      if ((unsigned __int128)((uint64_t)v30 * (__int128)(uint64_t)v31) >> 64 != v32 >> 63)
        goto LABEL_37;
      if ((double)v21 < (double)v32)
      {
        if (!v37)
          goto LABEL_38;
        v33 = *(void **)v5;
        v6 = *(char **)(v5 + 8);
        *(_QWORD *)v5 = v6;
        *(_QWORD *)(v5 + 8) = v33;
        v5 -= 8;
        if (v4 != ++v7)
          continue;
      }
      ++v4;
      v5 = v36 + 8;
      if (v4 == a2)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
}

uint64_t sub_2496EB450(void **__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  unint64_t v5;
  void **v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void **v16;
  char *v17;
  void **v18;
  char *v19;
  void **v20;
  void *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  double v31;
  CGRect *v32;
  double v33;
  uint64_t v34;
  BOOL v35;
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  void **v42;
  void **v43;
  unint64_t v44;
  double v45;
  double v46;
  void **v47;
  BOOL v48;
  void **v49;
  void **v50;
  char *v51;
  char *v52;
  char *v53;
  void **v54;
  char *v55;
  void **v56;
  void *v57;
  CGFloat *v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  double MinY;
  CGRect *v68;
  double v69;
  uint64_t v70;
  CGFloat v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double MinX;
  double v76;
  void **v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t result;
  void **v81;
  unint64_t v82;
  void **v83;
  void **v84;
  void **v85;
  void **v86;
  void **v87;
  void **v88;
  void **v89;
  void **v90;
  CGRect v91;
  CGRect v92;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v90 = __src;
  v89 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v49 = &v4[v13];
      v88 = v49;
      v90 = v6;
      if (v7 >= v6 || v11 < 8)
      {
LABEL_88:
        sub_24971DC78(&v90, &v89, &v88);
        return 1;
      }
      v50 = v6;
      v87 = v7;
      v81 = v4;
      while (1)
      {
        v83 = v49;
        v85 = v6;
        v52 = (char *)*--v49;
        v51 = v52;
        v53 = (char *)*--v50;
        v54 = (void **)(*(_QWORD *)&v51[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v55 = (char *)*v54;
        v56 = (void **)(*(_QWORD *)&v53[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v57 = *v56;
        v58 = (CGFloat *)&v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v59 = *v58;
        v60 = v58[1];
        v61 = v58[2];
        v62 = v58[3];
        v63 = v51;
        v64 = v53;
        v65 = v55;
        v66 = v57;
        v92.origin.x = v59;
        v92.origin.y = v60;
        v92.size.width = v61;
        v92.size.height = v62;
        MinY = CGRectGetMinY(v92);
        if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
          break;
        if (MinY <= -9.22337204e18)
          goto LABEL_90;
        if (MinY >= 9.22337204e18)
          goto LABEL_91;
        v68 = (CGRect *)&v66[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v69 = CGRectGetMinY(*v68);
        if ((~*(_QWORD *)&v69 & 0x7FF0000000000000) == 0)
          goto LABEL_92;
        if (v69 <= -9.22337204e18)
          goto LABEL_93;
        if (v69 >= 9.22337204e18)
          goto LABEL_94;
        v70 = (uint64_t)MinY - (uint64_t)v69;
        if (__OFSUB__((uint64_t)MinY, (uint64_t)v69))
          goto LABEL_95;
        if (v70 < 0)
        {
          v35 = __OFSUB__(0, v70);
          v70 = (uint64_t)v69 - (uint64_t)MinY;
          if (v35)
            goto LABEL_115;
        }
        v71 = *v58;
        v72 = *((_QWORD *)v58 + 1);
        v73 = *((_QWORD *)v58 + 2);
        v74 = *((_QWORD *)v58 + 3);
        if (v70 > 19)
        {
          MinX = CGRectGetMinX(*(CGRect *)&v71);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_104;
          if (MinX <= -9.22337204e18)
            goto LABEL_106;
          if (MinX >= 9.22337204e18)
            goto LABEL_108;
          v76 = CGRectGetMinX(*v68);

          if ((~*(_QWORD *)&v76 & 0x7FF0000000000000) == 0)
            goto LABEL_110;
          if (v76 <= -9.22337204e18)
            goto LABEL_112;
          if (v76 >= 9.22337204e18)
            goto LABEL_114;
        }
        else
        {
          MinX = CGRectGetMinY(*(CGRect *)&v71);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_103;
          if (MinX <= -9.22337204e18)
            goto LABEL_105;
          if (MinX >= 9.22337204e18)
            goto LABEL_107;
          v76 = CGRectGetMinY(*v68);

          if ((~*(_QWORD *)&v76 & 0x7FF0000000000000) == 0)
            goto LABEL_109;
          if (v76 <= -9.22337204e18)
            goto LABEL_111;
          if (v76 >= 9.22337204e18)
            goto LABEL_113;
        }

        v77 = (void **)(v5 - 8);
        if ((uint64_t)v76 >= (uint64_t)MinX)
        {
          v79 = (unint64_t)v87;
          v78 = (unint64_t)v81;
          if ((void **)v5 != v85 || v77 >= v85)
            *v77 = *v50;
          v90 = v50;
          v49 = v83;
        }
        else
        {
          v88 = v49;
          v78 = (unint64_t)v81;
          v50 = v85;
          v79 = (unint64_t)v87;
          if (v5 < (unint64_t)v83 || v77 >= v83 || (void **)v5 != v83)
            *v77 = *v49;
        }
        if ((unint64_t)v50 > v79)
        {
          v6 = v50;
          v5 -= 8;
          if ((unint64_t)v49 > v78)
            continue;
        }
        goto LABEL_88;
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v84 = &v4[v10];
    v88 = v84;
    if ((unint64_t)v6 < v5 && v8 >= 8)
    {
      v82 = v5;
      while (1)
      {
        v86 = v7;
        v14 = v6;
        v15 = *v6;
        v16 = v4;
        v17 = (char *)*v4;
        v18 = (void **)(*(_QWORD *)((char *)*v6
                                  + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v19 = (char *)*v18;
        v20 = (void **)(*(_QWORD *)&v17[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v21 = *v20;
        v22 = (CGFloat *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        v27 = v15;
        v28 = v17;
        v29 = v19;
        v30 = v21;
        v91.origin.x = v23;
        v91.origin.y = v24;
        v91.size.width = v25;
        v91.size.height = v26;
        v31 = CGRectGetMinY(v91);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          goto LABEL_96;
        if (v31 <= -9.22337204e18)
          goto LABEL_97;
        if (v31 >= 9.22337204e18)
          goto LABEL_98;
        v32 = (CGRect *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v33 = CGRectGetMinY(*v32);
        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_99;
        if (v33 <= -9.22337204e18)
          goto LABEL_100;
        if (v33 >= 9.22337204e18)
          goto LABEL_101;
        v34 = (uint64_t)v31 - (uint64_t)v33;
        if (__OFSUB__((uint64_t)v31, (uint64_t)v33))
          goto LABEL_102;
        if (v34 < 0)
        {
          v35 = __OFSUB__(0, v34);
          v34 = (uint64_t)v33 - (uint64_t)v31;
          if (v35)
            goto LABEL_128;
        }
        v36 = *v22;
        v37 = *((_QWORD *)v22 + 1);
        v38 = *((_QWORD *)v22 + 2);
        v39 = *((_QWORD *)v22 + 3);
        if (v34 > 19)
        {
          v45 = CGRectGetMinX(*(CGRect *)&v36);
          if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
            goto LABEL_117;
          if (v45 <= -9.22337204e18)
            goto LABEL_119;
          if (v45 >= 9.22337204e18)
            goto LABEL_120;
          v46 = CGRectGetMinX(*v32);

          if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
            goto LABEL_123;
          if (v46 <= -9.22337204e18)
            goto LABEL_125;
          if (v46 >= 9.22337204e18)
            goto LABEL_127;

          if ((uint64_t)v46 < (uint64_t)v45)
          {
LABEL_41:
            v47 = v16;
            v43 = v86;
            v48 = v86 == v16;
            v44 = v82;
            if (!v48)
              *v86 = *v47;
            v4 = v47 + 1;
            v89 = v4;
            v42 = v14;
            goto LABEL_44;
          }
        }
        else
        {
          v40 = CGRectGetMinY(*(CGRect *)&v36);
          if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
            goto LABEL_116;
          if (v40 <= -9.22337204e18)
            goto LABEL_118;
          if (v40 >= 9.22337204e18)
            goto LABEL_121;
          v41 = CGRectGetMinY(*v32);

          if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) == 0)
            goto LABEL_122;
          if (v41 <= -9.22337204e18)
            goto LABEL_124;
          if (v41 >= 9.22337204e18)
            goto LABEL_126;

          if ((uint64_t)v41 < (uint64_t)v40)
            goto LABEL_41;
        }
        v42 = v14 + 1;
        v43 = v86;
        v4 = v16;
        v44 = v82;
        if (v86 < v14 || v86 >= v42 || v86 != v14)
          *v86 = *v14;
LABEL_44:
        v7 = v43 + 1;
        if (v4 < v84)
        {
          v6 = v42;
          if ((unint64_t)v42 < v44)
            continue;
        }
        v90 = v7;
        goto LABEL_88;
      }
    }
    goto LABEL_88;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2496EBD0C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  void **v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  char *v15;
  void **v16;
  void *v17;
  void **v18;
  void *v19;
  uint64_t v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  char *v25;
  char *v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  void **v31;
  char *v32;
  CGRect *v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  char *v38;
  double v39;
  double v40;
  uint64_t v41;
  void **v42;
  void **v43;
  void **v44;
  void **v45;
  void **v46;
  char *v47;
  char *v48;
  void *v49;
  void **v50;
  void *v51;
  uint64_t v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  char *v57;
  char *v58;
  id v59;
  double Width;
  double Height;
  uint64_t v62;
  void **v63;
  char *v64;
  CGRect *v65;
  CGFloat x;
  CGFloat y;
  CGFloat v68;
  CGFloat v69;
  char *v70;
  double v71;
  double v72;
  uint64_t v73;
  void **v74;
  uint64_t result;
  void **v76;
  void **v77;
  void **v78;
  void **v80;
  void **v81;
  void **v82;
  void **v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v83 = __src;
  v82 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
        memmove(__dst, a2, 8 * v12);
      v44 = &v4[v12];
      v81 = v44;
      v83 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v45 = (void **)(a3 - 8);
        v46 = v5;
        v77 = v4;
        v78 = v6;
        while (1)
        {
          v80 = v44;
          v48 = (char *)*--v44;
          v47 = v48;
          v49 = *--v46;
          v50 = (void **)(*(_QWORD *)&v47[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v51 = *v50;
          v52 = (uint64_t)*v50 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v53 = *(double *)v52;
          v54 = *(double *)(v52 + 8);
          v55 = *(double *)(v52 + 16);
          v56 = *(double *)(v52 + 24);
          v57 = v47;
          v58 = v49;
          v59 = v51;
          v86.origin.x = v53;
          v86.origin.y = v54;
          v86.size.width = v55;
          v86.size.height = v56;
          Width = CGRectGetWidth(v86);
          if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
            break;
          if (Width <= -9.22337204e18)
            goto LABEL_72;
          if (Width >= 9.22337204e18)
            goto LABEL_73;
          Height = CGRectGetHeight(*(CGRect *)v52);

          if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
            goto LABEL_74;
          if (Height <= -9.22337204e18)
            goto LABEL_75;
          if (Height >= 9.22337204e18)
            goto LABEL_76;
          v62 = (uint64_t)Width * (uint64_t)Height;
          if ((unsigned __int128)((uint64_t)Width * (__int128)(uint64_t)Height) >> 64 != v62 >> 63)
            goto LABEL_77;
          v63 = (void **)(*(_QWORD *)&v58[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v64 = (char *)*v63;
          v65 = (CGRect *)&v64[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          x = v65->origin.x;
          y = v65->origin.y;
          v68 = v65->size.width;
          v69 = v65->size.height;
          v70 = v64;
          v87.origin.x = x;
          v87.origin.y = y;
          v87.size.width = v68;
          v87.size.height = v69;
          v71 = CGRectGetWidth(v87);
          if ((~*(_QWORD *)&v71 & 0x7FF0000000000000) == 0)
            goto LABEL_78;
          if (v71 <= -9.22337204e18)
            goto LABEL_79;
          if (v71 >= 9.22337204e18)
            goto LABEL_80;
          v72 = CGRectGetHeight(*v65);

          if ((~*(_QWORD *)&v72 & 0x7FF0000000000000) == 0)
            goto LABEL_81;
          if (v72 <= -9.22337204e18)
            goto LABEL_82;
          if (v72 >= 9.22337204e18)
            goto LABEL_83;
          v73 = (uint64_t)v71 * (uint64_t)v72;
          if ((unsigned __int128)((uint64_t)v71 * (__int128)(uint64_t)v72) >> 64 != v73 >> 63)
            goto LABEL_84;
          v74 = v45 + 1;
          if ((double)v62 >= (double)v73)
          {
            v81 = v44;
            if (v74 < v80 || v45 >= v80 || v74 != v80)
              *v45 = *v44;
            v46 = v5;
          }
          else
          {
            v44 = v80;
            if (v74 != v5 || v45 >= v5)
              *v45 = *v46;
            v83 = v46;
          }
          if (v46 > v78)
          {
            --v45;
            v5 = v46;
            if (v44 > v77)
              continue;
          }
          goto LABEL_70;
        }
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
LABEL_70:
      sub_24971DC78(&v83, &v82, &v81);
      return 1;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
      memmove(__dst, __src, 8 * v9);
    v76 = &v4[v9];
    v81 = v76;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v13 = v6;
        v14 = v5;
        v15 = (char *)*v5;
        v16 = v4;
        v17 = *v4;
        v18 = (void **)(*(_QWORD *)&v15[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v19 = *v18;
        v20 = (uint64_t)*v18 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v21 = *(double *)v20;
        v22 = *(double *)(v20 + 8);
        v23 = *(double *)(v20 + 16);
        v24 = *(double *)(v20 + 24);
        v25 = v15;
        v26 = v17;
        v27 = v19;
        v84.origin.x = v21;
        v84.origin.y = v22;
        v84.size.width = v23;
        v84.size.height = v24;
        v28 = CGRectGetWidth(v84);
        if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
          break;
        if (v28 <= -9.22337204e18)
          goto LABEL_86;
        if (v28 >= 9.22337204e18)
          goto LABEL_87;
        v29 = CGRectGetHeight(*(CGRect *)v20);

        if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
          goto LABEL_88;
        if (v29 <= -9.22337204e18)
          goto LABEL_89;
        if (v29 >= 9.22337204e18)
          goto LABEL_90;
        v30 = (uint64_t)v28 * (uint64_t)v29;
        if ((unsigned __int128)((uint64_t)v28 * (__int128)(uint64_t)v29) >> 64 != v30 >> 63)
          goto LABEL_91;
        v31 = (void **)(*(_QWORD *)&v26[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                      + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v32 = (char *)*v31;
        v33 = (CGRect *)&v32[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v34 = v33->origin.x;
        v35 = v33->origin.y;
        v36 = v33->size.width;
        v37 = v33->size.height;
        v38 = v32;
        v85.origin.x = v34;
        v85.origin.y = v35;
        v85.size.width = v36;
        v85.size.height = v37;
        v39 = CGRectGetWidth(v85);
        if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) == 0)
          goto LABEL_92;
        if (v39 <= -9.22337204e18)
          goto LABEL_93;
        if (v39 >= 9.22337204e18)
          goto LABEL_94;
        v40 = CGRectGetHeight(*v33);

        if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
          goto LABEL_95;
        if (v40 <= -9.22337204e18)
          goto LABEL_96;
        if (v40 >= 9.22337204e18)
          goto LABEL_97;
        v41 = (uint64_t)v39 * (uint64_t)v40;
        if ((unsigned __int128)((uint64_t)v39 * (__int128)(uint64_t)v40) >> 64 != v41 >> 63)
          goto LABEL_98;
        if ((double)v30 >= (double)v41)
        {
          v43 = v13;
          if (v13 != v16)
            *v13 = *v16;
          v4 = v16 + 1;
          v82 = v16 + 1;
          v42 = v14;
        }
        else
        {
          v42 = v14 + 1;
          v43 = v13;
          v4 = v16;
          if (v13 < v14 || v13 >= v42 || v13 != v14)
            *v13 = *v14;
        }
        v6 = v43 + 1;
        if (v4 < v76)
        {
          v5 = v42;
          if ((unint64_t)v42 < a3)
            continue;
        }
        v83 = v6;
        goto LABEL_70;
      }
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    goto LABEL_70;
  }
LABEL_99:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2496EC4CC(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  BOOL v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void **v32;
  char *v33;
  void **v34;
  void *v35;
  CGRect *v36;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char *v41;
  char *v42;
  double MaxY;
  CGRect *v44;
  double v45;
  double v46;
  double MinY;
  double v48;
  double v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  unint64_t v75;
  _QWORD *v76;
  char *v77;
  unint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90[3];
  uint64_t v91;
  CGRect v92;

  v1 = a1;
  v2 = MEMORY[0x24BEE4AF8];
  v91 = MEMORY[0x24BEE4AF8];
  v84 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_119:
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v86 = v1;
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_120;
    goto LABEL_28;
  }
  v4 = 0;
  v2 = v1 & 0xC000000000000001;
  v5 = v1 & 0xFFFFFFFFFFFFFF8;
  v6 = v1 + 32;
  v1 = 0x257879000uLL;
  do
  {
    while (1)
    {
      if (v2)
      {
        v7 = (char *)MEMORY[0x24BCF6CE8](v4, v86);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v5 + 16))
          goto LABEL_115;
        v7 = (char *)*(id *)(v6 + 8 * v4);
      }
      v8 = v7;
      v9 = __OFADD__(v4++, 1);
      if (v9)
      {
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      if (qword_257879BA8 != -1)
        swift_once();
      v10 = (_QWORD *)qword_25787EB38;
      v11 = (_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v12 = v10[2];
      if (v12)
        break;
LABEL_5:

      if (v4 == v3)
        goto LABEL_25;
    }
    v13 = *(_QWORD *)(*v11 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
    if (v10[4] != v13)
    {
      if (v12 == 1)
        goto LABEL_5;
      if (v10[5] != v13)
      {
        if (v12 != 2)
        {
          v14 = 6;
          while (1)
          {
            v15 = v14 - 3;
            if (__OFADD__(v14 - 4, 1))
              goto LABEL_113;
            if (v10[v14] == v13)
              goto LABEL_7;
            ++v14;
            if (v15 == v12)
              goto LABEL_5;
          }
        }
        goto LABEL_5;
      }
    }
LABEL_7:
    sub_24972D020();
    sub_24972D044();
    sub_24972D050();
    sub_24972D02C();
  }
  while (v4 != v3);
LABEL_25:
  v1 = v86;
  swift_bridgeObjectRelease();
  v16 = v91;
  v2 = MEMORY[0x24BEE4AF8];
  if (v91 < 0)
  {
LABEL_120:
    swift_bridgeObjectRetain();
    v17 = sub_24972D0BC();
    swift_release();
    if (!v17)
      return swift_release();
LABEL_30:
    v18 = 0;
    v82 = v16;
    v83 = v16 & 0xC000000000000001;
    v88 = v1 & 0xFFFFFFFFFFFFFF8;
    v80 = v16 + 32;
    v87 = v1 & 0xC000000000000001;
    v81 = v17;
    while (2)
    {
      if (v83)
      {
        v19 = (char *)MEMORY[0x24BCF6CE8](v18, v16);
      }
      else
      {
        if (v18 >= *(_QWORD *)(v16 + 16))
          goto LABEL_118;
        v19 = (char *)*(id *)(v80 + 8 * v18);
      }
      v20 = v19;
      v9 = __OFADD__(v18, 1);
      v21 = v18 + 1;
      if (v9)
        goto LABEL_114;
      v85 = v21;
      v90[0] = v2;
      if (v84)
      {
        swift_bridgeObjectRetain();
        v51 = v20;
        v22 = sub_24972D0BC();
        v89 = v20;
        if (v22)
        {
LABEL_39:
          v24 = 0;
          v25 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
          while (1)
          {
            if (v87)
            {
              v26 = (char *)MEMORY[0x24BCF6CE8](v24, v1);
            }
            else
            {
              if (v24 >= *(_QWORD *)(v88 + 16))
                goto LABEL_109;
              v26 = (char *)*(id *)(v1 + 8 * v24 + 32);
            }
            v27 = v26;
            v2 = v24 + 1;
            if (__OFADD__(v24, 1))
              break;
            v28 = *(_QWORD *)&v26[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection];
            v29 = (_QWORD *)(v28 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            v30 = *(_QWORD *)(*v29 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
            if (v30 == 10 || v30 == 4)
            {
              v32 = (void **)(v28 + OBJC_IVAR___UIObjectCompat_boundingBox);
              swift_beginAccess();
              v33 = (char *)*v32;
              v34 = (void **)(*(_QWORD *)&v89[v25] + OBJC_IVAR___UIObjectCompat_boundingBox);
              swift_beginAccess();
              v35 = *v34;
              v36 = (CGRect *)&v33[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              x = v36->origin.x;
              y = v36->origin.y;
              width = v36->size.width;
              height = v36->size.height;
              v41 = v33;
              v42 = v35;
              v92.origin.x = x;
              v92.origin.y = y;
              v92.size.width = width;
              v92.size.height = height;
              MaxY = CGRectGetMaxY(v92);
              v44 = (CGRect *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              v45 = CGRectGetMaxY(*v44);
              if (v45 >= MaxY)
                v46 = MaxY;
              else
                v46 = v45;
              MinY = CGRectGetMinY(*v36);
              v48 = CGRectGetMinY(*v44);

              if (MinY > v48)
                v49 = MinY;
              else
                v49 = v48;
              if (v46 - v49 <= 0.0)
              {

              }
              else
              {
                sub_24972D020();
                sub_24972D044();
                sub_24972D050();
                sub_24972D02C();
              }
              v1 = v86;
            }
            else
            {

            }
            ++v24;
            if (v2 == v22)
            {
              v50 = v90[0];
              v2 = MEMORY[0x24BEE4AF8];
              v20 = v89;
              goto LABEL_64;
            }
          }
          __break(1u);
LABEL_109:
          __break(1u);
          goto LABEL_110;
        }
      }
      else
      {
        v22 = *(_QWORD *)(v88 + 16);
        swift_bridgeObjectRetain();
        v23 = v20;
        v89 = v20;
        if (v22)
          goto LABEL_39;
      }
      v50 = v2;
LABEL_64:
      swift_bridgeObjectRelease();

      if (v50 < 0 || (v50 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v55 = sub_24972D0BC();
        swift_release();
        if (!v55)
          goto LABEL_71;
        v56 = v20;
        v57 = swift_retain();
        v53 = sub_2496F13D8(v57);
        swift_release();
LABEL_68:
        v90[0] = (unint64_t)v53;
        v1 = v20;
        sub_2496E33D4((uint64_t *)v90, (void *)v1);
        swift_release();

        v54 = v90[0];
      }
      else
      {
        if (*(_QWORD *)(v50 + 16))
        {
          v52 = v20;
          swift_retain();
          v53 = (_QWORD *)v50;
          goto LABEL_68;
        }
LABEL_71:
        swift_release();
        v54 = v2;
      }
      v90[0] = v2;
      if (v54 >> 62)
      {
        swift_bridgeObjectRetain();
        v58 = sub_24972D0BC();
        if (!v58)
          goto LABEL_86;
LABEL_74:
        if (v58 < 1)
          goto LABEL_116;
        v59 = 0;
        v2 = v54 & 0xC000000000000001;
        do
        {
          if (v2)
            v60 = (char *)MEMORY[0x24BCF6CE8](v59, v54);
          else
            v60 = (char *)*(id *)(v54 + 8 * v59 + 32);
          v1 = (unint64_t)v60;
          v61 = (_QWORD *)(*(_QWORD *)&v60[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                         + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          if (*(_QWORD *)(*v61 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
          {
            sub_24972D020();
            sub_24972D044();
            sub_24972D050();
            sub_24972D02C();
          }
          else
          {

          }
          ++v59;
        }
        while (v58 != v59);
        swift_bridgeObjectRelease();
        v62 = v90[0];
        if ((v90[0] & 0x8000000000000000) != 0)
          goto LABEL_94;
LABEL_87:
        if ((v62 & 0x4000000000000000) != 0)
          goto LABEL_94;
        if (*(uint64_t *)(v62 + 16) > 0)
          goto LABEL_89;
LABEL_95:
        swift_release();
        if (v58)
          goto LABEL_96;
      }
      else
      {
        v58 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v58)
          goto LABEL_74;
LABEL_86:
        swift_bridgeObjectRelease();
        v62 = MEMORY[0x24BEE4AF8];
        if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) == 0)
          goto LABEL_87;
LABEL_94:
        swift_bridgeObjectRetain();
        v70 = sub_24972D0BC();
        swift_release();
        if (v70 <= 0)
          goto LABEL_95;
LABEL_89:
        if ((v62 & 0xC000000000000001) != 0)
        {
          v63 = (id)MEMORY[0x24BCF6CE8](0, v62);
        }
        else
        {
          if (!*(_QWORD *)(v62 + 16))
            goto LABEL_117;
          v63 = *(id *)(v62 + 32);
        }
        v1 = (unint64_t)v63;
        swift_release();
        v64 = (_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                       + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v65 = (uint64_t *)(*v64 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        v66 = *v65;
        v67 = v65[1];
        swift_bridgeObjectRetain();

        v68 = (_QWORD *)(*(_QWORD *)&v89[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                       + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v69 = (_QWORD *)(*v68 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        *v69 = v66;
        v69[1] = v67;
        swift_bridgeObjectRelease();
        if (v58)
        {
LABEL_96:
          v71 = 0;
          v2 = v54 & 0xC000000000000001;
          v72 = &v89[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
          v73 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
          while (1)
          {
            if (v2)
            {
              v74 = (id)MEMORY[0x24BCF6CE8](v71, v54);
            }
            else
            {
              if (v71 >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_111;
              v74 = *(id *)(v54 + 8 * v71 + 32);
            }
            v1 = (unint64_t)v74;
            v75 = v71 + 1;
            if (__OFADD__(v71, 1))
              break;
            swift_beginAccess();
            v1 = (unint64_t)(id)v1;
            MEMORY[0x24BCF69D0]();
            if (*(_QWORD *)((*(_QWORD *)v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v72 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
              sub_24972CCF0();
            sub_24972CD08();
            sub_24972CCE4();
            swift_endAccess();
            if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection))
            {
              *(_QWORD *)(v1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection) = v89;
              v76 = (_QWORD *)(*(_QWORD *)&v89[v73] + OBJC_IVAR___UIObjectCompat_detection);
              v77 = v89;
              swift_beginAccess();
              v78 = v1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType;
              *(_QWORD *)v78 = *(_QWORD *)(*v76 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
              *(_BYTE *)(v78 + 8) = 0;
            }

            ++v71;
            if (v75 == v58)
              goto LABEL_31;
          }
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
          goto LABEL_112;
        }
      }
LABEL_31:

      swift_bridgeObjectRelease();
      v16 = v82;
      v18 = v85;
      v1 = v86;
      v2 = MEMORY[0x24BEE4AF8];
      if (v85 == v81)
        return swift_release();
      continue;
    }
  }
LABEL_28:
  if ((v16 & 0x4000000000000000) != 0)
    goto LABEL_120;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
    goto LABEL_30;
  return swift_release();
}

uint64_t sub_2496ECF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  uint64_t j;
  char *v10;
  _QWORD *v11;
  char *v12;
  uint64_t k;
  _QWORD *v14;
  uint64_t m;
  char *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t n;
  char *v25;
  char *v26;
  void **v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = MEMORY[0x24BEE4AF8];
  v55 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v1 = a1;
    else
      v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = sub_24972D0BC();
    if (v6)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease();
    v54 = v5;
    v3 = v5;
    goto LABEL_31;
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_30;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_67;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v6; ++i)
    {
      v8 = (_QWORD *)(*(_QWORD *)(MEMORY[0x24BCF6CE8](i, a1)
                                + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                    + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v8 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 7)
      {
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v6; ++j)
    {
      v10 = *(char **)(a1 + 8 * j + 32);
      v11 = (_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v11 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 7)
      {
        v12 = v10;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
    }
  }
  swift_bridgeObjectRelease();
  v3 = v55;
  v54 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    for (k = 0; k != v6; ++k)
    {
      v14 = (_QWORD *)(*(_QWORD *)(MEMORY[0x24BCF6CE8](k, a1)
                                 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v14 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    v3 = v55;
  }
  else
  {
    swift_bridgeObjectRetain();
    for (m = 0; m != v6; ++m)
    {
      v16 = *(char **)(a1 + 8 * m + 32);
      v17 = (_QWORD *)(*(_QWORD *)&v16[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        v18 = v16;
        sub_24972D020();
        sub_24972D044();
        v3 = v55;
        sub_24972D050();
        sub_24972D02C();
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_31:
  v1 = v54;
  if (v54 < 0 || (v54 & 0x4000000000000000) != 0)
    goto LABEL_64;
  v2 = *(_QWORD *)(v54 + 16);
  while (v2)
  {
    if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
    {
LABEL_67:
      swift_bridgeObjectRetain();
      v19 = sub_24972D0BC();
      swift_release();
    }
    else
    {
      v19 = *(_QWORD *)(v3 + 16);
    }
    v20 = 0;
    v47 = v1;
    v48 = v1 & 0xC000000000000001;
    v45 = v1 + 32;
    v46 = v2;
    v52 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v48)
      {
        v21 = (char *)MEMORY[0x24BCF6CE8](v20, v1);
      }
      else
      {
        if (v20 >= *(_QWORD *)(v1 + 16))
          goto LABEL_63;
        v21 = (char *)*(id *)(v45 + 8 * v20);
      }
      v22 = v21;
      if (__OFADD__(v20++, 1))
        break;
      if (v19)
      {
        if (v19 < 1)
          goto LABEL_62;
        v49 = v20;
        v53 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
        v51 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection;
        v50 = &v21[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType];
        swift_retain();
        for (n = 0; n != v19; ++n)
        {
          if (v52)
            v25 = (char *)MEMORY[0x24BCF6CE8](n, v3);
          else
            v25 = (char *)*(id *)(v3 + 8 * n + 32);
          v26 = v25;
          v27 = (void **)(*(_QWORD *)&v22[v53] + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v28 = *v27;
          v29 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
          v30 = (void **)(*(_QWORD *)&v26[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                        + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v31 = *v30;
          v32 = v28;
          v33 = v31;
          LOBYTE(v31) = sub_24970E640((uint64_t)v33, 0.7);

          if ((v31 & 1) != 0)
          {
            v34 = v19;
            v35 = v3;
            v36 = &v26[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
            swift_beginAccess();
            v37 = v22;
            MEMORY[0x24BCF69D0]();
            if (*(_QWORD *)((*(_QWORD *)v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v36 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
              sub_24972CCF0();
            sub_24972CD08();
            sub_24972CCE4();
            swift_endAccess();
            v38 = (_QWORD *)(*(_QWORD *)&v22[v53] + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            v39 = (uint64_t *)(*v38 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
            swift_beginAccess();
            v41 = *v39;
            v40 = v39[1];
            v42 = (_QWORD *)(*(_QWORD *)&v26[v29] + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            v43 = (_QWORD *)(*v42 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
            swift_beginAccess();
            *v43 = v41;
            v43[1] = v40;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)&v22[v51])
            {

            }
            else
            {
              *(_QWORD *)&v22[v51] = v26;
              *(_QWORD *)v50 = 7;
              v50[8] = 0;
            }
            v3 = v35;
            v19 = v34;
          }
          else
          {

          }
        }

        swift_release();
        v2 = v46;
        v1 = v47;
        v20 = v49;
        if (v49 == v46)
          goto LABEL_60;
      }
      else
      {

        if (v20 == v2)
          goto LABEL_60;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    v2 = sub_24972D0BC();
    swift_release();
  }
LABEL_60:
  swift_release();
  return swift_release();
}

uint64_t sub_2496ED5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void **v14;
  void *v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t i;
  char *v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t j;
  char *v31;
  void *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43[5];

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_44;
  v1 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    v43[0] = v1;
    sub_2496E8E5C(v43, sub_2496E9EA4);
    v2 = v43[0];
    if (v43[0] < 0 || (v43[0] & 0x4000000000000000) != 0)
    {
      swift_retain();
      v3 = sub_24972D0BC();
      if (!v3)
      {
LABEL_46:
        swift_release();
        swift_release();
        v27 = MEMORY[0x24BEE4AF8];
        if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) == 0)
          goto LABEL_47;
        goto LABEL_61;
      }
    }
    else
    {
      v3 = *(_QWORD *)(v43[0] + 16);
      swift_retain();
      if (!v3)
        goto LABEL_46;
    }
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
LABEL_10:
    if (v5)
    {
      v6 = (char *)MEMORY[0x24BCF6CE8](v4, v2);
      goto LABEL_14;
    }
    if (v4 < *(_QWORD *)(v2 + 16))
      break;
LABEL_43:
    __break(1u);
LABEL_44:
    v28 = swift_bridgeObjectRetain();
    v1 = (uint64_t)sub_2496F13D8(v28);
    swift_bridgeObjectRelease();
  }
  v6 = (char *)*(id *)(v2 + 32 + 8 * v4);
LABEL_14:
  v40 = v6;
  if (__OFADD__(v4, 1))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v38 = v4 + 1;
  v39 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
  swift_retain();
  v7 = 4;
  while (1)
  {
    v8 = v7 - 4;
    if (v5)
      v9 = (char *)MEMORY[0x24BCF6CE8](v7 - 4, v2);
    else
      v9 = (char *)*(id *)(v2 + 8 * v7);
    v10 = v9;
    v11 = v7 - 3;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v4 < v8)
    {
      v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection];
      v13 = (_QWORD *)(v12 + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v13 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 2)
      {
        v14 = (void **)(*(_QWORD *)&v40[v39] + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v15 = *v14;
        v16 = (void **)(v12 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v17 = *v16;
        v18 = v15;
        v19 = v17;
        LOBYTE(v15) = sub_24970E640((uint64_t)v19, 0.7);

        if ((v15 & 1) != 0)
          break;
      }
    }

    ++v7;
    if (v11 == v3)
    {

      swift_release();
      goto LABEL_9;
    }
  }
  swift_release();
  v20 = &v10[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
  swift_beginAccess();
  v21 = v40;
  MEMORY[0x24BCF69D0]();
  if (*(_QWORD *)((*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_24972CCF0();
  sub_24972CD08();
  sub_24972CCE4();
  swift_endAccess();
  if (*(_QWORD *)&v21[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection])
  {

  }
  else
  {
    *(_QWORD *)&v21[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_parentDetection] = v10;
    v22 = &v21[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_groupingType];
    *(_QWORD *)v22 = 2;
    v22[8] = 0;
  }

LABEL_9:
  ++v4;
  if (v38 != v3)
    goto LABEL_10;
  swift_release();
  v42 = MEMORY[0x24BEE4AF8];
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if (v5)
        v24 = (char *)MEMORY[0x24BCF6CE8](i, v2);
      else
        v24 = (char *)*(id *)(v2 + 8 * i + 32);
      v25 = v24;
      v26 = (_QWORD *)(*(_QWORD *)&v24[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                     + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v26 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 2)
      {
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {

      }
    }
    swift_release();
    v27 = v42;
    if (v42 < 0)
      goto LABEL_61;
LABEL_47:
    if ((v27 & 0x4000000000000000) != 0)
    {
LABEL_61:
      while (1)
      {
        swift_bridgeObjectRetain();
        v29 = sub_24972D0BC();
        swift_release();
        if (!v29)
          break;
LABEL_49:
        for (j = 4; ; ++j)
        {
          v31 = (v27 & 0xC000000000000001) != 0
              ? (char *)MEMORY[0x24BCF6CE8](j - 4, v27)
              : (char *)*(id *)(v27 + 8 * j);
          v32 = v31;
          v33 = j - 3;
          if (__OFADD__(j - 4, 1))
            break;
          v34 = (unint64_t *)&v31[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
          swift_beginAccess();
          v35 = *v34;
          if ((*v34 & 0x8000000000000000) != 0 || (v35 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain_n();
            v36 = (uint64_t)sub_2496F13D8(v35);
            swift_bridgeObjectRelease();
          }
          else
          {
            v36 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n();
          }
          v41 = v36;
          sub_2496E8E5C((uint64_t *)&v41, sub_2496E8ED8);
          swift_bridgeObjectRelease();
          *v34 = v41;

          swift_bridgeObjectRelease();
          if (v33 == v29)
            return swift_release();
        }
        __break(1u);
      }
    }
    else
    {
      v29 = *(_QWORD *)(v27 + 16);
      if (v29)
        goto LABEL_49;
    }
    return swift_release();
  }
  __break(1u);
  swift_release();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

double sub_2496EDB6C(void *a1, void *a2)
{
  void *v4;
  id v5;
  int64_t Width;
  double Height;
  objc_class *v8;
  char *v9;
  char *v10;
  double *v11;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  _QWORD v19[5];

  v4 = (void *)MEMORY[0x24BCF71E0]();
  type metadata accessor for TemplateFinder();
  swift_allocObject();
  v5 = a2;
  sub_2496DCA78(v5, a1);
  sub_2496DCE94((uint64_t)v19);
  swift_release();
  v14 = v19[3];
  v13 = *(double *)&v19[4];
  v15 = v19[0];
  v16 = v19[1];
  v17 = v19[2];
  objc_autoreleasePoolPop(v4);
  Width = CGImageGetWidth((CGImageRef)v5);
  Height = (double)(uint64_t)CGImageGetHeight((CGImageRef)v5);
  v8 = (objc_class *)type metadata accessor for BoundingBox();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  *(_QWORD *)v10 = v15;
  *((_QWORD *)v10 + 1) = v16;
  *((_QWORD *)v10 + 2) = v17;
  *((_QWORD *)v10 + 3) = v14;
  v11 = (double *)&v9[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  *v11 = (double)Width;
  v11[1] = Height;
  v18.receiver = v9;
  v18.super_class = v8;
  objc_msgSendSuper2(&v18, sel_init);
  return v13;
}

void sub_2496EDD90(uint64_t a1, CGImage *a2, void *a3)
{
  id *v5;
  char *v6;
  int64_t Width;
  int64_t Height;
  CGRect *v9;
  double v10;
  double v11;
  double v13;
  double v14;
  double MinY;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  double MinX;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGImageRef v34;
  CGImageRef v35;
  char *v36;
  void *v37;
  CGRect *v38;
  CGFloat x;
  CGFloat y;
  CGFloat v41;
  CGFloat v42;
  char *v43;
  double v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  objc_class *v54;
  char *v55;
  double *v56;
  char *v57;
  objc_super v58;
  CGRect v59;
  CGRect v60;

  v5 = (id *)(a1 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v6 = (char *)*v5;
  Width = CGImageGetWidth(a2);
  Height = CGImageGetHeight(a2);
  v9 = (CGRect *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v10 = CGRectGetWidth(*v9);
  if (v10 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v11 = (double)(uint64_t)v10 * 0.5;
  if ((*(_QWORD *)&v10 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v11 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_68;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v13 = CGRectGetHeight(*v9);
  if (v13 <= -9.22337204e18)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v14 = (double)(uint64_t)v13 * 0.5;
  if ((*(_QWORD *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v14 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_73;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  MinY = CGRectGetMinY(*v9);
  if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v17 = (uint64_t)v14;
  v18 = (uint64_t)MinY - (uint64_t)v14;
  if (__OFSUB__((uint64_t)MinY, (uint64_t)v14))
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v19 = CGRectGetMinY(*v9);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v20 = CGRectGetHeight(*v9);
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v21 = (uint64_t)v19 + (uint64_t)v20;
  if (__OFADD__((uint64_t)v19, (uint64_t)v20))
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v22 = __OFADD__(v21, v17);
  v23 = v21 + v17;
  if (v22)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v23 < Height)
    Height = v23;
  MinX = CGRectGetMinX(*v9);
  if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
    goto LABEL_88;
  if (MinX <= -9.22337204e18)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (MinX >= 9.22337204e18)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v25 = (uint64_t)v11;
  v26 = (uint64_t)MinX - (uint64_t)v11;
  if (__OFSUB__((uint64_t)MinX, (uint64_t)v11))
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v27 = CGRectGetMinX(*v9);
  if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v28 = CGRectGetWidth(*v9);
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v29 = (uint64_t)v27 + (uint64_t)v28;
  if (__OFADD__((uint64_t)v27, (uint64_t)v28))
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v22 = __OFADD__(v29, v25);
  v30 = v29 + v25;
  if (v22)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v31 = v26 & ~(v26 >> 63);
  if (v30 >= Width)
    v30 = Width;
  v22 = __OFSUB__(v30, v31);
  v32 = v30 - v31;
  if (v22)
    goto LABEL_100;
  v33 = v18 & ~(v18 >> 63);
  if (__OFSUB__(Height, v33))
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  v59.origin.x = (double)v31;
  v59.origin.y = (double)v33;
  v59.size.width = (double)v32;
  v59.size.height = (double)(Height - v33);
  v34 = CGImageCreateWithImageInRect(a2, v59);
  if (!v34)
  {
LABEL_65:

    return;
  }
  v35 = v34;
  sub_2496EDB6C(a3, v34);
  if (!v36)
  {

    goto LABEL_65;
  }
  v37 = v36;
  v38 = (CGRect *)&v36[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  x = v38->origin.x;
  y = v38->origin.y;
  v41 = v38->size.width;
  v42 = v38->size.height;
  v43 = v37;
  v60.origin.x = x;
  v60.origin.y = y;
  v60.size.width = v41;
  v60.size.height = v42;
  v44 = CGRectGetMinX(v60);
  if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  if (v44 >= 9.22337204e18)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  v45 = (uint64_t)v44 + v31;
  if (__OFADD__((uint64_t)v44, v31))
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  v46 = CGRectGetMinY(*v38);
  if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (v46 >= 9.22337204e18)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v22 = __OFADD__((uint64_t)v46, v33);
  v47 = (uint64_t)v46 + v33;
  if (v22)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  v48 = CGRectGetWidth(*v38);
  if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if (v48 <= -9.22337204e18)
  {
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  if (v48 >= 9.22337204e18)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  v49 = CGRectGetHeight(*v38);
  if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) == 0)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  if (v49 > -9.22337204e18)
  {
    if (v49 < 9.22337204e18)
    {
      v50 = (double)(uint64_t)v49;
      v51 = &v43[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      swift_beginAccess();
      v52 = *(_QWORD *)v51;
      v53 = *((_QWORD *)v51 + 1);
      v54 = (objc_class *)type metadata accessor for BoundingBox();
      v55 = (char *)objc_allocWithZone(v54);
      v56 = (double *)&v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      *v56 = (double)v45;
      v56[1] = (double)v47;
      v56[2] = (double)(uint64_t)v48;
      v56[3] = v50;
      v57 = &v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      *(_QWORD *)v57 = v52;
      *((_QWORD *)v57 + 1) = v53;
      v58.receiver = v55;
      v58.super_class = v54;
      objc_msgSendSuper2(&v58, sel_init);

      return;
    }
    goto LABEL_115;
  }
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
}

double sub_2496EE46C(uint64_t a1, uint64_t a2)
{
  double v4;
  CGImage *v5;
  _QWORD *v6;
  CGRect *v7;
  CGImageRef v8;
  CGImageRef v9;
  void *v10;
  id v11;
  CGImage *v12;
  void *v13;
  void *v14;
  double v15;

  v4 = -1.0;
  if (sub_2496E73D8(a1, a2, 1))
  {
    v5 = *(CGImage **)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_screenshot);
    v6 = (_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                  + OBJC_IVAR___UIObjectCompat_boundingBox);
    swift_beginAccess();
    v7 = (CGRect *)(*v6 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    v8 = CGImageCreateWithImageInRect(v5, *v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_screenshot);
      v11 = *(id *)(a2 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection);
      v12 = v10;
      sub_2496EDD90((uint64_t)v11, v12, v9);
      v14 = v13;
      v4 = v15;

    }
  }
  return v4;
}

UIUnderstanding::EmbeddingModel_optional __swiftcall EmbeddingModel.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (UIUnderstanding::EmbeddingModel_optional)rawValue;
}

uint64_t EmbeddingModel.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

UIUnderstanding::EmbeddingModel_optional sub_2496EE5C4(Swift::Int *a1)
{
  return EmbeddingModel.init(rawValue:)(*a1);
}

void EmbeddingGenerator.model.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t EmbeddingGenerator.__allocating_init(model:platform:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  EmbeddingGenerator.init(model:platform:)(a1, a2);
  return v4;
}

uint64_t EmbeddingGenerator.init(model:platform:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _UNKNOWN **v8;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;

  v4 = v2;
  v5 = *a1;
  *(_BYTE *)(v2 + 16) = v5;
  if (v5 == 1)
  {
    v6 = type metadata accessor for BiCNNEmbeddingGenerator();
    swift_allocObject();
    v7 = sub_2496D98C8();
    if (!v3)
    {
      v8 = &off_251AA7268;
LABEL_7:
      v12 = v6;
      v13 = v8;
      *(_QWORD *)&v11 = v7;
      sub_2496EE73C(&v11, v4 + 24);
      return v4;
    }
  }
  else
  {
    v6 = type metadata accessor for TwinTransformerEmbeddingGenerator();
    swift_allocObject();
    v7 = sub_2496D3234(a2);
    if (!v3)
    {
      v8 = &off_251AA7700;
      goto LABEL_7;
    }
  }
  type metadata accessor for EmbeddingGenerator();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t type metadata accessor for EmbeddingGenerator()
{
  return objc_opt_self();
}

uint64_t sub_2496EE73C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2496EE754(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[6];
  v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
}

uint64_t sub_2496EE7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, v7, v8);
}

uint64_t EmbeddingGenerator.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t EmbeddingGenerator.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

unint64_t sub_2496EE888()
{
  unint64_t result;

  result = qword_25787A148;
  if (!qword_25787A148)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for EmbeddingModel, &type metadata for EmbeddingModel);
    atomic_store(result, (unint64_t *)&qword_25787A148);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EmbeddingModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2496EE918 + 4 * byte_24972FCC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2496EE94C + 4 * asc_24972FCC0[v4]))();
}

uint64_t sub_2496EE94C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496EE954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496EE95CLL);
  return result;
}

uint64_t sub_2496EE968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496EE970);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2496EE974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496EE97C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmbeddingModel()
{
  return &type metadata for EmbeddingModel;
}

uint64_t method lookup function for EmbeddingGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmbeddingGenerator.__allocating_init(model:platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EmbeddingGenerator.generateScreenEmbedding(_:uiuDetectorResult:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

float static UIDeduplicator.defaultIOUCGRectMatch.getter()
{
  return 0.5;
}

unint64_t static UIDeduplicator.containerID.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2496EEA18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  CGImage *v9;
  double Width;
  double Height;
  uint64_t v12;
  void **p_ivar_lyt;
  objc_class *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  double *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  char *v31;
  double *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  objc_class *v38;
  _BYTE *v39;
  _QWORD *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void **v50;
  void *v51;
  uint64_t v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat *v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  char *v62;
  id v63;
  CGFloat x;
  CGFloat y;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  float v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  double v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  unint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  void *v99;
  objc_class *v100;
  _BYTE *v101;
  _QWORD *v102;
  id v103;
  id v104;
  id v105;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  double v124;
  double v125;
  CGFloat v126;
  uint64_t v127;
  CGFloat v128;
  uint64_t v129;
  unint64_t v130;
  double v131;
  uint64_t v132;
  unint64_t v133;
  CGFloat r1;
  char *r1a;
  unint64_t v136;
  CGFloat v137;
  void *v138;
  CGFloat v139;
  BOOL v140;
  void *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  objc_super v148;
  double v149;
  uint64_t v150;
  objc_super v151;
  objc_super v152;
  uint64_t v153;
  uint64_t v154;
  objc_super v155;
  uint64_t v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;

  v4 = v3;
  if (*(_BYTE *)(v2 + OBJC_IVAR___UIDeduplicatorCompat_debugMode) == 1)
  {
    v7 = (uint64_t *)(a1 + OBJC_IVAR___ScreenShotCompat_imageID);
    v8 = *(_QWORD *)(a1 + OBJC_IVAR___ScreenShotCompat_imageID + 8);
    v153 = *v7;
    v154 = v8;
    swift_bridgeObjectRetain();
    sub_24972CC48();
    _s15UIUnderstanding14UIDeduplicatorC26debugSaveCGRectsToLocation11targetRects8filenameySaySo6CGRectVG_SStFZ_0(a2, v153, v154);
    swift_bridgeObjectRelease();
  }
  v9 = *(CGImage **)(a1 + OBJC_IVAR___ScreenShotCompat_image);
  Width = (double)(uint64_t)CGImageGetWidth(v9);
  Height = (double)(uint64_t)CGImageGetHeight(v9);
  v123 = *(_QWORD *)(a1 + OBJC_IVAR___ScreenShotCompat_imageID);
  v136 = *(_QWORD *)(a1 + OBJC_IVAR___ScreenShotCompat_imageID + 8);
  v156 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a2 + 16);
  p_ivar_lyt = &ElementDetectionTV.ivar_lyt;
  if (v12)
  {
    v153 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24972D038();
    v14 = (objc_class *)type metadata accessor for BoundingBox();
    v15 = (_QWORD *)(a2 + 56);
    do
    {
      v16 = *(v15 - 3);
      v17 = *v15;
      v145 = *((_OWORD *)v15 - 1);
      v18 = (char *)objc_allocWithZone(v14);
      v19 = &v18[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      *(_QWORD *)v19 = v16;
      *(_OWORD *)(v19 + 8) = v145;
      *((_QWORD *)v19 + 3) = v17;
      v20 = (double *)&v18[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      *v20 = Width;
      v20[1] = Height;
      v155.receiver = v18;
      v155.super_class = v14;
      objc_msgSendSuper2(&v155, (SEL)p_ivar_lyt[345]);
      sub_24972D020();
      sub_24972D044();
      p_ivar_lyt = (void **)(&ElementDetectionTV + 16);
      sub_24972D050();
      sub_24972D02C();
      v15 += 4;
      --v12;
    }
    while (v12);
    v21 = v153;
    v4 = v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x24BEE4AF8];
  }
  v122 = v21 >> 62;
  if (v21 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    result = sub_24972D0BC();
    v22 = result;
    if (result)
      goto LABEL_10;
LABEL_45:
    v131 = 0.0;
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v117 = sub_24972C9A8();
    v118 = sub_24972CE04();
    if (os_log_type_enabled(v117, v118))
    {
      v119 = swift_slowAlloc();
      v120 = swift_slowAlloc();
      v150 = v120;
      *(_DWORD *)v119 = 136315650;
      swift_bridgeObjectRetain();
      v149 = COERCE_DOUBLE(sub_2496F0B1C(v123, v136, &v150));
      sub_24972CF18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v119 + 12) = 2048;
      v149 = v131;
      sub_24972CF18();
      *(_WORD *)(v119 + 22) = 2048;
      if (v122)
      {
        swift_bridgeObjectRetain();
        *(double *)&v121 = COERCE_DOUBLE(sub_24972D0BC());
        swift_bridgeObjectRelease();
      }
      else
      {
        v121 = *(uint64_t *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v149 = *(double *)&v121;
      sub_24972CF18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2496CB000, v117, v118, "For image %s, successfully matched %ld of %ld", (uint8_t *)v119, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24BCF76F0](v120, -1, -1);
      MEMORY[0x24BCF76F0](v119, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
    return v156;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_45;
LABEL_10:
  if (v22 >= 1)
  {
    v131 = 0.0;
    v24 = 0;
    v133 = v21 & 0xC000000000000001;
    v130 = v21;
    v124 = Height;
    v125 = Width;
    v132 = v22;
    while (1)
    {
      v144 = v24;
      if (v133)
        v44 = (id)MEMORY[0x24BCF6CE8]();
      else
        v44 = *(id *)(v21 + 8 * v24 + 32);
      v45 = (char *)v44;
      v46 = swift_bridgeObjectRetain();
      v47 = v4;
      sub_2496F19F0(v46, (uint64_t)v45);
      v49 = v48;
      swift_bridgeObjectRelease();

      if (!v49)
        goto LABEL_42;
      v147 = OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection;
      v50 = (void **)(*(_QWORD *)&v49[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                    + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v51 = *v50;
      v52 = (uint64_t)*v50 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v53 = *(double *)v52;
      v54 = *(double *)(v52 + 8);
      v55 = *(double *)(v52 + 16);
      v56 = *(double *)(v52 + 24);
      v57 = (CGFloat *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v58 = *v57;
      v59 = v57[1];
      v60 = v57[2];
      v61 = v57[3];
      v62 = v49;
      v63 = v51;
      v137 = v54;
      v139 = v53;
      v157.origin.x = v53;
      v157.origin.y = v54;
      r1 = v55;
      v157.size.width = v55;
      v126 = v58;
      v128 = v56;
      v157.size.height = v56;
      v163.origin.x = v58;
      v163.origin.y = v59;
      v163.size.width = v60;
      v163.size.height = v61;
      v158 = CGRectUnion(v157, v163);
      x = v158.origin.x;
      y = v158.origin.y;
      v66 = v158.size.width;
      v67 = v158.size.height;
      v68 = CGRectGetHeight(v158);
      v159.origin.x = x;
      v159.origin.y = y;
      v159.size.width = v66;
      v159.size.height = v67;
      v69 = v68 * CGRectGetWidth(v159);
      v70 = 0.0;
      if (v69 != 0.0)
      {
        v160.origin.y = v137;
        v160.origin.x = v139;
        v160.size.width = r1;
        v164.origin.x = v126;
        v160.size.height = v128;
        v164.origin.y = v59;
        v164.size.width = v60;
        v164.size.height = v61;
        v161 = CGRectIntersection(v160, v164);
        v71 = v161.origin.x;
        v72 = v161.origin.y;
        v73 = v161.size.width;
        v74 = v161.size.height;
        v75 = CGRectGetHeight(v161);
        v162.origin.x = v71;
        v162.origin.y = v72;
        v162.size.width = v73;
        v162.size.height = v74;
        v70 = v75 * CGRectGetWidth(v162) / v69;
      }
      v140 = sub_24970E640((uint64_t)v45, 0.85);
      v76 = v62;
      v77 = sub_24972C9A8();
      v78 = sub_24972CE04();
      v138 = v63;
      v142 = v45;
      r1a = v76;
      if (os_log_type_enabled(v77, v78))
      {
        v79 = v76;
        v80 = swift_slowAlloc();
        v129 = swift_slowAlloc();
        v150 = v129;
        *(_DWORD *)v80 = 134218242;
        v149 = v70;
        sub_24972CF18();
        *(_WORD *)(v80 + 12) = 2080;
        v81 = objc_msgSend(*(id *)&v49[v147], sel_description);
        v82 = sub_24972CBB8();
        v84 = v83;

        v21 = v130;
        v149 = COERCE_DOUBLE(sub_2496F0B1C(v82, v84, &v150));
        p_ivar_lyt = (void **)(&ElementDetectionTV + 16);
        sub_24972CF18();

        v4 = v47;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2496CB000, v77, v78, "Best IOU is %f for %s", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        v63 = v138;
        MEMORY[0x24BCF76F0](v129, -1, -1);
        MEMORY[0x24BCF76F0](v80, -1, -1);
      }
      else
      {

      }
      Height = v124;
      Width = v125;
      if (v70 < 0.2 && v140)
      {
        v85 = objc_msgSend(v63, sel_description);
        v86 = sub_24972CBB8();
        v88 = v87;

        v89 = (_QWORD *)(*(_QWORD *)&v49[v147] + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v90 = (uint64_t *)(*v89 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
        swift_beginAccess();
        if (v90[1])
        {
          v127 = *v90;
          v91 = v90[1];
        }
        else
        {
          v91 = 0xE400000000000000;
          v127 = 1701736270;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = sub_24972C9A8();
        v93 = sub_24972CE04();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = swift_slowAlloc();
          v95 = swift_slowAlloc();
          v150 = v95;
          *(_DWORD *)v94 = 136315394;
          swift_bridgeObjectRetain();
          v149 = COERCE_DOUBLE(sub_2496F0B1C(v86, v88, &v150));
          sub_24972CF18();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v94 + 12) = 2080;
          swift_bridgeObjectRetain();
          v149 = COERCE_DOUBLE(sub_2496F0B1C(v127, v91, &v150));
          sub_24972CF18();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2496CB000, v92, v93, "Target CGRect contains text at %s -> %s", (uint8_t *)v94, 0x16u);
          swift_arrayDestroy();
          v96 = v95;
          p_ivar_lyt = (void **)(&ElementDetectionTV + 16);
          MEMORY[0x24BCF76F0](v96, -1, -1);
          v97 = v94;
          v63 = v138;
          MEMORY[0x24BCF76F0](v97, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        v21 = v130;
      }
      if (v70 <= 0.2)
      {
        v98 = (_QWORD *)(*(_QWORD *)&v49[v147] + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v98 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) != 10 || !v140)
          break;
      }
      v99 = *(void **)&v49[v147];
      v100 = (objc_class *)type metadata accessor for DedupeElement();
      v101 = objc_allocWithZone(v100);
      v102 = &v101[OBJC_IVAR___DedupeElementCompat_screenID];
      *v102 = 0;
      v102[1] = 0;
      *(_QWORD *)&v101[OBJC_IVAR___DedupeElementCompat_uiObject] = v99;
      v101[OBJC_IVAR___DedupeElementCompat_isDuplicate] = 0;
      *v102 = 0;
      v102[1] = 0;
      v103 = v99;
      swift_bridgeObjectRelease();
      v148.receiver = v101;
      v148.super_class = v100;
      v104 = objc_msgSendSuper2(&v148, (SEL)p_ivar_lyt[345]);

      v105 = v104;
      MEMORY[0x24BCF69D0]();
      if (*(_QWORD *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      sub_24972CD08();
      sub_24972CCE4();

      if (__OFADD__((*(_QWORD *)&v131)++, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
LABEL_16:
      v24 = v144 + 1;
      if (v132 == v144 + 1)
        goto LABEL_46;
    }

    v45 = v142;
LABEL_42:
    v141 = v49;
    v107 = objc_msgSend(v45, sel_description, v122);
    v108 = sub_24972CBB8();
    v110 = v109;

    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v111 = sub_24972C9A8();
    v112 = sub_24972CDF8();
    if (os_log_type_enabled(v111, v112))
    {
      v143 = v45;
      v113 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      v150 = v114;
      *(_DWORD *)v113 = 136315394;
      swift_bridgeObjectRetain();
      v149 = COERCE_DOUBLE(sub_2496F0B1C(v123, v136, &v150));
      sub_24972CF18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v113 + 12) = 2080;
      swift_bridgeObjectRetain();
      v149 = COERCE_DOUBLE(sub_2496F0B1C(v108, v110, &v150));
      v25 = v130;
      sub_24972CF18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2496CB000, v111, v112, "Failed to find match in %s for %s. Creating dummy", (uint8_t *)v113, 0x16u);
      swift_arrayDestroy();
      v115 = v114;
      p_ivar_lyt = (void **)(&ElementDetectionTV + 16);
      MEMORY[0x24BCF76F0](v115, -1, -1);
      v116 = v113;
      v45 = v143;
      MEMORY[0x24BCF76F0](v116, -1, -1);
    }
    else
    {
      v25 = v21;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v26 = &v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v146 = *(_OWORD *)v26;
    v27 = *((_QWORD *)v26 + 2);
    v28 = *((_QWORD *)v26 + 3);
    v29 = (objc_class *)type metadata accessor for BoundingBox();
    v30 = (char *)objc_allocWithZone(v29);
    v31 = &v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *(_OWORD *)v31 = v146;
    *((_QWORD *)v31 + 2) = v27;
    *((_QWORD *)v31 + 3) = v28;
    v32 = (double *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *v32 = Width;
    v32[1] = Height;
    v152.receiver = v30;
    v152.super_class = v29;
    v33 = objc_msgSendSuper2(&v152, (SEL)p_ivar_lyt[345]);
    v34 = objc_allocWithZone((Class)type metadata accessor for UIObject());
    v35 = v33;
    v36 = UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(-1, 0x686374616D73696DLL, 0xE800000000000000, v35, 0.0, MEMORY[0x24BEE4AF8], 0, 0);
    v37 = v45;
    v38 = (objc_class *)type metadata accessor for DedupeElement();
    v39 = objc_allocWithZone(v38);
    v40 = &v39[OBJC_IVAR___DedupeElementCompat_screenID];
    *v40 = 0;
    v40[1] = 0;
    *(_QWORD *)&v39[OBJC_IVAR___DedupeElementCompat_uiObject] = v36;
    v39[OBJC_IVAR___DedupeElementCompat_isDuplicate] = 0;
    *v40 = 0;
    v40[1] = 0;
    v41 = v36;
    p_ivar_lyt = &ElementDetectionTV.ivar_lyt;
    swift_bridgeObjectRelease();
    v151.receiver = v39;
    v151.super_class = v38;
    v42 = objc_msgSendSuper2(&v151, sel_init);

    v43 = v42;
    MEMORY[0x24BCF69D0]();
    if (*(_QWORD *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24972CCF0();
    sub_24972CD08();
    sub_24972CCE4();

    v21 = v25;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

BOOL sub_2496EF990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void **v5;
  void *v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat *v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  id v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v22;
  double v23;
  float v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double v29;
  double v30;
  void **v31;
  void *v32;
  uint64_t v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  id v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  double v47;
  double v48;
  float v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  double v54;
  double v55;
  CGFloat r2;
  CGFloat r2_8;
  CGFloat r2_8a;
  CGFloat r2_16;
  CGFloat r2_16a;
  CGFloat r2_24;
  CGFloat r2_24a;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  float v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = (void **)(*(_QWORD *)(*(_QWORD *)(a1 + 8)
                           + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
               + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v6 = *v5;
  v7 = (uint64_t)*v5 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  v8 = *(double *)v7;
  v9 = *(double *)(v7 + 8);
  v10 = *(double *)(v7 + 16);
  v11 = *(double *)(v7 + 24);
  v12 = (CGFloat *)(a3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v13 = *v12;
  v14 = v12[1];
  v15 = v12[2];
  v16 = v12[3];
  v17 = v6;
  v66 = v8;
  v68.origin.x = v8;
  r2_24 = v10;
  v64 = v9;
  v68.origin.y = v9;
  v68.size.width = v10;
  r2_8 = v13;
  r2_16 = v11;
  v68.size.height = v11;
  v80.origin.x = v13;
  v80.origin.y = v14;
  v80.size.width = v15;
  v80.size.height = v16;
  v69 = CGRectUnion(v68, v80);
  x = v69.origin.x;
  y = v69.origin.y;
  width = v69.size.width;
  height = v69.size.height;
  v22 = CGRectGetHeight(v69);
  v70.origin.x = x;
  v70.origin.y = y;
  v70.size.width = width;
  v70.size.height = height;
  v23 = v22 * CGRectGetWidth(v70);
  if (v23 == 0.0)
  {

    v24 = 0.0;
  }
  else
  {
    v71.origin.x = v66;
    v71.size.width = r2_24;
    v71.origin.y = v64;
    v81.origin.x = r2_8;
    v71.size.height = r2_16;
    v81.origin.y = v14;
    v81.size.width = v15;
    v81.size.height = v16;
    v72 = CGRectIntersection(v71, v81);
    v25 = v72.origin.x;
    v26 = v72.origin.y;
    v27 = v72.size.width;
    v28 = v72.size.height;
    v29 = CGRectGetHeight(v72);
    v73.origin.x = v25;
    v73.origin.y = v26;
    v73.size.width = v27;
    v73.size.height = v28;
    v30 = CGRectGetWidth(v73);

    v24 = v29 * v30 / v23;
  }
  v67 = v24;
  v31 = (void **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection)
                + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v32 = *v31;
  v33 = (uint64_t)*v31 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  v34 = *(double *)v33;
  v35 = *(double *)(v33 + 8);
  v36 = *(double *)(v33 + 16);
  v37 = *(double *)(v33 + 24);
  v38 = *v12;
  v39 = v12[1];
  v40 = v12[2];
  v41 = v12[3];
  v42 = v32;
  r2_24a = v35;
  v65 = v34;
  v74.origin.x = v34;
  v74.origin.y = v35;
  r2_8a = v37;
  r2_16a = v36;
  v74.size.width = v36;
  v74.size.height = v37;
  r2 = v38;
  v82.origin.x = v38;
  v82.origin.y = v39;
  v82.size.width = v40;
  v82.size.height = v41;
  v75 = CGRectUnion(v74, v82);
  v43 = v75.origin.x;
  v44 = v75.origin.y;
  v45 = v75.size.width;
  v46 = v75.size.height;
  v47 = CGRectGetHeight(v75);
  v76.origin.x = v43;
  v76.origin.y = v44;
  v76.size.width = v45;
  v76.size.height = v46;
  v48 = v47 * CGRectGetWidth(v76);
  if (v48 == 0.0)
  {

    v49 = 0.0;
  }
  else
  {
    v77.origin.y = r2_24a;
    v77.origin.x = v65;
    v77.size.height = r2_8a;
    v77.size.width = r2_16a;
    v83.origin.x = r2;
    v83.origin.y = v39;
    v83.size.width = v40;
    v83.size.height = v41;
    v78 = CGRectIntersection(v77, v83);
    v50 = v78.origin.x;
    v51 = v78.origin.y;
    v52 = v78.size.width;
    v53 = v78.size.height;
    v54 = CGRectGetHeight(v78);
    v79.origin.x = v50;
    v79.origin.y = v51;
    v79.size.width = v52;
    v79.size.height = v53;
    v55 = CGRectGetWidth(v79);

    v49 = v54 * v55 / v48;
  }
  return v67 < v49;
}

double sub_2496EFD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double result;

  v7 = (uint64_t *)(v3 + OBJC_IVAR___UIDeduplicatorCompat_screenGroupMap);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_249720628(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(v8 + 56) + (v9 << 6);
      v12 = *(_QWORD *)(v11 + 8);
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      v15 = *(void **)(v11 + 32);
      v16 = *(_DWORD *)(v11 + 40);
      v17 = *(_QWORD *)(v11 + 48);
      v18 = *(_QWORD *)(v11 + 56);
      *(_QWORD *)a3 = *(_QWORD *)v11;
      *(_QWORD *)(a3 + 8) = v12;
      *(_QWORD *)(a3 + 16) = v14;
      *(_QWORD *)(a3 + 24) = v13;
      *(_QWORD *)(a3 + 32) = v15;
      *(_DWORD *)(a3 + 40) = v16;
      *(_QWORD *)(a3 + 48) = v17;
      *(_QWORD *)(a3 + 56) = v18;
      swift_bridgeObjectRetain();
      v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

_DWORD *sub_2496EFEA4(char *a1, unint64_t a2)
{
  return sub_2496F1BA4(a1, a2);
}

_QWORD *sub_2496EFFAC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_2496F14E4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

id UIDeduplicator.__allocating_init(shape:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UIDeduplicator.init(shape:)(a1);
}

id UIDeduplicator.init(shape:)(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  char iPadCapability;
  id v5;
  id v6;
  id v7;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if (a1 != 2
    && (a1
     || (v2 = (id)MobileGestalt_get_current_device()) != 0
     && (v3 = v2, iPadCapability = MobileGestalt_get_iPadCapability(), v3, (iPadCapability & 1) != 0)))
  {
    v5 = objc_msgSend(v1, sel_initWithPlatform_error_, 1, &v9, 0, v10);
  }
  else
  {
    v5 = objc_msgSend(v1, sel_initWithPlatform_error_, 0, &v9, 0, v10);
  }
  if (v5)
  {
    v6 = v5;
    v7 = v9;
  }
  else
  {
    v6 = v9;
    sub_24972C8AC();

    swift_willThrow();
  }
  return v6;
}

id UIDeduplicator.__allocating_init(platform:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UIDeduplicator.init(platform:)(a1);
}

id UIDeduplicator.init(platform:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  void *v13;
  char internalBuild;
  id v15;
  void *v16;
  id v17;
  void *v18;
  unsigned int v19;
  objc_class *v20;
  objc_super v21;
  uint64_t v22;

  v3 = v1;
  v22 = sub_24972C9C0();
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR___UIDeduplicatorCompat_debugMode;
  v3[OBJC_IVAR___UIDeduplicatorCompat_debugMode] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___UIDeduplicatorCompat_debugScreenshotCount] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___UIDeduplicatorCompat_screenGroupMap] = MEMORY[0x24BEE4B00];
  type metadata accessor for UIFingerprinter();
  swift_allocObject();
  v9 = v3;
  v10 = UIFingerprinter.init(platform:)(a1);
  if (v2)
  {

    swift_bridgeObjectRelease();
    type metadata accessor for UIDeduplicator();
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = v8;
    *(_QWORD *)&v9[OBJC_IVAR___UIDeduplicatorCompat_fingerprinter] = v10;
    sub_24972C9B4();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[OBJC_IVAR___UIDeduplicatorCompat_log], v7, v22);
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v13 = result;
      internalBuild = MobileGestalt_get_internalBuild();

      if ((internalBuild & 1) != 0)
      {
        v15 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
        v16 = (void *)sub_24972CB94();
        v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

        if (v17)
        {
          v18 = (void *)sub_24972CB94();
          v19 = objc_msgSend(v17, sel_BOOLForKey_, v18);

          if (v19)
            v3[v12] = 1;
        }
      }

      v20 = (objc_class *)type metadata accessor for UIDeduplicator();
      v21.receiver = v9;
      v21.super_class = v20;
      return objc_msgSendSuper2(&v21, sel_init);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2496F041C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a3);
}

void sub_2496F0494(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_24972CFB4();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000014;
    v16 = 0x8000000249732BD0;
    type metadata accessor for UIDeduplicator();
    sub_2496D83B0((uint64_t)v7);
    sub_24972C8E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24972CC48();
    swift_bridgeObjectRelease();
    sub_24972CC48();
    v9 = v15;
    v8 = v16;
  }
  else
  {
    v8 = 0xE90000000000002ELL;
    v9 = 0x64656C6261736964;
  }
  swift_bridgeObjectRetain();
  v10 = sub_24972C9A8();
  v11 = sub_24972CE04();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    v17 = sub_2496F0B1C(v9, v8, &v15);
    sub_24972CF18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2496CB000, v10, v11, "Debug mode state: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BCF76F0](v13, -1, -1);
    MEMORY[0x24BCF76F0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(_BYTE *)(v2 + OBJC_IVAR___UIDeduplicatorCompat_debugMode) = a1 & 1;
}

uint64_t sub_2496F073C(uint64_t a1, uint64_t a2, CGImage *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  CGImage *v18;

  if (*(_BYTE *)(v3 + OBJC_IVAR___UIDeduplicatorCompat_debugMode) != 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A160);
  v7 = swift_allocObject();
  v8 = OBJC_IVAR___UIDeduplicatorCompat_debugScreenshotCount;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___UIDeduplicatorCompat_debugScreenshotCount);
  v10 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v7 + 16) = xmmword_24972F6C0;
  v11 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v7 + 56) = v10;
  *(_QWORD *)(v7 + 64) = v11;
  *(_QWORD *)(v7 + 32) = v9;
  sub_24972CBDC();
  swift_bridgeObjectRetain();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_2496D9784();
  a1 = sub_24972CF30();
  a2 = v12;
  result = swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v3 + v8);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (!v15)
  {
    *(_QWORD *)(v3 + v8) = v16;
    swift_bridgeObjectRetain();
    sub_24972CC48();
    _s15UIUnderstanding14UIDeduplicatorC24debugSaveImageToLocation06targetE08filenameySo10CGImageRefa_SStFZ_0(a3, a1, a2);
    swift_bridgeObjectRelease();
LABEL_5:
    v17 = *(_QWORD *)(v3 + OBJC_IVAR___UIDeduplicatorCompat_fingerprinter);
    v18 = a3;
    swift_retain();
    return sub_2496DA2A8(a1, a2, v18, v17);
  }
  __break(1u);
  return result;
}

id UIDeduplicator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIDeduplicator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIDeduplicator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIDeduplicator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2496F0B1C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2496F0BEC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2496F2A70((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2496F2A70((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2496F0BEC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24972CF24();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2496F0DA4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_24972D014();
  if (!v8)
  {
    sub_24972D074();
    __break(1u);
LABEL_17:
    result = sub_24972D0F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2496F0DA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2496F0E38(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2496F1010(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2496F1010(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2496F0E38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2496F0FAC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_24972CFC0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_24972D074();
      __break(1u);
LABEL_10:
      v2 = sub_24972CC60();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_24972D0F8();
    __break(1u);
LABEL_14:
    result = sub_24972D074();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2496F0FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A180);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2496F1010(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A180);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

_QWORD *sub_2496F115C(unint64_t a1)
{
  return sub_2496F13E4(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_249716610);
}

_QWORD *sub_2496F1168(unint64_t a1)
{
  return sub_2496F13E4(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_249716634);
}

uint64_t sub_2496F1174(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        type metadata accessor for UIObject();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

_QWORD *sub_2496F12F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_2496F15C8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2496F2984();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2496F13D8(unint64_t a1)
{
  return sub_2496F13E4(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_249716658);
}

_QWORD *sub_2496F13E4(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

_QWORD *sub_2496F14E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A178);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 + 31;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  v6 = sub_2496F175C(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2496F2984();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2496F15C8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_2496F175C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;

  v30 = a4 + 64;
  v5 = -1 << *(_BYTE *)(a4 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v10 = 0;
    v8 = 0;
LABEL_39:
    *result = a4;
    result[1] = v30;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (_QWORD *)v8;
  }
  v8 = a3;
  if (!a3)
  {
    v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v9 = a2;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  v28 = result;
  v10 = 0;
  v11 = 0;
  v29 = (unint64_t)(63 - v5) >> 6;
  if (!v7)
    goto LABEL_9;
LABEL_8:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    v17 = *(_QWORD *)(a4 + 56) + (v13 << 6);
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    v21 = *(void **)(v17 + 32);
    v22 = *(_DWORD *)(v17 + 40);
    v24 = *(_QWORD *)(v17 + 48);
    v23 = *(_QWORD *)(v17 + 56);
    *(_QWORD *)v9 = *(_QWORD *)v17;
    *(_QWORD *)(v9 + 8) = v18;
    *(_QWORD *)(v9 + 16) = v20;
    *(_QWORD *)(v9 + 24) = v19;
    *(_QWORD *)(v9 + 32) = v21;
    *(_DWORD *)(v9 + 40) = v22;
    *(_QWORD *)(v9 + 48) = v24;
    *(_QWORD *)(v9 + 56) = v23;
    if (v11 == v8)
    {
      swift_bridgeObjectRetain();
      v26 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v9 += 64;
    swift_bridgeObjectRetain();
    v25 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_8;
LABEL_9:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v30 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v29)
      {
        v7 = 0;
        v10 = v14;
      }
      else
      {
        v15 = *(_QWORD *)(v30 + 8 * v10);
        if (v15)
          goto LABEL_14;
        v16 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v30 + 8 * v16);
        if (v15)
        {
LABEL_17:
          v14 = v16;
          goto LABEL_18;
        }
        v10 = v14 + 3;
        if (v14 + 3 < v29)
        {
          v15 = *(_QWORD *)(v30 + 8 * v10);
          if (v15)
          {
LABEL_14:
            v14 = v10;
            goto LABEL_18;
          }
          v16 = v14 + 4;
          if (v14 + 4 >= v29)
          {
LABEL_33:
            v7 = 0;
            goto LABEL_37;
          }
          v15 = *(_QWORD *)(v30 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              v14 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_42;
              if (v14 >= v29)
              {
                v7 = 0;
                v10 = v29 - 1;
                goto LABEL_37;
              }
              v15 = *(_QWORD *)(v30 + 8 * v14);
              ++v16;
              if (v15)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v7 = 0;
        v10 = v14 + 2;
      }
LABEL_37:
      v8 = v11;
LABEL_38:
      v5 = v27;
      result = v28;
      goto LABEL_39;
    }
LABEL_18:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2496F19F0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  BOOL v14;
  _QWORD v15[2];
  uint64_t v16;
  id v17;
  uint64_t v18;

  v18 = a2;
  if (a1 >> 62)
    goto LABEL_23;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x24BCF6CE8](0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        v6 = *(id *)(a1 + 32);
      }
      v7 = v6;
      v16 = 0;
      v17 = v6;
      if (v4 == 1)
        break;
      v9 = 0;
      v10 = 5;
      while (1)
      {
        v8 = v10 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x24BCF6CE8](v10 - 4, a1);
        }
        else
        {
          if (v8 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_22;
          v11 = *(id *)(a1 + 8 * v10);
        }
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v8, 1))
          break;
        v15[0] = v10 - 4;
        v15[1] = v11;
        v14 = sub_2496EF990((uint64_t)&v16, (uint64_t)v15, v18);
        if (v2)
        {
          swift_bridgeObjectRelease();

          return v8;
        }
        if (v14)
        {

          v16 = v10 - 4;
          v17 = v12;
          v7 = v12;
          v9 = v10 - 4;
        }
        else
        {

          v8 = v9;
        }
        ++v10;
        if (v13 == v4)
          goto LABEL_8;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      result = sub_24972D0BC();
      v4 = result;
      if (!result)
        goto LABEL_24;
    }
    v8 = 0;
LABEL_8:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

_DWORD *sub_2496F1BA4(char *a1, unint64_t a2)
{
  char *v2;
  uint64_t v3;
  int v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _DWORD *v12;
  CGImage *v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  int v18;
  float v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t i;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  float v42;
  id v43;
  float v44;
  float v45;
  id v46;
  float v47;
  float v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  unint64_t v62;
  char v63;
  char v64;
  char *v65;
  char *v66;
  char *v67;
  int v68;
  void *v69;
  objc_class *v70;
  _BYTE *v71;
  _QWORD *v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  int64_t v77;
  id v78;
  uint64_t v79;
  __int128 v80;
  _QWORD *v81;
  char isUniquelyReferenced_nonNull_native;
  objc_class *v83;
  char *v84;
  char *v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t *v96;
  id v97;
  char v98;
  id v99;
  objc_class *v100;
  char *v101;
  char *v102;
  void *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _QWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  unint64_t v116;
  int64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  int64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  objc_super v128;
  objc_super v129;
  uint64_t v130;
  objc_super v131;
  _QWORD v132[5];
  int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152[3];
  uint64_t v153;
  uint64_t v154;

  v5 = v2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F18);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR___UIDeduplicatorCompat_fingerprinter;
  v12 = *(_DWORD **)(*(_QWORD *)&v2[OBJC_IVAR___UIDeduplicatorCompat_fingerprinter] + 40);
  v13 = *(CGImage **)&a1[OBJC_IVAR___ScreenShotCompat_image];
  sub_2496D4104((uint64_t)&a1[OBJC_IVAR___ScreenShotCompat_detections], (uint64_t)v10);
  v14 = type metadata accessor for UIUDetectorResult();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  swift_retain();
  v15 = sub_2496D35AC(v13, (uint64_t)v10);
  if (v3)
    goto LABEL_2;
  v17 = (void *)v15;
  if (!v15)
  {
    sub_2496D3F24();
    swift_allocError();
    swift_willThrow();
LABEL_2:
    sub_2496D3FB0((uint64_t)v10);
    swift_release();
    return v12;
  }
  v115 = a2;
  v119 = a1;
  v107[1] = 0;
  v18 = v12[10];
  sub_2496D3FB0((uint64_t)v10);
  swift_release();
  v19 = *(float *)(*(_QWORD *)&v5[v11] + 48);
  v114 = v5;
  v20 = &v5[OBJC_IVAR___UIDeduplicatorCompat_screenGroupMap];
  swift_beginAccess();
  v107[0] = v20;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(*(_QWORD *)v20 + 64);
  v116 = *(_QWORD *)v20 + 64;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v117 = (unint64_t)(v23 + 63) >> 6;
  v118 = v21;
  swift_bridgeObjectRetain();
  v26 = 0;
  if (!v25)
    goto LABEL_9;
LABEL_8:
  v122 = (id)((v25 - 1) & v25);
  v123 = v26;
  for (i = __clz(__rbit64(v25)) | (v26 << 6); ; i = __clz(__rbit64(v29)) + (v30 << 6))
  {
    v32 = *(_QWORD *)(v118 + 56) + (i << 6);
    v33 = *(_QWORD *)v32;
    v34 = *(_QWORD *)(v32 + 8);
    v35 = *(_QWORD *)(v32 + 24);
    v120 = *(_QWORD *)(v32 + 16);
    v121 = v33;
    v36 = *(void **)(v32 + 32);
    v4 = *(_DWORD *)(v32 + 40);
    v37 = *(_QWORD *)(v32 + 48);
    v38 = *(_QWORD *)(v32 + 56);
    v126 = v35;
    swift_bridgeObjectRetain();
    v5 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v124 = v34;
    swift_bridgeObjectRetain();
    v39 = (unint64_t)objc_msgSend(v17, sel_count);
    if ((v39 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v40 = v39;
    v127 = v38;
    v125 = v37;
    if (v39)
    {
      v41 = 0;
      v42 = 0.0;
      do
      {
        v43 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, v41, v107[0]);
        objc_msgSend(v43, sel_floatValue);
        v45 = v44;

        v46 = objc_msgSend(v5, sel_objectAtIndexedSubscript_, v41);
        objc_msgSend(v46, sel_floatValue);
        v48 = v47;

        v42 = v42 + (float)((float)(v45 - v48) * (float)(v45 - v48));
        ++v41;
      }
      while (v40 != v41);
    }
    else
    {
      v42 = 0.0;
    }
    if (sqrtf(v42) < v19)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = (unint64_t)v122;
    v26 = v123;
    if (v122)
      goto LABEL_8;
LABEL_9:
    v28 = v26 + 1;
    if (__OFADD__(v26, 1))
      goto LABEL_59;
    if (v28 >= v117)
      goto LABEL_54;
    v29 = *(_QWORD *)(v116 + 8 * v28);
    v30 = v26 + 1;
    if (!v29)
    {
      v30 = v26 + 2;
      if (v26 + 2 >= v117)
        goto LABEL_54;
      v29 = *(_QWORD *)(v116 + 8 * v30);
      if (!v29)
      {
        v30 = v26 + 3;
        if (v26 + 3 >= v117)
          goto LABEL_54;
        v29 = *(_QWORD *)(v116 + 8 * v30);
        if (!v29)
        {
          v31 = v26 + 4;
          if (v26 + 4 >= v117)
          {
LABEL_54:
            swift_release();
            *(_QWORD *)&v138 = v17;
            DWORD2(v138) = v18;
            sub_24971A680(v119, v115, (uint64_t)&v138, (uint64_t)v152);
            v80 = v152[0];
            v81 = (_QWORD *)v107[0];
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_2496F298C((uint64_t)v152);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v132[0] = *v81;
            *v81 = 0x8000000000000000;
            sub_24971E46C(v152, v80, *((uint64_t *)&v80 + 1), isUniquelyReferenced_nonNull_native);
            *v81 = v132[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            v154 = v153;
            v83 = (objc_class *)type metadata accessor for AddedElements();
            v84 = (char *)objc_allocWithZone(v83);
            *(_OWORD *)&v84[OBJC_IVAR___AddedElementsCompat_groupID] = v80;
            *(_QWORD *)&v84[OBJC_IVAR___AddedElementsCompat_dedupeElements] = v154;
            swift_bridgeObjectRetain();
            sub_2496F29EC((uint64_t)&v154);
            v128.receiver = v84;
            v128.super_class = v83;
            v12 = objc_msgSendSuper2(&v128, sel_init);

            sub_2496F2A14((uint64_t)v152);
            return v12;
          }
          v29 = *(_QWORD *)(v116 + 8 * v31);
          if (!v29)
          {
            while (1)
            {
              v30 = v31 + 1;
              if (__OFADD__(v31, 1))
                goto LABEL_62;
              if (v30 >= v117)
                goto LABEL_54;
              v29 = *(_QWORD *)(v116 + 8 * v30);
              ++v31;
              if (v29)
                goto LABEL_22;
            }
          }
          v30 = v26 + 4;
        }
      }
    }
LABEL_22:
    v122 = (id)((v29 - 1) & v29);
    v123 = v30;
  }
  swift_release();
  v49 = v124;
  v50 = v125;
  *(_QWORD *)&v138 = v121;
  *((_QWORD *)&v138 + 1) = v124;
  v51 = v126;
  v139 = v120;
  v140 = v126;
  v141 = v5;
  v142 = v4;
  v143 = v125;
  v144 = v127;
  v136 = MEMORY[0x24BEE4AF8];
  v137 = MEMORY[0x24BEE4AF8];
  v52 = v115;
  v117 = (int64_t)v17;
  if (!(v115 >> 62))
  {
    v118 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v53 = v5;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v54 = v53;
    v55 = v119;
    goto LABEL_35;
  }
LABEL_63:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v104 = v5;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v105 = v104;
  swift_bridgeObjectRetain();
  v106 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (v106 < 0)
    __break(1u);
  v55 = v119;
  v52 = v115;
  v49 = v124;
  v50 = v125;
  v51 = v126;
  v118 = v106;
  v17 = (void *)v117;
LABEL_35:
  if (v118)
  {
    v56 = v50;
    v57 = 0;
    v58 = *(_QWORD *)&v55[OBJC_IVAR___ScreenShotCompat_imageID];
    v112 = *(_QWORD *)&v55[OBJC_IVAR___ScreenShotCompat_imageID + 8];
    v113 = v58;
    v116 = v52 & 0xC000000000000001;
    v110 = v56 & 0xC000000000000001;
    v109 = v56 & 0xFFFFFFFFFFFFFF8;
    v108 = v56 + 32;
    do
    {
      v123 = v57;
      if (v116)
        v59 = (char *)MEMORY[0x24BCF6CE8](v57, v52);
      else
        v59 = (char *)*(id *)(v52 + 8 * v57 + 32);
      v60 = v59;
      v132[0] = v121;
      v132[1] = v49;
      v132[2] = v120;
      v132[3] = v51;
      v132[4] = v5;
      v133 = v4;
      v134 = v125;
      v135 = v127;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62 = sub_24971A930((uint64_t)v119, (uint64_t)v60, (uint64_t)v132);
      v64 = v63;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v111 = v61;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0)
      {
        v65 = v60;
        if (v110)
        {
          v79 = v125;
          swift_bridgeObjectRetain();
          v66 = (char *)MEMORY[0x24BCF6CE8](v62, v79);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v62 & 0x8000000000000000) != 0)
            goto LABEL_60;
          if (v62 >= *(_QWORD *)(v109 + 16))
            goto LABEL_61;
          v66 = (char *)*(id *)(v108 + 8 * v62);
        }
        v67 = &v66[OBJC_IVAR___DedupeElementCompat_isDuplicate];
        swift_beginAccess();
        *v67 = 1;

        v60 = v65;
      }
      v68 = v64 & 1;
      v122 = v60;
      v69 = *(void **)&v60[OBJC_IVAR___DedupeElementCompat_uiObject];
      v70 = (objc_class *)type metadata accessor for DedupeElement();
      v71 = objc_allocWithZone(v70);
      v72 = &v71[OBJC_IVAR___DedupeElementCompat_screenID];
      *v72 = 0;
      v72[1] = 0;
      *(_QWORD *)&v71[OBJC_IVAR___DedupeElementCompat_uiObject] = v69;
      v71[OBJC_IVAR___DedupeElementCompat_isDuplicate] = !(v64 & 1);
      v73 = v112;
      *v72 = v113;
      v72[1] = v73;
      v74 = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v131.receiver = v71;
      v131.super_class = v70;
      v75 = objc_msgSendSuper2(&v131, sel_init);

      v76 = v75;
      MEMORY[0x24BCF69D0]();
      v17 = (void *)v117;
      if (*(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      sub_24972CD08();
      sub_24972CCE4();
      v77 = v123;
      if (v68)
      {
        v78 = v76;
        MEMORY[0x24BCF69D0]();
        if (*(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_24972CCF0();
        sub_24972CD08();
        sub_24972CCE4();
      }
      v57 = v77 + 1;

      v52 = v115;
      v49 = v124;
      v51 = v126;
    }
    while (v118 != v57);
    v85 = v119;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v86 = v136;
    v123 = v137;
  }
  else
  {
    v85 = v55;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v86 = MEMORY[0x24BEE4AF8];
    v123 = MEMORY[0x24BEE4AF8];
  }
  sub_2497108DC(v86);
  v87 = v85;
  v88 = *(_QWORD *)&v85[OBJC_IVAR___ScreenShotCompat_imageID];
  v89 = *(_QWORD *)&v85[OBJC_IVAR___ScreenShotCompat_imageID + 8];
  swift_bridgeObjectRetain();
  v90 = v87;
  v91 = v144;
  v92 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v91;
  sub_24971E310((uint64_t)v90, v88, v89, v92);
  v93 = v132[0];
  v144 = v132[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v94 = *((_QWORD *)&v138 + 1);
  v122 = (id)v138;
  v95 = v141;
  v145 = v138;
  v146 = v139;
  v147 = v140;
  v148 = v141;
  v149 = v142;
  v150 = v143;
  v151 = v93;
  v96 = (uint64_t *)v107[0];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v97 = v95;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v98 = swift_isUniquelyReferenced_nonNull_native();
  v130 = *v96;
  *v96 = 0x8000000000000000;
  v99 = v122;
  sub_24971E46C(&v145, (uint64_t)v122, v94, v98);
  *v96 = v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v100 = (objc_class *)type metadata accessor for AddedElements();
  v101 = (char *)objc_allocWithZone(v100);
  v102 = &v101[OBJC_IVAR___AddedElementsCompat_groupID];
  *(_QWORD *)v102 = v99;
  *((_QWORD *)v102 + 1) = v94;
  *(_QWORD *)&v101[OBJC_IVAR___AddedElementsCompat_dedupeElements] = v123;
  v129.receiver = v101;
  v129.super_class = v100;
  swift_bridgeObjectRetain();
  v12 = objc_msgSendSuper2(&v129, sel_init);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v103 = v141;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t type metadata accessor for UIDeduplicator()
{
  uint64_t result;

  result = qword_25787A168;
  if (!qword_25787A168)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2496F27DC()
{
  return type metadata accessor for UIDeduplicator();
}

uint64_t sub_2496F27E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C9C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UIDeduplicator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIDeduplicator.identifyElements(screenshot:rectArray:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of UIDeduplicator.findScreenGroup(id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of UIDeduplicator.addElementsForScreen(targetScreenshot:candidateElements:screenGroupID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of UIDeduplicator.getScreenGroups()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of UIDeduplicator.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of UIDeduplicator.setDebug(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of UIDeduplicator.identifyScreenshot(id:image:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t sub_2496F2984()
{
  return swift_release();
}

uint64_t sub_2496F298C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2496F29EC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2496F2A14(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2496F2A70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id DedupeElement.__allocating_init(uiObject:isDuplicate:screenID:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  _BYTE *v9;
  _QWORD *v10;
  id v11;
  id v12;
  objc_super v14;

  v9 = objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR___DedupeElementCompat_screenID];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___DedupeElementCompat_uiObject] = a1;
  v9[OBJC_IVAR___DedupeElementCompat_isDuplicate] = a2;
  *v10 = a3;
  v10[1] = a4;
  v11 = a1;
  swift_bridgeObjectRelease();
  v14.receiver = v9;
  v14.super_class = v4;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

id AddedElements.__allocating_init(groupID:dedupeElements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR___AddedElementsCompat_groupID];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR___AddedElementsCompat_dedupeElements] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DedupeElement.uiObject.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___DedupeElementCompat_uiObject);
}

uint64_t sub_2496F2C28()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___DedupeElementCompat_isDuplicate);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2496F2CB4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___DedupeElementCompat_isDuplicate);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_2496F2CFC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DedupeElement.init(uiObject:isDuplicate:screenID:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v5;
  id v6;
  id v7;
  objc_super v9;

  v5 = &v4[OBJC_IVAR___DedupeElementCompat_screenID];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___DedupeElementCompat_uiObject] = a1;
  v4[OBJC_IVAR___DedupeElementCompat_isDuplicate] = a2;
  *v5 = a3;
  v5[1] = a4;
  v6 = a1;
  swift_bridgeObjectRelease();
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for DedupeElement();
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

void DedupeElement.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DedupeElement.__deallocating_deinit()
{
  return sub_2496F3194(type metadata accessor for DedupeElement);
}

uint64_t AddedElements.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AddedElementsCompat_groupID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AddedElements.dedupeElements.getter()
{
  return swift_bridgeObjectRetain();
}

id AddedElements.init(groupID:dedupeElements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_super v6;

  v4 = &v3[OBJC_IVAR___AddedElementsCompat_groupID];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AddedElementsCompat_dedupeElements] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for AddedElements();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for DedupeElement()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AddedElements()
{
  return objc_opt_self();
}

id AddedElements.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AddedElements.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AddedElements.__deallocating_deinit()
{
  return sub_2496F3194(type metadata accessor for AddedElements);
}

id sub_2496F3194(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2496F31C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___DedupeElementCompat_isDuplicate);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_2496F3214(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___DedupeElementCompat_isDuplicate);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t method lookup function for DedupeElement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DedupeElement.isDuplicate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DedupeElement.isDuplicate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DedupeElement.isDuplicate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DedupeElement.__allocating_init(uiObject:isDuplicate:screenID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for AddedElements()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AddedElements.__allocating_init(groupID:dedupeElements:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t UIType.init(rawValue:)(uint64_t a1)
{
  return sub_2496F3A14(a1);
}

Swift::String __swiftcall UIType.toString()()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Swift::String result;

  v1 = v0;
  if (qword_257879BB0 != -1)
LABEL_27:
    swift_once();
  v2 = 0;
  v3 = 1 << *(_BYTE *)(qword_25787EB58 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = qword_25787EB58 + 64;
  v6 = v4 & *(_QWORD *)(qword_25787EB58 + 64);
  v7 = (unint64_t)(v3 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_6:
    if (*(_QWORD *)(*(_QWORD *)(qword_25787EB58 + 56) + 8 * v9) == v1)
    {
      v13 = (uint64_t *)(*(_QWORD *)(qword_25787EB58 + 48) + 16 * v9);
      v15 = *v13;
      v14 = v13[1];
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v10 >= v7)
    goto LABEL_23;
  v11 = *(_QWORD *)(v5 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_23;
  v11 = *(_QWORD *)(v5 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    goto LABEL_23;
  v11 = *(_QWORD *)(v5 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_6;
  }
  v12 = v10 + 3;
  if (v12 < v7)
  {
    v11 = *(_QWORD *)(v5 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        v2 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_26;
        if (v2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v5 + 8 * v2);
        ++v12;
        if (v11)
          goto LABEL_21;
      }
    }
    v2 = v12;
    goto LABEL_21;
  }
LABEL_23:
  v14 = 0xE700000000000000;
  v15 = 0x6E776F6E6B6E55;
LABEL_24:
  v16 = v15;
  v17 = (void *)v14;
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

unint64_t sub_2496F34B4()
{
  unint64_t result;

  result = sub_24971FA6C((uint64_t)&unk_251AA7C30);
  qword_25787EB58 = result;
  return result;
}

uint64_t static UIType.rawCasesCount.getter()
{
  return 14;
}

uint64_t UIType.init(rawString:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  sub_24972CC0C();
  swift_bridgeObjectRelease();
  sub_2496D9784();
  v0 = sub_24972CF30();
  v2 = v1;
  swift_bridgeObjectRelease();
  if (qword_257879BB0 != -1)
    swift_once();
  v3 = qword_25787EB58;
  if (*(_QWORD *)(qword_25787EB58 + 16) && (v4 = sub_249720628(v0, v2), (v5 & 1) != 0))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2496F3A2C();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t UIType.init(from:)(_QWORD *a1)
{
  return sub_2496F3A70(a1);
}

uint64_t UIType.compareWithoutState(_:)(unint64_t a1, unint64_t a2)
{
  if (a2 == a1)
    return 1;
  if (a2 - 12 < 2)
  {
    if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0xC)
      return 1;
  }
  else if (a2 <= 1 && a1 < 2)
  {
    return 1;
  }
  return 0;
}

BOOL UIType.isOneOf(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 == a1 || a3 == a2;
}

Swift::Bool_optional __swiftcall UIType.isClickable()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  Swift::Bool_optional v5;

  v1 = v0;
  v2 = sub_2497214AC((uint64_t)&unk_251AA7B10);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_2497206BC(v1), (v4 & 1) != 0))
    v5.value = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v3);
  else
    v5.value = 0;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t UIType.visualizationColor.getter(uint64_t a1)
{
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A1B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24972FE70;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = sub_24972CA68();
  *(_QWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = sub_24972CA80();
  *(_QWORD *)(inited + 64) = 2;
  *(_QWORD *)(inited + 72) = sub_24972CA74();
  *(_QWORD *)(inited + 80) = 3;
  *(_QWORD *)(inited + 88) = sub_24972CA8C();
  *(_QWORD *)(inited + 96) = 4;
  *(_QWORD *)(inited + 104) = sub_24972CABC();
  *(_QWORD *)(inited + 112) = 5;
  *(_QWORD *)(inited + 120) = sub_24972CA5C();
  *(_QWORD *)(inited + 128) = 6;
  *(_QWORD *)(inited + 136) = sub_24972CABC();
  *(_QWORD *)(inited + 144) = 7;
  *(_QWORD *)(inited + 152) = sub_24972CAA4();
  *(_QWORD *)(inited + 160) = 8;
  *(_QWORD *)(inited + 168) = sub_24972CA80();
  *(_QWORD *)(inited + 176) = 9;
  *(_QWORD *)(inited + 184) = sub_24972CA74();
  *(_QWORD *)(inited + 192) = 10;
  *(_QWORD *)(inited + 200) = sub_24972CAB0();
  *(_QWORD *)(inited + 208) = 11;
  *(_QWORD *)(inited + 216) = sub_24972CAB0();
  *(_QWORD *)(inited + 224) = 12;
  *(_QWORD *)(inited + 232) = sub_24972CAA4();
  *(_QWORD *)(inited + 240) = 13;
  *(_QWORD *)(inited + 248) = sub_24972CAA4();
  *(_QWORD *)(inited + 256) = 14;
  *(_QWORD *)(inited + 264) = sub_24972CAC8();
  *(_QWORD *)(inited + 272) = -1;
  *(_QWORD *)(inited + 280) = sub_24972CA98();
  v3 = sub_249721580((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A1C0);
  swift_arrayDestroy();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_2497206BC(a1), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_24972CA98();
  }
  return v6;
}

void *static UIType.allCases.getter()
{
  return &unk_251AA7DB8;
}

BOOL sub_2496F3894(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2496F38A8()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

uint64_t sub_2496F38EC()
{
  return sub_24972D2C0();
}

uint64_t sub_2496F3914()
{
  sub_24972D2B4();
  sub_24972D2C0();
  return sub_24972D2D8();
}

void sub_2496F3954(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AA7DB8;
}

uint64_t sub_2496F3964@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_2496F3A14(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2496F3994(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2496F39A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2496F3A70(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2496F39C8()
{
  sub_2496F4078();
  return sub_24972CCA8();
}

uint64_t sub_2496F3A14(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 0x10)
    return 0;
  return result;
}

unint64_t sub_2496F3A2C()
{
  unint64_t result;

  result = qword_25787A1B0;
  if (!qword_25787A1B0)
  {
    result = MEMORY[0x24BCF7648](&unk_249730034, &type metadata for UITypeError);
    atomic_store(result, (unint64_t *)&qword_25787A1B0);
  }
  return result;
}

uint64_t sub_2496F3A70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  _QWORD *v51;

  v42 = sub_24972CFFC();
  v3 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24972C9C0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24972C9B4();
  v10 = a1[3];
  v51 = a1;
  v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v10);
  sub_24972D2E4();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return v11;
  }
  __swift_project_boxed_opaque_existential_1(v49, v50);
  sub_24972D1E8();
  v40 = v12;
  v41 = 0;
  v13 = v42;
  v47 = sub_24972CC0C();
  v48 = v14;
  v45 = 95;
  v46 = 0xE100000000000000;
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_2496D9784();
  v39 = (char *)sub_24972CF30();
  v16 = v15;
  swift_bridgeObjectRelease();
  if (qword_257879BB0 != -1)
    swift_once();
  v17 = qword_25787EB58;
  if (*(_QWORD *)(qword_25787EB58 + 16))
  {
    v18 = sub_249720628((uint64_t)v39, v16);
    if ((v19 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  sub_2496F3A2C();
  v20 = (void *)swift_allocError();
  swift_willThrow();
  v21 = sub_24972C9A8();
  v22 = sub_24972CE04();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v39 = v9;
    v24 = v5;
    v25 = v7;
    v26 = v6;
    v27 = v3;
    v28 = v13;
    v29 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_2496CB000, v21, v22, "JSON decoder failed to match a string, trying raw Int", v23, 2u);
    v30 = v29;
    v13 = v28;
    v3 = v27;
    v6 = v26;
    v7 = v25;
    v5 = v24;
    v9 = v39;
    MEMORY[0x24BCF76F0](v30, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v49, v50);
  v31 = sub_24972D1F4();
  v32 = sub_2496F3A14(v31);
  if ((v33 & 1) != 0)
  {
    sub_24972CFF0();
    v11 = sub_24972D008();
    swift_allocError();
    v35 = v34;
    v36 = (char *)v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25787A1F0) + 48);
    *v35 = &type metadata for UIType;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v36, v5, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v35, *MEMORY[0x24BEE26E0], v11);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (!v41)
      swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    goto LABEL_17;
  }
  v11 = v32;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v41)
    goto LABEL_12;
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v11;
}

unint64_t sub_2496F3EF0()
{
  unint64_t result;

  result = qword_25787A1C8;
  if (!qword_25787A1C8)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for UIType, &type metadata for UIType);
    atomic_store(result, (unint64_t *)&qword_25787A1C8);
  }
  return result;
}

unint64_t sub_2496F3F38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A1D0;
  if (!qword_25787A1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A1D8);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25787A1D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIType()
{
  return &type metadata for UIType;
}

uint64_t storeEnumTagSinglePayload for UITypeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496F3FD4 + 4 * byte_24972FE80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2496F3FF4 + 4 * byte_24972FE85[v4]))();
}

_BYTE *sub_2496F3FD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2496F3FF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496F3FFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496F4004(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496F400C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496F4014(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UITypeError()
{
  return &type metadata for UITypeError;
}

unint64_t sub_2496F4034()
{
  unint64_t result;

  result = qword_25787A1E0;
  if (!qword_25787A1E0)
  {
    result = MEMORY[0x24BCF7648](&unk_24973000C, &type metadata for UITypeError);
    atomic_store(result, (unint64_t *)&qword_25787A1E0);
  }
  return result;
}

unint64_t sub_2496F4078()
{
  unint64_t result;

  result = qword_25787A1E8;
  if (!qword_25787A1E8)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for UIType, &type metadata for UIType);
    atomic_store(result, (unint64_t *)&qword_25787A1E8);
  }
  return result;
}

void sub_2496F40BC(char a1)
{
  sub_24972D2B4();
  __asm { BR              X10 }
}

uint64_t sub_2496F4110()
{
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

void sub_2496F41C8(uint64_t a1, char a2)
{
  sub_24972D2B4();
  __asm { BR              X10 }
}

uint64_t sub_2496F4218()
{
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

id UIObject.__allocating_init(label:confidence:text:boundingBox:children:clickable:focused:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6, char a7, double a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(a1, a2, a3, a4, a8, a5, a6, a7);
}

uint64_t sub_2496F4358(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

double static UIObject.defaultExtendFullScreenThreshold.getter()
{
  return 0.9;
}

void sub_2496F43C8()
{
  qword_25787A1F8 = (uint64_t)&unk_251AA7FB8;
}

uint64_t static UIObject.extendFullScreenUITypes.getter()
{
  if (qword_257879BB8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2496F44D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___UIObjectCompat_id;
  swift_beginAccess();
  v4 = sub_24972C960();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2496F45F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___UIObjectCompat_id;
  swift_beginAccess();
  v4 = sub_24972C960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_2496F4664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR___UIObjectCompat_id;
  swift_beginAccess();
  v4 = sub_24972C960();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_2496F46CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_24972C960();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR___UIObjectCompat_id;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t (*sub_2496F4790())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_2496F481C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  return *v1;
}

void sub_2496F486C(void *a1)
{
  sub_2496F49B8(a1, &OBJC_IVAR___UIObjectCompat_detection);
}

uint64_t (*sub_2496F4878())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_2496F4904()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  return *v1;
}

void sub_2496F4954(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void **v5;
  void *v6;
  id v7;

  v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a3;
  v7 = a3;

}

void sub_2496F49AC(void *a1)
{
  sub_2496F49B8(a1, &OBJC_IVAR___UIObjectCompat_boundingBox);
}

void sub_2496F49B8(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

}

void sub_2496F4A04(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  void **v6;
  void *v7;
  id v8;

  v5 = *a1;
  v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

}

uint64_t (*sub_2496F4A60())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *sub_2496F4AB0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___UIObjectCompat_iconDetection);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_2496F4B08(void *a1)
{
  sub_2496F49B8(a1, &OBJC_IVAR___UIObjectCompat_iconDetection);
}

uint64_t (*sub_2496F4B14())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2496F4BC8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2496F4C7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_children);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496F4CCC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___UIObjectCompat_children);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2496F4D34())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_2496F4D84()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___UIObjectCompat_clickDetection);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_2496F4DDC(void *a1)
{
  sub_2496F49B8(a1, &OBJC_IVAR___UIObjectCompat_clickDetection);
}

uint64_t (*sub_2496F4DE8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_2496F4E38(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id *v3;

  v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_2496F4E7C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___UIObjectCompat_focusDetection);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_2496F4ED4(void *a1)
{
  sub_2496F49B8(a1, &OBJC_IVAR___UIObjectCompat_focusDetection);
}

uint64_t (*sub_2496F4EE0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

__n128 sub_2496F4F24@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + OBJC_IVAR___UIObjectCompat_normalizedSquaredRect;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

uint64_t sub_2496F4F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___UIObjectCompat_normalizedSquaredRect;
  swift_beginAccess();
  return sub_2496F58F4(a1, v3);
}

uint64_t (*sub_2496F4FC8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2496F500C()
{
  return sub_2496F5034(&OBJC_IVAR___UIObjectCompat_clickDetection, &OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable);
}

uint64_t sub_2496F5020()
{
  return sub_2496F5034(&OBJC_IVAR___UIObjectCompat_focusDetection, &OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused);
}

uint64_t sub_2496F5034(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  if (*v4)
    return *(unsigned __int8 *)(*v4 + *a2);
  else
    return 0;
}

uint64_t sub_2496F508C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_iconDetection);
  swift_beginAccess();
  if (*v1)
    return *(_QWORD *)(*v1 + OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label);
  else
    return 0;
}

double sub_2496F50F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v2 = *v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  return *(double *)(v2 + 16);
}

double sub_2496F5160()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v2 = *v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  return *(double *)v2;
}

uint64_t sub_2496F51D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v4 = (_QWORD *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  v5 = v4[1];
  *a2 = *v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2496F5250(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v5 = (_QWORD *)(*v4 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  *v5 = v3;
  v5[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496F52E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_2496F535C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v6 = (_QWORD *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*sub_2496F53E0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___UIObjectCompat_detection;
  v3[14] = v1;
  v3[15] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = (_QWORD *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  swift_beginAccess();
  v7 = v6[1];
  v3[12] = *v6;
  v3[13] = v7;
  swift_bridgeObjectRetain();
  return sub_2496F5480;
}

void sub_2496F5480(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  v5 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 112) + *(_QWORD *)(*(_QWORD *)a1 + 120))
                + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
  if ((a2 & 1) != 0)
  {
    swift_beginAccess();
    *v5 = v3;
    v5[1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    *v5 = v3;
    v5[1] = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

id UIObject.__allocating_init(detection:clickable:focused:icon:boundingBox:children:)(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_2496F8648(a1, a2, a3, a4, a5, a6);

  return v14;
}

id UIObject.init(detection:clickable:focused:icon:boundingBox:children:)(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v11;

  v11 = sub_2496F8648(a1, a2, a3, a4, a5, a6);

  return v11;
}

id UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, uint64_t a6, char a7, char a8)
{
  objc_class *v15;
  char *v16;
  char *v17;
  id v18;
  objc_class *v19;
  _BYTE *v20;
  id v21;
  objc_class *v22;
  _BYTE *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v30;
  objc_super v31;
  objc_super v32;
  objc_super v33;

  v15 = (objc_class *)type metadata accessor for UIDetection();
  v16 = (char *)objc_allocWithZone(v15);
  v17 = &v16[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label] = a1;
  *(double *)&v16[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence] = a5;
  swift_beginAccess();
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  swift_bridgeObjectRelease();
  v33.receiver = v16;
  v33.super_class = v15;
  v18 = objc_msgSendSuper2(&v33, sel_init);
  v19 = (objc_class *)type metadata accessor for ClickabilityDetection();
  v20 = objc_allocWithZone(v19);
  v20[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = a7;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = -1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = 0;
  v32.receiver = v20;
  v32.super_class = v19;
  v21 = objc_msgSendSuper2(&v32, sel_init);
  v22 = (objc_class *)type metadata accessor for FocusDetection();
  v23 = objc_allocWithZone(v22);
  v23[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = a8;
  *(_QWORD *)&v23[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = 0;
  v31.receiver = v23;
  v31.super_class = v22;
  v24 = objc_msgSendSuper2(&v31, sel_init);
  type metadata accessor for UIObject();
  v25 = v21;
  v26 = v24;
  v27 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v30, sel_initWithDetection_clickable_focused_icon_boundingBox_children_, v18, v25, v26, 0, a4, v27);

  return v28;
}

uint64_t sub_2496F58F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *UIObject.__allocating_init(from:)(_QWORD *a1)
{
  return sub_2496F8800(a1);
}

void sub_2496F5A08(char *a1)
{
  sub_2497218CC(*a1);
}

void sub_2496F5A14()
{
  char *v0;

  sub_2496F40BC(*v0);
}

void sub_2496F5A1C()
{
  __asm { BR              X10 }
}

uint64_t sub_2496F5A5C()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

void sub_2496F5B00(uint64_t a1)
{
  char *v1;

  sub_2496F41C8(a1, *v1);
}

uint64_t sub_2496F5B08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496F8298();
  *a1 = result;
  return result;
}

uint64_t sub_2496F5B34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2496F5B68 + 4 * byte_249730092[*v0]))();
}

void sub_2496F5B68(char *a1@<X8>)
{
  strcpy(a1, "clickDetection");
  a1[15] = -18;
}

void sub_2496F5B90(char *a1@<X8>)
{
  strcpy(a1, "focusDetection");
  a1[15] = -18;
}

void sub_2496F5BB8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "iconDetection");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_2496F5BE0(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69646E756F62;
  a1[1] = 0xEB00000000786F42;
}

void sub_2496F5C04(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6572646C696863;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_2496F5C20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2496F5C54 + 4 * byte_249730098[*v0]))(0x6F69746365746564, 0xE90000000000006ELL);
}

uint64_t sub_2496F5C54()
{
  return 0x7465446B63696C63;
}

uint64_t sub_2496F5C88()
{
  return 0x657465446E6F6369;
}

uint64_t sub_2496F5CAC()
{
  return 0x676E69646E756F62;
}

uint64_t sub_2496F5CCC()
{
  return 0x6E6572646C696863;
}

uint64_t sub_2496F5CE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2496F8298();
  *a1 = result;
  return result;
}

void sub_2496F5D08(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2496F5D14()
{
  sub_2496F8C94();
  return sub_24972D308();
}

uint64_t sub_2496F5D3C()
{
  sub_2496F8C94();
  return sub_24972D314();
}

uint64_t static UIObject.nonMaximalSuppressionIOU(boxes:threshold:)(unint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a1;
  v19 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_20;
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      v17 = v4;
      sub_2496F7284(&v17);
      v5 = v17;
      v18 = v17;
      if (v17 < 0 || (v17 & 0x4000000000000000) != 0)
        break;
      if (*(uint64_t *)(v17 + 16) < 1)
        goto LABEL_24;
      while (1)
      {
LABEL_7:
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v5 & 0x8000000000000000) != 0
          || (v5 & 0x4000000000000000) != 0)
        {
          sub_2496F7300(v5);
        }
        v3 = v5 & 0xFFFFFFFFFFFFFF8;
        v6 = *(_QWORD *)(v3 + 16);
        if (!v6)
          break;
        v7 = v6 - 1;
        v9 = *(void **)(v3 + 32);
        v8 = v3 + 32;
        memmove((void *)v8, (const void *)(v8 + 8), 8 * (v6 - 1));
        *(_QWORD *)(v8 - 16) = v7;
        sub_24972CCE4();
        v10 = v9;
        MEMORY[0x24BCF69D0]();
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_24972CCF0();
        sub_24972CD08();
        sub_24972CCE4();
        v11 = swift_bridgeObjectRetain();
        v5 = sub_2496F82E0(v11, v10, a2);
        swift_bridgeObjectRelease_n();

        v18 = v5;
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          v12 = sub_24972D0BC();
          swift_bridgeObjectRelease();
          if (v12 <= 0)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            return v19;
          }
        }
        else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
        {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      v13 = sub_24972D0BC();
      swift_bridgeObjectRelease();
      if (v13 < 1)
        goto LABEL_22;
      v14 = swift_bridgeObjectRetain();
      v4 = (uint64_t)sub_2496F1168(v14);
      swift_bridgeObjectRelease();
    }
    swift_retain();
    v15 = sub_24972D0BC();
    swift_release();
    if (v15 >= 1)
      goto LABEL_7;
LABEL_24:
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  return v3;
}

double sub_2496F5FD4(uint64_t a1)
{
  return sub_2496F5FE0((double)a1);
}

double sub_2496F5FE0(double a1)
{
  uint64_t v1;
  _QWORD *v3;
  CGRect *v4;
  double v5;
  double v6;
  CGRect *v7;
  CGRect *v8;
  CGRect *v9;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v4 = (CGRect *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v5 = CGRectGetMinX(*v4) * a1;
  if (v5 < 0.0)
    v5 = 0.0;
  v6 = round(v5);
  v7 = (CGRect *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetMinY(*v7);
  v8 = (CGRect *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetWidth(*v8);
  v9 = (CGRect *)(*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetHeight(*v9);
  return v6;
}

void sub_2496F6158(double a1)
{
  uint64_t v1;
  void **v3;
  CGRect *v4;
  double MinX;
  double v6;
  CGRect *v7;
  double MinY;
  char *v9;
  double *v10;
  double v11;
  CGRect *v12;
  double MaxX;
  double v14;
  char *v15;
  uint64_t v16;
  double v17;
  CGRect *v18;
  double MaxY;
  double *v20;
  double v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  char *v33;
  double *v34;
  char *v35;
  id v36;
  void *v37;
  objc_super v38;

  v3 = (void **)(v1 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v4 = (CGRect *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  MinX = CGRectGetMinX(*v4);
  if (MinX < 0.0)
    v6 = 0.0;
  else
    v6 = MinX;
  v7 = (CGRect *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  MinY = CGRectGetMinY(*v7);
  v9 = (char *)*v3;
  v10 = (double *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v11 = *v10;
  v12 = (CGRect *)&v9[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  MaxX = CGRectGetMaxX(*v12);
  if (MaxX >= v11)
    v14 = v11;
  else
    v14 = MaxX;
  v15 = (char *)*v3;
  v16 = (uint64_t)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize;
  swift_beginAccess();
  v17 = *(double *)(v16 + 8);
  v18 = (CGRect *)&v15[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  MaxY = CGRectGetMaxY(*v18);
  v20 = (double *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v21 = *v20;
  if (qword_257879BB8 != -1)
    swift_once();
  v22 = v14 - v6;
  v23 = qword_25787A1F8;
  v24 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  if ((sub_2496F4358(*(_QWORD *)(*v24 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label), v23) & 1) != 0
    && v21 * a1 < v22)
  {
    v25 = (double *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
    swift_beginAccess();
    v22 = *v25;
    v6 = 0.0;
  }
  if (MaxY >= v17)
    v26 = v17;
  else
    v26 = MaxY;
  if (MinY < 0.0)
    v27 = 0.0;
  else
    v27 = MinY;
  v28 = v26 - v27;
  v29 = (uint64_t *)((char *)*v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v30 = *v29;
  v31 = v29[1];
  v32 = (objc_class *)type metadata accessor for BoundingBox();
  v33 = (char *)objc_allocWithZone(v32);
  v34 = (double *)&v33[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  *v34 = v6;
  v34[1] = v27;
  v34[2] = v22;
  v34[3] = v28;
  v35 = &v33[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  *(_QWORD *)v35 = v30;
  *((_QWORD *)v35 + 1) = v31;
  v38.receiver = v33;
  v38.super_class = v32;
  v36 = objc_msgSendSuper2(&v38, sel_init);
  v37 = *v3;
  *v3 = v36;

}

uint64_t sub_2496F6444()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  return *(_QWORD *)(*v1 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
}

uint64_t sub_2496F6498()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_clickDetection);
  swift_beginAccess();
  if (*v1)
    return *(_QWORD *)(*v1 + OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType);
  else
    return -1;
}

uint64_t sub_2496F654C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v26;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR___UIObjectCompat_clickDetection);
  swift_beginAccess();
  v26 = v2;
  if (!*v2 || (v3 = *(_QWORD *)(*v2 + OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType), v3 == -1))
  {
    swift_beginAccess();
    UIType.toString()();
  }
  else
  {
    ClickabilityType.description.getter(v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A160);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24972F6C0;
  v5 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v6 = *(_QWORD *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
  v7 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 32) = v6;
  sub_24972CBD0();
  swift_bridgeObjectRelease();
  sub_24972CFB4();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24972FA80;
  v9 = (id *)(v1 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v10 = *v9;
  sub_24970E3AC();
  v12 = v11;

  v13 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE50B0];
  v14 = sub_2496F8C50();
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 32) = v12;
  v15 = *v9;
  sub_24970E3AC();
  v17 = v16;

  *(_QWORD *)(v8 + 96) = v13;
  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 72) = v17;
  sub_24972CBD0();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24972FA80;
  v19 = (uint64_t)*v9 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 56) = v13;
  *(_QWORD *)(v18 + 64) = v14;
  *(_QWORD *)(v18 + 32) = v20;
  v21 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 96) = v13;
  *(_QWORD *)(v18 + 104) = v14;
  *(_QWORD *)(v18 + 72) = v21;
  sub_24972CBD0();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
  {
    v22 = *v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
    swift_beginAccess();
    if (*(_QWORD *)(v22 + 8))
    {
      swift_bridgeObjectRetain();
      sub_24972CC48();
      swift_bridgeObjectRelease();
      sub_24972CC48();
      swift_bridgeObjectRelease();
    }
  }
  if (*(_QWORD *)(*v5 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
  {
    v23 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_iconDetection);
    swift_beginAccess();
    if (*v23)
    {
      sub_24972CC48();
      IconLabel.toString()();
      sub_24972CC48();
      swift_bridgeObjectRelease();
      sub_24972CC48();
      sub_24972CD38();
      sub_24972CC48();
      sub_24972CC48();
      swift_bridgeObjectRelease();
    }
  }
  if (*v26)
  {
    sub_24972CFB4();
    sub_24972CC48();
    sub_24972CC48();
    swift_bridgeObjectRelease();
    sub_24972CC48();
    sub_24972CD38();
    sub_24972CC48();
    sub_24972CC48();
    swift_bridgeObjectRelease();
  }
  v24 = (_QWORD *)(v1 + OBJC_IVAR___UIObjectCompat_focusDetection);
  swift_beginAccess();
  if (*v24)
  {
    sub_24972CFB4();
    sub_24972CC48();
    sub_24972CC48();
    swift_bridgeObjectRelease();
    sub_24972CC48();
    sub_24972CD38();
    sub_24972CC48();
    sub_24972CC48();
    swift_bridgeObjectRelease();
  }
  sub_24972CC48();
  return 31522;
}

id UIObject.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIObject.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIObject.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIObject();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2496F6DE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A210);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496F8C94();
  sub_24972D2FC();
  v9 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_detection);
  swift_beginAccess();
  v22 = *v9;
  LOBYTE(v21) = 0;
  type metadata accessor for UIDetection();
  sub_2496CED84(&qword_25787A220, (uint64_t (*)(uint64_t))type metadata accessor for UIDetection, (uint64_t)&protocol conformance descriptor for UIDetection);
  sub_24972D1A0();
  if (!v2)
  {
    v10 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_clickDetection);
    swift_beginAccess();
    v21 = *v10;
    LOBYTE(v20) = 1;
    type metadata accessor for ClickabilityDetection();
    sub_2496CED84(&qword_25787A228, (uint64_t (*)(uint64_t))type metadata accessor for ClickabilityDetection, (uint64_t)&protocol conformance descriptor for ClickabilityDetection);
    sub_24972D158();
    v11 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_focusDetection);
    swift_beginAccess();
    v20 = *v11;
    LOBYTE(v19) = 2;
    type metadata accessor for FocusDetection();
    sub_2496CED84(&qword_25787A230, (uint64_t (*)(uint64_t))type metadata accessor for FocusDetection, (uint64_t)&protocol conformance descriptor for FocusDetection);
    sub_24972D158();
    v12 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_iconDetection);
    swift_beginAccess();
    v19 = *v12;
    LOBYTE(v18) = 3;
    type metadata accessor for IconDetection();
    sub_2496CED84(&qword_25787A238, (uint64_t (*)(uint64_t))type metadata accessor for IconDetection, (uint64_t)&protocol conformance descriptor for IconDetection);
    sub_24972D158();
    v13 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_boundingBox);
    swift_beginAccess();
    v18 = *v13;
    LOBYTE(v17) = 4;
    type metadata accessor for BoundingBox();
    sub_2496CED84(&qword_25787A240, (uint64_t (*)(uint64_t))type metadata accessor for BoundingBox, (uint64_t)&protocol conformance descriptor for BoundingBox);
    sub_24972D1A0();
    v14 = (uint64_t *)(v3 + OBJC_IVAR___UIObjectCompat_children);
    swift_beginAccess();
    v17 = *v14;
    v16[7] = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A248);
    sub_2496F97FC(&qword_25787A250, &qword_25787A258, (uint64_t)&protocol conformance descriptor for UIObject, MEMORY[0x24BEE12A0]);
    sub_24972D1A0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_2496F71B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_2496F8800(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2496F71D8(_QWORD *a1)
{
  return sub_2496F6DE0(a1);
}

uint64_t sub_2496F71F8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR___UIObjectCompat_id;
  swift_beginAccess();
  v4 = sub_24972C960();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

UIUnderstanding::DetectionResultType_optional __swiftcall DetectionResultType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (UIUnderstanding::DetectionResultType_optional)rawValue;
}

uint64_t DetectionResultType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

UIUnderstanding::DetectionResultType_optional sub_2496F727C(Swift::Int *a1)
{
  return DetectionResultType.init(rawValue:)(*a1);
}

uint64_t sub_2496F7284(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v4;
  uint64_t *v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971FA68();
  v4 = *(uint64_t **)(v2 + 16);
  v6[0] = (uint64_t *)(v2 + 32);
  v6[1] = v4;
  sub_2496F7390(v6);
  return sub_24972D02C();
}

void sub_2496F7300(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24BCF6CF4);
}

_QWORD *sub_2496F7368(_QWORD *a1)
{
  return sub_24970A638(0, a1[2], 0, a1);
}

_QWORD *sub_2496F737C(_QWORD *a1)
{
  return sub_24970AE88(0, a1[2], 0, a1);
}

uint64_t sub_2496F7390(uint64_t **a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  _QWORD *v31;
  double v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  double v113;
  _QWORD *v114;
  char *v115;
  BOOL v116;
  char *v117;
  uint64_t v118;
  int64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  unint64_t v125;
  double v126;
  _QWORD *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  unint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  uint64_t **v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  char *v155;
  char *__dst;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;

  v2 = a1;
  v3 = (uint64_t)a1[1];
  result = sub_24972D1B8();
  v143 = v3;
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return result;
      v9 = *v2;
      v10 = -1;
      v11 = 1;
      for (i = v9; ; ++i)
      {
        v13 = v9[v11];
        v157 = v10;
        v14 = i;
        do
        {
          v15 = *v14;
          v16 = (_QWORD *)(v13 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          v17 = *(double *)(*v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
          v18 = (_QWORD *)(v15 + OBJC_IVAR___UIObjectCompat_detection);
          result = swift_beginAccess();
          if (*(double *)(*v18 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v17)
            break;
          if (!v9)
            goto LABEL_195;
          v19 = *v14;
          v13 = v14[1];
          *v14 = v13;
          v14[1] = v19;
          --v14;
          v20 = __CFADD__(v10++, 1);
        }
        while (!v20);
        ++v11;
        v10 = v157 - 1;
        if (v11 == v143)
          return result;
      }
    }
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    sub_24972D0F8();
    __break(1u);
LABEL_200:
    result = sub_24972D074();
    __break(1u);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_200;
  v141 = result;
  if (v3 < 2)
  {
    v21 = (char *)MEMORY[0x24BEE4AF8];
    v160 = MEMORY[0x24BEE4AF8];
    v8 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v25 < 2)
        goto LABEL_167;
LABEL_157:
      v133 = *v2;
      while (1)
      {
        v134 = v25 - 2;
        if (v25 < 2)
          break;
        if (!v133)
          goto LABEL_198;
        v135 = *(_QWORD *)&v21[16 * v134 + 32];
        v136 = *(_QWORD *)&v21[16 * v25 + 24];
        sub_2496F7F40((char *)&v133[v135], (char *)&v133[*(_QWORD *)&v21[16 * v25 + 16]], (unint64_t)&v133[v136], v8);
        if (v1)
          goto LABEL_167;
        if (v136 < v135)
          goto LABEL_187;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_24971DDC8((uint64_t)v21);
        if (v134 >= *((_QWORD *)v21 + 2))
          goto LABEL_188;
        v137 = &v21[16 * v134 + 32];
        *(_QWORD *)v137 = v135;
        *((_QWORD *)v137 + 1) = v136;
        v138 = *((_QWORD *)v21 + 2);
        if (v25 > v138)
          goto LABEL_189;
        memmove(&v21[16 * v25 + 16], &v21[16 * v25 + 32], 16 * (v138 - v25));
        *((_QWORD *)v21 + 2) = v138 - 1;
        v25 = v138 - 1;
        if (v138 <= 2)
          goto LABEL_167;
      }
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
      goto LABEL_194;
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for UIObject();
    v7 = sub_24972CCFC();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v160 = v7;
  }
  __dst = v8;
  v22 = 0;
  v23 = *v2;
  v139 = v2;
  v140 = (uint64_t)(*v2 + 2);
  v144 = (uint64_t)(*v2 - 1);
  v21 = (char *)MEMORY[0x24BEE4AF8];
  v24 = v3;
  v154 = v23;
  do
  {
    v26 = v22;
    v27 = v22 + 1;
    v158 = v22;
    if (v22 + 1 < v24)
    {
      v28 = v23[v22];
      v29 = (_QWORD *)(v23[v27] + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v30 = *(double *)(*v29 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v31 = (_QWORD *)(v28 + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v32 = *(double *)(*v31 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v27 = v26 + 2;
      if (v26 + 2 < v24)
      {
        v33 = (_QWORD *)(v140 + 8 * v26);
        while (1)
        {
          v34 = *(v33 - 1);
          v35 = (_QWORD *)(*v33 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          v36 = *(double *)(*v35 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
          v37 = (_QWORD *)(v34 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          if (v32 < v30 == *(double *)(*v37 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v36)
            break;
          ++v27;
          ++v33;
          if (v24 == v27)
          {
            v27 = v24;
            break;
          }
        }
        v23 = v154;
        v26 = v158;
      }
      if (v32 < v30)
      {
        if (v27 < v26)
          goto LABEL_190;
        if (v26 < v27)
        {
          v38 = (uint64_t *)(v144 + 8 * v27);
          v39 = v27;
          v40 = v26;
          v41 = &v23[v26];
          do
          {
            if (v40 != --v39)
            {
              if (!v23)
                goto LABEL_197;
              v42 = *v41;
              *v41 = *v38;
              *v38 = v42;
            }
            ++v40;
            --v38;
            ++v41;
          }
          while (v40 < v39);
        }
      }
    }
    if (v27 < v24)
    {
      if (__OFSUB__(v27, v26))
        goto LABEL_185;
      if (v27 - v26 < v141)
      {
        if (__OFADD__(v26, v141))
          goto LABEL_191;
        if (v26 + v141 < v24)
          v24 = v26 + v141;
        if (v24 < v26)
          goto LABEL_192;
        if (v27 == v24)
        {
          v23 = v154;
        }
        else
        {
          v146 = v21;
          v43 = (uint64_t *)(v144 + 8 * v27);
          do
          {
            v44 = v27;
            v45 = v154[v27];
            v46 = v43;
            do
            {
              v47 = *v46;
              v48 = (_QWORD *)(v45 + OBJC_IVAR___UIObjectCompat_detection);
              swift_beginAccess();
              v49 = *(double *)(*v48 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
              v50 = (_QWORD *)(v47 + OBJC_IVAR___UIObjectCompat_detection);
              swift_beginAccess();
              if (*(double *)(*v50 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v49)
                break;
              if (!v154)
                goto LABEL_193;
              v51 = *v46;
              v45 = v46[1];
              *v46 = v45;
              v46[1] = v51;
              --v46;
              ++v26;
            }
            while (v44 != v26);
            v27 = v44 + 1;
            ++v43;
            v26 = v158;
          }
          while (v44 + 1 != v24);
          v27 = v24;
          v23 = v154;
          v21 = v146;
        }
      }
    }
    if (v27 < v26)
      goto LABEL_184;
    v142 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_24971DB80(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v53 = *((_QWORD *)v21 + 2);
    v52 = *((_QWORD *)v21 + 3);
    v25 = v53 + 1;
    if (v53 >= v52 >> 1)
      v21 = sub_24971DB80((char *)(v52 > 1), v53 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v25;
    v54 = v21 + 32;
    v55 = &v21[16 * v53 + 32];
    *(_QWORD *)v55 = v26;
    *((_QWORD *)v55 + 1) = v142;
    if (v53)
    {
      v145 = v21 + 32;
      v147 = v21;
      while (1)
      {
        v56 = v25 - 1;
        if (v25 >= 4)
        {
          v61 = &v54[16 * v25];
          v62 = *((_QWORD *)v61 - 8);
          v63 = *((_QWORD *)v61 - 7);
          v67 = __OFSUB__(v63, v62);
          v64 = v63 - v62;
          if (v67)
            goto LABEL_173;
          v66 = *((_QWORD *)v61 - 6);
          v65 = *((_QWORD *)v61 - 5);
          v67 = __OFSUB__(v65, v66);
          v59 = v65 - v66;
          v60 = v67;
          if (v67)
            goto LABEL_174;
          v68 = v25 - 2;
          v69 = &v54[16 * v25 - 32];
          v71 = *(_QWORD *)v69;
          v70 = *((_QWORD *)v69 + 1);
          v67 = __OFSUB__(v70, v71);
          v72 = v70 - v71;
          if (v67)
            goto LABEL_176;
          v67 = __OFADD__(v59, v72);
          v73 = v59 + v72;
          if (v67)
            goto LABEL_179;
          if (v73 >= v64)
          {
            v91 = &v54[16 * v56];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v67 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v67)
              goto LABEL_183;
            v84 = v59 < v94;
            goto LABEL_93;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v85 = *((_QWORD *)v21 + 4);
            v86 = *((_QWORD *)v21 + 5);
            v67 = __OFSUB__(v86, v85);
            v78 = v86 - v85;
            v79 = v67;
            goto LABEL_87;
          }
          v58 = *((_QWORD *)v21 + 4);
          v57 = *((_QWORD *)v21 + 5);
          v67 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          v60 = v67;
        }
        if ((v60 & 1) != 0)
          goto LABEL_175;
        v68 = v25 - 2;
        v74 = &v54[16 * v25 - 32];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v77 = __OFSUB__(v75, v76);
        v78 = v75 - v76;
        v79 = v77;
        if (v77)
          goto LABEL_178;
        v80 = &v54[16 * v56];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v67 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v67)
          goto LABEL_181;
        if (__OFADD__(v78, v83))
          goto LABEL_182;
        if (v78 + v83 >= v59)
        {
          v84 = v59 < v83;
LABEL_93:
          if (v84)
            v56 = v68;
          goto LABEL_95;
        }
LABEL_87:
        if ((v79 & 1) != 0)
          goto LABEL_177;
        v87 = &v54[16 * v56];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v67 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v67)
          goto LABEL_180;
        if (v90 < v78)
          goto LABEL_21;
LABEL_95:
        if (v56 - 1 >= v25)
        {
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (!v23)
          goto LABEL_196;
        v150 = v56 - 1;
        v149 = &v54[16 * v56 - 16];
        v95 = *(_QWORD *)v149;
        v96 = &v54[16 * v56];
        v97 = *(_QWORD *)v96;
        v148 = v96;
        v98 = (char *)&v23[*(_QWORD *)v149];
        v99 = (char *)&v23[*(_QWORD *)v96];
        v152 = v56;
        v153 = *((_QWORD *)v96 + 1);
        v100 = (unint64_t)&v23[v153];
        v101 = v99 - v98;
        v102 = v99 - v98 + 7;
        if (v99 - v98 >= 0)
          v102 = v99 - v98;
        v103 = v102 >> 3;
        v104 = v100 - (_QWORD)v99;
        v105 = v100 - (_QWORD)v99 + 7;
        if ((uint64_t)(v100 - (_QWORD)v99) >= 0)
          v105 = v100 - (_QWORD)v99;
        v106 = v105 >> 3;
        v151 = *(_QWORD *)v149;
        if (v103 >= v105 >> 3)
        {
          v117 = __dst;
          if (v104 < -7)
            goto LABEL_199;
          if ((unint64_t)__dst >= v100 || __dst != v99)
          {
            v118 = *(_QWORD *)v149;
            memmove(__dst, v99, 8 * v106);
            v117 = __dst;
            v95 = v118;
          }
          v108 = (unint64_t)&v117[8 * v106];
          v119 = v152;
          if (v95 >= v97 || v104 < 8)
          {
            v109 = v117;
            goto LABEL_143;
          }
          v120 = (char *)(v144 + 8 * v153);
          v155 = v98;
          while (2)
          {
            v121 = (char *)(v108 - 8);
            v159 = v120 + 8;
            v123 = v99 - 8;
            v122 = *((_QWORD *)v99 - 1);
            v124 = (_QWORD *)(*(_QWORD *)(v108 - 8) + OBJC_IVAR___UIObjectCompat_detection);
            v125 = v108;
            swift_beginAccess();
            v126 = *(double *)(*v124 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
            v127 = (_QWORD *)(v122 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(double *)(*v127 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) < v126)
            {
              v128 = (unint64_t)v155;
              if (v159 == v99)
              {
                v20 = v120 >= v99;
                v99 -= 8;
                v109 = __dst;
                v108 = v125;
                if (!v20)
                  goto LABEL_136;
              }
              else
              {
                v99 -= 8;
                v109 = __dst;
                v108 = v125;
              }
              goto LABEL_135;
            }
            v128 = (unint64_t)v155;
            v123 = v121;
            if (v159 != (char *)v125)
            {
              v108 = (unint64_t)v121;
              v109 = __dst;
              goto LABEL_135;
            }
            v108 = (unint64_t)v121;
            v109 = __dst;
            if ((unint64_t)v120 >= v125)
LABEL_135:
              *(_QWORD *)v120 = *(_QWORD *)v123;
LABEL_136:
            if (v128 >= (unint64_t)v99)
              goto LABEL_141;
            v120 -= 8;
            if ((unint64_t)v109 >= v108)
              goto LABEL_141;
            continue;
          }
        }
        v107 = __dst;
        if (v101 < -7)
          goto LABEL_199;
        if (__dst != v98 || __dst >= v99)
        {
          memmove(__dst, v98, 8 * v103);
          v107 = __dst;
        }
        v108 = (unint64_t)&v107[8 * v103];
        if (v97 < v153 && v101 >= 8)
        {
          v109 = __dst;
          while (1)
          {
            v110 = v108;
            v111 = *(_QWORD *)v109;
            v112 = (_QWORD *)(*(_QWORD *)v99 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            v113 = *(double *)(*v112 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
            v114 = (_QWORD *)(v111 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(double *)(*v114 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v113)
              break;
            v115 = v99;
            v116 = v98 == v99;
            v99 += 8;
            v108 = v110;
            if (!v116)
              goto LABEL_114;
LABEL_115:
            v98 += 8;
            if ((unint64_t)v109 >= v108 || (unint64_t)v99 >= v100)
              goto LABEL_140;
          }
          v115 = v109;
          v116 = v98 == v109;
          v109 += 8;
          v108 = v110;
          if (v116)
            goto LABEL_115;
LABEL_114:
          *(_QWORD *)v98 = *(_QWORD *)v115;
          goto LABEL_115;
        }
        v109 = __dst;
LABEL_140:
        v99 = v98;
LABEL_141:
        v119 = v152;
LABEL_143:
        v129 = v108 - (_QWORD)v109 + 7;
        if ((uint64_t)(v108 - (_QWORD)v109) >= 0)
          v129 = v108 - (_QWORD)v109;
        v21 = v147;
        if ((uint64_t)(v108 - (_QWORD)v109) <= -8)
          goto LABEL_199;
        v130 = v129 >> 3;
        v23 = v154;
        if (v99 != v109 || v99 >= &v109[8 * v130])
          memmove(v99, v109, 8 * v130);
        if (v153 < v151)
          goto LABEL_170;
        if (v119 > *((_QWORD *)v147 + 2))
          goto LABEL_171;
        *(_QWORD *)v149 = v151;
        v54 = v145;
        *(_QWORD *)&v145[16 * v150 + 8] = v153;
        v131 = v119;
        v132 = *((_QWORD *)v147 + 2);
        if (v131 >= (uint64_t)v132)
          goto LABEL_172;
        v25 = v132 - 1;
        memmove(v148, v148 + 16, 16 * (v132 - 1 - v131));
        *((_QWORD *)v147 + 2) = v132 - 1;
        if (v132 <= 2)
          goto LABEL_21;
      }
    }
    v25 = 1;
LABEL_21:
    v22 = v142;
    v24 = v143;
  }
  while (v142 < v143);
  v8 = __dst;
  v2 = v139;
  if (v25 >= 2)
    goto LABEL_157;
LABEL_167:
  swift_bridgeObjectRelease();
  *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_24972CCE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496F7F40(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  _QWORD *v28;
  char *v29;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v34 = __dst;
  v35 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_45;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v20 = &v4[8 * v13];
    v33 = v20;
    v35 = v6;
    if (v7 >= v6 || v11 < 8)
      goto LABEL_44;
    v21 = (char *)(a3 - 8);
    v22 = v6;
    v31 = v4;
    while (1)
    {
      v32 = v6;
      v23 = v21 + 8;
      v24 = v20 - 8;
      v25 = *((_QWORD *)v22 - 1);
      v22 -= 8;
      v26 = (_QWORD *)(*((_QWORD *)v20 - 1) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v27 = *(double *)(*v26 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v28 = (_QWORD *)(v25 + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(double *)(*v28 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v27)
      {
        v33 = v20 - 8;
        if (v23 >= v20 && v21 < v20)
        {
          v29 = v31;
          if (v23 != v20)
            *(_QWORD *)v21 = *(_QWORD *)v24;
          v22 = v32;
          v20 -= 8;
          goto LABEL_42;
        }
        *(_QWORD *)v21 = *(_QWORD *)v24;
        v22 = v32;
        v20 -= 8;
      }
      else
      {
        if (v23 != v32 || v21 >= v32)
          *(_QWORD *)v21 = *(_QWORD *)v22;
        v35 = v22;
      }
      v29 = v31;
LABEL_42:
      if (v22 > v7)
      {
        v21 -= 8;
        v6 = v22;
        if (v20 > v29)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)v4;
        v16 = (_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v17 = *(double *)(*v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
        v18 = (_QWORD *)(v15 + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(double *)(*v18 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v17)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v34 = v4;
          v19 = v6;
        }
        else
        {
          v19 = v6 + 8;
          if (v7 < v6 || v7 >= v19 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v19;
      }
      while ((unint64_t)v19 < a3);
      v35 = v7;
    }
LABEL_44:
    sub_24971DC78(&v35, &v34, &v33);
    return 1;
  }
LABEL_45:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2496F8298()
{
  unint64_t v0;

  v0 = sub_24972D110();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_2496F82E0(unint64_t a1, char *a2, float a3)
{
  uint64_t v5;
  void **v6;
  unint64_t i;
  char *v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  char *v14;
  uint64_t v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat *v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  id v25;
  char *v26;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  double v37;
  double v38;
  float v39;
  char *v41;
  void **v42;
  CGFloat r2;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  uint64_t v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v49 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v6 = (void **)&a2[OBJC_IVAR___UIObjectCompat_boundingBox];
  a2 += OBJC_IVAR___UIObjectCompat_detection;
  v42 = v6;
  swift_beginAccess();
  v41 = a2;
  swift_beginAccess();
  if (v5)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (char *)MEMORY[0x24BCF6CE8](i, a1);
      }
      else
      {
        if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          v5 = sub_24972D0BC();
          goto LABEL_3;
        }
        v8 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      v9 = v8;
      v10 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_21;
      v11 = v5;
      v12 = (void **)&v8[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v13 = *v12;
      v14 = (char *)*v42;
      v15 = (uint64_t)*v12 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v16 = *(double *)v15;
      v17 = *(double *)(v15 + 8);
      v18 = *(double *)(v15 + 16);
      v19 = *(double *)(v15 + 24);
      v20 = (CGFloat *)&v14[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v21 = *v20;
      v22 = v20[1];
      v24 = v20[2];
      v23 = v20[3];
      v25 = v13;
      v26 = v14;
      v47 = v17;
      v48 = v16;
      v50.origin.x = v16;
      v50.origin.y = v17;
      v45 = v19;
      v46 = v18;
      v50.size.width = v18;
      v50.size.height = v19;
      v56.origin.x = v21;
      v56.origin.y = v22;
      v56.size.width = v24;
      r2 = v23;
      v56.size.height = v23;
      v51 = CGRectUnion(v50, v56);
      x = v51.origin.x;
      y = v51.origin.y;
      width = v51.size.width;
      height = v51.size.height;
      v31 = CGRectGetHeight(v51);
      v52.origin.x = x;
      v52.origin.y = y;
      v52.size.width = width;
      v52.size.height = height;
      v32 = v31 * CGRectGetWidth(v52);
      if (v32 == 0.0)
      {

        if (a3 >= 0.0)
          goto LABEL_5;
      }
      else
      {
        v53.origin.y = v47;
        v53.origin.x = v48;
        v53.size.height = v45;
        v53.size.width = v46;
        v57.origin.x = v21;
        v57.origin.y = v22;
        v57.size.width = v24;
        v57.size.height = r2;
        v54 = CGRectIntersection(v53, v57);
        v33 = v54.origin.x;
        v34 = v54.origin.y;
        v35 = v54.size.width;
        v36 = v54.size.height;
        v37 = CGRectGetHeight(v54);
        v55.origin.x = v33;
        v55.origin.y = v34;
        v55.size.width = v35;
        v55.size.height = v36;
        v38 = CGRectGetWidth(v55);

        v39 = v37 * v38 / v32;
        if (v39 <= a3)
          goto LABEL_5;
      }
      a2 = &v9[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)a2 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == *(_QWORD *)(*(_QWORD *)v41 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label))
      {

        goto LABEL_6;
      }
LABEL_5:
      a2 = (char *)&v49;
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
LABEL_6:
      v5 = v11;
      if (v10 == v11)
        return v49;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

id sub_2496F8648(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  void *v6;
  char *v12;
  void **v13;
  void **v14;
  void **v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  objc_super v27;

  v12 = v6;
  sub_24972C954();
  v13 = (void **)&v12[OBJC_IVAR___UIObjectCompat_iconDetection];
  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_iconDetection] = 0;
  v14 = (void **)&v12[OBJC_IVAR___UIObjectCompat_clickDetection];
  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_clickDetection] = 0;
  v15 = (void **)&v12[OBJC_IVAR___UIObjectCompat_focusDetection];
  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_focusDetection] = 0;
  v16 = &v12[OBJC_IVAR___UIObjectCompat_normalizedSquaredRect];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v16[32] = 1;
  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_detection] = a1;
  swift_beginAccess();
  v17 = *v14;
  *v14 = a2;
  v18 = a1;
  v19 = a2;

  swift_beginAccess();
  v20 = *v15;
  *v15 = a3;
  v21 = a3;

  swift_beginAccess();
  v22 = *v13;
  *v13 = a4;
  v23 = a4;

  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_boundingBox] = a5;
  *(_QWORD *)&v12[OBJC_IVAR___UIObjectCompat_children] = a6;
  v24 = a5;

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for UIObject();
  return objc_msgSendSuper2(&v27, sel_init);
}

uint64_t type metadata accessor for UIObject()
{
  uint64_t result;

  result = qword_25787A270;
  if (!qword_25787A270)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_2496F8800(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  void *v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A298);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496F8C94();
  sub_24972D2F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for UIDetection();
    v20 = 0;
    sub_2496CED84(&qword_25787A2A0, (uint64_t (*)(uint64_t))type metadata accessor for UIDetection, (uint64_t)&protocol conformance descriptor for UIDetection);
    sub_24972D14C();
    v8 = v21;
    type metadata accessor for ClickabilityDetection();
    v20 = 1;
    sub_2496CED84(&qword_25787A2A8, (uint64_t (*)(uint64_t))type metadata accessor for ClickabilityDetection, (uint64_t)&protocol conformance descriptor for ClickabilityDetection);
    sub_24972D128();
    v9 = v21;
    type metadata accessor for FocusDetection();
    v20 = 2;
    sub_2496CED84(&qword_25787A2B0, (uint64_t (*)(uint64_t))type metadata accessor for FocusDetection, (uint64_t)&protocol conformance descriptor for FocusDetection);
    sub_24972D128();
    v10 = v21;
    type metadata accessor for IconDetection();
    v20 = 3;
    sub_2496CED84(&qword_25787A2B8, (uint64_t (*)(uint64_t))type metadata accessor for IconDetection, (uint64_t)&protocol conformance descriptor for IconDetection);
    sub_24972D128();
    v19 = v10;
    v11 = v21;
    type metadata accessor for BoundingBox();
    v20 = 4;
    sub_2496CED84(&qword_25787A2C0, (uint64_t (*)(uint64_t))type metadata accessor for BoundingBox, (uint64_t)&protocol conformance descriptor for BoundingBox);
    sub_24972D14C();
    v18 = v11;
    v12 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A248);
    v20 = 5;
    sub_2496F97FC(&qword_25787A2C8, &qword_25787A2D0, (uint64_t)&protocol conformance descriptor for UIObject, MEMORY[0x24BEE12D0]);
    sub_24972D128();
    v14 = (uint64_t)v21;
    if (!v21)
      v14 = MEMORY[0x24BEE4AF8];
    v17 = v14;
    v15 = v19;
    v16 = objc_allocWithZone((Class)type metadata accessor for UIObject());
    v7 = sub_2496F8648(v8, v9, v15, v18, v12, v17);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_2496F8C50()
{
  unint64_t result;

  result = qword_25787A208;
  if (!qword_25787A208)
  {
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25787A208);
  }
  return result;
}

unint64_t sub_2496F8C94()
{
  unint64_t result;

  result = qword_25787A218;
  if (!qword_25787A218)
  {
    result = MEMORY[0x24BCF7648](&unk_249730350, &type metadata for UIObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A218);
  }
  return result;
}

uint64_t sub_2496F8CD8()
{
  return sub_2496CED84((unint64_t *)&qword_25787A260, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t sub_2496F8D08()
{
  unint64_t result;

  result = qword_25787A268;
  if (!qword_25787A268)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for DetectionResultType, &type metadata for DetectionResultType);
    atomic_store(result, (unint64_t *)&qword_25787A268);
  }
  return result;
}

id sub_2496F8D54@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___UIObjectCompat_detection, a2);
}

void sub_2496F8D60(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_2496F4A04(a1, a2, a3, a4, &OBJC_IVAR___UIObjectCompat_detection);
}

id sub_2496F8D7C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___UIObjectCompat_boundingBox, a2);
}

id keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_2496F8DD4(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_2496F4A04(a1, a2, a3, a4, &OBJC_IVAR___UIObjectCompat_boundingBox);
}

id sub_2496F8DF0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___UIObjectCompat_iconDetection, a2);
}

void sub_2496F8DFC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_2496F4A04(a1, a2, a3, a4, &OBJC_IVAR___UIObjectCompat_iconDetection);
}

uint64_t sub_2496F8E18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___UIObjectCompat_children);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_2496F8E70@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___UIObjectCompat_clickDetection, a2);
}

void sub_2496F8E7C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_2496F4A04(a1, a2, a3, a4, &OBJC_IVAR___UIObjectCompat_clickDetection);
}

id sub_2496F8E98@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___UIObjectCompat_focusDetection, a2);
}

void sub_2496F8EA4(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_2496F4A04(a1, a2, a3, a4, &OBJC_IVAR___UIObjectCompat_focusDetection);
}

__n128 sub_2496F8EC0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = *a1 + OBJC_IVAR___UIObjectCompat_normalizedSquaredRect;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

__n128 sub_2496F8F18(__n128 *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = *a2 + OBJC_IVAR___UIObjectCompat_normalizedSquaredRect;
  swift_beginAccess();
  result = v7;
  *(__n128 *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 32) = v4;
  return result;
}

uint64_t sub_2496F8F8C()
{
  return type metadata accessor for UIObject();
}

uint64_t sub_2496F8F94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C960();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UIObject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIObject.id.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UIObject.id.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of UIObject.id.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of UIObject.detection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of UIObject.detection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of UIObject.detection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of UIObject.boundingBox.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of UIObject.boundingBox.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of UIObject.boundingBox.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of UIObject.iconDetection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of UIObject.iconDetection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of UIObject.iconDetection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of UIObject.children.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of UIObject.children.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of UIObject.children.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of UIObject.clickDetection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of UIObject.clickDetection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of UIObject.clickDetection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of UIObject.focusDetection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of UIObject.focusDetection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of UIObject.focusDetection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of UIObject.normalizedSquaredRect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of UIObject.normalizedSquaredRect.setter(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x140);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of UIObject.normalizedSquaredRect.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of UIObject.clickable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of UIObject.focused.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of UIObject.icon.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of UIObject.size.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of UIObject.rect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of UIObject.label.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of UIObject.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of UIObject.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of UIObject.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of UIObject.__allocating_init(detection:clickable:focused:icon:boundingBox:children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t dispatch thunk of UIObject.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of UIObject.getPixelRect(screenWidth:screenHeight:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of UIObject.improveDetectionBoundingBox(threshold:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of UIObject.uiType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of UIObject.clickabilityType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of UIObject.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D0))();
}

uint64_t storeEnumTagSinglePayload for DetectionResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2496F9548 + 4 * byte_2497300A3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2496F957C + 4 * byte_24973009E[v4]))();
}

uint64_t sub_2496F957C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496F9584(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496F958CLL);
  return result;
}

uint64_t sub_2496F9598(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496F95A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2496F95A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496F95AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectionResultType()
{
  return &type metadata for DetectionResultType;
}

uint64_t getEnumTagSinglePayload for UIObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UIObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2496F96A4 + 4 * byte_2497300AD[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2496F96D8 + 4 * byte_2497300A8[v4]))();
}

uint64_t sub_2496F96D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496F96E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496F96E8);
  return result;
}

uint64_t sub_2496F96F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496F96FCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2496F9700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496F9708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIObject.CodingKeys()
{
  return &type metadata for UIObject.CodingKeys;
}

unint64_t sub_2496F9728()
{
  unint64_t result;

  result = qword_25787A280;
  if (!qword_25787A280)
  {
    result = MEMORY[0x24BCF7648](&unk_249730328, &type metadata for UIObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A280);
  }
  return result;
}

unint64_t sub_2496F9770()
{
  unint64_t result;

  result = qword_25787A288;
  if (!qword_25787A288)
  {
    result = MEMORY[0x24BCF7648](&unk_249730260, &type metadata for UIObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A288);
  }
  return result;
}

unint64_t sub_2496F97B8()
{
  unint64_t result;

  result = qword_25787A290;
  if (!qword_25787A290)
  {
    result = MEMORY[0x24BCF7648](&unk_249730288, &type metadata for UIObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A290);
  }
  return result;
}

uint64_t sub_2496F97FC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A248);
    v10 = sub_2496CED84(a2, (uint64_t (*)(uint64_t))type metadata accessor for UIObject, a3);
    result = MEMORY[0x24BCF7648](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IconDetection.label.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label);
}

uint64_t sub_2496F98EC()
{
  return IconLabel.toString()()._countAndFlagsBits;
}

double IconDetection.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding13IconDetection_confidence);
}

id IconDetection.__allocating_init(label:confidence:)(uint64_t a1, double a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label] = a1;
  *(double *)&v5[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_confidence] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id IconDetection.init(label:confidence:)(uint64_t a1, double a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label] = a1;
  *(double *)&v2[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_confidence] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for IconDetection();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for IconDetection()
{
  return objc_opt_self();
}

void *IconDetection.__allocating_init(from:)(_QWORD *a1)
{
  return sub_2496F9F74(a1);
}

uint64_t sub_2496F9A50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A2E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496FA118();
  sub_24972D2FC();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label);
  v10[7] = 0;
  sub_2496FA15C();
  sub_24972D1A0();
  if (!v2)
  {
    v10[6] = 1;
    sub_24972D17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2496F9B8C(char *a1, char *a2)
{
  return sub_249721C80(*a1, *a2);
}

uint64_t sub_2496F9B98()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496F9C18()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2496F9C74()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2496F9CF0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2496F9D4C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C6562616CLL;
  if (*v1)
    v2 = 0x6E656469666E6F63;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xEA00000000006563;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2496F9D8C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_2496F9DC8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2496F9E28(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2496F9E34()
{
  sub_2496FA118();
  return sub_24972D308();
}

uint64_t sub_2496F9E5C()
{
  sub_2496FA118();
  return sub_24972D314();
}

id IconDetection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IconDetection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IconDetection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IconDetection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_2496F9F2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_2496F9F74(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2496F9F54(_QWORD *a1)
{
  return sub_2496F9A50(a1);
}

void *sub_2496F9F74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t v14;
  objc_super v15;
  char v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A318);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2496FA118();
  sub_24972D2F0();
  if (!v1)
  {
    v16 = 0;
    sub_2496FA3B8();
    sub_24972D14C();
    v8 = v17;
    LOBYTE(v17) = 1;
    sub_24972D140();
    v11 = v10;
    v12 = (objc_class *)type metadata accessor for IconDetection();
    v13 = (char *)objc_allocWithZone(v12);
    *(_QWORD *)&v13[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label] = v8;
    *(_QWORD *)&v13[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_confidence] = v11;
    v15.receiver = v13;
    v15.super_class = v12;
    v7 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_2496FA118()
{
  unint64_t result;

  result = qword_25787A2F0;
  if (!qword_25787A2F0)
  {
    result = MEMORY[0x24BCF7648](&unk_249730524, &type metadata for IconDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A2F0);
  }
  return result;
}

unint64_t sub_2496FA15C()
{
  unint64_t result;

  result = qword_25787A2F8;
  if (!qword_25787A2F8)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for IconLabel, &type metadata for IconLabel);
    atomic_store(result, (unint64_t *)&qword_25787A2F8);
  }
  return result;
}

uint64_t method lookup function for IconDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IconDetection.labelString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of IconDetection.__allocating_init(label:confidence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of IconDetection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of IconDetection.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t storeEnumTagSinglePayload for IconDetection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2496FA260 + 4 * byte_2497303AD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2496FA294 + 4 * byte_2497303A8[v4]))();
}

uint64_t sub_2496FA294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA29C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496FA2A4);
  return result;
}

uint64_t sub_2496FA2B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496FA2B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2496FA2BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA2C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconDetection.CodingKeys()
{
  return &type metadata for IconDetection.CodingKeys;
}

unint64_t sub_2496FA2E4()
{
  unint64_t result;

  result = qword_25787A300;
  if (!qword_25787A300)
  {
    result = MEMORY[0x24BCF7648](&unk_2497304FC, &type metadata for IconDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A300);
  }
  return result;
}

unint64_t sub_2496FA32C()
{
  unint64_t result;

  result = qword_25787A308;
  if (!qword_25787A308)
  {
    result = MEMORY[0x24BCF7648](&unk_249730434, &type metadata for IconDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A308);
  }
  return result;
}

unint64_t sub_2496FA374()
{
  unint64_t result;

  result = qword_25787A310;
  if (!qword_25787A310)
  {
    result = MEMORY[0x24BCF7648](&unk_24973045C, &type metadata for IconDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A310);
  }
  return result;
}

unint64_t sub_2496FA3B8()
{
  unint64_t result;

  result = qword_25787A320;
  if (!qword_25787A320)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for IconLabel, &type metadata for IconLabel);
    atomic_store(result, (unint64_t *)&qword_25787A320);
  }
  return result;
}

uint64_t sub_2496FA3FC()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_249720FA4((uint64_t)&unk_251AA80E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A338);
  result = swift_arrayDestroy();
  qword_25787EBA0 = v0;
  return result;
}

unint64_t sub_2496FA454()
{
  unint64_t result;

  result = sub_2497210B0((uint64_t)&unk_251AA64B0);
  qword_25787EBA8 = result;
  return result;
}

uint64_t sub_2496FA478(uint64_t a1)
{
  if (qword_257879BC8 != -1)
    swift_once();
  if (*(_QWORD *)(qword_25787EBA8 + 16))
    sub_2497205C0(a1);
  sub_24972D1C4();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_2496FA52C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + 16) == *(unsigned __int8 *)(a1 + 16)
      && *(unsigned __int8 *)(v1 + 17) == *(unsigned __int8 *)(a1 + 17)
      && *(_QWORD *)(v1 + 24) == *(_QWORD *)(a1 + 24);
}

uint64_t sub_2496FA568()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_24972CFB4();
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 16);
  if (qword_257879BC0 != -1)
    swift_once();
  if (*(_QWORD *)(qword_25787EBA0 + 16))
  {
    sub_2497205C0(v1);
    if ((v2 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  sub_2496FA478(*(unsigned __int8 *)(v0 + 17));
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  sub_24972D1C4();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  return 0x203A6C65646F4DLL;
}

uint64_t UIUnderstandingModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UIUnderstandingModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIUnderstandingModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for UIUnderstandingModel()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for ScreenShape(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenShape(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2496FA834 + 4 * byte_249730585[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2496FA868 + 4 * byte_249730580[v4]))();
}

uint64_t sub_2496FA868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496FA878);
  return result;
}

uint64_t sub_2496FA884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496FA88CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2496FA890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenShape()
{
  return &type metadata for ScreenShape;
}

uint64_t storeEnumTagSinglePayload for ModelType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2496FA900 + 4 * byte_24973058F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2496FA934 + 4 * byte_24973058A[v4]))();
}

uint64_t sub_2496FA934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA93C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2496FA944);
  return result;
}

uint64_t sub_2496FA950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2496FA958);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2496FA95C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2496FA964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelType()
{
  return &type metadata for ModelType;
}

unint64_t sub_2496FA984()
{
  unint64_t result;

  result = qword_25787A328;
  if (!qword_25787A328)
  {
    result = MEMORY[0x24BCF7648](&unk_249730640, &type metadata for ModelType);
    atomic_store(result, (unint64_t *)&qword_25787A328);
  }
  return result;
}

unint64_t sub_2496FA9CC()
{
  unint64_t result;

  result = qword_25787A330;
  if (!qword_25787A330)
  {
    result = MEMORY[0x24BCF7648](&unk_2497306A8, &type metadata for ScreenShape);
    atomic_store(result, (unint64_t *)&qword_25787A330);
  }
  return result;
}

uint64_t sub_2496FAA10(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;

  if (qword_257879BC0 != -1)
LABEL_31:
    swift_once();
  v4 = 0;
  v5 = qword_25787EBA0;
  v6 = 1 << *(_BYTE *)(qword_25787EBA0 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = qword_25787EBA0 + 64;
  v9 = v7 & *(_QWORD *)(qword_25787EBA0 + 64);
  v10 = (unint64_t)(v6 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v4 << 6);
LABEL_21:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v12);
    v17 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v12);
    v18 = *v17 == a1 && v17[1] == a2;
    if (v18 || (sub_24972D1DC() & 1) != 0)
      return v16;
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v13 >= v10)
    return 5;
  v14 = *(_QWORD *)(v8 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_20;
  v4 = v13 + 1;
  if (v13 + 1 >= v10)
    return 5;
  v14 = *(_QWORD *)(v8 + 8 * v4);
  if (v14)
    goto LABEL_20;
  v4 = v13 + 2;
  if (v13 + 2 >= v10)
    return 5;
  v14 = *(_QWORD *)(v8 + 8 * v4);
  if (v14)
  {
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_21;
  }
  v15 = v13 + 3;
  if (v15 < v10)
  {
    v14 = *(_QWORD *)(v8 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_30;
        if (v4 >= v10)
          return 5;
        v14 = *(_QWORD *)(v8 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_20;
      }
    }
    v4 = v15;
    goto LABEL_20;
  }
  return 5;
}

uint64_t sub_2496FAB9C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;

  if (qword_257879BC8 != -1)
LABEL_26:
    swift_once();
  v2 = 0;
  v3 = 1 << *(_BYTE *)(qword_25787EBA8 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = qword_25787EBA8 + 64;
  v6 = v4 & *(_QWORD *)(qword_25787EBA8 + 64);
  v7 = (unint64_t)(v3 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_6:
    if (*(_QWORD *)(*(_QWORD *)(qword_25787EBA8 + 56) + 8 * v9) == a1)
      return *(unsigned __int8 *)(*(_QWORD *)(qword_25787EBA8 + 48) + v9);
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v7)
    return 4;
  v11 = *(_QWORD *)(v5 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    return 4;
  v11 = *(_QWORD *)(v5 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    return 4;
  v11 = *(_QWORD *)(v5 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v13 = __clz(__rbit64(v11));
    v6 = (v11 - 1) & v11;
    v9 = v13 + (v2 << 6);
    goto LABEL_6;
  }
  v12 = v10 + 3;
  if (v12 < v7)
  {
    v11 = *(_QWORD *)(v5 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        v2 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_25;
        if (v2 >= v7)
          return 4;
        v11 = *(_QWORD *)(v5 + 8 * v2);
        ++v12;
        if (v11)
          goto LABEL_21;
      }
    }
    v2 = v12;
    goto LABEL_21;
  }
  return 4;
}

uint64_t sub_2496FACF4(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  if (*(_QWORD *)(a1 + 16)
    && (v2 = sub_249720628(0x7079546C65646F4DLL, 0xE900000000000065), (v3 & 1) != 0)
    && (sub_2496F2A70(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v20), (swift_dynamicCast() & 1) != 0))
  {
    v4 = sub_2496FAA10(v19, *((uint64_t *)&v19 + 1));
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_11;
  }
  else
  {
    v4 = 5;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_11;
  }
  v5 = sub_249720628(0x655674616D726F46, 0xED00006E6F697372);
  if ((v6 & 1) != 0)
  {
    sub_2496F2A70(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v20);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = sub_2496FAB9C(v19);
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_12;
LABEL_10:
      v8 = -1;
      goto LABEL_19;
    }
  }
LABEL_11:
  v7 = 4;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_10;
LABEL_12:
  v9 = sub_249720628(0x746E65746E6F435FLL, 0xEF6E6F6973726556);
  if ((v10 & 1) != 0 && (sub_2496F2A70(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v20), (swift_dynamicCast() & 1) != 0))
  {
    v8 = v19;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_19;
  }
  else
  {
    v8 = -1;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_19;
  }
  v11 = sub_249720628(0x6D614E6C65646F4DLL, 0xE900000000000065);
  if ((v12 & 1) != 0)
  {
    sub_2496F2A70(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v20);
    goto LABEL_20;
  }
LABEL_19:
  v20 = 0u;
  v21 = 0u;
LABEL_20:
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v21 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = v19;
      sub_2496D9784();
      v13 = sub_24972CF30();
      v15 = v14;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  else
  {
    sub_2496FB000((uint64_t)&v20);
  }
  v13 = 0;
  v15 = 0;
LABEL_25:
  type metadata accessor for UIUnderstandingModel();
  v16 = swift_allocObject();
  v17 = v16;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 0;
  *(_BYTE *)(v16 + 16) = v4;
  *(_BYTE *)(v16 + 17) = v7;
  *(_QWORD *)(v16 + 24) = v8;
  if (v15)
  {
    *(_QWORD *)(v16 + 32) = v13;
    *(_QWORD *)(v16 + 40) = v15;
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_2496FB000(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2496FB048(float64_t a1, float64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  double v11;
  BOOL v12;
  BOOL v13;
  float64x2_t v14;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  float v31;
  char v32;
  uint64_t v33;
  float v34;
  float v35;
  float v36;
  double v37;
  double v38;
  double v39;
  double v40;
  objc_class *v41;
  char *v42;
  double *v43;
  char *v44;
  uint64_t v45;
  double *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  float64x2_t *v51;
  float64x2_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  float64x2_t v57;
  BOOL v58;
  BOOL v59;
  BOOL v60;
  uint64_t v63;
  uint64_t v64;
  objc_super v65;
  int v66;
  uint64_t v67;
  uint64_t v68;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  result = sub_24972C9D8();
  if (!*(_QWORD *)(result + 16))
    goto LABEL_60;
  v6 = *(_QWORD *)(result + 32);
  result = swift_bridgeObjectRelease();
  v7 = v6 - 4;
  if (__OFSUB__(v6, 4))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v8 = *(_QWORD *)(result + 40);
  swift_bridgeObjectRelease();
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 3uLL)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v64 = *(_QWORD *)(result + 48);
  result = swift_bridgeObjectRelease();
  v68 = MEMORY[0x24BEE4AF8];
  if (v8 < 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (!v8)
    return MEMORY[0x24BEE4AF8];
  if ((v64 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = __OFADD__(v7, 1);
    v60 = v10;
    v11 = (double)v8;
    v12 = __OFADD__(v7, 2);
    v59 = v12;
    v13 = __OFADD__(v7, 3);
    v58 = v13;
    v14.f64[0] = a1;
    v14.f64[1] = a2;
    v57 = v14;
    __asm { FMOV            V1.2D, #1.0 }
    v56 = _Q1;
    v63 = a4;
    v55 = v8;
    while (1)
    {
      if (v9 == v8)
        goto LABEL_58;
      v20 = v64;
      if (v64)
        break;
LABEL_18:
      ++v9;
      v8 = v55;
      if (v9 == v55)
        return v68;
    }
    if (v7 < 0)
      goto LABEL_59;
    v21 = 0;
    while (2)
    {
      if (v21 == v20)
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      if (v7)
      {
        v67 = MEMORY[0x24BEE4AF8];
        sub_2496D59EC(0, v7, 0);
        v22 = 0;
        v23 = v67;
        do
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
          v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_24972EE40;
          *(_QWORD *)(v24 + 32) = v22;
          *(_QWORD *)(v24 + 40) = v9;
          *(_QWORD *)(v24 + 48) = v21;
          sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
          sub_24972CA44();
          swift_bridgeObjectRelease();
          v25 = v66;
          v67 = v23;
          v27 = *(_QWORD *)(v23 + 16);
          v26 = *(_QWORD *)(v23 + 24);
          v28 = v27 + 1;
          if (v27 >= v26 >> 1)
          {
            sub_2496D59EC(v26 > 1, v27 + 1, 1);
            v23 = v67;
          }
          ++v22;
          *(_QWORD *)(v23 + 16) = v28;
          *(_DWORD *)(v23 + 4 * v27 + 32) = v25;
        }
        while (v7 != v22);
        a4 = v63;
        goto LABEL_33;
      }
      v23 = MEMORY[0x24BEE4AF8];
      v28 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v28)
      {
LABEL_33:
        v29 = 0;
        v30 = 0;
        do
        {
          if (v30 >= v28)
            goto LABEL_51;
          if (*(float *)(v23 + 32 + 4 * v30) < *(float *)(v23 + 4 * v29 + 32))
            v30 = v29;
          ++v29;
        }
        while (v28 != v29);
        if (v30 >= v28)
          break;
        v31 = *(float *)(v23 + 4 * v30 + 32);
        result = swift_bridgeObjectRelease();
        if (v30 <= 0xE)
        {
          if (*(_QWORD *)(a4 + 16) && (result = sub_2497206BC(v30), (v32 & 1) != 0))
          {
            if (*(float *)(*(_QWORD *)(a4 + 56) + 4 * result) <= v31)
            {
LABEL_45:
              __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
              v33 = swift_allocObject();
              *(_OWORD *)(v33 + 16) = xmmword_24972EE40;
              *(_QWORD *)(v33 + 32) = v7;
              *(_QWORD *)(v33 + 40) = v9;
              *(_QWORD *)(v33 + 48) = v21;
              sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v34 = *(float *)&v67;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (v60)
                goto LABEL_55;
              *(_QWORD *)(result + 32) = v7 + 1;
              *(_QWORD *)(result + 40) = v9;
              *(_QWORD *)(result + 48) = v21;
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v35 = *(float *)&v67;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (!v59)
              {
                *(_QWORD *)(result + 32) = v7 + 2;
                *(_QWORD *)(result + 40) = v9;
                *(_QWORD *)(result + 48) = v21;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v36 = *(float *)&v67;
                result = swift_allocObject();
                *(_OWORD *)(result + 16) = xmmword_24972EE40;
                if (v58)
                  goto LABEL_57;
                v37 = (double)v9 + v34;
                v38 = v36;
                *(_QWORD *)(result + 32) = v7 + 3;
                *(_QWORD *)(result + 40) = v9;
                *(_QWORD *)(result + 48) = v21;
                v39 = v37 / v11;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v40 = *(float *)&v67;
                v41 = (objc_class *)type metadata accessor for BoundingBox();
                v42 = (char *)objc_allocWithZone(v41);
                v43 = (double *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                *v43 = ((double)v21 + v35) / (double)v64 - v40 * 0.5;
                v43[1] = v39 - v38 * 0.5;
                v43[2] = v40;
                v43[3] = v38;
                *(_OWORD *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize] = v56;
                v65.receiver = v42;
                v65.super_class = v41;
                v44 = (char *)objc_msgSendSuper2(&v65, sel_init);
                type metadata accessor for CenterNetPrediction();
                v45 = swift_allocObject();
                *(float *)(v45 + 16) = v31;
                *(_QWORD *)(v45 + 24) = v44;
                *(_QWORD *)(v45 + 32) = v30;
                *(_BYTE *)(v45 + 40) = 0;
                v46 = (double *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                swift_beginAccess();
                v47 = *v46 * a1;
                v48 = v46[1] * a2;
                v49 = v46[2] * a1;
                v50 = v46[3] * a2;
                v51 = (float64x2_t *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
                swift_beginAccess();
                v52 = vmulq_f64(*v51, v57);
                *v46 = v47;
                v46[1] = v48;
                v46[2] = v49;
                v46[3] = v50;
                *v51 = v52;
                v53 = v44;
                v54 = swift_retain();
                MEMORY[0x24BCF69D0](v54);
                if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_24972CCF0();
                sub_24972CD08();
                sub_24972CCE4();

                result = swift_release();
                a4 = v63;
                goto LABEL_24;
              }
              goto LABEL_56;
            }
          }
          else if (v31 >= 0.3)
          {
            goto LABEL_45;
          }
        }
LABEL_24:
        ++v21;
        v20 = v64;
        if (v21 == v64)
          goto LABEL_18;
        continue;
      }
      break;
    }
    __break(1u);
LABEL_51:
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_2496FB6C8(float64_t a1, float64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double v14;
  BOOL v15;
  BOOL v16;
  float64x2_t v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  float v33;
  char v34;
  uint64_t v35;
  float v36;
  float v37;
  float v38;
  double v39;
  double v40;
  double v41;
  double v42;
  objc_class *v43;
  char *v44;
  double *v45;
  char *v46;
  uint64_t v47;
  double *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  float64x2_t *v53;
  float64x2_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  float64x2_t v59;
  double v60;
  BOOL v61;
  BOOL v62;
  BOOL v63;
  char v64;
  uint64_t v67;
  objc_super v69;
  int v70;
  uint64_t v71;
  uint64_t v72;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F40);
  if (v4 == __swift_instantiateConcreteTypeFromMangledName(&qword_257879F30))
  {
    v64 = 0;
  }
  else
  {
    if (v4 == __swift_instantiateConcreteTypeFromMangledName(&qword_257879F38))
      v5 = 2;
    else
      v5 = 3;
    v64 = v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  result = sub_24972C9D8();
  if (!*(_QWORD *)(result + 16))
    goto LABEL_67;
  v7 = *(_QWORD *)(result + 32);
  result = swift_bridgeObjectRelease();
  v8 = v7 - 4;
  if (__OFSUB__(v7, 4))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v9 = *(_QWORD *)(result + 40);
  swift_bridgeObjectRelease();
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 3uLL)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v10 = *(_QWORD *)(result + 48);
  result = swift_bridgeObjectRelease();
  v72 = MEMORY[0x24BEE4AF8];
  if (v9 < 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v11 = MEMORY[0x24BEE4AF8];
  if (!v9)
    return v11;
  if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    v13 = __OFADD__(v8, 1);
    v63 = v13;
    v60 = (double)v10;
    v14 = (double)v9;
    v15 = __OFADD__(v8, 2);
    v62 = v15;
    v16 = __OFADD__(v8, 3);
    v61 = v16;
    v17.f64[0] = a1;
    v17.f64[1] = a2;
    v59 = v17;
    __asm { FMOV            V1.2D, #1.0 }
    v58 = _Q1;
    v57 = v9;
    v67 = v10;
    while (1)
    {
      if (v12 == v9)
        goto LABEL_65;
      if (v10)
        break;
LABEL_24:
      ++v12;
      v9 = v57;
      if (v12 == v57)
        return v72;
    }
    if (v8 < 0)
      goto LABEL_66;
    v23 = 0;
    while (2)
    {
      if (v23 == v10)
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if (v8)
      {
        v71 = v11;
        sub_2496D59EC(0, v8, 0);
        v24 = 0;
        v25 = v71;
        do
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
          v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_24972EE40;
          *(_QWORD *)(v26 + 32) = v24;
          *(_QWORD *)(v26 + 40) = v12;
          *(_QWORD *)(v26 + 48) = v23;
          sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
          sub_24972CA44();
          swift_bridgeObjectRelease();
          v27 = v70;
          v71 = v25;
          v29 = *(_QWORD *)(v25 + 16);
          v28 = *(_QWORD *)(v25 + 24);
          v30 = v29 + 1;
          if (v29 >= v28 >> 1)
          {
            sub_2496D59EC(v28 > 1, v29 + 1, 1);
            v25 = v71;
          }
          ++v24;
          *(_QWORD *)(v25 + 16) = v30;
          *(_DWORD *)(v25 + 4 * v29 + 32) = v27;
        }
        while (v8 != v24);
        v10 = v67;
        v11 = MEMORY[0x24BEE4AF8];
        goto LABEL_40;
      }
      v30 = *(_QWORD *)(v11 + 16);
      if (v30)
      {
        v25 = v11;
LABEL_40:
        v31 = 0;
        v32 = 0;
        do
        {
          if (v32 >= v30)
            goto LABEL_58;
          if (*(float *)(v25 + 32 + 4 * v32) < *(float *)(v25 + 4 * v31 + 32))
            v32 = v31;
          ++v31;
        }
        while (v30 != v31);
        if (v32 >= v30)
          break;
        v33 = *(float *)(v25 + 4 * v32 + 32);
        result = swift_bridgeObjectRelease();
        if (!v32)
        {
          if (*(_QWORD *)(a4 + 16) && (result = sub_249721298(), (v34 & 1) != 0))
          {
            if (*(float *)(*(_QWORD *)(a4 + 56) + 4 * result) <= v33)
            {
LABEL_52:
              __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
              v35 = swift_allocObject();
              *(_OWORD *)(v35 + 16) = xmmword_24972EE40;
              *(_QWORD *)(v35 + 32) = v8;
              *(_QWORD *)(v35 + 40) = v12;
              *(_QWORD *)(v35 + 48) = v23;
              sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v36 = *(float *)&v71;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (v63)
                goto LABEL_62;
              *(_QWORD *)(result + 32) = v8 + 1;
              *(_QWORD *)(result + 40) = v12;
              *(_QWORD *)(result + 48) = v23;
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v37 = *(float *)&v71;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (!v62)
              {
                *(_QWORD *)(result + 32) = v8 + 2;
                *(_QWORD *)(result + 40) = v12;
                *(_QWORD *)(result + 48) = v23;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v38 = *(float *)&v71;
                result = swift_allocObject();
                *(_OWORD *)(result + 16) = xmmword_24972EE40;
                if (v61)
                  goto LABEL_64;
                v39 = (double)v12 + v36;
                v40 = v38;
                *(_QWORD *)(result + 32) = v8 + 3;
                *(_QWORD *)(result + 40) = v12;
                *(_QWORD *)(result + 48) = v23;
                v41 = v39 / v14;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v42 = *(float *)&v71;
                v43 = (objc_class *)type metadata accessor for BoundingBox();
                v44 = (char *)objc_allocWithZone(v43);
                v45 = (double *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                *v45 = ((double)v23 + v37) / v60 - v42 * 0.5;
                v45[1] = v41 - v40 * 0.5;
                v45[2] = v42;
                v45[3] = v40;
                *(_OWORD *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize] = v58;
                v69.receiver = v44;
                v69.super_class = v43;
                v46 = (char *)objc_msgSendSuper2(&v69, sel_init);
                type metadata accessor for CenterNetPrediction();
                v47 = swift_allocObject();
                *(float *)(v47 + 16) = v33;
                *(_QWORD *)(v47 + 24) = v46;
                *(_QWORD *)(v47 + 32) = 0;
                *(_BYTE *)(v47 + 40) = v64;
                v48 = (double *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                swift_beginAccess();
                v49 = *v48 * a1;
                v50 = v48[1] * a2;
                v51 = v48[2] * a1;
                v52 = v48[3] * a2;
                v53 = (float64x2_t *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
                swift_beginAccess();
                v54 = vmulq_f64(*v53, v59);
                *v48 = v49;
                v48[1] = v50;
                v48[2] = v51;
                v48[3] = v52;
                *v53 = v54;
                v55 = v46;
                v56 = swift_retain();
                MEMORY[0x24BCF69D0](v56);
                if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_24972CCF0();
                sub_24972CD08();
                sub_24972CCE4();

                result = swift_release();
                v11 = MEMORY[0x24BEE4AF8];
                goto LABEL_30;
              }
              goto LABEL_63;
            }
          }
          else if (v33 >= 0.3)
          {
            goto LABEL_52;
          }
        }
LABEL_30:
        if (++v23 == v10)
          goto LABEL_24;
        continue;
      }
      break;
    }
    __break(1u);
LABEL_58:
    __break(1u);
    return v72;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_2496FBD90(float64_t a1, float64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double v14;
  BOOL v15;
  BOOL v16;
  float64x2_t v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  float v34;
  char v35;
  uint64_t v36;
  float v37;
  float v38;
  float v39;
  double v40;
  double v41;
  double v42;
  double v43;
  objc_class *v44;
  char *v45;
  double *v46;
  char *v47;
  uint64_t v48;
  double *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  float64x2_t *v54;
  float64x2_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  float64x2_t v60;
  char v61;
  BOOL v62;
  BOOL v63;
  BOOL v64;
  uint64_t v67;
  uint64_t v68;
  objc_super v69;
  int v70;
  uint64_t v71;
  uint64_t v72;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879F38);
  v6 = v5 != __swift_instantiateConcreteTypeFromMangledName(&qword_257879F30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  result = sub_24972C9D8();
  if (!*(_QWORD *)(result + 16))
    goto LABEL_61;
  v8 = *(_QWORD *)(result + 32);
  result = swift_bridgeObjectRelease();
  v9 = v8 - 4;
  if (__OFSUB__(v8, 4))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v10 = *(_QWORD *)(result + 40);
  swift_bridgeObjectRelease();
  result = sub_24972C9D8();
  if (*(_QWORD *)(result + 16) < 3uLL)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v68 = *(_QWORD *)(result + 48);
  result = swift_bridgeObjectRelease();
  v72 = MEMORY[0x24BEE4AF8];
  if (v10 < 0)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (!v10)
    return MEMORY[0x24BEE4AF8];
  v11 = v68;
  if ((v68 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    v13 = __OFADD__(v9, 1);
    v64 = v13;
    v14 = (double)v10;
    v15 = __OFADD__(v9, 2);
    v63 = v15;
    v16 = __OFADD__(v9, 3);
    v61 = 2 * v6;
    v62 = v16;
    v17.f64[0] = a1;
    v17.f64[1] = a2;
    v60 = v17;
    __asm { FMOV            V1.2D, #1.0 }
    v59 = _Q1;
    v23 = MEMORY[0x24BEE4AF8];
    v67 = a4;
    v58 = v10;
    while (1)
    {
      if (v12 == v10)
        goto LABEL_59;
      if (v11)
        break;
LABEL_18:
      ++v12;
      v10 = v58;
      if (v12 == v58)
        return v72;
    }
    if (v9 < 0)
      goto LABEL_60;
    v24 = 0;
    while (2)
    {
      if (v24 == v11)
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      if (v9)
      {
        v71 = v23;
        sub_2496D59EC(0, v9, 0);
        v25 = 0;
        v26 = v71;
        do
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
          v27 = swift_allocObject();
          *(_OWORD *)(v27 + 16) = xmmword_24972EE40;
          *(_QWORD *)(v27 + 32) = v25;
          *(_QWORD *)(v27 + 40) = v12;
          *(_QWORD *)(v27 + 48) = v24;
          sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
          sub_24972CA44();
          swift_bridgeObjectRelease();
          v28 = v70;
          v71 = v26;
          v30 = *(_QWORD *)(v26 + 16);
          v29 = *(_QWORD *)(v26 + 24);
          v31 = v30 + 1;
          if (v30 >= v29 >> 1)
          {
            sub_2496D59EC(v29 > 1, v30 + 1, 1);
            v26 = v71;
          }
          ++v25;
          *(_QWORD *)(v26 + 16) = v31;
          *(_DWORD *)(v26 + 4 * v30 + 32) = v28;
        }
        while (v9 != v25);
        a4 = v67;
        goto LABEL_34;
      }
      v31 = *(_QWORD *)(v23 + 16);
      if (v31)
      {
        v26 = v23;
LABEL_34:
        v32 = 0;
        v33 = 0;
        do
        {
          if (v33 >= v31)
            goto LABEL_52;
          if (*(float *)(v26 + 32 + 4 * v33) < *(float *)(v26 + 4 * v32 + 32))
            v33 = v32;
          ++v32;
        }
        while (v31 != v32);
        if (v33 >= v31)
          break;
        v34 = *(float *)(v26 + 4 * v33 + 32);
        result = swift_bridgeObjectRelease();
        if (v33 <= 0x10)
        {
          if (*(_QWORD *)(a4 + 16) && (result = sub_2497206BC(v33), (v35 & 1) != 0))
          {
            if (*(float *)(*(_QWORD *)(a4 + 56) + 4 * result) <= v34)
            {
LABEL_46:
              __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
              v36 = swift_allocObject();
              *(_OWORD *)(v36 + 16) = xmmword_24972EE40;
              *(_QWORD *)(v36 + 32) = v9;
              *(_QWORD *)(v36 + 40) = v12;
              *(_QWORD *)(v36 + 48) = v24;
              sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v37 = *(float *)&v71;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (v64)
                goto LABEL_56;
              *(_QWORD *)(result + 32) = v9 + 1;
              *(_QWORD *)(result + 40) = v12;
              *(_QWORD *)(result + 48) = v24;
              sub_24972CA44();
              swift_bridgeObjectRelease();
              v38 = *(float *)&v71;
              result = swift_allocObject();
              *(_OWORD *)(result + 16) = xmmword_24972EE40;
              if (!v63)
              {
                *(_QWORD *)(result + 32) = v9 + 2;
                *(_QWORD *)(result + 40) = v12;
                *(_QWORD *)(result + 48) = v24;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v39 = *(float *)&v71;
                result = swift_allocObject();
                *(_OWORD *)(result + 16) = xmmword_24972EE40;
                if (v62)
                  goto LABEL_58;
                v40 = (double)v12 + v37;
                v41 = v39;
                *(_QWORD *)(result + 32) = v9 + 3;
                *(_QWORD *)(result + 40) = v12;
                *(_QWORD *)(result + 48) = v24;
                v42 = v40 / v14;
                sub_24972CA44();
                swift_bridgeObjectRelease();
                v43 = *(float *)&v71;
                v44 = (objc_class *)type metadata accessor for BoundingBox();
                v45 = (char *)objc_allocWithZone(v44);
                v46 = (double *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                *v46 = ((double)v24 + v38) / (double)v68 - v43 * 0.5;
                v46[1] = v42 - v41 * 0.5;
                v46[2] = v43;
                v46[3] = v41;
                *(_OWORD *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize] = v59;
                v69.receiver = v45;
                v69.super_class = v44;
                v47 = (char *)objc_msgSendSuper2(&v69, sel_init);
                type metadata accessor for CenterNetPrediction();
                v48 = swift_allocObject();
                *(float *)(v48 + 16) = v34;
                *(_QWORD *)(v48 + 24) = v47;
                *(_QWORD *)(v48 + 32) = v33;
                *(_BYTE *)(v48 + 40) = v61;
                v49 = (double *)&v47[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
                swift_beginAccess();
                v50 = *v49 * a1;
                v51 = v49[1] * a2;
                v52 = v49[2] * a1;
                v53 = v49[3] * a2;
                v54 = (float64x2_t *)&v47[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
                swift_beginAccess();
                v55 = vmulq_f64(*v54, v60);
                *v49 = v50;
                v49[1] = v51;
                v49[2] = v52;
                v49[3] = v53;
                *v54 = v55;
                v56 = v47;
                v57 = swift_retain();
                MEMORY[0x24BCF69D0](v57);
                if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_24972CCF0();
                sub_24972CD08();
                sub_24972CCE4();

                result = swift_release();
                a4 = v67;
                goto LABEL_24;
              }
              goto LABEL_57;
            }
          }
          else if (v34 >= 0.3)
          {
            goto LABEL_46;
          }
        }
LABEL_24:
        ++v24;
        v11 = v68;
        v23 = MEMORY[0x24BEE4AF8];
        if (v24 == v68)
          goto LABEL_18;
        continue;
      }
      break;
    }
    __break(1u);
LABEL_52:
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
LABEL_66:
  __break(1u);
  return result;
}

uint64_t FocusType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void *static FocusType.allCases.getter()
{
  return &unk_251AA7FE8;
}

uint64_t FocusType.rawValue.getter()
{
  return 0;
}

void sub_2496FC464(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AA80A0;
}

_QWORD *sub_2496FC474@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_2496FC488(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

float static UIUDetector.defaultFocusElementConfidenceThreshold.getter()
{
  return 0.7;
}

float static UIUDetector.defaultFocusElementBoxOverlapThreshold.getter()
{
  return 0.7;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.preloadFocusElementModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  v2 = v0 + OBJC_IVAR___UIUDetectorCompat_focusElementDetector;
  swift_beginAccess();
  sub_2496FD368(v2, (uint64_t)v11, &qword_25787A340);
  v3 = v12;
  sub_2496FD3AC((uint64_t)v11, &qword_25787A340);
  if (!v3)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
    if (v4 >= 2)
    {
      if (v4 == 2)
      {
        if (qword_257879BF8 != -1)
          swift_once();
        v5 = (void *)qword_25787EBE8;
        if (qword_25787EBE8)
        {
          v6 = (id)qword_25787EBE8;
        }
        else
        {
          v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
          v8 = (void *)qword_25787EBE8;
          qword_25787EBE8 = (uint64_t)v7;
          v6 = v7;

          v5 = 0;
        }
        v9 = v5;
        v10 = sub_249704AF8(0);

        if (!v1)
        {
          v12 = type metadata accessor for FocusElement();
          v11[0] = v10;
          swift_beginAccess();
          sub_2496FD320((uint64_t)v11, v2);
          swift_endAccess();
        }
      }
      else
      {
        v11[0] = *(_QWORD *)(v0 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
        sub_24972D218();
        __break(1u);
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.addFocusElementResults(to:originalImage:nmsThreshold:)(Swift::OpaquePointer to, CGImageRef originalImage, Swift::Float nmsThreshold)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGImage *v25;
  float64_t Width;
  float64_t Height;
  uint64_t inited;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t i;
  uint64_t v38;
  char *v39;
  CGRect *v40;
  CGFloat x;
  CGFloat y;
  CGFloat v43;
  CGFloat v44;
  char *v45;
  BOOL v46;
  double MaxX;
  double *v48;
  double MaxY;
  double *v50;
  double v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t j;
  char *v57;
  char *v58;
  id *v59;
  void *v60;
  id v61;
  id v62;
  BOOL v63;
  double v64;
  objc_class *v65;
  _BYTE *v66;
  id v67;
  void **v68;
  char *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  CGImageRef v78;
  char *v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  objc_super v86;
  uint64_t v87;
  unint64_t rawValue;
  CGRect v89;

  rawValue = (unint64_t)to._rawValue;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E48);
  v82 = *(_QWORD *)(v83 - 8);
  v5 = MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v75 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v84 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v75 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v75 - v19;
  v21 = v85;
  sub_2496FCEF4(originalImage, (uint64_t)&v75 - v19);
  if (!v21)
  {
    v78 = originalImage;
    v79 = v12;
    v85 = v8;
    v22 = v83;
    v80 = v14;
    sub_2496FD368((uint64_t)v20, (uint64_t)v18, &qword_25787A348);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v18, 1, v9) == 1)
    {
      sub_2496FD3AC((uint64_t)v20, &qword_25787A348);
      v23 = (uint64_t)v18;
LABEL_59:
      sub_2496FD3AC(v23, &qword_25787A348);
      return;
    }
    v76 = v20;
    v77 = 0;
    v24 = v84;
    (*(void (**)(void))(v84 + 32))();
    v25 = v78;
    Width = (double)(uint64_t)CGImageGetWidth(v78);
    Height = (double)(uint64_t)CGImageGetHeight(v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A350);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24972F6C0;
    *(Swift::Float *)(inited + 32) = nmsThreshold;
    v29 = sub_2497212DC(inited);
    swift_setDeallocating();
    v30 = v85;
    sub_24972C9F0();
    v31 = v82;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v81, v30, v22);
    sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
    sub_2496D1BCC(&qword_257879E88, &qword_257879E48, MEMORY[0x24BDBFD50]);
    v32 = (uint64_t)v79;
    v33 = v9;
    sub_24972CA14();
    v34 = sub_2496FB6C8(Width, Height, v32, v29);
    v35 = *(char **)(v24 + 8);
    v84 = v9;
    v81 = v35;
    ((void (*)(uint64_t, uint64_t))v35)(v32, v9);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v22);
    swift_bridgeObjectRelease();
    v87 = MEMORY[0x24BEE4AF8];
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      v36 = sub_24972D0BC();
      swift_bridgeObjectRelease();
      if (v36)
        goto LABEL_6;
    }
    else
    {
      v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v36)
      {
LABEL_6:
        if (v36 < 1)
        {
          __break(1u);
          goto LABEL_43;
        }
        for (i = 0; i != v36; ++i)
        {
          if ((v34 & 0xC000000000000001) != 0)
          {
            v38 = MEMORY[0x24BCF6CE8](i, v34);
          }
          else
          {
            v38 = *(_QWORD *)(v34 + 8 * i + 32);
            swift_retain();
          }
          swift_beginAccess();
          v39 = *(char **)(v38 + 24);
          v40 = (CGRect *)&v39[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          x = v40->origin.x;
          y = v40->origin.y;
          v43 = v40->size.width;
          v44 = v40->size.height;
          v45 = v39;
          v89.origin.x = x;
          v89.origin.y = y;
          v89.size.width = v43;
          v89.size.height = v44;
          if (CGRectGetMinX(v89) >= 0.0)
          {
            MaxX = CGRectGetMaxX(*v40);
            v48 = (double *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
            swift_beginAccess();
            v46 = MaxX <= *v48;
          }
          else
          {
            v46 = 0;
          }
          if (CGRectGetMinY(*v40) < 0.0)
          {
            swift_release();

          }
          else
          {
            MaxY = CGRectGetMaxY(*v40);
            v50 = (double *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
            swift_beginAccess();
            v51 = v50[1];

            if (v46 && MaxY <= v51)
            {
              sub_24972D020();
              sub_24972D044();
              sub_24972D050();
              sub_24972D02C();
            }
            else
            {
              swift_release();
            }
          }
        }
        swift_bridgeObjectRelease();
        v33 = v87;
LABEL_24:
        v52 = v84;
        if (v33 < 0 || (v33 & 0x4000000000000000) != 0)
        {
          swift_retain();
          v29 = sub_24972D0BC();
          if (v29)
          {
LABEL_27:
            v31 = v33 & 0xC000000000000001;
            if ((v33 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)(v33 + 16))
              {
                __break(1u);
                goto LABEL_56;
              }
              v34 = *(_QWORD *)(v33 + 32);
              swift_retain();
              v53 = v29 - 1;
              if (v29 == 1)
              {
LABEL_30:
                swift_release_n();
                v33 = rawValue;
                if (!(rawValue >> 62))
                {
                  v54 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  if (v54)
                  {
LABEL_32:
                    if (v54 >= 1)
                    {
                      v55 = v33 & 0xC000000000000001;
                      swift_beginAccess();
                      for (j = 0; j != v54; ++j)
                      {
                        if (v55)
                          v57 = (char *)MEMORY[0x24BCF6CE8](j, v33);
                        else
                          v57 = (char *)*(id *)(v33 + 8 * j + 32);
                        v58 = v57;
                        v59 = (id *)&v57[OBJC_IVAR___UIObjectCompat_boundingBox];
                        swift_beginAccess();
                        v60 = *(void **)(v34 + 24);
                        v61 = *v59;
                        v62 = v60;
                        v63 = sub_24970E640((uint64_t)v62, 0.7);

                        if (v63)
                        {
                          v64 = *(float *)(v34 + 16);
                          v65 = (objc_class *)type metadata accessor for FocusDetection();
                          v66 = objc_allocWithZone(v65);
                          v66[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = 1;
                          *(double *)&v66[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = v64;
                          v86.receiver = v66;
                          v86.super_class = v65;
                          v67 = objc_msgSendSuper2(&v86, sel_init);
                          v68 = (void **)&v58[OBJC_IVAR___UIObjectCompat_focusDetection];
                          swift_beginAccess();
                          v69 = (char *)*v68;
                          *v68 = v67;

                          v58 = v69;
                        }

                        v33 = rawValue;
                      }
                      goto LABEL_57;
                    }
                    __break(1u);
                    goto LABEL_62;
                  }
LABEL_57:
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  v70 = v80;
                  v71 = v84;
                  goto LABEL_58;
                }
LABEL_56:
                swift_retain();
                swift_bridgeObjectRetain();
                v54 = sub_24972D0BC();
                if (v54)
                  goto LABEL_32;
                goto LABEL_57;
              }
LABEL_44:
              if (v29 < 2)
              {
LABEL_62:
                __break(1u);
LABEL_63:
                __break(1u);
                return;
              }
              if (!v31)
              {
                v72 = *(_QWORD *)(v33 + 16);
                if (v72 < 2 || v53 >= v72)
                  goto LABEL_63;
              }
              v73 = 0;
              do
              {
                if (v31)
                  v74 = MEMORY[0x24BCF6CE8](v73 + 1, v33);
                else
                  v74 = swift_retain();
                if (*(float *)(v34 + 16) < *(float *)(v74 + 16))
                  v34 = v74;
                swift_release();
                ++v73;
              }
              while (v53 != v73);
              goto LABEL_30;
            }
LABEL_43:
            v34 = MEMORY[0x24BCF6CE8](0, v33);
            v53 = v29 - 1;
            if (v29 == 1)
              goto LABEL_30;
            goto LABEL_44;
          }
        }
        else
        {
          v29 = *(_QWORD *)(v33 + 16);
          swift_retain();
          if (v29)
            goto LABEL_27;
        }
        swift_release_n();
        v70 = v80;
        v71 = v52;
LABEL_58:
        ((void (*)(char *, uint64_t))v81)(v70, v71);
        v23 = (uint64_t)v76;
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
}

void sub_2496FCEF4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37[3];
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + OBJC_IVAR___UIUDetectorCompat_focusElementDetector;
  swift_beginAccess();
  sub_2496FD368(v8, (uint64_t)v37, &qword_25787A340);
  v9 = v38;
  sub_2496FD3AC((uint64_t)v37, &qword_25787A340);
  if (v9 || (UIUDetector.preloadFocusElementModel()(), !v31))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v11(a2, 1, 1, v10);
    sub_2496FD368(v8, (uint64_t)v37, &qword_25787A340);
    if (!v38)
    {
      sub_2496FD3AC((uint64_t)v37, &qword_25787A340);
      return;
    }
    type metadata accessor for FocusElement();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = v36;
      v13 = (void *)objc_opt_self();
      v37[0] = 0;
      v14 = a1;
      v15 = objc_msgSend(v13, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v14, 960, 544, 32, 0, v37);
      if (v15)
      {
        v16 = v15;
        v35 = a2;
        v17 = v37[0];

        v18 = objc_msgSend(v16, sel_imageBufferValue);
        if (!v18)
        {
          __break(1u);
          goto LABEL_18;
        }
        type metadata accessor for FocusElementInput();
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = v18;

        v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
        v21 = *(void **)(v12 + 16);
        v37[0] = 0;
        v22 = objc_msgSend(v21, sel_predictionFromFeatures_options_error_, v19, v20, v37);
        v23 = v12;
        v24 = v37[0];
        if (v22)
        {
          v25 = v22;
          v34 = v23;
          type metadata accessor for FocusElementOutput();
          *(_QWORD *)(swift_initStackObject() + 16) = v25;
          v26 = v24;
          swift_release();

          v27 = (void *)sub_24972CB94();
          v28 = objc_msgSend(v25, sel_featureValueForName_, v27);

          if (v28)
          {
            v29 = objc_msgSend(v28, sel_multiArrayValue);

            v30 = v35;
            if (v29)
            {
              sub_24972C9FC();
              swift_release();
              swift_release();
              sub_2496FD3AC(v30, &qword_25787A348);
              v11((uint64_t)v7, 0, 1, v10);
              sub_2496FD4F8((uint64_t)v7, v30);
              return;
            }
            goto LABEL_19;
          }
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          return;
        }
        v33 = v37[0];
        sub_24972C8AC();

        swift_willThrow();
        sub_2496FD3AC(v35, &qword_25787A348);
        swift_release();
      }
      else
      {
        v32 = v37[0];
        sub_24972C8AC();

        swift_willThrow();
        sub_2496FD3AC(a2, &qword_25787A348);
      }
      swift_release();
    }
  }
}

uint64_t sub_2496FD320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2496FD368(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2496FD3AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2496FD3EC()
{
  unint64_t result;

  result = qword_25787A358;
  if (!qword_25787A358)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for FocusType, &type metadata for FocusType);
    atomic_store(result, (unint64_t *)&qword_25787A358);
  }
  return result;
}

uint64_t sub_2496FD430()
{
  return sub_2496D1BCC(&qword_25787A360, &qword_25787A368, MEMORY[0x24BEE12E0]);
}

uint64_t storeEnumTagSinglePayload for FocusType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2496FD49C + 4 * byte_2497306D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2496FD4BC + 4 * byte_2497306D5[v4]))();
}

_BYTE *sub_2496FD49C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2496FD4BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496FD4C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496FD4CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2496FD4D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2496FD4DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FocusType()
{
  return &type metadata for FocusType;
}

uint64_t sub_2496FD4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ElementDetectionTVInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementDetectionTVOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElementDetectionTV()
{
  return objc_opt_self();
}

uint64_t sub_2496FD7F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A370);
    v3 = sub_24972CFA8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_24972D2B4();
      swift_bridgeObjectRetain();
      sub_24972CC24();
      result = sub_24972D2D8();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_24972D1DC(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_24972D1DC();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2496FD994(uint64_t a1)
{
  return sub_2496FD9AC(a1, &qword_25787A378);
}

uint64_t sub_2496FD9A0(uint64_t a1)
{
  return sub_2496FD9AC(a1, &qword_25787A380);
}

uint64_t sub_2496FD9AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_24972CFA8();
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(_QWORD *)(v7 + 8 * v5);
      sub_24972D2B4();
      sub_24972D2C0();
      result = sub_24972D2D8();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(_QWORD *)(v15 + 8 * v11) == v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(_QWORD *)(v15 + 8 * v11) == v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_QWORD *)(v15 + 8 * v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t type metadata accessor for UIUnderstandingUtilities()
{
  return objc_opt_self();
}

_QWORD *sub_2496FDB08(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_24972CC54();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2496FDBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A388);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_2496FDC34(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD **v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  unint64_t v31;
  BOOL v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;

  swift_bridgeObjectRetain();
  v8 = sub_24972CC30();
  if (v8)
  {
    v9 = v8;
    v53 = sub_2496FDBC0(v8, 0);
    swift_bridgeObjectRetain();
    v10 = sub_2496FDB08(&v57, v53 + 4, v9, a1, a2);
    result = swift_bridgeObjectRelease();
    if (v10 != (_QWORD *)v9)
    {
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v53 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v12 = sub_24972CC30();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_9:
    v16 = v53[2];
    v54 = v14;
    v17 = v14[2];
    v18 = (_QWORD *)(v17 + 1);
    v19 = sub_2496DEC5C(0, v17 + 1);
    result = (uint64_t)sub_24970A850(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v21 = *(_QWORD *)(result + 16);
    v20 = *(_QWORD *)(result + 24);
    v56 = (_QWORD *)result;
    v22 = v21 + 1;
    if (v21 >= v20 >> 1)
      goto LABEL_99;
    while (1)
    {
      v56[2] = v22;
      v56[v21 + 4] = v19;
      if (!v16)
        goto LABEL_111;
      v22 = MEMORY[0x24BEE1768];
      v23 = v16;
      do
      {
        v24 = (_QWORD *)sub_24972CCFC();
        v25 = v24;
        v24[2] = v18;
        v24[4] = 0;
        if (v17)
          bzero(v24 + 5, 8 * v17);
        v27 = v56[2];
        v26 = v56[3];
        if (v27 >= v26 >> 1)
          v56 = sub_24970A850((_QWORD *)(v26 > 1), v27 + 1, 1, v56);
        v56[2] = v27 + 1;
        v28 = (_QWORD **)(v56 + 4);
        v56[v27 + 4] = v25;
        --v23;
      }
      while (v23);
      if (v27)
      {
        v18 = (_QWORD *)v56[5];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v56[5] = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if (!v18[2])
            goto LABEL_102;
          goto LABEL_20;
        }
      }
      else
      {
        __break(1u);
      }
      v18 = sub_2496F7368(v18);
      if (!v18[2])
      {
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        result = (uint64_t)sub_2496F7368(v18);
        v18 = (_QWORD *)result;
        goto LABEL_24;
      }
LABEL_20:
      v18[4] = 1;
      v56[5] = v18;
      v21 = v16 - 1;
      if (v16 != 1)
      {
LABEL_64:
        v44 = 0;
        v45 = v56 + 6;
        while (1)
        {
          v19 = v44 + 2;
          v20 = v56[2];
          if (v44 + 2 >= v20)
            break;
          v22 = 8 * v44;
          v18 = (_QWORD *)v45[v44];
          v46 = swift_isUniquelyReferenced_nonNull_native();
          v45[v44] = v18;
          if ((v46 & 1) != 0)
          {
            if (!v18[2])
              goto LABEL_71;
          }
          else
          {
            v18 = sub_2496F7368(v18);
            v45[v44] = v18;
            if (!v18[2])
            {
LABEL_71:
              __break(1u);
              goto LABEL_72;
            }
          }
          v18[4] = v19;
          if (v21 == ++v44)
            goto LABEL_21;
        }
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
LABEL_21:
      if (!v17)
        goto LABEL_103;
      if (!v56[2])
        goto LABEL_104;
      v18 = *v28;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v28 = v18;
      if ((result & 1) == 0)
        goto LABEL_105;
LABEL_24:
      v19 = (uint64_t)v54;
      if (v18[2] < 2uLL)
      {
        __break(1u);
        goto LABEL_107;
      }
      v18[5] = 1;
      *v28 = v18;
      v55 = (char *)(v17 - 1);
      if (v17 == 1)
      {
LABEL_26:
        v50 = v17;
        v51 = v16;
        v52 = (_QWORD *)(v19 + 40);
        v21 = 1;
        while (1)
        {
          v16 = v21 - 1;
          v20 = v53[2];
          if (v21 - 1 >= v20)
            goto LABEL_98;
          v20 = *(_QWORD *)(v19 + 16);
          if (!v20)
          {
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
            goto LABEL_95;
          }
          v22 = 0;
          v17 = (unint64_t)v52;
          v30 = &v53[2 * v16 + 4];
          while (1)
          {
            v31 = v22 + 1;
            v32 = *v30 == *(_QWORD *)(v17 - 8) && v30[1] == *(_QWORD *)v17;
            if (v32 || (sub_24972D1DC() & 1) != 0)
            {
              v20 = v56[2];
              if (v16 >= v20)
                goto LABEL_83;
              v33 = v28[v16];
              if (v22 >= v33[2])
                goto LABEL_84;
              if (v21 >= v20)
                goto LABEL_85;
              v34 = v33[v22 + 4];
              v18 = v28[v21];
              v35 = swift_isUniquelyReferenced_nonNull_native();
              v28[v21] = v18;
              if ((v35 & 1) == 0)
              {
                v18 = sub_2496F7368(v18);
                v28[v21] = v18;
              }
              v19 = (uint64_t)v54;
              v20 = v18[2];
              if (v31 >= v20)
                goto LABEL_86;
            }
            else
            {
              v20 = (unint64_t)v56;
              v36 = v56[2];
              if (v16 >= v36)
                goto LABEL_87;
              v20 = (unint64_t)v28[v16];
              if (v31 >= *(_QWORD *)(v20 + 16))
                goto LABEL_88;
              v37 = *(_QWORD *)(v20 + 8 * v22 + 40);
              v38 = __OFADD__(v37, 1);
              v39 = v37 + 1;
              if (v38)
                goto LABEL_89;
              if (v21 >= v36)
                goto LABEL_90;
              v18 = v28[v21];
              if (v22 >= v18[2])
                goto LABEL_91;
              v40 = v18[v22 + 4];
              v38 = __OFADD__(v40, 1);
              v41 = v40 + 1;
              if (v38)
                goto LABEL_92;
              v42 = *(_QWORD *)(v20 + 8 * v22 + 32);
              v38 = __OFADD__(v42, 2);
              v20 = v42 + 2;
              if (v38)
                goto LABEL_93;
              if (v41 < v39)
                v39 = v41;
              if ((uint64_t)v20 >= v39)
                v34 = v39;
              else
                v34 = v20;
              v43 = swift_isUniquelyReferenced_nonNull_native();
              v28[v21] = v18;
              if ((v43 & 1) == 0)
              {
                v18 = sub_2496F7368(v18);
                v28[v21] = v18;
              }
              v20 = v18[2];
              if (v31 >= v20)
                goto LABEL_94;
            }
            v18[v22 + 5] = v34;
            if (v55 == (char *)v22)
              break;
            v17 += 16;
            v20 = *(_QWORD *)(v19 + 16);
            if (++v22 >= v20)
              goto LABEL_82;
          }
          v16 = v51;
          if (v21 == v51)
          {
            swift_release();
            result = swift_release();
            if (v51 >= v56[2])
              goto LABEL_109;
            v48 = v28[v51];
            if (v50 < v48[2])
            {
              v49 = v48[v50 + 4];
              swift_bridgeObjectRelease();
              return v49;
            }
            goto LABEL_110;
          }
          v38 = __OFADD__(v21++, 1);
          if (v38)
          {
            __break(1u);
            goto LABEL_64;
          }
        }
      }
LABEL_72:
      v21 = 0;
      while (1)
      {
        v20 = v56[2];
        if (!v20)
          break;
        v47 = swift_isUniquelyReferenced_nonNull_native();
        *v28 = v18;
        if ((v47 & 1) == 0)
          v18 = sub_2496F7368(v18);
        v20 = v21 + 2;
        if (v21 + 2 >= v18[2])
          goto LABEL_97;
        v18[v21 + 6] = v20;
        *v28 = v18;
        if (v55 == (char *)++v21)
          goto LABEL_26;
      }
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      result = (uint64_t)sub_24970A850((_QWORD *)(v20 > 1), v22, 1, v56);
      v56 = (_QWORD *)result;
    }
  }
  v13 = v12;
  v14 = sub_2496FDBC0(v12, 0);
  swift_bridgeObjectRetain();
  v15 = sub_2496FDB08(&v57, v14 + 4, v13, a3, a4);
  result = swift_bridgeObjectRelease();
  if (v15 == (_QWORD *)v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
  return result;
}

uint64_t sub_2496FE27C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_24972CC30();
  if (result >= 1)
  {
    result = sub_24972CC30();
    if (result >= 1)
    {
      sub_24972CC30();
      sub_24972CC30();
      if (sub_24972CC30() && sub_24972CC30())
        sub_2496FDC34(a1, a2, a3, a4);
      else
        sub_24972CC30();
      v9 = sub_24972CC30();
      result = sub_24972CC30();
      if (__OFADD__(v9, result))
        __break(1u);
    }
  }
  return result;
}

uint64_t UIUDetector.__allocating_init(shape:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  id v10;
  void *v11;
  char iPadCapability;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1 != 2
    && (a1
     || (v10 = (id)MobileGestalt_get_current_device()) != 0
     && (v11 = v10, iPadCapability = MobileGestalt_get_iPadCapability(), v11, (iPadCapability & 1) != 0)))
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
    objc_allocWithZone((Class)type metadata accessor for UIUDetector());
    v15 = 1;
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
    objc_allocWithZone((Class)type metadata accessor for UIUDetector());
    v15 = 0;
  }
  v16 = UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(v15, 0, 0, v13, v14);
  if (v5)
  {

  }
  else
  {
    v6 = v16;

  }
  return v6;
}

unint64_t sub_2496FE4D8()
{
  unint64_t result;

  result = sub_249721184((uint64_t)&unk_251AA7540);
  qword_25787EBB0 = result;
  return result;
}

unint64_t sub_2496FE4FC()
{
  unint64_t result;

  result = sub_249721184((uint64_t)&unk_251AA7310);
  qword_25787EBB8 = result;
  return result;
}

unint64_t sub_2496FE520()
{
  unint64_t result;

  result = sub_249721190((uint64_t)&unk_251AA79E0);
  qword_25787EBC0 = result;
  return result;
}

unint64_t sub_2496FE544()
{
  unint64_t result;

  result = sub_249721190((uint64_t)&unk_251AA7778);
  qword_25787EBC8 = result;
  return result;
}

uint64_t UIUDetectorResult.uiObjects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UIUDetectorResult.headFeatures.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UIUDetectorResult() + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UIUDetectorResult()
{
  uint64_t result;

  result = qword_25787A390;
  if (!qword_25787A390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UIUDetectorResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t destroy for UIUDetectorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for UIUDetectorResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for UIUDetectorResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for UIUDetectorResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for UIUDetectorResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIUDetectorResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2496FE884(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UIUDetectorResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2496FE910(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2496FE988()
{
  unint64_t v0;

  sub_2496FEA00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2496FEA00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25787A3A0)
  {
    v0 = sub_24972C9E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25787A3A0);
  }
}

uint64_t sub_2496FEA5C(double a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void (*v17)(char *, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  id v27;
  dispatch_group_t v28;
  _QWORD aBlock[6];

  v3 = sub_24972CB10();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  if ((v1[OBJC_IVAR___UIUModelFetcherCompat_catalogDownloaded] & 1) != 0)
    return 1;
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 0;
  v25 = (_BYTE *)(v11 + 16);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE66C10]), sel_init);
  objc_msgSend(v12, sel_setPrefersInfraWiFi_, 1);
  objc_msgSend(v12, sel_setAllowsCellularAccess_, 0);
  v28 = *(dispatch_group_t *)&v1[OBJC_IVAR___UIUModelFetcherCompat_dispatchGroup];
  dispatch_group_enter(v28);
  v27 = (id)objc_opt_self();
  v13 = (void *)sub_24972CB94();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v1;
  aBlock[4] = sub_249700E34;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2496FEEB0;
  aBlock[3] = &block_descriptor_19;
  v15 = _Block_copy(aBlock);
  v16 = v12;
  v26 = v11;
  swift_retain();
  v1;
  swift_release();
  objc_msgSend(v27, sel_startCatalogDownload_options_then_, v13, v16, v15);
  _Block_release(v15);

  sub_24972CB04();
  MEMORY[0x24BCF682C](v7, a1);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  sub_24972CE40();
  v17(v9, v3);
  if ((sub_24972CAD4() & 1) != 0)
  {
    v18 = sub_24972C9A8();
    v19 = sub_24972CDF8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_2496CB000, v18, v19, "Hit timeout during catalog download", v20, 2u);
      MEMORY[0x24BCF76F0](v20, -1, -1);
    }

    v21 = v25;
    swift_beginAccess();
    *v21 = 0;
    v22 = v26;
  }
  else
  {

    v22 = v26;
  }
  swift_beginAccess();
  v10 = *(unsigned __int8 *)(v22 + 16);
  swift_release();
  return v10;
}

void sub_2496FED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (a1)
  {
    v4 = sub_24972C9A8();
    v5 = sub_24972CE04();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_24972CF18();
      _os_log_impl(&dword_2496CB000, v4, v5, "Failed to download catalog with status %ld", v6, 0xCu);
      MEMORY[0x24BCF76F0](v6, -1, -1);
    }

  }
  else
  {
    swift_beginAccess();
    *(_BYTE *)(a2 + 16) = 1;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a3 + OBJC_IVAR___UIUModelFetcherCompat_dispatchGroup));
}

uint64_t sub_2496FEEB0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_2496FEEEC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  char *v5;
  char v6;
  _BYTE *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;

  v2 = objc_allocWithZone(MEMORY[0x24BE66BB0]);
  v3 = (void *)sub_24972CB94();
  v4 = objc_msgSend(v2, sel_initWithType_, v3);

  if (v4)
  {
    objc_msgSend(v4, sel_returnTypes_, a1);
    switch((unint64_t)objc_msgSend(v4, sel_queryMetaDataSync))
    {
      case 0uLL:
        return v4;
      case 1uLL:
      case 4uLL:
        sub_24970069C();
        swift_allocError();
        v6 = 6;
        goto LABEL_10;
      case 5uLL:
        sub_24970069C();
        swift_allocError();
        v6 = 5;
        goto LABEL_10;
      case 7uLL:
        sub_24970069C();
        swift_allocError();
        v6 = 7;
        goto LABEL_10;
      default:
        v8 = sub_24972C9A8();
        v9 = sub_24972CDF8();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = swift_slowAlloc();
          *(_DWORD *)v10 = 134218240;
          sub_24972CF18();
          *(_WORD *)(v10 + 12) = 2048;
          sub_24972CF18();
          _os_log_impl(&dword_2496CB000, v8, v9, "Query %ld failed with unexpected status %ld", (uint8_t *)v10, 0x16u);
          MEMORY[0x24BCF76F0](v10, -1, -1);
        }

        sub_24970069C();
        swift_allocError();
        v6 = 1;
LABEL_10:
        *v5 = v6;
        swift_willThrow();

        break;
    }
  }
  else
  {
    sub_24970069C();
    swift_allocError();
    *v7 = 1;
    swift_willThrow();
  }
  return v4;
}

id sub_2496FF168(uint64_t a1, void *a2, double a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t p_ivar_lyt;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  id result;
  void *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  BOOL v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint8_t *v55;
  BOOL v56;
  void *v57;
  _QWORD *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  char v69;
  _BYTE *v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  __int128 v89;
  uint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  uint64_t aBlock[6];
  uint64_t v103;
  uint64_t v104;

  v4 = v3;
  v87 = a1;
  v7 = sub_24972CB10();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  p_ivar_lyt = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v71 - v12;
  v85 = sub_24972CAE0();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_24972CAF8();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v80 = (uint8_t *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  v86 = v16;
  *(_BYTE *)(v16 + 16) = 1;
  v17 = (uint8_t *)(v16 + 16);
  result = objc_msgSend(a2, sel_results);
  if (result)
  {
    v19 = result;
    sub_2497006E4();
    v20 = sub_24972CCD8();

    v96 = v20;
    if (v20 >> 62)
      goto LABEL_56;
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
    v95 = v22;
    if (v22)
    {
      v72 = v17;
      v73 = p_ivar_lyt;
      v74 = v13;
      v75 = v8;
      v76 = v7;
      v77 = v4;
      v23 = 0;
      v100 = &v88[OBJC_IVAR___UIUModelFetcherCompat_log];
      v8 = v96;
      v13 = (char *)(v96 & 0xC000000000000001);
      v92 = v96 + 32;
      v93 = v96 & 0xFFFFFFFFFFFFFF8;
      v90 = &v104;
      p_ivar_lyt = (uint64_t)&ElementDetectionTV.ivar_lyt;
      v99 = MEMORY[0x24BEE4AD8] + 8;
      v79 = OBJC_IVAR___UIUModelFetcherCompat_dispatchGroup;
      v78 = OBJC_IVAR___UIUModelFetcherCompat_dispatchQueue;
      *(_QWORD *)&v21 = 136315138;
      v89 = v21;
      v4 = v95;
      v94 = v96 & 0xC000000000000001;
      do
      {
        if (v13)
        {
          v24 = (id)MEMORY[0x24BCF6CE8](v23, v8);
        }
        else
        {
          if (v23 >= *(_QWORD *)(v93 + 16))
            goto LABEL_55;
          v24 = *(id *)(v92 + 8 * v23);
        }
        v101 = v24;
        v25 = __OFADD__(v23++, 1);
        if (v25)
          goto LABEL_54;
        v26 = objc_msgSend(v101, *(SEL *)(p_ivar_lyt + 3232));
        if (v26
          && (v27 = v26,
              v28 = sub_24972CB40(),
              v27,
              v29 = sub_249701CE0(v28),
              swift_bridgeObjectRelease(),
              v29))
        {
          v8 = sub_2496FACF4(v29);
          v30 = sub_2496FA568();
          v4 = v31;
          swift_bridgeObjectRetain_n();
          v32 = sub_24972C9A8();
          v33 = sub_24972CE04();
          v7 = v33;
          v34 = os_log_type_enabled(v32, v33);
          v97 = v30;
          if (v34)
          {
            v17 = (uint8_t *)swift_slowAlloc();
            v35 = swift_slowAlloc();
            aBlock[0] = v35;
            *(_DWORD *)v17 = v89;
            v98 = v8;
            swift_bridgeObjectRetain();
            v103 = sub_2496F0B1C(v30, v4, aBlock);
            v8 = v98;
            v13 = (char *)v94;
            sub_24972CF18();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2496CB000, v32, (os_log_type_t)v7, "Inspecting %s", v17, 0xCu);
            swift_arrayDestroy();
            v36 = v35;
            p_ivar_lyt = 0x251AAE000;
            MEMORY[0x24BCF76F0](v36, -1, -1);
            MEMORY[0x24BCF76F0](v17, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          if (objc_msgSend(v101, sel_state) == (id)2)
          {
            swift_bridgeObjectRelease();
            v37 = sub_24972C9A8();
            v38 = sub_24972CE04();
            if (os_log_type_enabled(v37, v38))
            {
              v39 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v39 = 0;
              _os_log_impl(&dword_2496CB000, v37, v38, "Asset already installed", v39, 2u);
              MEMORY[0x24BCF76F0](v39, -1, -1);
            }
            swift_release();

            v4 = v95;
            v8 = v96;
          }
          else
          {
            if (v87)
            {
LABEL_23:
              v98 = v8;
              swift_bridgeObjectRetain_n();
              v40 = sub_24972C9A8();
              v41 = sub_24972CE04();
              if (os_log_type_enabled(v40, v41))
              {
                v42 = (uint8_t *)swift_slowAlloc();
                v43 = swift_slowAlloc();
                aBlock[0] = v43;
                *(_DWORD *)v42 = v89;
                swift_bridgeObjectRetain();
                v44 = v97;
                v103 = sub_2496F0B1C(v97, v4, aBlock);
                sub_24972CF18();
                swift_bridgeObjectRelease_n();
                v45 = v41;
                v46 = v44;
                _os_log_impl(&dword_2496CB000, v40, v45, "Downloading asset %s", v42, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24BCF76F0](v43, -1, -1);
                MEMORY[0x24BCF76F0](v42, -1, -1);

              }
              else
              {
                swift_bridgeObjectRelease_n();

                v46 = v97;
              }
              v57 = v88;
              dispatch_group_enter(*(dispatch_group_t *)&v88[v79]);
              v58 = (_QWORD *)swift_allocObject();
              v59 = v101;
              v58[2] = v101;
              v58[3] = v57;
              v58[4] = v86;
              v58[5] = v46;
              v58[6] = v4;
              aBlock[4] = (uint64_t)sub_249700CE8;
              aBlock[5] = (uint64_t)v58;
              aBlock[0] = MEMORY[0x24BDAC760];
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)sub_249700200;
              aBlock[3] = (uint64_t)&block_descriptor;
              v60 = _Block_copy(aBlock);
              v61 = v59;
              v62 = v57;
              swift_retain();
              v17 = v80;
              sub_24972CAEC();
              v103 = MEMORY[0x24BEE4AF8];
              sub_249700D10();
              __swift_instantiateConcreteTypeFromMangledName(&qword_25787A3C0);
              sub_249700D58();
              v63 = v83;
              v7 = v85;
              sub_24972CF54();
              MEMORY[0x24BCF6B74](0, v17, v63, v60);
              swift_release();
              _Block_release(v60);

              (*(void (**)(char *, uint64_t))(v84 + 8))(v63, v7);
              (*(void (**)(uint8_t *, uint64_t))(v81 + 8))(v17, v82);
              swift_release();
            }
            else
            {
              v47 = _s15UIUnderstanding15UIUModelFetcherC18getDefaultModelSetSayAA0aF0CGyFZ_0();
              if (v47 >> 62)
              {
                v13 = (char *)sub_24972D0BC();
                if (v13)
                {
LABEL_27:
                  v48 = v47 & 0xC000000000000001;
                  p_ivar_lyt = 4;
                  v91 = v47 & 0xC000000000000001;
                  do
                  {
                    v49 = p_ivar_lyt - 4;
                    if (v48)
                    {
                      v50 = MEMORY[0x24BCF6CE8](p_ivar_lyt - 4, v47);
                      v25 = __OFADD__(v49, 1);
                      v7 = p_ivar_lyt - 3;
                      if (v25)
                        goto LABEL_53;
                    }
                    else
                    {
                      v50 = swift_retain();
                      v25 = __OFADD__(v49, 1);
                      v7 = p_ivar_lyt - 3;
                      if (v25)
                      {
LABEL_53:
                        __break(1u);
LABEL_54:
                        __break(1u);
LABEL_55:
                        __break(1u);
LABEL_56:
                        swift_bridgeObjectRetain();
                        v22 = sub_24972D0BC();
                        swift_bridgeObjectRelease();
                        goto LABEL_4;
                      }
                    }
                    if (*(unsigned __int8 *)(v50 + 16) == *(unsigned __int8 *)(v8 + 16)
                      && *(unsigned __int8 *)(v50 + 17) == *(unsigned __int8 *)(v8 + 17))
                    {
                      v51 = v13;
                      v52 = v4;
                      v17 = *(uint8_t **)(v50 + 24);
                      v53 = v47;
                      v54 = v23;
                      v55 = *(uint8_t **)(v8 + 24);
                      swift_release();
                      v56 = v17 == v55;
                      v23 = v54;
                      v47 = v53;
                      v4 = v52;
                      v13 = v51;
                      v48 = v91;
                      if (v56)
                      {
                        swift_bridgeObjectRelease();
                        goto LABEL_23;
                      }
                    }
                    else
                    {
                      swift_release();
                    }
                    ++p_ivar_lyt;
                  }
                  while ((char *)v7 != v13);
                }
              }
              else
              {
                v13 = *(char **)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v13)
                  goto LABEL_27;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              v64 = sub_24972C9A8();
              v65 = sub_24972CE04();
              v7 = v65;
              if (os_log_type_enabled(v64, v65))
              {
                v66 = (uint8_t *)swift_slowAlloc();
                v67 = swift_slowAlloc();
                aBlock[0] = v67;
                *(_DWORD *)v66 = v89;
                v17 = v66 + 4;
                swift_bridgeObjectRetain();
                v103 = sub_2496F0B1C(v97, v4, aBlock);
                sub_24972CF18();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_2496CB000, v64, (os_log_type_t)v7, "Skipping: %s not in the default set.", v66, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24BCF76F0](v67, -1, -1);
                MEMORY[0x24BCF76F0](v66, -1, -1);
              }
              else
              {
                swift_bridgeObjectRelease_n();
              }
              swift_release();

            }
            v4 = v95;
            v8 = v96;
            v13 = (char *)v94;
            p_ivar_lyt = 0x251AAE000;
          }
        }
        else
        {

        }
      }
      while (v23 != v4);
      swift_bridgeObjectRelease();
      v7 = v76;
      v8 = v75;
      v13 = v74;
      p_ivar_lyt = v73;
      v17 = v72;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_24972CB04();
    MEMORY[0x24BCF682C](p_ivar_lyt, a3);
    v68 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v68(p_ivar_lyt, v7);
    v69 = sub_24972CE40();
    v68((uint64_t)v13, v7);
    swift_beginAccess();
    if ((*v17 & 1) != 0)
    {
      swift_release();
      return (id)(v69 & 1);
    }
    else
    {
      sub_24970069C();
      swift_allocError();
      *v70 = 2;
      swift_willThrow();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2496FFCB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = v9;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_249700DFC;
  v12[5] = v10;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2496FEEB0;
  v12[3] = &block_descriptor_12;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a1, sel_startDownload_, v11);
  _Block_release(v11);
}

void sub_2496FFDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37[3];

  v10 = sub_24972C9C0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  v17 = a3 + 16;
  if (a1 && a1 != 10)
  {
    swift_beginAccess();
    *(_BYTE *)(a2 + 16) = 0;
    swift_beginAccess();
    v24 = MEMORY[0x24BCF7744](v17);
    if (v24)
    {
      v25 = (void *)v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v24 + OBJC_IVAR___UIUModelFetcherCompat_log, v10);

      swift_bridgeObjectRetain_n();
      v26 = sub_24972C9A8();
      v27 = sub_24972CDF8();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v36[0] = v34;
        *(_DWORD *)v28 = 136315394;
        v33 = v28 + 4;
        swift_bridgeObjectRetain();
        v35 = sub_2496F0B1C(a4, a5, v36);
        sub_24972CF18();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 2048;
        v35 = a1;
        sub_24972CF18();
        _os_log_impl(&dword_2496CB000, v26, v27, "Failed to download asset %s: %ld", (uint8_t *)v28, 0x16u);
        v29 = v34;
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v29, -1, -1);
        MEMORY[0x24BCF76F0](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      }
    }
  }
  else
  {
    swift_beginAccess();
    v18 = MEMORY[0x24BCF7744](v17);
    if (v18)
    {
      v19 = (void *)v18;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v18 + OBJC_IVAR___UIUModelFetcherCompat_log, v10);

      swift_bridgeObjectRetain_n();
      v20 = sub_24972C9A8();
      v21 = sub_24972CE04();
      if (os_log_type_enabled(v20, v21))
      {
        v34 = v10;
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v37[0] = v23;
        v33 = v11;
        *(_DWORD *)v22 = 136315138;
        swift_bridgeObjectRetain();
        v36[0] = sub_2496F0B1C(a4, a5, v37);
        sub_24972CF18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2496CB000, v20, v21, "Success with %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v23, -1, -1);
        MEMORY[0x24BCF76F0](v22, -1, -1);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
    }
  }
  swift_beginAccess();
  v30 = MEMORY[0x24BCF7744](v17);
  if (v30)
  {
    v31 = (void *)v30;
    v32 = *(id *)(v30 + OBJC_IVAR___UIUModelFetcherCompat_dispatchGroup);

    dispatch_group_leave(v32);
  }
}

uint64_t sub_249700200(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id UIUModelFetcher.downloadAssets(modelSet:timeout:)(uint64_t a1, double a2)
{
  uint64_t v2;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  id v12;
  id result;
  void *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  char v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((sub_2496FEA5C(a2) & 1) == 0)
  {
    sub_24970069C();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();
    return (id)(v11 & 1);
  }
  if (a1)
    v5 = 0xE300000000000000;
  else
    v5 = 0xE700000000000000;
  swift_bridgeObjectRetain();
  v6 = sub_24972C9A8();
  v7 = sub_24972CE04();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = 7105633;
    if (!a1)
      v8 = 0x746C7561666564;
    v25 = v8;
    v9 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v26;
    *(_DWORD *)v9 = 136315394;
    sub_2496F0B1C(0xD000000000000025, 0x80000002497334A0, &v27);
    sub_24972CF18();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_2496F0B1C(v25, v5, &v27);
    sub_24972CF18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2496CB000, v6, v7, "Downloading assets of type %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24BCF76F0](v26, -1, -1);
    MEMORY[0x24BCF76F0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v12 = sub_2496FEEEC(0);
  if (v2)
    return (id)(v11 & 1);
  v14 = v12;
  objc_msgSend(v12, sel_returnTypes_, 0);
  result = objc_msgSend(v14, sel_results);
  if (result)
  {
    v15 = result;
    sub_2497006E4();
    v16 = sub_24972CCD8();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_24972D0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v17)
    {
      sub_2496FF168(a1, v14, a2);
      v22 = sub_24972CAD4();
      v18 = sub_24972C9A8();
      if ((v22 & 1) != 0)
      {
        v23 = sub_24972CDF8();
        if (os_log_type_enabled(v18, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v24 = 0;
          _os_log_impl(&dword_2496CB000, v18, v23, "Hit timeout", v24, 2u);
          MEMORY[0x24BCF76F0](v24, -1, -1);
        }

        v11 = 0;
        return (id)(v11 & 1);
      }
      v19 = sub_24972CE04();
      if (!os_log_type_enabled(v18, v19))
        goto LABEL_27;
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "Successful download";
    }
    else
    {
      v18 = sub_24972C9A8();
      v19 = sub_24972CE04();
      if (!os_log_type_enabled(v18, v19))
      {
LABEL_27:

        v11 = 1;
        return (id)(v11 & 1);
      }
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "Nothing to download";
    }
    _os_log_impl(&dword_2496CB000, v18, v19, v21, v20, 2u);
    MEMORY[0x24BCF76F0](v20, -1, -1);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

unint64_t sub_24970069C()
{
  unint64_t result;

  result = qword_25787A3A8;
  if (!qword_25787A3A8)
  {
    result = MEMORY[0x24BCF7648](&unk_2497309DC, &type metadata for ModelLoadingError);
    atomic_store(result, (unint64_t *)&qword_25787A3A8);
  }
  return result;
}

unint64_t sub_2497006E4()
{
  unint64_t result;

  result = qword_25787A3B0;
  if (!qword_25787A3B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25787A3B0);
  }
  return result;
}

uint64_t sub_249700720(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x24BCF6CF4](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

unint64_t _s15UIUnderstanding15UIUModelFetcherC18getDefaultModelSetSayAA0aF0CGyFZ_0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24972EE50;
  type metadata accessor for UIUnderstandingModel();
  v1 = swift_allocObject();
  *(_WORD *)(v1 + 16) = 256;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 24) = 1;
  *(_QWORD *)(inited + 32) = v1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_WORD *)(v2 + 16) = 257;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(inited + 40) = v2;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 16) = 259;
  *(_QWORD *)(v3 + 24) = 1;
  *(_QWORD *)(inited + 48) = v3;
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_24972EE50;
  v5 = swift_allocObject();
  *(_WORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 24) = 1;
  *(_QWORD *)(v4 + 32) = v5;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_WORD *)(v6 + 16) = 1;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  *(_WORD *)(v7 + 16) = 3;
  *(_QWORD *)(v7 + 24) = 1;
  *(_QWORD *)(v4 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_WORD *)(v8 + 16) = 770;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (id)MobileGestalt_get_current_device();
  if (v9)
  {
    v10 = v9;
    if (MobileGestalt_get_iPadCapability())
    {
      swift_release();
      v11 = (void *)MEMORY[0x24BEE4AF8];
      if (MEMORY[0x24BEE4AF8] >> 62)
      {
        swift_bridgeObjectRetain();
        v25 = sub_24972D0BC();
        swift_bridgeObjectRelease();
        v13 = v25 + 3;
        if (!__OFADD__(v25, 3))
        {
LABEL_5:
          v11 = v10;
          sub_249700720(v13, 1);
          sub_24972CCE4();
          v14 = swift_retain();
          MEMORY[0x24BCF69D0](v14);
          if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_6:
            sub_24972CD08();
            sub_24972CCE4();
            v15 = swift_retain();
            MEMORY[0x24BCF69D0](v15);
            if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_24972CCF0();
            sub_24972CD08();
            sub_24972CCE4();
            v16 = swift_retain();
            MEMORY[0x24BCF69D0](v16);
            if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_24972CCF0();
            sub_24972CD08();
            sub_24972CCE4();

            goto LABEL_20;
          }
LABEL_30:
          sub_24972CCF0();
          goto LABEL_6;
        }
      }
      else
      {
        v12 = *(_QWORD *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFF8) + 0x10);
        v13 = v12 + 3;
        if (!__OFADD__(v12, 3))
          goto LABEL_5;
      }
      __break(1u);
      goto LABEL_30;
    }

  }
  swift_release();
  if (!(v26 >> 62))
  {
    v17 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 + 3;
    if (!__OFADD__(v17, 3))
      goto LABEL_14;
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v24 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  v18 = v24 + 3;
  if (__OFADD__(v24, 3))
    goto LABEL_25;
LABEL_14:
  sub_249700720(v18, 1);
  sub_24972CCE4();
  v19 = swift_retain();
  MEMORY[0x24BCF69D0](v19);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_26:
    sub_24972CCF0();
  sub_24972CD08();
  sub_24972CCE4();
  v20 = swift_retain();
  MEMORY[0x24BCF69D0](v20);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24972CCF0();
  sub_24972CD08();
  sub_24972CCE4();
  v21 = swift_retain();
  MEMORY[0x24BCF69D0](v21);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24972CCF0();
  sub_24972CD08();
  sub_24972CCE4();
LABEL_20:
  swift_release();
  v22 = swift_retain();
  MEMORY[0x24BCF69D0](v22);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_24972CCF0();
  sub_24972CD08();
  sub_24972CCE4();
  swift_release();
  return v26;
}

uint64_t sub_249700C9C()
{
  return swift_deallocObject();
}

uint64_t sub_249700CAC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249700CE8()
{
  uint64_t v0;

  sub_2496FFCB0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_249700D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A3B8;
  if (!qword_25787A3B8)
  {
    v1 = sub_24972CAE0();
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25787A3B8);
  }
  return result;
}

unint64_t sub_249700D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A3C8;
  if (!qword_25787A3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A3C0);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25787A3C8);
  }
  return result;
}

uint64_t sub_249700DA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_249700DC8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_249700DFC(uint64_t a1)
{
  uint64_t v1;

  sub_2496FFDB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_249700E08()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_249700E34(uint64_t a1)
{
  uint64_t v1;

  sub_2496FED98(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_249700E4C()
{
  uint64_t v0;

  v0 = sub_24972C9C0();
  __swift_allocate_value_buffer(v0, qword_25787EBD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25787EBD0);
  return sub_24972C9B4();
}

CGImageRef_optional __swiftcall currentDeviceScreenshot()()
{
  double v0;
  NSObject *v1;
  NSObject *v2;
  double Width;
  double Height;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t inited;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  char v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  CVPixelBufferRef v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint8_t *v66;
  NSObject *v67;
  uint64_t v68;
  uint8_t *v69;
  os_log_type_t v70;
  uint8_t *v71;
  NSObject *v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  __CVBuffer *v81;
  NSObject *v82;
  NSObject *v83;
  uint64_t v84;
  CVPixelBufferRef pixelBufferOut;
  unint64_t v86;
  uint64_t v87;
  CGRect v88;
  CGRect v89;

  v87 = *MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainDisplay);
  if (!v1)
    return 0;
  v2 = v1;
  -[NSObject bounds](v1, sel_bounds);
  Width = CGRectGetWidth(v88);
  -[NSObject bounds](v2, sel_bounds);
  Height = CGRectGetHeight(v89);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24972F6C0;
  sub_24972CFB4();
  swift_bridgeObjectRelease();
  pixelBufferOut = (CVPixelBufferRef)0xD000000000000016;
  v86 = 0x80000002497334E0;
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 32) = 0xD000000000000016;
  *(_QWORD *)(v5 + 40) = 0x80000002497334E0;
  sub_24972D29C();
  swift_bridgeObjectRelease();
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
    goto LABEL_11;
  }
  v7 = (uint64_t)Width & 0xF;
  if ((uint64_t)Width <= 0)
    v7 = -(-(uint64_t)Width & 0xF);
  if (v7)
    v0 = (double)(16 - v7);
  else
    v0 = 0.0;
  if (qword_257879BF0 != -1)
    goto LABEL_37;
LABEL_11:
  v8 = Width + v0;
  v9 = sub_24972C9C0();
  __swift_project_value_buffer(v9, (uint64_t)qword_25787EBD0);
  v10 = sub_24972C9A8();
  v11 = sub_24972CDEC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    pixelBufferOut = *(CVPixelBufferRef *)&v0;
    sub_24972CF18();
    _os_log_impl(&dword_2496CB000, v10, v11, "Image row-alignment %f", v12, 0xCu);
    MEMORY[0x24BCF76F0](v12, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A3D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2497308C0;
  v14 = (void *)*MEMORY[0x24BDD8D90];
  v15 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD8D90];
  *(double *)(inited + 40) = v8;
  v16 = (void *)*MEMORY[0x24BDD8D58];
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 72) = v16;
  *(double *)(inited + 80) = Height;
  v17 = (void *)*MEMORY[0x24BDD8D40];
  *(_QWORD *)(inited + 104) = v15;
  *(_QWORD *)(inited + 112) = v17;
  *(double *)(inited + 120) = v8 * 4.0;
  v18 = (void *)*MEMORY[0x24BDD8D30];
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 152) = v18;
  v19 = (void **)MEMORY[0x24BDD8D38];
  *(double *)(inited + 160) = Height * (v8 * 4.0);
  v20 = *v19;
  *(_QWORD *)(inited + 184) = v15;
  *(_QWORD *)(inited + 192) = v20;
  v21 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 200) = 4;
  v22 = (void *)*MEMORY[0x24BDD8D60];
  *(_QWORD *)(inited + 224) = v21;
  *(_QWORD *)(inited + 232) = v22;
  *(_QWORD *)(inited + 264) = MEMORY[0x24BEE44F0];
  *(_DWORD *)(inited + 240) = 1111970369;
  v23 = v14;
  v24 = v16;
  v25 = v17;
  v26 = v18;
  v27 = v20;
  v28 = v22;
  sub_24971FD9C(inited);
  v29 = objc_allocWithZone(MEMORY[0x24BDD8DE8]);
  type metadata accessor for IOSurfacePropertyKey(0);
  sub_2496CED84(&qword_257879D58, (uint64_t (*)(uint64_t))type metadata accessor for IOSurfacePropertyKey, (uint64_t)&unk_24972E844);
  v30 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, sel_initWithProperties_, v30);

  if (!v31)
  {
    v67 = sub_24972C9A8();
    v68 = sub_24972CDF8();
    if (os_log_type_enabled(v67, (os_log_type_t)v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_2496CB000, v67, (os_log_type_t)v68, "Couldn't create an IOSurface for screenshot.", v69, 2u);
      MEMORY[0x24BCF76F0](v69, -1, -1);
    }
    goto LABEL_31;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A3D8);
  v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_2497308D0;
  sub_24972CBB8();
  sub_24972CF84();
  v33 = sub_24972CBB8();
  *(_QWORD *)(v32 + 96) = v6;
  *(_QWORD *)(v32 + 72) = v33;
  *(_QWORD *)(v32 + 80) = v34;
  sub_24972CBB8();
  sub_24972CF84();
  *(_QWORD *)(v32 + 168) = sub_249701B04();
  *(_QWORD *)(v32 + 144) = v31;
  sub_24972CBB8();
  v35 = v31;
  sub_24972CF84();
  v36 = -[NSObject name](v2, sel_name);
  v37 = sub_24972CBB8();
  v83 = v2;
  v39 = v38;

  *(_QWORD *)(v32 + 240) = v6;
  *(_QWORD *)(v32 + 216) = v37;
  *(_QWORD *)(v32 + 224) = v39;
  v2 = v83;
  sub_24972CBB8();
  sub_24972CF84();
  -[NSObject bounds](v83, sel_bounds);
  *(_QWORD *)(v32 + 312) = v15;
  *(_QWORD *)(v32 + 288) = v40;
  sub_24972CBB8();
  sub_24972CF84();
  -[NSObject bounds](v83, sel_bounds);
  *(_QWORD *)(v32 + 384) = v15;
  *(_QWORD *)(v32 + 360) = v41;
  sub_24972CBB8();
  sub_24972CF84();
  v42 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v32 + 456) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v32 + 432) = 1;
  pixelBufferOut = (CVPixelBufferRef)sub_24972CBB8();
  v86 = v43;
  sub_24972CF84();
  *(_QWORD *)(v32 + 528) = v42;
  *(_BYTE *)(v32 + 504) = 1;
  sub_24971FDB0(v32);
  v44 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  v45 = CARenderServerSnapshot();

  if ((v45 & 1) == 0)
  {
    v46 = sub_24972C9A8();
    v47 = sub_24972CDF8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_2496CB000, v46, v47, "Display failed to render.", v48, 2u);
      MEMORY[0x24BCF76F0](v48, -1, -1);
    }

  }
  -[NSObject lockWithOptions:seed:](v35, sel_lockWithOptions_seed_, 1, 0);
  pixelBufferOut = 0;
  CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x24BDBD240], (IOSurfaceRef)v35, 0, &pixelBufferOut);
  v49 = sub_24972C9A8();
  v50 = sub_24972CDEC();
  if (!os_log_type_enabled(v49, v50))
  {

    v55 = pixelBufferOut;
    if (pixelBufferOut)
      goto LABEL_20;
    goto LABEL_25;
  }
  v51 = (uint8_t *)swift_slowAlloc();
  v52 = swift_slowAlloc();
  v84 = v52;
  *(_DWORD *)v51 = 136315138;
  v53 = sub_24972D1C4();
  sub_2496F0B1C(v53, v54, &v84);
  v2 = v83;
  sub_24972CF18();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2496CB000, v49, v50, "cvBufferResult %s", v51, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24BCF76F0](v52, -1, -1);
  MEMORY[0x24BCF76F0](v51, -1, -1);

  v55 = pixelBufferOut;
  if (!pixelBufferOut)
  {
LABEL_25:
    v67 = sub_24972C9A8();
    v70 = sub_24972CDF8();
    if (os_log_type_enabled(v67, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v71 = 0;
      _os_log_impl(&dword_2496CB000, v67, v70, "pixelBuffer failed", v71, 2u);
      MEMORY[0x24BCF76F0](v71, -1, -1);
      v72 = v35;
    }
    else
    {
      v72 = v67;
      v67 = v2;
      v2 = v35;
    }

LABEL_31:
    return 0;
  }
LABEL_20:
  v82 = v35;
  v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v55);
  v57 = sub_24972C9A8();
  v58 = sub_24972CDEC();
  if (os_log_type_enabled(v57, v58))
  {
    v81 = v55;
    v59 = (uint8_t *)swift_slowAlloc();
    v60 = swift_slowAlloc();
    v84 = v60;
    *(_DWORD *)v59 = 136315138;
    v61 = v56;
    v62 = objc_msgSend(v61, sel_description);
    v63 = sub_24972CBB8();
    v65 = v64;

    sub_2496F0B1C(v63, v65, &v84);
    sub_24972CF18();

    v2 = v83;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2496CB000, v57, v58, "Image result: %s", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24BCF76F0](v60, -1, -1);
    v66 = v59;
    v55 = v81;
    MEMORY[0x24BCF76F0](v66, -1, -1);

  }
  else
  {

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A3E8);
  v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_24972F6C0;
  v74 = (void *)*MEMORY[0x24BDBF850];
  *(_QWORD *)(v73 + 32) = *MEMORY[0x24BDBF850];
  *(_QWORD *)(v73 + 64) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v73 + 40) = 0;
  v75 = v74;
  sub_24971FEF0(v73);
  v76 = objc_allocWithZone(MEMORY[0x24BDBF648]);
  type metadata accessor for CIContextOption(0);
  sub_2496CED84(&qword_257879D48, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_24972E800);
  v77 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  v78 = objc_msgSend(v76, sel_initWithOptions_, v77);

  objc_msgSend(v56, sel_extent);
  v79 = objc_msgSend(v78, sel_createCGImage_fromRect_, v56);

  return (CGImageRef_optional)v79;
}

unint64_t sub_249701B04()
{
  unint64_t result;

  result = qword_25787A3E0;
  if (!qword_25787A3E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25787A3E0);
  }
  return result;
}

id sub_249701B40(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_24972C8C4();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_24972C900();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_24972C8AC();

    swift_willThrow();
    v9 = sub_24972C900();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

id static UIUModelFetcher.sharedFetcher()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  if (qword_257879BF8 != -1)
    swift_once();
  v0 = (void *)qword_25787EBE8;
  if (qword_25787EBE8)
  {
    v1 = (id)qword_25787EBE8;
  }
  else
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
    v3 = (void *)qword_25787EBE8;
    qword_25787EBE8 = (uint64_t)v2;
    v1 = v2;

    v0 = 0;
  }
  v4 = v0;
  return v1;
}

unint64_t sub_249701CE0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A470);
    v2 = (_QWORD *)sub_24972D0EC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_2496F2984();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_2497053E8(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_2496F2A70(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_2497053E8((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_2496FD3AC((uint64_t)v30, &qword_25787A478);
      swift_bridgeObjectRelease();
      sub_2496F2984();
      swift_release();
      return 0;
    }
    sub_2496F2A70((uint64_t)v31 + 8, (uint64_t)v25);
    sub_2496FD3AC((uint64_t)v30, &qword_25787A478);
    sub_249705424(v25, v26);
    v27 = v24;
    sub_249705424(v26, v28);
    v16 = v27;
    sub_249705424(v28, v29);
    sub_249705424(v29, &v27);
    result = sub_249720628(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_249705424(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_249705424(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

double static UIUModelFetcher.downloadTimeout.getter()
{
  return 600.0;
}

id sub_2497020C0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
  qword_25787EBE8 = (uint64_t)result;
  return result;
}

id UIUModelFetcher.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t type metadata accessor for UIUModelFetcher()
{
  uint64_t result;

  result = qword_25787A410;
  if (!qword_25787A410)
    return swift_getSingletonMetadata();
  return result;
}

id sub_24970214C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  id result;
  void *v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v31;
  unint64_t v32;
  __int128 v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void (*v59)(uint64_t, char *, uint64_t);
  char *v60;
  char *v61;
  id v62;
  unsigned int v63;
  void (*v64)(char *, uint64_t);
  _BYTE *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  _BYTE *v86;
  void (*v87)(uint64_t, uint64_t);
  _QWORD v88[2];
  __int128 v89;
  uint64_t v90;
  id v91;
  char *v92;
  void (*v93)(uint64_t, char *, uint64_t);
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111[5];
  __int128 v112;
  __int128 v113;
  char *v114;

  v103 = a1;
  v96 = a2;
  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (uint64_t)v88 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v99 = (char *)v88 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v98 = (char *)v88 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879FA8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v102 = (uint64_t)v88 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v101 = (char *)v88 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v88 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v88 - v26;
  if ((sub_2496FEA5C(600.0) & 1) == 0)
  {
    sub_24970069C();
    swift_allocError();
    *v65 = 0;
    return (id)swift_willThrow();
  }
  v114 = v18;
  result = sub_2496FEEEC(1);
  if (v3)
    return result;
  v29 = result;
  v88[1] = 0;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v92 = v27;
  v95 = v30;
  v30((uint64_t)v27, 1, 1, v4);
  v91 = v29;
  result = objc_msgSend(v29, sel_results);
  if (!result)
    goto LABEL_52;
  v31 = result;
  sub_2496DC224(0, (unint64_t *)&qword_25787A3B0);
  v32 = sub_24972CCD8();

  v34 = v114;
  if (v32 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    v35 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v88[0] = v8;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    v66 = (uint64_t)v92;
LABEL_39:
    sub_2496D96E4(v66, (uint64_t)v34);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(v34, 1, v4) == 1)
    {
      sub_2496FD3AC((uint64_t)v34, &qword_257879FA8);
      swift_retain_n();
      v67 = sub_24972C9A8();
      v68 = sub_24972CDF8();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        v70 = swift_slowAlloc();
        v111[0] = v70;
        *(_DWORD *)v69 = 136315138;
        v71 = sub_2496FA568();
        *(_QWORD *)&v112 = sub_2496F0B1C(v71, v72, v111);
        sub_24972CF18();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2496CB000, v67, v68, "Failed to find target model %s", v69, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v70, -1, -1);
        MEMORY[0x24BCF76F0](v69, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      sub_24970069C();
      swift_allocError();
      *v86 = 4;
      swift_willThrow();

      return (id)sub_2496FD3AC(v66, &qword_257879FA8);
    }
    else
    {
      (*(void (**)(uint64_t, void *, uint64_t))(v5 + 32))(v11, v34, v4);
      v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      v74 = v96;
      v73(v96, v11, v4);
      v75 = v88[0];
      v73(v88[0], v74, v4);
      v76 = sub_24972C9A8();
      v77 = sub_24972CE04();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v97 = v5;
        v79 = (uint8_t *)v78;
        v80 = swift_slowAlloc();
        v90 = v11;
        v81 = v80;
        v111[0] = v80;
        *(_DWORD *)v79 = 136315138;
        sub_2496CED84(&qword_257879FD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v82 = sub_24972D1C4();
        *(_QWORD *)&v112 = sub_2496F0B1C(v82, v83, v111);
        sub_24972CF18();
        swift_bridgeObjectRelease();
        v84 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        v84(v75, v4);
        _os_log_impl(&dword_2496CB000, v76, v77, "Looking for asset at %s", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24BCF76F0](v81, -1, -1);
        MEMORY[0x24BCF76F0](v79, -1, -1);

        v84(v90, v4);
        v85 = (uint64_t)v92;
      }
      else
      {

        v87 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v87(v75, v4);
        v87(v11, v4);
        v85 = v66;
      }
      return (id)sub_2496FD3AC(v85, &qword_257879FA8);
    }
  }
  v90 = v11;
  v94 = v2 + OBJC_IVAR___UIUModelFetcherCompat_log;
  v108 = v32 & 0xC000000000000001;
  v11 = 4;
  v104 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v33 = 138412290;
  v89 = v33;
  v97 = v5;
  v106 = v32;
  v107 = v2;
  v100 = v25;
  v105 = v35;
  while (1)
  {
    v2 = v11 - 4;
    if (v108)
      v36 = (id)MEMORY[0x24BCF6CE8](v11 - 4, v32);
    else
      v36 = *(id *)(v32 + 8 * v11);
    v34 = v36;
    v37 = v11 - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    v38 = objc_msgSend(v36, sel_attributes);
    if (v38)
    {
      v39 = v38;
      v40 = sub_24972CB40();

      v41 = sub_249701CE0(v40);
      swift_bridgeObjectRelease();
      if (v41)
      {
        sub_2496FACF4(v41);
        v42 = sub_2496FA52C(v103);
        swift_release();
        if (!v42)
        {
LABEL_8:

          goto LABEL_9;
        }
      }
    }
    result = objc_msgSend(v34, sel_attributes, v88[0]);
    if (!result)
      break;
    v8 = (uint64_t)result;
    v43 = sub_24972CB40();

    v109 = 0x6D614E6C65646F4DLL;
    v110 = 0xE900000000000065;
    sub_24972CF84();
    if (*(_QWORD *)(v43 + 16) && (v44 = sub_24972068C((uint64_t)v111), (v45 & 1) != 0))
    {
      sub_2496F2A70(*(_QWORD *)(v43 + 56) + 32 * v44, (uint64_t)&v112);
    }
    else
    {
      v112 = 0u;
      v113 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_2497053B4((uint64_t)v111);
    if (!*((_QWORD *)&v113 + 1))
    {

      sub_2496FD3AC((uint64_t)&v112, &qword_25787A340);
      goto LABEL_9;
    }
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_8;
    v46 = objc_msgSend(v34, sel_getLocalFileUrl);
    if (v46)
    {
      v47 = v46;
      v48 = v101;
      sub_24972C8DC();

      v49 = (uint64_t)v48;
      v25 = v100;
      v50 = 0;
    }
    else
    {
      v50 = 1;
      v49 = (uint64_t)v101;
    }
    v95(v49, v50, 1, v4);
    sub_2496D969C(v49, (uint64_t)v25);
    v51 = v102;
    sub_2496D96E4((uint64_t)v25, v102);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v51, 1, v4) == 1)
    {
      swift_bridgeObjectRelease();
      sub_2496FD3AC(v51, &qword_257879FA8);
      v52 = v34;
      v53 = sub_24972C9A8();
      v54 = sub_24972CDF8();
      v8 = v54;
      if (os_log_type_enabled(v53, v54))
      {
        v55 = swift_slowAlloc();
        v56 = v4;
        v57 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v55 = v89;
        *(_QWORD *)(v55 + 4) = v52;
        *v57 = v52;
        _os_log_impl(&dword_2496CB000, v53, (os_log_type_t)v8, "Asset %@ has nil URL", (uint8_t *)v55, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257879FD8);
        swift_arrayDestroy();
        v58 = v57;
        v4 = v56;
        v5 = v97;
        MEMORY[0x24BCF76F0](v58, -1, -1);
        MEMORY[0x24BCF76F0](v55, -1, -1);

      }
      else
      {

      }
      sub_2496FD3AC((uint64_t)v25, &qword_257879FA8);
    }
    else
    {
      v59 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
      v60 = v98;
      v93 = v59;
      v59((uint64_t)v98, (char *)v51, v4);
      v61 = v99;
      sub_24972C8D0();
      swift_bridgeObjectRelease();
      v62 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_24972C8E8();
      v8 = sub_24972CB94();
      swift_bridgeObjectRelease();
      v63 = objc_msgSend(v62, sel_fileExistsAtPath_, v8);

      v64 = *(void (**)(char *, uint64_t))(v97 + 8);
      v64(v60, v4);
      sub_2496FD3AC((uint64_t)v100, &qword_257879FA8);
      if (v63)
      {
        swift_bridgeObjectRelease();
        v66 = (uint64_t)v92;
        sub_2496FD3AC((uint64_t)v92, &qword_257879FA8);
        v93(v66, v61, v4);
        v95(v66, 0, 1, v4);
        v11 = v90;
        v5 = v97;
        v34 = v114;
        goto LABEL_39;
      }
      v64(v61, v4);
      v5 = v97;
      v25 = v100;
    }
LABEL_9:
    ++v11;
    v32 = v106;
    v34 = v114;
    if (v37 == v105)
    {
      swift_bridgeObjectRelease();
      v66 = (uint64_t)v92;
      v11 = v90;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

id sub_249702D7C()
{
  id v0;
  id result;
  void *v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2496FEEEC(1);
  result = objc_msgSend(v0, sel_results);
  if (result)
  {
    v2 = result;
    sub_2496DC224(0, (unint64_t *)&qword_25787A3B0);
    v3 = sub_24972CCD8();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_24972D0BC();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

    }
    return (id)(v4 > 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249702F14(void **p_ivar_lyt)
{
  void *v2;
  uint64_t result;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  void *v16;
  uint64_t v17;

  v2 = sub_2496FEEEC(1);
  result = (uint64_t)objc_msgSend(v2, sel_results);
  if (result)
  {
    v4 = (void *)result;
    sub_2496DC224(0, (unint64_t *)&qword_25787A3B0);
    v5 = sub_24972CCD8();

    if (v5 >> 62)
      goto LABEL_17;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v6)
    {
      v16 = v2;
      v17 = (uint64_t)p_ivar_lyt;
      v2 = (void *)(v5 & 0xC000000000000001);
      v7 = 4;
      p_ivar_lyt = &ElementDetectionTV.ivar_lyt;
      while (1)
      {
        v8 = v2 ? (id)MEMORY[0x24BCF6CE8](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v11 = objc_msgSend(v8, sel_attributes);
        if (v11
          && (v12 = v11,
              v13 = sub_24972CB40(),
              v12,
              v14 = sub_249701CE0(v13),
              swift_bridgeObjectRelease(),
              v14))
        {
          sub_2496FACF4(v14);

          v15 = sub_2496FA52C(v17);
          swift_release();
          if (v15)
          {

            swift_bridgeObjectRelease();
            return 1;
          }
        }
        else
        {

        }
        ++v7;
        if (v10 == v6)
        {

          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      v6 = sub_24972D0BC();
      swift_bridgeObjectRelease();
    }

LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_249703190(uint64_t a1, double a2)
{
  return (unint64_t)UIUModelFetcher.downloadAssets(modelSet:timeout:)(a1, a2) & 1;
}

uint64_t sub_2497033F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_mindnetPortrait))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_mindnetPortrait);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_mindnetPortrait;
    v29 = v12;
    v27 = type metadata accessor for ElementMindNetPortrait();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A448);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249703630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_mindnetSquare))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_mindnetSquare);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_mindnetSquare;
    v29 = v12;
    v27 = type metadata accessor for ElementMindNetSquare();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A450);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 256;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249703870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_elementDetectionTV))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_elementDetectionTV);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_elementDetectionTV;
    v29 = v12;
    v27 = type metadata accessor for ElementDetectionTV();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A458);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 512;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249703AB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_clickabilityPortrait))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_clickabilityPortrait);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_clickabilityPortrait;
    v29 = v12;
    v27 = type metadata accessor for ClickabilityPortrait();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A468);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 1;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249703CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_clickabilitySquare))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_clickabilitySquare);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_clickabilitySquare;
    v29 = v12;
    v27 = type metadata accessor for ClickabilitySquare();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A460);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 257;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249703F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_iconClassification))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_iconClassification);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_iconClassification;
    v29 = v12;
    v27 = type metadata accessor for IconClassification();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A488);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 770;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_249704170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  id v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = sub_24972C900();
  v50 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v46 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v46 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v46 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v46 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_screenSimilarityPortrait);
  if (!v21 || *(unsigned __int8 *)(v21 + 40) != a1)
  {
    v49 = OBJC_IVAR___UIUModelFetcherCompat_screenSimilarityPortrait;
    if (a1)
    {
      v48 = v19;
      v22 = type metadata accessor for TwinEmbeddingTransformerPortrait();
      v52 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A440);
      v21 = sub_24972CC00();
      v24 = v23;
      type metadata accessor for UIUnderstandingModel();
      inited = swift_initStackObject();
      *(_WORD *)(inited + 16) = 3;
      *(_QWORD *)(inited + 24) = a1;
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)(inited + 40) = v24;
      swift_bridgeObjectRelease();
      v26 = v51;
      sub_24970214C(inited, (uint64_t)v12);
      if (!v26)
      {
        v47 = (char *)v22;
        v51 = v1;
        v27 = v50;
        v28 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
        v29 = v48;
        v28(v9, v12, v48);
        sub_2496DC224(0, &qword_25787A430);
        v28(v6, v9, v29);
        v39 = sub_249701B40((uint64_t)v6);
        v40 = *(void (**)(char *, uint64_t))(v27 + 8);
        v41 = v48;
        v40(v9, v48);
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = v39;
        type metadata accessor for ScreenSimilarity();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 48) = xmmword_2497308E0;
        *(_OWORD *)(v21 + 64) = xmmword_2497308F0;
        *(_QWORD *)(v21 + 24) = 0;
        *(_QWORD *)(v21 + 32) = 0;
        *(_QWORD *)(v21 + 16) = v42;
        *(_BYTE *)(v21 + 40) = 1;
        *(_QWORD *)(v51 + v49) = v21;
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        swift_release();
        v40(v12, v41);
        return v21;
      }
    }
    else
    {
      v30 = v19;
      v31 = (char *)&v46 - v20;
      v52 = type metadata accessor for BiEncoderCNN();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A438);
      v21 = sub_24972CC00();
      v33 = v32;
      type metadata accessor for UIUnderstandingModel();
      v34 = swift_initStackObject();
      *(_WORD *)(v34 + 16) = 771;
      *(_QWORD *)(v34 + 24) = 0;
      *(_QWORD *)(v34 + 32) = v21;
      *(_QWORD *)(v34 + 40) = v33;
      swift_bridgeObjectRelease();
      v47 = v31;
      v35 = v51;
      sub_24970214C(v34, (uint64_t)v31);
      if (!v35)
      {
        v51 = v1;
        v36 = v50;
        v37 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
        v37(v18, v47, v30);
        sub_2496DC224(0, &qword_25787A430);
        v37(v15, v18, v30);
        v43 = sub_249701B40((uint64_t)v15);
        v44 = *(void (**)(char *, uint64_t))(v36 + 8);
        v44(v18, v30);
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = v43;
        type metadata accessor for ScreenSimilarity();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 48) = xmmword_2497308E0;
        *(_OWORD *)(v21 + 64) = xmmword_2497308F0;
        *(_QWORD *)(v21 + 24) = 0;
        *(_QWORD *)(v21 + 32) = v45;
        *(_BYTE *)(v21 + 40) = 0;
        *(_QWORD *)(v21 + 16) = 0;
        *(_QWORD *)(v51 + v49) = v21;
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        swift_release();
        v44(v47, v30);
        return v21;
      }
    }
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    return v21;
  }
  swift_retain();
  return v21;
}

uint64_t sub_249704634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  id v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = sub_24972C900();
  v50 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v46 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v46 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v46 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v46 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_screenSimilaritySquare);
  if (!v21 || *(unsigned __int8 *)(v21 + 40) != a1)
  {
    v49 = OBJC_IVAR___UIUModelFetcherCompat_screenSimilaritySquare;
    if (a1)
    {
      v48 = v19;
      v22 = type metadata accessor for TwinEmbeddingTransformerSquare();
      v52 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A428);
      v21 = sub_24972CC00();
      v24 = v23;
      type metadata accessor for UIUnderstandingModel();
      inited = swift_initStackObject();
      *(_WORD *)(inited + 16) = 259;
      *(_QWORD *)(inited + 24) = a1;
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)(inited + 40) = v24;
      swift_bridgeObjectRelease();
      v26 = v51;
      sub_24970214C(inited, (uint64_t)v12);
      if (!v26)
      {
        v47 = (char *)v22;
        v51 = v1;
        v27 = v50;
        v28 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
        v29 = v48;
        v28(v9, v12, v48);
        sub_2496DC224(0, &qword_25787A430);
        v28(v6, v9, v29);
        v39 = sub_249701B40((uint64_t)v6);
        v40 = *(void (**)(char *, uint64_t))(v27 + 8);
        v41 = v48;
        v40(v9, v48);
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = v39;
        type metadata accessor for ScreenSimilarity();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 48) = xmmword_2497308E0;
        *(_OWORD *)(v21 + 64) = xmmword_2497308F0;
        *(_QWORD *)(v21 + 24) = v42;
        *(_QWORD *)(v21 + 32) = 0;
        *(_QWORD *)(v21 + 16) = 0;
        *(_BYTE *)(v21 + 40) = 2;
        *(_QWORD *)(v51 + v49) = v21;
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        swift_release();
        v40(v12, v41);
        return v21;
      }
    }
    else
    {
      v30 = v19;
      v31 = (char *)&v46 - v20;
      v52 = type metadata accessor for BiEncoderCNN();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A438);
      v21 = sub_24972CC00();
      v33 = v32;
      type metadata accessor for UIUnderstandingModel();
      v34 = swift_initStackObject();
      *(_WORD *)(v34 + 16) = 771;
      *(_QWORD *)(v34 + 24) = 0;
      *(_QWORD *)(v34 + 32) = v21;
      *(_QWORD *)(v34 + 40) = v33;
      swift_bridgeObjectRelease();
      v47 = v31;
      v35 = v51;
      sub_24970214C(v34, (uint64_t)v31);
      if (!v35)
      {
        v51 = v1;
        v36 = v50;
        v37 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
        v37(v18, v47, v30);
        sub_2496DC224(0, &qword_25787A430);
        v37(v15, v18, v30);
        v43 = sub_249701B40((uint64_t)v15);
        v44 = *(void (**)(char *, uint64_t))(v36 + 8);
        v44(v18, v30);
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = v43;
        type metadata accessor for ScreenSimilarity();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 48) = xmmword_2497308E0;
        *(_OWORD *)(v21 + 64) = xmmword_2497308F0;
        *(_QWORD *)(v21 + 24) = 0;
        *(_QWORD *)(v21 + 32) = v45;
        *(_BYTE *)(v21 + 40) = 0;
        *(_QWORD *)(v21 + 16) = 0;
        *(_QWORD *)(v51 + v49) = v21;
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        swift_release();
        v44(v47, v30);
        return v21;
      }
    }
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    return v21;
  }
  swift_retain();
  return v21;
}

uint64_t sub_249704AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_24972C900();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v27 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  if (*(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_focusElement))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIUModelFetcherCompat_focusElement);
    swift_retain();
  }
  else
  {
    v28 = OBJC_IVAR___UIUModelFetcherCompat_focusElement;
    v29 = v12;
    v27 = type metadata accessor for FocusElement();
    v31 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A480);
    v16 = sub_24972CC00();
    v30 = v1;
    v17 = v16;
    v18 = a1;
    v20 = v19;
    type metadata accessor for UIUnderstandingModel();
    inited = swift_initStackObject();
    *(_WORD *)(inited + 16) = 516;
    *(_QWORD *)(inited + 24) = v18;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v20;
    swift_bridgeObjectRelease();
    v15 = v30;
    sub_24970214C(inited, (uint64_t)v14);
    if (v2)
    {
      swift_release();
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23 = v29;
      v22(v11, v14, v29);
      sub_2496DC224(0, &qword_25787A430);
      v22(v8, v11, v23);
      v25 = sub_249701B40((uint64_t)v8);
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v11, v23);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v25;
      *(_QWORD *)(v30 + v28) = v15;
      swift_retain();
      swift_release();
      swift_release();
      v26(v14, v23);
      swift_retain();
    }
  }
  return v15;
}

id UIUModelFetcher.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_24972CE58();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24972CE4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_24972CAF8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = v0;
  sub_24972C9B4();
  v8 = OBJC_IVAR___UIUModelFetcherCompat_dispatchGroup;
  *(_QWORD *)&v7[v8] = dispatch_group_create();
  v9 = OBJC_IVAR___UIUModelFetcherCompat_dispatchQueue;
  sub_2496DC224(0, &qword_25787A3F0);
  sub_24972CAEC();
  v14 = MEMORY[0x24BEE4AF8];
  sub_2496CED84(&qword_25787A3F8, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A400);
  sub_24970514C();
  sub_24972CF54();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v12);
  *(_QWORD *)&v7[v9] = sub_24972CE70();
  v7[OBJC_IVAR___UIUModelFetcherCompat_catalogDownloaded] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_mindnetPortrait] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_mindnetSquare] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_elementDetectionTV] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_clickabilityPortrait] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_clickabilitySquare] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_iconClassification] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_screenSimilarityPortrait] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_screenSimilaritySquare] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___UIUModelFetcherCompat_focusElement] = 0;

  v10 = (objc_class *)type metadata accessor for UIUModelFetcher();
  v13.receiver = v7;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, sel_init);
}

id UIUModelFetcher.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIUModelFetcher();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_24970514C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A408;
  if (!qword_25787A408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A400);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25787A408);
  }
  return result;
}

uint64_t sub_249705198()
{
  return type metadata accessor for UIUModelFetcher();
}

uint64_t sub_2497051A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C9C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UIUModelFetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIUModelFetcher.areAssetsPresent()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of UIUModelFetcher.isModelPresent(model:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of UIUModelFetcher.startAssetDownload(modelSet:timeout:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t storeEnumTagSinglePayload for ModelLoadingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2497052EC + 4 * byte_249730905[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_249705320 + 4 * byte_249730900[v4]))();
}

uint64_t sub_249705320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249705328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249705330);
  return result;
}

uint64_t sub_24970533C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249705344);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_249705348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249705350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelLoadingError()
{
  return &type metadata for ModelLoadingError;
}

unint64_t sub_249705370()
{
  unint64_t result;

  result = qword_25787A420;
  if (!qword_25787A420)
  {
    result = MEMORY[0x24BCF7648](&unk_2497309B4, &type metadata for ModelLoadingError);
    atomic_store(result, (unint64_t *)&qword_25787A420);
  }
  return result;
}

uint64_t sub_2497053B4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_2497053E8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

_OWORD *sub_249705424(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t OCRDetection.__allocating_init(text:box:heat:)(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_24972C954();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(float *)(v8 + 40) = a4;
  return v8;
}

uint64_t OCRDetection.init(text:box:heat:)(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v4;

  sub_24972C954();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(float *)(v4 + 40) = a4;
  return v4;
}

uint64_t OCRDetection.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding12OCRDetection_id;
  v2 = sub_24972C960();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t OCRDetection.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding12OCRDetection_id;
  v2 = sub_24972C960();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

float static UIUDetector.ocrConfidenceThreshold.getter()
{
  return 0.31;
}

float static UIUDetector.ocrTextOverlapThreshold.getter()
{
  return 0.7225;
}

float static UIUDetector.fastOCRBBoxExtensionRatio.getter()
{
  return 0.1;
}

void sub_2497055DC()
{
  qword_25787A490 = 0x4014000000000000;
}

double static UIUDetector.ocrBBoxInputExtensionPixels.getter()
{
  if (qword_257879C00 != -1)
    swift_once();
  return *(double *)&qword_25787A490;
}

void UIUDetector.getOCRDetections(for:quality:in:completionHandler:)(CGImage *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void *, uint64_t), uint64_t a5)
{
  void *v5;
  void *v11;

  v11 = (void *)MEMORY[0x24BCF71E0]();
  sub_249705E48(a3, a1, v5, a4, a5, a2);
  objc_autoreleasePoolPop(v11);
}

uint64_t sub_2497056A4(unint64_t a1, CGImage *a2, void *a3, uint64_t a4, void *a5, unint64_t a6, uint64_t a7)
{
  void *v7;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t i;
  _QWORD *v21;
  uint64_t j;
  char *v23;
  char *v24;
  char *v25;
  double v26;
  int64_t Width;
  int64_t Height;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  CGImage *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CGImage *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v61;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a6;
  v66 = (uint64_t)v14;
  v14[4] = a7;
  v15 = MEMORY[0x24BEE4AF8];
  v67 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    v30 = a5;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = sub_24972D0BC();
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = a5;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v64 = a7;
  v65 = a6;
  v63 = a5;
  if (v16)
  {
    if (v16 < 1)
    {
      __break(1u);
LABEL_39:
      v18 = sub_24970AA68((_QWORD *)(v19 > 1), a1, 1, v18);
      goto LABEL_26;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v16; ++i)
      {
        v21 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, a1) + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v21 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          sub_24972D020();
          sub_24972D044();
          sub_24972D050();
          sub_24972D02C();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (j = 0; j != v16; ++j)
      {
        v23 = *(char **)(a1 + 8 * j + 32);
        v24 = &v23[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v24 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          v25 = v23;
          sub_24972D020();
          sub_24972D044();
          sub_24972D050();
          sub_24972D02C();
        }
      }
    }
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_257879C00 != -1)
    swift_once();
  v26 = *(double *)&qword_25787A490;
  Width = CGImageGetWidth(a2);
  Height = CGImageGetHeight(a2);
  if ((v67 & 0x8000000000000000) != 0 || (v67 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v31 = sub_24972D0BC();
    swift_release();
    if (v31)
      goto LABEL_22;
  }
  else if (*(_QWORD *)(v67 + 16))
  {
LABEL_22:
    v29 = sub_2497069D4(v67, v26 / (double)Width, v26 / (double)Height);
    swift_release();
    sub_249710B10(v29);
    goto LABEL_27;
  }
  swift_release();
  v18 = sub_24970AA68(0, 1, 1, MEMORY[0x24BEE4AF8]);
  a6 = v18[2];
  v19 = v18[3];
  a1 = a6 + 1;
  if (a6 >= v19 >> 1)
    goto LABEL_39;
LABEL_26:
  v18[2] = a1;
  v32 = &v18[4 * a6];
  v32[4] = 0;
  v32[5] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *((_OWORD *)v32 + 3) = _Q0;
LABEL_27:
  v38 = a2;
  sub_24971FF04(v15);
  v39 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  type metadata accessor for VNImageOption(0);
  sub_2496CED84(&qword_257879DA0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972EA18);
  v40 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  v61 = objc_msgSend(v39, sel_initWithCGImage_options_, v38, v40);

  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = 0;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = 0;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v15;
  v44 = v38;
  v45 = a3;
  swift_retain();
  v46 = swift_bridgeObjectRetain();
  v47 = sub_249707054(v46, (uint64_t)v45, v42, v44, v43, v41, (uint64_t)sub_249709AA4, v66, a4);
  swift_bridgeObjectRelease_n();

  swift_release();
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    v48 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v49 = swift_beginAccess();
  *(_QWORD *)(v41 + 16) = v48;
  v50 = v63;
  if (!v48)
  {
    swift_beginAccess();
    v51 = MEMORY[0x24BCF7744](v65 + 16);
    if (v51)
    {
      v52 = (void *)v51;
      swift_beginAccess();
      v53 = swift_bridgeObjectRetain();
      _s15UIUnderstanding11UIUDetectorC26getMergedDetectionsWithOCR07elementE003ocrE027shouldOnlyUseOCRBoundingBox0j17IncludeAdditionalG0014removeDetecionf2NoG0SayAA8UIObjectCGAL_SayAA12OCRDetectionCGS3btF_0(v53, MEMORY[0x24BEE4AF8], 0, 1, 1);
      v55 = v54;

      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_QWORD *)(v64 + 16) = v55;
      v50 = v63;
      swift_bridgeObjectRelease();
    }
    v49 = sub_24972CEB8();
  }
  v56 = (void *)MEMORY[0x24BCF71E0](v49);
  sub_2497067E8(v61, v47);
  objc_autoreleasePoolPop(v56);
  if (v7)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_24972F6C0;
    v58 = v7;
    v59 = v7;
    sub_24972CFB4();
    sub_24972CC48();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A020);
    sub_24972D05C();
    *(_QWORD *)(v57 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v57 + 32) = 0;
    *(_QWORD *)(v57 + 40) = 0xE000000000000000;
    sub_24972D29C();
    swift_bridgeObjectRelease();

    sub_24972CEB8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

  }
  swift_release();
  return swift_release();
}

void sub_249705E48(unint64_t a1, CGImage *a2, void *a3, uint64_t (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  int64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t i;
  _QWORD *v16;
  uint64_t j;
  char *v18;
  char *v19;
  char *v20;
  double v21;
  int64_t Width;
  int64_t Height;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  CGImage *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CGImage *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  void *v48;
  unint64_t v51;

  v11 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_24972D0BC();
    if (v12)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12)
    goto LABEL_16;
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
LABEL_35:
    v13 = sub_24970AA68((_QWORD *)(v14 > 1), v6, 1, v13);
    goto LABEL_25;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v12; ++i)
    {
      v16 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, a1) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v12; ++j)
    {
      v18 = *(char **)(a1 + 8 * j + 32);
      v19 = &v18[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v19 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        v20 = v18;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
    }
  }
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x24BEE4AF8];
LABEL_17:
  if (qword_257879C00 != -1)
    swift_once();
  v21 = *(double *)&qword_25787A490;
  Width = CGImageGetWidth(a2);
  Height = CGImageGetHeight(a2);
  if ((v51 & 0x8000000000000000) != 0 || (v51 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v25 = sub_24972D0BC();
    swift_release();
    if (v25)
      goto LABEL_22;
  }
  else if (*(_QWORD *)(v51 + 16))
  {
LABEL_22:
    v24 = sub_2497069D4(v51, v21 / (double)Width, v21 / (double)Height);
    swift_release();
    sub_249710B10(v24);
    goto LABEL_26;
  }
  swift_release();
  v13 = sub_24970AA68(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v13[2];
  v14 = v13[3];
  v6 = v7 + 1;
  if (v7 >= v14 >> 1)
    goto LABEL_35;
LABEL_25:
  v13[2] = v6;
  v26 = &v13[4 * v7];
  v26[4] = 0;
  v26[5] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *((_OWORD *)v26 + 3) = _Q0;
LABEL_26:
  v32 = a2;
  sub_24971FF04(v11);
  v33 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  type metadata accessor for VNImageOption(0);
  sub_2496CED84(&qword_257879DA0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24972EA18);
  v34 = (void *)sub_24972CB34();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v33, sel_initWithCGImage_options_, v32, v34);

  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = 0;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v11;
  v38 = v32;
  v39 = a3;
  swift_retain();
  v40 = swift_bridgeObjectRetain();
  v41 = sub_249707054(v40, (uint64_t)v39, v36, v38, v37, v35, (uint64_t)a4, a5, a6);
  swift_bridgeObjectRelease_n();

  swift_release();
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v43 = swift_beginAccess();
  *(_QWORD *)(v35 + 16) = v42;
  if (!v42)
    v43 = a4((void *)MEMORY[0x24BEE4AF8], 0);
  v44 = (void *)MEMORY[0x24BCF71E0](v43);
  sub_2497067E8(v46, v41);
  objc_autoreleasePoolPop(v44);
  if (v48)
  {
    swift_bridgeObjectRelease();
    v45 = v48;
    a4(v48, 1);

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

  }
}

id sub_249706404(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, CGImage *a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t, _QWORD))
{
  uint64_t *v22;
  id result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v22 = (uint64_t *)(a7 + 16);
  result = (id)swift_beginAccess();
  v24 = *(_QWORD *)(a7 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *v22 = v26;
    result = objc_msgSend(a1, sel_results);
    if (result)
    {
      v27 = result;
      sub_2496DC224(0, &qword_25787A4C0);
      v28 = sub_24972CCD8();

      v29 = sub_249706604(v28);
      result = (id)swift_bridgeObjectRelease();
      if (v29)
      {
        v30 = (_QWORD *)(a11 + 16);
        swift_beginAccess();
        v31 = MEMORY[0x24BCF7744](a8 + 16);
        if (v31)
        {
          v32 = (void *)v31;
          v33 = sub_2497094FC(v29, a9, a2, a3, a4, a5);

          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_249710C54(v33);
          swift_endAccess();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        v34 = *v22;
        result = (id)swift_beginAccess();
        if (v34 == *v30)
        {
          swift_beginAccess();
          v35 = swift_bridgeObjectRetain();
          a12(v35, 0);
          return (id)swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_249706604(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_24972D038();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x24BCF6CE8](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_24972D0BC();
    swift_bridgeObjectRelease();
    sub_24972D038();
    swift_bridgeObjectRetain();
    v2 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id sub_2497067E8(void *a1, unint64_t a2)
{
  void *v3;
  unsigned int v4;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (a2 >> 62)
  {
    sub_2496DC224(0, &qword_25787A4B8);
    swift_bridgeObjectRetain();
    sub_24972D08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24972D200();
    sub_2496DC224(0, &qword_25787A4B8);
  }
  sub_2496DC224(0, &qword_25787A4B8);
  v3 = (void *)sub_24972CCCC();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v4 = objc_msgSend(a1, sel_performRequests_error_, v3, v7);

  if (v4)
    return v7[0];
  v6 = v7[0];
  sub_24972C8AC();

  return (id)swift_willThrow();
}

void sub_249706960(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t sub_2497069D4(unint64_t a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  double *v8;
  uint64_t v9;
  _QWORD *v10;
  void **v11;
  char *v12;
  double *v13;
  double v14;
  double v15;
  CGRect *v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char *v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  CGFloat MinX;
  double v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double *v42;
  char *v43;
  char *v44;
  void **v45;
  char *v46;
  double *v47;
  double v48;
  double v49;
  CGRect *v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  char *v55;
  char *v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  CGFloat v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  unint64_t v74;
  unint64_t v75;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_43:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_24972D0BC();
  v4 = result;
  if (!result)
    goto LABEL_43;
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = 0;
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v9 = MEMORY[0x24BCF6CE8](v6, a1);
        v10 = (_QWORD *)(v9 + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v10 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          v11 = (void **)(v9 + OBJC_IVAR___UIObjectCompat_boundingBox);
          swift_beginAccess();
          v12 = (char *)*v11;
          v13 = (double *)((char *)*v11 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
          swift_beginAccess();
          v15 = *v13;
          v14 = v13[1];
          v16 = (CGRect *)&v12[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          x = v16->origin.x;
          y = v16->origin.y;
          width = v16->size.width;
          height = v16->size.height;
          v21 = v12;
          v78.origin.x = x;
          v78.origin.y = y;
          v78.size.width = width;
          v78.size.height = height;
          v22 = CGRectGetMinX(v78) / v15;
          v23 = CGRectGetMinY(*v16) / v14;
          v24 = CGRectGetWidth(*v16) / v15;
          v25 = CGRectGetHeight(*v16);

          v26 = v25 / v14;
          v79.origin.x = v22;
          v79.origin.y = v23;
          v79.size.width = v24;
          v79.size.height = v26;
          MinX = CGRectGetMinX(v79);
          v80.origin.x = v22;
          v80.origin.y = v23;
          v80.size.width = v24;
          v80.size.height = v26;
          v28 = 1.0 - CGRectGetMaxY(v80);
          v81.origin.x = v22;
          v81.origin.y = v23;
          v81.size.width = v24;
          v81.size.height = v26;
          v29 = CGRectGetWidth(v81);
          v82.origin.x = v22;
          v82.origin.y = v23;
          v82.size.width = v24;
          v82.size.height = v26;
          v30 = CGRectGetHeight(v82);
          v83.origin.x = MinX;
          v83.origin.y = v28;
          v83.size.width = v29;
          v83.size.height = v30;
          v31 = CGRectGetMinX(v83) - a2;
          v32 = 0.0;
          if (v31 < 0.0)
            v33 = 0.0;
          else
            v33 = v31;
          v84.origin.x = MinX;
          v84.origin.y = v28;
          v84.size.width = v29;
          v84.size.height = v30;
          v34 = CGRectGetMinY(v84) - a3;
          if (v34 >= 0.0)
            v32 = v34;
          v35 = 1.0 - v33;
          v85.origin.x = MinX;
          v85.origin.y = v28;
          v85.size.width = v29;
          v85.size.height = v30;
          v36 = a2 + a2 + CGRectGetWidth(v85);
          if (v36 < 1.0 - v33)
            v35 = v36;
          v86.origin.x = MinX;
          v86.origin.y = v28;
          v86.size.width = v29;
          v86.size.height = v30;
          v37 = a3 + a3 + CGRectGetHeight(v86);
          if (v37 >= 1.0 - v32)
            v38 = 1.0 - v32;
          else
            v38 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_24970AA68(0, v7[2] + 1, 1, v7);
          v40 = v7[2];
          v39 = v7[3];
          if (v40 >= v39 >> 1)
            v7 = sub_24970AA68((_QWORD *)(v39 > 1), v40 + 1, 1, v7);
          v7[2] = v40 + 1;
          v8 = (double *)&v7[4 * v40];
          v8[4] = v33;
          v8[5] = v32;
          v8[6] = v35;
          v8[7] = v38;
        }
        ++v6;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
    }
    else
    {
      v41 = 0;
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v43 = *(char **)(a1 + 8 * v41 + 32);
        v44 = &v43[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v44 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          v45 = (void **)&v43[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v46 = (char *)*v45;
          v47 = (double *)((char *)*v45 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
          swift_beginAccess();
          v49 = *v47;
          v48 = v47[1];
          v50 = (CGRect *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v51 = v50->origin.x;
          v52 = v50->origin.y;
          v53 = v50->size.width;
          v54 = v50->size.height;
          v55 = v43;
          v56 = v46;
          v87.origin.x = v51;
          v87.origin.y = v52;
          v87.size.width = v53;
          v87.size.height = v54;
          v57 = CGRectGetMinX(v87) / v49;
          v58 = CGRectGetMinY(*v50) / v48;
          v59 = CGRectGetWidth(*v50) / v49;
          v60 = CGRectGetHeight(*v50);

          v61 = v60 / v48;
          v88.origin.x = v57;
          v88.origin.y = v58;
          v88.size.width = v59;
          v88.size.height = v61;
          v62 = CGRectGetMinX(v88);
          v89.origin.x = v57;
          v89.origin.y = v58;
          v89.size.width = v59;
          v89.size.height = v61;
          v63 = 1.0 - CGRectGetMaxY(v89);
          v90.origin.x = v57;
          v90.origin.y = v58;
          v90.size.width = v59;
          v90.size.height = v61;
          v64 = CGRectGetWidth(v90);
          v91.origin.x = v57;
          v91.origin.y = v58;
          v91.size.width = v59;
          v91.size.height = v61;
          v65 = CGRectGetHeight(v91);
          v92.origin.x = v62;
          v92.origin.y = v63;
          v92.size.width = v64;
          v92.size.height = v65;
          v66 = CGRectGetMinX(v92) - a2;
          v67 = 0.0;
          if (v66 < 0.0)
            v68 = 0.0;
          else
            v68 = v66;
          v93.origin.x = v62;
          v93.origin.y = v63;
          v93.size.width = v64;
          v93.size.height = v65;
          v69 = CGRectGetMinY(v93) - a3;
          if (v69 >= 0.0)
            v67 = v69;
          v70 = 1.0 - v68;
          v94.origin.x = v62;
          v94.origin.y = v63;
          v94.size.width = v64;
          v94.size.height = v65;
          v71 = a2 + a2 + CGRectGetWidth(v94);
          if (v71 < 1.0 - v68)
            v70 = v71;
          v95.origin.x = v62;
          v95.origin.y = v63;
          v95.size.width = v64;
          v95.size.height = v65;
          v72 = a3 + a3 + CGRectGetHeight(v95);
          if (v72 >= 1.0 - v67)
            v73 = 1.0 - v67;
          else
            v73 = v72;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_24970AA68(0, v7[2] + 1, 1, v7);
          v75 = v7[2];
          v74 = v7[3];
          if (v75 >= v74 >> 1)
            v7 = sub_24970AA68((_QWORD *)(v74 > 1), v75 + 1, 1, v7);
          v7[2] = v75 + 1;
          v42 = (double *)&v7[4 * v75];
          v42[4] = v68;
          v42[5] = v67;
          v42[6] = v70;
          v42[7] = v73;

        }
        ++v41;
      }
      while (v4 != v41);
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_249707054(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t result;
  double *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  double *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v28;
  id v30;
  _QWORD aBlock[6];
  uint64_t v32;

  v10 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_24972D038();
    v13 = (double *)(a1 + 56);
    v28 = a7;
    do
    {
      v14 = *(v13 - 3);
      v15 = *(v13 - 2);
      v16 = *(v13 - 1);
      v17 = *v13;
      v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v19 = (double *)swift_allocObject();
      *((_QWORD *)v19 + 2) = a3;
      *((_QWORD *)v19 + 3) = v18;
      v19[4] = v14;
      v19[5] = v15;
      v19[6] = v16;
      v19[7] = v17;
      *((_QWORD *)v19 + 8) = a4;
      *((_QWORD *)v19 + 9) = a5;
      *((_QWORD *)v19 + 10) = a6;
      *((_QWORD *)v19 + 11) = a7;
      *((_QWORD *)v19 + 12) = a8;
      v30 = objc_allocWithZone(MEMORY[0x24BDF9C80]);
      aBlock[4] = sub_2497094AC;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_249706960;
      aBlock[3] = &block_descriptor_0;
      v20 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      v21 = a4;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v22 = objc_msgSend(v30, sel_initWithCompletionHandler_, v20);
      _Block_release(v20);
      swift_release();
      objc_msgSend(v22, sel_setRecognitionLevel_, a9);
      v23 = (void *)sub_24972CCCC();
      objc_msgSend(v22, sel_setRecognitionLanguages_, v23);

      objc_msgSend(v22, sel_setUsesLanguageCorrection_, 1);
      objc_msgSend(v22, sel_setRegionOfInterest_, v14, v15, v16, v17);
      sub_24972D020();
      sub_24972D044();
      a7 = v28;
      sub_24972D050();
      sub_24972D02C();
      v13 += 4;
      --v10;
    }
    while (v10);
    return v32;
  }
  return result;
}

uint64_t sub_2497072E0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  char v7;
  float v8;
  uint64_t v9;
  void **v10;
  void *v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  id v23;
  char *v24;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  char v38;
  float v39;
  char *v40;
  char *v41;
  void **v42;
  void *v43;
  char *v44;
  uint64_t v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat *v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  char *v55;
  id v56;
  char *v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  double v62;
  double v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  CGFloat r2;
  CGFloat r2a;
  CGFloat r2_8;
  CGFloat r2_8a;
  CGFloat r2_16;
  CGFloat r2_16a;
  CGFloat r2_24;
  CGFloat r2_24a;
  CGFloat v78;
  CGFloat v79;
  float v80;
  float v81;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_24972D0BC();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_33:
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_33;
LABEL_3:
  if (v3 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = 0;
      v7 = 1;
      v8 = 0.0;
      while (1)
      {
        v80 = v8;
        v9 = MEMORY[0x24BCF6CE8](v6, a2);
        v10 = (void **)(v9 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v11 = *v10;
        v12 = *(char **)(a1 + 32);
        v13 = (uint64_t)*v10 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v14 = *(double *)v13;
        v15 = *(double *)(v13 + 8);
        v16 = *(double *)(v13 + 16);
        v17 = *(double *)(v13 + 24);
        v18 = (CGFloat *)&v12[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v19 = *v18;
        v20 = v18[1];
        v21 = v18[2];
        v22 = v18[3];
        v23 = v11;
        v24 = v12;
        r2_24 = v15;
        v78 = v14;
        v83.origin.x = v14;
        v83.origin.y = v15;
        r2_8 = v17;
        r2_16 = v16;
        v83.size.width = v16;
        v83.size.height = v17;
        r2 = v19;
        v95.origin.x = v19;
        v95.origin.y = v20;
        v95.size.width = v21;
        v95.size.height = v22;
        v84 = CGRectUnion(v83, v95);
        x = v84.origin.x;
        y = v84.origin.y;
        width = v84.size.width;
        height = v84.size.height;
        v29 = CGRectGetHeight(v84);
        v85.origin.x = x;
        v85.origin.y = y;
        v85.size.width = width;
        v85.size.height = height;
        v30 = v29 * CGRectGetWidth(v85);
        if (v30 == 0.0)
        {

          v8 = 0.0;
          if (!v5)
            goto LABEL_7;
        }
        else
        {
          v86.origin.y = r2_24;
          v86.origin.x = v78;
          v86.size.height = r2_8;
          v86.size.width = r2_16;
          v96.origin.x = r2;
          v96.origin.y = v20;
          v96.size.width = v21;
          v96.size.height = v22;
          v87 = CGRectIntersection(v86, v96);
          v31 = v87.origin.x;
          v32 = v87.origin.y;
          v33 = v87.size.width;
          v34 = v87.size.height;
          v35 = CGRectGetHeight(v87);
          v88.origin.x = v31;
          v88.origin.y = v32;
          v88.size.width = v33;
          v88.size.height = v34;
          v36 = CGRectGetWidth(v88);

          v8 = v35 * v36 / v30;
          if (!v5)
            goto LABEL_7;
        }
        if ((v7 & 1) != 0)
        {
          swift_unknownObjectRelease();
          v7 = 1;
          v8 = v80;
          goto LABEL_8;
        }
        if (v80 >= v8)
        {
          v8 = v80;
          swift_unknownObjectRelease();
          v7 = 0;
          goto LABEL_8;
        }

LABEL_7:
        v7 = 0;
        v5 = (void *)v9;
LABEL_8:
        if (v3 == ++v6)
          goto LABEL_31;
      }
    }
    v5 = 0;
    v37 = 0;
    v38 = 1;
    v39 = 0.0;
    while (1)
    {
      v81 = v39;
      v41 = *(char **)(a2 + 8 * v37 + 32);
      v42 = (void **)&v41[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v43 = *v42;
      v44 = *(char **)(a1 + 32);
      v45 = (uint64_t)*v42 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v46 = *(double *)v45;
      v47 = *(double *)(v45 + 8);
      v48 = *(double *)(v45 + 16);
      v49 = *(double *)(v45 + 24);
      v50 = (CGFloat *)&v44[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v51 = *v50;
      v52 = v50[1];
      v53 = v50[2];
      v54 = v50[3];
      v55 = v41;
      v56 = v43;
      v57 = v44;
      r2_24a = v47;
      v79 = v46;
      v89.origin.x = v46;
      v89.origin.y = v47;
      r2_8a = v49;
      r2_16a = v48;
      v89.size.width = v48;
      v89.size.height = v49;
      r2a = v51;
      v97.origin.x = v51;
      v97.origin.y = v52;
      v97.size.width = v53;
      v97.size.height = v54;
      v90 = CGRectUnion(v89, v97);
      v58 = v90.origin.x;
      v59 = v90.origin.y;
      v60 = v90.size.width;
      v61 = v90.size.height;
      v62 = CGRectGetHeight(v90);
      v91.origin.x = v58;
      v91.origin.y = v59;
      v91.size.width = v60;
      v91.size.height = v61;
      v63 = v62 * CGRectGetWidth(v91);
      if (v63 == 0.0)
      {

        v39 = 0.0;
        if (v5)
          goto LABEL_18;
      }
      else
      {
        v92.origin.y = r2_24a;
        v92.origin.x = v79;
        v92.size.height = r2_8a;
        v92.size.width = r2_16a;
        v98.origin.x = r2a;
        v98.origin.y = v52;
        v98.size.width = v53;
        v98.size.height = v54;
        v93 = CGRectIntersection(v92, v98);
        v64 = v93.origin.x;
        v65 = v93.origin.y;
        v66 = v93.size.width;
        v67 = v93.size.height;
        v68 = CGRectGetHeight(v93);
        v94.origin.x = v64;
        v94.origin.y = v65;
        v94.size.width = v66;
        v94.size.height = v67;
        v69 = CGRectGetWidth(v94);

        v39 = v68 * v69 / v63;
        if (v5)
        {
LABEL_18:
          if (v38 & 1 | (v81 >= v39))
            v40 = v55;
          else
            v40 = (char *)v5;
          if (v38 & 1 | (v81 >= v39))
            v39 = v81;
          else
            v5 = v55;

          goto LABEL_25;
        }
      }
      v38 = 0;
      v5 = v55;
LABEL_25:
      if (v3 == ++v37)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249707774(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void **v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  BOOL v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  _QWORD *v32;
  void (*v33)(_QWORD *);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD v56[4];
  uint64_t v57;

  v55 = a1;
  v53 = sub_24972C960();
  v50 = *(_QWORD *)(v53 - 8);
  v3 = MEMORY[0x24BDAC7A8](v53);
  v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v44 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - v7;
  v57 = MEMORY[0x24BEE4B00];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_24972D0BC();
    v9 = result;
    if (result)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_27;
LABEL_3:
  if (v9 >= 1)
  {
    v52 = v8;
    v11 = 0;
    v54 = a2 & 0xC000000000000001;
    v46 = xmmword_24972FA90;
    v48 = v9;
    v49 = a2;
    while (1)
    {
      if (v54)
      {
        v12 = MEMORY[0x24BCF6CE8](v11, a2);
      }
      else
      {
        v12 = *(_QWORD *)(a2 + 8 * v11 + 32);
        swift_retain();
      }
      v13 = sub_2497072E0(v12, v55);
      if (v13)
      {
        v14 = (void *)v13;
        v15 = (void **)(v13 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v16 = *v15;
        v17 = *(void **)(v12 + 32);
        v18 = v14;
        v19 = v16;
        v20 = v17;
        LOBYTE(v17) = sub_24970E640((uint64_t)v19, 0.7225);
        v21 = sub_24970E640((uint64_t)v20, 0.7225);
        if ((v17 & 1) != 0 || v21)
        {
          v22 = &v18[OBJC_IVAR___UIObjectCompat_id];
          swift_beginAccess();
          v23 = v50;
          v24 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
          v25 = (uint64_t)v52;
          v24(v52, v22, v53);
          if (*(_QWORD *)(v57 + 16))
          {
            sub_249720814(v25);
            v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
            if ((v27 & 1) != 0)
            {
              v28 = v25;
              v29 = v53;
              v30 = *(void (**)(char *, uint64_t))(v23 + 8);
              v26(v28, v53);
              v31 = v45;
              v24(v45, v22, v29);
              v33 = sub_24971B3EC(v56);
              if (*v32)
              {
                v34 = v32;
                v51 = v30;
                v35 = swift_retain();
                MEMORY[0x24BCF69D0](v35);
                v9 = v48;
                if (*(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_24972CCF0();
                sub_24972CD08();
                sub_24972CCE4();
                ((void (*)(_QWORD *, _QWORD))v33)(v56, 0);
                swift_release();

                v51(v31, v53);
                a2 = v49;
                goto LABEL_6;
              }
              ((void (*)(_QWORD *, _QWORD))v33)(v56, 0);
              swift_release();

              v30(v31, v53);
              goto LABEL_23;
            }
            v51 = (void (*)(char *, uint64_t))v18;
          }
          else
          {
            v51 = (void (*)(char *, uint64_t))v18;
            v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
          }
          v36 = v53;
          v37 = v26;
          v26((uint64_t)v52, v53);
          v38 = (uint64_t)v47;
          v24(v47, v22, v36);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
          v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = v46;
          *(_QWORD *)(v39 + 32) = v12;
          v56[0] = v39;
          sub_24972CCE4();
          v40 = v56[0];
          swift_retain();
          v41 = v57;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v56[0] = v41;
          sub_24971E5D0(v40, v38, isUniquelyReferenced_nonNull_native);
          v57 = v56[0];
          swift_bridgeObjectRelease();
          v37(v38, v36);
          swift_release();

          v43 = v51;
LABEL_23:
          v9 = v48;
          a2 = v49;
          goto LABEL_6;
        }
        swift_release();

      }
      else
      {
        swift_release();
      }
LABEL_6:
      if (v9 == ++v11)
      {
        swift_bridgeObjectRelease();
        return v57;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249707C14(unint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char *v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24972C960();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v25 - v10;
  v39 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_23:
    v11 = sub_24972D0BC();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      v12 = 0;
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
      v30 = a1 & 0xC000000000000001;
      v26 = a1 + 32;
      v27 = v11;
      v28 = a1;
      while (1)
      {
        if (v30)
        {
          v14 = (char *)MEMORY[0x24BCF6CE8](v12, a1);
          v15 = __OFADD__(v12, 1);
          v16 = v12 + 1;
          if (v15)
          {
LABEL_20:
            __break(1u);
            return v39;
          }
        }
        else
        {
          if (v12 >= *(_QWORD *)(v29 + 16))
          {
            __break(1u);
            goto LABEL_23;
          }
          v14 = (char *)*(id *)(v26 + 8 * v12);
          v15 = __OFADD__(v12, 1);
          v16 = v12 + 1;
          if (v15)
            goto LABEL_20;
        }
        v34 = v16;
        v17 = *v31;
        v33 = v14;
        v18 = &v14[OBJC_IVAR___UIObjectCompat_id];
        swift_beginAccess();
        v37 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v37(v38, v18, v6);
        v19 = *(_QWORD *)(v17 + 16);
        v32 = v17;
        if (v19)
        {
          v20 = (char *)(v17
                       + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
          swift_bridgeObjectRetain();
          v36 = *(_QWORD *)(v7 + 72);
          while (1)
          {
            v37(v5, v20, v6);
            v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
            v13(v5, 0, 1, v6);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
              break;
            v21 = v35;
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v5, v6);
            sub_2496CED84(&qword_25787A4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v22 = sub_24972CB88();
            v23 = *(void (**)(char *, uint64_t))(v7 + 8);
            v23(v21, v6);
            if ((v22 & 1) != 0)
            {
              v23(v38, v6);

              swift_bridgeObjectRelease();
              goto LABEL_7;
            }
            v20 += v36;
            if (!--v19)
              goto LABEL_5;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
LABEL_5:
          v13(v5, 1, 1, v6);
        }
        (*(void (**)(char *, uint64_t))(v7 + 8))(v38, v6);
        swift_bridgeObjectRelease();
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
LABEL_7:
        v12 = v34;
        a1 = v28;
        if (v34 == v27)
          return v39;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

void _s15UIUnderstanding11UIUDetectorC26getMergedDetectionsWithOCR07elementE003ocrE027shouldOnlyUseOCRBoundingBox0j17IncludeAdditionalG0014removeDetecionf2NoG0SayAA8UIObjectCGAL_SayAA12OCRDetectionCGS3btF_0(unint64_t a1, unint64_t a2, int a3, int a4, int a5)
{
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t j;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  objc_class *v49;
  char *v50;
  char *v51;
  char *v52;
  id v53;
  id v54;
  id v55;
  void **v56;
  void *v57;
  char *v58;
  BOOL v59;
  int64_t v60;
  char *v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id *v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  void *v92;
  CGFloat *v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  CGFloat v97;
  double MinX;
  char *v99;
  void *v100;
  CGFloat *v101;
  CGFloat v102;
  CGFloat v103;
  CGFloat v104;
  CGFloat v105;
  double MaxX;
  char *v107;
  void *v108;
  CGFloat *v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  CGFloat v113;
  double MinY;
  char *v115;
  void *v116;
  CGFloat *v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  double MaxY;
  double v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  void *v128;
  CGRect *v129;
  double v130;
  double v131;
  double v132;
  double v133;
  void *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  objc_class *v138;
  char *v139;
  double *v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  _BYTE *v148;
  char *v149;
  _BYTE *v150;
  unint64_t v151;
  uint64_t v152;
  void (*v153)(unint64_t, unint64_t, uint64_t);
  _BYTE *v154;
  unint64_t v155;
  void (*v156)(unint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v157;
  char v158;
  float v159;
  double v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  id v164;
  id v165;
  id v166;
  _BYTE v167[4];
  int v168;
  int v169;
  int v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  _BYTE *v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  _BYTE *v179;
  unint64_t v180;
  int64_t v181;
  _BYTE *v182;
  char *v183;
  unint64_t v184;
  unint64_t v185;
  char *v186;
  unint64_t v187;
  objc_super v188;
  objc_super v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;

  v168 = a4;
  v169 = a5;
  v170 = a3;
  v175 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (unint64_t)&v167[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_24972C960();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v182 = &v167[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v174 = &v167[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v179 = &v167[-v17];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v167[-v19];
  v194 = a1;
  v192 = MEMORY[0x24BEE4AF8];
  v184 = v9;
  v177 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v9 = v184;
    v21 = sub_24972D0BC();
    v187 = v11;
    if (v21)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  v187 = v11;
  if (!v21)
    goto LABEL_16;
LABEL_3:
  v22 = v177;
  if (v21 < 1)
    goto LABEL_186;
  if ((v177 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v21; ++i)
    {
      v23 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, v22) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v23 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        sub_24972D020();
        sub_24972D044();
        v11 = v187;
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      v22 = v177;
    }
  }
  else
  {
    for (j = 0; j != v21; ++j)
    {
      i = *(_QWORD *)(v22 + 8 * j + 32);
      v25 = (_QWORD *)(i + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v25 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
      {
        i = (uint64_t)(id)i;
        sub_24972D020();
        sub_24972D044();
        v11 = v187;
        sub_24972D050();
        sub_24972D02C();
      }
      v22 = v177;
    }
  }
  swift_bridgeObjectRelease();
  v9 = v184;
LABEL_17:
  v26 = MEMORY[0x24BEE4AF8];
  v193 = MEMORY[0x24BEE4AF8];
  v176 = v192;
  v27 = sub_249707774(v192, v175);
  v192 = v26;
  v28 = *(_QWORD *)(v27 + 64);
  v178 = v27 + 64;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v181 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v32 = 0;
  v186 = (char *)v10;
  v180 = v27;
  while (1)
  {
    if (v31)
    {
      v33 = __clz(__rbit64(v31));
      v34 = (v31 - 1) & v31;
      v35 = v33 | (v32 << 6);
      goto LABEL_41;
    }
    v36 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_146;
    if (v36 >= v181)
      goto LABEL_54;
    v37 = *(_QWORD *)(v178 + 8 * v36);
    ++v32;
    if (!v37)
    {
      v32 = v36 + 1;
      if (v36 + 1 >= v181)
        goto LABEL_54;
      v37 = *(_QWORD *)(v178 + 8 * v32);
      if (!v37)
      {
        v32 = v36 + 2;
        if (v36 + 2 >= v181)
          goto LABEL_54;
        v37 = *(_QWORD *)(v178 + 8 * v32);
        if (!v37)
        {
          v32 = v36 + 3;
          if (v36 + 3 >= v181)
            goto LABEL_54;
          v37 = *(_QWORD *)(v178 + 8 * v32);
          if (!v37)
          {
            v32 = v36 + 4;
            if (v36 + 4 >= v181)
              goto LABEL_54;
            v37 = *(_QWORD *)(v178 + 8 * v32);
            if (!v37)
              break;
          }
        }
      }
    }
LABEL_40:
    v34 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v32 << 6);
LABEL_41:
    v39 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v35);
    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      i = sub_24972D0BC();
      v185 = v34;
      if (!i)
      {
LABEL_53:
        v41 = MEMORY[0x24BEE4AF8];
        goto LABEL_20;
      }
    }
    else
    {
      i = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v185 = v34;
      if (!i)
        goto LABEL_53;
    }
    v190 = MEMORY[0x24BEE4AF8];
    v9 = (unint64_t)&v190;
    sub_2496D5AB4(0, i & ~(i >> 63), 0);
    if (i < 0)
    {
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
    v183 = (char *)v32;
    v40 = 0;
    v41 = v190;
    do
    {
      if ((v39 & 0xC000000000000001) != 0)
      {
        v42 = MEMORY[0x24BCF6CE8](v40, v39);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v20, v42 + OBJC_IVAR____TtC15UIUnderstanding12OCRDetection_id, v10);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v20, *(_QWORD *)(v39 + 8 * v40 + 32) + OBJC_IVAR____TtC15UIUnderstanding12OCRDetection_id, v10);
      }
      v190 = v41;
      v44 = *(_QWORD *)(v41 + 16);
      v43 = *(_QWORD *)(v41 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_2496D5AB4(v43 > 1, v44 + 1, 1);
        v41 = v190;
      }
      ++v40;
      *(_QWORD *)(v41 + 16) = v44 + 1;
      v11 = v187;
      v45 = v41
          + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
          + *(_QWORD *)(v187 + 72) * v44;
      v10 = (uint64_t)v186;
      (*(void (**)(unint64_t, _BYTE *, char *))(v187 + 32))(v45, v20, v186);
    }
    while (i != v40);
    v27 = v180;
    v32 = (int64_t)v183;
LABEL_20:
    sub_249710E2C(v41);
    swift_bridgeObjectRelease();
    v9 = v184;
    v31 = v185;
  }
  v38 = v36 + 5;
  if (v38 >= v181)
    goto LABEL_54;
  v37 = *(_QWORD *)(v178 + 8 * v38);
  if (v37)
  {
    v32 = v38;
    goto LABEL_40;
  }
  while (1)
  {
    v32 = v38 + 1;
    if (__OFADD__(v38, 1))
      goto LABEL_185;
    if (v32 >= v181)
      break;
    v37 = *(_QWORD *)(v178 + 8 * v32);
    ++v38;
    if (v37)
      goto LABEL_40;
  }
LABEL_54:
  swift_release();
  swift_bridgeObjectRelease();
  v173 = v192;
  v20 = v174;
  v46 = v176;
  if ((v176 & 0x8000000000000000) == 0 && (v176 & 0x4000000000000000) == 0)
  {
    v47 = *(_QWORD *)(v176 + 16);
    if (v47)
      goto LABEL_57;
LABEL_153:
    swift_bridgeObjectRelease();
    swift_release();
    if ((v169 & 1) != 0)
    {
      v143 = swift_bridgeObjectRetain();
      v144 = sub_249707C14(v143, (uint64_t *)&v193);
      v176 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v194 = v144;
      v9 = v184;
    }
    else
    {
      v176 = 0;
    }
    i = v173;
    if ((v168 & 1) != 0)
    {
      if (v175 >> 62)
        goto LABEL_187;
      v145 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v146 = v175;
      while (v145)
      {
        v147 = 0;
        v148 = *(_BYTE **)(i + 16);
        v180 = v146 & 0xC000000000000001;
        v181 = v145;
        v177 = v146 + 32;
        v178 = v146 & 0xFFFFFFFFFFFFFF8;
        v179 = v148;
        while (v180)
        {
          v149 = (char *)MEMORY[0x24BCF6CE8](v147);
          v59 = __OFADD__(v147++, 1);
          if (v59)
            goto LABEL_183;
LABEL_168:
          if (v148)
          {
            v183 = v149;
            v185 = v147;
            v186 = &v149[OBJC_IVAR____TtC15UIUnderstanding12OCRDetection_id];
            v150 = v148;
            v151 = i + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
            swift_bridgeObjectRetain();
            v152 = *(_QWORD *)(v11 + 72);
            v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
            v154 = v150;
            while (1)
            {
              v153(v9, v151, v10);
              v155 = v187;
              v156 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v187 + 56);
              v156(v9, 0, 1, v10);
              if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v155 + 48))(v9, 1, v10) == 1)
              {
                i = v173;
                v145 = v181;
                v147 = v185;
                v148 = v179;
                v149 = v183;
                goto LABEL_177;
              }
              v157 = v182;
              (*(void (**)(_BYTE *, unint64_t, uint64_t))(v155 + 32))(v182, v9, v10);
              sub_2496CED84(&qword_25787A4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v158 = sub_24972CB88();
              (*(void (**)(_BYTE *, uint64_t))(v155 + 8))(v157, v10);
              if ((v158 & 1) != 0)
                break;
              v151 += v152;
              --v154;
              v9 = v184;
              if (!v154)
              {
                i = v173;
                v145 = v181;
                v147 = v185;
                v148 = v179;
                v149 = v183;
                goto LABEL_175;
              }
            }
            swift_release();
            i = v173;
            swift_bridgeObjectRelease();
            v9 = v184;
            v147 = v185;
            v11 = v187;
            v145 = v181;
            v148 = v179;
          }
          else
          {
            swift_bridgeObjectRetain();
            v156 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_175:
            v156(v9, 1, 1, v10);
LABEL_177:
            swift_bridgeObjectRelease();
            v159 = *((float *)v149 + 10);
            if (v159 <= 0.31)
            {
              swift_release();
              v11 = v187;
            }
            else
            {
              v160 = v159;
              v161 = *((_QWORD *)v149 + 2);
              v162 = *((_QWORD *)v149 + 3);
              v163 = (void *)*((_QWORD *)v149 + 4);
              v164 = objc_allocWithZone((Class)type metadata accessor for UIObject());
              swift_bridgeObjectRetain();
              v165 = v163;
              v166 = UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(10, v161, v162, v165, v160, MEMORY[0x24BEE4AF8], 0, 0);
              MEMORY[0x24BCF69D0]();
              if (*(_QWORD *)((v194 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v194 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_24972CCF0();
              sub_24972CD08();
              sub_24972CCE4();
              swift_release();

              v9 = v184;
              v11 = v187;
              v145 = v181;
            }
          }
          if (v147 == v145)
            goto LABEL_188;
        }
        if (v147 >= *(_QWORD *)(v178 + 16))
          goto LABEL_184;
        v149 = *(char **)(v177 + 8 * v147);
        swift_retain();
        v59 = __OFADD__(v147++, 1);
        if (!v59)
          goto LABEL_168;
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        swift_bridgeObjectRetain();
        v9 = v184;
        v145 = sub_24972D0BC();
        v146 = v175;
      }
LABEL_188:
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_152:
  swift_bridgeObjectRetain();
  v47 = sub_24972D0BC();
  swift_release();
  v46 = v176;
  if (!v47)
    goto LABEL_153;
LABEL_57:
  v48 = 0;
  v178 = v46 & 0xC000000000000001;
  v171 = v47;
  v172 = v46 + 32;
  while (1)
  {
    if (v178)
    {
      v58 = (char *)MEMORY[0x24BCF6CE8](v48, v46);
      v9 = (unint64_t)v179;
      v59 = __OFADD__(v48, 1);
      v60 = v48 + 1;
      if (v59)
        goto LABEL_147;
    }
    else
    {
      v9 = (unint64_t)v179;
      if (v48 >= *(_QWORD *)(v46 + 16))
        goto LABEL_148;
      v58 = (char *)*(id *)(v172 + 8 * v48);
      v59 = __OFADD__(v48, 1);
      v60 = v48 + 1;
      if (v59)
        goto LABEL_147;
    }
    v181 = v60;
    v183 = v58;
    v61 = &v58[OBJC_IVAR___UIObjectCompat_id];
    swift_beginAccess();
    v11 = *(_QWORD *)(v11 + 16);
    ((void (*)(unint64_t, char *, uint64_t))v11)(v9, v61, v10);
    if (!*(_QWORD *)(v27 + 16) || (v62 = sub_249720814(v9), v9 = (unint64_t)v179, (v63 & 1) == 0))
    {
      (*(void (**)(unint64_t, uint64_t))(v187 + 8))(v9, v10);
LABEL_83:
      ((void (*)(_BYTE *, char *, uint64_t))v11)(v20, v61, v10);
      v76 = v193;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v76 = sub_24970AB74(0, *(_QWORD *)(v76 + 16) + 1, 1, v76);
      v11 = v187;
      v78 = *(_QWORD *)(v76 + 16);
      v77 = *(_QWORD *)(v76 + 24);
      if (v78 >= v77 >> 1)
        v76 = sub_24970AB74(v77 > 1, v78 + 1, 1, v76);
      *(_QWORD *)(v76 + 16) = v78 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v11 + 32))(v76+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v78, v20, v10);

      v193 = v76;
      goto LABEL_60;
    }
    v64 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v62);
    swift_bridgeObjectRetain();
    (*(void (**)(unint64_t, uint64_t))(v187 + 8))(v9, v10);
    if ((unint64_t)v64 >> 62)
    {
      if (v64 < 0)
        v9 = v64;
      else
        v9 = v64 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v65 = sub_24972D0BC();
      swift_bridgeObjectRelease();
      if (v65 <= 0)
      {
LABEL_140:
        swift_bridgeObjectRelease();
        v47 = v171;
        goto LABEL_83;
      }
      swift_bridgeObjectRetain();
      v142 = sub_24972D0BC();
      if (!v142)
      {
        swift_bridgeObjectRelease();
        v185 = v64 & 0xC000000000000001;
        v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
        goto LABEL_88;
      }
      v27 = v142;
      if (v142 < 1)
        goto LABEL_151;
    }
    else
    {
      v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v65)
        goto LABEL_140;
      swift_bridgeObjectRetain();
      v27 = v65;
    }
    v66 = 0;
    v67 = v64;
    v185 = v64 & 0xC000000000000001;
    v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v69 = v65;
    do
    {
      if (v185)
      {
        v70 = MEMORY[0x24BCF6CE8](v66, v67);
      }
      else
      {
        v70 = *(_QWORD *)(v67 + 8 * v66 + 32);
        swift_retain();
      }
      v71 = *(_QWORD *)(v70 + 16);
      v72 = *(_QWORD *)(v70 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v68 = sub_24970AD7C(0, v68[2] + 1, 1, v68);
      v74 = v68[2];
      v73 = v68[3];
      if (v74 >= v73 >> 1)
        v68 = sub_24970AD7C((_QWORD *)(v73 > 1), v74 + 1, 1, v68);
      ++v66;
      v68[2] = v74 + 1;
      v75 = &v68[2 * v74];
      v75[4] = v71;
      v75[5] = v72;
      v10 = (uint64_t)v186;
    }
    while (v27 != v66);
    v65 = v69;
    v64 = v67;
    swift_bridgeObjectRelease();
    v20 = v174;
LABEL_88:
    v191 = (unint64_t)v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A108);
    sub_2497093BC();
    v79 = sub_24972CB64();
    v81 = v80;
    swift_bridgeObjectRelease();
    v82 = &v183[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v83 = (uint64_t *)(*(_QWORD *)v82 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
    swift_beginAccess();
    *v83 = v79;
    v83[1] = v81;
    swift_bridgeObjectRelease();
    v191 = MEMORY[0x24BEE4AF8];
    sub_24972D038();
    v84 = 0;
    do
    {
      if (v185)
      {
        v85 = MEMORY[0x24BCF6CE8](v84, v64);
      }
      else
      {
        v85 = *(_QWORD *)(v64 + 8 * v84 + 32);
        swift_retain();
      }
      ++v84;
      v86 = *(id *)(v85 + 32);
      swift_release();
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
    }
    while (v65 != v84);
    v9 = v191;
    swift_bridgeObjectRelease();
    v191 = v9;
    v11 = v187;
    v27 = v180;
    v47 = v171;
    if ((v170 & 1) == 0)
    {
      v87 = (id *)&v183[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v88 = *v87;
      MEMORY[0x24BCF69D0]();
      if (*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      sub_24972CD08();
      sub_24972CCE4();
      v9 = v191;
    }
    if (v9 >> 62)
      break;
    v89 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v89)
      goto LABEL_99;
LABEL_58:
    v49 = (objc_class *)type metadata accessor for BoundingBox();
    v50 = (char *)objc_allocWithZone(v49);
    v51 = &v50[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *(_OWORD *)v51 = 0u;
    *((_OWORD *)v51 + 1) = 0u;
    v52 = &v50[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v52 = 0;
    *((_QWORD *)v52 + 1) = 0;
    v188.receiver = v50;
    v188.super_class = v49;
    v53 = objc_msgSendSuper2(&v188, sel_init);
LABEL_59:
    v54 = v53;
    swift_bridgeObjectRelease();
    v55 = v183;
    v56 = (void **)&v183[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v57 = *v56;
    *v56 = v54;

LABEL_60:
    v48 = v181;
    v9 = v184;
    v46 = v176;
    if (v181 == v47)
      goto LABEL_153;
  }
  swift_bridgeObjectRetain();
  v89 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (!v89)
    goto LABEL_58;
LABEL_99:
  v90 = v9 & 0xC000000000000001;
  if ((v9 & 0xC000000000000001) != 0)
  {
    v91 = (char *)MEMORY[0x24BCF6CE8](0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_149;
    v91 = (char *)*(id *)(v9 + 32);
  }
  v92 = v91;
  v93 = (CGFloat *)&v91[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v94 = *v93;
  v95 = v93[1];
  v96 = v93[2];
  v97 = v93[3];

  v195.origin.x = v94;
  v195.origin.y = v95;
  v195.size.width = v96;
  v195.size.height = v97;
  MinX = CGRectGetMinX(v195);
  if (v90)
    v99 = (char *)MEMORY[0x24BCF6CE8](0, v9);
  else
    v99 = (char *)*(id *)(v9 + 32);
  v100 = v99;
  v101 = (CGFloat *)&v99[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v102 = *v101;
  v103 = v101[1];
  v104 = v101[2];
  v105 = v101[3];

  v196.origin.x = v102;
  v196.origin.y = v103;
  v196.size.width = v104;
  v196.size.height = v105;
  MaxX = CGRectGetMaxX(v196);
  if (v90)
    v107 = (char *)MEMORY[0x24BCF6CE8](0, v9);
  else
    v107 = (char *)*(id *)(v9 + 32);
  v108 = v107;
  v109 = (CGFloat *)&v107[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v110 = *v109;
  v111 = v109[1];
  v112 = v109[2];
  v113 = v109[3];

  v197.origin.x = v110;
  v197.origin.y = v111;
  v197.size.width = v112;
  v197.size.height = v113;
  MinY = CGRectGetMinY(v197);
  if (v90)
    v115 = (char *)MEMORY[0x24BCF6CE8](0, v9);
  else
    v115 = (char *)*(id *)(v9 + 32);
  v116 = v115;
  v117 = (CGFloat *)&v115[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v118 = *v117;
  v119 = v117[1];
  v120 = v117[2];
  v121 = v117[3];

  v198.origin.x = v118;
  v198.origin.y = v119;
  v198.size.width = v120;
  v198.size.height = v121;
  MaxY = CGRectGetMaxY(v198);
  v11 = v89 - 1;
  if (v89 < 1)
    goto LABEL_150;
  v123 = MaxY;
  if (v89 == 1)
    goto LABEL_113;
  if (v90 || (v125 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10), v125 >= 2) && v11 < v125)
  {
    v126 = 0;
    do
    {
      if (v90)
        v127 = (char *)MEMORY[0x24BCF6CE8](v126 + 1, v9);
      else
        v127 = (char *)*(id *)(v9 + 8 * v126 + 40);
      v128 = v127;
      v129 = (CGRect *)&v127[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v130 = CGRectGetMinX(*v129);
      if (v130 < MinX)
        MinX = v130;
      v131 = CGRectGetMaxX(*v129);
      if (MaxX <= v131)
        MaxX = v131;
      v132 = CGRectGetMinY(*v129);
      if (v132 < MinY)
        MinY = v132;
      v133 = CGRectGetMaxY(*v129);

      if (v123 <= v133)
        v123 = v133;
      ++v126;
    }
    while (v11 != v126);
LABEL_113:
    if (v90)
      v124 = (char *)MEMORY[0x24BCF6CE8](0, v9);
    else
      v124 = (char *)*(id *)(v9 + 32);
    v134 = v124;
    v11 = v187;
    v20 = v174;
    v135 = &v124[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    swift_beginAccess();
    v136 = *(_QWORD *)v135;
    v137 = *((_QWORD *)v135 + 1);

    v138 = (objc_class *)type metadata accessor for BoundingBox();
    v139 = (char *)objc_allocWithZone(v138);
    v140 = (double *)&v139[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *v140 = MinX;
    v140[1] = MinY;
    v140[2] = MaxX - MinX;
    v140[3] = v123 - MinY;
    v141 = &v139[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v141 = v136;
    *((_QWORD *)v141 + 1) = v137;
    v189.receiver = v139;
    v189.super_class = v138;
    v53 = objc_msgSendSuper2(&v189, sel_init);
    goto LABEL_59;
  }
  __break(1u);
}

uint64_t sub_2497092D0()
{
  return type metadata accessor for OCRDetection();
}

uint64_t type metadata accessor for OCRDetection()
{
  uint64_t result;

  result = qword_25787A498;
  if (!qword_25787A498)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249709314()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24972C960();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OCRDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OCRDetection.__allocating_init(text:box:heat:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

unint64_t sub_2497093BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A110;
  if (!qword_25787A110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A108);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25787A110);
  }
  return result;
}

uint64_t sub_249709408()
{
  return swift_deallocObject();
}

uint64_t sub_249709418()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24970943C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_249709460()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_2497094AC(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_249706404(a1, *(CGFloat *)(v2 + 32), *(CGFloat *)(v2 + 40), *(CGFloat *)(v2 + 48), *(CGFloat *)(v2 + 56), a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(CGImage **)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(void (**)(uint64_t, _QWORD))(v2 + 88));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2497094FC(unint64_t a1, CGImage *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat Width)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  uint64_t v30;
  size_t v31;
  CGFloat y;
  CGFloat v33;
  CGFloat height;
  double v35;
  double MinY;
  double v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  double v41;
  objc_class *v42;
  char *v43;
  double *v44;
  double *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  unint64_t v59;
  double MaxY;
  double v61;
  CGFloat x;
  double MinX;
  double v64;
  double v65;
  objc_super v67;
  uint64_t v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v10 = a1;
  v68 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_35;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_3:
  if (v11 >= 1)
  {
    v13 = 0;
    v59 = v10 & 0xC000000000000001;
    v65 = Width;
    v57 = a3;
    v58 = a5;
    v56 = v10;
    while (1)
    {
      if (v59)
        v14 = (id)MEMORY[0x24BCF6CE8](v13, v10);
      else
        v14 = *(id *)(v10 + 8 * v13 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_topCandidates_, 1, v56, *(_QWORD *)&v57, *(_QWORD *)&v58);
      sub_2496DC224(0, &qword_25787A4C8);
      v17 = sub_24972CCD8();

      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v55 = sub_24972D0BC();
        swift_bridgeObjectRelease();
        if (!v55)
        {
LABEL_5:

          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      else if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      if ((v17 & 0xC000000000000001) != 0)
      {
        v18 = (id)MEMORY[0x24BCF6CE8](0, v17);
      }
      else
      {
        if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          swift_bridgeObjectRetain();
          result = sub_24972D0BC();
          v11 = result;
          if (!result)
            goto LABEL_36;
          goto LABEL_3;
        }
        v18 = *(id *)(v17 + 32);
      }
      v19 = v18;
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_boundingBox);
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26;
      v69.origin.x = a3;
      v69.origin.y = a4;
      v69.size.width = a5;
      v69.size.height = Width;
      Width = CGRectGetWidth(v69);
      v28 = Width * (double)(uint64_t)CGImageGetWidth(a2);
      if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
        goto LABEL_29;
      if (v28 <= -9.22337204e18)
        goto LABEL_30;
      if (v28 >= 9.22337204e18)
        goto LABEL_31;
      v70.origin.x = a3;
      v70.size.height = v65;
      v70.origin.y = a4;
      v70.size.width = a5;
      Width = CGRectGetHeight(v70);
      v29 = Width * (double)(uint64_t)CGImageGetHeight(a2);
      if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
        goto LABEL_32;
      if (v29 <= -9.22337204e18)
        goto LABEL_33;
      if (v29 >= 9.22337204e18)
        goto LABEL_34;
      v30 = v11;
      v31 = (uint64_t)v29;
      v71.origin.x = v21;
      v71.origin.y = v23;
      v71.size.width = v25;
      v71.size.height = v27;
      v72 = VNImageRectForNormalizedRect(v71, (uint64_t)v28, v31);
      x = v72.origin.x;
      y = v72.origin.y;
      v33 = v72.size.width;
      height = v72.size.height;
      MinX = CGRectGetMinX(v72);
      v73.origin.x = a3;
      v73.origin.y = a4;
      v73.size.width = a5;
      v73.size.height = v65;
      v35 = CGRectGetMinX(v73);
      v64 = MinX + v35 * (double)(uint64_t)CGImageGetWidth(a2);
      v61 = (double)(uint64_t)CGImageGetHeight(a2);
      v74.origin.x = x;
      v74.origin.y = y;
      v74.size.width = v33;
      v74.size.height = height;
      MaxY = CGRectGetMaxY(v74);
      v75.origin.x = a3;
      v75.origin.y = a4;
      v75.size.width = a5;
      v75.size.height = v65;
      MinY = CGRectGetMinY(v75);
      v37 = v61 - (MaxY + MinY * (double)(uint64_t)CGImageGetHeight(a2));
      v76.origin.x = x;
      v76.origin.y = y;
      v76.size.width = v33;
      v76.size.height = height;
      v38 = CGRectGetWidth(v76);
      v77.origin.x = x;
      v77.origin.y = y;
      v77.size.width = v33;
      v77.size.height = height;
      v39 = CGRectGetHeight(v77);
      v40 = (double)(uint64_t)CGImageGetWidth(a2);
      v41 = (double)(uint64_t)CGImageGetHeight(a2);
      v42 = (objc_class *)type metadata accessor for BoundingBox();
      v43 = (char *)objc_allocWithZone(v42);
      v44 = (double *)&v43[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      *v44 = v64;
      v44[1] = v37;
      v44[2] = v38;
      v44[3] = v39;
      v45 = (double *)&v43[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      *v45 = v40;
      v45[1] = v41;
      v67.receiver = v43;
      v67.super_class = v42;
      v46 = objc_msgSendSuper2(&v67, sel_init);
      v47 = objc_msgSend(v19, sel_string);
      v48 = sub_24972CBB8();
      v50 = v49;

      v51 = v46;
      objc_msgSend(v19, sel_confidence);
      LODWORD(v38) = v52;
      type metadata accessor for OCRDetection();
      v53 = swift_allocObject();
      sub_24972C954();
      *(_QWORD *)(v53 + 16) = v48;
      *(_QWORD *)(v53 + 24) = v50;
      *(_QWORD *)(v53 + 32) = v51;
      *(_DWORD *)(v53 + 40) = LODWORD(v38);
      v54 = swift_retain();
      MEMORY[0x24BCF69D0](v54);
      if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      sub_24972CD08();
      sub_24972CCE4();

      swift_release();
      Width = v65;
      a3 = v57;
      a5 = v58;
      v11 = v30;
      v10 = v56;
LABEL_6:
      if (v11 == ++v13)
      {
        swift_bridgeObjectRelease();
        return v68;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249709A70()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_249709AA4(void *a1, char a2)
{
  uint64_t *v2;

  return sub_24972B5F4(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

void sub_249709AB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  double v52;
  double v53;
  double v56;
  float v57;
  double v58;
  float v59;
  uint64_t v60;
  double v61;
  double *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v70;

  v5 = *(void **)(v3 + 72);
  v6 = *(void **)(v3 + 80);
  v7 = *(void **)(v3 + 88);
  v9 = *(void **)(v3 + 96);
  v8 = *(void **)(v3 + 104);
  v10 = *(void **)(v3 + 112);
  v11 = *(void **)(v3 + 120);
  v12 = *(void **)(v3 + 128);
  v64 = *(void **)(v3 + 136);
  v66 = *(id *)(v3 + 64);
  v65 = v5;
  v70 = v6;
  v68 = v7;
  v67 = v9;
  v13 = v8;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = v64;
  if ((uint64_t)objc_msgSend(v15, sel_integerValue) <= 750
    && (uint64_t)objc_msgSend(v14, sel_integerValue) < 751
    && (uint64_t)objc_msgSend(v70, sel_integerValue) <= 750)
  {
    v60 = (uint64_t)objc_msgSend(v65, sel_integerValue);

    if (v60 <= 750)
    {

      v18 = a1;
      sub_249709DFC(a1, a2);
      v56 = v61;
LABEL_77:
      objc_msgSend(*(id *)(v3 + 112), sel_floatValue, a3);
      v58 = v57;
      objc_msgSend(*(id *)(v3 + 120), sel_floatValue);
      *v63 = (double)v18;
      v63[1] = (double)a2;
      v63[2] = v58;
      v63[3] = v59;
      v63[4] = v56;
      return;
    }
  }
  else
  {

  }
  v18 = a1;
  v19 = a1 - 1;
  if (!__OFSUB__(a1, 1))
  {
    if (__OFSUB__(a2, 1)
      || (sub_249709DFC(a1 - 1, a2 - 1), v21 = v20, sub_249709DFC(v19, a2), v23 = a2 + 1, __OFADD__(a2, 1)))
    {
      __break(1u);
    }
    else
    {
      v24 = v22;
      sub_249709DFC(v19, a2 + 1);
      v26 = v25;
      sub_249709DFC(a1, a2 - 1);
      v28 = v27;
      sub_249709DFC(a1, a2);
      v30 = v29;
      sub_249709DFC(a1, a2 + 1);
      v32 = a1 + 1;
      if (!__OFADD__(a1, 1))
      {
        v33 = 0.0;
        if (v21 <= 0.0)
        {
          v34 = 0;
        }
        else
        {
          v33 = v21;
          v34 = a2 - 1;
        }
        if (v33 >= v24)
          v35 = v33;
        else
          v35 = v24;
        if (v33 < v24)
          v34 = a2;
        if (v21 > 0.0 || v33 < v24 || v35 < v26)
          v38 = a1 - 1;
        else
          v38 = 0;
        if (v35 >= v26)
          v39 = v35;
        else
          v39 = v26;
        if (v35 < v26)
          v34 = a2 + 1;
        if (v39 >= v28)
          v40 = v39;
        else
          v40 = v28;
        if (v39 < v28)
          v34 = a2 - 1;
        if (v40 >= v30)
          v41 = v40;
        else
          v41 = v30;
        if (v40 < v30)
          v34 = a2;
        if (v39 >= v28 && v40 >= v30 && v41 >= v31)
          v18 = v38;
        if (v41 >= v31)
          v44 = v34;
        else
          v44 = a2 + 1;
        if (v41 >= v31)
          v45 = v41;
        else
          v45 = v31;
        sub_249709DFC(v32, a2 - 1);
        v47 = v46;
        sub_249709DFC(v32, a2);
        v49 = v48;
        if (v45 >= v47)
          v50 = v45;
        else
          v50 = v47;
        if (v45 >= v47)
          v51 = v44;
        else
          v51 = a2 - 1;
        if (v50 < v48)
        {
          v52 = v48;
        }
        else
        {
          a2 = v51;
          v52 = v50;
        }
        sub_249709DFC(v32, v23);
        if (v45 < v47 || v50 < v49 || v52 < v53)
          v18 = a1 + 1;
        if (v52 >= v53)
          v56 = v52;
        else
          v56 = v53;
        if (v52 < v53)
          a2 = v23;
        goto LABEL_77;
      }
    }
  }
  __break(1u);
}

void sub_249709DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  int64_t v53;
  float v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  float v63;
  float *v64;
  uint64_t v65;
  unint64_t v66;
  float *v67;
  float v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  float *v72;
  uint64_t v73;
  uint64_t v74;
  float *v75;
  float v76;
  uint64_t v77;
  float v78;
  double v79;
  double v80;
  float v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  float v85;
  BOOL v86;
  double v87;
  double v88;
  double v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  id v94;
  unint64_t v95;
  id v97;
  uint64_t v98;
  id v99;
  unint64_t v100;
  id v102;
  int64_t v103;
  int64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v3 = *(void **)(v2 + 64);
  v4 = *(void **)(v2 + 72);
  v5 = *(void **)(v2 + 80);
  v6 = *(void **)(v2 + 88);
  v7 = *(void **)(v2 + 104);
  v8 = *(void **)(v2 + 112);
  v9 = *(void **)(v2 + 120);
  v11 = *(void **)(v2 + 128);
  v10 = *(void **)(v2 + 136);
  v12 = *(id *)(v2 + 96);
  v94 = v3;
  v106 = v4;
  v97 = v5;
  v102 = v6;
  v92 = v7;
  v105 = v8;
  v13 = v9;
  v14 = v11;
  v15 = v10;
  v93 = v12;
  v104 = sub_2496DEF60(v12);
  v16 = v15;
  v103 = sub_2496DEF60(v16);
  v17 = (unint64_t)objc_msgSend(v13, sel_integerValue);
  if ((v17 & 0x8000000000000000) != 0)
    goto LABEL_112;
  v90 = v16;
  v91 = v13;
  if (v17)
  {
    v98 = 0;
    v18 = 0;
    v19 = (char *)MEMORY[0x24BEE4AF8];
    v20 = (char *)MEMORY[0x24BEE4AF8];
    v99 = v14;
    v21 = v17;
    v95 = v17;
    while (v18 != v21)
    {
      v22 = (unint64_t)objc_msgSend(v105, sel_integerValue);
      if ((v22 & 0x8000000000000000) != 0)
        goto LABEL_111;
      v23 = v22;
      if (v22)
      {
        v112 = a2 + v18;
        if (__OFADD__(a2, v18))
          goto LABEL_113;
        v24 = 0;
        v25 = 0;
        v110 = v18;
        v100 = v22;
        while (1)
        {
          if (v25 == v23)
            goto LABEL_93;
          v27 = a1 + v25;
          if (__OFADD__(a1, v25))
            break;
          v111 = v24;
          v28 = (uint64_t)objc_msgSend(v14, sel_integerValue);
          v29 = (uint64_t)objc_msgSend(v105, sel_integerValue);
          v30 = v28 * v29;
          if ((unsigned __int128)(v28 * (__int128)v29) >> 64 != (v28 * v29) >> 63)
            goto LABEL_95;
          v31 = v18 * v30;
          if ((unsigned __int128)(v18 * (__int128)v30) >> 64 != (v18 * v30) >> 63)
            goto LABEL_96;
          v107 = v29;
          v108 = v28;
          v32 = (uint64_t)objc_msgSend(v14, sel_integerValue);
          v33 = v25 * v32;
          if ((unsigned __int128)(v25 * (__int128)v32) >> 64 != (v25 * v32) >> 63)
            goto LABEL_97;
          if (__OFADD__(v31, v33))
            goto LABEL_98;
          v34 = v32;
          v113 = v25;
          v35 = (uint64_t)objc_msgSend(v102, sel_integerValue);
          v36 = (uint64_t)objc_msgSend(v106, sel_integerValue);
          v37 = v35 * v36;
          if ((unsigned __int128)(v35 * (__int128)v36) >> 64 != (v35 * v36) >> 63)
            goto LABEL_99;
          v38 = v112 * v37;
          if ((unsigned __int128)(v112 * (__int128)v37) >> 64 != (v112 * v37) >> 63)
            goto LABEL_100;
          v39 = (uint64_t)objc_msgSend(v102, sel_integerValue);
          v40 = v27 * v39;
          if ((unsigned __int128)(v27 * (__int128)v39) >> 64 != (v27 * v39) >> 63)
            goto LABEL_101;
          v41 = __OFADD__(v38, v40);
          v42 = v38 + v40;
          if (v41)
            goto LABEL_102;
          v109 = v42;
          v43 = 0;
          if ((v27 & 0x8000000000000000) == 0 && (v112 & 0x8000000000000000) == 0)
            v43 = v27 < (uint64_t)objc_msgSend(v106, sel_integerValue)
               && v112 < (uint64_t)objc_msgSend(v97, sel_integerValue);
          v44 = (unint64_t)objc_msgSend(v102, sel_integerValue);
          if ((v44 & 0x8000000000000000) != 0)
            goto LABEL_103;
          v14 = (id)v44;
          if (v44)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v20 = sub_24970A52C(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_24970A52C(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
            v45 = 0;
            v26 = v111;
            v46 = v109;
            v47 = v110 * v108 * v107;
            v48 = v47 + v33;
            v49 = v104 + 32;
            v50 = v103 + 32 + v34 * v111 + v98 * v108 * v107;
            v51 = v47 + v34 * v113;
            v52 = v103;
            v53 = v104;
            while (1)
            {
              v54 = -1.0;
              if (v43)
              {
                v47 = (unint64_t)v45 + v46;
                if (__OFADD__(v46, v45))
                {
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
                  goto LABEL_94;
                }
                if ((v47 & 0x8000000000000000) != 0)
                  goto LABEL_91;
                if (v47 >= *(_QWORD *)(v53 + 16))
                  goto LABEL_92;
                v54 = *(float *)(v49 + 4 * v47);
              }
              if ((v48 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_55:
                __break(1u);
                goto LABEL_56;
              }
              v47 = (unint64_t)v45 + v51;
              if ((unint64_t)v45 + v51 >= *(_QWORD *)(v52 + 16))
                goto LABEL_55;
              v55 = *(_DWORD *)(v50 + 4 * (_QWORD)v45);
              v57 = *((_QWORD *)v20 + 2);
              v56 = *((_QWORD *)v20 + 3);
              if (v57 >= v56 >> 1)
              {
                v60 = sub_24970A52C((char *)(v56 > 1), v57 + 1, 1, v20);
                v46 = v109;
                v26 = v111;
                v49 = v104 + 32;
                v20 = v60;
                v52 = v103;
                v53 = v104;
              }
              *((_QWORD *)v20 + 2) = v57 + 1;
              *(float *)&v20[4 * v57 + 32] = v54;
              v59 = *((_QWORD *)v19 + 2);
              v58 = *((_QWORD *)v19 + 3);
              v34 = v59 + 1;
              if (v59 >= v58 >> 1)
              {
                v61 = sub_24970A52C((char *)(v58 > 1), v59 + 1, 1, v19);
                v46 = v109;
                v26 = v111;
                v49 = v104 + 32;
                v19 = v61;
                v52 = v103;
                v53 = v104;
              }
              v45 = (char *)v45 + 1;
              *((_QWORD *)v19 + 2) = v34;
              v47 = (unint64_t)&v19[4 * v59];
              *(_DWORD *)(v47 + 32) = v55;
              if (v14 == v45)
                goto LABEL_10;
            }
          }
          v26 = v111;
LABEL_10:
          v25 = v113 + 1;
          v24 = v26 + 4;
          v14 = v99;
          v23 = v100;
          v18 = v110;
          if (v113 + 1 == v100)
            goto LABEL_47;
        }
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
LABEL_47:
      ++v18;
      v98 += 4;
      v21 = v95;
      if (v18 == v95)
        goto LABEL_50;
    }
    goto LABEL_110;
  }
  v19 = (char *)MEMORY[0x24BEE4AF8];
  v20 = (char *)MEMORY[0x24BEE4AF8];
LABEL_50:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = *((_QWORD *)v20 + 2);
  if (!v47)
  {
    v63 = 0.0;
    v34 = (uint64_t)v102;
    goto LABEL_61;
  }
  v34 = (uint64_t)v102;
  if (v47 == 1)
  {
    v62 = 0;
    v63 = 0.0;
LABEL_59:
    v66 = v47 - v62;
    v67 = (float *)&v20[4 * v62 + 32];
    do
    {
      v68 = *v67++;
      v63 = v63 + v68;
      --v66;
    }
    while (v66);
    goto LABEL_61;
  }
LABEL_56:
  v62 = v47 & 0x7FFFFFFFFFFFFFFELL;
  v64 = (float *)(v20 + 36);
  v63 = 0.0;
  v65 = v47 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v63 = (float)(v63 + *(v64 - 1)) + *v64;
    v64 += 2;
    v65 -= 2;
  }
  while (v65);
  if (v47 != v62)
    goto LABEL_59;
LABEL_61:
  v69 = *((_QWORD *)v19 + 2);
  if (!v69)
  {
LABEL_89:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  if (v69 == 1)
  {
    v70 = 0;
    v71 = 0.0;
  }
  else
  {
    v70 = v69 & 0x7FFFFFFFFFFFFFFELL;
    v72 = (float *)(v19 + 36);
    v71 = 0.0;
    v73 = v69 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v71 = (float)(v71 + *(v72 - 1)) + *v72;
      v72 += 2;
      v73 -= 2;
    }
    while (v73);
    if (v69 == v70)
      goto LABEL_70;
  }
  v74 = v69 - v70;
  v75 = (float *)&v19[4 * v70 + 32];
  do
  {
    v76 = *v75++;
    v71 = v71 + v76;
    --v74;
  }
  while (v74);
LABEL_70:
  v77 = 0;
  v78 = v63 / (float)(uint64_t)v47;
  v79 = 0.0;
  v80 = 0.0;
  v81 = v71 / (float)v69;
  while (1)
  {
    v82 = v77 + 3;
    if (__OFADD__(v77, 3))
      v82 = 0x7FFFFFFFFFFFFFFFLL;
    if (v77 >= v47)
      break;
    v83 = v77 + 1;
    if (v77 + 1 >= v47)
      goto LABEL_105;
    v84 = v77 + 2;
    if (v77 + 2 >= v47)
      goto LABEL_106;
    if (v77 >= v69)
      goto LABEL_107;
    if (v83 >= v69)
      goto LABEL_108;
    if (v84 >= v69)
      goto LABEL_109;
    v85 = (float)((float)(*(float *)&v19[4 * v77 + 32] + *(float *)&v19[4 * v83 + 32]) + *(float *)&v19[4 * v84 + 32])
        / 3.0;
    v86 = v81 < v85;
    if (v81 >= v85)
      v87 = 0.0;
    else
      v87 = 1.0;
    if (v86)
      v88 = 0.0;
    else
      v88 = 1.0;
    if (v78 >= (float)((float)((float)(*(float *)&v20[4 * v77 + 32] + *(float *)&v20[4 * v83 + 32])
                              + *(float *)&v20[4 * v84 + 32])
                      / 3.0))
      v89 = v87;
    else
      v89 = v88;
    v80 = v80 + v89;
    v79 = v79 + 1.0;
    v77 = v82;
    if (v82 >= v69)
      goto LABEL_89;
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
}

char *sub_24970A52C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4D0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24970AFAC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970A638(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B478(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970A744(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B478(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970A850(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A500);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B560(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970A95C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B668(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970AA68(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B094(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24970AB74(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4E8);
  v10 = *(_QWORD *)(sub_24972C960() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_24972D074();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_24972C960() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24970B17C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_24970AD7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24970B294(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24970AE88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A508);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24970B384(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24970AFAC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24972D0F8();
  __break(1u);
  return result;
}

char *sub_24970B094(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B17C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_24972C960() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B294(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B384(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

char *sub_24970B478(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B560(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A040);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24970B758()
{
  uint64_t result;

  result = sub_2496FD9A0((uint64_t)&unk_251AA7998);
  qword_25787EC60 = result;
  return result;
}

float static UIUDetector.iPhoneClickabilityIOUThreshold.getter()
{
  return 0.5;
}

float static UIUDetector.iPadClickabilityIOUThreshold.getter()
{
  return 0.4;
}

float static UIUDetector.defaultClickabilityNMSThreshold.getter()
{
  return 0.5;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.preloadClickabilityModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v17[3];
  uint64_t v18;

  v2 = v0 + OBJC_IVAR___UIUDetectorCompat_clickabilityDetector;
  swift_beginAccess();
  sub_24970B9BC(v2, (uint64_t)v17);
  v3 = v18;
  sub_2496FD3AC((uint64_t)v17, &qword_25787A340);
  if (v3)
    return;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
  if (v4)
  {
    if (v4 != 2)
    {
      if (v4 != 1)
      {
        v17[0] = *(_QWORD *)(v0 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
        sub_24972D218();
        __break(1u);
        return;
      }
      if (qword_257879BF8 != -1)
        swift_once();
      v5 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v6 = (id)qword_25787EBE8;
      }
      else
      {
        v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v15 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v14;
        v6 = v14;

        v5 = 0;
      }
      v16 = v5;
      v12 = sub_249703CF0(0);

      if (!v1)
      {
        v13 = type metadata accessor for ClickabilitySquare();
        goto LABEL_20;
      }
    }
  }
  else
  {
    if (qword_257879BF8 != -1)
      swift_once();
    v7 = (void *)qword_25787EBE8;
    if (qword_25787EBE8)
    {
      v8 = (id)qword_25787EBE8;
    }
    else
    {
      v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
      v10 = (void *)qword_25787EBE8;
      qword_25787EBE8 = (uint64_t)v9;
      v8 = v9;

      v7 = 0;
    }
    v11 = v7;
    v12 = sub_249703AB0(0);

    if (!v1)
    {
      v13 = type metadata accessor for ClickabilityPortrait();
LABEL_20:
      v18 = v13;
      v17[0] = v12;
      swift_beginAccess();
      sub_2496FD320((uint64_t)v17, v2);
      swift_endAccess();
    }
  }
}

uint64_t sub_24970B9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.addClickabilityResults(to:in:nmsThreshold:)(Swift::OpaquePointer to, CGImageRef in, Swift::Float nmsThreshold)
{
  uint64_t v3;
  size_t Width;
  CGImage *v7;
  CGImage *v8;
  CGImage *v9;
  void *v10;

  if ((unint64_t)(*(_QWORD *)(v3 + OBJC_IVAR___UIUDetectorCompat_modelPlatform) - 1) > 1
    || (Width = CGImageGetWidth(in), Width == CGImageGetHeight(in))
    || (v7 = (CGImage *)_s15UIUnderstanding11UIUDetectorC17createSquareImageySo10CGImageRefaSgAFFZ_0(in)) == 0)
  {
    v7 = in;
  }
  v8 = v7;
  v9 = v7;
  v10 = (void *)MEMORY[0x24BCF71E0]();
  sub_24970BB40(in, v8, v3, (unint64_t)to._rawValue, 0.5);
  objc_autoreleasePoolPop(v10);

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.addClickabilityResults(to:originalImage:squareImage:nmsThreshold:)(Swift::OpaquePointer to, CGImageRef originalImage, CGImageRef_optional squareImage, Swift::Float nmsThreshold)
{
  uint64_t v4;
  void *v9;

  v9 = (void *)MEMORY[0x24BCF71E0]();
  sub_24970BB40(originalImage, squareImage.value, v4, (unint64_t)to._rawValue, nmsThreshold);
  objc_autoreleasePoolPop(v9);
}

void sub_24970BB40(CGImage *a1, CGImage *a2, uint64_t a3, unint64_t a4, float a5)
{
  uint64_t v5;
  CGFloat v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  CGImage *v33;
  uint64_t v34;
  CGImage *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(unint64_t, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CGImage *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  double Width;
  double Height;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  Swift::Bool v101;
  objc_class *v102;
  _BYTE *v103;
  id v104;
  id v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  double v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  CGFloat *v117;
  float v118;
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, uint64_t);
  __int128 v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  __int128 v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  CGImage *v141;
  CGImage *v142;
  char *v143;
  objc_super v144;
  unint64_t v145;
  _QWORD *v146;

  v133 = a4;
  *(float *)&v6 = a5;
  v141 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E48);
  v135 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v134 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v143 = (char *)&v121 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v121 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v121 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v121 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v139 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v137 = (char *)&v121 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v136 = (char *)&v121 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v138 = (char *)&v121 - v32;
  v140 = a3;
  if (a2)
  {
    v132 = v31;
    v33 = a2;
  }
  else
  {
    if ((unint64_t)(*(_QWORD *)(a3 + OBJC_IVAR___UIUDetectorCompat_modelPlatform) - 1) <= 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_24972F6C0;
      *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 32) = 0xD000000000000049;
      *(_QWORD *)(v34 + 40) = 0x8000000249733730;
      sub_24972D29C();
      swift_bridgeObjectRelease();
      return;
    }
    v132 = v31;
    v33 = v141;
  }
  v35 = a2;
  sub_24970CA08(v33, (uint64_t)v24);
  if (v5)
  {

    return;
  }
  v142 = v33;
  v36 = v139;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v24, 1, v25) == 1)
  {

    sub_2496FD3AC((uint64_t)v24, &qword_25787A348);
    return;
  }
  v129 = 0;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v138, v24, v25);
  v125 = (void (*)(char *, char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_257879E60);
  v37 = swift_allocObject();
  v126 = xmmword_249730A70;
  *(_OWORD *)(v37 + 16) = xmmword_249730A70;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E68);
  v130 = v9;
  v128 = v16;
  v127 = v19;
  v39 = v38;
  *(_QWORD *)(v37 + 56) = v38;
  v40 = sub_2496D1BCC(&qword_257879E70, &qword_257879E68, MEMORY[0x24BDBFF08]);
  *(_QWORD *)(v37 + 64) = v40;
  *(_QWORD *)(v37 + 32) = 0;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A510);
  v131 = v25;
  v42 = v41;
  *(_QWORD *)(v37 + 96) = v41;
  v43 = sub_2496D1BCC(&qword_25787A518, &qword_25787A510, MEMORY[0x24BDBFE50]);
  *(_OWORD *)(v37 + 72) = xmmword_249730A80;
  *(_QWORD *)(v37 + 136) = v39;
  *(_QWORD *)(v37 + 144) = v40;
  *(_QWORD *)(v37 + 104) = v43;
  *(_QWORD *)(v37 + 112) = 0;
  *(_QWORD *)(v37 + 176) = v39;
  *(_QWORD *)(v37 + 184) = v40;
  *(_QWORD *)(v37 + 152) = 0;
  v44 = sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v126;
  *(_QWORD *)(v45 + 56) = v39;
  *(_QWORD *)(v45 + 64) = v40;
  *(_QWORD *)(v45 + 32) = 0;
  *(_QWORD *)(v45 + 96) = v42;
  *(_QWORD *)(v45 + 104) = v43;
  *(_OWORD *)(v45 + 72) = xmmword_249730A90;
  *(_QWORD *)(v45 + 136) = v39;
  *(_QWORD *)(v45 + 144) = v40;
  *(_QWORD *)(v45 + 112) = 0;
  *(_QWORD *)(v45 + 176) = v39;
  *(_QWORD *)(v45 + 184) = v40;
  *(_QWORD *)(v45 + 152) = 0;
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v126;
  *(_QWORD *)(v46 + 56) = v39;
  *(_QWORD *)(v46 + 64) = v40;
  *(_QWORD *)(v46 + 32) = 0;
  *(_QWORD *)(v46 + 96) = v42;
  *(_QWORD *)(v46 + 104) = v43;
  *(_OWORD *)(v46 + 72) = xmmword_249730AA0;
  *(_QWORD *)(v46 + 136) = v39;
  *(_QWORD *)(v46 + 144) = v40;
  *(_QWORD *)(v46 + 112) = 0;
  *(_QWORD *)(v46 + 176) = v39;
  *(_QWORD *)(v46 + 184) = v40;
  *(_QWORD *)(v46 + 152) = 0;
  v47 = v128;
  *(_QWORD *)&v126 = v44;
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A520);
  v48 = v135;
  v49 = *(_QWORD *)(v135 + 72);
  v50 = v21;
  v51 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
  v52 = swift_allocObject();
  v121 = xmmword_24972FA80;
  *(_OWORD *)(v52 + 16) = xmmword_24972FA80;
  v53 = *(void (**)(unint64_t, char *, uint64_t))(v48 + 16);
  v54 = v47;
  v55 = v130;
  v53(v52 + v51, v54, v130);
  v123 = v50;
  v53(v52 + v51 + v49, v50, v55);
  v145 = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A528);
  sub_2496D1BCC(&qword_25787A530, &qword_25787A528, MEMORY[0x24BEE12C8]);
  v56 = sub_2496D1BCC(&qword_257879E88, &qword_257879E48, MEMORY[0x24BDBFD50]);
  sub_24972C9CC();
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v121;
  v53(v57 + v51, v128, v55);
  v53(v57 + v51 + v49, v127, v55);
  v145 = v57;
  v58 = v56;
  sub_24972C9CC();
  v59 = MEMORY[0x24BEE4AF8];
  v125 = (void (*)(char *, char *, uint64_t))v53;
  v124 = v58;
  if (qword_257879C08 != -1)
    swift_once();
  v60 = 0;
  v61 = qword_25787EC60;
  v62 = qword_25787EC60 + 56;
  v63 = v142;
  do
  {
    v66 = *((_QWORD *)&unk_251AA6CE8 + v60 + 4);
    if (*(_QWORD *)(v61 + 16))
    {
      sub_24972D2B4();
      sub_24972D2C0();
      v67 = sub_24972D2D8();
      v68 = -1 << *(_BYTE *)(v61 + 32);
      v69 = v67 & ~v68;
      if (((*(_QWORD *)(v62 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
      {
        v70 = *(_QWORD *)(v61 + 48);
        if (*(_QWORD *)(v70 + 8 * v69) == v66)
          goto LABEL_16;
        v71 = ~v68;
        while (1)
        {
          v69 = (v69 + 1) & v71;
          if (((*(_QWORD *)(v62 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            break;
          if (*(_QWORD *)(v70 + 8 * v69) == v66)
            goto LABEL_16;
        }
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v146 = (_QWORD *)v59;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2496D5AEC(0, *(_QWORD *)(v59 + 16) + 1, 1);
      v59 = (uint64_t)v146;
    }
    v65 = *(_QWORD *)(v59 + 16);
    v64 = *(_QWORD *)(v59 + 24);
    if (v65 >= v64 >> 1)
    {
      sub_2496D5AEC(v64 > 1, v65 + 1, 1);
      v59 = (uint64_t)v146;
    }
    *(_QWORD *)(v59 + 16) = v65 + 1;
    *(_QWORD *)(v59 + 8 * v65 + 32) = v66;
    v63 = v142;
LABEL_16:
    ++v60;
  }
  while (v60 != 18);
  v73 = sub_249729A40(v59);
  swift_release();
  Width = (double)(uint64_t)CGImageGetWidth(v63);
  Height = (double)(uint64_t)CGImageGetHeight(v63);
  v76 = v140;
  *(_QWORD *)&v121 = OBJC_IVAR___UIUDetectorCompat_clickabilityConfidenceThresholds;
  v77 = *(_QWORD *)(v140 + OBJC_IVAR___UIUDetectorCompat_clickabilityConfidenceThresholds);
  swift_bridgeObjectRetain();
  v78 = v131;
  sub_24972C9F0();
  v79 = v134;
  v80 = v130;
  v125(v134, v143, v130);
  v81 = v132;
  sub_24972CA14();
  v82 = sub_2496FBD90(Width, Height, (uint64_t)v81, v77);
  v139 = *(_QWORD *)(v139 + 8);
  ((void (*)(_QWORD *, uint64_t))v139)(v81, v78);
  swift_bridgeObjectRetain();
  v83 = v129;
  v84 = sub_24970D0E4(v82, v73);
  v129 = v83;
  v85 = (uint64_t)v143;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v122 = _s15UIUnderstanding19CenterNetPredictionC24nonMaximalSuppressionIOU5boxes9thresholdSayACGAG_SftFZ_0(v84, *(float *)&v6);
  swift_bridgeObjectRelease();
  v135 = *(_QWORD *)(v135 + 8);
  ((void (*)(uint64_t, uint64_t))v135)(v85, v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_257879C08 != -1)
    goto LABEL_58;
  while (1)
  {
    v86 = qword_25787EC60;
    v87 = *(_QWORD *)(v76 + v121);
    swift_bridgeObjectRetain();
    v88 = v85;
    sub_24972C9F0();
    v125(v79, (char *)v85, v80);
    sub_24972CA14();
    v89 = sub_2496FBD90(Width, Height, (uint64_t)v81, v87);
    ((void (*)(_QWORD *, uint64_t))v139)(v81, v78);
    swift_bridgeObjectRetain();
    v90 = v129;
    v91 = sub_24970D0E4(v89, v86);
    v129 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = _s15UIUnderstanding19CenterNetPredictionC24nonMaximalSuppressionIOU5boxes9thresholdSayACGAG_SftFZ_0(v91, *(float *)&v6);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v135)(v88, v80);
    swift_bridgeObjectRelease();
    v145 = v122;
    v85 = (uint64_t)&v145;
    sub_2497103E4(v92);
    v93 = v145;
    if (v145 >> 62)
    {
      swift_bridgeObjectRetain();
      v94 = sub_24972D0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v94 = *(_QWORD *)((v145 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v80 = (uint64_t)v123;
    if (!v94)
    {
      swift_bridgeObjectRelease();
      v81 = (_QWORD *)MEMORY[0x24BEE4AF8];
      goto LABEL_43;
    }
    v146 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2496D5AD0(0, v94 & ~(v94 >> 63), 0);
    if (v94 < 0)
      break;
    v95 = 0;
    v143 = (char *)(v93 & 0xC000000000000001);
    v81 = v146;
    v96 = v93;
    v97 = v94;
    do
    {
      if (v143)
      {
        v98 = MEMORY[0x24BCF6CE8](v95, v93);
      }
      else
      {
        v98 = *(_QWORD *)(v93 + 8 * v95 + 32);
        swift_retain();
      }
      v6 = *(float *)(v98 + 16);
      v99 = sub_24972174C(*(_QWORD *)(v98 + 32));
      if ((v100 & 1) != 0)
        v85 = -1;
      else
        v85 = v99;
      v101 = ClickabilityType.isClickable()();
      v102 = (objc_class *)type metadata accessor for ClickabilityDetection();
      v103 = objc_allocWithZone(v102);
      v103[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = v101;
      *(_QWORD *)&v103[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = v85;
      *(CGFloat *)&v103[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = v6;
      v144.receiver = v103;
      v144.super_class = v102;
      v104 = -[CGImage init](&v144, sel_init);
      swift_beginAccess();
      v105 = *(id *)(v98 + 24);
      swift_release();
      v146 = v81;
      v107 = v81[2];
      v106 = v81[3];
      if (v107 >= v106 >> 1)
      {
        v85 = (uint64_t)&v146;
        sub_2496D5AD0(v106 > 1, v107 + 1, 1);
        v81 = v146;
      }
      ++v95;
      v81[2] = v107 + 1;
      v108 = &v81[7 * v107];
      v108[4] = v104;
      v108[5] = v105;
      *((_OWORD *)v108 + 3) = 0u;
      *((_OWORD *)v108 + 4) = 0u;
      *((_BYTE *)v108 + 80) = 1;
      v93 = v96;
    }
    while (v97 != v95);
    swift_bridgeObjectRelease();
    v80 = (uint64_t)v123;
LABEL_43:
    v79 = *(char **)(v140 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
    v78 = v130;
    v109 = v131;
    if ((unint64_t)(v79 - 1) >= 2)
      goto LABEL_52;
    v110 = v81[2];
    if (!v110)
    {
LABEL_51:
      v118 = 0.5;
      if (v79 != (char *)1)
      {
LABEL_52:
        if (v79 == (char *)2)
          v118 = 0.5;
        else
          v118 = 0.4;
      }
      swift_bridgeObjectRetain();
      sub_24970D2C0(v133, (uint64_t)v81, v118);

      swift_bridgeObjectRelease();
      v119 = (void (*)(char *, uint64_t))v139;
      ((void (*)(char *, uint64_t))v139)(v137, v109);
      v119(v136, v109);
      v120 = (void (*)(char *, uint64_t))v135;
      ((void (*)(char *, uint64_t))v135)(v128, v78);
      v120(v127, v78);
      v120((char *)v80, v78);
      v119(v138, v109);
      swift_bridgeObjectRelease();
      return;
    }
    v76 = 0;
    v111 = 0;
    v112 = v81[2];
    while (v111 < v112)
    {
      v85 = (uint64_t)*(id *)((char *)v81 + v76 + 40);
      v6 = sub_24970F7F0(v141);
      Width = v113;
      Height = v114;
      v116 = v115;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v81 = sub_2496F737C(v81);
      v112 = v81[2];
      if (v111 >= v112)
        goto LABEL_57;
      ++v111;
      v117 = (CGFloat *)((char *)v81 + v76);
      v117[6] = v6;
      v117[7] = Width;
      v117[8] = Height;
      *((_QWORD *)v117 + 9) = v116;
      v76 += 56;
      *((_BYTE *)v117 + 80) = 0;
      if (v110 == v111)
        goto LABEL_51;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    swift_once();
  }
  __break(1u);
}

void sub_24970CA08(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t inited;
  uint64_t v54;
  uint64_t v55;
  id v56[3];
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v52 - v9;
  v11 = v2 + OBJC_IVAR___UIUDetectorCompat_clickabilityDetector;
  swift_beginAccess();
  sub_24970B9BC(v11, (uint64_t)v56);
  v12 = v57;
  sub_2496FD3AC((uint64_t)v56, &qword_25787A340);
  if (v12 || (UIUDetector.preloadClickabilityModel()(), !v34))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
    v14(a2, 1, 1, v13);
    v15 = *(void **)(v2 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
    if (v15)
    {
      if (v15 == (void *)2)
        return;
      if (v15 != (void *)1)
      {
LABEL_35:
        v56[0] = v15;
        sub_24972D218();
        __break(1u);
        return;
      }
      sub_24970B9BC(v11, (uint64_t)v56);
      if (v57)
      {
        type metadata accessor for ClickabilitySquare();
        if ((swift_dynamicCast() & 1) == 0)
          return;
        v16 = v55;
        v17 = (void *)objc_opt_self();
        v56[0] = 0;
        v18 = a1;
        v19 = objc_msgSend(v17, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v18, 896, 896, 32, 0, v56);
        if (v19)
        {
          v20 = v19;
          v54 = v16;
          v21 = v56[0];

          v22 = objc_msgSend(v20, sel_imageBufferValue);
          if (v22)
          {
            type metadata accessor for ClickabilitySquareInput();
            v23 = swift_allocObject();
            *(_QWORD *)(v23 + 16) = v22;

            v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
            v25 = *(void **)(v54 + 16);
            v56[0] = 0;
            v26 = objc_msgSend(v25, sel_predictionFromFeatures_options_error_, v23, v24, v56);
            v27 = v56[0];
            if (v26)
            {
              v28 = v26;
              type metadata accessor for ClickabilitySquareOutput();
              inited = swift_initStackObject();
              *(_QWORD *)(inited + 16) = v28;
              v29 = v27;
              swift_release();

              v30 = (void *)sub_24972CB94();
              v31 = objc_msgSend(v28, sel_featureValueForName_, v30);

              if (v31)
              {
                v32 = objc_msgSend(v31, sel_multiArrayValue);

                if (v32)
                {
                  sub_24972C9FC();
                  swift_release();
                  swift_release();
                  sub_2496FD3AC(a2, &qword_25787A348);
                  v14((uint64_t)v10, 0, 1, v13);
                  v33 = (uint64_t)v10;
LABEL_23:
                  sub_2496FD4F8(v33, a2);
                  return;
                }
                goto LABEL_32;
              }
LABEL_31:
              __break(1u);
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
            goto LABEL_26;
          }
          goto LABEL_30;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_24970B9BC(v11, (uint64_t)v56);
      if (v57)
      {
        type metadata accessor for ClickabilityPortrait();
        if ((swift_dynamicCast() & 1) == 0)
          return;
        v35 = v55;
        v36 = (void *)objc_opt_self();
        v56[0] = 0;
        v18 = a1;
        v37 = objc_msgSend(v36, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v18, 448, 896, 32, 0, v56);
        if (v37)
        {
          v38 = v37;
          v54 = v35;
          v39 = v56[0];

          v40 = objc_msgSend(v38, sel_imageBufferValue);
          if (v40)
          {
            type metadata accessor for ClickabilityPortraitInput();
            v41 = swift_allocObject();
            *(_QWORD *)(v41 + 16) = v40;

            v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
            v42 = *(void **)(v54 + 16);
            v56[0] = 0;
            v43 = objc_msgSend(v42, sel_predictionFromFeatures_options_error_, v41, v24, v56);
            v44 = v56[0];
            if (v43)
            {
              v45 = v43;
              type metadata accessor for ClickabilityPortraitOutput();
              inited = swift_initStackObject();
              *(_QWORD *)(inited + 16) = v45;
              v46 = v44;
              swift_release();

              v47 = (void *)sub_24972CB94();
              v48 = objc_msgSend(v45, sel_featureValueForName_, v47);

              if (v48)
              {
                v49 = objc_msgSend(v48, sel_multiArrayValue);

                if (v49)
                {
                  sub_24972C9FC();
                  swift_release();
                  swift_release();
                  sub_2496FD3AC(a2, &qword_25787A348);
                  v14((uint64_t)v8, 0, 1, v13);
                  v33 = (uint64_t)v8;
                  goto LABEL_23;
                }
                goto LABEL_34;
              }
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
LABEL_26:
            v51 = v56[0];
            sub_24972C8AC();

            swift_willThrow();
            sub_2496FD3AC(a2, &qword_25787A348);
            swift_release();
            goto LABEL_27;
          }
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_25:
        v50 = v56[0];
        sub_24972C8AC();

        swift_willThrow();
        sub_2496FD3AC(a2, &qword_25787A348);
LABEL_27:
        swift_release();
        return;
      }
    }
    sub_2496FD3AC((uint64_t)v56, &qword_25787A340);
  }
}

uint64_t sub_24970D0E4(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v3 = a1;
  v23 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_23:
    v4 = sub_24972D0BC();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v5 = 0;
      v21 = v3 & 0xC000000000000001;
      v6 = v3 & 0xFFFFFFFFFFFFFF8;
      v20 = v3;
      v7 = (_BYTE *)(v3 + 32);
      v8 = a2 + 56;
      while (1)
      {
        if (v21)
        {
          v9 = MEMORY[0x24BCF6CE8](v5, v20);
          v10 = __OFADD__(v5++, 1);
          if (v10)
          {
LABEL_20:
            __break(1u);
            return v23;
          }
        }
        else
        {
          if (v5 >= *(_QWORD *)(v6 + 16))
          {
            __break(1u);
            goto LABEL_23;
          }
          v9 = *(_QWORD *)&v7[8 * v5];
          swift_retain();
          v10 = __OFADD__(v5++, 1);
          if (v10)
            goto LABEL_20;
        }
        v11 = sub_24972174C(*(_QWORD *)(v9 + 32));
        if ((v12 & 1) == 0)
        {
          if (!*(_QWORD *)(a2 + 16))
            goto LABEL_17;
          v13 = v11;
          sub_24972D2B4();
          sub_24972D2C0();
          v3 = (unint64_t)&v22;
          v14 = sub_24972D2D8();
          v15 = -1 << *(_BYTE *)(a2 + 32);
          v16 = v14 & ~v15;
          if (((*(_QWORD *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            goto LABEL_17;
          v17 = *(_QWORD *)(a2 + 48);
          if (*(_QWORD *)(v17 + 8 * v16) != v13)
            break;
        }
LABEL_4:
        swift_release();
LABEL_5:
        if (v5 == v4)
          return v23;
      }
      v18 = ~v15;
      while (1)
      {
        v16 = (v16 + 1) & v18;
        if (((*(_QWORD *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          break;
        if (*(_QWORD *)(v17 + 8 * v16) == v13)
          goto LABEL_4;
      }
LABEL_17:
      v3 = (unint64_t)&v23;
      sub_24972D020();
      sub_24972D044();
      sub_24972D050();
      sub_24972D02C();
      goto LABEL_5;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24970D2C0(unint64_t a1, uint64_t a2, float a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  objc_class *v9;
  _BYTE *v10;
  id v11;
  void **v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v17;
  Swift::Bool_optional v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  CGFloat *v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat *v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  char *v45;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v50;
  double v51;
  float v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  double v58;
  Swift::Bool value;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  void **v67;
  void *v68;
  char *v69;
  char *v70;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char *v85;
  float v86;
  void **v88;
  CGFloat r2;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  objc_super v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v4 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_24972D0BC())
  {
    v6 = 0;
    v77 = v4 & 0xC000000000000001;
    v72 = v4 + 32;
    v73 = v4 & 0xFFFFFFFFFFFFFF8;
    v76 = v4;
    v78 = v5;
    while (1)
    {
      if (v77)
      {
        v14 = (char *)MEMORY[0x24BCF6CE8](v6, v4);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v73 + 16))
          goto LABEL_35;
        v14 = (char *)*(id *)(v72 + 8 * v6);
      }
      v15 = v14;
      if (__OFADD__(v6++, 1))
        break;
      v17 = &v14[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      v18.value = UIType.isClickable()().value;
      if (v18.value != 2)
      {
        value = v18.value;
        v60 = v15;
        v61 = v6;
        v62 = 18;
        v63 = -1;
        v64 = (unint64_t *)&qword_251AA6D08;
        do
        {
          v66 = *v64++;
          v65 = v66;
          if ((ClickabilityType.compare(_:)(*(_QWORD *)(*(_QWORD *)v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label), v66) & 1) != 0)v63 = v65;
          --v62;
        }
        while (v62);
        v7 = value;
        v8 = *(_QWORD *)(*(_QWORD *)v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
        v9 = (objc_class *)type metadata accessor for ClickabilityDetection();
        v10 = objc_allocWithZone(v9);
        v10[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = v7;
        *(_QWORD *)&v10[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = v63;
        *(_QWORD *)&v10[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = v8;
        v97.receiver = v10;
        v97.super_class = v9;
        v11 = objc_msgSendSuper2(&v97, sel_init);
        v12 = (void **)&v60[OBJC_IVAR___UIObjectCompat_clickDetection];
        swift_beginAccess();
        v15 = (char *)*v12;
        *v12 = v11;

        v6 = v61;
LABEL_4:
        v4 = v76;
        v13 = v78;
        goto LABEL_5;
      }
      v19 = *(_QWORD *)(a2 + 16);
      if (!v19)
        goto LABEL_4;
      v75 = v6;
      v74 = v15;
      v20 = (void **)&v15[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_bridgeObjectRetain();
      v88 = v20;
      swift_beginAccess();
      v21 = 0;
      v85 = 0;
      v79 = 0;
      v80 = 0;
      v81 = 0;
      v82 = 0;
      v83 = 0;
      v84 = 0;
      v86 = 0.0;
      do
      {
        v22 = a2;
        v23 = a2 + v21;
        v24 = *(char **)(a2 + v21 + 32);
        v25 = *(void **)(a2 + v21 + 40);
        v27 = *(_QWORD *)(v23 + 48);
        v26 = *(_QWORD *)(v23 + 56);
        v95 = *(_QWORD *)(v23 + 72);
        v96 = *(_QWORD *)(v23 + 64);
        v94 = *(_BYTE *)(v23 + 80);
        v28 = *(_QWORD *)&v24[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType];
        v29 = *(_QWORD *)(*(_QWORD *)v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
        v30 = v24;
        v31 = v25;
        v32 = v30;
        v33 = (char *)v31;
        if ((ClickabilityType.compare(_:)(v29, v28) & 1) == 0)
        {

          goto LABEL_15;
        }
        v34 = (char *)*v88;
        v35 = (CGFloat *)&v33[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v36 = *v35;
        v37 = v35[1];
        v38 = v35[2];
        v39 = v35[3];
        v40 = (CGFloat *)&v34[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v41 = *v40;
        v42 = v40[1];
        v44 = v40[2];
        v43 = v40[3];
        v45 = v34;
        v92 = v37;
        v93 = v36;
        v98.origin.x = v36;
        v98.origin.y = v37;
        v90 = v39;
        v91 = v38;
        v98.size.width = v38;
        v98.size.height = v39;
        v104.origin.x = v41;
        v104.origin.y = v42;
        v104.size.width = v44;
        r2 = v43;
        v104.size.height = v43;
        v99 = CGRectUnion(v98, v104);
        x = v99.origin.x;
        y = v99.origin.y;
        width = v99.size.width;
        height = v99.size.height;
        v50 = CGRectGetHeight(v99);
        v100.origin.x = x;
        v100.origin.y = y;
        v100.size.width = width;
        v100.size.height = height;
        v51 = v50 * CGRectGetWidth(v100);
        if (v51 == 0.0)
        {

          if (a3 < 0.0)
          {
            v52 = 0.0;
            if (v86 < 0.0)
              goto LABEL_23;
          }
        }
        else
        {
          v101.origin.y = v92;
          v101.origin.x = v93;
          v101.size.height = v90;
          v101.size.width = v91;
          v105.origin.x = v41;
          v105.origin.y = v42;
          v105.size.width = v44;
          v105.size.height = r2;
          v102 = CGRectIntersection(v101, v105);
          v53 = v102.origin.x;
          v54 = v102.origin.y;
          v55 = v102.size.width;
          v56 = v102.size.height;
          v57 = CGRectGetHeight(v102);
          v103.origin.x = v53;
          v103.origin.y = v54;
          v103.size.width = v55;
          v103.size.height = v56;
          v58 = CGRectGetWidth(v103);

          v52 = v57 * v58 / v51;
          if (v52 > a3 && v86 < v52)
          {
LABEL_23:
            sub_24970D90C(v85, v79);
            v85 = v32;
            v79 = v33;
            v80 = v27;
            v81 = v26;
            v82 = v96;
            v83 = v95;
            v84 = v94;
            v86 = v52;
            goto LABEL_15;
          }
        }

LABEL_15:
        a2 = v22;
        v21 += 56;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v6 = v75;
      v4 = v76;
      v13 = v78;
      v15 = v74;
      if (v85)
      {
        v67 = (void **)&v74[OBJC_IVAR___UIObjectCompat_clickDetection];
        swift_beginAccess();
        v68 = *v67;
        *v67 = v85;
        v69 = v85;

        sub_24970D90C(v85, v79);
        v70 = &v74[OBJC_IVAR___UIObjectCompat_normalizedSquaredRect];
        swift_beginAccess();
        *(_QWORD *)v70 = v80;
        *((_QWORD *)v70 + 1) = v81;
        v13 = v78;
        *((_QWORD *)v70 + 2) = v82;
        *((_QWORD *)v70 + 3) = v83;
        v70[32] = v84 & 1;
      }
LABEL_5:

      if (v6 == v13)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

void sub_24970D90C(void *a1, void *a2)
{
  if (a1)
  {

  }
}

id BoundingBox.__allocating_init(rect:imageSize:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  char *v13;
  double *v14;
  double *v15;
  objc_super v17;

  v13 = (char *)objc_allocWithZone(v6);
  v14 = (double *)&v13[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  *v14 = a1;
  v14[1] = a2;
  v14[2] = a3;
  v14[3] = a4;
  v15 = (double *)&v13[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  *v15 = a5;
  v15[1] = a6;
  v17.receiver = v13;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

void static BoundingBox.getMergedBoundingBox(_:)(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  void *v5;
  CGFloat *v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double MinX;
  char *v12;
  void *v13;
  CGFloat *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  double MaxX;
  char *v20;
  void *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double MinY;
  char *v28;
  void *v29;
  CGFloat *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double MaxY;
  unint64_t v36;
  double v37;
  double v38;
  double v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  CGRect *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  objc_class *v54;
  char *v55;
  double *v56;
  char *v57;
  objc_super *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_38:
    v54 = (objc_class *)type metadata accessor for BoundingBox();
    v59 = (char *)objc_allocWithZone(v54);
    v60 = &v59[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *(_OWORD *)v60 = 0u;
    *((_OWORD *)v60 + 1) = 0u;
    v61 = &v59[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v61 = 0;
    *((_QWORD *)v61 + 1) = 0;
    v62 = v59;
    v58 = (objc_super *)&v62;
LABEL_39:
    v58->super_class = v54;
    -[objc_super init](v58, sel_init, v62);
    return;
  }
  swift_bridgeObjectRetain();
  v2 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_38;
LABEL_3:
  v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (char *)MEMORY[0x24BCF6CE8](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v4 = (char *)*(id *)(a1 + 32);
  }
  v5 = v4;
  v6 = (CGFloat *)&v4[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v7 = *v6;
  v8 = v6[1];
  v9 = v6[2];
  v10 = v6[3];

  v64.origin.x = v7;
  v64.origin.y = v8;
  v64.size.width = v9;
  v64.size.height = v10;
  MinX = CGRectGetMinX(v64);
  if (v3)
    v12 = (char *)MEMORY[0x24BCF6CE8](0, a1);
  else
    v12 = (char *)*(id *)(a1 + 32);
  v13 = v12;
  v14 = (CGFloat *)&v12[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];

  v65.origin.x = v15;
  v65.origin.y = v16;
  v65.size.width = v17;
  v65.size.height = v18;
  MaxX = CGRectGetMaxX(v65);
  if (v3)
    v20 = (char *)MEMORY[0x24BCF6CE8](0, a1);
  else
    v20 = (char *)*(id *)(a1 + 32);
  v21 = v20;
  v22 = (CGFloat *)&v20[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v23 = *v22;
  v24 = v22[1];
  v25 = v22[2];
  v26 = v22[3];

  v66.origin.x = v23;
  v66.origin.y = v24;
  v66.size.width = v25;
  v66.size.height = v26;
  MinY = CGRectGetMinY(v66);
  if (v3)
    v28 = (char *)MEMORY[0x24BCF6CE8](0, a1);
  else
    v28 = (char *)*(id *)(a1 + 32);
  v29 = v28;
  v30 = (CGFloat *)&v28[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  v31 = *v30;
  v32 = v30[1];
  v33 = v30[2];
  v34 = v30[3];

  v67.origin.x = v31;
  v67.origin.y = v32;
  v67.size.width = v33;
  v67.size.height = v34;
  MaxY = CGRectGetMaxY(v67);
  v36 = v2 - 1;
  if (v2 < 1)
    goto LABEL_42;
  v37 = MaxY;
  if (v2 == 1)
  {
LABEL_17:
    v38 = MaxX - MinX;
    v39 = v37 - MinY;
    if (v3)
      v40 = (char *)MEMORY[0x24BCF6CE8](0, a1);
    else
      v40 = (char *)*(id *)(a1 + 32);
    v50 = v40;
    v51 = &v40[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    swift_beginAccess();
    v52 = *(_QWORD *)v51;
    v53 = *((_QWORD *)v51 + 1);

    v54 = (objc_class *)type metadata accessor for BoundingBox();
    v55 = (char *)objc_allocWithZone(v54);
    v56 = (double *)&v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *v56 = MinX;
    v56[1] = MinY;
    v56[2] = v38;
    v56[3] = v39;
    v57 = &v55[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v57 = v52;
    *((_QWORD *)v57 + 1) = v53;
    v63 = v55;
    v58 = (objc_super *)&v63;
    goto LABEL_39;
  }
  if (v3 || (v41 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10), v41 >= 2) && v36 < v41)
  {
    v42 = 0;
    do
    {
      if (v3)
        v43 = (char *)MEMORY[0x24BCF6CE8](v42 + 1, a1);
      else
        v43 = (char *)*(id *)(a1 + 8 * v42 + 40);
      v44 = v43;
      v45 = (CGRect *)&v43[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v46 = CGRectGetMinX(*v45);
      if (v46 < MinX)
        MinX = v46;
      v47 = CGRectGetMaxX(*v45);
      if (MaxX <= v47)
        MaxX = v47;
      v48 = CGRectGetMinY(*v45);
      if (v48 < MinY)
        MinY = v48;
      v49 = CGRectGetMaxY(*v45);

      if (v37 <= v49)
        v37 = v49;
      ++v42;
    }
    while (v36 != v42);
    goto LABEL_17;
  }
LABEL_43:
  __break(1u);
}

double sub_24970DDE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_24970DE94(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  uint64_t result;

  v9 = (double *)(v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  result = swift_beginAccess();
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*sub_24970DEFC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_24970DF84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_24970E01C(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;

  v5 = (double *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  result = swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24970E070())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_24970E0B4()
{
  sub_24970E0E4((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF018]);
}

void sub_24970E0C0()
{
  sub_24970E0E4((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF010]);
}

void sub_24970E0CC()
{
  sub_24970E0E4((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF020]);
}

void sub_24970E0D8()
{
  sub_24970E0E4((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBEFE8]);
}

void sub_24970E0E4(double (*a1)(uint64_t, double, double, double, double))
{
  uint64_t v1;
  double *v3;
  uint64_t v4;
  double v5;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v4 = swift_beginAccess();
  v5 = a1(v4, *v3, v3[1], v3[2], v3[3]);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 >= 9.22337204e18)
LABEL_7:
    __break(1u);
}

void sub_24970E178()
{
  sub_24970E1A0((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF010], (double (*)(double, double, double, double))MEMORY[0x24BDBF020]);
}

void sub_24970E18C()
{
  sub_24970E1A0((double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF018], (double (*)(double, double, double, double))MEMORY[0x24BDBEFE8]);
}

void sub_24970E1A0(double (*a1)(uint64_t, double, double, double, double), double (*a2)(double, double, double, double))
{
  uint64_t v2;
  double *v5;
  uint64_t v6;
  double v7;
  double v8;

  v5 = (double *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v6 = swift_beginAccess();
  v7 = a1(v6, *v5, v5[1], v5[2], v5[3]);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = a2(*v5, v5[1], v5[2], v5[3]);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__((uint64_t)v7, (uint64_t)v8))
LABEL_15:
    __break(1u);
}

void sub_24970E2A8()
{
  uint64_t v0;
  CGRect *v1;
  double Width;
  double Height;

  v1 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  Width = CGRectGetWidth(*v1);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  Height = CGRectGetHeight(*v1);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((unsigned __int128)((uint64_t)Width * (__int128)(uint64_t)Height) >> 64 != ((uint64_t)Width * (uint64_t)Height) >> 63)
LABEL_15:
    __break(1u);
}

void sub_24970E3AC()
{
  uint64_t v0;
  CGRect *v1;
  double MinY;
  double Height;
  double MinX;
  double Width;

  v1 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  MinY = CGRectGetMinY(*v1);
  if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Height = CGRectGetHeight(*v1);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (Height >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__((uint64_t)MinY, (uint64_t)Height / 2))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  MinX = CGRectGetMinX(*v1);
  if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (MinX <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (MinX >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  Width = CGRectGetWidth(*v1);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__((uint64_t)MinX, (uint64_t)Width / 2))
LABEL_29:
    __break(1u);
}

id BoundingBox.init(rect:imageSize:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  double *v7;
  double *v8;
  objc_super v10;

  v7 = (double *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  v8 = (double *)&v6[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
  *v8 = a5;
  v8[1] = a6;
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for BoundingBox();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for BoundingBox()
{
  return objc_opt_self();
}

BOOL sub_24970E640(uint64_t a1, float a2)
{
  uint64_t v2;
  CGRect *v5;
  double MinX;
  CGRect *v7;
  _BOOL4 v8;
  CGRect *v9;
  double Width;
  double v11;
  CGRect *v12;
  double Height;
  CGFloat x;
  CGFloat y;
  CGFloat v16;
  CGFloat v17;
  double v18;
  double v19;
  _BOOL8 result;
  double MaxX;
  double MinY;
  double MaxY;
  double v24;
  CGRect v25;
  CGRect v26;

  if (a2 == 1.0)
  {
    v5 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    MinX = CGRectGetMinX(*v5);
    v7 = (CGRect *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    if (MinX <= CGRectGetMinX(*v7))
    {
      MaxX = CGRectGetMaxX(*v7);
      v8 = MaxX <= CGRectGetMaxX(*v5);
    }
    else
    {
      v8 = 0;
    }
    MinY = CGRectGetMinY(*v5);
    if (MinY <= CGRectGetMinY(*v7))
    {
      MaxY = CGRectGetMaxY(*v7);
      return MaxY <= CGRectGetMaxY(*v5) && v8;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v9 = (CGRect *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    Width = CGRectGetWidth(*v9);
    v11 = Width * CGRectGetHeight(*v9);
    v12 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
    swift_beginAccess();
    v24 = CGRectGetWidth(*v12);
    Height = CGRectGetHeight(*v12);
    v25 = CGRectIntersection(*v9, *v12);
    x = v25.origin.x;
    y = v25.origin.y;
    v16 = v25.size.width;
    v17 = v25.size.height;
    v18 = CGRectGetWidth(v25);
    v26.origin.x = x;
    v26.origin.y = y;
    v26.size.width = v16;
    v26.size.height = v17;
    v19 = CGRectGetHeight(v26);
    result = 0;
    if (v11 > 0.0 && v24 * Height > 0.0)
      return v18 * v19 / v11 >= a2;
  }
  return result;
}

void sub_24970E860(uint64_t a1)
{
  uint64_t v1;
  CGFloat *v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat r2;
  CGFloat r2_8;
  CGFloat r2_16;
  CGFloat r2_24;
  CGFloat v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v3 = (CGFloat *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = (CGFloat *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v32.origin.x = *v8;
  v9 = v8[1];
  v10 = v8[2];
  v11 = v8[3];
  r2_24 = v5;
  v25 = v4;
  v26.origin.x = v4;
  v26.origin.y = v5;
  r2_8 = v7;
  r2_16 = v6;
  v26.size.width = v6;
  v26.size.height = v7;
  r2 = *v8;
  v32.origin.y = v9;
  v32.size.width = v10;
  v32.size.height = v11;
  v27 = CGRectUnion(v26, v32);
  x = v27.origin.x;
  y = v27.origin.y;
  width = v27.size.width;
  height = v27.size.height;
  v16 = CGRectGetHeight(v27);
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  if (v16 * CGRectGetWidth(v28) != 0.0)
  {
    v29.origin.y = r2_24;
    v29.origin.x = v25;
    v29.size.height = r2_8;
    v29.size.width = r2_16;
    v33.origin.x = r2;
    v33.origin.y = v9;
    v33.size.width = v10;
    v33.size.height = v11;
    v30 = CGRectIntersection(v29, v33);
    v17 = v30.origin.x;
    v18 = v30.origin.y;
    v19 = v30.size.width;
    v20 = v30.size.height;
    CGRectGetHeight(v30);
    v31.origin.x = v17;
    v31.origin.y = v18;
    v31.size.width = v19;
    v31.size.height = v20;
    CGRectGetWidth(v31);
  }
}

float sub_24970E9B4(uint64_t a1)
{
  uint64_t v1;
  CGRect *v3;
  double MidX;
  CGRect *v5;
  double v6;
  double MidY;
  CGFloat v8;

  v3 = (CGRect *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  MidX = CGRectGetMidX(*v3);
  v5 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v6 = MidX - CGRectGetMidX(*v5);
  MidY = CGRectGetMidY(*v3);
  v8 = CGRectGetMidY(*v5);
  return sqrt(v6 * v6 + (MidY - v8) * (MidY - v8));
}

float sub_24970EA78(uint64_t a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  double v5;
  CGRect *v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat Height;
  double *v10;
  CGFloat v11;
  double v12;
  double v13;
  CGRect *v14;
  CGFloat v15;
  CGFloat v16;
  double MidX;
  double MidY;
  CGFloat v19;
  CGFloat rect;
  double rect_8;
  CGFloat rect_16;
  CGFloat rect_24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v6 = (CGRect *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  rect_24 = CGRectGetMinX(*v6) / v5;
  v7 = CGRectGetMinY(*v6) / v4;
  v8 = CGRectGetWidth(*v6) / v5;
  Height = CGRectGetHeight(*v6);
  v10 = (double *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  v11 = Height / v4;
  swift_beginAccess();
  v12 = *v10;
  v13 = v10[1];
  v14 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  rect = CGRectGetMinX(*v14) / v12;
  rect_16 = CGRectGetMinY(*v14) / v13;
  v15 = CGRectGetWidth(*v14) / v12;
  v16 = CGRectGetHeight(*v14) / v13;
  v25.origin.x = rect_24;
  v25.origin.y = v7;
  v25.size.width = v8;
  v25.size.height = v11;
  MidX = CGRectGetMidX(v25);
  v26.origin.x = rect;
  v26.origin.y = rect_16;
  v26.size.width = v15;
  v26.size.height = v16;
  rect_8 = MidX - CGRectGetMidX(v26);
  v27.origin.x = rect_24;
  v27.origin.y = v7;
  v27.size.width = v8;
  v27.size.height = v11;
  MidY = CGRectGetMidY(v27);
  v28.origin.x = rect;
  v28.origin.y = rect_16;
  v28.size.width = v15;
  v28.size.height = v16;
  v19 = CGRectGetMidY(v28);
  return sqrt(rect_8 * rect_8 + (MidY - v19) * (MidY - v19));
}

float sub_24970EC6C(uint64_t a1)
{
  return sub_24970EC84(a1, (double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF000]);
}

float sub_24970EC78(uint64_t a1)
{
  return sub_24970EC84(a1, (double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF008]);
}

float sub_24970EC84(uint64_t a1, double (*a2)(uint64_t, double, double, double, double))
{
  uint64_t v2;
  double *v5;
  uint64_t v6;
  double v7;
  double *v8;
  uint64_t v9;
  float v10;

  v5 = (double *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v6 = swift_beginAccess();
  v7 = a2(v6, *v5, v5[1], v5[2], v5[3]);
  v8 = (double *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v9 = swift_beginAccess();
  v10 = v7 - a2(v9, *v8, v8[1], v8[2], v8[3]);
  return fabsf(v10);
}

void sub_24970ED20(uint64_t a1)
{
  uint64_t v1;
  CGRect *v3;
  CGRect *v4;

  v3 = (CGRect *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetMaxY(*v3);
  v4 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetMaxY(*v4);
  CGRectGetMinY(*v3);
  CGRectGetMinY(*v4);
}

BOOL sub_24970EDE8()
{
  uint64_t v0;
  CGRect *v1;
  BOOL v2;
  double MaxX;
  double *v4;
  double MaxY;
  uint64_t v6;
  _BOOL8 result;

  v1 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  if (CGRectGetMinX(*v1) >= 0.0)
  {
    MaxX = CGRectGetMaxX(*v1);
    v4 = (double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
    swift_beginAccess();
    v2 = MaxX <= *v4;
  }
  else
  {
    v2 = 0;
  }
  if (CGRectGetMinY(*v1) < 0.0)
    return 0;
  MaxY = CGRectGetMaxY(*v1);
  v6 = v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize;
  swift_beginAccess();
  result = MaxY <= *(double *)(v6 + 8);
  if (!v2)
    return 0;
  return result;
}

CGFloat sub_24970EEE4()
{
  uint64_t v0;
  double *v1;
  double v2;
  CGRect *v3;
  CGFloat v4;

  v1 = (double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v2 = *v1;
  v3 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v4 = CGRectGetMinX(*v3) / v2;
  CGRectGetMinY(*v3);
  CGRectGetWidth(*v3);
  CGRectGetHeight(*v3);
  return v4;
}

uint64_t sub_24970F004()
{
  uint64_t v0;
  CGRect *v1;

  sub_24972CFB4();
  swift_bridgeObjectRelease();
  v1 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  CGRectGetMinX(*v1);
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  CGRectGetMinY(*v1);
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  CGRectGetWidth(*v1);
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  sub_24972CC48();
  CGRectGetHeight(*v1);
  sub_24972CD2C();
  sub_24972CC48();
  swift_bridgeObjectRelease();
  return 2112120;
}

void *BoundingBox.__allocating_init(from:)(_QWORD *a1)
{
  return sub_24970FB0C(a1);
}

uint64_t sub_24970F17C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  __int128 *v11;
  _BYTE v13[16];
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A548);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24970FD28();
  sub_24972D2FC();
  v9 = (__int128 *)(v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v10 = v9[1];
  v15 = *v9;
  v16 = v10;
  LOBYTE(v14) = 0;
  type metadata accessor for CGRect(0);
  sub_2496CED84(&qword_257879FC8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_24972D1A0();
  if (!v2)
  {
    v11 = (__int128 *)(v3 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
    swift_beginAccess();
    v14 = *v11;
    v13[15] = 1;
    type metadata accessor for CGSize(0);
    sub_2496CED84(&qword_25787A558, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_24972D1A0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24970F340(char *a1, char *a2)
{
  return sub_249721E2C(*a1, *a2);
}

uint64_t sub_24970F34C()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_24970F3C8()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24970F420()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_24970F498@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_24970F4F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1952671090;
  if (*v1)
    v2 = 0x7A69536567616D69;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24970F530()
{
  _BYTE *v0;

  if (*v0)
    return 0x7A69536567616D69;
  else
    return 1952671090;
}

uint64_t sub_24970F568@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_24970F5C8()
{
  sub_24970FD28();
  return sub_24972D308();
}

uint64_t sub_24970F5F0()
{
  sub_24970FD28();
  return sub_24972D314();
}

float64x2_t sub_24970F618(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double *v10;
  float64x2_t *v11;
  float64x2_t result;

  v6 = a3 * a5;
  v7 = a4 * a5;
  v8 = a1 - (a3 * a5 - a3) * 0.5;
  v9 = a2 - (a4 * a5 - a4) * 0.5;
  v10 = (double *)(v5 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  *v10 = v8;
  v10[1] = v9;
  v10[2] = v6;
  v10[3] = v7;
  v11 = (float64x2_t *)(v5 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  result = vmulq_n_f64(*v11, a5);
  *v11 = result;
  return result;
}

float64x2_t sub_24970F6C8(float64_t a1, float64_t a2)
{
  uint64_t v2;
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  float64x2_t *v8;
  float64x2_t v9;
  float64x2_t result;

  v3 = (double *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v4 = *v3 * a1;
  v5 = v3[1] * a2;
  v6 = v3[2] * a1;
  v7 = v3[3] * a2;
  v8 = (float64x2_t *)(v2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v9.f64[0] = a1;
  v9.f64[1] = a2;
  result = vmulq_f64(*v8, v9);
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  *v8 = result;
  return result;
}

void sub_24970F774()
{
  uint64_t v0;
  CGRect *v1;
  CGFloat y;
  CGFloat x;
  CGFloat Height;
  CGFloat Width;
  CGRect v6;

  v1 = (CGRect *)(v0 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  x = v1->origin.x;
  y = v1->origin.y;
  v6.size.width = v1->size.width;
  v6.size.height = v1->size.height;
  v6.origin.x = v1->origin.x;
  v6.origin.y = y;
  Height = CGRectGetHeight(v6);
  Width = CGRectGetWidth(*v1);
  v1->origin.x = y;
  v1->origin.y = x;
  v1->size.width = Height;
  v1->size.height = Width;
}

CGFloat sub_24970F7F0(CGImage *a1)
{
  uint64_t v1;
  int64_t Width;
  int64_t Height;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double *v11;
  double v12;
  double v13;
  CGRect *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  int64_t v26;
  int64_t v27;
  int64_t v28;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  if (Height <= Width)
    v5 = Width;
  else
    v5 = Height;
  v6 = (double)v5;
  v7 = (v6 - (double)(uint64_t)CGImageGetWidth(a1)) * 0.5 / v6;
  v8 = v6 / (double)(uint64_t)CGImageGetWidth(a1);
  v9 = (v6 - (double)(uint64_t)CGImageGetHeight(a1)) * 0.5 / v6;
  v10 = v6 / (double)(uint64_t)CGImageGetHeight(a1);
  v11 = (double *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  v12 = *v11;
  v13 = v11[1];
  v14 = (CGRect *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v15 = CGRectGetMinX(*v14) / v12;
  v16 = CGRectGetMinY(*v14) / v13;
  v17 = CGRectGetWidth(*v14) / v12;
  v18 = CGRectGetHeight(*v14) / v13;
  v30.origin.x = v15;
  v30.origin.y = v16;
  v30.size.width = v17;
  v30.size.height = v18;
  v19 = v8 * (CGRectGetMinX(v30) - v7);
  v31.origin.x = v15;
  v31.origin.y = v16;
  v31.size.width = v17;
  v31.size.height = v18;
  v20 = v10 * (CGRectGetMinY(v31) - v9);
  v32.origin.x = v15;
  v32.origin.y = v16;
  v32.size.width = v17;
  v32.size.height = v18;
  v21 = v8 * CGRectGetWidth(v32);
  v33.origin.x = v15;
  v33.origin.y = v16;
  v33.size.width = v17;
  v33.size.height = v18;
  v22 = v10 * CGRectGetHeight(v33);
  v23 = v19 * (double)(uint64_t)CGImageGetWidth(a1);
  v24 = v20 * (double)(uint64_t)CGImageGetHeight(a1);
  v25 = v21 * (double)(uint64_t)CGImageGetWidth(a1);
  v26 = CGImageGetHeight(a1);
  v14->origin.x = v23;
  v14->origin.y = v24;
  v14->size.width = v25;
  v14->size.height = v22 * (double)v26;
  v27 = CGImageGetWidth(a1);
  v28 = CGImageGetHeight(a1);
  *v11 = (double)v27;
  v11[1] = (double)v28;
  return v15;
}

id BoundingBox.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BoundingBox.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BoundingBox.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BoundingBox();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_24970FAC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_24970FB0C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_24970FAEC(_QWORD *a1)
{
  return sub_24970F17C(a1);
}

void *sub_24970FB0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  objc_super v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A578);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24970FD28();
  sub_24972D2F0();
  if (!v1)
  {
    type metadata accessor for CGRect(0);
    v21 = 0;
    sub_2496CED84(&qword_25787A580, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_24972D14C();
    v8 = v22;
    v9 = v23;
    v10 = v24;
    v11 = v25;
    type metadata accessor for CGSize(0);
    v21 = 1;
    sub_2496CED84(&qword_25787A588, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
    sub_24972D14C();
    v13 = v22;
    v14 = v23;
    v15 = (objc_class *)type metadata accessor for BoundingBox();
    v16 = (char *)objc_allocWithZone(v15);
    v17 = &v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *(_QWORD *)v17 = v8;
    *((_QWORD *)v17 + 1) = v9;
    *((_QWORD *)v17 + 2) = v10;
    *((_QWORD *)v17 + 3) = v11;
    v18 = &v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v18 = v13;
    *((_QWORD *)v18 + 1) = v14;
    v20.receiver = v16;
    v20.super_class = v15;
    v7 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_24970FD28()
{
  unint64_t result;

  result = qword_25787A550;
  if (!qword_25787A550)
  {
    result = MEMORY[0x24BCF7648](&unk_249730C2C, &type metadata for BoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A550);
  }
  return result;
}

__n128 sub_24970FD6C@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

__n128 sub_24970FDBC(__n128 *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = *a2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  result = v6;
  *(__n128 *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  return result;
}

__n128 sub_24970FE20@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  swift_beginAccess();
  result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_24970FE70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
  result = swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t method lookup function for BoundingBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BoundingBox.rect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of BoundingBox.rect.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of BoundingBox.rect.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BoundingBox.imageSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BoundingBox.imageSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BoundingBox.imageSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BoundingBox.top.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BoundingBox.left.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BoundingBox.width.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BoundingBox.height.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BoundingBox.right.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BoundingBox.bottom.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BoundingBox.area.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BoundingBox.center.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BoundingBox.__allocating_init(rect:imageSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of BoundingBox.contained(by:minOverlapRatio:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BoundingBox.iou(other:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BoundingBox.distance(other:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BoundingBox.normalizedDistance(other:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BoundingBox.xDistance(other:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of BoundingBox.yDistance(other:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of BoundingBox.yOverlap(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BoundingBox.containedInRange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BoundingBox.normalizedRect()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of BoundingBox.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of BoundingBox.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BoundingBox.enlarge(rect:by:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BoundingBox.scale(xScale:yScale:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of BoundingBox.flipXY()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of BoundingBox.mapSquareBoxToOriginal(originalImage:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t storeEnumTagSinglePayload for BoundingBox.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24971025C + 4 * byte_249730AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249710290 + 4 * byte_249730AB0[v4]))();
}

uint64_t sub_249710290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249710298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2497102A0);
  return result;
}

uint64_t sub_2497102AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2497102B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2497102B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497102C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BoundingBox.CodingKeys()
{
  return &type metadata for BoundingBox.CodingKeys;
}

unint64_t sub_2497102E0()
{
  unint64_t result;

  result = qword_25787A560;
  if (!qword_25787A560)
  {
    result = MEMORY[0x24BCF7648](&unk_249730C04, &type metadata for BoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A560);
  }
  return result;
}

unint64_t sub_249710328()
{
  unint64_t result;

  result = qword_25787A568;
  if (!qword_25787A568)
  {
    result = MEMORY[0x24BCF7648](&unk_249730B3C, &type metadata for BoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A568);
  }
  return result;
}

unint64_t sub_249710370()
{
  unint64_t result;

  result = qword_25787A570;
  if (!qword_25787A570)
  {
    result = MEMORY[0x24BCF7648](&unk_249730B64, &type metadata for BoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A570);
  }
  return result;
}

uint64_t UIUGrouper.__allocating_init(platform:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_2497103E4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24BCF6CF4](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_24971688C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for CenterNetPrediction, &qword_25787A598, &qword_25787A590, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972B9F4);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_24972CCE4();
  }
  __break(1u);
  return result;
}

uint64_t sub_2497105BC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_24970A638(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249710704(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24BCF6CF4](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_24971667C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for UIFingerprintingDetectionInfo, &qword_25787A5D0, &qword_25787A5C8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972BA4C);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_24972CCE4();
  }
  __break(1u);
  return result;
}

uint64_t sub_2497108DC(unint64_t a1)
{
  return sub_249710900(a1, (unint64_t *)type metadata accessor for DedupeElement, &qword_25787A5C0, &qword_25787A5B8, (uint64_t *)sub_24972BAA0);
}

uint64_t sub_249710900(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_23;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x24BCF6CF4](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_15:
    result = sub_24971667C(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v17 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_24972CCE4();
  }
  __break(1u);
  return result;
}

uint64_t sub_249710B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_24970AA68(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[4 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 32 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249710C54(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x24BCF6CF4](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_24971688C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for OCRDetection, &qword_25787A5B0, &qword_25787A5A8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972BAF4);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_24972CCE4();
  }
  __break(1u);
  return result;
}

uint64_t sub_249710E2C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_24970AB74(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_24972C960();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t UIUGrouper.__allocating_init(shape:)(uint64_t a1)
{
  _BOOL8 v1;
  uint64_t result;

  v1 = a1 != 2;
  type metadata accessor for UIUGrouper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t UIUGrouper.init(platform:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void sub_249710FD4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v7;
  double v8;
  double v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double MinY;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  double v22;
  void **v23;
  char *v24;
  CGRect *v25;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  char *v30;
  char *v31;
  double v32;
  double v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double v45[2];
  CGRect v46;
  CGRect v47;

  v7 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_51;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return;
  while (1)
  {
    v8 = (double)(uint64_t)a3;
    v9 = (double)(uint64_t)a3 * 0.85;
    v45[0] = v9;
    if ((unint64_t)(*(_QWORD *)(v3 + 16) - 1) <= 1)
    {
      v9 = v8 * 0.9;
      v45[0] = v8 * 0.9;
    }
    if (v7)
    {
      if (a1 < 0)
        v3 = a1;
      else
        v3 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v10 = sub_24972D0BC();
      if (!v10)
        goto LABEL_41;
    }
    else
    {
      v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10)
        goto LABEL_41;
    }
    v44 = a3;
    if ((a1 & 0xC000000000000001) == 0)
      break;
    v43 = a2;
    v11 = 0;
    a2 = 0x43E0000000000000;
    while (1)
    {
      v12 = MEMORY[0x24BCF6CE8](v11, a1);
      v7 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      a3 = (char *)v12;
      v3 = v12 + OBJC_IVAR___UIObjectCompat_detection;
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 9)
      {
        v13 = &a3[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v3 = *(_QWORD *)v13 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        MinY = CGRectGetMinY(*(CGRect *)v3);
        if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
          goto LABEL_45;
        if (MinY <= -9.22337204e18)
          goto LABEL_46;
        if (MinY >= 9.22337204e18)
          goto LABEL_47;
        if (v9 <= (double)(uint64_t)MinY)
        {
          swift_bridgeObjectRelease();
          a2 = v43;
          goto LABEL_32;
        }
      }
      swift_unknownObjectRelease();
      ++v11;
      if (v7 == v10)
        goto LABEL_41;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_bridgeObjectRetain();
    v42 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (!v42)
      return;
  }
  v15 = 0;
  v7 = 0x43E0000000000000;
  while (1)
  {
    v16 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_44;
    a3 = *(char **)(a1 + 8 * v15 + 32);
    v3 = (uint64_t)&a3[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v3 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 9)
      break;
LABEL_24:
    ++v15;
    if (v16 == v10)
      goto LABEL_41;
  }
  v17 = &a3[OBJC_IVAR___UIObjectCompat_boundingBox];
  swift_beginAccess();
  v3 = *(_QWORD *)v17 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
  swift_beginAccess();
  v18 = *(double *)v3;
  v19 = *(double *)(v3 + 8);
  v20 = *(double *)(v3 + 16);
  v21 = *(double *)(v3 + 24);
  a3 = a3;
  v46.origin.x = v18;
  v46.origin.y = v19;
  v46.size.width = v20;
  v46.size.height = v21;
  v22 = CGRectGetMinY(v46);
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
    goto LABEL_48;
  if (v22 <= -9.22337204e18)
    goto LABEL_49;
  if (v22 >= 9.22337204e18)
    goto LABEL_50;
  if (v9 > (double)(uint64_t)v22)
  {

    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_32:
  v23 = (void **)&a3[OBJC_IVAR___UIObjectCompat_boundingBox];
  swift_beginAccess();
  v24 = (char *)*v23;
  v25 = (CGRect *)&v24[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  x = v25->origin.x;
  y = v25->origin.y;
  width = v25->size.width;
  height = v25->size.height;
  v30 = a3;
  v31 = v24;
  v47.origin.x = x;
  v47.origin.y = y;
  v47.size.width = width;
  v47.size.height = height;
  v32 = CGRectGetMinY(v47);
  if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v32 >= 9.22337204e18)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v33 = CGRectGetMinY(*v25);
  if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (__OFSUB__(v44, (uint64_t)v33))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v25->origin.x = 0.0;
  v25->origin.y = (double)(uint64_t)v32;
  v25->size.width = (double)a2;
  v25->size.height = (double)(uint64_t)&v44[-(uint64_t)v33];
  if (v10 < 0)
  {
LABEL_60:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v34 = v31;
  sub_2497178DC(0, v10, a1, (uint64_t)v45, (uint64_t)v34);
  v36 = v35;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  v37 = swift_bridgeObjectRetain();
  sub_249716C34(v37, a1);
  v39 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(v39 + 16);
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v36 + 16);

  if (v40 != v41)
    return;
LABEL_41:
  swift_bridgeObjectRelease();
}

void sub_249711540(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  char *v8;
  void *v9;
  id *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id *v15;
  char *v16;
  CGRect *v17;
  double MinY;
  char *v19;
  void *v20;
  id *v21;
  id v22;

  v6 = *a1;
  v7 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = (char *)*(id *)(a2 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_20;
  }
  v8 = (char *)MEMORY[0x24BCF6CE8](*a1, a2);
LABEL_5:
  v9 = v8;
  v10 = (id *)&v8[OBJC_IVAR___UIObjectCompat_detection];
  swift_beginAccess();
  v11 = (char *)*v10;

  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label];
  if (v12 == 4)
  {
    if (v7)
    {
LABEL_7:
      v13 = (char *)MEMORY[0x24BCF6CE8](v6, a2);
      goto LABEL_10;
    }
  }
  else if (v7)
  {
    goto LABEL_7;
  }
  v13 = (char *)*(id *)(a2 + 8 * v6 + 32);
LABEL_10:
  v14 = v13;
  v15 = (id *)&v13[OBJC_IVAR___UIObjectCompat_boundingBox];
  swift_beginAccess();
  v16 = (char *)*v15;

  v17 = (CGRect *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
  swift_beginAccess();
  MinY = CGRectGetMinY(*v17);

  if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    return;
  }
  if (v7)
    v19 = (char *)MEMORY[0x24BCF6CE8](v6, a2);
  else
    v19 = (char *)*(id *)(a2 + 8 * v6 + 32);
  v20 = v19;
  v21 = (id *)&v19[OBJC_IVAR___UIObjectCompat_boundingBox];
  swift_beginAccess();
  v22 = *v21;

  sub_24970E640(a4, 0.5);
}

uint64_t sub_24971179C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void **v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  CGRect *v25;
  double Height;
  CGRect *v27;
  double MinX;
  double v29;
  uint64_t v31;
  uint64_t v32;
  CGRect *v33;
  double MinY;
  CGRect *v35;
  double Width;
  BOOL v37;
  uint64_t v38;
  CGRect *v39;
  double v40;
  double v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  objc_class *v45;
  char *v46;
  double *v47;
  char *v48;
  id v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  void *v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t i;
  char *v85;
  void *v86;
  char *v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  CGRect *v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  objc_super v106;
  uint64_t v107[3];
  unint64_t v108;
  uint64_t v109[3];
  uint64_t v110;
  unint64_t v111;

  v4 = v3;
  v7 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
  {
LABEL_72:
    v51 = swift_bridgeObjectRetain();
    v8 = (uint64_t)sub_2496F1168(v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v109[0] = v8;
  sub_2496E8E5C(v109, (void (*)(_QWORD *))sub_24971321C);
  v9 = v109[0];
  v111 = v109[0];
  v10 = swift_bridgeObjectRetain();
  sub_249710FD4(v10, a2, (char *)a3);
  v12 = v11;
  swift_release();
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249717A1C(v12, v9);
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = sub_249716DCC(v12, v14);
  swift_bridgeObjectRelease_n();
  v96 = v14;
  swift_bridgeObjectRelease();
  v109[0] = v15;
  swift_bridgeObjectRetain_n();
  sub_249712610(v109, (uint64_t *)&v111);
  swift_bridgeObjectRelease_n();
  v16 = v109[0];
  v110 = v109[0];
  v17 = *(_QWORD *)(v109[0] + 16);
  if (!v17)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_138;
  }
  v93 = v7;
  v92 = (CGRect *)a2;
  v94 = a3;
  v109[0] = MEMORY[0x24BEE4AF8];
  v103 = v16;
  swift_retain();
  sub_24972D038();
  v18 = 0;
  a3 = v111;
  v7 = v111 & 0xC000000000000001;
  do
  {
    v19 = *(_QWORD *)(v103 + 8 * v18 + 32);
    if (v7)
    {
      v20 = (id)MEMORY[0x24BCF6CE8](v19, a3);
    }
    else
    {
      if ((v19 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (v19 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_51;
      v20 = *(id *)(a3 + 32 + 8 * v19);
    }
    a2 = (uint64_t)v20;
    ++v18;
    sub_24972D020();
    sub_24972D044();
    sub_24972D050();
    sub_24972D02C();
  }
  while (v17 != v18);
  v21 = v109[0];
  swift_release();
  v7 = v94;
  if ((char *)v4[2] - 1 < (char *)2)
  {
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      a2 = sub_24972D0BC();
      if (a2)
        goto LABEL_18;
    }
    else
    {
      a2 = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      if (a2)
      {
LABEL_18:
        if (a2 < 1)
        {
          __break(1u);
LABEL_149:
          swift_bridgeObjectRetain();
          v83 = sub_24972D0BC();
          if (v83)
          {
LABEL_126:
            if (v83 < 1)
            {
              __break(1u);
LABEL_154:
              sub_24972D0F8();
              __break(1u);
              swift_release();
              __break(1u);
              swift_release();
              __break(1u);
              result = swift_release();
              __break(1u);
              return result;
            }
            for (i = 0; i != v83; ++i)
            {
              if ((v18 & 0xC000000000000001) != 0)
                v85 = (char *)MEMORY[0x24BCF6CE8](i, v18);
              else
                v85 = (char *)*(id *)(v18 + 8 * i + 32);
              v86 = v85;
              v87 = &v85[OBJC_IVAR___UIObjectCompat_detection];
              swift_beginAccess();
              if (*(_QWORD *)(*(_QWORD *)v87 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 9)
              {

              }
              else
              {
                sub_24972D020();
                sub_24972D044();
                sub_24972D050();
                sub_24972D02C();
              }
            }
            swift_bridgeObjectRelease();
            v7 = v108;
          }
          else
          {
LABEL_150:
            swift_bridgeObjectRelease();
            v7 = MEMORY[0x24BEE4AF8];
          }
          swift_bridgeObjectRelease();
          swift_release();
          return v7;
        }
        v22 = 0;
        v104 = v21 & 0xC000000000000001;
        a3 = 0x7FF0000000000000;
        while (1)
        {
          v23 = v104 ? (char *)MEMORY[0x24BCF6CE8](v22, v21) : (char *)*(id *)(v21 + 8 * v22 + 32);
          v24 = v23;
          v4 = (void **)&v23[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v25 = (CGRect *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          Height = CGRectGetHeight(*v25);
          if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
            goto LABEL_52;
          if (Height <= -9.22337204e18)
            goto LABEL_53;
          if (Height >= 9.22337204e18)
            goto LABEL_54;
          v27 = (CGRect *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          MinX = CGRectGetMinX(*v27);
          if (MinX <= -9.22337204e18)
            goto LABEL_55;
          if (MinX >= 9.22337204e18)
            goto LABEL_56;
          v29 = (double)(uint64_t)Height * 0.5;
          a3 = 0x7FF0000000000000;
          if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0
            || (*(_QWORD *)&MinX & 0x7FF0000000000000) == 0x7FF0000000000000)
          {
            goto LABEL_57;
          }
          if (v29 <= -9.22337204e18)
            goto LABEL_58;
          if (v29 >= 9.22337204e18)
            goto LABEL_59;
          v7 = v21;
          v31 = (uint64_t)v29;
          v32 = (uint64_t)MinX - (uint64_t)v29;
          if (__OFSUB__((uint64_t)MinX, (uint64_t)v29))
            goto LABEL_60;
          v33 = (CGRect *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          MinY = CGRectGetMinY(*v33);
          if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
            goto LABEL_61;
          if (MinY <= -9.22337204e18)
            goto LABEL_62;
          if (MinY >= 9.22337204e18)
            goto LABEL_63;
          v35 = (CGRect *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          Width = CGRectGetWidth(*v35);
          if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
            goto LABEL_64;
          if (Width <= -9.22337204e18)
            goto LABEL_65;
          if (Width >= 9.22337204e18)
            goto LABEL_66;
          if (v31 + 0x4000000000000000 < 0)
            goto LABEL_67;
          v37 = __OFADD__((uint64_t)Width, 2 * v31);
          v38 = (uint64_t)Width + 2 * v31;
          if (v37)
            goto LABEL_68;
          v39 = (CGRect *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          v40 = CGRectGetHeight(*v39);
          if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
            goto LABEL_69;
          if (v40 <= -9.22337204e18)
            goto LABEL_70;
          if (v40 >= 9.22337204e18)
            goto LABEL_71;
          ++v22;
          v41 = (double)(uint64_t)v40;
          v42 = (uint64_t *)((char *)*v4 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize);
          swift_beginAccess();
          v43 = *v42;
          v44 = v42[1];
          v45 = (objc_class *)type metadata accessor for BoundingBox();
          v46 = (char *)objc_allocWithZone(v45);
          v47 = (double *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          *v47 = (double)v32;
          v47[1] = (double)(uint64_t)MinY;
          v47[2] = (double)v38;
          v47[3] = v41;
          v48 = &v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
          *(_QWORD *)v48 = v43;
          *((_QWORD *)v48 + 1) = v44;
          v106.receiver = v46;
          v106.super_class = v45;
          v49 = objc_msgSendSuper2(&v106, sel_init);
          v50 = *v4;
          *v4 = v49;

          v21 = v7;
          if (a2 == v22)
          {
            swift_release();
            v7 = v94;
            goto LABEL_75;
          }
        }
      }
    }
    swift_release();
  }
LABEL_75:
  sub_249717E8C(v21);
  v53 = v52;
  swift_release();
  if (v53 >> 62)
    goto LABEL_145;
  v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v54)
    goto LABEL_137;
  swift_bridgeObjectRetain();
  v91 = v54;
LABEL_78:
  v55 = 0;
  v101 = v53 & 0xC000000000000001;
  v97 = v53 + 32;
  v98 = v53 & 0xFFFFFFFFFFFFFF8;
  v56 = 1;
  v99 = v54;
  v100 = v53;
  while (2)
  {
    v95 = v56;
    while (1)
    {
      if (v101)
      {
        v57 = (char *)MEMORY[0x24BCF6CE8](v55, v53);
        v37 = __OFADD__(v55++, 1);
        if (v37)
          goto LABEL_141;
      }
      else
      {
        if (v55 >= *(_QWORD *)(v98 + 16))
          goto LABEL_143;
        v57 = (char *)*(id *)(v97 + 8 * v55);
        v37 = __OFADD__(v55++, 1);
        if (v37)
          goto LABEL_141;
      }
      v105 = v57;
      v58 = &v57[OBJC_IVAR___UIObjectCompat_children];
      swift_beginAccess();
      v59 = *(_QWORD *)v58;
      if (*(_QWORD *)v58 >> 62)
      {
        swift_bridgeObjectRetain();
        v60 = sub_24972D0BC();
        if (!v60)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          v62 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v68 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          if (!v68)
            goto LABEL_79;
          goto LABEL_102;
        }
      }
      else
      {
        v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v60)
          goto LABEL_101;
      }
      v107[0] = MEMORY[0x24BEE4AF8];
      sub_2496D5A44(0, v60 & ~(v60 >> 63), 0);
      if (v60 < 0)
        goto LABEL_142;
      v102 = v55;
      v61 = 0;
      v62 = (_QWORD *)v107[0];
      do
      {
        if ((v59 & 0xC000000000000001) != 0)
          v63 = (char *)MEMORY[0x24BCF6CE8](v61, v59);
        else
          v63 = (char *)*(id *)(v59 + 8 * v61 + 32);
        v64 = v63;
        v65 = &v63[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        v7 = *(_QWORD *)(*(_QWORD *)v65 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);

        v107[0] = (uint64_t)v62;
        v67 = v62[2];
        v66 = v62[3];
        if (v67 >= v66 >> 1)
        {
          sub_2496D5A44(v66 > 1, v67 + 1, 1);
          v62 = (_QWORD *)v107[0];
        }
        ++v61;
        v62[2] = v67 + 1;
        v62[v67 + 4] = v7;
      }
      while (v60 != v61);
      swift_bridgeObjectRelease();
      v54 = v99;
      v53 = v100;
      v55 = v102;
      v68 = v62[2];
      if (!v68)
        goto LABEL_79;
LABEL_102:
      if (v62[4] != 10)
      {
        if (v68 == 1)
          goto LABEL_79;
        if (v62[5] != 10)
        {
          if (v68 == 2)
            goto LABEL_79;
          if (v62[6] != 10)
            break;
        }
      }
LABEL_81:
      swift_bridgeObjectRelease();

      if (v55 == v54)
      {
        swift_bridgeObjectRelease();
        v7 = v94;
        if ((v91 < 6) | v95 & 1)
          goto LABEL_114;
        goto LABEL_137;
      }
    }
    if (v68 != 3)
    {
      v69 = 7;
      while (1)
      {
        v70 = v69 - 3;
        if (__OFADD__(v69 - 4, 1))
          break;
        if (v62[v69] == 10)
          goto LABEL_81;
        ++v69;
        if (v70 == v68)
          goto LABEL_79;
      }
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_145:
        swift_bridgeObjectRetain();
        v89 = sub_24972D0BC();
        swift_bridgeObjectRelease();
        if (v89 < 1)
          goto LABEL_137;
        v91 = v89;
        swift_bridgeObjectRetain();
        v90 = sub_24972D0BC();
        if (v90)
        {
          v54 = v90;
          goto LABEL_78;
        }
        swift_bridgeObjectRelease();
LABEL_114:
        sub_2497105BC(v96);
        v107[0] = v110;
        swift_bridgeObjectRetain_n();
        sub_249712680(v107);
        swift_bridgeObjectRelease_n();
        v71 = v107[0];
        v72 = *(_QWORD *)(v107[0] + 16);
        if (!v72)
        {
LABEL_124:
          v82 = sub_249718E48(v53, v92, v7);
          swift_bridgeObjectRelease();
          sub_249710900(v82, (unint64_t *)type metadata accessor for UIObject, &qword_25787A5A0, &qword_25787A248, (uint64_t *)sub_24972BA4C);
          v18 = v111;
          v108 = MEMORY[0x24BEE4AF8];
          if (v111 >> 62)
            goto LABEL_149;
          v83 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v83)
            goto LABEL_150;
          goto LABEL_126;
        }
        swift_retain();
        v73 = 0;
        while (1)
        {
          v74 = *(_QWORD *)(v71 + 8 * v73 + 32);
          v75 = v111;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || (v75 & 0x8000000000000000) != 0
            || (v75 & 0x4000000000000000) != 0)
          {
            sub_2496F72FC(v75);
          }
          v76 = v75 & 0xFFFFFFFFFFFFFF8;
          v77 = *(_QWORD *)(v76 + 16);
          if (v74 >= v77)
            break;
          v78 = v77 - 1;
          v79 = v77 - 1 - v74;
          if (v79 < 0)
            goto LABEL_154;
          ++v73;
          v80 = v76 + 8 * v74;
          v81 = *(void **)(v80 + 32);
          memmove((void *)(v80 + 32), (const void *)(v80 + 40), 8 * v79);
          *(_QWORD *)(v76 + 16) = v78;
          sub_24972CCE4();

          if (v72 == v73)
          {
            swift_release();
            goto LABEL_124;
          }
        }
      }
    }
LABEL_79:
    swift_bridgeObjectRelease();

    v56 = 0;
    if (v55 != v54)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v7 = v94;
  if (v91 <= 5)
    goto LABEL_114;
LABEL_137:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v7 = v93;
LABEL_138:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_249712490(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  id v3;
  uint64_t *v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id *v15;
  id v16;

  v6 = *a1;
  v7 = *a2;
  v8 = *a3;
  if ((*a3 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  v9 = (char *)MEMORY[0x24BCF6CE8](v6);
LABEL_5:
  v10 = v9;
  v4 = &OBJC_IVAR___UIObjectCompat_boundingBox;
  v11 = (id *)&v9[OBJC_IVAR___UIObjectCompat_boundingBox];
  swift_beginAccess();
  v3 = *v11;

  v12 = *a3;
  if ((*a3 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v13 = (char *)MEMORY[0x24BCF6CE8](v7);
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = (char *)*(id *)(v12 + 8 * v7 + 32);
LABEL_9:
    v14 = v13;
    v15 = (id *)&v13[*v4];
    swift_beginAccess();
    v16 = *v15;

    sub_24971EEBC((uint64_t)v3, (uint64_t)v16);
    return;
  }
  __break(1u);
}

uint64_t UIUGrouper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UIUGrouper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIUGrouper()
{
  return objc_opt_self();
}

void sub_249712610(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_24971EE80(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v6[0] = v4 + 32;
  v6[1] = v5;
  sub_24971446C(v6, a2);
  *a1 = v4;
}

uint64_t sub_249712680(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24971EE80(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_249713DE4(v5);
  *a1 = v2;
  return result;
}

void sub_2497126E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void **v15;
  char *v16;
  void **v17;
  void *v18;
  CGFloat *v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  double MinX;
  CGRect *v29;
  double v30;
  void **v31;
  void *v32;
  char *v33;
  void **v34;
  char *v35;
  void **v36;
  void *v37;
  CGFloat *v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  id v43;
  char *v44;
  char *v45;
  char *v46;
  double v47;
  CGRect *v48;
  double v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void **v60;
  char *v61;
  void **v62;
  void *v63;
  CGFloat *v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  double v73;
  CGRect *v74;
  double v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void **__dst;
  uint64_t v152;
  uint64_t v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_24972D1B8();
  if (v5 >= v4)
  {
    if (v4 < 0)
    {
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
      goto LABEL_176;
    }
    if (v4)
      sub_249714F20(0, v4, 1, a1);
  }
  else
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
    {
LABEL_176:
      sub_24972D074();
      __break(1u);
      return;
    }
    v139 = v5;
    v136 = a1;
    if (v4 >= 2)
    {
      v7 = v6 >> 1;
      type metadata accessor for UIObject();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v153 = v8;
LABEL_12:
      v10 = 0;
      v11 = *a1;
      v138 = *a1 + 16;
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v137 = *a1 - 8;
      v150 = v4;
      v152 = *a1;
      while (1)
      {
        v12 = v10 + 1;
        v144 = v10;
        if (v10 + 1 < v4)
        {
          v140 = v9;
          v142 = v2;
          v13 = *(char **)(v11 + 8 * v12);
          v14 = *(char **)(v11 + 8 * v10);
          v15 = (void **)&v13[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v16 = (char *)*v15;
          v17 = (void **)&v14[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v18 = *v17;
          v19 = (CGFloat *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v20 = *v19;
          v21 = v19[1];
          v22 = v19[2];
          v23 = v19[3];
          v24 = v13;
          v25 = v14;
          v26 = v16;
          v27 = v18;
          v154.origin.x = v20;
          v154.origin.y = v21;
          v154.size.width = v22;
          v154.size.height = v23;
          MinX = CGRectGetMinX(v154);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_161;
          if (MinX <= -9.22337204e18)
            goto LABEL_162;
          if (MinX >= 9.22337204e18)
            goto LABEL_163;
          v29 = (CGRect *)&v27[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v30 = CGRectGetMinX(*v29);

          if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
            goto LABEL_164;
          if (v30 <= -9.22337204e18)
            goto LABEL_165;
          if (v30 >= 9.22337204e18)
            goto LABEL_166;
          v147 = (uint64_t)MinX;

          v145 = (uint64_t)v30;
          v10 = v144;
          v12 = v144 + 2;
          v4 = v150;
          if (v144 + 2 < v150)
          {
            v31 = (void **)(v138 + 8 * v144);
            do
            {
              v33 = (char *)*(v31 - 1);
              v32 = *v31;
              v34 = (void **)((char *)*v31 + OBJC_IVAR___UIObjectCompat_boundingBox);
              swift_beginAccess();
              v35 = (char *)*v34;
              v36 = (void **)&v33[OBJC_IVAR___UIObjectCompat_boundingBox];
              swift_beginAccess();
              v37 = *v36;
              v38 = (CGFloat *)&v35[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              v39 = *v38;
              v40 = v38[1];
              v41 = v38[2];
              v42 = v38[3];
              v43 = v32;
              v44 = v33;
              v45 = v35;
              v46 = v37;
              v155.origin.x = v39;
              v155.origin.y = v40;
              v155.size.width = v41;
              v155.size.height = v42;
              v47 = CGRectGetMinX(v155);
              if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
                goto LABEL_139;
              if (v47 <= -9.22337204e18)
                goto LABEL_140;
              if (v47 >= 9.22337204e18)
                goto LABEL_141;
              v48 = (CGRect *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              v49 = CGRectGetMinX(*v48);

              if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) == 0)
                goto LABEL_142;
              if (v49 <= -9.22337204e18)
                goto LABEL_143;
              if (v49 >= 9.22337204e18)
                goto LABEL_144;

              if (v145 >= v147 == (uint64_t)v49 < (uint64_t)v47)
                goto LABEL_31;
              ++v12;
              ++v31;
            }
            while (v150 != v12);
            v12 = v150;
LABEL_31:
            v10 = v144;
          }
          v9 = v140;
          v2 = v142;
          v11 = v152;
          if (v145 >= v147)
          {
            if (v12 < v10)
              goto LABEL_171;
            if (v10 < v12)
            {
              v50 = (uint64_t *)(v137 + 8 * v12);
              v51 = v12;
              v52 = v10;
              v53 = (uint64_t *)(v152 + 8 * v10);
              do
              {
                if (v52 != --v51)
                {
                  if (!v152)
                    goto LABEL_174;
                  v54 = *v53;
                  *v53 = *v50;
                  *v50 = v54;
                }
                ++v52;
                --v50;
                ++v53;
              }
              while (v52 < v51);
            }
          }
        }
        if (v12 >= v4)
          goto LABEL_64;
        if (__OFSUB__(v12, v10))
          goto LABEL_167;
        if (v12 - v10 >= v139)
          goto LABEL_64;
        if (__OFADD__(v10, v139))
          goto LABEL_169;
        if (v10 + v139 >= v4)
          v55 = v4;
        else
          v55 = v10 + v139;
        if (v55 < v10)
          goto LABEL_170;
        if (v12 == v55)
          goto LABEL_64;
        v141 = v9;
        v143 = v2;
        v56 = v137 + 8 * v12;
        v146 = v55;
        while (2)
        {
          v57 = *(char **)(v11 + 8 * v12);
          v148 = v56;
          while (1)
          {
            v58 = v12;
            v59 = *(char **)v56;
            v60 = (void **)&v57[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v61 = (char *)*v60;
            v62 = (void **)&v59[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v63 = *v62;
            v64 = (CGFloat *)&v61[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            v65 = *v64;
            v66 = v64[1];
            v67 = v64[2];
            v68 = v64[3];
            v69 = v57;
            v70 = v59;
            v71 = v61;
            v72 = v63;
            v156.origin.x = v65;
            v156.origin.y = v66;
            v156.size.width = v67;
            v156.size.height = v68;
            v73 = CGRectGetMinX(v156);
            if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
            {
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
              goto LABEL_156;
            }
            if (v73 <= -9.22337204e18)
              goto LABEL_130;
            if (v73 >= 9.22337204e18)
              goto LABEL_131;
            v74 = (CGRect *)&v72[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            v75 = CGRectGetMinX(*v74);

            if ((~*(_QWORD *)&v75 & 0x7FF0000000000000) == 0)
              goto LABEL_132;
            if (v75 <= -9.22337204e18)
              goto LABEL_133;
            if (v75 >= 9.22337204e18)
              goto LABEL_134;

            if ((uint64_t)v75 < (uint64_t)v73)
              break;
            v11 = v152;
            if (!v152)
              goto LABEL_172;
            v12 = v58;
            v76 = *(char **)v56;
            v57 = *(char **)(v56 + 8);
            *(_QWORD *)v56 = v57;
            *(_QWORD *)(v56 + 8) = v76;
            v56 -= 8;
            if (v58 == ++v10)
              goto LABEL_51;
          }
          v11 = v152;
          v12 = v58;
LABEL_51:
          ++v12;
          v56 = v148 + 8;
          v10 = v144;
          if (v12 != v146)
            continue;
          break;
        }
        v12 = v146;
        v9 = v141;
        v2 = v143;
        v4 = v150;
LABEL_64:
        if (v12 < v10)
          goto LABEL_160;
        v149 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24971DB80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v78 = *((_QWORD *)v9 + 2);
        v77 = *((_QWORD *)v9 + 3);
        v79 = v78 + 1;
        v11 = v152;
        v80 = v2;
        if (v78 >= v77 >> 1)
        {
          v129 = sub_24971DB80((char *)(v77 > 1), v78 + 1, 1, v9);
          v11 = v152;
          v9 = v129;
        }
        *((_QWORD *)v9 + 2) = v79;
        v81 = v9 + 32;
        v82 = &v9[16 * v78 + 32];
        *(_QWORD *)v82 = v10;
        *((_QWORD *)v82 + 1) = v149;
        if (v78)
        {
          while (1)
          {
            v83 = v79 - 1;
            if (v79 >= 4)
            {
              v88 = &v81[16 * v79];
              v89 = *((_QWORD *)v88 - 8);
              v90 = *((_QWORD *)v88 - 7);
              v94 = __OFSUB__(v90, v89);
              v91 = v90 - v89;
              if (v94)
                goto LABEL_145;
              v93 = *((_QWORD *)v88 - 6);
              v92 = *((_QWORD *)v88 - 5);
              v94 = __OFSUB__(v92, v93);
              v86 = v92 - v93;
              v87 = v94;
              if (v94)
                goto LABEL_146;
              v95 = v79 - 2;
              v96 = &v81[16 * v79 - 32];
              v98 = *(_QWORD *)v96;
              v97 = *((_QWORD *)v96 + 1);
              v94 = __OFSUB__(v97, v98);
              v99 = v97 - v98;
              if (v94)
                goto LABEL_148;
              v94 = __OFADD__(v86, v99);
              v100 = v86 + v99;
              if (v94)
                goto LABEL_151;
              if (v100 >= v91)
              {
                v118 = &v81[16 * v83];
                v120 = *(_QWORD *)v118;
                v119 = *((_QWORD *)v118 + 1);
                v94 = __OFSUB__(v119, v120);
                v121 = v119 - v120;
                if (v94)
                  goto LABEL_155;
                v111 = v86 < v121;
                goto LABEL_101;
              }
            }
            else
            {
              if (v79 != 3)
              {
                v112 = *((_QWORD *)v9 + 4);
                v113 = *((_QWORD *)v9 + 5);
                v94 = __OFSUB__(v113, v112);
                v105 = v113 - v112;
                v106 = v94;
                goto LABEL_95;
              }
              v85 = *((_QWORD *)v9 + 4);
              v84 = *((_QWORD *)v9 + 5);
              v94 = __OFSUB__(v84, v85);
              v86 = v84 - v85;
              v87 = v94;
            }
            if ((v87 & 1) != 0)
              goto LABEL_147;
            v95 = v79 - 2;
            v101 = &v81[16 * v79 - 32];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v104 = __OFSUB__(v102, v103);
            v105 = v102 - v103;
            v106 = v104;
            if (v104)
              goto LABEL_150;
            v107 = &v81[16 * v83];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v94 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v94)
              goto LABEL_153;
            if (__OFADD__(v105, v110))
              goto LABEL_154;
            if (v105 + v110 >= v86)
            {
              v111 = v86 < v110;
LABEL_101:
              if (v111)
                v83 = v95;
              goto LABEL_103;
            }
LABEL_95:
            if ((v106 & 1) != 0)
              goto LABEL_149;
            v114 = &v81[16 * v83];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v94 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v94)
              goto LABEL_152;
            if (v117 < v105)
              goto LABEL_112;
LABEL_103:
            v122 = v83 - 1;
            if (v83 - 1 >= v79)
              goto LABEL_135;
            if (!v11)
              goto LABEL_173;
            v123 = v9;
            v124 = &v81[16 * v122];
            v125 = *(_QWORD *)v124;
            v126 = &v81[16 * v83];
            v127 = *((_QWORD *)v126 + 1);
            sub_249715410((char *)(v11 + 8 * *(_QWORD *)v124), (void **)(v11 + 8 * *(_QWORD *)v126), v11 + 8 * v127, __dst);
            if (v80)
              goto LABEL_127;
            if (v127 < v125)
              goto LABEL_136;
            if (v83 > *((_QWORD *)v123 + 2))
              goto LABEL_137;
            *(_QWORD *)v124 = v125;
            *(_QWORD *)&v81[16 * v122 + 8] = v127;
            v128 = *((_QWORD *)v123 + 2);
            if (v83 >= v128)
              goto LABEL_138;
            v9 = v123;
            v79 = v128 - 1;
            memmove(&v81[16 * v83], v126 + 16, 16 * (v128 - 1 - v83));
            *((_QWORD *)v123 + 2) = v128 - 1;
            v4 = v150;
            v11 = v152;
            if (v128 <= 2)
              goto LABEL_112;
          }
        }
        v79 = 1;
LABEL_112:
        v10 = v149;
        v2 = v80;
        if (v149 >= v4)
          goto LABEL_116;
      }
    }
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v153 = MEMORY[0x24BEE4AF8];
    __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 == 1)
      goto LABEL_12;
    v79 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
    if (v79 >= 2)
    {
      v130 = *v136;
      while (1)
      {
        v131 = v79 - 2;
        if (v79 < 2)
          break;
        if (!v130)
          goto LABEL_175;
        v132 = *(_QWORD *)&v9[16 * v131 + 32];
        v133 = *(_QWORD *)&v9[16 * v79 + 24];
        sub_249715410((char *)(v130 + 8 * v132), (void **)(v130 + 8 * *(_QWORD *)&v9[16 * v79 + 16]), v130 + 8 * v133, __dst);
        if (v2)
          goto LABEL_127;
        if (v133 < v132)
          goto LABEL_157;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24971DDC8((uint64_t)v9);
        if (v131 >= *((_QWORD *)v9 + 2))
          goto LABEL_158;
        v134 = &v9[16 * v131 + 32];
        *(_QWORD *)v134 = v132;
        *((_QWORD *)v134 + 1) = v133;
        v135 = *((_QWORD *)v9 + 2);
        if (v79 > v135)
          goto LABEL_159;
        memmove(&v9[16 * v79 + 16], &v9[16 * v79 + 32], 16 * (v135 - v79));
        *((_QWORD *)v9 + 2) = v135 - 1;
        v79 = v135 - 1;
        if (v135 <= 2)
          goto LABEL_127;
      }
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
LABEL_127:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v153 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24972CCE4();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24971321C(uint64_t **a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  _QWORD *v31;
  double v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  double v113;
  _QWORD *v114;
  char *v115;
  BOOL v116;
  char *v117;
  uint64_t v118;
  int64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  unint64_t v125;
  double v126;
  _QWORD *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  unint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  uint64_t **v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  char *v155;
  char *__dst;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;

  v2 = a1;
  v3 = (uint64_t)a1[1];
  result = sub_24972D1B8();
  v143 = v3;
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return result;
      v9 = *v2;
      v10 = -1;
      v11 = 1;
      for (i = v9; ; ++i)
      {
        v13 = v9[v11];
        v157 = v10;
        v14 = i;
        do
        {
          v15 = *v14;
          v16 = (_QWORD *)(v13 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          v17 = *(double *)(*v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
          v18 = (_QWORD *)(v15 + OBJC_IVAR___UIObjectCompat_detection);
          result = swift_beginAccess();
          if (*(double *)(*v18 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v17)
            break;
          if (!v9)
            goto LABEL_195;
          v19 = *v14;
          v13 = v14[1];
          *v14 = v13;
          v14[1] = v19;
          --v14;
          v20 = __CFADD__(v10++, 1);
        }
        while (!v20);
        ++v11;
        v10 = v157 - 1;
        if (v11 == v143)
          return result;
      }
    }
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    sub_24972D0F8();
    __break(1u);
LABEL_200:
    result = sub_24972D074();
    __break(1u);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_200;
  v141 = result;
  if (v3 < 2)
  {
    v21 = (char *)MEMORY[0x24BEE4AF8];
    v160 = MEMORY[0x24BEE4AF8];
    v8 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v25 < 2)
        goto LABEL_167;
LABEL_157:
      v133 = *v2;
      while (1)
      {
        v134 = v25 - 2;
        if (v25 < 2)
          break;
        if (!v133)
          goto LABEL_198;
        v135 = *(_QWORD *)&v21[16 * v134 + 32];
        v136 = *(_QWORD *)&v21[16 * v25 + 24];
        sub_2497159E0((char *)&v133[v135], (char *)&v133[*(_QWORD *)&v21[16 * v25 + 16]], (unint64_t)&v133[v136], v8);
        if (v1)
          goto LABEL_167;
        if (v136 < v135)
          goto LABEL_187;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_24971DDC8((uint64_t)v21);
        if (v134 >= *((_QWORD *)v21 + 2))
          goto LABEL_188;
        v137 = &v21[16 * v134 + 32];
        *(_QWORD *)v137 = v135;
        *((_QWORD *)v137 + 1) = v136;
        v138 = *((_QWORD *)v21 + 2);
        if (v25 > v138)
          goto LABEL_189;
        memmove(&v21[16 * v25 + 16], &v21[16 * v25 + 32], 16 * (v138 - v25));
        *((_QWORD *)v21 + 2) = v138 - 1;
        v25 = v138 - 1;
        if (v138 <= 2)
          goto LABEL_167;
      }
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
      goto LABEL_194;
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for UIObject();
    v7 = sub_24972CCFC();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v160 = v7;
  }
  __dst = v8;
  v22 = 0;
  v23 = *v2;
  v139 = v2;
  v140 = (uint64_t)(*v2 + 2);
  v144 = (uint64_t)(*v2 - 1);
  v21 = (char *)MEMORY[0x24BEE4AF8];
  v24 = v3;
  v154 = v23;
  do
  {
    v26 = v22;
    v27 = v22 + 1;
    v158 = v22;
    if (v22 + 1 < v24)
    {
      v28 = v23[v22];
      v29 = (_QWORD *)(v23[v27] + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v30 = *(double *)(*v29 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v31 = (_QWORD *)(v28 + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v32 = *(double *)(*v31 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v27 = v26 + 2;
      if (v26 + 2 < v24)
      {
        v33 = (_QWORD *)(v140 + 8 * v26);
        while (1)
        {
          v34 = *(v33 - 1);
          v35 = (_QWORD *)(*v33 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          v36 = *(double *)(*v35 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
          v37 = (_QWORD *)(v34 + OBJC_IVAR___UIObjectCompat_detection);
          swift_beginAccess();
          if (v32 < v30 == *(double *)(*v37 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v36)
            break;
          ++v27;
          ++v33;
          if (v24 == v27)
          {
            v27 = v24;
            break;
          }
        }
        v23 = v154;
        v26 = v158;
      }
      if (v32 < v30)
      {
        if (v27 < v26)
          goto LABEL_190;
        if (v26 < v27)
        {
          v38 = (uint64_t *)(v144 + 8 * v27);
          v39 = v27;
          v40 = v26;
          v41 = &v23[v26];
          do
          {
            if (v40 != --v39)
            {
              if (!v23)
                goto LABEL_197;
              v42 = *v41;
              *v41 = *v38;
              *v38 = v42;
            }
            ++v40;
            --v38;
            ++v41;
          }
          while (v40 < v39);
        }
      }
    }
    if (v27 < v24)
    {
      if (__OFSUB__(v27, v26))
        goto LABEL_185;
      if (v27 - v26 < v141)
      {
        if (__OFADD__(v26, v141))
          goto LABEL_191;
        if (v26 + v141 < v24)
          v24 = v26 + v141;
        if (v24 < v26)
          goto LABEL_192;
        if (v27 == v24)
        {
          v23 = v154;
        }
        else
        {
          v146 = v21;
          v43 = (uint64_t *)(v144 + 8 * v27);
          do
          {
            v44 = v27;
            v45 = v154[v27];
            v46 = v43;
            do
            {
              v47 = *v46;
              v48 = (_QWORD *)(v45 + OBJC_IVAR___UIObjectCompat_detection);
              swift_beginAccess();
              v49 = *(double *)(*v48 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
              v50 = (_QWORD *)(v47 + OBJC_IVAR___UIObjectCompat_detection);
              swift_beginAccess();
              if (*(double *)(*v50 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v49)
                break;
              if (!v154)
                goto LABEL_193;
              v51 = *v46;
              v45 = v46[1];
              *v46 = v45;
              v46[1] = v51;
              --v46;
              ++v26;
            }
            while (v44 != v26);
            v27 = v44 + 1;
            ++v43;
            v26 = v158;
          }
          while (v44 + 1 != v24);
          v27 = v24;
          v23 = v154;
          v21 = v146;
        }
      }
    }
    if (v27 < v26)
      goto LABEL_184;
    v142 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_24971DB80(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v53 = *((_QWORD *)v21 + 2);
    v52 = *((_QWORD *)v21 + 3);
    v25 = v53 + 1;
    if (v53 >= v52 >> 1)
      v21 = sub_24971DB80((char *)(v52 > 1), v53 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v25;
    v54 = v21 + 32;
    v55 = &v21[16 * v53 + 32];
    *(_QWORD *)v55 = v26;
    *((_QWORD *)v55 + 1) = v142;
    if (v53)
    {
      v145 = v21 + 32;
      v147 = v21;
      while (1)
      {
        v56 = v25 - 1;
        if (v25 >= 4)
        {
          v61 = &v54[16 * v25];
          v62 = *((_QWORD *)v61 - 8);
          v63 = *((_QWORD *)v61 - 7);
          v67 = __OFSUB__(v63, v62);
          v64 = v63 - v62;
          if (v67)
            goto LABEL_173;
          v66 = *((_QWORD *)v61 - 6);
          v65 = *((_QWORD *)v61 - 5);
          v67 = __OFSUB__(v65, v66);
          v59 = v65 - v66;
          v60 = v67;
          if (v67)
            goto LABEL_174;
          v68 = v25 - 2;
          v69 = &v54[16 * v25 - 32];
          v71 = *(_QWORD *)v69;
          v70 = *((_QWORD *)v69 + 1);
          v67 = __OFSUB__(v70, v71);
          v72 = v70 - v71;
          if (v67)
            goto LABEL_176;
          v67 = __OFADD__(v59, v72);
          v73 = v59 + v72;
          if (v67)
            goto LABEL_179;
          if (v73 >= v64)
          {
            v91 = &v54[16 * v56];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v67 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v67)
              goto LABEL_183;
            v84 = v59 < v94;
            goto LABEL_93;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v85 = *((_QWORD *)v21 + 4);
            v86 = *((_QWORD *)v21 + 5);
            v67 = __OFSUB__(v86, v85);
            v78 = v86 - v85;
            v79 = v67;
            goto LABEL_87;
          }
          v58 = *((_QWORD *)v21 + 4);
          v57 = *((_QWORD *)v21 + 5);
          v67 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          v60 = v67;
        }
        if ((v60 & 1) != 0)
          goto LABEL_175;
        v68 = v25 - 2;
        v74 = &v54[16 * v25 - 32];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v77 = __OFSUB__(v75, v76);
        v78 = v75 - v76;
        v79 = v77;
        if (v77)
          goto LABEL_178;
        v80 = &v54[16 * v56];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v67 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v67)
          goto LABEL_181;
        if (__OFADD__(v78, v83))
          goto LABEL_182;
        if (v78 + v83 >= v59)
        {
          v84 = v59 < v83;
LABEL_93:
          if (v84)
            v56 = v68;
          goto LABEL_95;
        }
LABEL_87:
        if ((v79 & 1) != 0)
          goto LABEL_177;
        v87 = &v54[16 * v56];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v67 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v67)
          goto LABEL_180;
        if (v90 < v78)
          goto LABEL_21;
LABEL_95:
        if (v56 - 1 >= v25)
        {
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (!v23)
          goto LABEL_196;
        v150 = v56 - 1;
        v149 = &v54[16 * v56 - 16];
        v95 = *(_QWORD *)v149;
        v96 = &v54[16 * v56];
        v97 = *(_QWORD *)v96;
        v148 = v96;
        v98 = (char *)&v23[*(_QWORD *)v149];
        v99 = (char *)&v23[*(_QWORD *)v96];
        v152 = v56;
        v153 = *((_QWORD *)v96 + 1);
        v100 = (unint64_t)&v23[v153];
        v101 = v99 - v98;
        v102 = v99 - v98 + 7;
        if (v99 - v98 >= 0)
          v102 = v99 - v98;
        v103 = v102 >> 3;
        v104 = v100 - (_QWORD)v99;
        v105 = v100 - (_QWORD)v99 + 7;
        if ((uint64_t)(v100 - (_QWORD)v99) >= 0)
          v105 = v100 - (_QWORD)v99;
        v106 = v105 >> 3;
        v151 = *(_QWORD *)v149;
        if (v103 >= v105 >> 3)
        {
          v117 = __dst;
          if (v104 < -7)
            goto LABEL_199;
          if ((unint64_t)__dst >= v100 || __dst != v99)
          {
            v118 = *(_QWORD *)v149;
            memmove(__dst, v99, 8 * v106);
            v117 = __dst;
            v95 = v118;
          }
          v108 = (unint64_t)&v117[8 * v106];
          v119 = v152;
          if (v95 >= v97 || v104 < 8)
          {
            v109 = v117;
            goto LABEL_143;
          }
          v120 = (char *)(v144 + 8 * v153);
          v155 = v98;
          while (2)
          {
            v121 = (char *)(v108 - 8);
            v159 = v120 + 8;
            v123 = v99 - 8;
            v122 = *((_QWORD *)v99 - 1);
            v124 = (_QWORD *)(*(_QWORD *)(v108 - 8) + OBJC_IVAR___UIObjectCompat_detection);
            v125 = v108;
            swift_beginAccess();
            v126 = *(double *)(*v124 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
            v127 = (_QWORD *)(v122 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(double *)(*v127 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) < v126)
            {
              v128 = (unint64_t)v155;
              if (v159 == v99)
              {
                v20 = v120 >= v99;
                v99 -= 8;
                v109 = __dst;
                v108 = v125;
                if (!v20)
                  goto LABEL_136;
              }
              else
              {
                v99 -= 8;
                v109 = __dst;
                v108 = v125;
              }
              goto LABEL_135;
            }
            v128 = (unint64_t)v155;
            v123 = v121;
            if (v159 != (char *)v125)
            {
              v108 = (unint64_t)v121;
              v109 = __dst;
              goto LABEL_135;
            }
            v108 = (unint64_t)v121;
            v109 = __dst;
            if ((unint64_t)v120 >= v125)
LABEL_135:
              *(_QWORD *)v120 = *(_QWORD *)v123;
LABEL_136:
            if (v128 >= (unint64_t)v99)
              goto LABEL_141;
            v120 -= 8;
            if ((unint64_t)v109 >= v108)
              goto LABEL_141;
            continue;
          }
        }
        v107 = __dst;
        if (v101 < -7)
          goto LABEL_199;
        if (__dst != v98 || __dst >= v99)
        {
          memmove(__dst, v98, 8 * v103);
          v107 = __dst;
        }
        v108 = (unint64_t)&v107[8 * v103];
        if (v97 < v153 && v101 >= 8)
        {
          v109 = __dst;
          while (1)
          {
            v110 = v108;
            v111 = *(_QWORD *)v109;
            v112 = (_QWORD *)(*(_QWORD *)v99 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            v113 = *(double *)(*v112 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
            v114 = (_QWORD *)(v111 + OBJC_IVAR___UIObjectCompat_detection);
            swift_beginAccess();
            if (*(double *)(*v114 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v113)
              break;
            v115 = v99;
            v116 = v98 == v99;
            v99 += 8;
            v108 = v110;
            if (!v116)
              goto LABEL_114;
LABEL_115:
            v98 += 8;
            if ((unint64_t)v109 >= v108 || (unint64_t)v99 >= v100)
              goto LABEL_140;
          }
          v115 = v109;
          v116 = v98 == v109;
          v109 += 8;
          v108 = v110;
          if (v116)
            goto LABEL_115;
LABEL_114:
          *(_QWORD *)v98 = *(_QWORD *)v115;
          goto LABEL_115;
        }
        v109 = __dst;
LABEL_140:
        v99 = v98;
LABEL_141:
        v119 = v152;
LABEL_143:
        v129 = v108 - (_QWORD)v109 + 7;
        if ((uint64_t)(v108 - (_QWORD)v109) >= 0)
          v129 = v108 - (_QWORD)v109;
        v21 = v147;
        if ((uint64_t)(v108 - (_QWORD)v109) <= -8)
          goto LABEL_199;
        v130 = v129 >> 3;
        v23 = v154;
        if (v99 != v109 || v99 >= &v109[8 * v130])
          memmove(v99, v109, 8 * v130);
        if (v153 < v151)
          goto LABEL_170;
        if (v119 > *((_QWORD *)v147 + 2))
          goto LABEL_171;
        *(_QWORD *)v149 = v151;
        v54 = v145;
        *(_QWORD *)&v145[16 * v150 + 8] = v153;
        v131 = v119;
        v132 = *((_QWORD *)v147 + 2);
        if (v131 >= (uint64_t)v132)
          goto LABEL_172;
        v25 = v132 - 1;
        memmove(v148, v148 + 16, 16 * (v132 - 1 - v131));
        *((_QWORD *)v147 + 2) = v132 - 1;
        if (v132 <= 2)
          goto LABEL_21;
      }
    }
    v25 = 1;
LABEL_21:
    v22 = v142;
    v24 = v143;
  }
  while (v142 < v143);
  v8 = __dst;
  v2 = v139;
  if (v25 >= 2)
    goto LABEL_157;
LABEL_167:
  swift_bridgeObjectRelease();
  *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_24972CCE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249713DE4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_24972D1B8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v83 >= v81)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_249715D40((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_24971DDC8((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_24972CCFC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (*v25 >= v23)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24971DB80(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_24971DB80((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_249715D40((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_24972D074();
  __break(1u);
  return result;
}

void sub_24971446C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id *v29;
  char *v30;
  CGRect *v31;
  double MinX;
  CGRect *v33;
  double v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  id *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void *v48;
  id *v49;
  char *v50;
  CGRect *v51;
  double v52;
  CGRect *v53;
  double v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t *v135;
  unint64_t v136;
  unint64_t v137;

  v5 = a1[1];
  v6 = sub_24972D1B8();
  if (v6 >= v5)
  {
    if (v5 < 0)
    {
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
      goto LABEL_205;
    }
    if (v5)
      sub_249715168(0, v5, 1, a1, a2);
  }
  else
  {
    if (v5 >= 0)
      v7 = v5;
    else
      v7 = v5 + 1;
    if (v5 < -1)
    {
LABEL_205:
      sub_24972D074();
      __break(1u);
      return;
    }
    v135 = a2;
    v127 = v6;
    v125 = a1;
    if (v5 >= 2)
    {
      v8 = v7 >> 1;
      v9 = sub_24972CCFC();
      *(_QWORD *)(v9 + 16) = v8;
      v126 = v9;
      v134 = (char *)(v9 + 32);
      goto LABEL_12;
    }
    v134 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v126 = MEMORY[0x24BEE4AF8];
    if (v5 == 1)
    {
LABEL_12:
      v10 = 0;
      v11 = *a1;
      v12 = (char *)MEMORY[0x24BEE4AF8];
      v124 = v11 - 8;
      v131 = v5;
      while (1)
      {
        v13 = v10;
        v14 = v10 + 1;
        v132 = v12;
        if (v10 + 1 >= v5)
        {
          v17 = v10 + 1;
          goto LABEL_41;
        }
        v137 = *(_QWORD *)(v11 + 8 * v14);
        v136 = *(_QWORD *)(v11 + 8 * v10);
        sub_249712490(&v137, &v136, a2);
        if (v2)
          goto LABEL_154;
        v16 = v15;
        v17 = v13 + 2;
        if (v13 + 2 >= v5)
        {
          if ((v15 & 1) == 0)
            goto LABEL_41;
          goto LABEL_78;
        }
        v18 = v13 + 2;
        while (1)
        {
          while (1)
          {
            v19 = *(_QWORD *)(v11 + 8 * v18);
            v20 = *(_QWORD *)(v11 + 8 * v14);
            v21 = *a2;
            if ((*a2 & 0xC000000000000001) != 0)
            {
              v22 = (char *)MEMORY[0x24BCF6CE8](v19);
            }
            else
            {
              if ((v19 & 0x8000000000000000) != 0)
                goto LABEL_170;
              if (v19 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_171;
              v22 = (char *)*(id *)(v21 + 8 * v19 + 32);
            }
            v23 = v22;
            v24 = (id *)&v22[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v25 = (char *)*v24;

            v26 = *a2;
            if ((*a2 & 0xC000000000000001) != 0)
            {
              v27 = (char *)MEMORY[0x24BCF6CE8](v20);
            }
            else
            {
              if ((v20 & 0x8000000000000000) != 0)
                goto LABEL_172;
              if (v20 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_174;
              v27 = (char *)*(id *)(v26 + 8 * v20 + 32);
            }
            v28 = v27;
            v29 = (id *)&v27[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v30 = (char *)*v29;

            v31 = (CGRect *)&v25[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            MinX = CGRectGetMinX(*v31);
            if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
              goto LABEL_173;
            if (MinX <= -9.22337204e18)
              goto LABEL_175;
            if (MinX >= 9.22337204e18)
              goto LABEL_176;
            v33 = (CGRect *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            v34 = CGRectGetMinX(*v33);

            if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
              goto LABEL_177;
            if (v34 <= -9.22337204e18)
              goto LABEL_178;
            if (v34 >= 9.22337204e18)
              goto LABEL_179;
            if ((uint64_t)v34 >= (uint64_t)MinX)
              break;
            if ((v16 & 1) != 0)
            {
              v17 = v18;
LABEL_77:
              v5 = v131;
              if (v17 >= v13)
              {
LABEL_78:
                if (v13 < v17)
                {
                  v56 = v17 - 1;
                  v57 = v13;
                  while (1)
                  {
                    if (v57 != v56)
                    {
                      if (!v11)
                        goto LABEL_203;
                      v58 = *(_QWORD *)(v11 + 8 * v57);
                      *(_QWORD *)(v11 + 8 * v57) = *(_QWORD *)(v11 + 8 * v56);
                      *(_QWORD *)(v11 + 8 * v56) = v58;
                    }
                    v93 = ++v57 < v56--;
                    if (!v93)
                      goto LABEL_41;
                  }
                }
                goto LABEL_41;
              }
              goto LABEL_200;
            }
            v17 = v18 + 1;
            v14 = v18;
            v18 = v17;
            if (v17 >= v131)
              goto LABEL_86;
          }
          if ((v16 & 1) == 0)
            break;
          v17 = v18 + 1;
          v14 = v18;
          v18 = v17;
          if (v17 >= v131)
            goto LABEL_77;
        }
        v17 = v18;
LABEL_86:
        v5 = v131;
LABEL_41:
        if (v17 >= v5)
          goto LABEL_88;
        if (__OFSUB__(v17, v13))
          goto LABEL_197;
        if (v17 - v13 >= v127)
          goto LABEL_88;
        if (__OFADD__(v13, v127))
          goto LABEL_198;
        if (v13 + v127 >= v5)
          v35 = v5;
        else
          v35 = v13 + v127;
        if (v35 < v13)
          goto LABEL_199;
        if (v17 == v35)
          goto LABEL_88;
        v36 = (unint64_t *)(v124 + 8 * v17);
        v128 = v35;
        v129 = v13;
LABEL_53:
        v37 = *(_QWORD *)(v11 + 8 * v17);
        v38 = v13;
        v130 = v36;
LABEL_54:
        v39 = v17;
        v40 = *v36;
        v41 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          v42 = (char *)MEMORY[0x24BCF6CE8](v37);
          goto LABEL_58;
        }
        if ((v37 & 0x8000000000000000) != 0)
          break;
        if (v37 >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_157;
        v42 = (char *)*(id *)(v41 + 8 * v37 + 32);
LABEL_58:
        v43 = v42;
        v44 = (id *)&v42[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v45 = (char *)*v44;

        v46 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          v47 = (char *)MEMORY[0x24BCF6CE8](v40);
        }
        else
        {
          if ((v40 & 0x8000000000000000) != 0)
            goto LABEL_158;
          if (v40 >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_160;
          v47 = (char *)*(id *)(v46 + 8 * v40 + 32);
        }
        v48 = v47;
        v49 = (id *)&v47[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v50 = (char *)*v49;

        v51 = (CGRect *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v52 = CGRectGetMinX(*v51);
        if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
          goto LABEL_159;
        if (v52 <= -9.22337204e18)
          goto LABEL_161;
        if (v52 >= 9.22337204e18)
          goto LABEL_162;
        v53 = (CGRect *)&v50[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v54 = CGRectGetMinX(*v53);

        if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
          goto LABEL_163;
        if (v54 <= -9.22337204e18)
          goto LABEL_164;
        if (v54 >= 9.22337204e18)
          goto LABEL_165;
        if ((uint64_t)v54 >= (uint64_t)v52)
        {
          if (!v11)
            goto LABEL_201;
          v17 = v39;
          v55 = *v36;
          v37 = v36[1];
          *v36 = v37;
          v36[1] = v55;
          --v36;
          if (v39 == ++v38)
            goto LABEL_52;
          goto LABEL_54;
        }
        v17 = v39;
LABEL_52:
        ++v17;
        v13 = v129;
        v36 = v130 + 1;
        if (v17 != v128)
          goto LABEL_53;
        v17 = v128;
LABEL_88:
        if (v17 < v13)
          goto LABEL_195;
        v59 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v12 = v132;
        else
          v12 = sub_24971DB80(0, *((_QWORD *)v132 + 2) + 1, 1, v132);
        v61 = *((_QWORD *)v12 + 2);
        v60 = *((_QWORD *)v12 + 3);
        v62 = v61 + 1;
        if (v61 >= v60 >> 1)
          v12 = sub_24971DB80((char *)(v60 > 1), v61 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v62;
        v63 = v12 + 32;
        v64 = &v12[16 * v61 + 32];
        *(_QWORD *)v64 = v59;
        *((_QWORD *)v64 + 1) = v17;
        v133 = v17;
        if (v61)
        {
          while (1)
          {
            v65 = v62 - 1;
            if (v62 >= 4)
            {
              v70 = &v63[16 * v62];
              v71 = *((_QWORD *)v70 - 8);
              v72 = *((_QWORD *)v70 - 7);
              v76 = __OFSUB__(v72, v71);
              v73 = v72 - v71;
              if (v76)
                goto LABEL_180;
              v75 = *((_QWORD *)v70 - 6);
              v74 = *((_QWORD *)v70 - 5);
              v76 = __OFSUB__(v74, v75);
              v68 = v74 - v75;
              v69 = v76;
              if (v76)
                goto LABEL_181;
              v77 = v62 - 2;
              v78 = &v63[16 * v62 - 32];
              v80 = *(_QWORD *)v78;
              v79 = *((_QWORD *)v78 + 1);
              v76 = __OFSUB__(v79, v80);
              v81 = v79 - v80;
              if (v76)
                goto LABEL_183;
              v76 = __OFADD__(v68, v81);
              v82 = v68 + v81;
              if (v76)
                goto LABEL_186;
              if (v82 >= v73)
              {
                v100 = &v63[16 * v65];
                v102 = *(_QWORD *)v100;
                v101 = *((_QWORD *)v100 + 1);
                v76 = __OFSUB__(v101, v102);
                v103 = v101 - v102;
                if (v76)
                  goto LABEL_190;
                v93 = v68 < v103;
                goto LABEL_125;
              }
            }
            else
            {
              if (v62 != 3)
              {
                v94 = *((_QWORD *)v12 + 4);
                v95 = *((_QWORD *)v12 + 5);
                v76 = __OFSUB__(v95, v94);
                v87 = v95 - v94;
                v88 = v76;
                goto LABEL_119;
              }
              v67 = *((_QWORD *)v12 + 4);
              v66 = *((_QWORD *)v12 + 5);
              v76 = __OFSUB__(v66, v67);
              v68 = v66 - v67;
              v69 = v76;
            }
            if ((v69 & 1) != 0)
              goto LABEL_182;
            v77 = v62 - 2;
            v83 = &v63[16 * v62 - 32];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v86 = __OFSUB__(v84, v85);
            v87 = v84 - v85;
            v88 = v86;
            if (v86)
              goto LABEL_185;
            v89 = &v63[16 * v65];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v76 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v76)
              goto LABEL_188;
            if (__OFADD__(v87, v92))
              goto LABEL_189;
            if (v87 + v92 >= v68)
            {
              v93 = v68 < v92;
LABEL_125:
              if (v93)
                v65 = v77;
              goto LABEL_127;
            }
LABEL_119:
            if ((v88 & 1) != 0)
              goto LABEL_184;
            v96 = &v63[16 * v65];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v76 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v76)
              goto LABEL_187;
            if (v99 < v87)
              goto LABEL_136;
LABEL_127:
            v104 = v65 - 1;
            if (v65 - 1 >= v62)
              goto LABEL_166;
            v105 = v11;
            if (!v11)
              goto LABEL_202;
            v106 = v12;
            v107 = &v63[16 * v104];
            v108 = *(_QWORD *)v107;
            v109 = v63;
            v110 = v65;
            v111 = &v63[16 * v65];
            v112 = *((_QWORD *)v111 + 1);
            v113 = v105;
            sub_249715FAC((char *)(v105 + 8 * *(_QWORD *)v107), (char *)(v105 + 8 * *(_QWORD *)v111), v105 + 8 * v112, v134, v135);
            if (v2)
              goto LABEL_154;
            if (v112 < v108)
              goto LABEL_167;
            if (v110 > *((_QWORD *)v106 + 2))
              goto LABEL_168;
            *(_QWORD *)v107 = v108;
            *(_QWORD *)&v109[16 * v104 + 8] = v112;
            v114 = *((_QWORD *)v106 + 2);
            if (v110 >= v114)
              goto LABEL_169;
            v62 = v114 - 1;
            memmove(v111, v111 + 16, 16 * (v114 - 1 - v110));
            v63 = v109;
            v12 = v106;
            *((_QWORD *)v106 + 2) = v114 - 1;
            a2 = v135;
            v11 = v113;
            if (v114 <= 2)
              goto LABEL_136;
          }
        }
        v62 = 1;
LABEL_136:
        v5 = v131;
        v10 = v133;
        if (v133 >= v131)
          goto LABEL_141;
      }
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
      goto LABEL_191;
    }
    v62 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_141:
    if (v62 >= 2)
    {
      v115 = *v125;
      while (1)
      {
        v116 = v62 - 2;
        if (v62 < 2)
          break;
        if (!v115)
          goto LABEL_204;
        v117 = (uint64_t)v12;
        v118 = *(_QWORD *)&v12[16 * v116 + 32];
        v119 = *(_QWORD *)&v12[16 * v62 + 24];
        sub_249715FAC((char *)(v115 + 8 * v118), (char *)(v115 + 8 * *(_QWORD *)&v12[16 * v62 + 16]), v115 + 8 * v119, v134, a2);
        if (v2)
          goto LABEL_154;
        if (v119 < v118)
          goto LABEL_192;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v120 = (char *)v117;
        else
          v120 = sub_24971DDC8(v117);
        if (v116 >= *((_QWORD *)v120 + 2))
          goto LABEL_193;
        v121 = &v120[16 * v116 + 32];
        *(_QWORD *)v121 = v118;
        *((_QWORD *)v121 + 1) = v119;
        v122 = *((_QWORD *)v120 + 2);
        if (v62 > v122)
          goto LABEL_194;
        v123 = v120;
        memmove(&v120[16 * v62 + 16], &v120[16 * v62 + 32], 16 * (v122 - v62));
        v12 = v123;
        *((_QWORD *)v123 + 2) = v122 - 1;
        v62 = v122 - 1;
        a2 = v135;
        if (v122 <= 2)
          goto LABEL_154;
      }
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
      goto LABEL_196;
    }
LABEL_154:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v126 + 16) = 0;
    swift_bridgeObjectRelease();
  }
}

void sub_249714F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void **v9;
  char *v10;
  void **v11;
  void *v12;
  CGFloat *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double MinX;
  CGRect *v23;
  double v24;
  char *v25;
  uint64_t v28;
  uint64_t v29;
  CGRect v30;

  if (a3 != a2)
  {
    v4 = a3;
    v29 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(char **)(v29 + 8 * v4);
    v7 = a1;
    v28 = v5;
    while (1)
    {
      v8 = *(char **)v5;
      v9 = (void **)&v6[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v10 = (char *)*v9;
      v11 = (void **)&v8[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v12 = *v11;
      v13 = (CGFloat *)&v10[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v18 = v6;
      v19 = v8;
      v20 = v10;
      v21 = v12;
      v30.origin.x = v14;
      v30.origin.y = v15;
      v30.size.width = v16;
      v30.size.height = v17;
      MinX = CGRectGetMinX(v30);
      if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
        break;
      if (MinX <= -9.22337204e18)
        goto LABEL_17;
      if (MinX >= 9.22337204e18)
        goto LABEL_18;
      v23 = (CGRect *)&v21[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      swift_beginAccess();
      v24 = CGRectGetMinX(*v23);

      if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
        goto LABEL_19;
      if (v24 <= -9.22337204e18)
        goto LABEL_20;
      if (v24 >= 9.22337204e18)
        goto LABEL_21;

      if ((uint64_t)v24 >= (uint64_t)MinX)
      {
        if (!v29)
          goto LABEL_22;
        v25 = *(char **)v5;
        v6 = *(char **)(v5 + 8);
        *(_QWORD *)v5 = v6;
        *(_QWORD *)(v5 + 8) = v25;
        v5 -= 8;
        if (v4 != ++v7)
          continue;
      }
      ++v4;
      v5 = v28 + 8;
      if (v4 == a2)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

void sub_249715168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id *v19;
  char *v20;
  CGRect *v21;
  double MinX;
  CGRect *v23;
  double v24;
  unint64_t v25;
  unint64_t *v28;
  uint64_t v29;

  if (a3 == a2)
    return;
  v6 = a3;
  v29 = *a4;
  v7 = (unint64_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
  v8 = *(_QWORD *)(v29 + 8 * v6);
  v9 = a1;
  v28 = v7;
  while (1)
  {
    v10 = *v7;
    v11 = *a5;
    if ((*a5 & 0xC000000000000001) == 0)
      break;
    v12 = (char *)MEMORY[0x24BCF6CE8](v8);
LABEL_10:
    v13 = v12;
    v14 = (id *)&v12[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v15 = (char *)*v14;

    v16 = *a5;
    if ((*a5 & 0xC000000000000001) != 0)
    {
      v17 = (char *)MEMORY[0x24BCF6CE8](v10);
    }
    else
    {
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_28;
      if (v10 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_29;
      v17 = (char *)*(id *)(v16 + 8 * v10 + 32);
    }
    v18 = v17;
    v19 = (id *)&v17[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v20 = (char *)*v19;

    v21 = (CGRect *)&v15[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    MinX = CGRectGetMinX(*v21);
    if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
      goto LABEL_30;
    if (MinX <= -9.22337204e18)
      goto LABEL_31;
    if (MinX >= 9.22337204e18)
      goto LABEL_32;
    v23 = (CGRect *)&v20[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v24 = CGRectGetMinX(*v23);

    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
      goto LABEL_33;
    if (v24 <= -9.22337204e18)
      goto LABEL_34;
    if (v24 >= 9.22337204e18)
      goto LABEL_35;
    if ((uint64_t)v24 >= (uint64_t)MinX)
    {
      if (!v29)
        goto LABEL_36;
      v25 = *v7;
      v8 = v7[1];
      *v7 = v8;
      v7[1] = v25;
      --v7;
      if (v6 != ++v9)
        continue;
    }
    ++v6;
    v7 = v28 + 1;
    if (v6 == a2)
      return;
    goto LABEL_5;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_27;
    v12 = (char *)*(id *)(v11 + 8 * v8 + 32);
    goto LABEL_10;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_249715410(char *__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  void **v16;
  char *v17;
  void **v18;
  char *v19;
  void **v20;
  void *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  double v31;
  CGRect *v32;
  double v33;
  void **v34;
  void **v35;
  void **v36;
  void **v37;
  void **v38;
  void **v39;
  unint64_t v40;
  void **v41;
  char *v42;
  char *v43;
  void **v44;
  char *v45;
  void **v46;
  void *v47;
  CGFloat *v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  double MinX;
  CGRect *v58;
  double v59;
  void **v60;
  void **v61;
  uint64_t result;
  void **v63;
  void **v64;
  char *v65;
  void **v67;
  void **v68;
  void **v69;
  void **v70;
  CGRect v71;
  CGRect v72;

  v4 = __dst;
  v5 = __src;
  v6 = (char *)a2 - __src;
  v7 = (char *)a2 - __src + 7;
  if ((char *)a2 - __src >= 0)
    v7 = (char *)a2 - __src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v70 = (void **)__src;
  v69 = __dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != a2 || &a2[v11] <= __dst)
      {
        v36 = a2;
        memmove(__dst, a2, 8 * v11);
        a2 = v36;
      }
      v37 = &v4[v11];
      v68 = v37;
      v70 = a2;
      if (v5 < (char *)a2 && v9 >= 8)
      {
        v38 = (void **)(a3 - 8);
        v39 = a2;
        v64 = v4;
        v65 = v5;
        while (1)
        {
          v67 = a2;
          v40 = (unint64_t)v37;
          v41 = v37 - 1;
          v42 = (char *)*(v37 - 1);
          v43 = (char *)*--v39;
          v44 = (void **)&v42[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v45 = (char *)*v44;
          v46 = (void **)&v43[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v47 = *v46;
          v48 = (CGFloat *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v49 = *v48;
          v50 = v48[1];
          v51 = v48[2];
          v52 = v48[3];
          v53 = v42;
          v54 = v43;
          v55 = v45;
          v56 = v47;
          v72.origin.x = v49;
          v72.origin.y = v50;
          v72.size.width = v51;
          v72.size.height = v52;
          MinX = CGRectGetMinX(v72);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            break;
          if (MinX <= -9.22337204e18)
            goto LABEL_57;
          if (MinX >= 9.22337204e18)
            goto LABEL_58;
          v58 = (CGRect *)&v56[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v59 = CGRectGetMinX(*v58);

          if ((~*(_QWORD *)&v59 & 0x7FF0000000000000) == 0)
            goto LABEL_59;
          if (v59 <= -9.22337204e18)
            goto LABEL_60;
          if (v59 >= 9.22337204e18)
            goto LABEL_61;
          v60 = v38 + 1;

          if ((uint64_t)v59 >= (uint64_t)MinX)
          {
            v61 = v64;
            v37 = (void **)v40;
            if (v60 != v67 || v38 >= v67)
              *v38 = *v39;
            v70 = v39;
            if (v39 <= (void **)v65)
              goto LABEL_55;
          }
          else
          {
            v68 = v41;
            v61 = v64;
            v39 = v67;
            if ((unint64_t)v60 < v40 || (unint64_t)v38 >= v40 || v60 != (void **)v40)
              *v38 = *v41;
            v37 = v41;
            if (v67 <= (void **)v65)
              goto LABEL_55;
          }
          --v38;
          a2 = v39;
          if (v37 <= v61)
            goto LABEL_55;
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
LABEL_55:
      sub_24971DC78(&v70, &v69, &v68);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (void **)__src || &__src[8 * v8] <= (char *)__dst)
    {
      v12 = a2;
      memmove(__dst, __src, 8 * v8);
      a2 = v12;
    }
    v63 = &v4[v8];
    v68 = v63;
    if ((unint64_t)a2 < a3 && v6 >= 8)
    {
      while (1)
      {
        v13 = (void **)v5;
        v14 = a2;
        v15 = *a2;
        v16 = v4;
        v17 = (char *)*v4;
        v18 = (void **)((char *)*a2 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v19 = (char *)*v18;
        v20 = (void **)&v17[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v21 = *v20;
        v22 = (CGFloat *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        v27 = v15;
        v28 = v17;
        v29 = v19;
        v30 = v21;
        v71.origin.x = v23;
        v71.origin.y = v24;
        v71.size.width = v25;
        v71.size.height = v26;
        v31 = CGRectGetMinX(v71);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          break;
        if (v31 <= -9.22337204e18)
          goto LABEL_63;
        if (v31 >= 9.22337204e18)
          goto LABEL_64;
        v32 = (CGRect *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v33 = CGRectGetMinX(*v32);

        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_65;
        if (v33 <= -9.22337204e18)
          goto LABEL_66;
        if (v33 >= 9.22337204e18)
          goto LABEL_67;

        if ((uint64_t)v33 >= (uint64_t)v31)
        {
          v35 = v14 + 1;
          v34 = v13;
          v4 = v16;
          if (v13 < v14 || v13 >= v35 || v13 != v14)
            *v13 = *v14;
        }
        else
        {
          v34 = v13;
          if (v13 != v16)
            *v13 = *v16;
          v4 = v16 + 1;
          v69 = v16 + 1;
          v35 = v14;
        }
        v5 = (char *)(v34 + 1);
        if (v4 < v63)
        {
          a2 = v35;
          if ((unint64_t)v35 < a3)
            continue;
        }
        v70 = (void **)v5;
        goto LABEL_55;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    goto LABEL_55;
  }
LABEL_68:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_2497159E0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  _QWORD *v28;
  char *v29;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v34 = __dst;
  v35 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_45;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v20 = &v4[8 * v13];
    v33 = v20;
    v35 = v6;
    if (v7 >= v6 || v11 < 8)
      goto LABEL_44;
    v21 = (char *)(a3 - 8);
    v22 = v6;
    v31 = v4;
    while (1)
    {
      v32 = v6;
      v23 = v21 + 8;
      v24 = v20 - 8;
      v25 = *((_QWORD *)v22 - 1);
      v22 -= 8;
      v26 = (_QWORD *)(*((_QWORD *)v20 - 1) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      v27 = *(double *)(*v26 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
      v28 = (_QWORD *)(v25 + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(double *)(*v28 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v27)
      {
        v33 = v20 - 8;
        if (v23 >= v20 && v21 < v20)
        {
          v29 = v31;
          if (v23 != v20)
            *(_QWORD *)v21 = *(_QWORD *)v24;
          v22 = v32;
          v20 -= 8;
          goto LABEL_42;
        }
        *(_QWORD *)v21 = *(_QWORD *)v24;
        v22 = v32;
        v20 -= 8;
      }
      else
      {
        if (v23 != v32 || v21 >= v32)
          *(_QWORD *)v21 = *(_QWORD *)v22;
        v35 = v22;
      }
      v29 = v31;
LABEL_42:
      if (v22 > v7)
      {
        v21 -= 8;
        v6 = v22;
        if (v20 > v29)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)v4;
        v16 = (_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        v17 = *(double *)(*v16 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence);
        v18 = (_QWORD *)(v15 + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(double *)(*v18 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence) >= v17)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v34 = v4;
          v19 = v6;
        }
        else
        {
          v19 = v6 + 8;
          if (v7 < v6 || v7 >= v19 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v19;
      }
      while ((unint64_t)v19 < a3);
      v35 = v7;
    }
LABEL_44:
    sub_24971DC78(&v35, &v34, &v33);
    return 1;
  }
LABEL_45:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249715D40(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (v20 >= *((_QWORD *)v16 - 1))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24971DC7C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249715FAC(char *__src, char *a2, unint64_t a3, char *a4, uint64_t *a5)
{
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id *v25;
  char *v26;
  CGRect *v27;
  double MinX;
  CGRect *v29;
  double v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  id *v46;
  char *v47;
  CGRect *v48;
  double v49;
  CGRect *v50;
  double v51;
  char *v52;
  uint64_t result;
  char *v56;
  char *v57;
  char *v58;

  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v58 = __src;
  v57 = a4;
  if (v10 < v12 >> 3)
  {
    if (v8 < -7)
      goto LABEL_98;
    if (a4 != __src || &__src[8 * v10] <= a4)
      memmove(a4, __src, 8 * v10);
    v56 = &a4[8 * v10];
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      v14 = a4;
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = *(_QWORD *)v14;
        v17 = *a5;
        if ((*a5 & 0xC000000000000001) != 0)
        {
          v18 = (char *)MEMORY[0x24BCF6CE8](v15);
        }
        else
        {
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_88;
          if (v15 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_89;
          v18 = (char *)*(id *)(v17 + 8 * v15 + 32);
        }
        v19 = v18;
        v20 = (id *)&v18[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v21 = (char *)*v20;

        v22 = *a5;
        if ((*a5 & 0xC000000000000001) != 0)
        {
          v23 = (char *)MEMORY[0x24BCF6CE8](v16);
        }
        else
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_90;
          if (v16 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_92;
          v23 = (char *)*(id *)(v22 + 8 * v16 + 32);
        }
        v24 = v23;
        v25 = (id *)&v23[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v26 = (char *)*v25;

        v27 = (CGRect *)&v21[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        MinX = CGRectGetMinX(*v27);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_91;
        if (MinX <= -9.22337204e18)
          goto LABEL_93;
        if (MinX >= 9.22337204e18)
          goto LABEL_94;
        v29 = (CGRect *)&v26[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v30 = CGRectGetMinX(*v29);

        if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
          goto LABEL_95;
        if (v30 <= -9.22337204e18)
          goto LABEL_96;
        if (v30 >= 9.22337204e18)
          goto LABEL_97;
        if ((uint64_t)v30 >= (uint64_t)MinX)
        {
          v31 = v6 + 8;
          if (v7 < v6 || v7 >= v31 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        else
        {
          if (v7 != v14)
            *(_QWORD *)v7 = *(_QWORD *)v14;
          v14 += 8;
          v57 = v14;
          v31 = v6;
        }
        v7 += 8;
        if (v14 < &a4[8 * v10])
        {
          v6 = v31;
          if ((unint64_t)v31 < a3)
            continue;
        }
        v58 = v7;
        break;
      }
    }
LABEL_77:
    sub_24971DC7C((void **)&v58, (const void **)&v57, &v56);
    return 1;
  }
  if (v11 < -7)
    goto LABEL_98;
  if (a4 != a2 || &a2[8 * v13] <= a4)
    memmove(a4, a2, 8 * v13);
  v32 = &a4[8 * v13];
  v56 = v32;
  v58 = v6;
  if (v7 >= v6 || v11 < 8)
    goto LABEL_77;
  v33 = (char *)(a3 - 8);
  v34 = v6;
  while (1)
  {
    v35 = *((_QWORD *)v32 - 1);
    v37 = *((_QWORD *)v34 - 1);
    v34 -= 8;
    v36 = v37;
    v38 = *a5;
    if ((*a5 & 0xC000000000000001) != 0)
    {
      v39 = (char *)MEMORY[0x24BCF6CE8](v35);
      goto LABEL_51;
    }
    if ((v35 & 0x8000000000000000) != 0)
      break;
    if (v35 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_79;
    v39 = (char *)*(id *)(v38 + 8 * v35 + 32);
LABEL_51:
    v40 = v39;
    v41 = (id *)&v39[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v42 = (char *)*v41;

    v43 = *a5;
    if ((*a5 & 0xC000000000000001) != 0)
    {
      v44 = (char *)MEMORY[0x24BCF6CE8](v36);
    }
    else
    {
      if ((v36 & 0x8000000000000000) != 0)
        goto LABEL_80;
      if (v36 >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_82;
      v44 = (char *)*(id *)(v43 + 8 * v36 + 32);
    }
    v45 = v44;
    v46 = (id *)&v44[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v47 = (char *)*v46;

    v48 = (CGRect *)&v42[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v49 = CGRectGetMinX(*v48);
    if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) == 0)
      goto LABEL_81;
    if (v49 <= -9.22337204e18)
      goto LABEL_83;
    if (v49 >= 9.22337204e18)
      goto LABEL_84;
    v50 = (CGRect *)&v47[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v51 = CGRectGetMinX(*v50);

    if ((~*(_QWORD *)&v51 & 0x7FF0000000000000) == 0)
      goto LABEL_85;
    if (v51 <= -9.22337204e18)
      goto LABEL_86;
    if (v51 >= 9.22337204e18)
      goto LABEL_87;
    v52 = v33 + 8;
    if ((uint64_t)v51 >= (uint64_t)v49)
    {
      if (v52 != v6 || v33 >= v6)
        *(_QWORD *)v33 = *(_QWORD *)v34;
      v58 = v34;
      if (v34 <= v7)
        goto LABEL_77;
    }
    else
    {
      v56 = v32 - 8;
      if (v52 < v32 || v33 >= v32 || v52 != v32)
        *(_QWORD *)v33 = *((_QWORD *)v32 - 1);
      v34 = v6;
      v32 -= 8;
      if (v6 <= v7)
        goto LABEL_77;
    }
    v33 -= 8;
    v6 = v34;
    if (v32 <= a4)
      goto LABEL_77;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249716610(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24971688C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CenterNetPrediction, &qword_25787A598, &qword_25787A590, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972B9F4);
}

uint64_t sub_249716634(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24971667C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for UIObject, &qword_25787A5A0, &qword_25787A248, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972BA4C);
}

uint64_t sub_249716658(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24971667C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for UIFingerprintingDetectionInfo, &qword_25787A5D0, &qword_25787A5C8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_24972BA4C);
}

uint64_t sub_24971667C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_2496D1BCC(a5, a6, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971688C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_2496D1BCC(a5, a6, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

void sub_249716A9C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  void *v10;
  id *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v20 = a1 + 32;
  v4 = a2 & 0xC000000000000001;
  v5 = a2 & 0xFFFFFFFFFFFFFF8;
  v6 = a2 + 32;
  v19 = MEMORY[0x24BEE4AF8];
LABEL_2:
  if (v2 <= v3)
    v7 = v3;
  else
    v7 = v2;
  while (v3 != v2)
  {
    if (v7 == v2)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    v8 = *(_QWORD *)(v20 + 8 * v2);
    if (v4)
    {
      v9 = (char *)MEMORY[0x24BCF6CE8](*(_QWORD *)(v20 + 8 * v2), a2);
    }
    else
    {
      if ((v8 & 0x8000000000000000) != 0)
        goto LABEL_21;
      if (v8 >= *(_QWORD *)(v5 + 16))
        goto LABEL_22;
      v9 = (char *)*(id *)(v6 + 8 * v8);
    }
    v10 = v9;
    v11 = (id *)&v9[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v12 = (char *)*v11;

    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label];
    ++v2;
    if (v13 == 4)
    {
      v14 = v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2496D5A60(0, *(_QWORD *)(v19 + 16) + 1, 1);
      v17 = *(_QWORD *)(v19 + 16);
      v16 = *(_QWORD *)(v19 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2496D5A60(v16 > 1, v17 + 1, 1);
        v14 = v19;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      v19 = v14;
      *(_QWORD *)(v14 + 8 * v17 + 32) = v8;
      goto LABEL_2;
    }
  }
}

void sub_249716C34(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  void *v10;
  id *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v20 = a1 + 32;
  v4 = a2 & 0xC000000000000001;
  v5 = a2 & 0xFFFFFFFFFFFFFF8;
  v6 = a2 + 32;
  v19 = MEMORY[0x24BEE4AF8];
LABEL_2:
  if (v2 <= v3)
    v7 = v3;
  else
    v7 = v2;
  while (v3 != v2)
  {
    if (v7 == v2)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    v8 = *(_QWORD *)(v20 + 8 * v2);
    if (v4)
    {
      v9 = (char *)MEMORY[0x24BCF6CE8](*(_QWORD *)(v20 + 8 * v2), a2);
    }
    else
    {
      if ((v8 & 0x8000000000000000) != 0)
        goto LABEL_21;
      if (v8 >= *(_QWORD *)(v5 + 16))
        goto LABEL_22;
      v9 = (char *)*(id *)(v6 + 8 * v8);
    }
    v10 = v9;
    v11 = (id *)&v9[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v12 = (char *)*v11;

    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label];
    ++v2;
    if (v13 == 10)
    {
      v14 = v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2496D5A60(0, *(_QWORD *)(v19 + 16) + 1, 1);
      v17 = *(_QWORD *)(v19 + 16);
      v16 = *(_QWORD *)(v19 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2496D5A60(v16 > 1, v17 + 1, 1);
        v14 = v19;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      v19 = v14;
      *(_QWORD *)(v14 + 8 * v17 + 32) = v8;
      goto LABEL_2;
    }
  }
}

uint64_t sub_249716DCC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v5 = result + 32;
  v6 = MEMORY[0x24BEE4AF8];
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    while (1)
    {
      if (v4 == v7)
        goto LABEL_24;
      v8 = *(_QWORD *)(v5 + 8 * v4++);
      v9 = *(_QWORD *)(a2 + 16);
      if (!v9)
        goto LABEL_15;
      if (*(_QWORD *)(a2 + 32) != v8)
        break;
LABEL_6:
      if (v4 == v2)
        return v6;
    }
    if (v9 != 1)
    {
      v10 = 5;
      while (1)
      {
        v11 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        if (*(_QWORD *)(a2 + 8 * v10) == v8)
          goto LABEL_6;
        ++v10;
        if (v11 == v9)
          goto LABEL_15;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_15:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_2496D5A60(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
      result = sub_2496D5A60(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v6 + 16) = v13 + 1;
    *(_QWORD *)(v6 + 8 * v13 + 32) = v8;
  }
  while (v4 != v2);
  return v6;
}

unint64_t sub_249716F18(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id *v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  void **v31;
  uint64_t i;
  unint64_t v33;
  char *v34;
  void *v35;
  id *v36;
  id v37;
  id v38;
  id v39;
  BOOL v40;
  void *v41;
  id v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  char *v48;
  void *v49;
  void **v50;
  char *v51;
  CGRect *v52;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v57;
  double v58;
  uint64_t v59;
  void **v60;
  void *v61;
  uint64_t v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94[2];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  CGRect v100;
  CGRect v101;

  v1 = a1;
  v99 = a1;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
LABEL_126:
    swift_bridgeObjectRetain();
    v83 = sub_24972D0BC();
    if (v83 < 0)
    {
      __break(1u);
LABEL_128:
      sub_24972D0F8();
      __break(1u);
      v83 = swift_release();
      __break(1u);
    }
    v3 = v83;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v92 = v1 + 32;
  v93 = v1 & 0xC000000000000001;
  v91 = v1;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
LABEL_4:
  if (v4 <= v3)
    v6 = v3;
  else
    v6 = v4;
  while (v3 != v4)
  {
    if (v6 == v4)
    {
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v93)
    {
      v7 = (char *)MEMORY[0x24BCF6CE8](v4, v91);
    }
    else
    {
      if ((unint64_t)v4 >= *(_QWORD *)(v2 + 16))
        goto LABEL_111;
      v7 = (char *)*(id *)(v92 + 8 * v4);
    }
    v8 = v7;
    v9 = (id *)&v7[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v1 = (uint64_t)*v9;

    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
    ++v4;
    if (v10 == 4)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v98 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2496D5A60(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v98;
      }
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      v1 = v13 + 1;
      if (v13 >= v12 >> 1)
      {
        sub_2496D5A60(v12 > 1, v13 + 1, 1);
        v5 = v98;
      }
      *(_QWORD *)(v5 + 16) = v1;
      *(_QWORD *)(v5 + 8 * v13 + 32) = v4 - 1;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x24BEE4AF8];
LABEL_21:
  if (v14 <= v3)
    v16 = v3;
  else
    v16 = v14;
  while (v3 != v14)
  {
    if (v16 == v14)
      goto LABEL_112;
    if (v93)
    {
      v17 = (char *)MEMORY[0x24BCF6CE8](v14, v91);
    }
    else
    {
      if ((unint64_t)v14 >= *(_QWORD *)(v2 + 16))
        goto LABEL_113;
      v17 = (char *)*(id *)(v92 + 8 * v14);
    }
    v18 = v17;
    v19 = (id *)&v17[OBJC_IVAR___UIObjectCompat_detection];
    swift_beginAccess();
    v1 = (uint64_t)*v19;

    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label);
    ++v14;
    if (v20 == 10)
    {
      v21 = swift_isUniquelyReferenced_nonNull_native();
      v95 = v15;
      if ((v21 & 1) == 0)
      {
        sub_2496D5A60(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v95;
      }
      v23 = *(_QWORD *)(v15 + 16);
      v22 = *(_QWORD *)(v15 + 24);
      v1 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_2496D5A60(v22 > 1, v23 + 1, 1);
        v15 = v95;
      }
      *(_QWORD *)(v15 + 16) = v1;
      *(_QWORD *)(v15 + 8 * v23 + 32) = v14 - 1;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  v97 = MEMORY[0x24BEE4B08];
  v84 = *(_QWORD *)(v15 + 16);
  if (v84)
  {
    v25 = 0;
    v26 = *(_QWORD *)(v5 + 16);
    v85 = v15 + 32;
    v86 = v15;
    v89 = v2;
    v27 = v5;
    v28 = MEMORY[0x24BEE4AF8];
    while (v25 < *(_QWORD *)(v86 + 16))
    {
      v29 = *(_QWORD *)(v85 + 8 * v25);
      v87 = v25;
      v90 = v29;
      if (v93)
      {
        v30 = (char *)MEMORY[0x24BCF6CE8](v29, v91, v24);
      }
      else
      {
        if ((v29 & 0x8000000000000000) != 0)
          goto LABEL_124;
        if (v29 >= *(_QWORD *)(v2 + 16))
          goto LABEL_125;
        v30 = (char *)*(id *)(v92 + 8 * v29);
      }
      v96 = v28;
      v88 = v30;
      if (v26)
      {
        v31 = (void **)&v30[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_bridgeObjectRetain();
        swift_beginAccess();
        for (i = 0; i != v26; ++i)
        {
          v33 = *(_QWORD *)(v5 + 8 * i + 32);
          if (v93)
          {
            v34 = (char *)MEMORY[0x24BCF6CE8](v33, v91);
          }
          else
          {
            if ((v33 & 0x8000000000000000) != 0)
              goto LABEL_108;
            if (v33 >= *(_QWORD *)(v89 + 16))
              goto LABEL_109;
            v34 = (char *)*(id *)(v92 + 8 * v33);
          }
          v2 = (uint64_t)v34;
          v35 = *v31;
          v36 = (id *)&v34[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v37 = *v36;
          v38 = v35;
          v39 = v37;
          v40 = sub_24970E640((uint64_t)v39, 0.7);

          if (v40)
            sub_249728554(v94, v90);
          v41 = *v31;
          v42 = *v36;
          v1 = v41;
          v43 = sub_24970E640(v1, 0.7);

          v5 = v27;
          if (v43)
          {
            v1 = (uint64_t)(id)v2;
            MEMORY[0x24BCF69D0](v1, v44, v45);
            if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_24972CCF0();
            sub_24972CD08();
            sub_24972CCE4();
          }

        }
        swift_release();
        v28 = v96;
      }
      if ((unint64_t)v28 >> 62)
      {
        if (v28 < 0)
          v1 = v28;
        else
          v1 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v46 = sub_24972D0BC();
        swift_bridgeObjectRelease();
        if (v46)
        {
LABEL_63:
          if (v46 < 1)
            goto LABEL_123;
          v2 = 0;
          v47 = 0.0;
          while (1)
          {
            v48 = (v28 & 0xC000000000000001) != 0
                ? (char *)MEMORY[0x24BCF6CE8](v2, v28)
                : (char *)*(id *)(v28 + 8 * v2 + 32);
            v49 = v48;
            v50 = (void **)&v48[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v51 = (char *)*v50;
            v52 = (CGRect *)&v51[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            x = v52->origin.x;
            y = v52->origin.y;
            width = v52->size.width;
            height = v52->size.height;
            v1 = v51;
            v100.origin.x = x;
            v100.origin.y = y;
            v100.size.width = width;
            v100.size.height = height;
            v57 = CGRectGetWidth(v100);
            if ((~*(_QWORD *)&v57 & 0x7FF0000000000000) == 0)
              break;
            if (v57 <= -9.22337204e18)
              goto LABEL_102;
            if (v57 >= 9.22337204e18)
              goto LABEL_103;
            v58 = CGRectGetHeight(*v52);

            if ((~*(_QWORD *)&v58 & 0x7FF0000000000000) == 0)
              goto LABEL_104;
            if (v58 <= -9.22337204e18)
              goto LABEL_105;
            if (v58 >= 9.22337204e18)
              goto LABEL_106;
            v59 = (uint64_t)v57 * (uint64_t)v58;
            if ((unsigned __int128)((uint64_t)v57 * (__int128)(uint64_t)v58) >> 64 != v59 >> 63)
              goto LABEL_107;
            ++v2;
            v47 = v47 + (double)v59;
            if (v46 == v2)
              goto LABEL_82;
          }
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
          goto LABEL_110;
        }
      }
      else
      {
        v46 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v46)
          goto LABEL_63;
      }
      v47 = 0.0;
LABEL_82:
      swift_bridgeObjectRelease();
      v60 = (void **)&v88[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v61 = *v60;
      v62 = (uint64_t)*v60 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      swift_beginAccess();
      v63 = *(double *)v62;
      v64 = *(double *)(v62 + 8);
      v65 = *(double *)(v62 + 16);
      v66 = *(double *)(v62 + 24);
      v1 = v61;
      v101.origin.x = v63;
      v101.origin.y = v64;
      v101.size.width = v65;
      v101.size.height = v66;
      v67 = CGRectGetWidth(v101);
      if ((~*(_QWORD *)&v67 & 0x7FF0000000000000) == 0)
        goto LABEL_116;
      if (v67 <= -9.22337204e18)
        goto LABEL_117;
      if (v67 >= 9.22337204e18)
        goto LABEL_118;
      v68 = CGRectGetHeight(*(CGRect *)v62);

      if ((~*(_QWORD *)&v68 & 0x7FF0000000000000) == 0)
        goto LABEL_119;
      if (v68 <= -9.22337204e18)
        goto LABEL_120;
      if (v68 >= 9.22337204e18)
        goto LABEL_121;
      v69 = (uint64_t)v67 * (uint64_t)v68;
      if ((unsigned __int128)((uint64_t)v67 * (__int128)(uint64_t)v68) >> 64 != v69 >> 63)
        goto LABEL_122;
      if (v47 > (double)v69)
        sub_249728554(v94, v90);

      v2 = v89;
      v5 = v27;
      v28 = MEMORY[0x24BEE4AF8];
      v25 = v87 + 1;
      if (v87 + 1 == v84)
        goto LABEL_91;
    }
    goto LABEL_115;
  }
LABEL_91:
  swift_release();
  swift_release();
  v70 = v97;
  swift_bridgeObjectRetain_n();
  v71 = sub_2496F12F4(v70);
  swift_bridgeObjectRelease();
  v96 = (uint64_t)v71;
  sub_249712680(&v96);
  swift_bridgeObjectRelease_n();
  v1 = *(_QWORD *)(v96 + 16);
  if (v1)
  {
    v72 = (unint64_t *)(v96 + 32);
    do
    {
      v74 = *v72++;
      v73 = v74;
      v75 = v99;
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || (v75 & 0x8000000000000000) != 0
        || (v75 & 0x4000000000000000) != 0)
      {
        sub_2496F72FC(v75);
      }
      v76 = v75 & 0xFFFFFFFFFFFFFF8;
      v77 = *(_QWORD *)(v76 + 16);
      if (v73 >= v77)
        goto LABEL_114;
      v78 = v77 - 1;
      v79 = v77 - 1 - v73;
      if (v79 < 0)
        goto LABEL_128;
      v80 = v76 + 8 * v73;
      v81 = *(void **)(v80 + 32);
      memmove((void *)(v80 + 32), (const void *)(v80 + 40), 8 * v79);
      *(_QWORD *)(v76 + 16) = v78;
      sub_24972CCE4();

    }
    while (--v1);
  }
  swift_release();
  return v99;
}

void sub_2497178DC(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    v7 = a1;
    if (a2 >= a1)
    {
      v11 = MEMORY[0x24BEE4AF8];
      while (a2 != v7)
      {
        v16 = v7;
        sub_249711540(&v16, a3, a4, a5);
        if (v5)
        {
          swift_release();
          return;
        }
        if ((v14 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v17 = v11;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2496D5A60(0, *(_QWORD *)(v11 + 16) + 1, 1);
            v11 = v17;
          }
          v13 = *(_QWORD *)(v11 + 16);
          v12 = *(_QWORD *)(v11 + 24);
          if (v13 >= v12 >> 1)
          {
            sub_2496D5A60(v12 > 1, v13 + 1, 1);
            v11 = v17;
          }
          *(_QWORD *)(v11 + 16) = v13 + 1;
          *(_QWORD *)(v11 + 8 * v13 + 32) = v7;
        }
        if (a2 == ++v7)
          return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_249717A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  char *v17;
  id *v18;
  char *v19;
  void **v20;
  char *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat *v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  char *v32;
  char *v33;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  double v45;
  float v46;
  void *v47;
  id v48;
  id v49;
  BOOL v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  CGFloat r2;
  CGFloat r2_8;
  CGFloat r2_16;
  CGFloat r2_24;
  CGFloat v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  sub_249716A9C(v3, a2);
  v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  sub_249716C34(v6, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = *(_QWORD *)(v5 + 16);
  if (v55)
  {
    v54 = v5 + 32;
    v63 = a2 & 0xC000000000000001;
    v64 = *(_QWORD *)(v8 + 16);
    v58 = a2 + 32;
    v59 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v60 = a2;
    v61 = v8;
    while (!v64)
    {
LABEL_3:
      if (++v9 == v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    v11 = *(_QWORD *)(v54 + 8 * v9);
    if (v63)
      goto LABEL_8;
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_31;
    if (v11 < *(_QWORD *)(v59 + 16))
    {
LABEL_8:
      v56 = v9;
      v57 = v10;
      swift_bridgeObjectRetain();
      v12 = 0;
      v62 = v11;
      while (1)
      {
        v13 = *(_QWORD *)(v8 + 8 * v12 + 32);
        if (v63)
        {
          v14 = (char *)MEMORY[0x24BCF6CE8](v11, v60);
          v15 = (char *)MEMORY[0x24BCF6CE8](v13, v60);
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
            break;
          }
          if (v13 >= *(_QWORD *)(v59 + 16))
            goto LABEL_30;
          v16 = *(void **)(v58 + 8 * v13);
          v14 = (char *)*(id *)(v58 + 8 * v11);
          v15 = v16;
        }
        v17 = v15;
        v18 = (id *)&v15[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v19 = (char *)*v18;
        v20 = (void **)&v14[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v21 = (char *)*v20;
        v22 = (CGFloat *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        v27 = (CGFloat *)&v21[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v28 = *v27;
        v29 = v27[1];
        v30 = v27[2];
        v31 = v27[3];
        v32 = v19;
        v33 = v21;
        r2_24 = v24;
        v69 = v23;
        v70.origin.x = v23;
        v70.origin.y = v24;
        r2_8 = v26;
        r2_16 = v25;
        v70.size.width = v25;
        v70.size.height = v26;
        r2 = v28;
        v76.origin.x = v28;
        v76.origin.y = v29;
        v76.size.width = v30;
        v76.size.height = v31;
        v71 = CGRectUnion(v70, v76);
        x = v71.origin.x;
        y = v71.origin.y;
        width = v71.size.width;
        height = v71.size.height;
        v38 = CGRectGetHeight(v71);
        v72.origin.x = x;
        v72.origin.y = y;
        v72.size.width = width;
        v72.size.height = height;
        v39 = v38 * CGRectGetWidth(v72);
        if (v39 == 0.0)
        {

          v17 = v32;
          v14 = v33;
        }
        else
        {
          v73.origin.y = r2_24;
          v73.origin.x = v69;
          v73.size.height = r2_8;
          v73.size.width = r2_16;
          v77.origin.x = r2;
          v77.origin.y = v29;
          v77.size.width = v30;
          v77.size.height = v31;
          v74 = CGRectIntersection(v73, v77);
          v40 = v74.origin.x;
          v41 = v74.origin.y;
          v42 = v74.size.width;
          v43 = v74.size.height;
          v44 = CGRectGetHeight(v74);
          v75.origin.x = v40;
          v75.origin.y = v41;
          v75.size.width = v42;
          v75.size.height = v43;
          v45 = CGRectGetWidth(v75);

          v46 = v44 * v45 / v39;
          if (v46 > 0.0)
          {
            v47 = *v20;
            v48 = *v18;
            v49 = v47;
            v50 = sub_24970E640((uint64_t)v49, 0.7);

            if (v50)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v51 = v57;
              else
                v51 = sub_24970A638(0, v57[2] + 1, 1, v57);
              v53 = v51[2];
              v52 = v51[3];
              v11 = v62;
              if (v53 >= v52 >> 1)
                v51 = sub_24970A638((_QWORD *)(v52 > 1), v53 + 1, 1, v51);
              v51[2] = v53 + 1;
              v57 = v51;
              v51[v53 + 4] = v13;
              v8 = v61;
              goto LABEL_24;
            }
          }
        }
        v8 = v61;
        v11 = v62;
LABEL_24:

        if (v64 == ++v12)
        {
          swift_bridgeObjectRelease();
          v9 = v56;
          v10 = v57;
          goto LABEL_3;
        }
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_249717E8C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  BOOL v52;
  uint64_t v53;
  char *v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t j;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void *v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  void *v83;
  CGFloat *v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  double MinX;
  char *v90;
  void *v91;
  CGFloat *v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  double MaxX;
  char *v98;
  void *v99;
  CGFloat *v100;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  CGFloat v104;
  double MinY;
  char *v106;
  void *v107;
  CGFloat *v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  double MaxY;
  unint64_t v114;
  double v115;
  uint64_t v116;
  char v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  void *v122;
  CGRect *v123;
  double v124;
  double v125;
  double v126;
  double v127;
  void *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  objc_class *v132;
  char *v133;
  double *v134;
  char *v135;
  id v136;
  objc_class *v137;
  char *v138;
  char *v139;
  char *v140;
  void *v141;
  id v142;
  id v143;
  id v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  objc_super v154;
  objc_super v155;
  uint64_t v156;
  uint64_t v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;

  v1 = _s15UIUnderstanding9UIUSorterC25getXCutSegmentationPoints10detectionsSDySdSayAA8UIObjectCGGAH_tFZ_0(a1);
  v157 = MEMORY[0x24BEE4AF8];
  v147 = v1 + 64;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  v6 = 0;
  v145 = v5;
  v146 = swift_bridgeObjectRetain();
  while (1)
  {
    do
    {
      do
      {
        while (v4)
        {
          v7 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
          v8 = v7 | (v6 << 6);
          if (*(_QWORD *)(v1 + 16))
            goto LABEL_25;
        }
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
          goto LABEL_170;
        }
        if (v9 >= v5)
          goto LABEL_164;
        v10 = *(_QWORD *)(v147 + 8 * v9);
        ++v6;
        if (!v10)
        {
          v6 = v9 + 1;
          if (v9 + 1 >= v5)
            goto LABEL_164;
          v10 = *(_QWORD *)(v147 + 8 * v6);
          if (!v10)
          {
            v6 = v9 + 2;
            if (v9 + 2 >= v5)
              goto LABEL_164;
            v10 = *(_QWORD *)(v147 + 8 * v6);
            if (!v10)
            {
              v6 = v9 + 3;
              if (v9 + 3 >= v5)
                goto LABEL_164;
              v10 = *(_QWORD *)(v147 + 8 * v6);
              if (!v10)
              {
                v6 = v9 + 4;
                if (v9 + 4 >= v5)
                  goto LABEL_164;
                v10 = *(_QWORD *)(v147 + 8 * v6);
                if (!v10)
                {
                  v11 = v9 + 5;
                  if (v11 >= v5)
                    goto LABEL_164;
                  v10 = *(_QWORD *)(v147 + 8 * v11);
                  if (!v10)
                  {
                    while (1)
                    {
                      v6 = v11 + 1;
                      if (__OFADD__(v11, 1))
                        goto LABEL_175;
                      if (v6 >= v5)
                        break;
                      v10 = *(_QWORD *)(v147 + 8 * v6);
                      ++v11;
                      if (v10)
                        goto LABEL_24;
                    }
LABEL_164:
                    swift_release();
                    swift_bridgeObjectRelease();
                    return;
                  }
                  v6 = v11;
                }
              }
            }
          }
        }
LABEL_24:
        v4 = (v10 - 1) & v10;
        v8 = __clz(__rbit64(v10)) + (v6 << 6);
      }
      while (!*(_QWORD *)(v1 + 16));
LABEL_25:
      v12 = sub_249720724(*(double *)(*(_QWORD *)(v1 + 48) + 8 * v8));
    }
    while ((v13 & 1) == 0);
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v12);
    v156 = MEMORY[0x24BEE4AF8];
    v150 = v14 >> 62;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v15 = sub_24972D0BC();
      v151 = v15;
      if (!v15)
        goto LABEL_42;
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v151 = v15;
      if (!v15)
        goto LABEL_42;
    }
    if (v15 < 1)
      goto LABEL_167;
    if ((v14 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v15; ++i)
      {
        v17 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, v14) + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10
          && (v18 = *v17 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text, swift_beginAccess(),
                                                                                *(_QWORD *)(v18 + 8)))
        {
          sub_24972D020();
          sub_24972D044();
          sub_24972D050();
          sub_24972D02C();
          v15 = v151;
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      v19 = 0;
      do
      {
        v20 = *(char **)(v14 + 8 * v19 + 32);
        v21 = &v20[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v21 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
        {
          v22 = *(_QWORD *)v21 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
          swift_beginAccess();
          if (*(_QWORD *)(v22 + 8))
          {
            v23 = v20;
            sub_24972D020();
            sub_24972D044();
            sub_24972D050();
            sub_24972D02C();
          }
        }
        ++v19;
      }
      while (v151 != v19);
    }
LABEL_42:
    swift_bridgeObjectRelease();
    v153 = v14;
    v24 = v156;
    if (v156 < 0 || (v156 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v25 = sub_24972D0BC();
      swift_release();
      v148 = v4;
      v149 = v6;
      if (!v25)
      {
LABEL_58:
        swift_release();
        v27 = MEMORY[0x24BEE4AF8];
        goto LABEL_59;
      }
    }
    else
    {
      v25 = *(_QWORD *)(v156 + 16);
      v148 = v4;
      v149 = v6;
      if (!v25)
        goto LABEL_58;
    }
    v156 = MEMORY[0x24BEE4AF8];
    sub_2496D5A7C(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
      goto LABEL_168;
    v26 = 0;
    v27 = v156;
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
        v28 = (char *)MEMORY[0x24BCF6CE8](v26, v24);
      else
        v28 = (char *)*(id *)(v24 + 8 * v26 + 32);
      v29 = v28;
      v30 = &v28[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      v31 = (uint64_t *)(*(_QWORD *)v30 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
      swift_beginAccess();
      v32 = v31[1];
      if (v32)
      {
        v33 = *v31;
        v34 = v32;
      }
      else
      {
        v33 = 0;
        v34 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();

      v156 = v27;
      v36 = *(_QWORD *)(v27 + 16);
      v35 = *(_QWORD *)(v27 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_2496D5A7C(v35 > 1, v36 + 1, 1);
        v27 = v156;
      }
      ++v26;
      *(_QWORD *)(v27 + 16) = v36 + 1;
      v37 = v27 + 16 * v36;
      *(_QWORD *)(v37 + 32) = v33;
      *(_QWORD *)(v37 + 40) = v34;
    }
    while (v25 != v26);
    swift_release();
LABEL_59:
    v156 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A108);
    sub_2496D1BCC((unint64_t *)&qword_25787A110, &qword_25787A108, MEMORY[0x24BEE12B0]);
    v38 = sub_24972CB64();
    v40 = v39;
    swift_bridgeObjectRelease();
    if (!sub_24972CC30())
      break;
    if (v150)
      goto LABEL_119;
LABEL_61:
    v41 = *(_QWORD *)((v153 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
      goto LABEL_62;
LABEL_120:
    v47 = MEMORY[0x24BEE4AF8];
    if (v151)
      goto LABEL_69;
LABEL_121:
    v56 = 0;
    if (v47 < 0 || (v47 & 0x4000000000000000) != 0)
      goto LABEL_158;
LABEL_123:
    v80 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v80)
      goto LABEL_124;
LABEL_159:
    v137 = (objc_class *)type metadata accessor for BoundingBox();
    v138 = (char *)objc_allocWithZone(v137);
    v139 = &v138[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *(_OWORD *)v139 = 0u;
    *((_OWORD *)v139 + 1) = 0u;
    v140 = &v138[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v140 = 0;
    *((_QWORD *)v140 + 1) = 0;
    v154.receiver = v138;
    v154.super_class = v137;
    v136 = objc_msgSendSuper2(&v154, sel_init);
LABEL_160:
    v141 = v136;
    swift_bridgeObjectRelease();
    v142 = objc_allocWithZone((Class)type metadata accessor for UIObject());
    v143 = v141;
    v144 = UIObject.init(label:confidence:text:boundingBox:children:clickable:focused:)(14, v38, v40, v143, 1.0, v153, 0, v56);
    MEMORY[0x24BCF69D0]();
    if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_24972CCF0();
    sub_24972CD08();
    sub_24972CCE4();

    v5 = v145;
    v1 = v146;
    v4 = v148;
    v6 = v149;
  }
  swift_bridgeObjectRelease();
  v156 = MEMORY[0x24BEE4AF8];
  v57 = v151;
  if (v151)
  {
    if (v151 < 1)
      goto LABEL_172;
    if ((v153 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v58 = 0;
      do
      {
        v59 = (_QWORD *)(MEMORY[0x24BCF6CE8](v58, v153) + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v59 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4
          && (v60 = *v59 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text, swift_beginAccess(),
                                                                                *(_QWORD *)(v60 + 8)))
        {
          sub_24972D020();
          sub_24972D044();
          sub_24972D050();
          sub_24972D02C();
          v57 = v151;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v58;
      }
      while (v57 != v58);
    }
    else
    {
      swift_bridgeObjectRetain();
      for (j = 0; j != v151; ++j)
      {
        v62 = *(char **)(v153 + 8 * j + 32);
        v63 = &v62[OBJC_IVAR___UIObjectCompat_detection];
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v63 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
        {
          v64 = *(_QWORD *)v63 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text;
          swift_beginAccess();
          if (*(_QWORD *)(v64 + 8))
          {
            v65 = v62;
            sub_24972D020();
            sub_24972D044();
            sub_24972D050();
            sub_24972D02C();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v66 = v156;
  if (v156 < 0 || (v156 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v67 = sub_24972D0BC();
    swift_release();
    if (!v67)
      goto LABEL_117;
LABEL_104:
    v156 = MEMORY[0x24BEE4AF8];
    sub_2496D5A7C(0, v67 & ~(v67 >> 63), 0);
    if (v67 < 0)
      goto LABEL_173;
    v68 = 0;
    v69 = v156;
    do
    {
      if ((v66 & 0xC000000000000001) != 0)
        v70 = (char *)MEMORY[0x24BCF6CE8](v68, v66);
      else
        v70 = (char *)*(id *)(v66 + 8 * v68 + 32);
      v71 = v70;
      v72 = &v70[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      v73 = (uint64_t *)(*(_QWORD *)v72 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
      swift_beginAccess();
      if (v73[1])
      {
        v74 = *v73;
        v75 = v73[1];
      }
      else
      {
        v74 = 0;
        v75 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();

      v156 = v69;
      v77 = *(_QWORD *)(v69 + 16);
      v76 = *(_QWORD *)(v69 + 24);
      if (v77 >= v76 >> 1)
      {
        sub_2496D5A7C(v76 > 1, v77 + 1, 1);
        v69 = v156;
      }
      ++v68;
      *(_QWORD *)(v69 + 16) = v77 + 1;
      v78 = v69 + 16 * v77;
      *(_QWORD *)(v78 + 32) = v74;
      *(_QWORD *)(v78 + 40) = v75;
    }
    while (v67 != v68);
    swift_release();
  }
  else
  {
    v67 = *(_QWORD *)(v156 + 16);
    if (v67)
      goto LABEL_104;
LABEL_117:
    swift_release();
    v69 = MEMORY[0x24BEE4AF8];
  }
  v156 = v69;
  v38 = sub_24972CB64();
  v40 = v79;
  swift_bridgeObjectRelease();
  if (!v150)
    goto LABEL_61;
LABEL_119:
  swift_bridgeObjectRetain();
  v41 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (!v41)
    goto LABEL_120;
LABEL_62:
  v156 = MEMORY[0x24BEE4AF8];
  sub_24972D038();
  if (v41 < 0)
    goto LABEL_169;
  v42 = 0;
  do
  {
    if ((v153 & 0xC000000000000001) != 0)
      v43 = (char *)MEMORY[0x24BCF6CE8](v42, v153);
    else
      v43 = (char *)*(id *)(v153 + 8 * v42 + 32);
    v44 = v43;
    ++v42;
    v45 = (id *)&v43[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v46 = *v45;

    sub_24972D020();
    sub_24972D044();
    sub_24972D050();
    sub_24972D02C();
  }
  while (v41 != v42);
  v47 = v156;
  if (!v151)
    goto LABEL_121;
LABEL_69:
  swift_bridgeObjectRetain();
  v48 = 4;
  v49 = 0;
  if ((v153 & 0xC000000000000001) != 0)
  {
LABEL_70:
    v50 = (char *)MEMORY[0x24BCF6CE8](v49, v153);
    goto LABEL_72;
  }
  while (1)
  {
    v50 = (char *)*(id *)(v153 + 8 * v48);
LABEL_72:
    v51 = v50;
    v52 = __OFADD__(v49, 1);
    v53 = v49 + 1;
    if (v52)
    {
      __break(1u);
      goto LABEL_166;
    }
    v54 = &v50[OBJC_IVAR___UIObjectCompat_focusDetection];
    swift_beginAccess();
    if (*(_QWORD *)v54)
      break;

LABEL_77:
    if (v53 == v151)
    {
      swift_bridgeObjectRelease();
      v56 = 0;
      if (v47 < 0)
        goto LABEL_158;
      goto LABEL_81;
    }
    v49 = ++v48 - 4;
    if ((v153 & 0xC000000000000001) != 0)
      goto LABEL_70;
  }
  v55 = *(_BYTE *)(*(_QWORD *)v54 + OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused);

  if ((v55 & 1) == 0)
    goto LABEL_77;
  swift_bridgeObjectRelease();
  v56 = 1;
  if (v47 < 0)
    goto LABEL_158;
LABEL_81:
  if ((v47 & 0x4000000000000000) == 0)
    goto LABEL_123;
LABEL_158:
  swift_bridgeObjectRetain();
  v80 = sub_24972D0BC();
  swift_bridgeObjectRelease();
  if (!v80)
    goto LABEL_159;
LABEL_124:
  v81 = v47 & 0xC000000000000001;
  if ((v47 & 0xC000000000000001) != 0)
  {
    v82 = (char *)MEMORY[0x24BCF6CE8](0, v47);
LABEL_127:
    v83 = v82;
    v84 = (CGFloat *)&v82[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v85 = *v84;
    v86 = v84[1];
    v87 = v84[2];
    v88 = v84[3];

    v158.origin.x = v85;
    v158.origin.y = v86;
    v158.size.width = v87;
    v158.size.height = v88;
    MinX = CGRectGetMinX(v158);
    if (v81)
      v90 = (char *)MEMORY[0x24BCF6CE8](0, v47);
    else
      v90 = (char *)*(id *)(v47 + 32);
    v91 = v90;
    v92 = (CGFloat *)&v90[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v93 = *v92;
    v94 = v92[1];
    v95 = v92[2];
    v96 = v92[3];

    v159.origin.x = v93;
    v159.origin.y = v94;
    v159.size.width = v95;
    v159.size.height = v96;
    MaxX = CGRectGetMaxX(v159);
    if (v81)
      v98 = (char *)MEMORY[0x24BCF6CE8](0, v47);
    else
      v98 = (char *)*(id *)(v47 + 32);
    v99 = v98;
    v100 = (CGFloat *)&v98[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v101 = *v100;
    v102 = v100[1];
    v103 = v100[2];
    v104 = v100[3];

    v160.origin.x = v101;
    v160.origin.y = v102;
    v160.size.width = v103;
    v160.size.height = v104;
    MinY = CGRectGetMinY(v160);
    if (v81)
      v106 = (char *)MEMORY[0x24BCF6CE8](0, v47);
    else
      v106 = (char *)*(id *)(v47 + 32);
    v107 = v106;
    v108 = (CGFloat *)&v106[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v109 = *v108;
    v110 = v108[1];
    v111 = v108[2];
    v112 = v108[3];

    v161.origin.x = v109;
    v161.origin.y = v110;
    v161.size.width = v111;
    v161.size.height = v112;
    MaxY = CGRectGetMaxY(v161);
    v114 = v80 - 1;
    if (v80 < 1)
      goto LABEL_171;
    v115 = MaxY;
    v152 = v40;
    v116 = v38;
    v117 = v56;
    if (v80 != 1)
    {
      if (!v81)
      {
        v119 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v119 < 2 || v114 >= v119)
          goto LABEL_174;
      }
      v120 = 0;
      do
      {
        if (v81)
          v121 = (char *)MEMORY[0x24BCF6CE8](v120 + 1, v47);
        else
          v121 = (char *)*(id *)(v47 + 8 * v120 + 40);
        v122 = v121;
        v123 = (CGRect *)&v121[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v124 = CGRectGetMinX(*v123);
        if (v124 < MinX)
          MinX = v124;
        v125 = CGRectGetMaxX(*v123);
        if (MaxX <= v125)
          MaxX = v125;
        v126 = CGRectGetMinY(*v123);
        if (v126 < MinY)
          MinY = v126;
        v127 = CGRectGetMaxY(*v123);

        if (v115 <= v127)
          v115 = v127;
        ++v120;
      }
      while (v114 != v120);
    }
    if (v81)
      v118 = (char *)MEMORY[0x24BCF6CE8](0, v47);
    else
      v118 = (char *)*(id *)(v47 + 32);
    v128 = v118;
    v56 = v117;
    v129 = &v118[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    swift_beginAccess();
    v130 = *(_QWORD *)v129;
    v131 = *((_QWORD *)v129 + 1);

    v132 = (objc_class *)type metadata accessor for BoundingBox();
    v133 = (char *)objc_allocWithZone(v132);
    v134 = (double *)&v133[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    *v134 = MinX;
    v134[1] = MinY;
    v134[2] = MaxX - MinX;
    v134[3] = v115 - MinY;
    v135 = &v133[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
    *(_QWORD *)v135 = v130;
    *((_QWORD *)v135 + 1) = v131;
    v155.receiver = v133;
    v155.super_class = v132;
    v38 = v116;
    v40 = v152;
    v136 = objc_msgSendSuper2(&v155, sel_init);
    goto LABEL_160;
  }
  if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v82 = (char *)*(id *)(v47 + 32);
    goto LABEL_127;
  }
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
}

uint64_t sub_249718E48(unint64_t a1, CGRect *a2, uint64_t a3)
{
  uint64_t v5;
  CGRect *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  char *v16;
  double v17;
  objc_class *v18;
  char *v19;
  double *v20;
  double *v21;
  id v22;
  void **v23;
  void *v24;
  CGRect *v25;
  id *v26;
  double MinY;
  id v28;
  uint64_t v29;
  uint64_t v30;
  double MinX;
  uint64_t v32;
  double v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  unint64_t v50;
  char *v51;
  char *v52;
  objc_class *v53;
  char *v54;
  double *v55;
  double *v56;
  id v57;
  void **v58;
  void *v59;
  char *v60;
  void *v61;
  id v62;
  double v63;
  id v64;
  CGRect *v65;
  char *v66;
  unint64_t v67;
  BOOL v68;
  char *v69;
  char *v70;
  void *v71;
  id *v72;
  char *v73;
  CGRect *v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  CGRect *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id *v84;
  id v85;
  uint64_t v86;
  id v87;
  CGRect *v88;
  double v89;
  uint64_t v90;
  void *v91;
  id *v92;
  id v93;
  uint64_t v94;
  id v95;
  CGRect *v96;
  char *v97;
  void *v98;
  id *v99;
  char *v100;
  double v101;
  uint64_t v102;
  uint64_t result;
  unint64_t v104;
  CGRect *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  objc_super v112;
  objc_super v113;
  unint64_t v114[5];

  v5 = a1;
  v6 = (CGRect *)(a1 >> 62);
  if (a1 >> 62)
    goto LABEL_150;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    v114[0] = v7;
    sub_2496E8E5C((uint64_t *)v114, sub_2497126E8);
    v8 = v114[0];
    v9 = (v114[0] >> 62) & 1;
    if ((v114[0] & 0x8000000000000000) != 0)
      LODWORD(v9) = 1;
    v107 = v9;
    if ((v9 & 1) == 0)
    {
      v10 = *(_QWORD *)(v114[0] + 16);
      goto LABEL_7;
    }
    swift_retain();
    v10 = sub_24972D0BC();
    swift_release();
    if (v10 < 0)
      break;
LABEL_7:
    v11 = (double)(uint64_t)a2;
    v12 = (double)a3;
    v108 = v10;
    if (v10)
    {
      v105 = v6;
      v106 = v5;
      v13 = 0;
      v5 = 0;
      v109 = v8 & 0xC000000000000001;
      v110 = v8;
      v14 = &OBJC_IVAR___UIObjectCompat_boundingBox;
      do
      {
        if (v109)
          v25 = (CGRect *)MEMORY[0x24BCF6CE8](v5, v110);
        else
          v25 = (CGRect *)*(id *)(v110 + 8 * v5 + 32);
        v6 = v25;
        v26 = (id *)((char *)v25 + *v14);
        swift_beginAccess();
        a2 = (CGRect *)((char *)*v26 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        MinY = CGRectGetMinY(*a2);
        if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
          goto LABEL_125;
        }
        if (MinY <= -9.22337204e18)
          goto LABEL_111;
        if (MinY >= 9.22337204e18)
          goto LABEL_112;
        if (a3 >= (uint64_t)MinY)
          a3 = (uint64_t)MinY;
        v28 = *v26;
        sub_24970E18C();
        v30 = v29;

        if (v30 > v13)
          v13 = v30;
        a2 = (CGRect *)((char *)*v26 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        MinX = CGRectGetMinX(*a2);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          goto LABEL_113;
        if (MinX <= -9.22337204e18)
          goto LABEL_114;
        if (MinX >= 9.22337204e18)
          goto LABEL_115;
        v32 = (uint64_t)MinX - 20;
        if (__OFSUB__((uint64_t)MinX, 20))
          goto LABEL_116;
        a2 = (CGRect *)((char *)*v26 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v33 = CGRectGetMinY(*a2);
        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_117;
        if (v33 <= -9.22337204e18)
          goto LABEL_118;
        if (v33 >= 9.22337204e18)
          goto LABEL_119;
        v34 = v14;
        v35 = (uint64_t)v33 - 20;
        if (__OFSUB__((uint64_t)v33, 20))
          goto LABEL_120;
        a2 = (CGRect *)*v26;
        sub_24970E178();
        v37 = v36;

        v38 = __OFADD__(v37, 20);
        v39 = v37 + 20;
        if (v38)
          goto LABEL_121;
        a2 = (CGRect *)*v26;
        sub_24970E18C();
        v41 = v40;

        v42 = v41 + 20;
        if (__OFADD__(v41, 20))
          goto LABEL_122;
        v43 = v39 - v32;
        if (__OFSUB__(v39, v32))
          goto LABEL_123;
        v44 = v42 - v35;
        if (__OFSUB__(v42, v35))
          goto LABEL_124;
        if (v109)
          v15 = (char *)MEMORY[0x24BCF6CE8](v5, v110);
        else
          v15 = (char *)*(id *)(v110 + 8 * v5 + 32);
        v16 = v15;
        ++v5;
        v17 = (double)v43;
        v18 = (objc_class *)type metadata accessor for BoundingBox();
        v19 = (char *)objc_allocWithZone(v18);
        v20 = (double *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        *v20 = (double)v32;
        v20[1] = (double)v35;
        v20[2] = v17;
        v20[3] = (double)v44;
        v21 = (double *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
        *v21 = v11;
        v21[1] = v12;
        v113.receiver = v19;
        v113.super_class = v18;
        v22 = objc_msgSendSuper2(&v113, sel_init);
        v14 = v34;
        v23 = (void **)&v16[*v34];
        swift_beginAccess();
        v24 = *v23;
        *v23 = v22;

        v10 = v108;
      }
      while (v108 != v5);
      v8 = v110;
      v5 = v106;
      if (v105)
        goto LABEL_39;
LABEL_36:
      if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) <= 1)
        goto LABEL_37;
      goto LABEL_40;
    }
    v13 = 0;
    if (!v6)
      goto LABEL_36;
LABEL_39:
    swift_bridgeObjectRetain();
    v45 = sub_24972D0BC();
    swift_bridgeObjectRelease();
    if (v45 <= 1)
    {
LABEL_37:
      swift_bridgeObjectRetain();
      swift_release();
      return v5;
    }
LABEL_40:
    if (!v10)
      return v8;
    v46 = v13 + 20;
    if (__OFADD__(v13, 20))
      goto LABEL_157;
    v38 = __OFSUB__(v46, a3);
    v47 = v46 - a3;
    if (v38)
      goto LABEL_158;
    v5 = 0;
    v48 = (double)a3;
    v49 = (double)v47;
    v50 = v8 & 0xC000000000000001;
    v111 = v8 + 32;
    while (1)
    {
      v60 = v50 ? (char *)MEMORY[0x24BCF6CE8](v5, v8) : (char *)*(id *)(v8 + 8 * v5 + 32);
      v61 = v60;
      v6 = (CGRect *)&v60[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v62 = *(id *)&v6->origin.x;
      sub_24970E178();

      a2 = (CGRect *)(*(_QWORD *)&v6->origin.x + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v63 = CGRectGetMinX(*a2);
      if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
        break;
      if (v63 <= -9.22337204e18)
        goto LABEL_126;
      if (v63 >= 9.22337204e18)
        goto LABEL_127;
      a3 = v5 + 1;
      if (v5)
      {
        if (v107)
        {
          swift_bridgeObjectRetain();
          a2 = (CGRect *)sub_24972D0BC();
          swift_release();
        }
        else
        {
          a2 = *(CGRect **)(v8 + 16);
        }
        if (__OFSUB__(a2, 1))
          goto LABEL_129;
        v67 = v5 - 1;
        v68 = __OFSUB__(v5, 1);
        if ((CGRect *)v5 == (CGRect *)((char *)&a2[-1].size.height + 7))
        {
          if (v68)
            goto LABEL_140;
          if (v50)
          {
            v69 = (char *)MEMORY[0x24BCF6CE8](v67, v8);
          }
          else
          {
            if ((v67 & 0x8000000000000000) != 0)
              goto LABEL_154;
            if (v67 >= *(_QWORD *)(v8 + 16))
              goto LABEL_155;
            v69 = (char *)*(id *)(v111 + 8 * v67);
          }
          v83 = v69;
          v84 = (id *)&v69[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v85 = *v84;

          sub_24970E178();
          v82 = v86;

          v87 = *(id *)&v6->origin.x;
          sub_24970E178();
          a2 = v88;

          v6 = (CGRect *)(*(_QWORD *)&v6->origin.x + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          v89 = CGRectGetMinX(*v6);
          if ((~*(_QWORD *)&v89 & 0x7FF0000000000000) == 0)
            goto LABEL_141;
          if (v89 <= -9.22337204e18)
            goto LABEL_144;
          if (v89 >= 9.22337204e18)
            goto LABEL_146;
          v90 = (uint64_t)v89 - v82;
          if (__OFSUB__((uint64_t)v89, v82))
            goto LABEL_148;
          v79 = (uint64_t)a2 + v90;
          if (__OFADD__(a2, v90))
            goto LABEL_149;
        }
        else
        {
          if (v68)
            goto LABEL_139;
          if (v50)
          {
            v70 = (char *)MEMORY[0x24BCF6CE8](v67, v8);
          }
          else
          {
            if ((v67 & 0x8000000000000000) != 0)
              goto LABEL_153;
            if (v67 >= *(_QWORD *)(v8 + 16))
              goto LABEL_156;
            v70 = (char *)*(id *)(v111 + 8 * v67);
          }
          v91 = v70;
          v92 = (id *)&v70[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v93 = *v92;

          sub_24970E178();
          v82 = v94;

          v95 = *(id *)&v6->origin.x;
          sub_24970E178();
          a2 = v96;

          if (v50)
            v97 = (char *)MEMORY[0x24BCF6CE8](v5 + 1, v8);
          else
            v97 = (char *)*(id *)(v8 + 8 * v5 + 40);
          v98 = v97;
          v99 = (id *)&v97[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v100 = (char *)*v99;

          v6 = (CGRect *)&v100[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v101 = CGRectGetMinX(*v6);

          if ((~*(_QWORD *)&v101 & 0x7FF0000000000000) == 0)
            goto LABEL_142;
          if (v101 <= -9.22337204e18)
            goto LABEL_143;
          if (v101 >= 9.22337204e18)
            goto LABEL_145;
          if (__OFADD__(a2, (uint64_t)v101))
            goto LABEL_147;
          v79 = ((uint64_t)a2 + (uint64_t)v101) / 2;
        }
      }
      else
      {
        v64 = *(id *)&v6->origin.x;
        sub_24970E178();
        a2 = v65;

        if (v50)
          v66 = (char *)MEMORY[0x24BCF6CE8](1, v8);
        else
          v66 = (char *)*(id *)(v8 + 40);
        v71 = v66;
        v72 = (id *)&v66[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v73 = (char *)*v72;

        v74 = (CGRect *)&v73[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v75 = CGRectGetMinX(*v74);

        if ((~*(_QWORD *)&v75 & 0x7FF0000000000000) == 0)
          goto LABEL_130;
        if (v75 <= -9.22337204e18)
          goto LABEL_131;
        if (v75 >= 9.22337204e18)
          goto LABEL_132;
        v76 = (uint64_t)a2 + (uint64_t)v75;
        if (__OFADD__(a2, (uint64_t)v75))
          goto LABEL_133;
        if (v76 >= 0)
          v77 = (uint64_t)a2 + (uint64_t)v75;
        else
          v77 = v76 + 1;
        a2 = (CGRect *)(*(_QWORD *)&v6->origin.x + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v78 = CGRectGetMinX(*a2);
        if ((~*(_QWORD *)&v78 & 0x7FF0000000000000) == 0)
          goto LABEL_134;
        if (v78 <= -9.22337204e18)
          goto LABEL_135;
        if (v78 >= 9.22337204e18)
          goto LABEL_136;
        v79 = v77 >> 1;
        a2 = (CGRect *)*(id *)&v6->origin.x;
        sub_24970E178();
        v6 = v80;

        v81 = v79 - (_QWORD)v6;
        if (__OFSUB__(v79, v6))
          goto LABEL_137;
        v82 = (uint64_t)v78 - v81;
        if (__OFSUB__((uint64_t)v78, v81))
          goto LABEL_138;
      }
      v38 = __OFSUB__(v79, v82);
      v102 = v79 - v82;
      if (v38)
        goto LABEL_128;
      if (v50)
        v51 = (char *)MEMORY[0x24BCF6CE8](v5, v8);
      else
        v51 = (char *)*(id *)(v8 + 8 * v5 + 32);
      v52 = v51;
      v53 = (objc_class *)type metadata accessor for BoundingBox();
      v54 = (char *)objc_allocWithZone(v53);
      v55 = (double *)&v54[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      *v55 = (double)v82;
      v55[1] = v48;
      v55[2] = (double)v102;
      v55[3] = v49;
      v56 = (double *)&v54[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      *v56 = v11;
      v56[1] = v12;
      v112.receiver = v54;
      v112.super_class = v53;
      v57 = objc_msgSendSuper2(&v112, sel_init);
      v58 = (void **)&v52[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v59 = *v58;
      *v58 = v57;

      v5 = a3;
      if (v108 == a3)
        return v8;
    }
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    v104 = swift_bridgeObjectRetain();
    v7 = (unint64_t)sub_2496F1168(v104);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t method lookup function for UIUGrouper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIUGrouper.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UIUGrouper.groupTabButtons(detections:screenWidth:screenHeight:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UIUGrouper.removeTextInIcons(detections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_2497199AC(uint64_t a1, float a2)
{
  uint64_t v2;
  float v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  float v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = *(float *)(a1 + 32);
  result = 0;
  if (v4 != a2)
  {
    v6 = v2 - 1;
    v7 = a1 + 36;
    while (v6 != result)
    {
      v8 = *(float *)(v7 + 4 * result++);
      if (v8 == a2)
        return result;
    }
    return 0;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIUDetector.preloadIconModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = OBJC_IVAR___UIUDetectorCompat_iconDetector;
  if (!*(_QWORD *)(v0 + OBJC_IVAR___UIUDetectorCompat_iconDetector))
  {
    v3 = v0;
    if (qword_257879BF8 != -1)
      swift_once();
    v4 = (void *)qword_25787EBE8;
    if (qword_25787EBE8)
    {
      v5 = (id)qword_25787EBE8;
    }
    else
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
      v7 = (void *)qword_25787EBE8;
      qword_25787EBE8 = (uint64_t)v6;
      v5 = v6;

      v4 = 0;
    }
    v8 = v4;
    v9 = sub_249703F30(0);

    if (!v1)
    {
      *(_QWORD *)(v3 + v2) = v9;
      swift_release();
    }
  }
}

Swift::Void __swiftcall UIUDetector.addIconRecognitionResults(to:in:)(Swift::OpaquePointer to, CGImageRef in)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t i;
  _QWORD *v9;
  uint64_t j;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;

  v3 = v2;
  v6 = (void *)MEMORY[0x24BCF71E0]();
  v19 = MEMORY[0x24BEE4AF8];
  if (!((unint64_t)to._rawValue >> 62))
  {
    v7 = *(_QWORD *)(((unint64_t)to._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v14 = v19;
    if (v19 < 0)
      goto LABEL_26;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v7 = sub_24972D0BC();
  if (!v7)
    goto LABEL_17;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (((unint64_t)to._rawValue & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, to._rawValue) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v9 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
      {
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v7; ++j)
    {
      v11 = (char *)*((_QWORD *)to._rawValue + j + 4);
      v12 = &v11[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v12 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
      {
        v13 = v11;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
    }
  }
  swift_bridgeObjectRelease();
  v14 = v19;
  if (v19 < 0)
    goto LABEL_26;
LABEL_18:
  if ((v14 & 0x4000000000000000) == 0)
  {
    v15 = *(_QWORD *)(v14 + 16);
    swift_retain();
    if (!v15)
    {
LABEL_27:
      swift_release_n();
      objc_autoreleasePoolPop(v6);
      return;
    }
    goto LABEL_20;
  }
LABEL_26:
  swift_retain();
  v15 = sub_24972D0BC();
  if (!v15)
    goto LABEL_27;
LABEL_20:
  if (v15 >= 1)
  {
    v16 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x24BCF6CE8](v16, v14);
      else
        v17 = *(id *)(v14 + 8 * v16 + 32);
      v18 = v17;
      ++v16;
      v19 = (uint64_t)v17;
      sub_249719DAC(&v19, v3, in);

    }
    while (v15 != v16);
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
}

void sub_249719DAC(uint64_t *a1, uint64_t a2, CGImage *a3)
{
  void *v3;
  uint64_t v5;
  _QWORD *v6;
  CGRect *v7;
  CGFloat x;
  CGFloat MinY;
  CGRect *v10;
  CGFloat Width;
  CGRect *v12;
  CGImageRef v13;
  CGImageRef v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  float v21;
  objc_class *v22;
  char *v23;
  id v24;
  void **v25;
  void *v26;
  objc_super v27;
  CGRect v28;

  v5 = *a1;
  v6 = (_QWORD *)(*a1 + OBJC_IVAR___UIObjectCompat_boundingBox);
  swift_beginAccess();
  v7 = (CGRect *)(*v6 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  x = v7->origin.x;
  MinY = CGRectGetMinY(*v7);
  v10 = (CGRect *)(*v6 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  Width = CGRectGetWidth(*v10);
  v12 = (CGRect *)(*v6 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v28.size.height = CGRectGetHeight(*v12);
  v28.origin.x = x;
  v28.origin.y = MinY;
  v28.size.width = Width;
  v13 = CGImageCreateWithImageInRect(a3, v28);
  if (v13)
  {
    v14 = v13;
    UIUDetector.getIconRecognitionResult(_:)(v13);
    if (v3)
    {

      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_24972F6C0;
      sub_24972CFB4();
      sub_24972CC48();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787A020);
      sub_24972D05C();
      *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 40) = 0xE000000000000000;
      sub_24972D29C();
      swift_bridgeObjectRelease();

      return;
    }
    v20 = v15;
    v21 = v16;

    v19 = v21;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24972F6C0;
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 32) = 0xD000000000000018;
    *(_QWORD *)(v18 + 40) = 0x8000000249733930;
    sub_24972D29C();
    swift_bridgeObjectRelease();
    v19 = 0.0;
    v20 = 75;
  }
  v22 = (objc_class *)type metadata accessor for IconDetection();
  v23 = (char *)objc_allocWithZone(v22);
  *(_QWORD *)&v23[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_label] = v20;
  *(double *)&v23[OBJC_IVAR____TtC15UIUnderstanding13IconDetection_confidence] = v19;
  v27.receiver = v23;
  v27.super_class = v22;
  v24 = objc_msgSendSuper2(&v27, sel_init);
  v25 = (void **)(v5 + OBJC_IVAR___UIObjectCompat_iconDetection);
  swift_beginAccess();
  v26 = *v25;
  *v25 = v24;

}

float UIUDetector.getIconRecognitionResult(_:at:)(CGImage *a1, double a2, double a3, double a4, double a5)
{
  CGImageRef v5;
  CGImageRef v6;
  float v7;
  float v8;
  uint64_t v9;

  v5 = CGImageCreateWithImageInRect(a1, *(CGRect *)&a2);
  if (v5)
  {
    v6 = v5;
    UIUDetector.getIconRecognitionResult(_:)(v5);
    v8 = v7;

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24972F6C0;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = 0xD000000000000018;
    *(_QWORD *)(v9 + 40) = 0x8000000249733930;
    sub_24972D29C();
    swift_bridgeObjectRelease();
    return 0.0;
  }
  return v8;
}

void UIUDetector.getIconRecognitionResult(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  uint64_t v30;
  float *v31;
  float v32;
  float v33;
  float v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BOOL4 v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  float v48;
  uint64_t v49;
  id v50[2];

  v3 = v1;
  v50[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v9 = OBJC_IVAR___UIUDetectorCompat_iconDetector;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR___UIUDetectorCompat_iconDetector);
  if (!v10)
  {
    if (qword_257879BF8 != -1)
      swift_once();
    v39 = (void *)qword_25787EBE8;
    if (qword_25787EBE8)
    {
      v40 = (id)qword_25787EBE8;
    }
    else
    {
      v43 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
      v44 = (void *)qword_25787EBE8;
      qword_25787EBE8 = (uint64_t)v43;
      v40 = v43;

      v39 = 0;
    }
    v45 = v39;
    v46 = sub_249703F30(0);

    if (v2)
      return;
    *(_QWORD *)(v3 + v9) = v46;
    swift_release();
    v10 = *(_QWORD *)(v3 + v9);
    if (!v10)
      return;
  }
  v11 = (void *)objc_opt_self();
  v50[0] = 0;
  v12 = a1;
  swift_retain();
  v13 = objc_msgSend(v11, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v12, 256, 256, 32, 0, v50);
  if (!v13)
  {
    v41 = v50[0];
    sub_24972C8AC();

    swift_willThrow();
    swift_release();

LABEL_22:
    return;
  }
  v14 = v13;
  v49 = v6;
  v15 = v50[0];

  v16 = objc_msgSend(v14, sel_imageBufferValue);
  if (!v16)
  {
    __break(1u);
    goto LABEL_38;
  }
  type metadata accessor for IconClassificationInput();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
  v18 = *(void **)(v10 + 16);
  v50[0] = 0;
  v19 = objc_msgSend(v18, sel_predictionFromFeatures_options_error_, v17, v12, v50);
  v20 = v50[0];
  if (!v19)
  {
    v42 = v50[0];
    sub_24972C8AC();

    swift_willThrow();
    swift_release();
    swift_release();
    goto LABEL_22;
  }
  v21 = v19;
  type metadata accessor for IconClassificationOutput();
  *(_QWORD *)(swift_initStackObject() + 16) = v21;
  v22 = v20;
  swift_release();

  v23 = (void *)sub_24972CB94();
  v24 = objc_msgSend(v21, sel_featureValueForName_, v23);

  if (!v24)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v25 = objc_msgSend(v24, sel_multiArrayValue);

  v26 = v49;
  if (!v25)
  {
LABEL_39:
    __break(1u);
    return;
  }
  sub_24972C9FC();
  sub_2496D40B8();
  v27 = sub_24972CA38();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v29 = *(float *)(v27 + 32);
    v30 = v28 - 1;
    if (v30)
    {
      v31 = (float *)(v27 + 36);
      v32 = *(float *)(v27 + 32);
      do
      {
        v33 = *v31++;
        v34 = v33;
        if (v32 < v33)
        {
          v29 = v34;
          v32 = v34;
        }
        --v30;
      }
      while (v30);
    }
    swift_bridgeObjectRelease();
    v35 = sub_24972CA38();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v37 = 0;
      if (*(float *)(v35 + 32) == v29)
      {
        v38 = 1;
      }
      else
      {
        v47 = v36 - 1;
        while (1)
        {
          v38 = v47 != v37;
          if (v47 == v37)
            break;
          v48 = *(float *)(v35 + 36 + 4 * v37++);
          if (v48 == v29)
            goto LABEL_34;
        }
        v37 = 0;
      }
    }
    else
    {
      v37 = 0;
      v38 = 0;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
    if (v38)
      sub_24972C54C(v37);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v5);
    swift_release();
    swift_release();
  }
}

unint64_t sub_24971A680@<X0>(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  void *v7;
  int v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  objc_class *v20;
  _BYTE *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  char *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  uint64_t v37;

  v4 = a2;
  v7 = *(void **)a3;
  v8 = *(_DWORD *)(a3 + 8);
  v37 = MEMORY[0x24BEE4AF8];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_24972D0BC();
    v9 = result;
  }
  else
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
LABEL_14:
    v28 = *(_QWORD *)&a1[OBJC_IVAR___ScreenShotCompat_imageID];
    v27 = *(_QWORD *)&a1[OBJC_IVAR___ScreenShotCompat_imageID + 8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A5D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24972F6C0;
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v27;
    *(_QWORD *)(inited + 48) = a1;
    swift_bridgeObjectRetain_n();
    v30 = v7;
    v31 = a1;
    result = sub_24971FC84(inited);
    *(_QWORD *)a4 = v28;
    *(_QWORD *)(a4 + 8) = v27;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)(a4 + 24) = 0;
    *(_QWORD *)(a4 + 32) = v30;
    *(_DWORD *)(a4 + 40) = v8;
    *(_QWORD *)(a4 + 48) = v26;
    *(_QWORD *)(a4 + 56) = result;
    return result;
  }
  if (v9 >= 1)
  {
    v32 = v7;
    v33 = a1;
    v34 = a4;
    v11 = 0;
    v12 = &a1[OBJC_IVAR___ScreenShotCompat_imageID];
    v13 = *(_QWORD *)&a1[OBJC_IVAR___ScreenShotCompat_imageID + 8];
    v35 = *(_QWORD *)v12;
    v14 = v4 & 0xC000000000000001;
    v15 = v4;
    do
    {
      v16 = v9;
      if (v14)
        v17 = (char *)MEMORY[0x24BCF6CE8](v11, v4);
      else
        v17 = (char *)*(id *)(v4 + 8 * v11 + 32);
      v18 = v17;
      v19 = *(void **)&v17[OBJC_IVAR___DedupeElementCompat_uiObject];
      v20 = (objc_class *)type metadata accessor for DedupeElement();
      v21 = objc_allocWithZone(v20);
      v22 = &v21[OBJC_IVAR___DedupeElementCompat_screenID];
      *v22 = 0;
      v22[1] = 0;
      *(_QWORD *)&v21[OBJC_IVAR___DedupeElementCompat_uiObject] = v19;
      v21[OBJC_IVAR___DedupeElementCompat_isDuplicate] = 0;
      *v22 = v35;
      v22[1] = v13;
      v23 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36.receiver = v21;
      v36.super_class = v20;
      v24 = objc_msgSendSuper2(&v36, sel_init);

      v25 = v24;
      MEMORY[0x24BCF69D0]();
      if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24972CCF0();
      ++v11;
      sub_24972CD08();
      sub_24972CCE4();

      v9 = v16;
      v4 = v15;
    }
    while (v16 != v11);
    swift_bridgeObjectRelease();
    v26 = v37;
    a1 = v33;
    a4 = v34;
    v7 = v32;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24971A930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char *v13;
  char *v14;
  char v15;
  char v16;
  NSObject *v17;
  os_log_type_t v18;
  _QWORD *v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  const char *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  char v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  char *v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  void *v57;
  id v58;
  id v59;
  _QWORD *v60;
  char isUniquelyReferenced_nonNull_native;
  char v62;
  uint64_t v63;
  _BOOL8 v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  void *v81;
  NSObject *v82;
  void **v83;
  char *v84;
  void **v85;
  char *v86;
  CGFloat *v87;
  CGFloat v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat *v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  char *v97;
  char *v98;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v103;
  double v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  CGFloat v108;
  double v109;
  double v110;
  float v111;
  uint64_t result;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v118;
  unint64_t v119;
  uint64_t r2;
  CGFloat r2a;
  uint64_t r2_8;
  CGFloat r2_8a;
  uint64_t r2_16;
  CGFloat r2_16a;
  char *v126;
  _QWORD *v127;
  unint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  CGFloat v133;
  uint64_t v134;
  CGFloat v135;
  _QWORD *v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;

  v3 = *(_QWORD *)(a3 + 56);
  v131 = *(_QWORD *)(a3 + 48);
  if (v131 >> 62)
    goto LABEL_83;
  v4 = *(_QWORD *)((v131 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v5 = 0;
  if (!v4)
    goto LABEL_76;
  v115 = OBJC_IVAR___DedupeElementCompat_uiObject;
  v114 = OBJC_IVAR___ScreenShotCompat_groupingInfo;
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
  v119 = v3;
  v130 = v4;
  do
  {
    if (v5 == v4)
    {
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      swift_bridgeObjectRetain();
      v4 = sub_24972D0BC();
      swift_bridgeObjectRelease();
      if (v4 < 0)
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        result = sub_24972D254();
        __break(1u);
        return result;
      }
      goto LABEL_3;
    }
    if ((v131 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x24BCF6CE8](v5, v131);
    }
    else
    {
      if (v5 >= *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_80;
      v7 = *(id *)(v131 + 32 + 8 * v5);
    }
    v8 = v7;
    v9 = *(uint64_t *)((char *)&v7[1].isa + OBJC_IVAR___DedupeElementCompat_screenID);
    if (!v9)
    {
      v17 = sub_24972C9A8();
      v18 = sub_24972CDF8();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = v6;
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        v21 = v17;
        v22 = v18;
        v23 = "Element added to knownScreenGroup with no screenID";
        goto LABEL_21;
      }
LABEL_22:

      v8 = v17;
LABEL_23:

      goto LABEL_24;
    }
    if (!*(_QWORD *)(v3 + 16))
      goto LABEL_19;
    v10 = *(uint64_t *)((char *)&v7->isa + OBJC_IVAR___DedupeElementCompat_screenID);
    swift_bridgeObjectRetain();
    v132 = v10;
    v11 = sub_249720628(v10, v9);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      v17 = sub_24972C9A8();
      v24 = sub_24972CDF8();
      if (os_log_type_enabled(v17, v24))
      {
        v19 = v6;
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        v21 = v17;
        v22 = v24;
        v23 = "Unexpected scenario. ScreenID in knownScreenGroup, but no target object";
LABEL_21:
        _os_log_impl(&dword_2496CB000, v21, v22, v23, v20, 2u);
        v25 = v20;
        v6 = v19;
        MEMORY[0x24BCF76F0](v25, -1, -1);
      }
      goto LABEL_22;
    }
    v13 = *(char **)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v134 = v9;
    if (v6[2])
    {
      swift_bridgeObjectRetain();
      v14 = v13;
      sub_249720628(v10, v9);
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_33;
    }
    else
    {
      v26 = v13;
    }
    v27 = (char *)sub_2496E81CC(*(char **)(a2 + v115), *(_QWORD *)(a1 + v114));
    if (!v27)
    {
LABEL_33:
      v34 = v134;
      if (!v6[2])
        goto LABEL_72;
      goto LABEL_69;
    }
    v28 = v27;
    v127 = v6;
    v29 = OBJC_IVAR___ScreenShotCompat_groupingInfo;
    v30 = *(_QWORD *)&v13[OBJC_IVAR___ScreenShotCompat_groupingInfo];
    swift_retain();
    swift_bridgeObjectRetain();
    v31 = (void *)sub_2496E4CF4(v28, v30);
    swift_release();
    swift_bridgeObjectRelease();
    v126 = v13;
    v113 = v28;
    if (!v31)
    {
      r2_16 = v29;
      v45 = &v28[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_children];
      swift_beginAccess();
      v46 = *(_QWORD *)v45;
      if (*(_QWORD *)v45 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v47 = sub_24972D0BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v6 = v127;
      v34 = v134;
      if (!v47)
      {
LABEL_60:
        swift_bridgeObjectRelease();

        goto LABEL_68;
      }
      v128 = v46 & 0xC000000000000001;
      v48 = 4;
      v118 = v8;
      r2 = v47;
      r2_8 = v46;
      while (1)
      {
        if (v128)
          v50 = (char *)MEMORY[0x24BCF6CE8](v48 - 4, v46);
        else
          v50 = (char *)*(id *)(v46 + 8 * v48);
        v51 = v50;
        v52 = v48 - 3;
        if (__OFADD__(v48 - 4, 1))
          goto LABEL_79;
        v53 = (_QWORD *)(*(_QWORD *)&v50[OBJC_IVAR____TtC15UIUnderstanding29UIFingerprintingDetectionInfo_detection]
                       + OBJC_IVAR___UIObjectCompat_detection);
        swift_beginAccess();
        if (*(_QWORD *)(*v53 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 10)
          break;

        v34 = v134;
LABEL_40:
        ++v48;
        v49 = v52 == v47;
        v4 = v130;
        if (v49)
          goto LABEL_60;
      }
      v54 = v3;
      v55 = v6;
      v56 = *(_QWORD *)&v126[r2_16];
      swift_retain();
      swift_bridgeObjectRetain();
      v57 = (void *)sub_2496E4CF4(v51, v56);
      swift_release();
      swift_bridgeObjectRelease();
      if (!v57)
      {

        v6 = v55;
        v3 = v54;
        v34 = v134;
LABEL_59:
        v47 = r2;
        v46 = r2_8;
        goto LABEL_40;
      }
      v58 = v57;
      swift_bridgeObjectRetain();
      v59 = v58;
      v60 = v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v136 = v55;
      v3 = sub_249720628(v132, v134);
      v63 = v60[2];
      v64 = (v62 & 1) == 0;
      v65 = v63 + v64;
      if (__OFADD__(v63, v64))
        goto LABEL_81;
      v66 = v62;
      if (v60[3] >= v65)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_249727DC8();
        v34 = v134;
        v6 = v136;
        if ((v66 & 1) == 0)
        {
LABEL_51:
          v6[(v3 >> 6) + 8] |= 1 << v3;
          v69 = (uint64_t *)(v6[6] + 16 * v3);
          *v69 = v132;
          v69[1] = v34;
          *(_QWORD *)(v6[7] + 8 * v3) = v59;
          v70 = v6[2];
          v71 = __OFADD__(v70, 1);
          v72 = v70 + 1;
          if (v71)
            goto LABEL_82;
          v6[2] = v72;
          swift_bridgeObjectRetain();
          goto LABEL_58;
        }
      }
      else
      {
        sub_249726F68(v65, isUniquelyReferenced_nonNull_native);
        v34 = v134;
        v67 = sub_249720628(v132, v134);
        if ((v66 & 1) != (v68 & 1))
          goto LABEL_87;
        v3 = v67;
        v6 = v136;
        if ((v66 & 1) == 0)
          goto LABEL_51;
      }
      v73 = v6[7];

      *(_QWORD *)(v73 + 8 * v3) = v59;
      v34 = v134;
LABEL_58:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v118;
      v3 = v119;
      goto LABEL_59;
    }
    v32 = v31;
    swift_bridgeObjectRetain();
    v33 = v32;
    v34 = v134;
    v35 = v33;
    v36 = swift_isUniquelyReferenced_nonNull_native();
    v38 = sub_249720628(v10, v134);
    v39 = v127[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      goto LABEL_85;
    v42 = v37;
    if (v127[3] >= v41)
    {
      if ((v36 & 1) == 0)
        sub_249727DC8();
    }
    else
    {
      sub_249726F68(v41, v36);
      v43 = sub_249720628(v10, v134);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_87;
      v38 = v43;
    }
    if ((v42 & 1) != 0)
    {
      v74 = v127;
      v75 = v127[7];

      *(_QWORD *)(v75 + 8 * v38) = v35;
      v34 = v134;
    }
    else
    {
      v127[(v38 >> 6) + 8] |= 1 << v38;
      v76 = (uint64_t *)(v127[6] + 16 * v38);
      *v76 = v10;
      v76[1] = v134;
      *(_QWORD *)(v127[7] + 8 * v38) = v35;
      v77 = v127[2];
      v71 = __OFADD__(v77, 1);
      v78 = v77 + 1;
      if (v71)
        goto LABEL_86;
      v74 = v127;
      v127[2] = v78;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v74;
    v3 = v119;
LABEL_68:
    v13 = v126;
    if (!v6[2])
      goto LABEL_72;
LABEL_69:
    v79 = sub_249720628(v132, v34);
    if ((v80 & 1) == 0)
    {
LABEL_72:

      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v81 = v13;
    v129 = v6;
    v82 = *(id *)(v6[7] + 8 * v79);
    swift_bridgeObjectRelease();
    v83 = (void **)((char *)&v82->isa + OBJC_IVAR___UIObjectCompat_boundingBox);
    swift_beginAccess();
    v84 = (char *)*v83;
    v85 = (void **)(*(char **)((char *)&v8->isa + OBJC_IVAR___DedupeElementCompat_uiObject)
                  + OBJC_IVAR___UIObjectCompat_boundingBox);
    swift_beginAccess();
    v86 = (char *)*v85;
    v87 = (CGFloat *)&v84[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v88 = *v87;
    v89 = v87[1];
    v90 = v87[2];
    v91 = v87[3];
    v92 = (CGFloat *)&v86[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
    swift_beginAccess();
    v93 = *v92;
    v94 = v92[1];
    v95 = v92[2];
    v96 = v92[3];
    v97 = v84;
    v98 = v86;
    v133 = v89;
    v135 = v88;
    v137.origin.x = v88;
    v137.origin.y = v89;
    r2_8a = v91;
    r2_16a = v90;
    v137.size.width = v90;
    v137.size.height = v91;
    r2a = v93;
    v143.origin.x = v93;
    v143.origin.y = v94;
    v143.size.width = v95;
    v143.size.height = v96;
    v138 = CGRectUnion(v137, v143);
    x = v138.origin.x;
    y = v138.origin.y;
    width = v138.size.width;
    height = v138.size.height;
    v103 = CGRectGetHeight(v138);
    v139.origin.x = x;
    v139.origin.y = y;
    v139.size.width = width;
    v139.size.height = height;
    v104 = v103 * CGRectGetWidth(v139);
    if (v104 == 0.0)
    {

      v8 = v82;
      v6 = v129;
      v4 = v130;
      goto LABEL_23;
    }
    v140.origin.y = v133;
    v140.origin.x = v135;
    v140.size.height = r2_8a;
    v140.size.width = r2_16a;
    v144.origin.x = r2a;
    v144.origin.y = v94;
    v144.size.width = v95;
    v144.size.height = v96;
    v141 = CGRectIntersection(v140, v144);
    v105 = v141.origin.x;
    v106 = v141.origin.y;
    v107 = v141.size.width;
    v108 = v141.size.height;
    v109 = CGRectGetHeight(v141);
    v142.origin.x = v105;
    v142.origin.y = v106;
    v142.size.width = v107;
    v142.size.height = v108;
    v110 = CGRectGetWidth(v142);

    v111 = v109 * v110 / v104;
    v4 = v130;
    if (v111 > 0.5)
      goto LABEL_76;
    v6 = v129;
LABEL_24:
    ++v5;
  }
  while (v5 != v4);
  v5 = 0;
LABEL_76:
  swift_bridgeObjectRelease();
  return v5;
}

void (*sub_24971B368(double ****a1, double a2))(_QWORD *a1)
{
  double ***v4;

  v4 = (double ***)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (double **)sub_24971E7C4(v4, a2);
  return sub_24971B3BC;
}

void sub_24971B3BC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void (*sub_24971B3EC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_24972C960();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_24971E87C(v2, (uint64_t)v5);
  return sub_24971B47C;
}

void sub_24971B47C(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t static UIUSorter.navigationOrderThreshold.getter()
{
  return 20;
}

uint64_t UIUSorter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UIUSorter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24971B4F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971B650(char a1, int64_t a2, char a3, char *a4)
{
  return sub_24971BF48(a1, a2, a3, a4, &qword_25787A5E8);
}

uint64_t sub_24971B65C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257879F48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971B7B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971B914(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971BA7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971BBE0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A4E8);
  v10 = *(_QWORD *)(sub_24972C960() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_24972C960() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971BDC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A508);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 56 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971BF3C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_24971BF48(a1, a2, a3, a4, &qword_25787A5F0);
}

uint64_t sub_24971BF48(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971C0A0(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971EE6C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24971C180(v6);
  return sub_24972D02C();
}

uint64_t sub_24971C118(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24971EE94(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_24971CCB4(v5);
  *a1 = v2;
  return result;
}

void sub_24971C180(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void **v15;
  char *v16;
  void **v17;
  void *v18;
  CGFloat *v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  double MinX;
  CGRect *v29;
  double v30;
  void **v31;
  void *v32;
  char *v33;
  void **v34;
  char *v35;
  void **v36;
  void *v37;
  CGFloat *v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  id v43;
  char *v44;
  char *v45;
  char *v46;
  double v47;
  CGRect *v48;
  double v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void **v60;
  char *v61;
  void **v62;
  void *v63;
  CGFloat *v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  double v73;
  CGRect *v74;
  double v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void **__dst;
  uint64_t v152;
  uint64_t v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_24972D1B8();
  if (v5 >= v4)
  {
    if (v4 < 0)
    {
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
      goto LABEL_176;
    }
    if (v4)
      sub_249714F20(0, v4, 1, a1);
  }
  else
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
    {
LABEL_176:
      sub_24972D074();
      __break(1u);
      return;
    }
    v139 = v5;
    v136 = a1;
    if (v4 >= 2)
    {
      v7 = v6 >> 1;
      type metadata accessor for UIObject();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v153 = v8;
LABEL_12:
      v10 = 0;
      v11 = *a1;
      v138 = *a1 + 16;
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v137 = *a1 - 8;
      v150 = v4;
      v152 = *a1;
      while (1)
      {
        v12 = v10 + 1;
        v144 = v10;
        if (v10 + 1 < v4)
        {
          v140 = v9;
          v142 = v2;
          v13 = *(char **)(v11 + 8 * v12);
          v14 = *(char **)(v11 + 8 * v10);
          v15 = (void **)&v13[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v16 = (char *)*v15;
          v17 = (void **)&v14[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v18 = *v17;
          v19 = (CGFloat *)&v16[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v20 = *v19;
          v21 = v19[1];
          v22 = v19[2];
          v23 = v19[3];
          v24 = v13;
          v25 = v14;
          v26 = v16;
          v27 = v18;
          v154.origin.x = v20;
          v154.origin.y = v21;
          v154.size.width = v22;
          v154.size.height = v23;
          MinX = CGRectGetMinX(v154);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            goto LABEL_161;
          if (MinX <= -9.22337204e18)
            goto LABEL_162;
          if (MinX >= 9.22337204e18)
            goto LABEL_163;
          v29 = (CGRect *)&v27[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v30 = CGRectGetMinX(*v29);

          if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
            goto LABEL_164;
          if (v30 <= -9.22337204e18)
            goto LABEL_165;
          if (v30 >= 9.22337204e18)
            goto LABEL_166;
          v147 = (uint64_t)MinX;

          v145 = (uint64_t)v30;
          v10 = v144;
          v12 = v144 + 2;
          v4 = v150;
          if (v144 + 2 < v150)
          {
            v31 = (void **)(v138 + 8 * v144);
            do
            {
              v33 = (char *)*(v31 - 1);
              v32 = *v31;
              v34 = (void **)((char *)*v31 + OBJC_IVAR___UIObjectCompat_boundingBox);
              swift_beginAccess();
              v35 = (char *)*v34;
              v36 = (void **)&v33[OBJC_IVAR___UIObjectCompat_boundingBox];
              swift_beginAccess();
              v37 = *v36;
              v38 = (CGFloat *)&v35[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              v39 = *v38;
              v40 = v38[1];
              v41 = v38[2];
              v42 = v38[3];
              v43 = v32;
              v44 = v33;
              v45 = v35;
              v46 = v37;
              v155.origin.x = v39;
              v155.origin.y = v40;
              v155.size.width = v41;
              v155.size.height = v42;
              v47 = CGRectGetMinX(v155);
              if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
                goto LABEL_139;
              if (v47 <= -9.22337204e18)
                goto LABEL_140;
              if (v47 >= 9.22337204e18)
                goto LABEL_141;
              v48 = (CGRect *)&v46[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
              swift_beginAccess();
              v49 = CGRectGetMinX(*v48);

              if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) == 0)
                goto LABEL_142;
              if (v49 <= -9.22337204e18)
                goto LABEL_143;
              if (v49 >= 9.22337204e18)
                goto LABEL_144;

              if (v145 >= v147 == (uint64_t)v49 < (uint64_t)v47)
                goto LABEL_31;
              ++v12;
              ++v31;
            }
            while (v150 != v12);
            v12 = v150;
LABEL_31:
            v10 = v144;
          }
          v9 = v140;
          v2 = v142;
          v11 = v152;
          if (v145 >= v147)
          {
            if (v12 < v10)
              goto LABEL_171;
            if (v10 < v12)
            {
              v50 = (uint64_t *)(v137 + 8 * v12);
              v51 = v12;
              v52 = v10;
              v53 = (uint64_t *)(v152 + 8 * v10);
              do
              {
                if (v52 != --v51)
                {
                  if (!v152)
                    goto LABEL_174;
                  v54 = *v53;
                  *v53 = *v50;
                  *v50 = v54;
                }
                ++v52;
                --v50;
                ++v53;
              }
              while (v52 < v51);
            }
          }
        }
        if (v12 >= v4)
          goto LABEL_64;
        if (__OFSUB__(v12, v10))
          goto LABEL_167;
        if (v12 - v10 >= v139)
          goto LABEL_64;
        if (__OFADD__(v10, v139))
          goto LABEL_169;
        if (v10 + v139 >= v4)
          v55 = v4;
        else
          v55 = v10 + v139;
        if (v55 < v10)
          goto LABEL_170;
        if (v12 == v55)
          goto LABEL_64;
        v141 = v9;
        v143 = v2;
        v56 = v137 + 8 * v12;
        v146 = v55;
        while (2)
        {
          v57 = *(char **)(v11 + 8 * v12);
          v148 = v56;
          while (1)
          {
            v58 = v12;
            v59 = *(char **)v56;
            v60 = (void **)&v57[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v61 = (char *)*v60;
            v62 = (void **)&v59[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_beginAccess();
            v63 = *v62;
            v64 = (CGFloat *)&v61[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            v65 = *v64;
            v66 = v64[1];
            v67 = v64[2];
            v68 = v64[3];
            v69 = v57;
            v70 = v59;
            v71 = v61;
            v72 = v63;
            v156.origin.x = v65;
            v156.origin.y = v66;
            v156.size.width = v67;
            v156.size.height = v68;
            v73 = CGRectGetMinX(v156);
            if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
            {
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
              goto LABEL_156;
            }
            if (v73 <= -9.22337204e18)
              goto LABEL_130;
            if (v73 >= 9.22337204e18)
              goto LABEL_131;
            v74 = (CGRect *)&v72[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
            swift_beginAccess();
            v75 = CGRectGetMinX(*v74);

            if ((~*(_QWORD *)&v75 & 0x7FF0000000000000) == 0)
              goto LABEL_132;
            if (v75 <= -9.22337204e18)
              goto LABEL_133;
            if (v75 >= 9.22337204e18)
              goto LABEL_134;

            if ((uint64_t)v75 < (uint64_t)v73)
              break;
            v11 = v152;
            if (!v152)
              goto LABEL_172;
            v12 = v58;
            v76 = *(char **)v56;
            v57 = *(char **)(v56 + 8);
            *(_QWORD *)v56 = v57;
            *(_QWORD *)(v56 + 8) = v76;
            v56 -= 8;
            if (v58 == ++v10)
              goto LABEL_51;
          }
          v11 = v152;
          v12 = v58;
LABEL_51:
          ++v12;
          v56 = v148 + 8;
          v10 = v144;
          if (v12 != v146)
            continue;
          break;
        }
        v12 = v146;
        v9 = v141;
        v2 = v143;
        v4 = v150;
LABEL_64:
        if (v12 < v10)
          goto LABEL_160;
        v149 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24971DB80(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v78 = *((_QWORD *)v9 + 2);
        v77 = *((_QWORD *)v9 + 3);
        v79 = v78 + 1;
        v11 = v152;
        v80 = v2;
        if (v78 >= v77 >> 1)
        {
          v129 = sub_24971DB80((char *)(v77 > 1), v78 + 1, 1, v9);
          v11 = v152;
          v9 = v129;
        }
        *((_QWORD *)v9 + 2) = v79;
        v81 = v9 + 32;
        v82 = &v9[16 * v78 + 32];
        *(_QWORD *)v82 = v10;
        *((_QWORD *)v82 + 1) = v149;
        if (v78)
        {
          while (1)
          {
            v83 = v79 - 1;
            if (v79 >= 4)
            {
              v88 = &v81[16 * v79];
              v89 = *((_QWORD *)v88 - 8);
              v90 = *((_QWORD *)v88 - 7);
              v94 = __OFSUB__(v90, v89);
              v91 = v90 - v89;
              if (v94)
                goto LABEL_145;
              v93 = *((_QWORD *)v88 - 6);
              v92 = *((_QWORD *)v88 - 5);
              v94 = __OFSUB__(v92, v93);
              v86 = v92 - v93;
              v87 = v94;
              if (v94)
                goto LABEL_146;
              v95 = v79 - 2;
              v96 = &v81[16 * v79 - 32];
              v98 = *(_QWORD *)v96;
              v97 = *((_QWORD *)v96 + 1);
              v94 = __OFSUB__(v97, v98);
              v99 = v97 - v98;
              if (v94)
                goto LABEL_148;
              v94 = __OFADD__(v86, v99);
              v100 = v86 + v99;
              if (v94)
                goto LABEL_151;
              if (v100 >= v91)
              {
                v118 = &v81[16 * v83];
                v120 = *(_QWORD *)v118;
                v119 = *((_QWORD *)v118 + 1);
                v94 = __OFSUB__(v119, v120);
                v121 = v119 - v120;
                if (v94)
                  goto LABEL_155;
                v111 = v86 < v121;
                goto LABEL_101;
              }
            }
            else
            {
              if (v79 != 3)
              {
                v112 = *((_QWORD *)v9 + 4);
                v113 = *((_QWORD *)v9 + 5);
                v94 = __OFSUB__(v113, v112);
                v105 = v113 - v112;
                v106 = v94;
                goto LABEL_95;
              }
              v85 = *((_QWORD *)v9 + 4);
              v84 = *((_QWORD *)v9 + 5);
              v94 = __OFSUB__(v84, v85);
              v86 = v84 - v85;
              v87 = v94;
            }
            if ((v87 & 1) != 0)
              goto LABEL_147;
            v95 = v79 - 2;
            v101 = &v81[16 * v79 - 32];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v104 = __OFSUB__(v102, v103);
            v105 = v102 - v103;
            v106 = v104;
            if (v104)
              goto LABEL_150;
            v107 = &v81[16 * v83];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v94 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v94)
              goto LABEL_153;
            if (__OFADD__(v105, v110))
              goto LABEL_154;
            if (v105 + v110 >= v86)
            {
              v111 = v86 < v110;
LABEL_101:
              if (v111)
                v83 = v95;
              goto LABEL_103;
            }
LABEL_95:
            if ((v106 & 1) != 0)
              goto LABEL_149;
            v114 = &v81[16 * v83];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v94 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v94)
              goto LABEL_152;
            if (v117 < v105)
              goto LABEL_112;
LABEL_103:
            v122 = v83 - 1;
            if (v83 - 1 >= v79)
              goto LABEL_135;
            if (!v11)
              goto LABEL_173;
            v123 = v9;
            v124 = &v81[16 * v122];
            v125 = *(_QWORD *)v124;
            v126 = &v81[16 * v83];
            v127 = *((_QWORD *)v126 + 1);
            sub_24971D344((void **)(v11 + 8 * *(_QWORD *)v124), (void **)(v11 + 8 * *(_QWORD *)v126), v11 + 8 * v127, __dst);
            if (v80)
              goto LABEL_127;
            if (v127 < v125)
              goto LABEL_136;
            if (v83 > *((_QWORD *)v123 + 2))
              goto LABEL_137;
            *(_QWORD *)v124 = v125;
            *(_QWORD *)&v81[16 * v122 + 8] = v127;
            v128 = *((_QWORD *)v123 + 2);
            if (v83 >= v128)
              goto LABEL_138;
            v9 = v123;
            v79 = v128 - 1;
            memmove(&v81[16 * v83], v126 + 16, 16 * (v128 - 1 - v83));
            *((_QWORD *)v123 + 2) = v128 - 1;
            v4 = v150;
            v11 = v152;
            if (v128 <= 2)
              goto LABEL_112;
          }
        }
        v79 = 1;
LABEL_112:
        v10 = v149;
        v2 = v80;
        if (v149 >= v4)
          goto LABEL_116;
      }
    }
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v153 = MEMORY[0x24BEE4AF8];
    __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 == 1)
      goto LABEL_12;
    v79 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
    if (v79 >= 2)
    {
      v130 = *v136;
      while (1)
      {
        v131 = v79 - 2;
        if (v79 < 2)
          break;
        if (!v130)
          goto LABEL_175;
        v132 = *(_QWORD *)&v9[16 * v131 + 32];
        v133 = *(_QWORD *)&v9[16 * v79 + 24];
        sub_24971D344((void **)(v130 + 8 * v132), (void **)(v130 + 8 * *(_QWORD *)&v9[16 * v79 + 16]), v130 + 8 * v133, __dst);
        if (v2)
          goto LABEL_127;
        if (v133 < v132)
          goto LABEL_157;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_24971DDC8((uint64_t)v9);
        if (v131 >= *((_QWORD *)v9 + 2))
          goto LABEL_158;
        v134 = &v9[16 * v131 + 32];
        *(_QWORD *)v134 = v132;
        *((_QWORD *)v134 + 1) = v133;
        v135 = *((_QWORD *)v9 + 2);
        if (v79 > v135)
          goto LABEL_159;
        memmove(&v9[16 * v79 + 16], &v9[16 * v79 + 32], 16 * (v135 - v79));
        *((_QWORD *)v9 + 2) = v135 - 1;
        v79 = v135 - 1;
        if (v135 <= 2)
          goto LABEL_127;
      }
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
LABEL_127:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v153 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24972CCE4();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24971CCB4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_24972D1B8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24971D914((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_24971DDC8((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_24972CCFC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24971DB80(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_24971DB80((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_24971D914((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_24972D074();
  __break(1u);
  return result;
}

uint64_t sub_24971D344(void **__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  void **v16;
  char *v17;
  void **v18;
  char *v19;
  void **v20;
  void *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  char *v28;
  char *v29;
  char *v30;
  double v31;
  CGRect *v32;
  double v33;
  void **v34;
  void **v35;
  void **v36;
  void **v37;
  void **v38;
  void **v39;
  unint64_t v40;
  void **v41;
  char *v42;
  char *v43;
  void **v44;
  char *v45;
  void **v46;
  void *v47;
  CGFloat *v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  double MinX;
  CGRect *v58;
  double v59;
  void **v60;
  void **v61;
  uint64_t result;
  void **v63;
  void **v64;
  void **v65;
  void **v67;
  void **v68;
  void **v69;
  void **v70;
  CGRect v71;
  CGRect v72;

  v4 = __dst;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v70 = __src;
  v69 = __dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != a2 || &a2[v11] <= __dst)
      {
        v36 = a2;
        memmove(__dst, a2, 8 * v11);
        a2 = v36;
      }
      v37 = &v4[v11];
      v68 = v37;
      v70 = a2;
      if (v5 < a2 && v9 >= 8)
      {
        v38 = (void **)(a3 - 8);
        v39 = a2;
        v64 = v4;
        v65 = v5;
        while (1)
        {
          v67 = a2;
          v40 = (unint64_t)v37;
          v41 = v37 - 1;
          v42 = (char *)*(v37 - 1);
          v43 = (char *)*--v39;
          v44 = (void **)&v42[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v45 = (char *)*v44;
          v46 = (void **)&v43[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v47 = *v46;
          v48 = (CGFloat *)&v45[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v49 = *v48;
          v50 = v48[1];
          v51 = v48[2];
          v52 = v48[3];
          v53 = v42;
          v54 = v43;
          v55 = v45;
          v56 = v47;
          v72.origin.x = v49;
          v72.origin.y = v50;
          v72.size.width = v51;
          v72.size.height = v52;
          MinX = CGRectGetMinX(v72);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            break;
          if (MinX <= -9.22337204e18)
            goto LABEL_57;
          if (MinX >= 9.22337204e18)
            goto LABEL_58;
          v58 = (CGRect *)&v56[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
          swift_beginAccess();
          v59 = CGRectGetMinX(*v58);

          if ((~*(_QWORD *)&v59 & 0x7FF0000000000000) == 0)
            goto LABEL_59;
          if (v59 <= -9.22337204e18)
            goto LABEL_60;
          if (v59 >= 9.22337204e18)
            goto LABEL_61;
          v60 = v38 + 1;

          if ((uint64_t)v59 >= (uint64_t)MinX)
          {
            v61 = v64;
            v37 = (void **)v40;
            if (v60 != v67 || v38 >= v67)
              *v38 = *v39;
            v70 = v39;
            if (v39 <= v65)
              goto LABEL_55;
          }
          else
          {
            v68 = v41;
            v61 = v64;
            v39 = v67;
            if ((unint64_t)v60 < v40 || (unint64_t)v38 >= v40 || v60 != (void **)v40)
              *v38 = *v41;
            v37 = v41;
            if (v67 <= v65)
              goto LABEL_55;
          }
          --v38;
          a2 = v39;
          if (v37 <= v61)
            goto LABEL_55;
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
LABEL_55:
      sub_24971DC7C((void **)&v70, (const void **)&v69, &v68);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != __src || &__src[v8] <= __dst)
    {
      v12 = a2;
      memmove(__dst, __src, 8 * v8);
      a2 = v12;
    }
    v63 = &v4[v8];
    v68 = v63;
    if ((unint64_t)a2 < a3 && v6 >= 8)
    {
      while (1)
      {
        v13 = v5;
        v14 = a2;
        v15 = *a2;
        v16 = v4;
        v17 = (char *)*v4;
        v18 = (void **)((char *)*a2 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v19 = (char *)*v18;
        v20 = (void **)&v17[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v21 = *v20;
        v22 = (CGFloat *)&v19[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        v27 = v15;
        v28 = v17;
        v29 = v19;
        v30 = v21;
        v71.origin.x = v23;
        v71.origin.y = v24;
        v71.size.width = v25;
        v71.size.height = v26;
        v31 = CGRectGetMinX(v71);
        if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
          break;
        if (v31 <= -9.22337204e18)
          goto LABEL_63;
        if (v31 >= 9.22337204e18)
          goto LABEL_64;
        v32 = (CGRect *)&v30[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
        swift_beginAccess();
        v33 = CGRectGetMinX(*v32);

        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_65;
        if (v33 <= -9.22337204e18)
          goto LABEL_66;
        if (v33 >= 9.22337204e18)
          goto LABEL_67;

        if ((uint64_t)v33 >= (uint64_t)v31)
        {
          v35 = v14 + 1;
          v34 = v13;
          v4 = v16;
          if (v13 < v14 || v13 >= v35 || v13 != v14)
            *v13 = *v14;
        }
        else
        {
          v34 = v13;
          if (v13 != v16)
            *v13 = *v16;
          v4 = v16 + 1;
          v69 = v16 + 1;
          v35 = v14;
        }
        v5 = v34 + 1;
        if (v4 < v63)
        {
          a2 = v35;
          if ((unint64_t)v35 < a3)
            continue;
        }
        v70 = v5;
        goto LABEL_55;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    goto LABEL_55;
  }
LABEL_68:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_24971D914(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24971DC7C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

char *sub_24971DB80(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A5E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24971DC7C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_24972D0F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_24971DD24(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_24972D0F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_24971DDC8(uint64_t a1)
{
  return sub_24971DB80(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_24971DDDC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_24972CF60();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_24972D2A8();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24971DF78(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = sub_24972C960();
  v31 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v32 = a2 + 64;
    result = sub_24972CF60();
    v11 = v32;
    if ((*(_QWORD *)(v32 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_24971F9E0();
        v15 = sub_24972CB58();
        result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v13 * a1;
            if (v13 * a1 < v14 || result >= v19 + v14 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v9);
            v11 = v32;
            if (a1 != v9 || (a1 = v9, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v32;
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v11 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v23 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24971E1DC(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_249720724(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_249727C28();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(double *)(v16[6] + v19) = a3;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_249726CB0(result, a2 & 1);
  result = sub_249720724(a3);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24972D254();
  __break(1u);
  return result;
}

void sub_24971E310(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_249720628(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_249727DD4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_249726F74(v15, a4 & 1);
  v20 = sub_249720628(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_24972D254();
  __break(1u);
}

uint64_t sub_24971E46C(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_249720628(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_249727F88();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_24971FA28((uint64_t)a1, v18[7] + (v12 << 6));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 6));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_249727288(v15, a4 & 1);
  v20 = sub_249720628(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_24971FA28((uint64_t)a1, v18[7] + (v12 << 6));
    goto LABEL_11;
  }
LABEL_15:
  result = sub_24972D254();
  __break(1u);
  return result;
}

uint64_t sub_24971E5D0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_24972C960();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_249720814(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24972819C();
    goto LABEL_7;
  }
  sub_2497275F8(v17, a3 & 1);
  v23 = sub_249720814(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_24972D254();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24971E72C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24971E72C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_24972C960();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void (*sub_24971E7C4(double ***a1, double a2))(uint64_t a1)
{
  double **v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = (double **)malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = (double *)sub_24971ED34(v4);
  v4[9] = (double *)sub_24971E9A8(v4 + 4, isUniquelyReferenced_nonNull_native, a2);
  return sub_24971E840;
}

void sub_24971E840(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_24971E87C(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_24972C960();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_24971ED54(v4);
  v4[12] = sub_24971EBDC(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_24971E93C;
}

void sub_24971E93C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_24971E9A8(double **a1, char a2, double a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t *v4;
  double *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, char);

  v4 = v3;
  v8 = (double *)malloc(0x28uLL);
  *a1 = v8;
  *((_QWORD *)v8 + 2) = v4;
  v8[1] = a3;
  v9 = *v4;
  v11 = sub_249720724(a3);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a2 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v8 + 3) = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *(_QWORD *)v8 = v17;
        return sub_24971EAC8;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a2 & 1) == 0)
    {
      sub_249727C28();
      goto LABEL_7;
    }
    sub_249726CB0(v14, a2 & 1);
    v18 = sub_249720724(a3);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      *((_QWORD *)v8 + 3) = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, char))sub_24972D254();
  __break(1u);
  return result;
}

void sub_24971EAC8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = **a1;
  LOBYTE(v4) = *((_BYTE *)*a1 + 32);
  if ((a2 & 1) != 0)
  {
    if (!v3)
      goto LABEL_10;
    v5 = v2[3];
    v6 = *(_QWORD **)v2[2];
    if (((*a1)[4] & 1) != 0)
    {
LABEL_9:
      *(_QWORD *)(v6[7] + 8 * v5) = v3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      free(v2);
      return;
    }
    v7 = v2[1];
    v6[(v5 >> 6) + 8] |= 1 << v5;
    v8 = 8 * v5;
    *(_QWORD *)(v6[6] + v8) = v7;
    *(_QWORD *)(v6[7] + v8) = v3;
    v9 = v6[2];
    v10 = __OFADD__(v9, 1);
    v4 = v9 + 1;
    if (!v10)
      goto LABEL_13;
    __break(1u);
  }
  if (!v3)
  {
LABEL_10:
    if ((v4 & 1) != 0)
      sub_24971DDDC(v2[3], *(_QWORD *)v2[2]);
    goto LABEL_14;
  }
  v5 = v2[3];
  v6 = *(_QWORD **)v2[2];
  if ((v4 & 1) != 0)
    goto LABEL_9;
  v11 = v2[1];
  v6[(v5 >> 6) + 8] |= 1 << v5;
  v12 = 8 * v5;
  *(_QWORD *)(v6[6] + v12) = v11;
  *(_QWORD *)(v6[7] + v12) = v3;
  v13 = v6[2];
  v10 = __OFADD__(v13, 1);
  v4 = v13 + 1;
  if (!v10)
  {
LABEL_13:
    v6[2] = v4;
    goto LABEL_14;
  }
  __break(1u);
}

void (*sub_24971EBDC(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_249720814(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_24971ECF8;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_24972819C();
      goto LABEL_7;
    }
    sub_2497275F8(v14, a3 & 1);
    v18 = sub_249720814(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_24972C960();
  result = (void (*)(uint64_t **))sub_24972D254();
  __break(1u);
  return result;
}

void sub_24971ECF8(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_24971ED80(*a1, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_24971ED34(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24971FA64;
}

uint64_t (*sub_24971ED54(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24971ED74;
}

uint64_t sub_24971ED74(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_24971ED80(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v10 = sub_24972C960();
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if (v14)
  {
    v15 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v15[7] + 8 * a4) = v14;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 16))(v13, a5);
      sub_24971E72C(a4, (uint64_t)v13, v14, v15);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_24971DF78(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

void sub_24971EE6C()
{
  JUMPOUT(0x24BCF6EBCLL);
}

uint64_t sub_24971EE80(uint64_t a1)
{
  return sub_24971B65C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24971EE94(uint64_t a1)
{
  return sub_24971B7B8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24971EEA8(uint64_t a1)
{
  return sub_24971BA7C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_24971EEBC(uint64_t a1, uint64_t a2)
{
  sub_24971F724(a1, a2, (double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF010]);
}

uint64_t _s15UIUnderstanding9UIUSorterC25getXCutSegmentationPoints10detectionsSDySdSayAA8UIObjectCGGAH_tFZ_0(unint64_t a1)
{
  unint64_t v2;
  double ***v3;
  unint64_t v4;
  uint64_t v5;
  double ***v6;
  double v7;
  double **v8;
  double **v9;
  void **v10;
  CGRect *v11;
  double v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  id v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  id v32;
  double v33;
  double Width;
  uint64_t v35;
  unint64_t v36;
  double ***v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  double **v44;
  char *v45;
  uint64_t v46;
  double v47;
  CGRect *v48;
  double MinX;
  double ***v50;
  char v51;
  _QWORD *v52;
  void (*v53)(_QWORD *);
  _QWORD *v54;
  uint64_t v55;
  double ***v56;
  id v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  double ***v66[4];
  double ***v67;
  CGRect v68;
  CGRect v69;

  v67 = (double ***)sub_2497213A0(MEMORY[0x24BEE4AF8]);
  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_63;
  v3 = (double ***)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  while (1)
  {
    v66[0] = v3;
    sub_24971C0A0((uint64_t *)v66);
    v4 = (unint64_t)v66[0];
    if (((unint64_t)v66[0] & 0x8000000000000000) != 0
      || ((unint64_t)v66[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v5 = sub_24972D0BC();
      swift_release();
      v64 = a1;
      if (!v5)
      {
LABEL_65:
        swift_release();
        v6 = (double ***)MEMORY[0x24BEE4AF8];
LABEL_66:
        v66[0] = v6;
        swift_bridgeObjectRetain_n();
        sub_24971C118((uint64_t *)v66);
        swift_bridgeObjectRelease_n();
        v37 = v66[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_104:
          v37 = (double ***)sub_24970A744(0, (int64_t)v37[2] + 1, 1, v37);
        v39 = (unint64_t)v37[2];
        v38 = (unint64_t)v37[3];
        if (v39 >= v38 >> 1)
          v37 = (double ***)sub_24970A744((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
        v37[2] = (double **)(v39 + 1);
        v37[v39 + 4] = (double **)0x7FEFFFFFFFFFFFFFLL;
        if (v2)
        {
          swift_bridgeObjectRetain();
          v40 = sub_24972D0BC();
          if (v40)
            goto LABEL_71;
        }
        else
        {
          v40 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v40)
          {
LABEL_71:
            v2 = 0;
            v65 = a1 & 0xC000000000000001;
            v60 = a1 + 32;
            v61 = a1 & 0xFFFFFFFFFFFFFF8;
            a1 = 0x7FF0000000000000;
            v63 = v40;
            while (1)
            {
LABEL_73:
              if (v65)
              {
                v41 = (char *)MEMORY[0x24BCF6CE8](v2, v64);
              }
              else
              {
                if (v2 >= *(_QWORD *)(v61 + 16))
                  goto LABEL_103;
                v41 = (char *)*(id *)(v60 + 8 * v2);
              }
              v42 = v41;
              if (__OFADD__(v2++, 1))
              {
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
                goto LABEL_104;
              }
              v44 = v37[2];
              if (v44)
                break;

              if (v2 == v40)
                goto LABEL_98;
            }
            v45 = &v41[OBJC_IVAR___UIObjectCompat_boundingBox];
            swift_bridgeObjectRetain();
            swift_beginAccess();
            v46 = 0;
            while (1)
            {
              v47 = *(double *)&v37[v46 + 4];
              v48 = (CGRect *)(*(_QWORD *)v45 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
              swift_beginAccess();
              MinX = CGRectGetMinX(*v48);
              if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_100:
                __break(1u);
LABEL_101:
                __break(1u);
                goto LABEL_102;
              }
              if (MinX <= -9.22337204e18)
                goto LABEL_100;
              if (MinX >= 9.22337204e18)
                goto LABEL_101;
              if (v47 > (double)(uint64_t)MinX)
                break;
              if (v44 == (double **)++v46)
              {

LABEL_94:
                swift_bridgeObjectRelease();
                goto LABEL_95;
              }
            }
            swift_bridgeObjectRelease();
            v50 = v67;
            if (!v67[2] || (sub_249720724(v47), (v51 & 1) == 0))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_257879E38);
              v55 = swift_allocObject();
              *(_OWORD *)(v55 + 16) = xmmword_24972FA90;
              *(_QWORD *)(v55 + 32) = v42;
              v66[0] = (double ***)v55;
              sub_24972CCE4();
              v56 = v66[0];
              v57 = v42;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v66[0] = v50;
              sub_24971E1DC((uint64_t)v56, isUniquelyReferenced_nonNull_native, v47);
              v67 = v66[0];

              goto LABEL_94;
            }
            v53 = sub_24971B368(v66, v47);
            if (*v52)
            {
              v54 = v52;
              v42 = v42;
              MEMORY[0x24BCF69D0]();
              if (*(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_24972CCF0();
              sub_24972CD08();
              sub_24972CCE4();
            }
            ((void (*)(double ****, _QWORD))v53)(v66, 0);

LABEL_95:
            v40 = v63;
            if (v2 != v63)
              goto LABEL_73;
          }
        }
LABEL_98:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v67;
      }
    }
    else
    {
      v5 = (uint64_t)v66[0][2];
      v64 = a1;
      if (!v5)
        goto LABEL_65;
    }
    if (v5 < 1)
      break;
    v62 = v2;
    a1 = 0;
    v6 = (double ***)MEMORY[0x24BEE4AF8];
    v7 = 0.0;
    v2 = 0x43E0000000000000;
    while (1)
    {
      v8 = (v4 & 0xC000000000000001) != 0
         ? (double **)MEMORY[0x24BCF6CE8](a1, v4)
         : (double **)*(id *)(v4 + 8 * a1 + 32);
      v9 = v8;
      v10 = (void **)((char *)v8 + OBJC_IVAR___UIObjectCompat_boundingBox);
      swift_beginAccess();
      v11 = (CGRect *)((char *)*v10 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v12 = CGRectGetMinX(*v11);
      if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
        break;
      if (v12 <= -9.22337204e18)
        goto LABEL_44;
      if (v12 >= 9.22337204e18)
        goto LABEL_45;
      v13 = v5;
      v14 = *v10;
      v15 = (uint64_t)*v10 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
      if (v7 >= (double)(uint64_t)v12)
      {
        swift_beginAccess();
        v28 = *(double *)v15;
        v29 = *(double *)(v15 + 8);
        v30 = *(double *)(v15 + 16);
        v31 = *(double *)(v15 + 24);
        v32 = v14;
        v69.origin.x = v28;
        v69.origin.y = v29;
        v69.size.width = v30;
        v69.size.height = v31;
        v33 = CGRectGetMinX(v69);
        if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
          goto LABEL_46;
        if (v33 <= -9.22337204e18)
          goto LABEL_49;
        if (v33 >= 9.22337204e18)
          goto LABEL_51;
        Width = CGRectGetWidth(*(CGRect *)v15);

        if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
          goto LABEL_52;
        if (Width <= -9.22337204e18)
          goto LABEL_54;
        if (Width >= 9.22337204e18)
          goto LABEL_56;
        v35 = (uint64_t)v33 + (uint64_t)Width;
        if (__OFADD__((uint64_t)v33, (uint64_t)Width))
          goto LABEL_59;
        if (v7 < (double)v35)
          v7 = (double)v35;
      }
      else
      {
        swift_beginAccess();
        v16 = CGRectGetMinX(*(CGRect *)v15);
        if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
          goto LABEL_47;
        if (v16 <= -9.22337204e18)
          goto LABEL_48;
        if (v16 >= 9.22337204e18)
          goto LABEL_50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = (double ***)sub_24970A744(0, (int64_t)v6[2] + 1, 1, v6);
        v18 = (unint64_t)v6[2];
        v17 = (unint64_t)v6[3];
        if (v18 >= v17 >> 1)
          v6 = (double ***)sub_24970A744((_QWORD *)(v17 > 1), v18 + 1, 1, v6);
        v6[2] = (double **)(v18 + 1);
        *(double *)&v6[v18 + 4] = (v7 + (double)(uint64_t)v16) * 0.5;
        v19 = *v10;
        v20 = (uint64_t)*v10 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v21 = *(double *)v20;
        v22 = *(double *)(v20 + 8);
        v23 = *(double *)(v20 + 16);
        v24 = *(double *)(v20 + 24);
        v25 = v19;
        v68.origin.x = v21;
        v68.origin.y = v22;
        v68.size.width = v23;
        v68.size.height = v24;
        v26 = CGRectGetMinX(v68);
        if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) == 0)
          goto LABEL_53;
        if (v26 <= -9.22337204e18)
          goto LABEL_55;
        if (v26 >= 9.22337204e18)
          goto LABEL_57;
        v27 = CGRectGetWidth(*(CGRect *)v20);

        if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
          goto LABEL_58;
        if (v27 <= -9.22337204e18)
          goto LABEL_60;
        if (v27 >= 9.22337204e18)
          goto LABEL_61;
        if (__OFADD__((uint64_t)v26, (uint64_t)v27))
          goto LABEL_62;
        v7 = (double)((uint64_t)v26 + (uint64_t)v27);
      }
      ++a1;
      v5 = v13;
      if (v13 == a1)
      {
        swift_release();
        v2 = v62;
        a1 = v64;
        goto LABEL_66;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    v36 = swift_bridgeObjectRetain();
    v3 = (double ***)sub_2496F1168(v36);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  swift_release();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_24971F724(uint64_t a1, uint64_t a2, double (*a3)(uint64_t, double, double, double, double))
{
  double *v5;
  uint64_t v6;
  double v7;
  double *v8;
  uint64_t v9;
  double v10;

  v5 = (double *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v6 = swift_beginAccess();
  v7 = a3(v6, *v5, v5[1], v5[2], v5[3]);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = (double *)(a2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  v9 = swift_beginAccess();
  v10 = a3(v9, *v8, v8[1], v8[2], v8[3]);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 >= 9.22337204e18)
LABEL_13:
    __break(1u);
}

void _s15UIUnderstanding9UIUSorterC20compareForNavigation3box8otherBox16topEdgeThresholdSbAA08BoundingH0C_AISitFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CGRect *v6;
  double MinY;
  CGRect *v8;
  double v9;
  uint64_t v10;
  BOOL v11;
  double (*v12)(uint64_t, double, double, double, double);

  v6 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  MinY = CGRectGetMinY(*v6);
  if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = (CGRect *)(a2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  v9 = CGRectGetMinY(*v8);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = (uint64_t)MinY - (uint64_t)v9;
  if (__OFSUB__((uint64_t)MinY, (uint64_t)v9))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  if (v10 < 0)
  {
    v11 = __OFSUB__(0, v10);
    v10 = (uint64_t)v9 - (uint64_t)MinY;
    if (v11)
      goto LABEL_21;
  }
  if (v10 >= a3)
    v12 = (double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF010];
  else
    v12 = (double (*)(uint64_t, double, double, double, double))MEMORY[0x24BDBF018];
  sub_24971F724(a1, a2, v12);
}

uint64_t type metadata accessor for UIUSorter()
{
  return objc_opt_self();
}

uint64_t method lookup function for UIUSorter()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_24971F9E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A260;
  if (!qword_25787A260)
  {
    v1 = sub_24972C960();
    result = MEMORY[0x24BCF7648](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_25787A260);
  }
  return result;
}

uint64_t sub_24971FA28(uint64_t a1, uint64_t a2)
{
  assignWithTake for ScreenGroup(a2, a1);
  return a2;
}

unint64_t sub_24971FA6C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A6B8);
  v2 = (_QWORD *)sub_24972D0EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_249720628(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24971FB7C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A628);
  v2 = (_QWORD *)sub_24972D0EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_249720758((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24971FC84(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A6B0);
  v2 = (_QWORD *)sub_24972D0EC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_249720628(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24971FD9C(uint64_t a1)
{
  return sub_24971FF18(a1, &qword_25787A688, &qword_25787A690);
}

unint64_t sub_24971FDB0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A678);
  v2 = sub_24972D0EC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2496FD368(v6, (uint64_t)v15, &qword_25787A680);
    result = sub_24972068C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_249705424(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24971FEF0(uint64_t a1)
{
  return sub_24971FF18(a1, &qword_25787A668, &qword_25787A670);
}

unint64_t sub_24971FF04(uint64_t a1)
{
  return sub_24971FF18(a1, &qword_25787A658, &qword_25787A660);
}

unint64_t sub_24971FF18(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_24972D0EC();
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  v8 = v5 + 64;
  v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2496FD368(v9, (uint64_t)&v16, a3);
    v10 = v16;
    result = sub_249720788(v16);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v6[6] + 8 * result) = v10;
    result = (unint64_t)sub_249705424(&v17, (_OWORD *)(v6[7] + 32 * result));
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ClickabilityType.init(rawValue:)(uint64_t a1)
{
  return sub_24972174C(a1);
}

Swift::Bool __swiftcall ClickabilityType.isClickable()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;

  v1 = v0;
  v2 = sub_24972167C((uint64_t)&unk_251AA6BA8, &qword_25787A6C0);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_2497206C0(v1), (v4 & 1) != 0))
    v5 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v3);
  else
    v5 = 0;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t ClickabilityType.description.getter(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  result = 0xD000000000000010;
  switch(a1)
  {
    case 0:
      result = 0xD000000000000013;
      break;
    case 1:
    case 6:
    case 8:
    case 10:
    case 13:
      return result;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
      result = 0xD000000000000015;
      break;
    case 4:
      result = 0x676F6C616964;
      break;
    case 5:
      v3 = 1852793705;
      goto LABEL_12;
    case 7:
      result = 0x746E6F4365676170;
      break;
    case 9:
      result = 0xD000000000000013;
      break;
    case 11:
      result = 0x726564696C73;
      break;
    case 12:
      v3 = 1954047348;
LABEL_12:
      result = v3 | 0x63696C4300000000;
      break;
    case 14:
      result = 0x6C65696674786574;
      break;
    case 15:
      result = 0xD000000000000011;
      break;
    case 16:
      result = 0x6553656C67676F74;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

void *static ClickabilityType.allCases.getter()
{
  return &unk_251AA6CE8;
}

uint64_t ClickabilityType.compare(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t inited;
  BOOL v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A5F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24972FE70;
  *(_QWORD *)(inited + 32) = 0;
  *(_BYTE *)(inited + 40) = a2 < 2;
  *(_QWORD *)(inited + 48) = 1;
  *(_BYTE *)(inited + 56) = a2 < 2;
  *(_QWORD *)(inited + 64) = 2;
  *(_BYTE *)(inited + 72) = (a2 & 0xFFFFFFFFFFFFFFFELL) == 2;
  *(_QWORD *)(inited + 80) = 3;
  *(_BYTE *)(inited + 88) = a2 == 4;
  *(_QWORD *)(inited + 96) = 4;
  *(_BYTE *)(inited + 104) = a2 - 5 < 2;
  *(_QWORD *)(inited + 112) = 5;
  *(_BYTE *)(inited + 120) = a2 == 7;
  *(_QWORD *)(inited + 128) = 6;
  *(_BYTE *)(inited + 136) = (a2 & 0xFFFFFFFFFFFFFFFELL) == 8;
  *(_QWORD *)(inited + 144) = 7;
  *(_BYTE *)(inited + 152) = a2 == 10;
  *(_QWORD *)(inited + 160) = 8;
  *(_BYTE *)(inited + 168) = a2 == 11;
  *(_QWORD *)(inited + 176) = 10;
  *(_BYTE *)(inited + 184) = (a2 & 0xFFFFFFFFFFFFFFFELL) == 12;
  *(_QWORD *)(inited + 192) = 11;
  *(_BYTE *)(inited + 200) = a2 == 14;
  *(_QWORD *)(inited + 208) = 12;
  v5 = a2 - 15 < 2;
  *(_BYTE *)(inited + 216) = v5;
  *(_QWORD *)(inited + 224) = 13;
  *(_BYTE *)(inited + 232) = v5;
  *(_QWORD *)(inited + 240) = 9;
  *(_BYTE *)(inited + 248) = 0;
  *(_QWORD *)(inited + 256) = 14;
  *(_BYTE *)(inited + 264) = 0;
  *(_QWORD *)(inited + 272) = -1;
  *(_BYTE *)(inited + 280) = 0;
  v6 = sub_24972167C(inited, &qword_25787A650);
  swift_setDeallocating();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2497206C0(a1), (v8 & 1) != 0))
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 56) + v7);
  else
    v9 = 0;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ClickabilityType.compareWithoutState(_:)(unint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 == a1)
    return 1;
  switch(a2)
  {
    case 0:
    case 1:
      if (a1 >= 2)
        goto LABEL_16;
      result = 1;
      break;
    case 2:
    case 3:
      if ((a1 & 0xFFFFFFFFFFFFFFFELL) != 2)
        goto LABEL_16;
      result = 1;
      break;
    case 5:
    case 6:
      if (a1 - 5 >= 2)
        goto LABEL_16;
      result = 1;
      break;
    case 8:
    case 9:
      if ((a1 & 0xFFFFFFFFFFFFFFFELL) != 8)
        goto LABEL_16;
      result = 1;
      break;
    case 12:
    case 13:
      if ((a1 & 0xFFFFFFFFFFFFFFFELL) != 0xC)
        goto LABEL_16;
      result = 1;
      break;
    case 15:
    case 16:
      if (a1 - 15 >= 2)
        goto LABEL_16;
      result = 1;
      break;
    default:
LABEL_16:
      result = 0;
      break;
  }
  return result;
}

BOOL ClickabilityType.isOneOf(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 == a1 || a3 == a2;
}

void sub_2497204D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AA6CE8;
}

uint64_t sub_2497204E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_24972174C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_249720518()
{
  sub_249721848();
  return sub_24972CCB4();
}

uint64_t sub_249720574()
{
  sub_249721848();
  return sub_24972CCA8();
}

unint64_t sub_2497205C4(unsigned __int8 a1)
{
  uint64_t v2;

  sub_24972D2B4();
  sub_24972D2C0();
  v2 = sub_24972D2D8();
  return sub_249720878(a1, v2);
}

unint64_t sub_249720628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24972D2B4();
  sub_24972CC24();
  v4 = sub_24972D2D8();
  return sub_249720918(a1, a2, v4);
}

unint64_t sub_24972068C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24972CF6C();
  return sub_2497209F8(a1, v2);
}

unint64_t sub_2497206C0(uint64_t a1)
{
  uint64_t v2;

  sub_24972D2B4();
  sub_24972D2C0();
  v2 = sub_24972D2D8();
  return sub_249720ABC(a1, v2);
}

unint64_t sub_249720724(double a1)
{
  uint64_t v2;

  v2 = sub_24972D2A8();
  return sub_249720B58(v2, a1);
}

unint64_t sub_249720758(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24972CEDC();
  return sub_249720BF0(a1, v2);
}

unint64_t sub_249720788(uint64_t a1)
{
  uint64_t v2;

  sub_24972CBB8();
  sub_24972D2B4();
  sub_24972CC24();
  v2 = sub_24972D2D8();
  swift_bridgeObjectRelease();
  return sub_249720CF8(a1, v2);
}

unint64_t sub_249720814(uint64_t a1)
{
  uint64_t v2;

  sub_24972C960();
  sub_24972188C((unint64_t *)&qword_25787A260, MEMORY[0x24BDCEA88]);
  v2 = sub_24972CB58();
  return sub_249720E6C(a1, v2);
}

unint64_t sub_249720878(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249720918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24972D1DC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24972D1DC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2497209F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2497053E8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24BCF6C88](v9, a1);
      sub_2497053B4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_249720ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249720B58(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_249720BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_24972180C();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_24972CEE8();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_24972CEE8();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_249720CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_24972CBB8();
    v8 = v7;
    if (v6 == sub_24972CBB8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_24972D1DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_24972CBB8();
          v15 = v14;
          if (v13 == sub_24972CBB8() && v15 == v16)
            break;
          v18 = sub_24972D1DC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_249720E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_24972C960();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_24972188C(&qword_25787A4B0, MEMORY[0x24BDCEA98]);
      v14 = sub_24972CB88();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_249720FA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A620);
  v3 = (_QWORD *)sub_24972D0EC();
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_2497205C4(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_BYTE *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_2497205C4(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2497210B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A618);
    v3 = (_QWORD *)sub_24972D0EC();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_2497205C4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_249721184(uint64_t a1)
{
  return sub_24972119C(a1, &qword_25787A640);
}

unint64_t sub_249721190(uint64_t a1)
{
  return sub_24972119C(a1, &qword_25787A638);
}

unint64_t sub_24972119C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  _DWORD *i;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = (_QWORD *)sub_24972D0EC();
    for (i = (_DWORD *)(a1 + 40); ; i += 4)
    {
      v6 = *((_QWORD *)i - 1);
      v7 = *i;
      result = sub_2497206C0(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v4[6] + 8 * result) = v6;
      *(_DWORD *)(v4[7] + 4 * result) = v7;
      v10 = v4[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v4[2] = v12;
      if (!--v2)
        return (unint64_t)v4;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_24972126C(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

uint64_t sub_249721298()
{
  uint64_t v0;

  sub_24972D2B4();
  sub_24972D2C0();
  v0 = sub_24972D2D8();
  return sub_24972126C(v0);
}

unint64_t sub_2497212DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int *i;
  int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A698);
    v3 = sub_24972D0EC();
    for (i = (int *)(a1 + 32); ; ++i)
    {
      v5 = *i;
      result = sub_249721298();
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)(v3 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_DWORD *)(*(_QWORD *)(v3 + 56) + 4 * result) = v5;
      v8 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      *(_QWORD *)(v3 + 16) = v10;
      if (!--v1)
        return v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2497213A0(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double v4;
  double v5;
  unint64_t result;
  char v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double *v13;
  double v14;
  char v15;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A648);
  v3 = (_QWORD *)sub_24972D0EC();
  v4 = a1[4];
  v5 = a1[5];
  result = sub_249720724(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(double *)(v3[6] + v9) = v4;
    *(double *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_249720724(v4);
    v8 = v13;
    v5 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2497214AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A6A8);
    v3 = (_QWORD *)sub_24972D0EC();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_2497206C0(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_249721580(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A6A0);
  v3 = (_QWORD *)sub_24972D0EC();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_2497206C0(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_2497206C0(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_24972167C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  _BYTE *i;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = (_QWORD *)sub_24972D0EC();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v6 = *((_QWORD *)i - 1);
      v7 = *i;
      result = sub_2497206C0(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v4[6] + 8 * result) = v6;
      *(_BYTE *)(v4[7] + result) = v7;
      v10 = v4[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v4[2] = v12;
      if (!--v2)
        return (unint64_t)v4;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_24972174C(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 0x12)
    return 0;
  return result;
}

unint64_t sub_249721768()
{
  unint64_t result;

  result = qword_25787A600;
  if (!qword_25787A600)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ClickabilityType, &type metadata for ClickabilityType);
    atomic_store(result, (unint64_t *)&qword_25787A600);
  }
  return result;
}

unint64_t sub_2497217B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787A608;
  if (!qword_25787A608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787A610);
    result = MEMORY[0x24BCF7648](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25787A608);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickabilityType()
{
  return &type metadata for ClickabilityType;
}

unint64_t sub_24972180C()
{
  unint64_t result;

  result = qword_25787A0C0;
  if (!qword_25787A0C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25787A0C0);
  }
  return result;
}

unint64_t sub_249721848()
{
  unint64_t result;

  result = qword_25787A630;
  if (!qword_25787A630)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ClickabilityType, &type metadata for ClickabilityType);
    atomic_store(result, (unint64_t *)&qword_25787A630);
  }
  return result;
}

uint64_t sub_24972188C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24972C960();
    result = MEMORY[0x24BCF7648](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2497218CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249721928(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2497219D0 + 4 * byte_249730E3E[a2]))(0x7465446B63696C63);
}

uint64_t sub_2497219D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7465446B63696C63 && v1 == 0xEE006E6F69746365)
    v2 = 1;
  else
    v2 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_249721AC4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000065;
  v3 = 0x6C62616B63696C63;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6E656469666E6F63;
    else
      v5 = 0x7079546B63696C63;
    if (v4 == 1)
      v6 = 0xEA00000000006563;
    else
      v6 = 0xE900000000000065;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  else
  {
    v5 = 0x6C62616B63696C63;
    v6 = 0xE900000000000065;
    v7 = a2;
    if (!a2)
      goto LABEL_14;
  }
  if (v7 == 1)
    v3 = 0x6E656469666E6F63;
  else
    v3 = 0x7079546B63696C63;
  if (v7 == 1)
    v2 = 0xEA00000000006563;
LABEL_14:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249721BDC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E656469666E6F63;
  else
    v3 = 0x7375636F66;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xEA00000000006563;
  if ((a2 & 1) != 0)
    v5 = 0x6E656469666E6F63;
  else
    v5 = 0x7375636F66;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006563;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_249721C80(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E656469666E6F63;
  else
    v3 = 0x6C6562616CLL;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xEA00000000006563;
  if ((a2 & 1) != 0)
    v5 = 0x6E656469666E6F63;
  else
    v5 = 0x6C6562616CLL;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006563;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_249721D24(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E656469666E6F63;
    else
      v3 = 1954047348;
    if (v2 == 1)
      v4 = 0xEA00000000006563;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E656469666E6F63;
      else
        v6 = 1954047348;
      if (v5 == 1)
        v7 = 0xEA00000000006563;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6C6562616CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6C6562616CLL)
  {
LABEL_21:
    v8 = sub_24972D1DC();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249721E2C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7A69536567616D69;
  else
    v3 = 1952671090;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x7A69536567616D69;
  else
    v5 = 1952671090;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_24972D1DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

id FocusDetection.__allocating_init(focused:confidence:)(char a1, double a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = a1;
  *(double *)&v5[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t FocusDetection.focused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused);
}

double FocusDetection.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence);
}

id FocusDetection.init(focused:confidence:)(char a1, double a2)
{
  _BYTE *v2;
  objc_super v4;

  v2[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = a1;
  *(double *)&v2[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for FocusDetection();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for FocusDetection()
{
  return objc_opt_self();
}

void *FocusDetection.__allocating_init(from:)(_QWORD *a1)
{
  return sub_249722540(a1);
}

uint64_t sub_249722040(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A6D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497226D0();
  sub_24972D2FC();
  v8[15] = 0;
  sub_24972D170();
  if (!v1)
  {
    v8[14] = 1;
    sub_24972D17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_249722164(char *a1, char *a2)
{
  return sub_249721BDC(*a1, *a2);
}

uint64_t sub_249722170()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2497221F0()
{
  sub_24972CC24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24972224C()
{
  sub_24972D2B4();
  sub_24972CC24();
  swift_bridgeObjectRelease();
  return sub_24972D2D8();
}

uint64_t sub_2497222C8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_249722324(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7375636F66;
  if (*v1)
    v2 = 0x6E656469666E6F63;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xEA00000000006563;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249722364()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x7375636F66;
}

uint64_t sub_2497223A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_24972D110();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_249722400()
{
  sub_2497226D0();
  return sub_24972D308();
}

uint64_t sub_249722428()
{
  sub_2497226D0();
  return sub_24972D314();
}

id FocusDetection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FocusDetection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FocusDetection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FocusDetection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_2497224F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = sub_249722540(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_249722520(_QWORD *a1)
{
  return sub_249722040(a1);
}

void *sub_249722540(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  objc_super v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A700);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497226D0();
  sub_24972D2F0();
  if (!v1)
  {
    v15 = 0;
    v8 = sub_24972D134();
    v15 = 1;
    sub_24972D140();
    v11 = v10;
    v12 = (objc_class *)type metadata accessor for FocusDetection();
    v13 = objc_allocWithZone(v12);
    v13[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = v8 & 1;
    *(_QWORD *)&v13[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = v11;
    v14.receiver = v13;
    v14.super_class = v12;
    v7 = objc_msgSendSuper2(&v14, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_2497226D0()
{
  unint64_t result;

  result = qword_25787A6E0;
  if (!qword_25787A6E0)
  {
    result = MEMORY[0x24BCF7648](&unk_249730FBC, &type metadata for FocusDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A6E0);
  }
  return result;
}

uint64_t method lookup function for FocusDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FocusDetection.__allocating_init(focused:confidence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of FocusDetection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FocusDetection.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t storeEnumTagSinglePayload for FocusDetection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2497227B8 + 4 * byte_249730E49[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2497227EC + 4 * byte_249730E44[v4]))();
}

uint64_t sub_2497227EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497227F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2497227FCLL);
  return result;
}

uint64_t sub_249722808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249722810);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249722814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24972281C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FocusDetection.CodingKeys()
{
  return &type metadata for FocusDetection.CodingKeys;
}

unint64_t sub_24972283C()
{
  unint64_t result;

  result = qword_25787A6E8;
  if (!qword_25787A6E8)
  {
    result = MEMORY[0x24BCF7648](&unk_249730F94, &type metadata for FocusDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A6E8);
  }
  return result;
}

unint64_t sub_249722884()
{
  unint64_t result;

  result = qword_25787A6F0;
  if (!qword_25787A6F0)
  {
    result = MEMORY[0x24BCF7648](&unk_249730ECC, &type metadata for FocusDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A6F0);
  }
  return result;
}

unint64_t sub_2497228CC()
{
  unint64_t result;

  result = qword_25787A6F8;
  if (!qword_25787A6F8)
  {
    result = MEMORY[0x24BCF7648](&unk_249730EF4, &type metadata for FocusDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25787A6F8);
  }
  return result;
}

uint64_t UIUDetector.__allocating_init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(a1, a2, a3, a4, a5);
}

float static UIUDetector.defaultIOUThreshold.getter()
{
  return 0.2;
}

uint64_t sub_249722994()
{
  uint64_t result;

  result = sub_2496FD994((uint64_t)&unk_251AA7500);
  qword_25787EC68 = result;
  return result;
}

unint64_t ModelPlatform.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_2497229D8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

float static UIUDetector.staticIOUThreshold()()
{
  return 0.2;
}

uint64_t UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  char *v5;
  uint64_t v6;
  char *v7;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  char *v56;
  id v57;
  char *v58;
  objc_super v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;

  v7 = v5;
  v9 = &v5[OBJC_IVAR___UIUDetectorCompat_clickabilityDetector];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(_QWORD *)&v5[OBJC_IVAR___UIUDetectorCompat_iconDetector] = 0;
  v10 = &v5[OBJC_IVAR___UIUDetectorCompat_focusElementDetector];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = OBJC_IVAR___UIUDetectorCompat_clickabilityConfig;
  *(_QWORD *)&v5[OBJC_IVAR___UIUDetectorCompat_clickabilityConfig] = a5;
  *(_QWORD *)&v5[OBJC_IVAR___UIUDetectorCompat_modelPlatform] = a1;
  v64 = a3;
  switch(a1)
  {
    case 2:
      v16 = qword_257879BF8;
      v17 = v7;
      v57 = a5;
      if (v16 != -1)
        swift_once();
      v55 = v17;
      v18 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v19 = (id)qword_25787EBE8;
      }
      else
      {
        v32 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v33 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v32;
        v19 = v32;

        v18 = 0;
      }
      v34 = v18;
      v35 = sub_249703870(1);
      if (!v6)
      {
        v36 = v35;

        v63 = type metadata accessor for ElementDetectionTV();
        *(_QWORD *)&v62 = v36;
        sub_249705424(&v62, &v55[OBJC_IVAR___UIUDetectorCompat_elementDetector]);
        if (qword_257879BD8 != -1)
          swift_once();
        *(_QWORD *)&v55[OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds] = qword_25787EBB8;
        v37 = qword_257879BE8;
        swift_bridgeObjectRetain();
        if (v37 != -1)
          swift_once();
        *(_QWORD *)&v55[OBJC_IVAR___UIUDetectorCompat_clickabilityConfidenceThresholds] = qword_25787EBC8;
        v38 = (void *)qword_25787EBE8;
        if (qword_25787EBE8)
        {
          swift_bridgeObjectRetain();
          v39 = v38;
        }
        else
        {
          v48 = objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher());
          swift_bridgeObjectRetain();
          v49 = objc_msgSend(v48, sel_init);
          v50 = (void *)qword_25787EBE8;
          qword_25787EBE8 = (uint64_t)v49;
          v39 = v49;

          v38 = 0;
        }
        v46 = v64;
        v51 = v38;
        v52 = sub_249704AF8(0);

        v63 = type metadata accessor for FocusElement();
        *(_QWORD *)&v62 = v52;
        swift_beginAccess();
        sub_2496FD320((uint64_t)&v62, (uint64_t)v10);
        swift_endAccess();
        v29 = a2;
        v30 = a4;
        if (!a2)
          goto LABEL_43;
        goto LABEL_42;
      }

LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2496FD3AC((uint64_t)v9, &qword_25787A340);

      swift_release();
      sub_2496FD3AC((uint64_t)v10, &qword_25787A340);

      type metadata accessor for UIUDetector();
      swift_deallocPartialClassInstance();
      return (uint64_t)v7;
    case 1:
      v12 = qword_257879BF8;
      v56 = v7;
      v13 = a5;
      if (v12 != -1)
        swift_once();
      v14 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v15 = (id)qword_25787EBE8;
      }
      else
      {
        v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v23 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v22;
        v15 = v22;

        v14 = 0;
      }
      v24 = v14;
      v25 = sub_249703630(1);
      if (!v6)
      {
        v26 = v25;

        v63 = type metadata accessor for ElementMindNetSquare();
        *(_QWORD *)&v62 = v26;
        v27 = v56;
        sub_249705424(&v62, &v56[OBJC_IVAR___UIUDetectorCompat_elementDetector]);
        if (qword_257879BD8 != -1)
          swift_once();
        *(_QWORD *)&v56[OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds] = qword_25787EBB8;
        v28 = qword_257879BE8;
        swift_bridgeObjectRetain();
        v29 = a2;
        v30 = a4;
        if (v28 != -1)
          swift_once();
        v31 = qword_25787EBC8;
        goto LABEL_41;
      }
LABEL_34:

      goto LABEL_35;
    case 0:
      v20 = qword_257879BF8;
      v58 = v7;
      v13 = a5;
      if (v20 != -1)
        swift_once();
      v21 = (void *)qword_25787EBE8;
      if (qword_25787EBE8)
      {
        v15 = (id)qword_25787EBE8;
      }
      else
      {
        v40 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIUModelFetcher()), sel_init);
        v41 = (void *)qword_25787EBE8;
        qword_25787EBE8 = (uint64_t)v40;
        v15 = v40;

        v21 = 0;
      }
      v42 = v21;
      v43 = sub_2497033F4(1);
      if (!v6)
      {
        v44 = v43;

        v63 = type metadata accessor for ElementMindNetPortrait();
        *(_QWORD *)&v62 = v44;
        v27 = v58;
        sub_249705424(&v62, &v58[OBJC_IVAR___UIUDetectorCompat_elementDetector]);
        if (qword_257879BD0 != -1)
          swift_once();
        *(_QWORD *)&v58[OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds] = qword_25787EBB0;
        v45 = qword_257879BE0;
        swift_bridgeObjectRetain();
        v29 = a2;
        v30 = a4;
        if (v45 != -1)
          swift_once();
        v31 = qword_25787EBC0;
LABEL_41:
        *(_QWORD *)&v27[OBJC_IVAR___UIUDetectorCompat_clickabilityConfidenceThresholds] = v31;
        swift_bridgeObjectRetain();
        v46 = v64;
        if (!v29)
        {
LABEL_43:
          if (v46)
          {
            *(_QWORD *)&v7[OBJC_IVAR___UIUDetectorCompat_clickabilityConfidenceThresholds] = v46;

            swift_bridgeObjectRelease();
          }
          else
          {

          }
          v61.receiver = v7;
          v61.super_class = (Class)type metadata accessor for UIUDetector();
          v7 = (char *)objc_msgSendSuper2(&v61, sel_init);

          return (uint64_t)v7;
        }
LABEL_42:
        *(_QWORD *)&v7[OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds] = v29;
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      goto LABEL_34;
  }
  v53 = v5;
  v54 = a5;
  result = sub_24972D218();
  __break(1u);
  return result;
}

uint64_t UIUDetector.__allocating_init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(a1, a2, a3, a4, a5);
}

uint64_t UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  void *v5;
  void *v6;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  int v26;
  _QWORD *v27;
  char v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  int v50;
  int v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t result;
  id v68;
  id v69;
  _QWORD *v70;
  void *v72;
  void *v73;
  id v76;
  id v77;
  void *v78;
  _OWORD v79[2];
  _OWORD v80[4];
  __int128 v81;
  uint64_t v82;
  _OWORD v83[2];

  v6 = v5;
  if (a4)
  {
    v9 = a4;
    v10 = v5;
    v77 = v9;
    if (a5)
    {
LABEL_3:
      v11 = v9;
      v12 = v77;
      v76 = a5;
      goto LABEL_6;
    }
  }
  else
  {
    v13 = objc_allocWithZone(MEMORY[0x24BDBFFD8]);
    v14 = v5;
    v15 = v13;
    v9 = 0;
    v77 = objc_msgSend(v15, sel_init);
    if (a5)
      goto LABEL_3;
  }
  v16 = objc_allocWithZone(MEMORY[0x24BDBFFD8]);
  v17 = a4;
  v18 = v77;
  v76 = objc_msgSend(v16, sel_init);
LABEL_6:
  v72 = a5;
  v73 = v5;
  if (!a2)
  {
    v40 = a5;
    v41 = v76;
    v21 = 0;
    v42 = a3;
    if (a3)
    {
LABEL_34:
      v68 = v42;
      v44 = sub_24972CDD4();
      swift_retain();
      sub_24972CDE0();
      sub_24972AC28((uint64_t)v80, (uint64_t)&v81, &qword_25787A748);
      if (v82)
      {
        v45 = (_QWORD *)MEMORY[0x24BEE4B00];
        v70 = v21;
        while (1)
        {
          sub_249705424(v83, v80);
          sub_249705424(&v81, v79);
          sub_2496D1B4C();
          if ((swift_dynamicCast() & 1) != 0)
            break;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
LABEL_37:
          sub_24972CDE0();
          sub_24972AC28((uint64_t)v80, (uint64_t)&v81, &qword_25787A748);
          if (!v82)
            goto LABEL_58;
        }
        v46 = v44;
        sub_2496F2A70((uint64_t)v80, (uint64_t)v79);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v47 = sub_24972174C((uint64_t)objc_msgSend(v78, sel_integerValue, v68));
          v49 = v48;
          objc_msgSend(v78, sel_floatValue);
          if ((v49 & 1) == 0 && v47 != -1)
          {
            v51 = v50;
            v52 = v45;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v79[0] = v52;
            v55 = sub_2497206BC(v47);
            v56 = v52[2];
            v57 = (v54 & 1) == 0;
            v58 = v56 + v57;
            if (__OFADD__(v56, v57))
              goto LABEL_61;
            v59 = v54;
            if (v52[3] < v58)
            {
              sub_249727964(v58, isUniquelyReferenced_nonNull_native, &qword_25787A638);
              v60 = sub_2497206BC(v47);
              if ((v59 & 1) != (v61 & 1))
                goto LABEL_65;
              v55 = v60;
              v62 = *(_QWORD **)&v79[0];
              if ((v59 & 1) == 0)
                goto LABEL_53;
LABEL_51:
              v45 = v62;
              *(_DWORD *)(v62[7] + 4 * v55) = v51;
LABEL_55:

              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
              v21 = v70;
              goto LABEL_56;
            }
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v62 = *(_QWORD **)&v79[0];
              if ((v54 & 1) != 0)
                goto LABEL_51;
            }
            else
            {
              sub_2497283CC(&qword_25787A638);
              v62 = *(_QWORD **)&v79[0];
              if ((v59 & 1) != 0)
                goto LABEL_51;
            }
LABEL_53:
            v62[(v55 >> 6) + 8] |= 1 << v55;
            *(_QWORD *)(v62[6] + 8 * v55) = v47;
            *(_DWORD *)(v62[7] + 4 * v55) = v51;
            v63 = v62[2];
            v38 = __OFADD__(v63, 1);
            v64 = v63 + 1;
            if (v38)
              goto LABEL_63;
            v45 = v62;
            v62[2] = v64;
            goto LABEL_55;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);

        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
        }
LABEL_56:
        v44 = v46;
        goto LABEL_37;
      }
      v45 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_58:

      swift_release_n();
      v43 = (uint64_t)v45;
      a5 = v72;
LABEL_59:
      v65 = objc_allocWithZone((Class)type metadata accessor for UIUDetector());
      v66 = UIUDetector.init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)(a1, (uint64_t)v21, v43, v77, v76);

      swift_getObjectType();
      swift_deallocPartialClassInstance();
      return v66;
    }
LABEL_31:

    v43 = 0;
    goto LABEL_59;
  }
  v19 = a5;
  v20 = v76;
  v69 = a2;
  sub_24972CDD4();
  swift_retain();
  sub_24972CDE0();
  sub_24972AC28((uint64_t)v80, (uint64_t)&v81, &qword_25787A748);
  if (!v82)
  {
    v21 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_33:

    swift_release_n();
    v6 = v73;
    v42 = a3;
    if (a3)
      goto LABEL_34;
    goto LABEL_31;
  }
  v21 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    sub_249705424(v83, v80);
    sub_249705424(&v81, v79);
    sub_2496D1B4C();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_10;
    sub_2496F2A70((uint64_t)v80, (uint64_t)v79);
    if ((swift_dynamicCast() & 1) != 0)
      break;

LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
LABEL_11:
    sub_24972CDE0();
    sub_24972AC28((uint64_t)v80, (uint64_t)&v81, &qword_25787A748);
    if (!v82)
      goto LABEL_33;
  }
  v22 = sub_2496F3A14((uint64_t)objc_msgSend(v78, sel_integerValue));
  v24 = v23;
  objc_msgSend(v78, sel_floatValue);
  if ((v24 & 1) != 0 || v22 == -1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);

    goto LABEL_11;
  }
  v26 = v25;
  v27 = v21;
  v28 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v79[0] = v27;
  v30 = sub_2497206BC(v22);
  v31 = v27[2];
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (!__OFADD__(v31, v32))
  {
    v34 = v29;
    if (v27[3] >= v33)
    {
      if ((v28 & 1) != 0)
      {
        v21 = *(_QWORD **)&v79[0];
        if ((v29 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_2497283CC(&qword_25787A640);
        v21 = *(_QWORD **)&v79[0];
        if ((v34 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_249727964(v33, v28, &qword_25787A640);
      v35 = sub_2497206BC(v22);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_64;
      v30 = v35;
      v21 = *(_QWORD **)&v79[0];
      if ((v34 & 1) == 0)
      {
LABEL_26:
        v21[(v30 >> 6) + 8] |= 1 << v30;
        *(_QWORD *)(v21[6] + 8 * v30) = v22;
        *(_DWORD *)(v21[7] + 4 * v30) = v26;
        v37 = v21[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_62;
        v21[2] = v39;
        goto LABEL_28;
      }
    }
    *(_DWORD *)(v21[7] + 4 * v30) = v26;
LABEL_28:

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    goto LABEL_11;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  sub_24972D254();
  __break(1u);
LABEL_65:
  result = sub_24972D254();
  __break(1u);
  return result;
}

void sub_249723948(void *a1@<X0>, char *a2@<X8>, float a3@<S0>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  BOOL v34;
  size_t Width;
  uint64_t v36;
  id v37;
  size_t v38;
  uint64_t v39;
  void *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  int v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(unint64_t, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v84;
  CGImage *v85;
  double v86;
  double Height;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  unint64_t *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  double v116;
  void *v117;
  id v118;
  objc_class *v119;
  char *v120;
  char *v121;
  id v122;
  id v123;
  objc_class *v124;
  _BYTE *v125;
  id v126;
  objc_class *v127;
  _BYTE *v128;
  id v129;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  CGImage *v134;
  uint64_t v135;
  id *v136;
  id v137;
  CGFloat v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  CGImage *v147;
  char *v148;
  void **v149;
  void *v150;
  char *v151;
  id v152;
  CGFloat v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  unint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  void (*v168)(char *, uint64_t);
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  __int128 v171;
  CGImage *v172;
  uint64_t v173;
  unint64_t *v174;
  CGImageRef v175;
  uint64_t v176;
  int v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  char *v189;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  char *v192;
  unint64_t v193;
  objc_super v194;
  objc_super v195;
  objc_super v196;
  uint64_t v197;
  unint64_t v198;
  char *v199;

  v186 = a2;
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E48);
  v188 = *(_QWORD *)(v185 - 8);
  v6 = MEMORY[0x24BDAC7A8](v185);
  v192 = (char *)&v165 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v178 = (char *)&v165 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v184 = (char *)&v165 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v183 = (char *)&v165 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v182 = (char *)&v165 - v14;
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v190 = *(_QWORD *)(v187 - 8);
  v15 = MEMORY[0x24BDAC7A8](v187);
  v17 = (char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v181 = (char *)&v165 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v180 = (char *)&v165 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v179 = (char *)&v165 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v199 = (char *)&v165 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A750);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v165 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v165 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v165 - v32;
  v34 = (unint64_t)(*(_QWORD *)(v3 + OBJC_IVAR___UIUDetectorCompat_modelPlatform) - 1) > 1;
  v189 = v17;
  if (v34 || (Width = CGImageGetWidth((CGImageRef)a1), Width == CGImageGetHeight((CGImageRef)a1)))
  {
    v36 = v3;
    v37 = a1;
    v177 = 0;
  }
  else
  {
    v38 = _s15UIUnderstanding11UIUDetectorC17createSquareImageySo10CGImageRefaSgAFFZ_0((CGImage *)a1);
    if (v38)
    {
      v37 = (id)v38;
      v36 = v3;
    }
    else
    {
      v36 = v3;
      v37 = a1;
    }
    v177 = 1;
  }
  v39 = (uint64_t)&v33[*(int *)(v25 + 48)];
  v40 = v37;
  v41 = (void (*)(_QWORD, _QWORD, _QWORD))v191;
  sub_249724C88((uint64_t)v33, v39, v37);
  if (v41)
  {

    return;
  }
  v173 = v36;
  v176 = 0;
  v175 = (CGImageRef)v40;
  v172 = (CGImage *)a1;
  v42 = (uint64_t)&v31[*(int *)(v25 + 48)];
  sub_249729AE0((uint64_t)v33, (uint64_t)v31);
  sub_249729AE0(v39, v42);
  v43 = v190;
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 48);
  v45 = v187;
  v46 = v44(v31, 1, v187);
  v174 = (unint64_t *)v33;
  if (v46 == 1)
  {
    v28 = v31;
LABEL_14:
    sub_2496FD3AC(v42, &qword_25787A348);
    sub_2496FD3AC((uint64_t)v28, &qword_25787A348);
    sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
    v49 = MEMORY[0x24BEE4AF8];
    v50 = v189;
    sub_24972CA20();

    sub_2496FD3AC((uint64_t)v174, &qword_25787A750);
    v51 = v186;
    *(_QWORD *)v186 = v49;
    v52 = type metadata accessor for UIUDetectorResult();
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v51[*(int *)(v52 + 20)], v50, v45);
    return;
  }
  v47 = v31;
  v48 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  v48(v199, v47, v45);
  sub_2496FD3AC(v42, &qword_25787A348);
  v42 = (uint64_t)&v28[*(int *)(v25 + 48)];
  sub_249729AE0((uint64_t)v33, (uint64_t)v28);
  sub_249729AE0(v39, v42);
  if (v44((char *)v42, 1, v45) == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v199, v45);
    goto LABEL_14;
  }
  v191 = v48;
  v48(v179, (char *)v42, v45);
  sub_2496FD3AC((uint64_t)v28, &qword_25787A348);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257879E60);
  v53 = swift_allocObject();
  v171 = xmmword_249730A70;
  *(_OWORD *)(v53 + 16) = xmmword_249730A70;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E68);
  *(_QWORD *)(v53 + 56) = v54;
  v55 = sub_2496D1BCC(&qword_257879E70, &qword_257879E68, MEMORY[0x24BDBFF08]);
  *(_QWORD *)(v53 + 64) = v55;
  *(_QWORD *)(v53 + 32) = 0;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A510);
  *(_QWORD *)(v53 + 96) = v56;
  v57 = sub_2496D1BCC(&qword_25787A518, &qword_25787A510, MEMORY[0x24BDBFE50]);
  *(_OWORD *)(v53 + 72) = xmmword_249731010;
  *(_QWORD *)(v53 + 136) = v54;
  *(_QWORD *)(v53 + 144) = v55;
  *(_QWORD *)(v53 + 104) = v57;
  *(_QWORD *)(v53 + 112) = 0;
  *(_QWORD *)(v53 + 176) = v54;
  *(_QWORD *)(v53 + 184) = v55;
  *(_QWORD *)(v53 + 152) = 0;
  v58 = sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v171;
  *(_QWORD *)(v59 + 56) = v54;
  *(_QWORD *)(v59 + 64) = v55;
  *(_QWORD *)(v59 + 32) = 0;
  *(_QWORD *)(v59 + 96) = v56;
  *(_QWORD *)(v59 + 104) = v57;
  *(_OWORD *)(v59 + 72) = xmmword_249731020;
  *(_QWORD *)(v59 + 136) = v54;
  *(_QWORD *)(v59 + 144) = v55;
  *(_QWORD *)(v59 + 112) = 0;
  *(_QWORD *)(v59 + 176) = v54;
  *(_QWORD *)(v59 + 184) = v55;
  *(_QWORD *)(v59 + 152) = 0;
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v171;
  *(_QWORD *)(v60 + 56) = v54;
  *(_QWORD *)(v60 + 64) = v55;
  *(_QWORD *)(v60 + 32) = 0;
  *(_QWORD *)(v60 + 96) = v56;
  *(_QWORD *)(v60 + 104) = v57;
  *(_OWORD *)(v60 + 72) = xmmword_249731030;
  *(_QWORD *)(v60 + 136) = v54;
  *(_QWORD *)(v60 + 144) = v55;
  *(_QWORD *)(v60 + 112) = 0;
  *(_QWORD *)(v60 + 176) = v54;
  *(_QWORD *)(v60 + 184) = v55;
  *(_QWORD *)(v60 + 152) = 0;
  v61 = v184;
  *(_QWORD *)&v171 = v58;
  sub_24972CA50();
  swift_bridgeObjectRelease();
  v168 = (void (*)(char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_25787A520);
  v62 = v188;
  v63 = *(_QWORD *)(v188 + 72);
  v64 = (*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
  v65 = swift_allocObject();
  v167 = xmmword_24972FA80;
  *(_OWORD *)(v65 + 16) = xmmword_24972FA80;
  v66 = *(void (**)(unint64_t, char *, uint64_t))(v62 + 16);
  v67 = v185;
  v66(v65 + v64, v61, v185);
  v66(v65 + v64 + v63, v182, v67);
  v198 = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A528);
  sub_2496D1BCC(&qword_25787A530, &qword_25787A528, MEMORY[0x24BEE12C8]);
  v68 = sub_2496D1BCC(&qword_257879E88, &qword_257879E48, MEMORY[0x24BDBFD50]);
  sub_24972C9CC();
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v167;
  v66(v69 + v64, v184, v67);
  v66(v69 + v64 + v63, v183, v67);
  v198 = v69;
  sub_24972C9CC();
  v70 = MEMORY[0x24BEE4AF8];
  v170 = (void (*)(char *, char *, uint64_t))v66;
  v169 = v68;
  v71 = v192;
  if (qword_257879C10 != -1)
    swift_once();
  v72 = 0;
  v73 = qword_25787EC68;
  v74 = qword_25787EC68 + 56;
  do
  {
    v77 = *((_QWORD *)&unk_251AA7DB8 + v72 + 4);
    if (*(_QWORD *)(v73 + 16))
    {
      sub_24972D2B4();
      sub_24972D2C0();
      v78 = sub_24972D2D8();
      v79 = -1 << *(_BYTE *)(v73 + 32);
      v80 = v78 & ~v79;
      if (((*(_QWORD *)(v74 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0)
      {
        v81 = *(_QWORD *)(v73 + 48);
        if (*(_QWORD *)(v81 + 8 * v80) == v77)
        {
LABEL_28:
          if (v77 <= 13)
            goto LABEL_21;
        }
        else
        {
          v82 = ~v79;
          while (1)
          {
            v80 = (v80 + 1) & v82;
            if (((*(_QWORD *)(v74 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
              break;
            if (*(_QWORD *)(v81 + 8 * v80) == v77)
              goto LABEL_28;
          }
        }
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v197 = v70;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2496D5A44(0, *(_QWORD *)(v70 + 16) + 1, 1);
      v70 = v197;
    }
    v76 = *(_QWORD *)(v70 + 16);
    v75 = *(_QWORD *)(v70 + 24);
    if (v76 >= v75 >> 1)
    {
      sub_2496D5A44(v75 > 1, v76 + 1, 1);
      v70 = v197;
    }
    *(_QWORD *)(v70 + 16) = v76 + 1;
    *(_QWORD *)(v70 + 8 * v76 + 32) = v77;
    v71 = v192;
LABEL_21:
    ++v72;
  }
  while (v72 != 16);
  v84 = sub_249729A5C(v70, (void (*)(void))sub_24972ABE4, (uint64_t)&type metadata for UIType, &qword_25787A378);
  swift_release();
  v85 = v175;
  v86 = (double)(uint64_t)CGImageGetWidth(v175);
  Height = (double)(uint64_t)CGImageGetHeight(v85);
  v88 = v178;
  v89 = v187;
  sub_24972C9F0();
  v90 = v185;
  v170(v71, v88, v185);
  v91 = (uint64_t)v189;
  sub_24972CA14();
  v92 = v173;
  v166 = OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds;
  v93 = *(_QWORD *)(v173 + OBJC_IVAR___UIUDetectorCompat_elementConfidenceThresholds);
  swift_bridgeObjectRetain();
  v94 = sub_2496FB048(v86, Height, v91, v93);
  swift_bridgeObjectRelease();
  v190 = *(_QWORD *)(v190 + 8);
  ((void (*)(uint64_t, uint64_t))v190)(v91, v89);
  swift_bridgeObjectRetain();
  v95 = v176;
  v96 = v71;
  v97 = sub_249729868(v94, v84);
  v176 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v167 = _s15UIUnderstanding19CenterNetPredictionC24nonMaximalSuppressionIOU5boxes9thresholdSayACGAG_SftFZ_0(v97, a3);
  swift_bridgeObjectRelease();
  v168 = *(void (**)(char *, uint64_t))(v188 + 8);
  v168(v88, v90);
  swift_bridgeObjectRelease();
  if (qword_257879C10 != -1)
    swift_once();
  v98 = qword_25787EC68;
  v99 = v88;
  sub_24972C9F0();
  v170(v96, v88, v90);
  sub_24972CA14();
  v100 = *(_QWORD *)(v92 + v166);
  swift_bridgeObjectRetain();
  v101 = sub_2496FB048(v86, Height, v91, v100);
  swift_bridgeObjectRelease();
  v102 = (void (*)(char *, uint64_t))v190;
  ((void (*)(uint64_t, uint64_t))v190)(v91, v89);
  swift_bridgeObjectRetain();
  v103 = v176;
  v104 = sub_249729868(v101, v98);
  v176 = v103;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v105 = _s15UIUnderstanding19CenterNetPredictionC24nonMaximalSuppressionIOU5boxes9thresholdSayACGAG_SftFZ_0(v104, a3);
  swift_bridgeObjectRelease();
  v168(v99, v90);
  v198 = v167;
  sub_2497103E4(v105);
  v106 = v198;
  if (v198 >> 62)
  {
    swift_bridgeObjectRetain();
    v107 = sub_24972D0BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v107 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v108 = v199;
  v109 = v191;
  if (!v107)
  {
    swift_bridgeObjectRelease();
    v107 = MEMORY[0x24BEE4AF8];
    goto LABEL_47;
  }
  v193 = MEMORY[0x24BEE4AF8];
  v110 = &v193;
  sub_24972D038();
  if ((v107 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_64;
  }
  v111 = 0;
  v188 = v106 & 0xC000000000000001;
  v192 = (char *)v106;
  v189 = (char *)v107;
  do
  {
    if (v188)
    {
      v112 = MEMORY[0x24BCF6CE8](v111, v106);
    }
    else
    {
      v112 = *(_QWORD *)(v106 + 8 * (_QWORD)v111 + 32);
      swift_retain();
    }
    v113 = sub_2496F3A14(*(_QWORD *)(v112 + 32));
    if ((v114 & 1) != 0)
      v115 = -1;
    else
      v115 = v113;
    ++v111;
    v116 = *(float *)(v112 + 16);
    swift_beginAccess();
    v117 = *(void **)(v112 + 24);
    v118 = objc_allocWithZone((Class)type metadata accessor for UIObject());
    v119 = (objc_class *)type metadata accessor for UIDetection();
    v120 = (char *)objc_allocWithZone(v119);
    v121 = &v120[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text];
    *(_QWORD *)v121 = 0;
    *((_QWORD *)v121 + 1) = 0;
    *(_QWORD *)&v120[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label] = v115;
    *(double *)&v120[OBJC_IVAR____TtC15UIUnderstanding11UIDetection_confidence] = v116;
    swift_beginAccess();
    *(_QWORD *)v121 = 0;
    *((_QWORD *)v121 + 1) = 0;
    v122 = v117;
    swift_bridgeObjectRelease();
    v196.receiver = v120;
    v196.super_class = v119;
    v123 = objc_msgSendSuper2(&v196, sel_init);
    v124 = (objc_class *)type metadata accessor for ClickabilityDetection();
    v125 = objc_allocWithZone(v124);
    v125[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickable] = 0;
    *(_QWORD *)&v125[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_clickType] = -1;
    *(_QWORD *)&v125[OBJC_IVAR____TtC15UIUnderstanding21ClickabilityDetection_confidence] = 0;
    v195.receiver = v125;
    v195.super_class = v124;
    v126 = objc_msgSendSuper2(&v195, sel_init);
    v127 = (objc_class *)type metadata accessor for FocusDetection();
    v128 = objc_allocWithZone(v127);
    v128[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_focused] = 0;
    *(_QWORD *)&v128[OBJC_IVAR____TtC15UIUnderstanding14FocusDetection_confidence] = 0;
    v194.receiver = v128;
    v194.super_class = v127;
    v129 = objc_msgSendSuper2(&v194, sel_init);
    v130 = v126;
    v131 = (void *)sub_24972CCCC();
    objc_msgSend(v118, sel_initWithDetection_clickable_focused_icon_boundingBox_children_, v123, v130, v129, 0, v122, v131);
    swift_release();

    sub_24972D020();
    sub_24972D044();
    sub_24972D050();
    sub_24972D02C();
    v108 = v199;
    v109 = v191;
    v102 = (void (*)(char *, uint64_t))v190;
    v106 = (unint64_t)v192;
  }
  while (v189 != v111);
  v107 = v193;
  swift_bridgeObjectRelease();
  v89 = v187;
LABEL_47:
  if ((v177 & 1) == 0)
  {

    v110 = v174;
    goto LABEL_61;
  }
  v110 = v174;
  if (!(v107 >> 62))
  {
    v132 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_50;
  }
LABEL_64:
  swift_bridgeObjectRetain();
  v132 = sub_24972D0BC();
LABEL_50:
  if (!v132)
  {

    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  if (v132 < 1)
  {
    __break(1u);
  }
  else
  {
    if ((v107 & 0xC000000000000001) != 0)
    {
      v133 = 0;
      v134 = v172;
      do
      {
        v135 = MEMORY[0x24BCF6CE8](v133++, v107);
        v136 = (id *)(v135 + OBJC_IVAR___UIObjectCompat_boundingBox);
        swift_beginAccess();
        v137 = *v136;
        v138 = sub_24970F7F0(v134);
        v140 = v139;
        v142 = v141;
        v144 = v143;

        v145 = v135 + OBJC_IVAR___UIObjectCompat_normalizedSquaredRect;
        swift_beginAccess();
        *(CGFloat *)v145 = v138;
        *(_QWORD *)(v145 + 8) = v140;
        *(_QWORD *)(v145 + 16) = v142;
        *(_QWORD *)(v145 + 24) = v144;
        *(_BYTE *)(v145 + 32) = 0;
        swift_unknownObjectRelease();
      }
      while (v132 != v133);

      swift_bridgeObjectRelease();
      v89 = v187;
      v110 = v174;
      v108 = v199;
      v109 = v191;
    }
    else
    {
      v146 = 0;
      v147 = v172;
      do
      {
        v148 = *(char **)(v107 + 8 * v146++ + 32);
        v149 = (void **)&v148[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v150 = *v149;
        v151 = v148;
        v152 = v150;
        v153 = sub_24970F7F0(v147);
        v155 = v154;
        v157 = v156;
        v159 = v158;

        v160 = &v151[OBJC_IVAR___UIObjectCompat_normalizedSquaredRect];
        swift_beginAccess();
        *(CGFloat *)v160 = v153;
        *((_QWORD *)v160 + 1) = v155;
        *((_QWORD *)v160 + 2) = v157;
        *((_QWORD *)v160 + 3) = v159;
        v160[32] = 0;

      }
      while (v132 != v146);

      swift_bridgeObjectRelease();
      v89 = v187;
      v110 = v174;
      v108 = v199;
      v109 = v191;
      v102 = (void (*)(char *, uint64_t))v190;
    }
LABEL_61:
    v102(v181, v89);
    v102(v180, v89);
    v161 = v185;
    v162 = v168;
    v168(v184, v185);
    v162(v183, v161);
    v162(v182, v161);
    v102(v108, v89);
    sub_2496FD3AC((uint64_t)v110, &qword_25787A750);
    v163 = type metadata accessor for UIUDetectorResult();
    v164 = (unint64_t *)v186;
    v109(&v186[*(int *)(v163 + 20)], v179, v89);
    *v164 = v107;
  }
}

uint64_t sub_249724C88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  uint64_t inited;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void (*v105)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  id v110[6];

  v107 = a1;
  v110[4] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v102 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v104 = (char *)&v102 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v102 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v103 = (char *)&v102 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v102 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v102 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v108 = v24;
  v27 = v24;
  v28 = v25;
  v26(v27, 1, 1, v25);
  v105 = v26;
  v106 = a2;
  v26((char *)a2, 1, 1, v28);
  v29 = *(void **)(v3 + OBJC_IVAR___UIUDetectorCompat_modelPlatform);
  if (v29 == (void *)2)
  {
    v104 = v9;
    sub_2496F2A70(v3 + OBJC_IVAR___UIUDetectorCompat_elementDetector, (uint64_t)v110);
    type metadata accessor for ElementDetectionTV();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_30;
    v53 = v109;
    v54 = (void *)objc_opt_self();
    v110[0] = 0;
    v32 = a3;
    v55 = objc_msgSend(v54, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v32, 960, 544, 32, 0, v110);
    if (!v55)
      goto LABEL_31;
    v56 = v55;
    v57 = v110[0];

    v58 = objc_msgSend(v56, sel_imageBufferValue);
    if (!v58)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    type metadata accessor for ElementDetectionTVInput();
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v58;

    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
    v60 = *(void **)(v53 + 16);
    v110[0] = 0;
    v61 = objc_msgSend(v60, sel_predictionFromFeatures_options_error_, v59, v32, v110);
    v62 = v110[0];
    if (!v61)
    {
LABEL_32:
      v92 = v110[0];
      sub_24972C8AC();

      swift_willThrow();
      swift_release();
      swift_release();
      goto LABEL_33;
    }
    v63 = v61;
    type metadata accessor for ElementDetectionTVOutput();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v63;
    v65 = v62;
    swift_release();

    v66 = (void *)sub_24972CB94();
    v67 = objc_msgSend(v63, sel_featureValueForName_, v66);

    v47 = (uint64_t)v108;
    if (v67)
    {
      if (objc_msgSend(v67, sel_multiArrayValue))
      {
        sub_24972C9FC();

        goto LABEL_36;
      }

    }
    sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
    sub_24972CA20();
LABEL_36:
    v94 = v28;
    v95 = v106;
    sub_2496FD3AC(v106, &qword_25787A348);
    v96 = v94;
    v105(v12, 0, 1, v94);
    sub_24972AC28((uint64_t)v12, v95, &qword_25787A348);
    v97 = *(void **)(inited + 16);
    v98 = (void *)sub_24972CB94();
    v99 = objc_msgSend(v97, sel_featureValueForName_, v98);

    if (v99)
    {
      v100 = objc_msgSend(v99, sel_multiArrayValue);

      v101 = v104;
      if (v100)
      {
        sub_2496D1BCC((unint64_t *)&qword_257879F20, &qword_257879E50, MEMORY[0x24BDBFCD0]);
        sub_24972CA08();
        swift_release();
        swift_release();
        sub_2496FD3AC(v47, &qword_25787A348);
        v105(v101, 0, 1, v96);
        v89 = (uint64_t)v101;
        v90 = v47;
        goto LABEL_39;
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v29 == (void *)1)
  {
    sub_2496F2A70(v3 + OBJC_IVAR___UIUDetectorCompat_elementDetector, (uint64_t)v110);
    type metadata accessor for ElementMindNetSquare();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v109;
      v31 = (void *)objc_opt_self();
      v110[0] = 0;
      v32 = a3;
      v33 = objc_msgSend(v31, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v32, 896, 896, 32, 0, v110);
      if (v33)
      {
        v34 = v33;
        v35 = v110[0];

        v36 = objc_msgSend(v34, sel_imageBufferValue);
        if (v36)
        {
          type metadata accessor for ElementMindNetSquareInput();
          v37 = swift_allocObject();
          *(_QWORD *)(v37 + 16) = v36;

          v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
          v38 = *(void **)(v30 + 16);
          v110[0] = 0;
          v39 = objc_msgSend(v38, sel_predictionFromFeatures_options_error_, v37, v32, v110);
          v40 = v110[0];
          if (v39)
          {
            v41 = v39;
            type metadata accessor for ElementMindNetSquareOutput();
            v42 = swift_initStackObject();
            *(_QWORD *)(v42 + 16) = v41;
            v43 = v40;
            swift_release();

            v44 = (void *)sub_24972CB94();
            v45 = objc_msgSend(v41, sel_featureValueForName_, v44);

            if (v45)
            {
              v46 = objc_msgSend(v45, sel_multiArrayValue);

              if (v46)
              {
                sub_24972C9FC();
                v47 = (uint64_t)v108;
                sub_2496FD3AC((uint64_t)v108, &qword_25787A348);
                v105(v17, 0, 1, v28);
                sub_24972AC28((uint64_t)v17, v47, &qword_25787A348);
                v48 = *(void **)(v42 + 16);
                v49 = (void *)sub_24972CB94();
                v50 = objc_msgSend(v48, sel_featureValueForName_, v49);

                if (v50)
                {
                  v51 = objc_msgSend(v50, sel_multiArrayValue);

                  if (v51)
                  {
                    v52 = v104;
                    sub_24972C9FC();
LABEL_29:
                    swift_release();
                    swift_release();
                    v88 = v106;
                    sub_2496FD3AC(v106, &qword_25787A348);
                    v105(v52, 0, 1, v28);
                    v89 = (uint64_t)v52;
                    v90 = v88;
LABEL_39:
                    sub_24972AC28(v89, v90, &qword_25787A348);
                    return sub_24972AC28(v47, v107, &qword_25787A348);
                  }
                  goto LABEL_47;
                }
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
          goto LABEL_32;
        }
        __break(1u);
        goto LABEL_42;
      }
LABEL_31:
      v91 = v110[0];
      sub_24972C8AC();

      swift_willThrow();
      swift_release();

LABEL_33:
      sub_2496FD3AC(v106, &qword_25787A348);
      return sub_2496FD3AC((uint64_t)v108, &qword_25787A348);
    }
LABEL_30:
    v47 = (uint64_t)v108;
    return sub_24972AC28(v47, v107, &qword_25787A348);
  }
  if (!v29)
  {
    sub_2496F2A70(v3 + OBJC_IVAR___UIUDetectorCompat_elementDetector, (uint64_t)v110);
    type metadata accessor for ElementMindNetPortrait();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_30;
    v68 = v109;
    v69 = (void *)objc_opt_self();
    v110[0] = 0;
    v32 = a3;
    v70 = objc_msgSend(v69, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v32, 416, 896, 32, 0, v110);
    if (!v70)
      goto LABEL_31;
    v71 = v70;
    v72 = v110[0];

    v73 = objc_msgSend(v71, sel_imageBufferValue);
    if (!v73)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    type metadata accessor for ElementMindNetPortraitInput();
    v74 = swift_allocObject();
    *(_QWORD *)(v74 + 16) = v73;

    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
    v75 = *(void **)(v68 + 16);
    v110[0] = 0;
    v76 = objc_msgSend(v75, sel_predictionFromFeatures_options_error_, v74, v32, v110);
    v77 = v110[0];
    if (v76)
    {
      v78 = v76;
      type metadata accessor for ElementMindNetPortraitOutput();
      v79 = swift_initStackObject();
      *(_QWORD *)(v79 + 16) = v78;
      v80 = v77;
      swift_release();

      v81 = (void *)sub_24972CB94();
      v82 = objc_msgSend(v78, sel_featureValueForName_, v81);

      if (v82)
      {
        v83 = objc_msgSend(v82, sel_multiArrayValue);

        if (v83)
        {
          sub_24972C9FC();
          v47 = (uint64_t)v108;
          sub_2496FD3AC((uint64_t)v108, &qword_25787A348);
          v105(v22, 0, 1, v28);
          sub_24972AC28((uint64_t)v22, v47, &qword_25787A348);
          v84 = *(void **)(v79 + 16);
          v85 = (void *)sub_24972CB94();
          v86 = objc_msgSend(v84, sel_featureValueForName_, v85);

          if (v86)
          {
            v87 = objc_msgSend(v86, sel_multiArrayValue);

            if (v87)
            {
              v52 = v103;
              sub_24972C9FC();
              goto LABEL_29;
            }
            goto LABEL_51;
          }
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    goto LABEL_32;
  }
LABEL_54:
  v110[0] = v29;
  result = sub_24972D218();
  __break(1u);
  return result;
}

id UIUDetector.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UIUDetector.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIUDetector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIUDetector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249725A1C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24971FA68();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_249725A94(v6);
  return sub_24972D02C();
}

void sub_249725A94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  char *v21;
  char *v22;
  double MinX;
  char *v24;
  CGRect *v25;
  double v26;
  void *v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  char *v43;
  char *v44;
  double v45;
  char *v46;
  CGRect *v47;
  double v48;
  void **v49;
  uint64_t v50;
  void *v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  id v59;
  char *v60;
  double v61;
  char *v62;
  CGRect *v63;
  double v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  char *v82;
  char *v83;
  double v84;
  char *v85;
  CGRect *v86;
  double v87;
  void *v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  unint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  void **__dst;
  void *__dsta;
  uint64_t v171;
  uint64_t v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;

  v3 = a1[1];
  v4 = sub_24972D1B8();
  v171 = v3;
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_191;
    if ((unint64_t)v3 >= 2)
    {
      v9 = -1;
      v10 = 1;
      v11 = *a1;
      v12 = *a1;
LABEL_12:
      v165 = v10;
      __dsta = (void *)v9;
      v13 = *(char **)(v11 + 8 * v10);
      v161 = v12;
      while (1)
      {
        v14 = *(void **)v12;
        v15 = &v13[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v16 = *(_QWORD *)v15 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v17 = *(double *)v16;
        v18 = *(double *)(v16 + 8);
        v19 = *(double *)(v16 + 16);
        v20 = *(double *)(v16 + 24);
        v21 = v13;
        v22 = v14;
        v173.origin.x = v17;
        v173.origin.y = v18;
        v173.size.width = v19;
        v173.size.height = v20;
        MinX = CGRectGetMinX(v173);
        if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
          break;
        if (MinX <= -9.22337204e18)
          goto LABEL_147;
        if (MinX >= 9.22337204e18)
          goto LABEL_148;
        v24 = &v22[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v25 = (CGRect *)(*(_QWORD *)v24 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v26 = CGRectGetMinX(*v25);

        if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) == 0)
          goto LABEL_149;
        if (v26 <= -9.22337204e18)
          goto LABEL_150;
        if (v26 >= 9.22337204e18)
          goto LABEL_151;
        if ((uint64_t)MinX < (uint64_t)v26)
        {
          if (!v11)
            goto LABEL_195;
          v27 = *(void **)v12;
          v13 = *(char **)(v12 + 8);
          *(_QWORD *)v12 = v13;
          *(_QWORD *)(v12 + 8) = v27;
          v12 -= 8;
          if (!__CFADD__(v9++, 1))
            continue;
        }
        v10 = v165 + 1;
        v12 = v161 + 8;
        v9 = (uint64_t)__dsta - 1;
        if (v165 + 1 == v171)
          return;
        goto LABEL_12;
      }
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
      goto LABEL_179;
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_200:
      sub_24972D074();
      __break(1u);
      return;
    }
    v6 = v4;
    v154 = a1;
    if (v3 >= 2)
    {
      v7 = v5 >> 1;
      type metadata accessor for UIObject();
      v8 = sub_24972CCFC();
      *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
      v172 = v8;
      goto LABEL_25;
    }
    v29 = (char *)MEMORY[0x24BEE4AF8];
    v172 = MEMORY[0x24BEE4AF8];
    __dst = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_25:
      v159 = v6;
      v30 = 0;
      v31 = *a1;
      v156 = v31 + 16;
      v29 = (char *)MEMORY[0x24BEE4AF8];
      v32 = &OBJC_IVAR___UIObjectCompat_boundingBox;
      v155 = v31 - 8;
      while (1)
      {
        v33 = v30;
        v34 = v30 + 1;
        v160 = v30;
        if (v30 + 1 < v3)
        {
          v35 = *(char **)(v31 + 8 * v34);
          v36 = *(void **)(v31 + 8 * v30);
          v37 = &v35[*v32];
          swift_beginAccess();
          v38 = *(_QWORD *)v37 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v39 = *(double *)v38;
          v40 = *(double *)(v38 + 8);
          v41 = *(double *)(v38 + 16);
          v42 = *(double *)(v38 + 24);
          v43 = v35;
          v44 = v36;
          v174.origin.x = v39;
          v174.origin.y = v40;
          v174.size.width = v41;
          v174.size.height = v42;
          v45 = CGRectGetMinX(v174);
          if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
            goto LABEL_184;
          if (v45 <= -9.22337204e18)
            goto LABEL_185;
          if (v45 >= 9.22337204e18)
            goto LABEL_186;
          v46 = &v44[*v32];
          swift_beginAccess();
          v47 = (CGRect *)(*(_QWORD *)v46 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          v48 = CGRectGetMinX(*v47);

          if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
            goto LABEL_187;
          if (v48 <= -9.22337204e18)
            goto LABEL_188;
          if (v48 >= 9.22337204e18)
            goto LABEL_189;
          v162 = (uint64_t)v48;
          v166 = (uint64_t)v45;
          v34 = v33 + 2;
          if (v33 + 2 < v171)
          {
            v157 = v29;
            v49 = (void **)(v156 + 8 * v33);
            while (1)
            {
              v50 = v34;
              v52 = *(v49 - 1);
              v51 = *v49;
              v53 = (char *)*v49 + *v32;
              swift_beginAccess();
              v54 = *v53 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
              swift_beginAccess();
              v55 = *(double *)v54;
              v56 = *(double *)(v54 + 8);
              v57 = *(double *)(v54 + 16);
              v58 = *(double *)(v54 + 24);
              v59 = v51;
              v60 = v52;
              v175.origin.x = v55;
              v175.origin.y = v56;
              v175.size.width = v57;
              v175.size.height = v58;
              v61 = CGRectGetMinX(v175);
              if ((~*(_QWORD *)&v61 & 0x7FF0000000000000) == 0)
                goto LABEL_162;
              if (v61 <= -9.22337204e18)
                goto LABEL_163;
              if (v61 >= 9.22337204e18)
                goto LABEL_164;
              v62 = &v60[*v32];
              swift_beginAccess();
              v63 = (CGRect *)(*(_QWORD *)v62 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
              swift_beginAccess();
              v64 = CGRectGetMinX(*v63);

              if ((~*(_QWORD *)&v64 & 0x7FF0000000000000) == 0)
                goto LABEL_165;
              if (v64 <= -9.22337204e18)
                goto LABEL_166;
              if (v64 >= 9.22337204e18)
                goto LABEL_167;
              if (v166 < v162 == (uint64_t)v61 >= (uint64_t)v64)
                break;
              v34 = v50 + 1;
              ++v49;
              if (v171 == v50 + 1)
              {
                v34 = v171;
                v29 = v157;
                goto LABEL_45;
              }
            }
            v29 = v157;
            v34 = v50;
LABEL_45:
            v33 = v160;
          }
          if (v166 >= v162)
          {
            v3 = v171;
          }
          else
          {
            v3 = v171;
            if (v34 < v33)
              goto LABEL_194;
            if (v33 < v34)
            {
              v65 = (uint64_t *)(v155 + 8 * v34);
              v66 = v34;
              v67 = v33;
              v68 = (uint64_t *)(v31 + 8 * v33);
              do
              {
                if (v67 != --v66)
                {
                  if (!v31)
                    goto LABEL_198;
                  v69 = *v68;
                  *v68 = *v65;
                  *v65 = v69;
                }
                ++v67;
                --v65;
                ++v68;
              }
              while (v67 < v66);
            }
          }
        }
        if (v34 < v3)
        {
          if (__OFSUB__(v34, v33))
            goto LABEL_190;
          if (v34 - v33 < v159)
          {
            if (__OFADD__(v33, v159))
              goto LABEL_192;
            if (v33 + v159 >= v3)
              v70 = v3;
            else
              v70 = v33 + v159;
            if (v70 < v33)
              goto LABEL_193;
            if (v34 != v70)
            {
              v158 = v29;
              v71 = v155 + 8 * v34;
              v163 = v70;
              do
              {
                v72 = *(char **)(v31 + 8 * v34);
                v73 = v33;
                v167 = v71;
                while (1)
                {
                  v74 = v34;
                  v75 = *(void **)v71;
                  v76 = &v72[*v32];
                  swift_beginAccess();
                  v77 = *(_QWORD *)v76 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
                  swift_beginAccess();
                  v78 = *(double *)v77;
                  v79 = *(double *)(v77 + 8);
                  v80 = *(double *)(v77 + 16);
                  v81 = *(double *)(v77 + 24);
                  v82 = v72;
                  v83 = v75;
                  v176.origin.x = v78;
                  v176.origin.y = v79;
                  v176.size.width = v80;
                  v176.size.height = v81;
                  v84 = CGRectGetMinX(v176);
                  if ((~*(_QWORD *)&v84 & 0x7FF0000000000000) == 0)
                    goto LABEL_152;
                  if (v84 <= -9.22337204e18)
                    goto LABEL_153;
                  if (v84 >= 9.22337204e18)
                    goto LABEL_154;
                  v85 = &v83[*v32];
                  swift_beginAccess();
                  v86 = (CGRect *)(*(_QWORD *)v85 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
                  swift_beginAccess();
                  v87 = CGRectGetMinX(*v86);

                  if ((~*(_QWORD *)&v87 & 0x7FF0000000000000) == 0)
                    goto LABEL_155;
                  if (v87 <= -9.22337204e18)
                    goto LABEL_156;
                  if (v87 >= 9.22337204e18)
                    goto LABEL_157;
                  if ((uint64_t)v84 >= (uint64_t)v87)
                    break;
                  if (!v31)
                    goto LABEL_196;
                  v34 = v74;
                  v88 = *(void **)v71;
                  v72 = *(char **)(v71 + 8);
                  *(_QWORD *)v71 = v72;
                  *(_QWORD *)(v71 + 8) = v88;
                  v71 -= 8;
                  if (v74 == ++v73)
                    goto LABEL_67;
                }
                v34 = v74;
LABEL_67:
                ++v34;
                v71 = v167 + 8;
                v33 = v160;
              }
              while (v34 != v163);
              v34 = v163;
              v29 = v158;
            }
          }
        }
        if (v34 < v33)
          goto LABEL_183;
        v164 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v29 = sub_24971DB80(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
        v90 = *((_QWORD *)v29 + 2);
        v89 = *((_QWORD *)v29 + 3);
        v91 = v90 + 1;
        if (v90 >= v89 >> 1)
          v29 = sub_24971DB80((char *)(v89 > 1), v90 + 1, 1, v29);
        *((_QWORD *)v29 + 2) = v91;
        v168 = v29 + 32;
        v92 = &v29[16 * v90 + 32];
        *(_QWORD *)v92 = v33;
        *((_QWORD *)v92 + 1) = v164;
        if (v90)
          break;
        v91 = 1;
LABEL_129:
        v3 = v171;
        v30 = v164;
        if (v164 >= v171)
          goto LABEL_133;
      }
      v93 = v29 + 32;
      while (1)
      {
        v94 = v91 - 1;
        if (v91 >= 4)
        {
          v99 = &v93[16 * v91];
          v100 = *((_QWORD *)v99 - 8);
          v101 = *((_QWORD *)v99 - 7);
          v105 = __OFSUB__(v101, v100);
          v102 = v101 - v100;
          if (v105)
            goto LABEL_168;
          v104 = *((_QWORD *)v99 - 6);
          v103 = *((_QWORD *)v99 - 5);
          v105 = __OFSUB__(v103, v104);
          v97 = v103 - v104;
          v98 = v105;
          if (v105)
            goto LABEL_169;
          v106 = v91 - 2;
          v107 = &v93[16 * v91 - 32];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          v105 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          if (v105)
            goto LABEL_171;
          v105 = __OFADD__(v97, v110);
          v111 = v97 + v110;
          if (v105)
            goto LABEL_174;
          if (v111 >= v102)
          {
            v129 = &v93[16 * v94];
            v131 = *(_QWORD *)v129;
            v130 = *((_QWORD *)v129 + 1);
            v105 = __OFSUB__(v130, v131);
            v132 = v130 - v131;
            if (v105)
              goto LABEL_178;
            v122 = v97 < v132;
            goto LABEL_118;
          }
        }
        else
        {
          if (v91 != 3)
          {
            v123 = *((_QWORD *)v29 + 4);
            v124 = *((_QWORD *)v29 + 5);
            v105 = __OFSUB__(v124, v123);
            v116 = v124 - v123;
            v117 = v105;
            goto LABEL_112;
          }
          v96 = *((_QWORD *)v29 + 4);
          v95 = *((_QWORD *)v29 + 5);
          v105 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          v98 = v105;
        }
        if ((v98 & 1) != 0)
          goto LABEL_170;
        v106 = v91 - 2;
        v112 = &v93[16 * v91 - 32];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v115 = __OFSUB__(v113, v114);
        v116 = v113 - v114;
        v117 = v115;
        if (v115)
          goto LABEL_173;
        v118 = &v93[16 * v94];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v105 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v105)
          goto LABEL_176;
        if (__OFADD__(v116, v121))
          goto LABEL_177;
        if (v116 + v121 >= v97)
        {
          v122 = v97 < v121;
LABEL_118:
          if (v122)
            v94 = v106;
          goto LABEL_120;
        }
LABEL_112:
        if ((v117 & 1) != 0)
          goto LABEL_172;
        v125 = &v93[16 * v94];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v105 = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (v105)
          goto LABEL_175;
        if (v128 < v116)
          goto LABEL_129;
LABEL_120:
        v133 = v94 - 1;
        if (v94 - 1 >= v91)
          goto LABEL_158;
        v134 = v31;
        if (!v31)
          goto LABEL_197;
        v135 = v32;
        v136 = v29;
        v137 = v93;
        v138 = &v93[16 * v133];
        v139 = *(_QWORD *)v138;
        v140 = &v137[16 * v94];
        v141 = *((_QWORD *)v140 + 1);
        v142 = v134;
        sub_249726748((void **)(v134 + 8 * *(_QWORD *)v138), (void **)(v134 + 8 * *(_QWORD *)v140), v134 + 8 * v141, __dst);
        if (v1)
          goto LABEL_144;
        if (v141 < v139)
          goto LABEL_159;
        if (v94 > *((_QWORD *)v136 + 2))
          goto LABEL_160;
        *(_QWORD *)v138 = v139;
        v93 = v168;
        *(_QWORD *)&v168[16 * v133 + 8] = v141;
        v143 = *((_QWORD *)v136 + 2);
        if (v94 >= v143)
          goto LABEL_161;
        v29 = v136;
        v91 = v143 - 1;
        memmove(v140, v140 + 16, 16 * (v143 - 1 - v94));
        *((_QWORD *)v136 + 2) = v143 - 1;
        v31 = v142;
        v32 = v135;
        if (v143 <= 2)
          goto LABEL_129;
      }
    }
    v91 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_133:
    v144 = v29;
    if (v91 >= 2)
    {
      v145 = *v154;
      while (1)
      {
        v146 = v91 - 2;
        if (v91 < 2)
          break;
        if (!v145)
          goto LABEL_199;
        v147 = v144;
        v148 = *(_QWORD *)&v144[16 * v146 + 32];
        v149 = *(_QWORD *)&v144[16 * v91 + 24];
        sub_249726748((void **)(v145 + 8 * v148), (void **)(v145 + 8 * *(_QWORD *)&v144[16 * v91 + 16]), v145 + 8 * v149, __dst);
        if (v1)
          goto LABEL_144;
        if (v149 < v148)
          goto LABEL_180;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v147 = sub_24971DDC8((uint64_t)v147);
        if (v146 >= *((_QWORD *)v147 + 2))
          goto LABEL_181;
        v150 = v147 + 32;
        v151 = &v147[16 * v146 + 32];
        *(_QWORD *)v151 = v148;
        *((_QWORD *)v151 + 1) = v149;
        v152 = v147;
        v153 = *((_QWORD *)v147 + 2);
        if (v91 > v153)
          goto LABEL_182;
        memmove(&v150[16 * v91 - 16], &v150[16 * v91], 16 * (v153 - v91));
        v144 = v152;
        *((_QWORD *)v152 + 2) = v153 - 1;
        v91 = v153 - 1;
        if (v153 <= 2)
          goto LABEL_144;
      }
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
      goto LABEL_200;
    }
LABEL_144:
    swift_bridgeObjectRelease();
    *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24972CCE4();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_249726748(void **__src, void **a2, unint64_t a3, void **__dst)
{
  void **v4;
  void **v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  id v23;
  char *v24;
  double v25;
  void **v26;
  char *v27;
  CGRect *v28;
  double v29;
  void **v30;
  void **v31;
  void **v32;
  void **v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  char *v42;
  char *v43;
  double MinX;
  char *v45;
  CGRect *v46;
  double v47;
  void **v48;
  uint64_t result;
  void **v50;
  void **v51;
  void **v52;
  void **v53;
  CGRect v54;
  CGRect v55;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v53 = __src;
  v52 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v50 = v4;
      v31 = &v4[v13];
      v51 = v31;
      v53 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v32 = (void **)(a3 - 8);
        v33 = v6;
        while (1)
        {
          v34 = (char *)*(v31 - 1);
          v35 = *--v33;
          v36 = &v34[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v37 = *(_QWORD *)v36 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v38 = *(double *)v37;
          v39 = *(double *)(v37 + 8);
          v40 = *(double *)(v37 + 16);
          v41 = *(double *)(v37 + 24);
          v42 = v34;
          v43 = v35;
          v55.origin.x = v38;
          v55.origin.y = v39;
          v55.size.width = v40;
          v55.size.height = v41;
          MinX = CGRectGetMinX(v55);
          if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
            break;
          if (MinX <= -9.22337204e18)
            goto LABEL_56;
          if (MinX >= 9.22337204e18)
            goto LABEL_57;
          v45 = &v43[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v46 = (CGRect *)(*(_QWORD *)v45 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          v47 = CGRectGetMinX(*v46);

          if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
            goto LABEL_58;
          if (v47 <= -9.22337204e18)
            goto LABEL_59;
          if (v47 >= 9.22337204e18)
            goto LABEL_60;
          v48 = v32 + 1;
          if ((uint64_t)MinX >= (uint64_t)v47)
          {
            v51 = v31 - 1;
            if (v48 < v31 || v32 >= v31 || v48 != v31)
              *v32 = *(v31 - 1);
            v33 = v6;
            --v31;
            if (v6 <= v7)
              goto LABEL_54;
          }
          else
          {
            if (v48 != v6 || v32 >= v6)
              *v32 = *v33;
            v53 = v33;
            if (v33 <= v7)
              goto LABEL_54;
          }
          --v32;
          v6 = v33;
          if (v31 <= v50)
            goto LABEL_54;
        }
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_54:
      sub_24971DC78(&v53, &v52, &v51);
      return 1;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v51 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        v15 = *v6;
        v16 = *v4;
        v17 = (char *)*v6 + OBJC_IVAR___UIObjectCompat_boundingBox;
        swift_beginAccess();
        v18 = *v17 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
        swift_beginAccess();
        v19 = *(double *)v18;
        v20 = *(double *)(v18 + 8);
        v21 = *(double *)(v18 + 16);
        v22 = *(double *)(v18 + 24);
        v23 = v15;
        v24 = v16;
        v54.origin.x = v19;
        v54.origin.y = v20;
        v54.size.width = v21;
        v54.size.height = v22;
        v25 = CGRectGetMinX(v54);
        if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) == 0)
          break;
        if (v25 <= -9.22337204e18)
          goto LABEL_62;
        if (v25 >= 9.22337204e18)
          goto LABEL_63;
        v26 = v4;
        v27 = &v24[OBJC_IVAR___UIObjectCompat_boundingBox];
        swift_beginAccess();
        v28 = (CGRect *)(*(_QWORD *)v27 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
        swift_beginAccess();
        v29 = CGRectGetMinX(*v28);

        if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
          goto LABEL_64;
        if (v29 <= -9.22337204e18)
          goto LABEL_65;
        if (v29 >= 9.22337204e18)
          goto LABEL_66;
        v4 = v26;
        if ((uint64_t)v25 >= (uint64_t)v29)
        {
          if (v7 != v26)
            *v7 = *v26;
          v4 = v26 + 1;
          v52 = v26 + 1;
          v30 = v6;
        }
        else
        {
          v30 = v6 + 1;
          if (v7 < v6 || v7 >= v30 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 < v14)
        {
          v6 = v30;
          if ((unint64_t)v30 < a3)
            continue;
        }
        v53 = v7;
        goto LABEL_54;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    goto LABEL_54;
  }
LABEL_67:
  result = sub_24972D0F8();
  __break(1u);
  return result;
}

uint64_t sub_249726CB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A648);
  result = sub_24972D0E0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v32 = 1 << *(_BYTE *)(v5 + 32);
    v33 = v3;
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_40;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v34);
              else
                *v9 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v34)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_24972D2A8();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_249726F68(uint64_t a1, char a2)
{
  return sub_249726F80(a1, a2, &qword_25787A788);
}

uint64_t sub_249726F74(uint64_t a1, char a2)
{
  return sub_249726F80(a1, a2, &qword_25787A6B0);
}

uint64_t sub_249726F80(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_24972D0E0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_24972D2B4();
    sub_24972CC24();
    result = sub_24972D2D8();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_249727288(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A780);
  v42 = a2;
  v6 = sub_24972D0E0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v39)
          goto LABEL_33;
        v23 = v40[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_33;
          v23 = v40[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v42 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v39)
                  goto LABEL_33;
                v23 = v40[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + (v21 << 6);
      v33 = *(_QWORD *)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 24);
      v43 = *(_QWORD *)v32;
      v44 = *(_QWORD *)(v32 + 16);
      v35 = *(void **)(v32 + 32);
      v36 = *(_DWORD *)(v32 + 40);
      v45 = *(_OWORD *)(v32 + 48);
      if ((v42 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v37 = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24972D2B4();
      sub_24972CC24();
      result = sub_24972D2D8();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + (v17 << 6);
      *(_QWORD *)v19 = v43;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v44;
      *(_QWORD *)(v19 + 24) = v34;
      *(_QWORD *)(v19 + 32) = v35;
      *(_DWORD *)(v19 + 40) = v36;
      *(_OWORD *)(v19 + 48) = v45;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2497275F8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  int v41;

  v3 = v2;
  v5 = sub_24972C960();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A778);
  v41 = a2;
  v10 = sub_24972D0E0();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v37 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v38 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v21 = v20 | (v18 << 6);
      }
      else
      {
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38)
          goto LABEL_34;
        v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          v18 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_34;
          v23 = v39[v18];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v41 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v9 + 32);
                if (v35 >= 64)
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v35;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v18 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v18 >= v38)
                  goto LABEL_34;
                v23 = v39[v18];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v18 = v24;
          }
        }
LABEL_21:
        v15 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      v25 = *(_QWORD *)(v6 + 72);
      v26 = *(_QWORD *)(v9 + 48) + v25 * v21;
      if ((v41 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v26, v5);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      sub_24971F9E0();
      result = sub_24972CB58();
      v28 = -1 << *(_BYTE *)(v11 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v25 * v19, v8, v5);
      *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v27;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_249727964(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_24972D0E0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v32 = a2;
    v9 = 0;
    v10 = (_QWORD *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v14)
          goto LABEL_31;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_31;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_38;
              }
              v31 = 1 << *(_BYTE *)(v6 + 32);
              if (v31 >= 64)
                bzero((void *)(v6 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v31;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v9 >= v14)
                  goto LABEL_31;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v9 = v21;
          }
        }
LABEL_21:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v23 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + 4 * v18);
      sub_24972D2B4();
      sub_24972D2C0();
      result = sub_24972D2D8();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v22;
      *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v16) = v23;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v4 = v8;
  return result;
}

void *sub_249727C28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A648);
  v2 = *v0;
  v3 = sub_24972D0D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_249727DC8()
{
  return sub_249727DE0(&qword_25787A788);
}

id sub_249727DD4()
{
  return sub_249727DE0(&qword_25787A6B0);
}

id sub_249727DE0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24972D0D4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_249727F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  int v27;
  _QWORD *v28;
  __int128 v29;
  unint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A780);
  v2 = *v0;
  v3 = sub_24972D0D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v32 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v13)
      goto LABEL_26;
    v33 = *(_QWORD *)(v6 + 8 * v32);
    ++v9;
    if (!v33)
    {
      v9 = v32 + 1;
      if (v32 + 1 >= v13)
        goto LABEL_26;
      v33 = *(_QWORD *)(v6 + 8 * v9);
      if (!v33)
        break;
    }
LABEL_25:
    v12 = (v33 - 1) & v33;
    v15 = __clz(__rbit64(v33)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = v15 << 6;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v25 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v26 = *(void **)(v21 + 32);
    v27 = *(_DWORD *)(v21 + 40);
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v29 = *(_OWORD *)(v21 + 48);
    *v28 = v18;
    v28[1] = v19;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = v23;
    *(_QWORD *)(v30 + 16) = v25;
    *(_QWORD *)(v30 + 24) = v24;
    *(_QWORD *)(v30 + 32) = v26;
    *(_DWORD *)(v30 + 40) = v27;
    *(_OWORD *)(v30 + 48) = v29;
    swift_bridgeObjectRetain();
    v31 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v34 = v32 + 2;
  if (v34 >= v13)
    goto LABEL_26;
  v33 = *(_QWORD *)(v6 + 8 * v34);
  if (v33)
  {
    v9 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v33 = *(_QWORD *)(v6 + 8 * v9);
    ++v34;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24972819C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24972C960();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A778);
  v24 = v0;
  v5 = *v0;
  v6 = sub_24972D0D4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2497283CC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24972D0D4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v24 = __clz(__rbit64(v22));
    v13 = (v22 - 1) & v22;
    v16 = v24 + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 4 * v16;
    v20 = *(_DWORD *)(*(_QWORD *)(v3 + 56) + v19);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_DWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_249728554(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_24972D2A8();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_249728CA4(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24972864C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v7 = *v3;
  sub_24972D2B4();
  sub_24972D2C0();
  v8 = sub_24972D2D8();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_249728DC4(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v7 + 48);
  if (*(_QWORD *)(v11 + 8 * v10) != a2)
  {
    v12 = ~v9;
    do
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v11 + 8 * v10) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_249728780()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A770);
  result = sub_24972CF9C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_24972D2A8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_249728A00(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_24972CF9C();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
      sub_24972D2B4();
      sub_24972D2C0();
      result = sub_24972D2D8();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_249728CA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_249728780();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_249728F1C();
      goto LABEL_14;
    }
    sub_24972923C();
  }
  v8 = *v3;
  result = sub_24972D2A8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_24972D248();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_249728DC4(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_249728A00(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_2497290B0(a4);
      goto LABEL_14;
    }
    sub_24972949C(v9, a4);
  }
  v10 = *v4;
  sub_24972D2B4();
  sub_24972D2C0();
  result = sub_24972D2D8();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v10 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == v6)
    {
LABEL_13:
      result = sub_24972D248();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == v6)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

void *sub_249728F1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A770);
  v2 = *v0;
  v3 = sub_24972CF90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2497290B0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_24972CF90();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24972923C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787A770);
  result = sub_24972CF9C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_24972D2A8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24972949C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_24972CF9C();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
    sub_24972D2B4();
    sub_24972D2C0();
    result = sub_24972D2D8();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

size_t _s15UIUnderstanding11UIUDetectorC17createSquareImageySo10CGImageRefaSgAFFZ_0(CGImage *a1)
{
  int64_t Width;
  int64_t Height;
  size_t result;
  CGColorSpace *v5;
  size_t BitsPerComponent;
  CGContextRef v7;
  CGContext *v8;
  CGImageRef Image;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  if (Height > Width)
    Width = Height;
  result = CGImageGetWidth(a1);
  if (__OFSUB__(Width, result))
  {
    __break(1u);
  }
  else
  {
    result = CGImageGetHeight(a1);
    if (!__OFSUB__(Width, result))
    {
      v5 = CGImageGetColorSpace(a1);
      if (v5 || (v5 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF318])) != 0)
      {
        BitsPerComponent = CGImageGetBitsPerComponent(a1);
        v7 = CGBitmapContextCreate(0, Width, Width, BitsPerComponent, 0, v5, 5u);
        if (v7)
        {
          v8 = v7;
          CGImageGetWidth(a1);
          CGImageGetHeight(a1);
          sub_24972CDBC();
          Image = CGBitmapContextCreateImage(v8);

          return (size_t)Image;
        }

      }
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UIUDetector()
{
  return objc_opt_self();
}

uint64_t sub_249729868(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;

  v3 = a1;
  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_22:
    v4 = sub_24972D0BC();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v5 = 0;
      v19 = v3 & 0xC000000000000001;
      v6 = v3 & 0xFFFFFFFFFFFFFF8;
      v18 = v3;
      v7 = (_BYTE *)(v3 + 32);
      v8 = a2 + 56;
      while (1)
      {
        if (v19)
        {
          v9 = MEMORY[0x24BCF6CE8](v5, v18);
          v10 = __OFADD__(v5++, 1);
          if (v10)
          {
LABEL_19:
            __break(1u);
            return v21;
          }
        }
        else
        {
          if (v5 >= *(_QWORD *)(v6 + 16))
          {
            __break(1u);
            goto LABEL_22;
          }
          v9 = *(_QWORD *)&v7[8 * v5];
          swift_retain();
          v10 = __OFADD__(v5++, 1);
          if (v10)
            goto LABEL_19;
        }
        v11 = *(_QWORD *)(v9 + 32);
        if ((unint64_t)(v11 + 1) >= 0x10)
          break;
        if (*(_QWORD *)(a2 + 16))
        {
          sub_24972D2B4();
          sub_24972D2C0();
          v3 = (unint64_t)&v20;
          v12 = sub_24972D2D8();
          v13 = -1 << *(_BYTE *)(a2 + 32);
          v14 = v12 & ~v13;
          if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          {
            v15 = *(_QWORD *)(a2 + 48);
            if (*(_QWORD *)(v15 + 8 * v14) == v11)
              break;
            v16 = ~v13;
            while (1)
            {
              v14 = (v14 + 1) & v16;
              if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
                break;
              if (*(_QWORD *)(v15 + 8 * v14) == v11)
                goto LABEL_16;
            }
          }
        }
        v3 = (unint64_t)&v21;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
LABEL_5:
        if (v5 == v4)
          return v21;
      }
LABEL_16:
      swift_release();
      goto LABEL_5;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_249729A40(uint64_t a1)
{
  return sub_249729A5C(a1, (void (*)(void))sub_24972AC6C, (uint64_t)&type metadata for ClickabilityType, &qword_25787A380);
}

uint64_t sub_249729A5C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_24972CD68();
  v11 = result;
  if (v6)
  {
    v8 = (uint64_t *)(a1 + 32);
    do
    {
      v9 = *v8++;
      sub_24972864C(&v10, v9, a4);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_249729AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249729B28(unint64_t a1, double *a2)
{
  uint64_t v4;
  CGRect *v5;
  unint64_t i;
  char *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void **v11;
  void *v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  id v17;
  double MaxY;
  double v19;
  double v20;
  double MinY;
  double v22;
  double v23;
  double v24;
  double v25;
  double Height;
  uint64_t v28;
  CGRect v29;

  v28 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_33;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v5 = (CGRect *)((char *)a2 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
  swift_beginAccess();
  if (v4)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (char *)MEMORY[0x24BCF6CE8](i, a1);
      }
      else
      {
        if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          v4 = sub_24972D0BC();
          goto LABEL_3;
        }
        v7 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      v8 = v7;
      v9 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_29;
      v10 = v4;
      v11 = (void **)&v7[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v12 = *v11;
      a2 = (double *)((char *)*v11 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v13 = *a2;
      v14 = a2[1];
      v15 = a2[2];
      v16 = a2[3];
      v17 = v12;
      v29.origin.x = v13;
      v29.origin.y = v14;
      v29.size.width = v15;
      v29.size.height = v16;
      MaxY = CGRectGetMaxY(v29);
      v19 = CGRectGetMaxY(*v5);
      if (v19 >= MaxY)
        v20 = MaxY;
      else
        v20 = v19;
      MinY = CGRectGetMinY(*(CGRect *)a2);
      v22 = CGRectGetMinY(*v5);

      if (MinY > v22)
        v23 = MinY;
      else
        v23 = v22;
      v24 = v20 - v23;
      if (v24 < 0.0)
        v25 = 0.0;
      else
        v25 = v24;
      Height = CGRectGetHeight(*v5);
      if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
        goto LABEL_30;
      if (Height <= -9.22337204e18)
        goto LABEL_31;
      if (Height >= 9.22337204e18)
        goto LABEL_32;
      if (v25 / (double)(uint64_t)Height <= 0.75)
      {

      }
      else
      {
        a2 = (double *)&v28;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
      v4 = v10;
      if (v9 == v10)
        return v28;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_249729DC4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_24972CC3C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_24972CC6C();
  }
  __break(1u);
  return result;
}

void sub_249729E60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t i;
  char *v21;
  void *v22;
  char *v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  CGRect *v31;
  double MinX;
  uint64_t v33;
  char *v34;
  void *v35;
  void **v36;
  void *v37;
  uint64_t v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  id v43;
  double v44;
  double Width;
  void *v46;
  uint64_t v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  id v52;
  double v53;
  double v54;
  CGRect *v55;
  double MidX;
  void *v57;
  uint64_t v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  id v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  int64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  double MinY;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  double v95;
  double v96;
  double v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  objc_class *v101;
  char *v102;
  double *v103;
  char *v104;
  id v105;
  void *v106;
  uint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  CGRect *v113;
  unint64_t v114;
  CGRect *v115;
  unint64_t v116;
  char *v117;
  CGRect *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void **v125;
  CGRect *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  objc_super v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787A798);
  MEMORY[0x24BDAC7A8](v2);
  v122 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_138;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
    goto LABEL_140;
LABEL_3:
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v119 = 0;
    v129 = a1 & 0xC000000000000001;
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
    v115 = (CGRect *)(a1 + 32);
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    v110 = v8;
    v112 = v5;
    v113 = (CGRect *)a1;
    v111 = a1 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v129)
      {
        v9 = (char *)MEMORY[0x24BCF6CE8](v6, a1);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v7 + 16))
          goto LABEL_123;
        v9 = (char *)*((id *)&v115->origin.x + v6);
      }
      v10 = v9;
      sub_2496F6158(0.9);
      v11 = &v10[OBJC_IVAR___UIObjectCompat_detection];
      swift_beginAccess();
      v12 = *(_QWORD *)v11;
      if (*(_QWORD *)(*(_QWORD *)v11 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) != 10)
      {

        goto LABEL_91;
      }
      v120 = v11;
      v121 = v10;
      v13 = (uint64_t *)(v12 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
      swift_beginAccess();
      if (!v13[1])
      {

        goto LABEL_91;
      }
      v14 = v13[1];
      v116 = v6;
      v15 = *v13;
      v16 = (void **)&v121[OBJC_IVAR___UIObjectCompat_boundingBox];
      swift_beginAccess();
      v125 = v16;
      v17 = *v16;
      v132 = MEMORY[0x24BEE4AF8];
      if (v114)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = v17;
        v18 = sub_24972D0BC();
        if (v18)
        {
LABEL_16:
          if (v18 < 1)
            goto LABEL_136;
          for (i = 0; i != v18; ++i)
          {
            if (v129)
              v21 = (char *)MEMORY[0x24BCF6CE8](i, a1);
            else
              v21 = (char *)*(id *)(a1 + 8 * i + 32);
            v22 = v21;
            v23 = &v21[OBJC_IVAR___UIObjectCompat_detection];
            swift_beginAccess();
            if (*(_QWORD *)(*(_QWORD *)v23 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
            {
              sub_24972D020();
              sub_24972D044();
              sub_24972D050();
              sub_24972D02C();
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease();
          v24 = v132;
          goto LABEL_30;
        }
      }
      else
      {
        v18 = *(_QWORD *)(v7 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = v17;
        if (v18)
          goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x24BEE4AF8];
LABEL_30:
      a1 = v17;
      v26 = v119;
      v27 = sub_249729B28(v24, (double *)a1);
      swift_release();

      v28 = v14;
      v124 = v15;
      if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
      {
        v108 = swift_bridgeObjectRetain();
        v29 = (uint64_t)sub_2496F1168(v108);
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      v132 = v29;
      sub_249725A1C(&v132);
      if (v26)
        goto LABEL_142;
      swift_bridgeObjectRelease();
      v30 = v132;
      v31 = (CGRect *)(a1 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
      swift_beginAccess();
      v135 = *v31;
      v118 = v31;
      MinX = CGRectGetMinX(v135);
      if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
        goto LABEL_125;
      if (MinX <= -9.22337204e18)
        goto LABEL_126;
      if (MinX >= 9.22337204e18)
        goto LABEL_127;
      if (v30 < 0 || (v30 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v33 = sub_24972D0BC();
        swift_release();
      }
      else
      {
        v33 = *(_QWORD *)(v30 + 16);
      }
      v117 = (char *)a1;
      v128 = (uint64_t)MinX;
      v119 = 0;
      if (v33)
      {
        if (v33 < 1)
          goto LABEL_137;
        a1 = 0;
        v126 = (CGRect *)v33;
        v127 = v30 & 0xC000000000000001;
        v123 = v30;
        while (1)
        {
          v34 = v127 ? (char *)MEMORY[0x24BCF6CE8](a1, v30) : (char *)*(id *)(v30 + 8 * a1 + 32);
          v35 = v34;
          v36 = (void **)&v34[OBJC_IVAR___UIObjectCompat_boundingBox];
          swift_beginAccess();
          v37 = *v36;
          v38 = (uint64_t)*v36 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v39 = *(double *)v38;
          v40 = *(double *)(v38 + 8);
          v41 = *(double *)(v38 + 16);
          v42 = *(double *)(v38 + 24);
          v43 = v37;
          v136.origin.x = v39;
          v136.origin.y = v40;
          v136.size.width = v41;
          v136.size.height = v42;
          v44 = CGRectGetMinX(v136);
          if ((~*(_QWORD *)&v44 & 0x7FF0000000000000) == 0)
            break;
          if (v44 <= -9.22337204e18)
            goto LABEL_99;
          if (v44 >= 9.22337204e18)
            goto LABEL_100;
          Width = CGRectGetWidth(*(CGRect *)v38);

          if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
            goto LABEL_101;
          if (Width <= -9.22337204e18)
            goto LABEL_102;
          if (Width >= 9.22337204e18)
            goto LABEL_103;
          if (__OFADD__((uint64_t)v44, (uint64_t)Width))
            goto LABEL_104;
          if (v128 >= (uint64_t)v44 + (uint64_t)Width)
            goto LABEL_43;
          v46 = *v36;
          v47 = (uint64_t)*v36 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
          swift_beginAccess();
          v48 = *(double *)v47;
          v49 = *(double *)(v47 + 8);
          v50 = *(double *)(v47 + 16);
          v51 = *(double *)(v47 + 24);
          v52 = v46;
          v137.origin.x = v48;
          v137.origin.y = v49;
          v137.size.width = v50;
          v137.size.height = v51;
          v53 = CGRectGetMinX(v137);
          if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) == 0)
            goto LABEL_105;
          if (v53 <= -9.22337204e18)
            goto LABEL_106;
          if (v53 >= 9.22337204e18)
            goto LABEL_107;
          v54 = CGRectGetWidth(*(CGRect *)v47);

          if ((~*(_QWORD *)&v54 & 0x7FF0000000000000) == 0)
            goto LABEL_108;
          if (v54 <= -9.22337204e18)
            goto LABEL_109;
          if (v54 >= 9.22337204e18)
            goto LABEL_110;
          if (__OFADD__((uint64_t)v53, (uint64_t)v54))
            goto LABEL_111;
          v55 = (CGRect *)((char *)*v125 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect);
          swift_beginAccess();
          MidX = CGRectGetMidX(*v55);
          if ((~*(_QWORD *)&MidX & 0x7FF0000000000000) == 0)
            goto LABEL_112;
          if (MidX <= -9.22337204e18)
            goto LABEL_113;
          if (MidX >= 9.22337204e18)
            goto LABEL_114;
          if ((uint64_t)v53 + (uint64_t)v54 >= (uint64_t)MidX)
          {
LABEL_43:

          }
          else
          {
            v57 = *v36;
            v58 = (uint64_t)*v36 + OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect;
            swift_beginAccess();
            v59 = *(double *)v58;
            v60 = *(double *)(v58 + 8);
            v61 = *(double *)(v58 + 16);
            v62 = *(double *)(v58 + 24);
            v63 = v57;
            v138.origin.x = v59;
            v138.origin.y = v60;
            v138.size.width = v61;
            v138.size.height = v62;
            v64 = CGRectGetMinX(v138);
            if ((~*(_QWORD *)&v64 & 0x7FF0000000000000) == 0)
              goto LABEL_115;
            if (v64 <= -9.22337204e18)
              goto LABEL_116;
            if (v64 >= 9.22337204e18)
              goto LABEL_117;
            v65 = CGRectGetWidth(*(CGRect *)v58);

            if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) == 0)
              goto LABEL_118;
            if (v65 <= -9.22337204e18)
              goto LABEL_119;
            if (v65 >= 9.22337204e18)
              goto LABEL_120;
            v128 = (uint64_t)v64 + (uint64_t)v65;
            if (__OFADD__((uint64_t)v64, (uint64_t)v65))
              goto LABEL_121;
            v132 = v124;
            v133 = v28;
            v130 = 32;
            v131 = 0xE100000000000000;
            v66 = sub_24972C96C();
            v67 = (uint64_t)v122;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v122, 1, 1, v66);
            sub_2496D9784();
            v68 = sub_24972CF3C();
            v70 = v69;
            v72 = v71;
            sub_2496FD3AC(v67, &qword_25787A798);
            swift_bridgeObjectRelease();
            if ((v72 & 1) != 0)
              goto LABEL_76;
            v132 = v68;
            v133 = v70;
            v73 = v124;
            v130 = v124;
            v131 = v28;
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_25787A7A0);
            sub_2496D1BCC(&qword_25787A7A8, &qword_25787A7A0, MEMORY[0x24BEE1BC0]);
            v74 = sub_24972CF00();
            if (v74 == sub_24972C828())
            {
LABEL_76:

              v30 = v123;
            }
            else
            {
              v75 = sub_24972CC30();
              v76 = __OFADD__(v74, 1);
              v77 = v74 + 1;
              if (v76)
                goto LABEL_124;
              if (v77 >= v75)
              {

              }
              else
              {
                swift_bridgeObjectRetain();
                v78 = sub_249729DC4(v77, v73, v28);
                v80 = v79;
                v82 = v81;
                v84 = v83;
                swift_bridgeObjectRelease();
                v124 = MEMORY[0x24BCF6928](v78, v80, v82, v84);
                v86 = v85;
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                v28 = v86;
              }
              v30 = v123;
            }
          }
          if (v126 == (CGRect *)++a1)
            goto LABEL_82;
        }
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        swift_bridgeObjectRetain();
        v109 = sub_24972D0BC();
        swift_bridgeObjectRelease();
        v5 = v109 - 1;
        if (!__OFSUB__(v109, 1))
          goto LABEL_3;
LABEL_140:
        __break(1u);
        break;
      }
LABEL_82:
      swift_release();
      a1 = (uint64_t)v118;
      MinY = CGRectGetMinY(*v118);
      if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
        goto LABEL_128;
      if (MinY <= -9.22337204e18)
        goto LABEL_129;
      if (MinY >= 9.22337204e18)
        goto LABEL_130;
      v88 = v117;
      sub_24970E178();
      v90 = v89 - v128;
      if (__OFSUB__(v89, v128))
        goto LABEL_131;
      sub_24970E18C();
      v92 = v91;
      v93 = CGRectGetMinY(*(CGRect *)a1);
      if ((~*(_QWORD *)&v93 & 0x7FF0000000000000) == 0)
        goto LABEL_132;
      if (v93 <= -9.22337204e18)
        goto LABEL_133;
      if (v93 >= 9.22337204e18)
        goto LABEL_134;
      if (__OFSUB__(v92, (uint64_t)v93))
        goto LABEL_135;
      v94 = (uint64_t)MinY;
      v95 = (double)v128;
      v96 = (double)v94;
      v97 = (double)(v92 - (uint64_t)v93);
      v98 = &v88[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      swift_beginAccess();
      v99 = *(_QWORD *)v98;
      v100 = *((_QWORD *)v98 + 1);
      v101 = (objc_class *)type metadata accessor for BoundingBox();
      v102 = (char *)objc_allocWithZone(v101);
      v103 = (double *)&v102[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_rect];
      *v103 = v95;
      v103[1] = v96;
      v103[2] = (double)v90;
      v103[3] = v97;
      v104 = &v102[OBJC_IVAR____TtC15UIUnderstanding11BoundingBox_imageSize];
      *(_QWORD *)v104 = v99;
      *((_QWORD *)v104 + 1) = v100;
      v134.receiver = v102;
      v134.super_class = v101;
      v105 = objc_msgSendSuper2(&v134, sel_init, v110);
      v106 = *v125;
      *v125 = v105;

      v107 = (uint64_t *)(*(_QWORD *)v120 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_text);
      swift_beginAccess();
      *v107 = v124;
      v107[1] = v28;

      swift_bridgeObjectRelease();
      v5 = v112;
      a1 = (uint64_t)v113;
      v6 = v116;
      v7 = v111;
LABEL_91:
      if (v6 == v5)
        return;
      v76 = __OFADD__(v6++, 1);
      if (v76)
        goto LABEL_122;
    }
  }
  __break(1u);
LABEL_142:
  swift_release();
  __break(1u);
}

unint64_t sub_24972AACC()
{
  unint64_t result;

  result = qword_25787A758;
  if (!qword_25787A758)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ElementModelShape, &type metadata for ElementModelShape);
    atomic_store(result, (unint64_t *)&qword_25787A758);
  }
  return result;
}

unint64_t sub_24972AB14()
{
  unint64_t result;

  result = qword_25787A760;
  if (!qword_25787A760)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ModelPlatform, &type metadata for ModelPlatform);
    atomic_store(result, (unint64_t *)&qword_25787A760);
  }
  return result;
}

ValueMetadata *type metadata accessor for ElementModelShape()
{
  return &type metadata for ElementModelShape;
}

ValueMetadata *type metadata accessor for ModelPlatform()
{
  return &type metadata for ModelPlatform;
}

uint64_t method lookup function for UIUDetector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIUDetector.__allocating_init(platform:elementConfidenceThresholds:clickabilityConfidenceThresholds:elementConfig:clickabilityConfig:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of UIUDetector.detectElements(_:nmsThreshold:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of UIUDetector.improveBoundingBoxes(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

unint64_t sub_24972ABE4()
{
  unint64_t result;

  result = qword_25787A768;
  if (!qword_25787A768)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for UIType, &type metadata for UIType);
    atomic_store(result, (unint64_t *)&qword_25787A768);
  }
  return result;
}

uint64_t sub_24972AC28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24972AC6C()
{
  unint64_t result;

  result = qword_25787A790;
  if (!qword_25787A790)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for ClickabilityType, &type metadata for ClickabilityType);
    atomic_store(result, (unint64_t *)&qword_25787A790);
  }
  return result;
}

void UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(CGImage *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, char *a7@<X8>, float a8@<S0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  BOOL v21;
  size_t Width;
  BOOL v23;
  CGImage *v24;
  CGImage *v25;
  uint64_t i;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  id *v32;
  id v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  dispatch_semaphore_t v42;
  _BOOL8 v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  NSObject *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void **v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t j;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  unint64_t *v63;
  unint64_t v64;
  CGImage *v65;
  CGImage *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  int v80;
  CGImage *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  int v89;
  int v90;
  void *v91;
  void *v92;
  uint64_t v93;
  CGImage *v94;

  v88 = a6;
  LODWORD(v11) = a5;
  v89 = a4;
  LODWORD(v91) = a3;
  v90 = a2;
  v87 = a7;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_257879E50);
  v13 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIUDetectorResult();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v8 + OBJC_IVAR___UIUDetectorCompat_modelPlatform) - 1;
  v21 = *(_QWORD *)(v8 + OBJC_IVAR___UIUDetectorCompat_modelPlatform) != 1;
  v94 = a1;
  v85 = v17;
  if (v20 != 1 && v21
    || (Width = CGImageGetWidth(a1), v23 = Width == CGImageGetHeight(v94), a1 = v94, v23)
    || (v24 = (CGImage *)_s15UIUnderstanding11UIUDetectorC17createSquareImageySo10CGImageRefaSgAFFZ_0(v94)) == 0)
  {
    v24 = a1;
  }
  v25 = v24;
  sub_249723948(v24, v19, a8);
  i = (uint64_t)v19;
  if (v9)
    goto LABEL_58;
  v92 = (void *)v8;
  v81 = v25;
  v78 = v15;
  v83 = v13;
  v27 = swift_allocObject();
  v82 = v27;
  v79 = v19;
  v28 = *(_QWORD *)v19;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)v19;
  v84 = (unint64_t *)(v27 + 16);
  v80 = v11;
  if (v20 >= 2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain_n();
    i = sub_24972D0BC();
    if (i)
      goto LABEL_9;
LABEL_18:
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  i = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!i)
    goto LABEL_18;
LABEL_9:
  if (i < 1)
  {
    __break(1u);
    goto LABEL_64;
  }
  v29 = 0;
  do
  {
    if ((v28 & 0xC000000000000001) != 0)
      v30 = (char *)MEMORY[0x24BCF6CE8](v29, v28);
    else
      v30 = (char *)*(id *)(v28 + 8 * v29 + 32);
    v31 = v30;
    ++v29;
    v32 = (id *)&v30[OBJC_IVAR___UIObjectCompat_boundingBox];
    swift_beginAccess();
    v33 = *v32;
    v34 = sub_24970F7F0(v94);
    v36 = v35;
    v38 = v37;
    v40 = v39;

    v41 = &v31[OBJC_IVAR___UIObjectCompat_normalizedSquaredRect];
    swift_beginAccess();
    *(CGFloat *)v41 = v34;
    *((_QWORD *)v41 + 1) = v36;
    *((_QWORD *)v41 + 2) = v38;
    *((_QWORD *)v41 + 3) = v40;
    v41[32] = 0;

  }
  while (i != v29);
  swift_bridgeObjectRelease_n();
  a1 = v94;
  LOBYTE(v11) = v80;
LABEL_19:
  if ((v90 & 1) != 0)
  {
    v42 = dispatch_semaphore_create(0);
    v43 = (v88 & 1) == 0;
    v11 = v82;
    v44 = *(_QWORD *)(v82 + 16);
    v45 = swift_allocObject();
    v46 = v92;
    swift_unknownObjectWeakInit();
    v47 = v42;
    swift_retain_n();
    swift_retain_n();
    i = v47;
    v48 = swift_bridgeObjectRetain();
    v49 = (void *)MEMORY[0x24BCF71E0](v48);
    sub_2497056A4(v44, a1, v46, v43, (void *)i, v45, v11);
    objc_autoreleasePoolPop(v49);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();

    sub_24972CEAC();
    v50 = v83;
    LOBYTE(v11) = v80;
  }
  else
  {
    v50 = v83;
  }
  if ((v91 & 1) == 0)
  {
LABEL_53:
    if ((v89 & 1) != 0)
    {
      v63 = v84;
      swift_beginAccess();
      v64 = *v63;
      swift_bridgeObjectRetain();
      v65 = v81;
      v66 = v81;
      v67 = (void *)MEMORY[0x24BCF71E0]();
      sub_24970BB40(a1, v65, (uint64_t)v92, v64, 0.5);
      objc_autoreleasePoolPop(v67);
      swift_bridgeObjectRelease();

      if ((v11 & 1) == 0)
        goto LABEL_62;
    }
    else if ((v11 & 1) == 0)
    {
      goto LABEL_62;
    }
    swift_beginAccess();
    v68 = swift_bridgeObjectRetain();
    UIUDetector.addFocusElementResults(to:originalImage:nmsThreshold:)((Swift::OpaquePointer)v68, a1, 0.7);
    if (v69)
    {
      sub_2496D407C((uint64_t)v79);
      swift_release();
      swift_bridgeObjectRelease();
      v25 = v81;
LABEL_58:

      return;
    }
    swift_bridgeObjectRelease();
LABEL_62:
    swift_beginAccess();
    v70 = v82;
    v71 = swift_bridgeObjectRetain();
    sub_249729E60(v71);
    swift_bridgeObjectRelease();

    v72 = *(_QWORD *)(v70 + 16);
    v73 = v85;
    v74 = (uint64_t)v79;
    v75 = v78;
    v76 = v86;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v78, &v79[*(int *)(v85 + 20)], v86);
    swift_bridgeObjectRetain();
    sub_2496D407C(v74);
    v77 = v87;
    *(_QWORD *)v87 = v72;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v77[*(int *)(v73 + 20)], v75, v76);
    swift_release();
    return;
  }
  v51 = (void **)v84;
  swift_beginAccess();
  v28 = (unint64_t)*v51;
  v52 = swift_bridgeObjectRetain();
  v53 = (void *)MEMORY[0x24BCF71E0](v52);
  v93 = MEMORY[0x24BEE4AF8];
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v54 = sub_24972D0BC();
  }
  else
  {
    v54 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v91 = v53;
  if (!v54)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  if (v54 < 1)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if ((v28 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v54; ++i)
    {
      v55 = (_QWORD *)(MEMORY[0x24BCF6CE8](i, v28) + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v55 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
      {
        sub_24972D020();
        sub_24972D044();
        a1 = v94;
        sub_24972D050();
        sub_24972D02C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    for (j = 0; j != v54; ++j)
    {
      i = *(_QWORD *)(v28 + 8 * j + 32);
      v57 = (_QWORD *)(i + OBJC_IVAR___UIObjectCompat_detection);
      swift_beginAccess();
      if (*(_QWORD *)(*v57 + OBJC_IVAR____TtC15UIUnderstanding11UIDetection_label) == 4)
      {
        i = (uint64_t)(id)i;
        sub_24972D020();
        sub_24972D044();
        sub_24972D050();
        sub_24972D02C();
      }
    }
    swift_bridgeObjectRelease();
    a1 = v94;
  }
  LOBYTE(v11) = v80;
LABEL_41:
  v58 = v93;
  if ((v93 & 0x8000000000000000) == 0 && (v93 & 0x4000000000000000) == 0)
  {
    v59 = *(_QWORD *)(v93 + 16);
    swift_retain();
    if (v59)
      goto LABEL_44;
LABEL_52:
    swift_release_n();
    objc_autoreleasePoolPop(v91);
    swift_bridgeObjectRelease();
    v50 = v83;
    goto LABEL_53;
  }
  swift_retain();
  v59 = sub_24972D0BC();
  if (!v59)
    goto LABEL_52;
LABEL_44:
  if (v59 >= 1)
  {
    v60 = 0;
    do
    {
      if ((v58 & 0xC000000000000001) != 0)
        v61 = (id)MEMORY[0x24BCF6CE8](v60, v58);
      else
        v61 = *(id *)(v58 + 8 * v60 + 32);
      v62 = v61;
      ++v60;
      v93 = (uint64_t)v61;
      sub_249719DAC(&v93, (uint64_t)v92, a1);

    }
    while (v59 != v60);
    goto LABEL_52;
  }
LABEL_65:
  __break(1u);
  swift_release();
  swift_release();

  objc_autoreleasePoolPop((void *)v28);
  __break(1u);
}

uint64_t sub_24972B5F4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A018);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24972F6C0;
    v14 = a1;
    sub_24972CFB4();
    sub_24972CC48();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787A020);
    sub_24972D05C();
    *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0xE000000000000000;
    sub_24972D29C();
    swift_bridgeObjectRelease();
    sub_24972BD74(a1, 1);
  }
  else
  {
    v7 = a4 + 16;
    swift_beginAccess();
    v8 = MEMORY[0x24BCF7744](v7);
    if (v8)
    {
      v9 = (void *)v8;
      swift_beginAccess();
      v10 = swift_bridgeObjectRetain();
      _s15UIUnderstanding11UIUDetectorC26getMergedDetectionsWithOCR07elementE003ocrE027shouldOnlyUseOCRBoundingBox0j17IncludeAdditionalG0014removeDetecionf2NoG0SayAA8UIObjectCGAL_SayAA12OCRDetectionCGS3btF_0(v10, (unint64_t)a1, 0, 1, 1);
      v12 = v11;

      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_QWORD *)(a5 + 16) = v12;
      swift_bridgeObjectRelease();
    }
  }
  return sub_24972CEB8();
}

uint64_t UIUDetector.getUIObjectsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(CGImage *a1, int a2, int a3, int a4, int a5, int a6, float a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  v8 = v7;
  v16 = type metadata accessor for UIUDetectorResult();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIUDetector.getUIDetectionsInScreen(_:addOCR:addIconRecognition:addClickability:addFocusElements:nmsThreshold:useAccurateOCR:)(a1, a2, a3, a4, a5, a6, v18, a7);
  if (!v7)
  {
    v8 = *(_QWORD *)v18;
    swift_bridgeObjectRetain();
    sub_2496D407C((uint64_t)v18);
  }
  return v8;
}

uint64_t (*sub_24972B9F4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24972BB74(v6, a2, a3);
  return sub_24972BA48;
}

uint64_t (*sub_24972BA4C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24972BBE0(v6, a2, a3);
  return sub_24972BA48;
}

uint64_t (*sub_24972BAA0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24972BC70(v6, a2, a3);
  return sub_24972BA48;
}

uint64_t (*sub_24972BAF4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_24972BCDC(v6, a2, a3);
  return sub_24972BA48;
}

void sub_24972BB48(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_24972BB74(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24BCF6CE8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_24972BD84;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_24972BBE0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24BCF6CE8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s15UIUnderstanding15ScreenEmbeddingVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_24972BC4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void (*sub_24972BC70(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24BCF6CE8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for ScreenEmbedding;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_24972BCDC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24BCF6CE8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_24972BD48;
  }
  __break(1u);
  return result;
}

uint64_t sub_24972BD48()
{
  return swift_release();
}

uint64_t sub_24972BD50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_24972BD74(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

Swift::String __swiftcall IconLabel.toString()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  Swift::String result;

  v1 = v0;
  v2 = (void *)0xE300000000000000;
  v3 = 6579297;
  switch(v1)
  {
    case 0:
      break;
    case 1:
      v2 = (void *)0xE500000000000000;
      v3 = 0x656C707061;
      break;
    case 2:
      v2 = (void *)0xE400000000000000;
      v3 = 1801675106;
      break;
    case 3:
      v3 = 6775138;
      break;
    case 4:
      v2 = (void *)0xE900000000000068;
      v3 = 0x746F6F7465756C62;
      break;
    case 5:
      v2 = (void *)0xE800000000000000;
      v3 = 0x6B72616D6B6F6F62;
      break;
    case 6:
      v2 = (void *)0xE800000000000000;
      v3 = 0x7261646E656C6163;
      break;
    case 7:
      v2 = (void *)0xE600000000000000;
      v3 = 0x6172656D6163;
      break;
    case 8:
      v2 = (void *)0xE400000000000000;
      v3 = 1953653091;
      break;
    case 9:
      v2 = (void *)0xE400000000000000;
      v3 = 1952540771;
      break;
    case 10:
      v2 = (void *)0xE90000000000006BLL;
      v3 = 0x72616D6B63656863;
      break;
    case 11:
      v3 = 0x72616F6270696C63;
      v2 = (void *)0xE900000000000064;
      break;
    case 12:
      v2 = (void *)0xE500000000000000;
      v3 = 0x6B636F6C63;
      break;
    case 13:
      v2 = (void *)0xE500000000000000;
      v3 = 0x65736F6C63;
      break;
    case 14:
      v2 = (void *)0xE700000000000000;
      v3 = 0x737361706D6F63;
      break;
    case 15:
      v2 = (void *)0xE700000000000000;
      v3 = 0x65736F706D6F63;
      break;
    case 16:
      v2 = (void *)0xE400000000000000;
      v3 = 2037411683;
      break;
    case 17:
      v2 = (void *)0xE800000000000000;
      v3 = 0x79636E6572727563;
      break;
    case 18:
      v2 = (void *)0xE600000000000000;
      v3 = 0x6574656C6564;
      break;
    case 19:
      v2 = (void *)0xE400000000000000;
      v3 = 1853321060;
      break;
    case 20:
      v2 = (void *)0xE800000000000000;
      v3 = 0x64616F6C6E776F64;
      break;
    case 21:
      v2 = (void *)0xE500000000000000;
      v3 = 0x726F727265;
      break;
    case 22:
      v2 = (void *)0xE600000000000000;
      v3 = 0x646E61707865;
      break;
    case 23:
      v3 = 6650213;
      break;
    case 24:
      v2 = (void *)0xE800000000000000;
      v3 = 0x6B6F6F6265636166;
      break;
    case 25:
      v2 = (void *)0xEC00000064726177;
      v3 = 0x726F662074736166;
      break;
    case 26:
      v2 = (void *)0xE400000000000000;
      v3 = 1734437990;
      break;
    case 27:
      v2 = (void *)0xE600000000000000;
      v3 = 0x746867696C66;
      break;
    case 28:
      v2 = (void *)0xE600000000000000;
      v3 = 0x7265646C6F66;
      break;
    case 29:
      v2 = (void *)0xE400000000000000;
      v3 = 1953394534;
      break;
    case 30:
      v2 = (void *)0xE400000000000000;
      v3 = 1952868711;
      break;
    case 31:
      v2 = (void *)0xE500000000000000;
      v3 = 0x65626F6C67;
      break;
    case 32:
      v2 = (void *)0xE500000000000000;
      v3 = 0x7472616568;
      break;
    case 33:
      v2 = (void *)0xE400000000000000;
      v3 = 1886152040;
      break;
    case 34:
      v2 = (void *)0xE400000000000000;
      v3 = 1701670760;
      break;
    case 35:
      v2 = (void *)0xE400000000000000;
      v3 = 1868983913;
      break;
    case 36:
      v2 = (void *)0xE800000000000000;
      v3 = 0x6472616F6279656BLL;
      break;
    case 37:
      v2 = (void *)0xE600000000000000;
      v3 = 0x68636E75616CLL;
      break;
    case 38:
      v2 = (void *)0xE600000000000000;
      v3 = 0x73726579616CLL;
      break;
    case 39:
      v2 = (void *)0xE900000000000067;
      v3 = 0x6E696E746867696CLL;
      break;
    case 40:
      v2 = (void *)0xE400000000000000;
      v3 = 1953720684;
      break;
    case 41:
      v2 = (void *)0xE800000000000000;
      v3 = 0x6E6F697461636F6CLL;
      break;
    case 42:
      v2 = (void *)0x8000000249733D10;
      v3 = 0xD000000000000012;
      break;
    case 43:
      v2 = (void *)0xE600000000000000;
      v3 = 0x64656B636F6CLL;
      break;
    case 44:
      v2 = (void *)0xE400000000000000;
      v3 = 1818845549;
      break;
    case 45:
      v2 = (void *)0xE400000000000000;
      v3 = 1970169197;
      break;
    case 46:
      v2 = (void *)0xEA0000000000656ELL;
      v3 = 0x6F68706F7263696DLL;
      break;
    case 47:
      v2 = (void *)0xE500000000000000;
      v3 = 0x73756E696DLL;
      break;
    case 48:
      v2 = (void *)0xE400000000000000;
      v3 = 1701998445;
      break;
    case 49:
      v2 = (void *)0xE500000000000000;
      v3 = 0x636973756DLL;
      break;
    case 50:
      v2 = (void *)0xEC0000006E6F6974;
      v3 = 0x6163696669746F6ELL;
      break;
    case 51:
      v2 = (void *)0xE500000000000000;
      v3 = 0x6573756170;
      break;
    case 52:
      v2 = (void *)0xE600000000000000;
      v3 = 0x656C706F6570;
      break;
    case 53:
      v2 = (void *)0xE600000000000000;
      v3 = 0x6E6F73726570;
      break;
    case 54:
      v2 = (void *)0xE500000000000000;
      v3 = 0x656E6F6870;
      break;
    case 55:
      v2 = (void *)0xE400000000000000;
      v3 = 2036427888;
      break;
    case 56:
      v2 = (void *)0xE700000000000000;
      v3 = 0x68736572666572;
      break;
    case 57:
      v2 = (void *)0xE600000000000000;
      v3 = 0x746165706572;
      break;
    case 58:
      v2 = (void *)0xE600000000000000;
      v3 = 0x646E69776572;
      break;
    case 59:
      v2 = (void *)0xEB00000000776F72;
      v3 = 0x7261207468676972;
      break;
    case 60:
      v2 = (void *)0xEC00000064657672;
      v3 = 0x7563207468676972;
      break;
    case 61:
      v2 = (void *)0xE600000000000000;
      v3 = 0x686372616573;
      break;
    case 62:
      v2 = (void *)0xE400000000000000;
      v3 = 1684956531;
      break;
    case 63:
      v2 = (void *)0xE800000000000000;
      v3 = 0x73676E6974746573;
      break;
    case 64:
      v2 = (void *)0xE500000000000000;
      v3 = 0x6572616873;
      break;
    case 65:
      v2 = (void *)0xE700000000000000;
      v3 = 0x73726564696C73;
      break;
    case 66:
      v2 = (void *)0xE500000000000000;
      v3 = 0x656C696D73;
      break;
    case 67:
      v2 = (void *)0xE700000000000000;
      v3 = 0x72656B61657073;
      break;
    case 68:
      v2 = (void *)0xE400000000000000;
      v3 = 1918989427;
      break;
    case 69:
      v2 = (void *)0xE400000000000000;
      v3 = 1886352499;
      break;
    case 70:
      v3 = 6775156;
      break;
    case 71:
      v2 = (void *)0xEB000000006E776FLL;
      v3 = 0x642073626D756874;
      break;
    case 72:
      v2 = (void *)0xE900000000000070;
      v3 = 0x752073626D756874;
      break;
    case 73:
      v2 = (void *)0xE600000000000000;
      v3 = 0x7968706F7274;
      break;
    case 74:
      v2 = (void *)0xE700000000000000;
      v3 = 0x72657474697774;
      break;
    case 75:
      v2 = (void *)0xE700000000000000;
      v3 = 0x6E776F6E6B6E75;
      break;
    case 76:
      v2 = (void *)0xE200000000000000;
      v3 = 28789;
      break;
    case 77:
      v2 = (void *)0xEE00726564726F63;
      v3 = 0x6572206F65646976;
      break;
    default:
      v3 = sub_24972D218();
      __break(1u);
      break;
  }
  result._object = v2;
  result._countAndFlagsBits = v3;
  return result;
}

unint64_t IconLabel.init(rawValue:)(unint64_t a1)
{
  return sub_24972C54C(a1);
}

unint64_t sub_24972C474@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_24972C54C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_24972C4A4()
{
  sub_24972C5B4();
  return sub_24972CCB4();
}

uint64_t sub_24972C500()
{
  sub_24972C5B4();
  return sub_24972CCA8();
}

unint64_t sub_24972C54C(unint64_t result)
{
  if (result > 0x4D)
    return 0;
  return result;
}

unint64_t sub_24972C560()
{
  unint64_t result;

  result = qword_25787A7B0;
  if (!qword_25787A7B0)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for IconLabel, &type metadata for IconLabel);
    atomic_store(result, (unint64_t *)&qword_25787A7B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IconLabel()
{
  return &type metadata for IconLabel;
}

unint64_t sub_24972C5B4()
{
  unint64_t result;

  result = qword_25787A7B8;
  if (!qword_25787A7B8)
  {
    result = MEMORY[0x24BCF7648](&protocol conformance descriptor for IconLabel, &type metadata for IconLabel);
    atomic_store(result, (unint64_t *)&qword_25787A7B8);
  }
  return result;
}

uint64_t sub_24972C810()
{
  return MEMORY[0x24BEDFCA8]();
}

uint64_t sub_24972C81C()
{
  return MEMORY[0x24BEDFCB8]();
}

uint64_t sub_24972C828()
{
  return MEMORY[0x24BDCAF28]();
}

uint64_t sub_24972C834()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_24972C840()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_24972C84C()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_24972C858()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_24972C864()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_24972C870()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_24972C87C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_24972C888()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_24972C894()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_24972C8A0()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_24972C8AC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_24972C8B8()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_24972C8C4()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_24972C8D0()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_24972C8DC()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_24972C8E8()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_24972C8F4()
{
  return MEMORY[0x24BDCDA38]();
}

uint64_t sub_24972C900()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_24972C90C()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_24972C918()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_24972C924()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_24972C930()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_24972C93C()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_24972C948()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_24972C954()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_24972C960()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_24972C96C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_24972C978()
{
  return MEMORY[0x24BDCF760]();
}

uint64_t sub_24972C984()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_24972C990()
{
  return MEMORY[0x24BEE6278]();
}

uint64_t sub_24972C99C()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_24972C9A8()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_24972C9B4()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_24972C9C0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_24972C9CC()
{
  return MEMORY[0x24BDBFC10]();
}

uint64_t sub_24972C9D8()
{
  return MEMORY[0x24BDBFC40]();
}

uint64_t sub_24972C9E4()
{
  return MEMORY[0x24BDBFC88]();
}

uint64_t sub_24972C9F0()
{
  return MEMORY[0x24BDBFCA8]();
}

uint64_t sub_24972C9FC()
{
  return MEMORY[0x24BDBFCC0]();
}

uint64_t sub_24972CA08()
{
  return MEMORY[0x24BDBFD80]();
}

uint64_t sub_24972CA14()
{
  return MEMORY[0x24BDBFD88]();
}

uint64_t sub_24972CA20()
{
  return MEMORY[0x24BDBFD98]();
}

uint64_t sub_24972CA2C()
{
  return MEMORY[0x24BDBFDA0]();
}

uint64_t sub_24972CA38()
{
  return MEMORY[0x24BDBFDB0]();
}

uint64_t sub_24972CA44()
{
  return MEMORY[0x24BDBFDB8]();
}

uint64_t sub_24972CA50()
{
  return MEMORY[0x24BDBFDD8]();
}

uint64_t sub_24972CA5C()
{
  return MEMORY[0x24BDF3C78]();
}

uint64_t sub_24972CA68()
{
  return MEMORY[0x24BDF3C90]();
}

uint64_t sub_24972CA74()
{
  return MEMORY[0x24BDF3C98]();
}

uint64_t sub_24972CA80()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_24972CA8C()
{
  return MEMORY[0x24BDF3CD0]();
}

uint64_t sub_24972CA98()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_24972CAA4()
{
  return MEMORY[0x24BDF3D18]();
}

uint64_t sub_24972CAB0()
{
  return MEMORY[0x24BDF3D40]();
}

uint64_t sub_24972CABC()
{
  return MEMORY[0x24BDF3D50]();
}

uint64_t sub_24972CAC8()
{
  return MEMORY[0x24BDF3D58]();
}

uint64_t sub_24972CAD4()
{
  return MEMORY[0x24BEE5438]();
}

uint64_t sub_24972CAE0()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_24972CAEC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_24972CAF8()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_24972CB04()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_24972CB10()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_24972CB1C()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_24972CB28()
{
  return MEMORY[0x24BEE0260]();
}

uint64_t sub_24972CB34()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_24972CB40()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_24972CB4C()
{
  return MEMORY[0x24BEE0548]();
}

uint64_t sub_24972CB58()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_24972CB64()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_24972CB70()
{
  return MEMORY[0x24BEE07D8]();
}

uint64_t sub_24972CB7C()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_24972CB88()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_24972CB94()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_24972CBA0()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_24972CBAC()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_24972CBB8()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_24972CBC4()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_24972CBD0()
{
  return MEMORY[0x24BDCFA68]();
}

uint64_t sub_24972CBDC()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_24972CBE8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_24972CBF4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_24972CC00()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_24972CC0C()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_24972CC18()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_24972CC24()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_24972CC30()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_24972CC3C()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_24972CC48()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_24972CC54()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_24972CC60()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_24972CC6C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_24972CC78()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_24972CC84()
{
  return MEMORY[0x24BEE0E48]();
}

uint64_t sub_24972CC90()
{
  return MEMORY[0x24BEE0EB8]();
}

uint64_t sub_24972CC9C()
{
  return MEMORY[0x24BEE0FE8]();
}

uint64_t sub_24972CCA8()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_24972CCB4()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_24972CCC0()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_24972CCCC()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_24972CCD8()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_24972CCE4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_24972CCF0()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_24972CCFC()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_24972CD08()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_24972CD14()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_24972CD20()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_24972CD2C()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_24972CD38()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_24972CD44()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_24972CD50()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_24972CD5C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_24972CD68()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_24972CD74()
{
  return MEMORY[0x24BDCFD18]();
}

uint64_t sub_24972CD80()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_24972CD8C()
{
  return MEMORY[0x24BEE17F8]();
}

uint64_t sub_24972CD98()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_24972CDA4()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_24972CDB0()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_24972CDBC()
{
  return MEMORY[0x24BDBD780]();
}

uint64_t sub_24972CDC8()
{
  return MEMORY[0x24BDBFE68]();
}

uint64_t sub_24972CDD4()
{
  return MEMORY[0x24BDCFDF0]();
}

uint64_t sub_24972CDE0()
{
  return MEMORY[0x24BDCFE00]();
}

uint64_t sub_24972CDEC()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_24972CDF8()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_24972CE04()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_24972CE10()
{
  return MEMORY[0x24BEDFD78]();
}

uint64_t sub_24972CE1C()
{
  return MEMORY[0x24BEDFD80]();
}

uint64_t sub_24972CE28()
{
  return MEMORY[0x24BEDFD88]();
}

uint64_t sub_24972CE34()
{
  return MEMORY[0x24BEDFD90]();
}

uint64_t sub_24972CE40()
{
  return MEMORY[0x24BEE5650]();
}

uint64_t sub_24972CE4C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_24972CE58()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_24972CE64()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_24972CE70()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_24972CE7C()
{
  return MEMORY[0x24BEDFDB0]();
}

uint64_t sub_24972CE88()
{
  return MEMORY[0x24BEDFDB8]();
}

uint64_t sub_24972CE94()
{
  return MEMORY[0x24BEDFDC8]();
}

uint64_t sub_24972CEA0()
{
  return MEMORY[0x24BEDFDD0]();
}

uint64_t sub_24972CEAC()
{
  return MEMORY[0x24BEE5920]();
}

uint64_t sub_24972CEB8()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_24972CEC4()
{
  return MEMORY[0x24BDD01E0]();
}

uint64_t sub_24972CED0()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_24972CEDC()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_24972CEE8()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_24972CEF4()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_24972CF00()
{
  return MEMORY[0x24BDD0278]();
}

uint64_t sub_24972CF0C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_24972CF18()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_24972CF24()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_24972CF30()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_24972CF3C()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_24972CF48()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_24972CF54()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_24972CF60()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_24972CF6C()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_24972CF78()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_24972CF84()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_24972CF90()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_24972CF9C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_24972CFA8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_24972CFB4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_24972CFC0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_24972CFCC()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_24972CFD8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_24972CFE4()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_24972CFF0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_24972CFFC()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_24972D008()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_24972D014()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_24972D020()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_24972D02C()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_24972D038()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_24972D044()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_24972D050()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_24972D05C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_24972D068()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_24972D074()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_24972D080()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_24972D08C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_24972D098()
{
  return MEMORY[0x24BEE2F68]();
}

uint64_t sub_24972D0A4()
{
  return MEMORY[0x24BEE2F70]();
}

uint64_t sub_24972D0B0()
{
  return MEMORY[0x24BEE2FB0]();
}

uint64_t sub_24972D0BC()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_24972D0C8()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_24972D0D4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_24972D0E0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_24972D0EC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_24972D0F8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_24972D104()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_24972D110()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_24972D11C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_24972D128()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_24972D134()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_24972D140()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_24972D14C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_24972D158()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_24972D164()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_24972D170()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_24972D17C()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_24972D188()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_24972D194()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_24972D1A0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_24972D1AC()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_24972D1B8()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_24972D1C4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_24972D1D0()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_24972D1DC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_24972D1E8()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_24972D1F4()
{
  return MEMORY[0x24BEE3A78]();
}

uint64_t sub_24972D200()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_24972D20C()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_24972D218()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_24972D224()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_24972D230()
{
  return MEMORY[0x24BEE3DF8]();
}

uint64_t sub_24972D23C()
{
  return MEMORY[0x24BEE3E08]();
}

uint64_t sub_24972D248()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_24972D254()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_24972D260()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_24972D26C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_24972D278()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_24972D284()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_24972D290()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_24972D29C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_24972D2A8()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_24972D2B4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_24972D2C0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_24972D2CC()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_24972D2D8()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_24972D2E4()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_24972D2F0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_24972D2FC()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_24972D308()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_24972D314()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t CARenderServerSnapshot()
{
  return MEMORY[0x24BDE5560]();
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x24BDBD918](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x24BDBD920](context);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDB88]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDBB8](name);
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return (CGDataProviderRef)MEMORY[0x24BDBE180](data);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x24BDBE5F8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGImageRef CGImageCreateWithPNGDataProvider(CGDataProviderRef source, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x24BDBE618](source, decode, shouldInterpolate, *(_QWORD *)&intent);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9048](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9088](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x24BDBE630](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBE658](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x24BDBE680](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x24BDBE6E0](image);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x24BDBEFC0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF000]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF008]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF040]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF088]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

CVReturn CVPixelBufferCreateWithIOSurface(CFAllocatorRef allocator, IOSurfaceRef surface, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5258](allocator, surface, pixelBufferAttributes, pixelBufferOut);
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x24BDDD1E0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_iPadCapability()
{
  return MEMORY[0x24BED8608]();
}

uint64_t MobileGestalt_get_internalBuild()
{
  return MEMORY[0x24BED8610]();
}

CGRect VNImageRectForNormalizedRect(CGRect normalizedRect, size_t imageWidth, size_t imageHeight)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x24BDF9F50](imageWidth, imageHeight, (__n128)normalizedRect.origin, *(__n128 *)&normalizedRect.origin.y, (__n128)normalizedRect.size, *(__n128 *)&normalizedRect.size.height);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced()
{
  return MEMORY[0x24BEE4E78]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

